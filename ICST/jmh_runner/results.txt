=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1._Benchmark.benchmark_Cluster_1$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1._Benchmark.benchmark_Cluster_1

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 39039.108 ops/s
# Warmup Iteration   2: 86056.233 ops/s
# Warmup Iteration   3: 108245.545 ops/s
# Warmup Iteration   4: 128072.068 ops/s
# Warmup Iteration   5: 131076.493 ops/s
# Warmup Iteration   6: 130637.405 ops/s
# Warmup Iteration   7: 130427.161 ops/s
# Warmup Iteration   8: 130300.380 ops/s
# Warmup Iteration   9: 130258.522 ops/s
# Warmup Iteration  10: 129766.345 ops/s
# Warmup Iteration  11: 130100.225 ops/s
# Warmup Iteration  12: 130268.202 ops/s
# Warmup Iteration  13: 129716.249 ops/s
# Warmup Iteration  14: 129680.632 ops/s
# Warmup Iteration  15: 129706.451 ops/s
# Warmup Iteration  16: 129347.547 ops/s
# Warmup Iteration  17: 129238.748 ops/s
# Warmup Iteration  18: 129645.203 ops/s
# Warmup Iteration  19: 128649.533 ops/s
# Warmup Iteration  20: 129702.647 ops/s
# Warmup Iteration  21: 129887.578 ops/s
# Warmup Iteration  22: 129446.727 ops/s
# Warmup Iteration  23: 129653.466 ops/s
# Warmup Iteration  24: 129927.370 ops/s
# Warmup Iteration  25: 130445.455 ops/s
# Warmup Iteration  26: 129770.090 ops/s
# Warmup Iteration  27: 129890.302 ops/s
# Warmup Iteration  28: 128841.638 ops/s
# Warmup Iteration  29: 129697.873 ops/s
# Warmup Iteration  30: 129197.662 ops/s
Iteration   1: 129187.558 ops/s
Iteration   2: 130189.846 ops/s
Iteration   3: 129146.880 ops/s
Iteration   4: 129254.409 ops/s
Iteration   5: 128830.721 ops/s
Iteration   6: 129679.778 ops/s
Iteration   7: 129158.326 ops/s
Iteration   8: 128835.602 ops/s
Iteration   9: 129592.145 ops/s
Iteration  10: 129329.380 ops/s
Iteration  11: 130214.072 ops/s
Iteration  12: 130015.586 ops/s
Iteration  13: 129578.521 ops/s
Iteration  14: 128808.715 ops/s
Iteration  15: 130077.403 ops/s
Iteration  16: 129855.094 ops/s
Iteration  17: 129309.175 ops/s
Iteration  18: 128764.745 ops/s
Iteration  19: 130090.967 ops/s
Iteration  20: 129781.012 ops/s
Iteration  21: 128648.831 ops/s
Iteration  22: 129610.224 ops/s
Iteration  23: 129664.053 ops/s
Iteration  24: 129667.480 ops/s
Iteration  25: 129773.910 ops/s
Iteration  26: 130637.301 ops/s
Iteration  27: 129258.691 ops/s
Iteration  28: 130365.256 ops/s
Iteration  29: 129547.612 ops/s
Iteration  30: 128764.108 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1._Benchmark.benchmark_Cluster_1":
  129521.247 ±(99.9%) 352.142 ops/s [Average]
  (min, avg, max) = (128648.831, 129521.247, 130637.301), stdev = 527.069
  CI (99.9%): [129169.105, 129873.389] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score     Error  Units
Cluster_1._Benchmark.benchmark_Cluster_1  thrpt   30  129521.247 ± 352.142  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_10._Benchmark.benchmark_Cluster_10$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_10._Benchmark.benchmark_Cluster_10

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 103692.874 ops/s
# Warmup Iteration   2: 143691.466 ops/s
# Warmup Iteration   3: 158621.593 ops/s
# Warmup Iteration   4: 147767.986 ops/s
# Warmup Iteration   5: 166745.072 ops/s
# Warmup Iteration   6: 166136.518 ops/s
# Warmup Iteration   7: 165977.838 ops/s
# Warmup Iteration   8: 165986.506 ops/s
# Warmup Iteration   9: 166695.241 ops/s
# Warmup Iteration  10: 166395.187 ops/s
# Warmup Iteration  11: 166637.558 ops/s
# Warmup Iteration  12: 165657.795 ops/s
# Warmup Iteration  13: 166027.707 ops/s
# Warmup Iteration  14: 166696.188 ops/s
# Warmup Iteration  15: 164809.618 ops/s
# Warmup Iteration  16: 164373.131 ops/s
# Warmup Iteration  17: 171088.499 ops/s
# Warmup Iteration  18: 171635.494 ops/s
# Warmup Iteration  19: 170775.846 ops/s
# Warmup Iteration  20: 171084.914 ops/s
# Warmup Iteration  21: 171666.914 ops/s
# Warmup Iteration  22: 172133.093 ops/s
# Warmup Iteration  23: 171765.221 ops/s
# Warmup Iteration  24: 170899.137 ops/s
# Warmup Iteration  25: 171604.683 ops/s
# Warmup Iteration  26: 171452.940 ops/s
# Warmup Iteration  27: 171783.500 ops/s
# Warmup Iteration  28: 171710.917 ops/s
# Warmup Iteration  29: 170073.771 ops/s
# Warmup Iteration  30: 171794.609 ops/s
Iteration   1: 170753.346 ops/s
Iteration   2: 170869.864 ops/s
Iteration   3: 170924.676 ops/s
Iteration   4: 171423.594 ops/s
Iteration   5: 170894.938 ops/s
Iteration   6: 170963.628 ops/s
Iteration   7: 171169.460 ops/s
Iteration   8: 170713.855 ops/s
Iteration   9: 170485.842 ops/s
Iteration  10: 171788.484 ops/s
Iteration  11: 170944.822 ops/s
Iteration  12: 170293.263 ops/s
Iteration  13: 171637.426 ops/s
Iteration  14: 170379.333 ops/s
Iteration  15: 172506.694 ops/s
Iteration  16: 170920.160 ops/s
Iteration  17: 170881.995 ops/s
Iteration  18: 171710.072 ops/s
Iteration  19: 171326.193 ops/s
Iteration  20: 170080.577 ops/s
Iteration  21: 170971.046 ops/s
Iteration  22: 171323.711 ops/s
Iteration  23: 170843.561 ops/s
Iteration  24: 170969.604 ops/s
Iteration  25: 171018.649 ops/s
Iteration  26: 171861.350 ops/s
Iteration  27: 170434.372 ops/s
Iteration  28: 170351.742 ops/s
Iteration  29: 171282.269 ops/s
Iteration  30: 169338.911 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_10._Benchmark.benchmark_Cluster_10":
  170968.781 ±(99.9%) 406.500 ops/s [Average]
  (min, avg, max) = (169338.911, 170968.781, 172506.694), stdev = 608.431
  CI (99.9%): [170562.281, 171375.282] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_10._Benchmark.benchmark_Cluster_10  thrpt   30  170968.781 ± 406.500  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_100._Benchmark.benchmark_Cluster_100$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_100._Benchmark.benchmark_Cluster_100

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 39659.121 ops/s
# Warmup Iteration   2: 89946.676 ops/s
# Warmup Iteration   3: 107868.390 ops/s
# Warmup Iteration   4: 117868.913 ops/s
# Warmup Iteration   5: 125683.014 ops/s
# Warmup Iteration   6: 125917.749 ops/s
# Warmup Iteration   7: 125599.850 ops/s
# Warmup Iteration   8: 125508.198 ops/s
# Warmup Iteration   9: 125242.036 ops/s
# Warmup Iteration  10: 125302.912 ops/s
# Warmup Iteration  11: 125069.684 ops/s
# Warmup Iteration  12: 125182.557 ops/s
# Warmup Iteration  13: 124960.751 ops/s
# Warmup Iteration  14: 124697.085 ops/s
# Warmup Iteration  15: 125147.223 ops/s
# Warmup Iteration  16: 125386.422 ops/s
# Warmup Iteration  17: 128122.013 ops/s
# Warmup Iteration  18: 128207.953 ops/s
# Warmup Iteration  19: 127601.921 ops/s
# Warmup Iteration  20: 128445.244 ops/s
# Warmup Iteration  21: 128024.875 ops/s
# Warmup Iteration  22: 128626.174 ops/s
# Warmup Iteration  23: 128211.880 ops/s
# Warmup Iteration  24: 128488.583 ops/s
# Warmup Iteration  25: 127919.033 ops/s
# Warmup Iteration  26: 129213.471 ops/s
# Warmup Iteration  27: 127789.673 ops/s
# Warmup Iteration  28: 127679.386 ops/s
# Warmup Iteration  29: 128014.048 ops/s
# Warmup Iteration  30: 128432.622 ops/s
Iteration   1: 128491.722 ops/s
Iteration   2: 128110.174 ops/s
Iteration   3: 128069.470 ops/s
Iteration   4: 127886.753 ops/s
Iteration   5: 128088.343 ops/s
Iteration   6: 128018.508 ops/s
Iteration   7: 128992.297 ops/s
Iteration   8: 127319.933 ops/s
Iteration   9: 128191.331 ops/s
Iteration  10: 127698.367 ops/s
Iteration  11: 128203.288 ops/s
Iteration  12: 127786.733 ops/s
Iteration  13: 128797.024 ops/s
Iteration  14: 127479.677 ops/s
Iteration  15: 128313.966 ops/s
Iteration  16: 127646.092 ops/s
Iteration  17: 128918.183 ops/s
Iteration  18: 127889.234 ops/s
Iteration  19: 128128.718 ops/s
Iteration  20: 128863.290 ops/s
Iteration  21: 128201.983 ops/s
Iteration  22: 127935.744 ops/s
Iteration  23: 127932.403 ops/s
Iteration  24: 128538.402 ops/s
Iteration  25: 128067.556 ops/s
Iteration  26: 128300.088 ops/s
Iteration  27: 128187.606 ops/s
Iteration  28: 127853.152 ops/s
Iteration  29: 128194.312 ops/s
Iteration  30: 128373.703 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_100._Benchmark.benchmark_Cluster_100":
  128149.268 ±(99.9%) 268.623 ops/s [Average]
  (min, avg, max) = (127319.933, 128149.268, 128992.297), stdev = 402.063
  CI (99.9%): [127880.645, 128417.892] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_100._Benchmark.benchmark_Cluster_100  thrpt   30  128149.268 ± 268.623  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1000._Benchmark.benchmark_Cluster_1000$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1000._Benchmark.benchmark_Cluster_1000

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 62178.334 ops/s
# Warmup Iteration   2: 128603.084 ops/s
# Warmup Iteration   3: 146006.102 ops/s
# Warmup Iteration   4: 144409.307 ops/s
# Warmup Iteration   5: 165766.594 ops/s
# Warmup Iteration   6: 165360.932 ops/s
# Warmup Iteration   7: 166229.360 ops/s
# Warmup Iteration   8: 166074.584 ops/s
# Warmup Iteration   9: 165714.792 ops/s
# Warmup Iteration  10: 165949.520 ops/s
# Warmup Iteration  11: 165560.942 ops/s
# Warmup Iteration  12: 165170.856 ops/s
# Warmup Iteration  13: 164604.613 ops/s
# Warmup Iteration  14: 164168.595 ops/s
# Warmup Iteration  15: 164878.403 ops/s
# Warmup Iteration  16: 161499.155 ops/s
# Warmup Iteration  17: 178065.683 ops/s
# Warmup Iteration  18: 177152.962 ops/s
# Warmup Iteration  19: 176543.164 ops/s
# Warmup Iteration  20: 176479.010 ops/s
# Warmup Iteration  21: 176643.577 ops/s
# Warmup Iteration  22: 176237.599 ops/s
# Warmup Iteration  23: 177227.341 ops/s
# Warmup Iteration  24: 176255.149 ops/s
# Warmup Iteration  25: 176621.688 ops/s
# Warmup Iteration  26: 177195.619 ops/s
# Warmup Iteration  27: 176140.306 ops/s
# Warmup Iteration  28: 175289.924 ops/s
# Warmup Iteration  29: 176976.057 ops/s
# Warmup Iteration  30: 176709.756 ops/s
Iteration   1: 177099.563 ops/s
Iteration   2: 176482.696 ops/s
Iteration   3: 176703.390 ops/s
Iteration   4: 177460.816 ops/s
Iteration   5: 176096.994 ops/s
Iteration   6: 176889.944 ops/s
Iteration   7: 176713.166 ops/s
Iteration   8: 176524.478 ops/s
Iteration   9: 177180.885 ops/s
Iteration  10: 176009.273 ops/s
Iteration  11: 175641.292 ops/s
Iteration  12: 176904.310 ops/s
Iteration  13: 176948.641 ops/s
Iteration  14: 176455.865 ops/s
Iteration  15: 177750.881 ops/s
Iteration  16: 175783.410 ops/s
Iteration  17: 175215.104 ops/s
Iteration  18: 175810.155 ops/s
Iteration  19: 177079.016 ops/s
Iteration  20: 177388.891 ops/s
Iteration  21: 176914.572 ops/s
Iteration  22: 176757.013 ops/s
Iteration  23: 176547.238 ops/s
Iteration  24: 175653.971 ops/s
Iteration  25: 176323.192 ops/s
Iteration  26: 177234.650 ops/s
Iteration  27: 176809.036 ops/s
Iteration  28: 176578.828 ops/s
Iteration  29: 177502.971 ops/s
Iteration  30: 176637.961 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1000._Benchmark.benchmark_Cluster_1000":
  176636.607 ±(99.9%) 409.932 ops/s [Average]
  (min, avg, max) = (175215.104, 176636.607, 177750.881), stdev = 613.568
  CI (99.9%): [176226.674, 177046.539] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1000._Benchmark.benchmark_Cluster_1000  thrpt   30  176636.607 ± 409.932  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1001._Benchmark.benchmark_Cluster_1001$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1001._Benchmark.benchmark_Cluster_1001

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 47181.766 ops/s
# Warmup Iteration   2: 96850.285 ops/s
# Warmup Iteration   3: 117341.658 ops/s
# Warmup Iteration   4: 140013.003 ops/s
# Warmup Iteration   5: 143180.686 ops/s
# Warmup Iteration   6: 142454.846 ops/s
# Warmup Iteration   7: 143024.328 ops/s
# Warmup Iteration   8: 146101.519 ops/s
# Warmup Iteration   9: 143449.234 ops/s
# Warmup Iteration  10: 145652.811 ops/s
# Warmup Iteration  11: 143109.799 ops/s
# Warmup Iteration  12: 140205.946 ops/s
# Warmup Iteration  13: 142877.538 ops/s
# Warmup Iteration  14: 144406.666 ops/s
# Warmup Iteration  15: 145856.901 ops/s
# Warmup Iteration  16: 142751.768 ops/s
# Warmup Iteration  17: 139555.726 ops/s
# Warmup Iteration  18: 145180.925 ops/s
# Warmup Iteration  19: 150155.525 ops/s
# Warmup Iteration  20: 149034.833 ops/s
# Warmup Iteration  21: 148984.140 ops/s
# Warmup Iteration  22: 146699.110 ops/s
# Warmup Iteration  23: 136317.942 ops/s
# Warmup Iteration  24: 147002.141 ops/s
# Warmup Iteration  25: 144236.848 ops/s
# Warmup Iteration  26: 146347.929 ops/s
# Warmup Iteration  27: 148527.665 ops/s
# Warmup Iteration  28: 147355.297 ops/s
# Warmup Iteration  29: 144443.047 ops/s
# Warmup Iteration  30: 143645.751 ops/s
Iteration   1: 147788.418 ops/s
Iteration   2: 147604.328 ops/s
Iteration   3: 148102.048 ops/s
Iteration   4: 145717.294 ops/s
Iteration   5: 148030.459 ops/s
Iteration   6: 141546.118 ops/s
Iteration   7: 146976.257 ops/s
Iteration   8: 139557.005 ops/s
Iteration   9: 149230.206 ops/s
Iteration  10: 143662.204 ops/s
Iteration  11: 146613.028 ops/s
Iteration  12: 149067.984 ops/s
Iteration  13: 148717.796 ops/s
Iteration  14: 142385.074 ops/s
Iteration  15: 149196.935 ops/s
Iteration  16: 144751.481 ops/s
Iteration  17: 147365.659 ops/s
Iteration  18: 146299.518 ops/s
Iteration  19: 146158.437 ops/s
Iteration  20: 150467.882 ops/s
Iteration  21: 147971.512 ops/s
Iteration  22: 147482.049 ops/s
Iteration  23: 143123.301 ops/s
Iteration  24: 144025.564 ops/s
Iteration  25: 147467.511 ops/s
Iteration  26: 149209.628 ops/s
Iteration  27: 148328.429 ops/s
Iteration  28: 140164.542 ops/s
Iteration  29: 150243.913 ops/s
Iteration  30: 145710.822 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1001._Benchmark.benchmark_Cluster_1001":
  146432.180 ±(99.9%) 1918.954 ops/s [Average]
  (min, avg, max) = (139557.005, 146432.180, 150467.882), stdev = 2872.200
  CI (99.9%): [144513.226, 148351.134] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score      Error  Units
Cluster_1001._Benchmark.benchmark_Cluster_1001  thrpt   30  146432.180 ± 1918.954  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1002._Benchmark.benchmark_Cluster_1002$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1002._Benchmark.benchmark_Cluster_1002

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 34958.815 ops/s
# Warmup Iteration   2: 63502.432 ops/s
# Warmup Iteration   3: 112558.316 ops/s
# Warmup Iteration   4: 165691.828 ops/s
# Warmup Iteration   5: 170507.528 ops/s
# Warmup Iteration   6: 172761.044 ops/s
# Warmup Iteration   7: 170719.834 ops/s
# Warmup Iteration   8: 171537.610 ops/s
# Warmup Iteration   9: 173517.710 ops/s
# Warmup Iteration  10: 168853.414 ops/s
# Warmup Iteration  11: 169684.124 ops/s
# Warmup Iteration  12: 171247.394 ops/s
# Warmup Iteration  13: 170819.134 ops/s
# Warmup Iteration  14: 167868.278 ops/s
# Warmup Iteration  15: 173192.472 ops/s
# Warmup Iteration  16: 171686.321 ops/s
# Warmup Iteration  17: 165352.849 ops/s
# Warmup Iteration  18: 170438.086 ops/s
# Warmup Iteration  19: 168068.710 ops/s
# Warmup Iteration  20: 172555.866 ops/s
# Warmup Iteration  21: 169836.654 ops/s
# Warmup Iteration  22: 170702.483 ops/s
# Warmup Iteration  23: 170472.568 ops/s
# Warmup Iteration  24: 170206.816 ops/s
# Warmup Iteration  25: 168289.057 ops/s
# Warmup Iteration  26: 171269.933 ops/s
# Warmup Iteration  27: 169888.528 ops/s
# Warmup Iteration  28: 170456.177 ops/s
# Warmup Iteration  29: 168692.263 ops/s
# Warmup Iteration  30: 167096.712 ops/s
Iteration   1: 171819.178 ops/s
Iteration   2: 169710.125 ops/s
Iteration   3: 170009.353 ops/s
Iteration   4: 171584.158 ops/s
Iteration   5: 170801.440 ops/s
Iteration   6: 171152.251 ops/s
Iteration   7: 168456.805 ops/s
Iteration   8: 168943.501 ops/s
Iteration   9: 168954.731 ops/s
Iteration  10: 170304.021 ops/s
Iteration  11: 171505.816 ops/s
Iteration  12: 164204.114 ops/s
Iteration  13: 171026.668 ops/s
Iteration  14: 159942.216 ops/s
Iteration  15: 164210.024 ops/s
Iteration  16: 170483.525 ops/s
Iteration  17: 167661.918 ops/s
Iteration  18: 167460.809 ops/s
Iteration  19: 165556.293 ops/s
Iteration  20: 168115.265 ops/s
Iteration  21: 168109.862 ops/s
Iteration  22: 171351.630 ops/s
Iteration  23: 166090.826 ops/s
Iteration  24: 171678.548 ops/s
Iteration  25: 170645.374 ops/s
Iteration  26: 171491.181 ops/s
Iteration  27: 168995.540 ops/s
Iteration  28: 163301.173 ops/s
Iteration  29: 169720.463 ops/s
Iteration  30: 170085.065 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1002._Benchmark.benchmark_Cluster_1002":
  168779.063 ±(99.9%) 1949.786 ops/s [Average]
  (min, avg, max) = (159942.216, 168779.063, 171819.178), stdev = 2918.348
  CI (99.9%): [166829.277, 170728.848] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score      Error  Units
Cluster_1002._Benchmark.benchmark_Cluster_1002  thrpt   30  168779.063 ± 1949.786  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1003._Benchmark.benchmark_Cluster_1003$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1003._Benchmark.benchmark_Cluster_1003

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 85112.425 ops/s
# Warmup Iteration   2: 131975.738 ops/s
# Warmup Iteration   3: 135227.371 ops/s
# Warmup Iteration   4: 153629.791 ops/s
# Warmup Iteration   5: 153797.057 ops/s
# Warmup Iteration   6: 153961.661 ops/s
# Warmup Iteration   7: 154810.037 ops/s
# Warmup Iteration   8: 153879.460 ops/s
# Warmup Iteration   9: 153056.898 ops/s
# Warmup Iteration  10: 153844.368 ops/s
# Warmup Iteration  11: 154523.827 ops/s
# Warmup Iteration  12: 153374.441 ops/s
# Warmup Iteration  13: 152820.522 ops/s
# Warmup Iteration  14: 153421.377 ops/s
# Warmup Iteration  15: 153695.180 ops/s
# Warmup Iteration  16: 153698.824 ops/s
# Warmup Iteration  17: 157823.564 ops/s
# Warmup Iteration  18: 157822.540 ops/s
# Warmup Iteration  19: 157023.549 ops/s
# Warmup Iteration  20: 157439.451 ops/s
# Warmup Iteration  21: 158264.335 ops/s
# Warmup Iteration  22: 158180.493 ops/s
# Warmup Iteration  23: 156779.793 ops/s
# Warmup Iteration  24: 158173.381 ops/s
# Warmup Iteration  25: 158014.993 ops/s
# Warmup Iteration  26: 157727.136 ops/s
# Warmup Iteration  27: 157587.788 ops/s
# Warmup Iteration  28: 156626.484 ops/s
# Warmup Iteration  29: 157404.625 ops/s
# Warmup Iteration  30: 157974.839 ops/s
Iteration   1: 156877.727 ops/s
Iteration   2: 157218.623 ops/s
Iteration   3: 157254.631 ops/s
Iteration   4: 156535.611 ops/s
Iteration   5: 157052.236 ops/s
Iteration   6: 158159.715 ops/s
Iteration   7: 157718.988 ops/s
Iteration   8: 157500.345 ops/s
Iteration   9: 157493.393 ops/s
Iteration  10: 157789.972 ops/s
Iteration  11: 157815.991 ops/s
Iteration  12: 156992.196 ops/s
Iteration  13: 156836.570 ops/s
Iteration  14: 157966.437 ops/s
Iteration  15: 157227.603 ops/s
Iteration  16: 157166.481 ops/s
Iteration  17: 157570.245 ops/s
Iteration  18: 158213.622 ops/s
Iteration  19: 158714.614 ops/s
Iteration  20: 157646.165 ops/s
Iteration  21: 157690.237 ops/s
Iteration  22: 157567.582 ops/s
Iteration  23: 157738.390 ops/s
Iteration  24: 158292.263 ops/s
Iteration  25: 158248.881 ops/s
Iteration  26: 157054.191 ops/s
Iteration  27: 157577.089 ops/s
Iteration  28: 157314.554 ops/s
Iteration  29: 158035.444 ops/s
Iteration  30: 157740.566 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1003._Benchmark.benchmark_Cluster_1003":
  157567.012 ±(99.9%) 332.235 ops/s [Average]
  (min, avg, max) = (156535.611, 157567.012, 158714.614), stdev = 497.274
  CI (99.9%): [157234.777, 157899.247] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1003._Benchmark.benchmark_Cluster_1003  thrpt   30  157567.012 ± 332.235  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1004._Benchmark.benchmark_Cluster_1004$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1004._Benchmark.benchmark_Cluster_1004

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 51411.280 ops/s
# Warmup Iteration   2: 122841.551 ops/s
# Warmup Iteration   3: 135539.851 ops/s
# Warmup Iteration   4: 154572.946 ops/s
# Warmup Iteration   5: 155911.490 ops/s
# Warmup Iteration   6: 156550.529 ops/s
# Warmup Iteration   7: 156070.773 ops/s
# Warmup Iteration   8: 156259.510 ops/s
# Warmup Iteration   9: 155186.612 ops/s
# Warmup Iteration  10: 154296.313 ops/s
# Warmup Iteration  11: 155508.033 ops/s
# Warmup Iteration  12: 156647.046 ops/s
# Warmup Iteration  13: 155084.337 ops/s
# Warmup Iteration  14: 154370.363 ops/s
# Warmup Iteration  15: 155652.944 ops/s
# Warmup Iteration  16: 157110.052 ops/s
# Warmup Iteration  17: 158661.488 ops/s
# Warmup Iteration  18: 158394.473 ops/s
# Warmup Iteration  19: 158372.378 ops/s
# Warmup Iteration  20: 158354.858 ops/s
# Warmup Iteration  21: 158343.578 ops/s
# Warmup Iteration  22: 158780.185 ops/s
# Warmup Iteration  23: 158346.313 ops/s
# Warmup Iteration  24: 158561.760 ops/s
# Warmup Iteration  25: 158359.665 ops/s
# Warmup Iteration  26: 159093.352 ops/s
# Warmup Iteration  27: 157896.226 ops/s
# Warmup Iteration  28: 158424.417 ops/s
# Warmup Iteration  29: 158154.811 ops/s
# Warmup Iteration  30: 158096.641 ops/s
Iteration   1: 158567.116 ops/s
Iteration   2: 159773.101 ops/s
Iteration   3: 158669.805 ops/s
Iteration   4: 158515.205 ops/s
Iteration   5: 158409.829 ops/s
Iteration   6: 158289.021 ops/s
Iteration   7: 158607.723 ops/s
Iteration   8: 158584.221 ops/s
Iteration   9: 158228.114 ops/s
Iteration  10: 158963.753 ops/s
Iteration  11: 158627.255 ops/s
Iteration  12: 159183.648 ops/s
Iteration  13: 153583.001 ops/s
Iteration  14: 159583.051 ops/s
Iteration  15: 158832.103 ops/s
Iteration  16: 158626.847 ops/s
Iteration  17: 158755.578 ops/s
Iteration  18: 158770.134 ops/s
Iteration  19: 158993.824 ops/s
Iteration  20: 158275.082 ops/s
Iteration  21: 157971.216 ops/s
Iteration  22: 158334.364 ops/s
Iteration  23: 158179.391 ops/s
Iteration  24: 158532.766 ops/s
Iteration  25: 159388.495 ops/s
Iteration  26: 158562.959 ops/s
Iteration  27: 157874.148 ops/s
Iteration  28: 158408.111 ops/s
Iteration  29: 159373.703 ops/s
Iteration  30: 158471.395 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1004._Benchmark.benchmark_Cluster_1004":
  158497.832 ±(99.9%) 688.264 ops/s [Average]
  (min, avg, max) = (153583.001, 158497.832, 159773.101), stdev = 1030.161
  CI (99.9%): [157809.568, 159186.096] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1004._Benchmark.benchmark_Cluster_1004  thrpt   30  158497.832 ± 688.264  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1005._Benchmark.benchmark_Cluster_1005$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1005._Benchmark.benchmark_Cluster_1005

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 66979.274 ops/s
# Warmup Iteration   2: 120097.243 ops/s
# Warmup Iteration   3: 134526.501 ops/s
# Warmup Iteration   4: 139023.913 ops/s
# Warmup Iteration   5: 139430.595 ops/s
# Warmup Iteration   6: 139457.851 ops/s
# Warmup Iteration   7: 138973.440 ops/s
# Warmup Iteration   8: 139263.815 ops/s
# Warmup Iteration   9: 138404.668 ops/s
# Warmup Iteration  10: 138589.995 ops/s
# Warmup Iteration  11: 137189.009 ops/s
# Warmup Iteration  12: 138013.544 ops/s
# Warmup Iteration  13: 137859.963 ops/s
# Warmup Iteration  14: 138406.143 ops/s
# Warmup Iteration  15: 138627.367 ops/s
# Warmup Iteration  16: 138126.620 ops/s
# Warmup Iteration  17: 141955.359 ops/s
# Warmup Iteration  18: 142758.529 ops/s
# Warmup Iteration  19: 142285.539 ops/s
# Warmup Iteration  20: 142358.851 ops/s
# Warmup Iteration  21: 142198.580 ops/s
# Warmup Iteration  22: 143114.902 ops/s
# Warmup Iteration  23: 143163.981 ops/s
# Warmup Iteration  24: 141891.421 ops/s
# Warmup Iteration  25: 142901.382 ops/s
# Warmup Iteration  26: 142417.082 ops/s
# Warmup Iteration  27: 142247.960 ops/s
# Warmup Iteration  28: 142789.394 ops/s
# Warmup Iteration  29: 142537.994 ops/s
# Warmup Iteration  30: 141798.584 ops/s
Iteration   1: 142530.540 ops/s
Iteration   2: 142360.695 ops/s
Iteration   3: 142231.471 ops/s
Iteration   4: 143025.791 ops/s
Iteration   5: 142875.282 ops/s
Iteration   6: 142529.122 ops/s
Iteration   7: 142833.977 ops/s
Iteration   8: 142555.342 ops/s
Iteration   9: 142262.291 ops/s
Iteration  10: 142213.473 ops/s
Iteration  11: 142287.170 ops/s
Iteration  12: 142436.419 ops/s
Iteration  13: 142307.435 ops/s
Iteration  14: 142389.944 ops/s
Iteration  15: 142690.482 ops/s
Iteration  16: 141801.445 ops/s
Iteration  17: 142019.991 ops/s
Iteration  18: 142095.372 ops/s
Iteration  19: 142354.791 ops/s
Iteration  20: 142068.589 ops/s
Iteration  21: 142969.798 ops/s
Iteration  22: 142162.713 ops/s
Iteration  23: 142627.053 ops/s
Iteration  24: 142052.274 ops/s
Iteration  25: 143121.514 ops/s
Iteration  26: 142573.605 ops/s
Iteration  27: 142562.872 ops/s
Iteration  28: 142735.653 ops/s
Iteration  29: 142417.215 ops/s
Iteration  30: 142198.062 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1005._Benchmark.benchmark_Cluster_1005":
  142443.013 ±(99.9%) 214.557 ops/s [Average]
  (min, avg, max) = (141801.445, 142443.013, 143121.514), stdev = 321.139
  CI (99.9%): [142228.456, 142657.570] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1005._Benchmark.benchmark_Cluster_1005  thrpt   30  142443.013 ± 214.557  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1006._Benchmark.benchmark_Cluster_1006$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1006._Benchmark.benchmark_Cluster_1006

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 75240.883 ops/s
# Warmup Iteration   2: 119495.538 ops/s
# Warmup Iteration   3: 137375.502 ops/s
# Warmup Iteration   4: 137914.970 ops/s
# Warmup Iteration   5: 138945.293 ops/s
# Warmup Iteration   6: 139127.930 ops/s
# Warmup Iteration   7: 138214.786 ops/s
# Warmup Iteration   8: 137702.399 ops/s
# Warmup Iteration   9: 137923.729 ops/s
# Warmup Iteration  10: 137566.548 ops/s
# Warmup Iteration  11: 138794.126 ops/s
# Warmup Iteration  12: 138309.392 ops/s
# Warmup Iteration  13: 137960.698 ops/s
# Warmup Iteration  14: 138077.609 ops/s
# Warmup Iteration  15: 137722.457 ops/s
# Warmup Iteration  16: 137619.029 ops/s
# Warmup Iteration  17: 143902.546 ops/s
# Warmup Iteration  18: 143733.267 ops/s
# Warmup Iteration  19: 142371.666 ops/s
# Warmup Iteration  20: 142473.074 ops/s
# Warmup Iteration  21: 143583.823 ops/s
# Warmup Iteration  22: 144252.526 ops/s
# Warmup Iteration  23: 143230.582 ops/s
# Warmup Iteration  24: 144355.945 ops/s
# Warmup Iteration  25: 143605.828 ops/s
# Warmup Iteration  26: 143548.168 ops/s
# Warmup Iteration  27: 143861.679 ops/s
# Warmup Iteration  28: 143850.158 ops/s
# Warmup Iteration  29: 144509.578 ops/s
# Warmup Iteration  30: 143190.191 ops/s
Iteration   1: 143293.454 ops/s
Iteration   2: 143827.688 ops/s
Iteration   3: 143123.768 ops/s
Iteration   4: 143052.292 ops/s
Iteration   5: 143682.181 ops/s
Iteration   6: 144228.029 ops/s
Iteration   7: 143919.365 ops/s
Iteration   8: 143432.963 ops/s
Iteration   9: 143823.550 ops/s
Iteration  10: 143710.153 ops/s
Iteration  11: 142430.592 ops/s
Iteration  12: 144228.684 ops/s
Iteration  13: 144342.355 ops/s
Iteration  14: 143837.762 ops/s
Iteration  15: 143629.298 ops/s
Iteration  16: 144517.666 ops/s
Iteration  17: 143840.130 ops/s
Iteration  18: 143781.172 ops/s
Iteration  19: 143832.443 ops/s
Iteration  20: 144183.208 ops/s
Iteration  21: 144130.102 ops/s
Iteration  22: 143934.810 ops/s
Iteration  23: 143402.849 ops/s
Iteration  24: 144834.082 ops/s
Iteration  25: 143852.191 ops/s
Iteration  26: 143580.419 ops/s
Iteration  27: 143747.221 ops/s
Iteration  28: 143127.581 ops/s
Iteration  29: 144171.587 ops/s
Iteration  30: 143964.861 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1006._Benchmark.benchmark_Cluster_1006":
  143782.082 ±(99.9%) 320.962 ops/s [Average]
  (min, avg, max) = (142430.592, 143782.082, 144834.082), stdev = 480.401
  CI (99.9%): [143461.120, 144103.044] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1006._Benchmark.benchmark_Cluster_1006  thrpt   30  143782.082 ± 320.962  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1007._Benchmark.benchmark_Cluster_1007$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1007._Benchmark.benchmark_Cluster_1007

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 108644.507 ops/s
# Warmup Iteration   2: 156388.574 ops/s
# Warmup Iteration   3: 182619.417 ops/s
# Warmup Iteration   4: 182184.684 ops/s
# Warmup Iteration   5: 184675.093 ops/s
# Warmup Iteration   6: 185196.512 ops/s
# Warmup Iteration   7: 185120.374 ops/s
# Warmup Iteration   8: 183172.358 ops/s
# Warmup Iteration   9: 184212.937 ops/s
# Warmup Iteration  10: 183303.708 ops/s
# Warmup Iteration  11: 183458.602 ops/s
# Warmup Iteration  12: 183697.611 ops/s
# Warmup Iteration  13: 184507.409 ops/s
# Warmup Iteration  14: 183555.868 ops/s
# Warmup Iteration  15: 184644.846 ops/s
# Warmup Iteration  16: 183177.666 ops/s
# Warmup Iteration  17: 189139.956 ops/s
# Warmup Iteration  18: 188062.607 ops/s
# Warmup Iteration  19: 188821.592 ops/s
# Warmup Iteration  20: 189434.408 ops/s
# Warmup Iteration  21: 188245.480 ops/s
# Warmup Iteration  22: 188256.338 ops/s
# Warmup Iteration  23: 190891.113 ops/s
# Warmup Iteration  24: 188916.795 ops/s
# Warmup Iteration  25: 188684.012 ops/s
# Warmup Iteration  26: 188504.862 ops/s
# Warmup Iteration  27: 188311.271 ops/s
# Warmup Iteration  28: 189513.668 ops/s
# Warmup Iteration  29: 188621.943 ops/s
# Warmup Iteration  30: 189531.307 ops/s
Iteration   1: 189176.039 ops/s
Iteration   2: 189424.518 ops/s
Iteration   3: 188708.877 ops/s
Iteration   4: 188669.735 ops/s
Iteration   5: 189055.299 ops/s
Iteration   6: 189951.776 ops/s
Iteration   7: 189079.861 ops/s
Iteration   8: 189320.932 ops/s
Iteration   9: 189771.013 ops/s
Iteration  10: 188978.948 ops/s
Iteration  11: 188804.504 ops/s
Iteration  12: 188863.061 ops/s
Iteration  13: 188361.646 ops/s
Iteration  14: 189000.704 ops/s
Iteration  15: 189573.878 ops/s
Iteration  16: 189034.615 ops/s
Iteration  17: 188607.679 ops/s
Iteration  18: 188251.102 ops/s
Iteration  19: 189214.422 ops/s
Iteration  20: 188647.965 ops/s
Iteration  21: 189213.409 ops/s
Iteration  22: 189030.077 ops/s
Iteration  23: 188209.326 ops/s
Iteration  24: 188713.453 ops/s
Iteration  25: 189141.769 ops/s
Iteration  26: 188284.128 ops/s
Iteration  27: 188861.626 ops/s
Iteration  28: 189145.170 ops/s
Iteration  29: 188871.657 ops/s
Iteration  30: 188335.324 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1007._Benchmark.benchmark_Cluster_1007":
  188943.417 ±(99.9%) 287.946 ops/s [Average]
  (min, avg, max) = (188209.326, 188943.417, 189951.776), stdev = 430.983
  CI (99.9%): [188655.472, 189231.363] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1007._Benchmark.benchmark_Cluster_1007  thrpt   30  188943.417 ± 287.946  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1008._Benchmark.benchmark_Cluster_1008$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1008._Benchmark.benchmark_Cluster_1008

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 97086.669 ops/s
# Warmup Iteration   2: 157489.051 ops/s
# Warmup Iteration   3: 175727.680 ops/s
# Warmup Iteration   4: 163894.062 ops/s
# Warmup Iteration   5: 180209.869 ops/s
# Warmup Iteration   6: 179518.054 ops/s
# Warmup Iteration   7: 179583.181 ops/s
# Warmup Iteration   8: 178971.717 ops/s
# Warmup Iteration   9: 179894.617 ops/s
# Warmup Iteration  10: 179202.312 ops/s
# Warmup Iteration  11: 179327.341 ops/s
# Warmup Iteration  12: 179360.020 ops/s
# Warmup Iteration  13: 179830.824 ops/s
# Warmup Iteration  14: 179615.173 ops/s
# Warmup Iteration  15: 178935.988 ops/s
# Warmup Iteration  16: 177754.256 ops/s
# Warmup Iteration  17: 183940.145 ops/s
# Warmup Iteration  18: 184017.072 ops/s
# Warmup Iteration  19: 182643.579 ops/s
# Warmup Iteration  20: 183939.494 ops/s
# Warmup Iteration  21: 184288.159 ops/s
# Warmup Iteration  22: 183915.633 ops/s
# Warmup Iteration  23: 184079.924 ops/s
# Warmup Iteration  24: 183601.572 ops/s
# Warmup Iteration  25: 185198.095 ops/s
# Warmup Iteration  26: 183173.731 ops/s
# Warmup Iteration  27: 184306.984 ops/s
# Warmup Iteration  28: 184177.277 ops/s
# Warmup Iteration  29: 183355.789 ops/s
# Warmup Iteration  30: 183900.283 ops/s
Iteration   1: 183445.750 ops/s
Iteration   2: 184079.479 ops/s
Iteration   3: 183789.077 ops/s
Iteration   4: 184197.259 ops/s
Iteration   5: 184919.927 ops/s
Iteration   6: 183001.886 ops/s
Iteration   7: 183521.625 ops/s
Iteration   8: 184618.950 ops/s
Iteration   9: 183698.864 ops/s
Iteration  10: 185450.682 ops/s
Iteration  11: 184960.346 ops/s
Iteration  12: 183262.499 ops/s
Iteration  13: 184039.001 ops/s
Iteration  14: 184182.258 ops/s
Iteration  15: 184846.901 ops/s
Iteration  16: 184596.763 ops/s
Iteration  17: 183449.911 ops/s
Iteration  18: 184490.844 ops/s
Iteration  19: 183068.519 ops/s
Iteration  20: 184113.542 ops/s
Iteration  21: 184336.580 ops/s
Iteration  22: 184775.762 ops/s
Iteration  23: 183362.815 ops/s
Iteration  24: 184192.268 ops/s
Iteration  25: 184061.480 ops/s
Iteration  26: 184934.266 ops/s
Iteration  27: 183802.984 ops/s
Iteration  28: 183106.860 ops/s
Iteration  29: 184020.605 ops/s
Iteration  30: 184009.821 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1008._Benchmark.benchmark_Cluster_1008":
  184077.917 ±(99.9%) 424.994 ops/s [Average]
  (min, avg, max) = (183001.886, 184077.917, 185450.682), stdev = 636.111
  CI (99.9%): [183652.924, 184502.911] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1008._Benchmark.benchmark_Cluster_1008  thrpt   30  184077.917 ± 424.994  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1009._Benchmark.benchmark_Cluster_1009$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1009._Benchmark.benchmark_Cluster_1009

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 66726.610 ops/s
# Warmup Iteration   2: 142228.365 ops/s
# Warmup Iteration   3: 141418.756 ops/s
# Warmup Iteration   4: 157211.565 ops/s
# Warmup Iteration   5: 160834.402 ops/s
# Warmup Iteration   6: 161055.945 ops/s
# Warmup Iteration   7: 159995.442 ops/s
# Warmup Iteration   8: 159250.550 ops/s
# Warmup Iteration   9: 159638.282 ops/s
# Warmup Iteration  10: 159045.988 ops/s
# Warmup Iteration  11: 159187.255 ops/s
# Warmup Iteration  12: 160374.071 ops/s
# Warmup Iteration  13: 159882.710 ops/s
# Warmup Iteration  14: 159693.080 ops/s
# Warmup Iteration  15: 159660.752 ops/s
# Warmup Iteration  16: 158493.293 ops/s
# Warmup Iteration  17: 162859.223 ops/s
# Warmup Iteration  18: 162760.439 ops/s
# Warmup Iteration  19: 162096.318 ops/s
# Warmup Iteration  20: 162361.351 ops/s
# Warmup Iteration  21: 162589.294 ops/s
# Warmup Iteration  22: 163075.156 ops/s
# Warmup Iteration  23: 162339.459 ops/s
# Warmup Iteration  24: 163224.670 ops/s
# Warmup Iteration  25: 163223.644 ops/s
# Warmup Iteration  26: 162557.583 ops/s
# Warmup Iteration  27: 162783.975 ops/s
# Warmup Iteration  28: 162049.021 ops/s
# Warmup Iteration  29: 161339.516 ops/s
# Warmup Iteration  30: 162095.437 ops/s
Iteration   1: 162974.127 ops/s
Iteration   2: 162288.388 ops/s
Iteration   3: 162798.116 ops/s
Iteration   4: 162947.138 ops/s
Iteration   5: 162758.719 ops/s
Iteration   6: 162370.259 ops/s
Iteration   7: 162567.365 ops/s
Iteration   8: 163015.323 ops/s
Iteration   9: 163440.177 ops/s
Iteration  10: 163698.693 ops/s
Iteration  11: 162790.774 ops/s
Iteration  12: 162249.714 ops/s
Iteration  13: 162504.288 ops/s
Iteration  14: 163022.768 ops/s
Iteration  15: 162907.183 ops/s
Iteration  16: 162210.876 ops/s
Iteration  17: 163290.870 ops/s
Iteration  18: 162522.442 ops/s
Iteration  19: 163071.471 ops/s
Iteration  20: 162374.622 ops/s
Iteration  21: 162970.359 ops/s
Iteration  22: 162305.512 ops/s
Iteration  23: 163041.427 ops/s
Iteration  24: 162786.815 ops/s
Iteration  25: 162872.007 ops/s
Iteration  26: 162833.658 ops/s
Iteration  27: 162432.414 ops/s
Iteration  28: 161553.539 ops/s
Iteration  29: 161890.115 ops/s
Iteration  30: 163197.098 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1009._Benchmark.benchmark_Cluster_1009":
  162722.875 ±(99.9%) 304.491 ops/s [Average]
  (min, avg, max) = (161553.539, 162722.875, 163698.693), stdev = 455.747
  CI (99.9%): [162418.385, 163027.366] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1009._Benchmark.benchmark_Cluster_1009  thrpt   30  162722.875 ± 304.491  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_101._Benchmark.benchmark_Cluster_101$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_101._Benchmark.benchmark_Cluster_101

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 148115.509 ops/s
# Warmup Iteration   2: 285670.226 ops/s
# Warmup Iteration   3: 297350.276 ops/s
# Warmup Iteration   4: 272176.144 ops/s
# Warmup Iteration   5: 317003.551 ops/s
# Warmup Iteration   6: 317751.193 ops/s
# Warmup Iteration   7: 316906.080 ops/s
# Warmup Iteration   8: 316726.134 ops/s
# Warmup Iteration   9: 317837.308 ops/s
# Warmup Iteration  10: 317519.861 ops/s
# Warmup Iteration  11: 316713.126 ops/s
# Warmup Iteration  12: 316167.874 ops/s
# Warmup Iteration  13: 315310.326 ops/s
# Warmup Iteration  14: 315180.139 ops/s
# Warmup Iteration  15: 315574.455 ops/s
# Warmup Iteration  16: 316755.627 ops/s
# Warmup Iteration  17: 326501.706 ops/s
# Warmup Iteration  18: 328240.334 ops/s
# Warmup Iteration  19: 328430.713 ops/s
# Warmup Iteration  20: 330333.758 ops/s
# Warmup Iteration  21: 327713.097 ops/s
# Warmup Iteration  22: 328731.050 ops/s
# Warmup Iteration  23: 328388.107 ops/s
# Warmup Iteration  24: 328154.337 ops/s
# Warmup Iteration  25: 327528.313 ops/s
# Warmup Iteration  26: 328673.238 ops/s
# Warmup Iteration  27: 322222.701 ops/s
# Warmup Iteration  28: 325328.093 ops/s
# Warmup Iteration  29: 327412.637 ops/s
# Warmup Iteration  30: 325296.760 ops/s
Iteration   1: 325348.695 ops/s
Iteration   2: 325650.369 ops/s
Iteration   3: 326920.547 ops/s
Iteration   4: 327669.142 ops/s
Iteration   5: 325459.690 ops/s
Iteration   6: 326257.786 ops/s
Iteration   7: 327992.628 ops/s
Iteration   8: 327765.601 ops/s
Iteration   9: 329330.765 ops/s
Iteration  10: 328856.325 ops/s
Iteration  11: 329334.301 ops/s
Iteration  12: 329139.620 ops/s
Iteration  13: 329528.582 ops/s
Iteration  14: 330547.601 ops/s
Iteration  15: 328250.700 ops/s
Iteration  16: 328436.030 ops/s
Iteration  17: 328035.018 ops/s
Iteration  18: 328133.155 ops/s
Iteration  19: 328828.013 ops/s
Iteration  20: 326769.303 ops/s
Iteration  21: 328829.934 ops/s
Iteration  22: 330096.886 ops/s
Iteration  23: 324282.448 ops/s
Iteration  24: 328225.128 ops/s
Iteration  25: 329331.778 ops/s
Iteration  26: 328070.628 ops/s
Iteration  27: 330355.133 ops/s
Iteration  28: 328952.293 ops/s
Iteration  29: 327037.747 ops/s
Iteration  30: 328879.787 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_101._Benchmark.benchmark_Cluster_101":
  328077.188 ±(99.9%) 1030.271 ops/s [Average]
  (min, avg, max) = (324282.448, 328077.188, 330547.601), stdev = 1542.061
  CI (99.9%): [327046.917, 329107.458] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_101._Benchmark.benchmark_Cluster_101  thrpt   30  328077.188 ± 1030.271  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1010._Benchmark.benchmark_Cluster_1010$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1010._Benchmark.benchmark_Cluster_1010

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 49084.026 ops/s
# Warmup Iteration   2: 103075.272 ops/s
# Warmup Iteration   3: 113383.076 ops/s
# Warmup Iteration   4: 127779.657 ops/s
# Warmup Iteration   5: 129424.434 ops/s
# Warmup Iteration   6: 128734.243 ops/s
# Warmup Iteration   7: 128734.613 ops/s
# Warmup Iteration   8: 129720.952 ops/s
# Warmup Iteration   9: 129079.778 ops/s
# Warmup Iteration  10: 128466.551 ops/s
# Warmup Iteration  11: 128766.405 ops/s
# Warmup Iteration  12: 127783.731 ops/s
# Warmup Iteration  13: 128541.299 ops/s
# Warmup Iteration  14: 127708.834 ops/s
# Warmup Iteration  15: 126483.516 ops/s
# Warmup Iteration  16: 128205.632 ops/s
# Warmup Iteration  17: 130324.199 ops/s
# Warmup Iteration  18: 130535.290 ops/s
# Warmup Iteration  19: 130144.507 ops/s
# Warmup Iteration  20: 130098.540 ops/s
# Warmup Iteration  21: 129760.175 ops/s
# Warmup Iteration  22: 130007.501 ops/s
# Warmup Iteration  23: 129998.667 ops/s
# Warmup Iteration  24: 130208.884 ops/s
# Warmup Iteration  25: 129811.346 ops/s
# Warmup Iteration  26: 129764.606 ops/s
# Warmup Iteration  27: 129794.990 ops/s
# Warmup Iteration  28: 130791.941 ops/s
# Warmup Iteration  29: 130105.518 ops/s
# Warmup Iteration  30: 130919.502 ops/s
Iteration   1: 130335.145 ops/s
Iteration   2: 130537.872 ops/s
Iteration   3: 130758.598 ops/s
Iteration   4: 130853.674 ops/s
Iteration   5: 129859.322 ops/s
Iteration   6: 130846.534 ops/s
Iteration   7: 130423.977 ops/s
Iteration   8: 130277.092 ops/s
Iteration   9: 130508.653 ops/s
Iteration  10: 130480.122 ops/s
Iteration  11: 130215.491 ops/s
Iteration  12: 130254.458 ops/s
Iteration  13: 130333.161 ops/s
Iteration  14: 130336.394 ops/s
Iteration  15: 129922.625 ops/s
Iteration  16: 131078.569 ops/s
Iteration  17: 130340.029 ops/s
Iteration  18: 130118.638 ops/s
Iteration  19: 130683.841 ops/s
Iteration  20: 130459.331 ops/s
Iteration  21: 129903.582 ops/s
Iteration  22: 129355.641 ops/s
Iteration  23: 129750.301 ops/s
Iteration  24: 129562.734 ops/s
Iteration  25: 129181.948 ops/s
Iteration  26: 129046.154 ops/s
Iteration  27: 129898.849 ops/s
Iteration  28: 129275.366 ops/s
Iteration  29: 129693.564 ops/s
Iteration  30: 129192.559 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1010._Benchmark.benchmark_Cluster_1010":
  130116.141 ±(99.9%) 364.563 ops/s [Average]
  (min, avg, max) = (129046.154, 130116.141, 131078.569), stdev = 545.660
  CI (99.9%): [129751.578, 130480.704] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1010._Benchmark.benchmark_Cluster_1010  thrpt   30  130116.141 ± 364.563  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1011._Benchmark.benchmark_Cluster_1011$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1011._Benchmark.benchmark_Cluster_1011

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 85860.508 ops/s
# Warmup Iteration   2: 160369.775 ops/s
# Warmup Iteration   3: 190665.682 ops/s
# Warmup Iteration   4: 191402.874 ops/s
# Warmup Iteration   5: 193826.489 ops/s
# Warmup Iteration   6: 193518.259 ops/s
# Warmup Iteration   7: 193839.992 ops/s
# Warmup Iteration   8: 192857.361 ops/s
# Warmup Iteration   9: 192570.858 ops/s
# Warmup Iteration  10: 191994.544 ops/s
# Warmup Iteration  11: 193454.112 ops/s
# Warmup Iteration  12: 193226.692 ops/s
# Warmup Iteration  13: 192324.193 ops/s
# Warmup Iteration  14: 192622.385 ops/s
# Warmup Iteration  15: 193150.871 ops/s
# Warmup Iteration  16: 193306.081 ops/s
# Warmup Iteration  17: 197318.710 ops/s
# Warmup Iteration  18: 198095.185 ops/s
# Warmup Iteration  19: 197058.728 ops/s
# Warmup Iteration  20: 198009.535 ops/s
# Warmup Iteration  21: 198329.869 ops/s
# Warmup Iteration  22: 197369.420 ops/s
# Warmup Iteration  23: 197453.208 ops/s
# Warmup Iteration  24: 198624.364 ops/s
# Warmup Iteration  25: 197782.218 ops/s
# Warmup Iteration  26: 197112.513 ops/s
# Warmup Iteration  27: 198249.858 ops/s
# Warmup Iteration  28: 197515.647 ops/s
# Warmup Iteration  29: 197292.604 ops/s
# Warmup Iteration  30: 197210.357 ops/s
Iteration   1: 197172.272 ops/s
Iteration   2: 197120.346 ops/s
Iteration   3: 197613.333 ops/s
Iteration   4: 197338.321 ops/s
Iteration   5: 196201.180 ops/s
Iteration   6: 198706.557 ops/s
Iteration   7: 196267.416 ops/s
Iteration   8: 196869.109 ops/s
Iteration   9: 197962.135 ops/s
Iteration  10: 197993.302 ops/s
Iteration  11: 197347.501 ops/s
Iteration  12: 197256.575 ops/s
Iteration  13: 196406.838 ops/s
Iteration  14: 198785.640 ops/s
Iteration  15: 196470.450 ops/s
Iteration  16: 197504.853 ops/s
Iteration  17: 198144.504 ops/s
Iteration  18: 196644.020 ops/s
Iteration  19: 197881.813 ops/s
Iteration  20: 198478.068 ops/s
Iteration  21: 197569.658 ops/s
Iteration  22: 198445.084 ops/s
Iteration  23: 198734.356 ops/s
Iteration  24: 197827.457 ops/s
Iteration  25: 196896.643 ops/s
Iteration  26: 197175.727 ops/s
Iteration  27: 198060.741 ops/s
Iteration  28: 196935.412 ops/s
Iteration  29: 196543.948 ops/s
Iteration  30: 198191.528 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1011._Benchmark.benchmark_Cluster_1011":
  197484.826 ±(99.9%) 512.511 ops/s [Average]
  (min, avg, max) = (196201.180, 197484.826, 198785.640), stdev = 767.102
  CI (99.9%): [196972.315, 197997.337] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1011._Benchmark.benchmark_Cluster_1011  thrpt   30  197484.826 ± 512.511  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1012._Benchmark.benchmark_Cluster_1012$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1012._Benchmark.benchmark_Cluster_1012

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 66540.795 ops/s
# Warmup Iteration   2: 111029.626 ops/s
# Warmup Iteration   3: 119255.101 ops/s
# Warmup Iteration   4: 129201.395 ops/s
# Warmup Iteration   5: 130044.980 ops/s
# Warmup Iteration   6: 129008.068 ops/s
# Warmup Iteration   7: 129777.799 ops/s
# Warmup Iteration   8: 129398.753 ops/s
# Warmup Iteration   9: 129622.759 ops/s
# Warmup Iteration  10: 129646.333 ops/s
# Warmup Iteration  11: 129642.953 ops/s
# Warmup Iteration  12: 128687.831 ops/s
# Warmup Iteration  13: 127827.522 ops/s
# Warmup Iteration  14: 129284.760 ops/s
# Warmup Iteration  15: 128885.546 ops/s
# Warmup Iteration  16: 128531.824 ops/s
# Warmup Iteration  17: 132041.978 ops/s
# Warmup Iteration  18: 132846.720 ops/s
# Warmup Iteration  19: 131004.293 ops/s
# Warmup Iteration  20: 132465.275 ops/s
# Warmup Iteration  21: 132585.911 ops/s
# Warmup Iteration  22: 132546.126 ops/s
# Warmup Iteration  23: 131777.763 ops/s
# Warmup Iteration  24: 132046.242 ops/s
# Warmup Iteration  25: 131971.996 ops/s
# Warmup Iteration  26: 131471.858 ops/s
# Warmup Iteration  27: 131775.679 ops/s
# Warmup Iteration  28: 131773.418 ops/s
# Warmup Iteration  29: 132190.065 ops/s
# Warmup Iteration  30: 131693.026 ops/s
Iteration   1: 132475.113 ops/s
Iteration   2: 132345.105 ops/s
Iteration   3: 132734.760 ops/s
Iteration   4: 131708.131 ops/s
Iteration   5: 132717.080 ops/s
Iteration   6: 131936.714 ops/s
Iteration   7: 132120.070 ops/s
Iteration   8: 132666.134 ops/s
Iteration   9: 132238.695 ops/s
Iteration  10: 132362.023 ops/s
Iteration  11: 132723.615 ops/s
Iteration  12: 133251.714 ops/s
Iteration  13: 132492.062 ops/s
Iteration  14: 131504.703 ops/s
Iteration  15: 133222.315 ops/s
Iteration  16: 132128.738 ops/s
Iteration  17: 132335.289 ops/s
Iteration  18: 131505.446 ops/s
Iteration  19: 132888.214 ops/s
Iteration  20: 131822.889 ops/s
Iteration  21: 132295.296 ops/s
Iteration  22: 132017.448 ops/s
Iteration  23: 131431.553 ops/s
Iteration  24: 131506.545 ops/s
Iteration  25: 132316.941 ops/s
Iteration  26: 132367.162 ops/s
Iteration  27: 131730.599 ops/s
Iteration  28: 132660.858 ops/s
Iteration  29: 133126.322 ops/s
Iteration  30: 132436.363 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1012._Benchmark.benchmark_Cluster_1012":
  132302.263 ±(99.9%) 340.149 ops/s [Average]
  (min, avg, max) = (131431.553, 132302.263, 133251.714), stdev = 509.120
  CI (99.9%): [131962.114, 132642.413] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1012._Benchmark.benchmark_Cluster_1012  thrpt   30  132302.263 ± 340.149  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1013._Benchmark.benchmark_Cluster_1013$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1013._Benchmark.benchmark_Cluster_1013

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 80727.716 ops/s
# Warmup Iteration   2: 143556.175 ops/s
# Warmup Iteration   3: 138712.079 ops/s
# Warmup Iteration   4: 158845.350 ops/s
# Warmup Iteration   5: 158690.593 ops/s
# Warmup Iteration   6: 159237.816 ops/s
# Warmup Iteration   7: 158027.868 ops/s
# Warmup Iteration   8: 158788.499 ops/s
# Warmup Iteration   9: 158402.324 ops/s
# Warmup Iteration  10: 157757.537 ops/s
# Warmup Iteration  11: 157914.259 ops/s
# Warmup Iteration  12: 157934.496 ops/s
# Warmup Iteration  13: 158066.396 ops/s
# Warmup Iteration  14: 158001.776 ops/s
# Warmup Iteration  15: 157900.327 ops/s
# Warmup Iteration  16: 157672.075 ops/s
# Warmup Iteration  17: 164649.784 ops/s
# Warmup Iteration  18: 165071.645 ops/s
# Warmup Iteration  19: 164934.967 ops/s
# Warmup Iteration  20: 165840.981 ops/s
# Warmup Iteration  21: 165988.053 ops/s
# Warmup Iteration  22: 165525.523 ops/s
# Warmup Iteration  23: 164991.977 ops/s
# Warmup Iteration  24: 165473.681 ops/s
# Warmup Iteration  25: 164848.453 ops/s
# Warmup Iteration  26: 164458.348 ops/s
# Warmup Iteration  27: 165547.902 ops/s
# Warmup Iteration  28: 165607.320 ops/s
# Warmup Iteration  29: 165384.770 ops/s
# Warmup Iteration  30: 165113.135 ops/s
Iteration   1: 165797.610 ops/s
Iteration   2: 164948.699 ops/s
Iteration   3: 164585.349 ops/s
Iteration   4: 164752.327 ops/s
Iteration   5: 164352.232 ops/s
Iteration   6: 166362.264 ops/s
Iteration   7: 165852.279 ops/s
Iteration   8: 166062.708 ops/s
Iteration   9: 164957.059 ops/s
Iteration  10: 165692.773 ops/s
Iteration  11: 166420.551 ops/s
Iteration  12: 165879.602 ops/s
Iteration  13: 164864.986 ops/s
Iteration  14: 164734.937 ops/s
Iteration  15: 164714.375 ops/s
Iteration  16: 165822.344 ops/s
Iteration  17: 165152.862 ops/s
Iteration  18: 166002.172 ops/s
Iteration  19: 165515.547 ops/s
Iteration  20: 165013.431 ops/s
Iteration  21: 165600.427 ops/s
Iteration  22: 165695.773 ops/s
Iteration  23: 164944.537 ops/s
Iteration  24: 165129.843 ops/s
Iteration  25: 164602.621 ops/s
Iteration  26: 165084.830 ops/s
Iteration  27: 164880.267 ops/s
Iteration  28: 164149.285 ops/s
Iteration  29: 164925.754 ops/s
Iteration  30: 164866.809 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1013._Benchmark.benchmark_Cluster_1013":
  165245.475 ±(99.9%) 400.096 ops/s [Average]
  (min, avg, max) = (164149.285, 165245.475, 166420.551), stdev = 598.845
  CI (99.9%): [164845.379, 165645.571] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1013._Benchmark.benchmark_Cluster_1013  thrpt   30  165245.475 ± 400.096  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1014._Benchmark.benchmark_Cluster_1014$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1014._Benchmark.benchmark_Cluster_1014

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1965.751 ops/s
# Warmup Iteration   2: 74774.599 ops/s
# Warmup Iteration   3: 130803.241 ops/s
# Warmup Iteration   4: 158723.073 ops/s
# Warmup Iteration   5: 174811.277 ops/s
# Warmup Iteration   6: 173961.247 ops/s
# Warmup Iteration   7: 172997.065 ops/s
# Warmup Iteration   8: 172926.565 ops/s
# Warmup Iteration   9: 173323.601 ops/s
# Warmup Iteration  10: 173148.394 ops/s
# Warmup Iteration  11: 173496.089 ops/s
# Warmup Iteration  12: 173131.768 ops/s
# Warmup Iteration  13: 171513.906 ops/s
# Warmup Iteration  14: 172611.909 ops/s
# Warmup Iteration  15: 173035.949 ops/s
# Warmup Iteration  16: 172685.210 ops/s
# Warmup Iteration  17: 172786.377 ops/s
# Warmup Iteration  18: 172128.372 ops/s
# Warmup Iteration  19: 173177.736 ops/s
# Warmup Iteration  20: 172065.296 ops/s
# Warmup Iteration  21: 171677.295 ops/s
# Warmup Iteration  22: 171601.290 ops/s
# Warmup Iteration  23: 172614.530 ops/s
# Warmup Iteration  24: 172942.875 ops/s
# Warmup Iteration  25: 172124.480 ops/s
# Warmup Iteration  26: 172347.462 ops/s
# Warmup Iteration  27: 172788.534 ops/s
# Warmup Iteration  28: 171289.032 ops/s
# Warmup Iteration  29: 171816.699 ops/s
# Warmup Iteration  30: 173199.657 ops/s
Iteration   1: 173395.369 ops/s
Iteration   2: 172389.764 ops/s
Iteration   3: 172097.632 ops/s
Iteration   4: 171366.092 ops/s
Iteration   5: 172478.604 ops/s
Iteration   6: 172502.081 ops/s
Iteration   7: 172466.339 ops/s
Iteration   8: 172269.922 ops/s
Iteration   9: 171418.348 ops/s
Iteration  10: 172361.198 ops/s
Iteration  11: 171479.523 ops/s
Iteration  12: 171423.736 ops/s
Iteration  13: 172661.500 ops/s
Iteration  14: 171963.310 ops/s
Iteration  15: 171600.715 ops/s
Iteration  16: 171668.479 ops/s
Iteration  17: 171895.638 ops/s
Iteration  18: 171871.853 ops/s
Iteration  19: 171906.796 ops/s
Iteration  20: 171401.211 ops/s
Iteration  21: 172789.937 ops/s
Iteration  22: 172087.002 ops/s
Iteration  23: 171511.099 ops/s
Iteration  24: 172517.364 ops/s
Iteration  25: 172534.674 ops/s
Iteration  26: 170703.843 ops/s
Iteration  27: 170536.783 ops/s
Iteration  28: 172123.512 ops/s
Iteration  29: 171860.138 ops/s
Iteration  30: 171404.933 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1014._Benchmark.benchmark_Cluster_1014":
  171956.246 ±(99.9%) 412.096 ops/s [Average]
  (min, avg, max) = (170536.783, 171956.246, 173395.369), stdev = 616.806
  CI (99.9%): [171544.150, 172368.342] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1014._Benchmark.benchmark_Cluster_1014  thrpt   30  171956.246 ± 412.096  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1015._Benchmark.benchmark_Cluster_1015$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1015._Benchmark.benchmark_Cluster_1015

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 52642.143 ops/s
# Warmup Iteration   2: 119471.672 ops/s
# Warmup Iteration   3: 126776.735 ops/s
# Warmup Iteration   4: 136583.938 ops/s
# Warmup Iteration   5: 137934.192 ops/s
# Warmup Iteration   6: 137278.961 ops/s
# Warmup Iteration   7: 136193.588 ops/s
# Warmup Iteration   8: 135977.637 ops/s
# Warmup Iteration   9: 136455.962 ops/s
# Warmup Iteration  10: 135216.257 ops/s
# Warmup Iteration  11: 135362.057 ops/s
# Warmup Iteration  12: 136207.651 ops/s
# Warmup Iteration  13: 135714.317 ops/s
# Warmup Iteration  14: 136159.600 ops/s
# Warmup Iteration  15: 136820.644 ops/s
# Warmup Iteration  16: 135698.793 ops/s
# Warmup Iteration  17: 139441.610 ops/s
# Warmup Iteration  18: 139839.650 ops/s
# Warmup Iteration  19: 140990.409 ops/s
# Warmup Iteration  20: 141125.355 ops/s
# Warmup Iteration  21: 140299.383 ops/s
# Warmup Iteration  22: 140760.524 ops/s
# Warmup Iteration  23: 140047.472 ops/s
# Warmup Iteration  24: 140742.143 ops/s
# Warmup Iteration  25: 140490.037 ops/s
# Warmup Iteration  26: 139038.408 ops/s
# Warmup Iteration  27: 139583.140 ops/s
# Warmup Iteration  28: 141421.264 ops/s
# Warmup Iteration  29: 140038.957 ops/s
# Warmup Iteration  30: 138883.974 ops/s
Iteration   1: 139743.011 ops/s
Iteration   2: 140517.791 ops/s
Iteration   3: 140451.368 ops/s
Iteration   4: 140880.030 ops/s
Iteration   5: 141714.525 ops/s
Iteration   6: 140423.060 ops/s
Iteration   7: 140567.515 ops/s
Iteration   8: 140530.091 ops/s
Iteration   9: 140779.567 ops/s
Iteration  10: 140353.093 ops/s
Iteration  11: 140741.494 ops/s
Iteration  12: 140874.247 ops/s
Iteration  13: 140730.994 ops/s
Iteration  14: 139585.257 ops/s
Iteration  15: 139092.296 ops/s
Iteration  16: 141147.417 ops/s
Iteration  17: 140642.107 ops/s
Iteration  18: 140573.133 ops/s
Iteration  19: 140997.778 ops/s
Iteration  20: 140198.534 ops/s
Iteration  21: 141191.415 ops/s
Iteration  22: 140142.175 ops/s
Iteration  23: 140112.407 ops/s
Iteration  24: 140711.904 ops/s
Iteration  25: 141322.301 ops/s
Iteration  26: 141318.354 ops/s
Iteration  27: 141181.408 ops/s
Iteration  28: 139880.229 ops/s
Iteration  29: 140649.572 ops/s
Iteration  30: 140644.939 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1015._Benchmark.benchmark_Cluster_1015":
  140589.934 ±(99.9%) 371.287 ops/s [Average]
  (min, avg, max) = (139092.296, 140589.934, 141714.525), stdev = 555.725
  CI (99.9%): [140218.646, 140961.221] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1015._Benchmark.benchmark_Cluster_1015  thrpt   30  140589.934 ± 371.287  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1016._Benchmark.benchmark_Cluster_1016$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1016._Benchmark.benchmark_Cluster_1016

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 74661.664 ops/s
# Warmup Iteration   2: 131020.140 ops/s
# Warmup Iteration   3: 152272.020 ops/s
# Warmup Iteration   4: 153118.888 ops/s
# Warmup Iteration   5: 154938.601 ops/s
# Warmup Iteration   6: 153494.875 ops/s
# Warmup Iteration   7: 153757.403 ops/s
# Warmup Iteration   8: 152391.547 ops/s
# Warmup Iteration   9: 151229.297 ops/s
# Warmup Iteration  10: 153422.930 ops/s
# Warmup Iteration  11: 153389.642 ops/s
# Warmup Iteration  12: 153560.170 ops/s
# Warmup Iteration  13: 152880.056 ops/s
# Warmup Iteration  14: 153369.219 ops/s
# Warmup Iteration  15: 154306.158 ops/s
# Warmup Iteration  16: 153697.645 ops/s
# Warmup Iteration  17: 162268.526 ops/s
# Warmup Iteration  18: 162841.075 ops/s
# Warmup Iteration  19: 163683.024 ops/s
# Warmup Iteration  20: 162770.994 ops/s
# Warmup Iteration  21: 164092.690 ops/s
# Warmup Iteration  22: 164515.582 ops/s
# Warmup Iteration  23: 162994.392 ops/s
# Warmup Iteration  24: 163768.303 ops/s
# Warmup Iteration  25: 163391.617 ops/s
# Warmup Iteration  26: 164098.635 ops/s
# Warmup Iteration  27: 163475.588 ops/s
# Warmup Iteration  28: 162687.076 ops/s
# Warmup Iteration  29: 162929.173 ops/s
# Warmup Iteration  30: 163375.151 ops/s
Iteration   1: 163228.264 ops/s
Iteration   2: 164505.283 ops/s
Iteration   3: 163472.233 ops/s
Iteration   4: 163632.064 ops/s
Iteration   5: 164245.090 ops/s
Iteration   6: 163561.120 ops/s
Iteration   7: 163124.083 ops/s
Iteration   8: 163229.975 ops/s
Iteration   9: 163766.105 ops/s
Iteration  10: 163919.291 ops/s
Iteration  11: 162916.529 ops/s
Iteration  12: 163497.358 ops/s
Iteration  13: 162740.319 ops/s
Iteration  14: 162367.468 ops/s
Iteration  15: 164254.496 ops/s
Iteration  16: 164723.429 ops/s
Iteration  17: 163553.725 ops/s
Iteration  18: 162365.120 ops/s
Iteration  19: 163682.873 ops/s
Iteration  20: 163241.300 ops/s
Iteration  21: 163247.617 ops/s
Iteration  22: 164068.287 ops/s
Iteration  23: 163322.991 ops/s
Iteration  24: 163116.062 ops/s
Iteration  25: 164724.582 ops/s
Iteration  26: 164020.697 ops/s
Iteration  27: 164818.732 ops/s
Iteration  28: 163366.365 ops/s
Iteration  29: 162274.835 ops/s
Iteration  30: 162943.947 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1016._Benchmark.benchmark_Cluster_1016":
  163531.008 ±(99.9%) 458.442 ops/s [Average]
  (min, avg, max) = (162274.835, 163531.008, 164818.732), stdev = 686.175
  CI (99.9%): [163072.566, 163989.450] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1016._Benchmark.benchmark_Cluster_1016  thrpt   30  163531.008 ± 458.442  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1017._Benchmark.benchmark_Cluster_1017$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1017._Benchmark.benchmark_Cluster_1017

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 24286.105 ops/s
# Warmup Iteration   2: 79140.168 ops/s
# Warmup Iteration   3: 103577.950 ops/s
# Warmup Iteration   4: 119145.206 ops/s
# Warmup Iteration   5: 118575.258 ops/s
# Warmup Iteration   6: 118791.202 ops/s
# Warmup Iteration   7: 118464.874 ops/s
# Warmup Iteration   8: 117985.708 ops/s
# Warmup Iteration   9: 118029.818 ops/s
# Warmup Iteration  10: 119237.691 ops/s
# Warmup Iteration  11: 118279.017 ops/s
# Warmup Iteration  12: 117012.377 ops/s
# Warmup Iteration  13: 117424.601 ops/s
# Warmup Iteration  14: 119289.019 ops/s
# Warmup Iteration  15: 118634.088 ops/s
# Warmup Iteration  16: 118792.901 ops/s
# Warmup Iteration  17: 119327.607 ops/s
# Warmup Iteration  18: 120248.749 ops/s
# Warmup Iteration  19: 120732.124 ops/s
# Warmup Iteration  20: 120826.853 ops/s
# Warmup Iteration  21: 121535.168 ops/s
# Warmup Iteration  22: 121788.174 ops/s
# Warmup Iteration  23: 122319.728 ops/s
# Warmup Iteration  24: 121546.151 ops/s
# Warmup Iteration  25: 122205.788 ops/s
# Warmup Iteration  26: 122760.863 ops/s
# Warmup Iteration  27: 121512.175 ops/s
# Warmup Iteration  28: 122460.452 ops/s
# Warmup Iteration  29: 122074.672 ops/s
# Warmup Iteration  30: 121221.583 ops/s
Iteration   1: 121763.323 ops/s
Iteration   2: 122990.650 ops/s
Iteration   3: 123212.531 ops/s
Iteration   4: 121344.808 ops/s
Iteration   5: 121376.730 ops/s
Iteration   6: 122209.327 ops/s
Iteration   7: 122273.358 ops/s
Iteration   8: 121810.430 ops/s
Iteration   9: 122436.421 ops/s
Iteration  10: 122536.946 ops/s
Iteration  11: 121972.739 ops/s
Iteration  12: 121913.373 ops/s
Iteration  13: 122098.935 ops/s
Iteration  14: 122241.075 ops/s
Iteration  15: 122216.897 ops/s
Iteration  16: 122179.534 ops/s
Iteration  17: 122832.280 ops/s
Iteration  18: 123000.600 ops/s
Iteration  19: 122713.649 ops/s
Iteration  20: 122305.317 ops/s
Iteration  21: 122688.940 ops/s
Iteration  22: 121907.884 ops/s
Iteration  23: 121983.540 ops/s
Iteration  24: 123364.407 ops/s
Iteration  25: 122323.376 ops/s
Iteration  26: 122109.702 ops/s
Iteration  27: 122389.671 ops/s
Iteration  28: 121688.576 ops/s
Iteration  29: 121445.138 ops/s
Iteration  30: 121923.038 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1017._Benchmark.benchmark_Cluster_1017":
  122241.773 ±(99.9%) 343.844 ops/s [Average]
  (min, avg, max) = (121344.808, 122241.773, 123364.407), stdev = 514.650
  CI (99.9%): [121897.929, 122585.617] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1017._Benchmark.benchmark_Cluster_1017  thrpt   30  122241.773 ± 343.844  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1018._Benchmark.benchmark_Cluster_1018$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1018._Benchmark.benchmark_Cluster_1018

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 60888.205 ops/s
# Warmup Iteration   2: 124543.207 ops/s
# Warmup Iteration   3: 130691.395 ops/s
# Warmup Iteration   4: 147238.876 ops/s
# Warmup Iteration   5: 148972.959 ops/s
# Warmup Iteration   6: 148822.635 ops/s
# Warmup Iteration   7: 149051.703 ops/s
# Warmup Iteration   8: 148143.434 ops/s
# Warmup Iteration   9: 148698.555 ops/s
# Warmup Iteration  10: 148616.903 ops/s
# Warmup Iteration  11: 148375.825 ops/s
# Warmup Iteration  12: 148048.094 ops/s
# Warmup Iteration  13: 147569.503 ops/s
# Warmup Iteration  14: 147685.505 ops/s
# Warmup Iteration  15: 147827.821 ops/s
# Warmup Iteration  16: 147069.468 ops/s
# Warmup Iteration  17: 155809.294 ops/s
# Warmup Iteration  18: 156371.516 ops/s
# Warmup Iteration  19: 155626.292 ops/s
# Warmup Iteration  20: 156461.128 ops/s
# Warmup Iteration  21: 157074.526 ops/s
# Warmup Iteration  22: 156681.007 ops/s
# Warmup Iteration  23: 156412.532 ops/s
# Warmup Iteration  24: 156521.056 ops/s
# Warmup Iteration  25: 156351.926 ops/s
# Warmup Iteration  26: 156916.875 ops/s
# Warmup Iteration  27: 157237.914 ops/s
# Warmup Iteration  28: 157706.125 ops/s
# Warmup Iteration  29: 156214.400 ops/s
# Warmup Iteration  30: 158213.116 ops/s
Iteration   1: 156557.109 ops/s
Iteration   2: 156061.997 ops/s
Iteration   3: 156324.634 ops/s
Iteration   4: 156978.790 ops/s
Iteration   5: 156616.104 ops/s
Iteration   6: 157105.244 ops/s
Iteration   7: 156652.615 ops/s
Iteration   8: 156930.258 ops/s
Iteration   9: 155393.644 ops/s
Iteration  10: 157589.185 ops/s
Iteration  11: 156442.943 ops/s
Iteration  12: 157056.020 ops/s
Iteration  13: 157005.355 ops/s
Iteration  14: 156525.673 ops/s
Iteration  15: 157699.692 ops/s
Iteration  16: 157184.544 ops/s
Iteration  17: 156439.959 ops/s
Iteration  18: 156754.444 ops/s
Iteration  19: 157402.282 ops/s
Iteration  20: 156816.566 ops/s
Iteration  21: 156816.948 ops/s
Iteration  22: 157569.010 ops/s
Iteration  23: 157366.367 ops/s
Iteration  24: 157760.506 ops/s
Iteration  25: 157116.133 ops/s
Iteration  26: 157055.519 ops/s
Iteration  27: 156173.821 ops/s
Iteration  28: 156496.220 ops/s
Iteration  29: 156457.040 ops/s
Iteration  30: 156736.081 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1018._Benchmark.benchmark_Cluster_1018":
  156836.157 ±(99.9%) 349.977 ops/s [Average]
  (min, avg, max) = (155393.644, 156836.157, 157760.506), stdev = 523.830
  CI (99.9%): [156486.180, 157186.134] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1018._Benchmark.benchmark_Cluster_1018  thrpt   30  156836.157 ± 349.977  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1019._Benchmark.benchmark_Cluster_1019$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1019._Benchmark.benchmark_Cluster_1019

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 52582.166 ops/s
# Warmup Iteration   2: 120391.983 ops/s
# Warmup Iteration   3: 132054.065 ops/s
# Warmup Iteration   4: 141482.024 ops/s
# Warmup Iteration   5: 144055.510 ops/s
# Warmup Iteration   6: 144177.389 ops/s
# Warmup Iteration   7: 143325.387 ops/s
# Warmup Iteration   8: 138993.177 ops/s
# Warmup Iteration   9: 144124.612 ops/s
# Warmup Iteration  10: 144027.594 ops/s
# Warmup Iteration  11: 142993.551 ops/s
# Warmup Iteration  12: 142465.174 ops/s
# Warmup Iteration  13: 143587.989 ops/s
# Warmup Iteration  14: 143631.260 ops/s
# Warmup Iteration  15: 143289.148 ops/s
# Warmup Iteration  16: 143006.498 ops/s
# Warmup Iteration  17: 150415.688 ops/s
# Warmup Iteration  18: 152153.052 ops/s
# Warmup Iteration  19: 152382.291 ops/s
# Warmup Iteration  20: 152133.742 ops/s
# Warmup Iteration  21: 151791.426 ops/s
# Warmup Iteration  22: 151925.634 ops/s
# Warmup Iteration  23: 152530.756 ops/s
# Warmup Iteration  24: 152224.478 ops/s
# Warmup Iteration  25: 152028.706 ops/s
# Warmup Iteration  26: 151903.067 ops/s
# Warmup Iteration  27: 152056.620 ops/s
# Warmup Iteration  28: 152062.312 ops/s
# Warmup Iteration  29: 152950.636 ops/s
# Warmup Iteration  30: 151861.386 ops/s
Iteration   1: 152076.667 ops/s
Iteration   2: 152435.546 ops/s
Iteration   3: 151860.562 ops/s
Iteration   4: 152564.153 ops/s
Iteration   5: 152395.756 ops/s
Iteration   6: 151973.520 ops/s
Iteration   7: 151366.277 ops/s
Iteration   8: 151426.276 ops/s
Iteration   9: 152064.208 ops/s
Iteration  10: 152528.246 ops/s
Iteration  11: 151665.258 ops/s
Iteration  12: 151510.743 ops/s
Iteration  13: 151999.383 ops/s
Iteration  14: 151177.031 ops/s
Iteration  15: 151360.317 ops/s
Iteration  16: 152090.372 ops/s
Iteration  17: 151734.634 ops/s
Iteration  18: 152314.443 ops/s
Iteration  19: 151909.183 ops/s
Iteration  20: 151825.191 ops/s
Iteration  21: 152306.626 ops/s
Iteration  22: 151806.378 ops/s
Iteration  23: 152375.891 ops/s
Iteration  24: 151861.652 ops/s
Iteration  25: 151581.789 ops/s
Iteration  26: 152291.541 ops/s
Iteration  27: 152112.752 ops/s
Iteration  28: 150878.537 ops/s
Iteration  29: 152493.874 ops/s
Iteration  30: 152320.446 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1019._Benchmark.benchmark_Cluster_1019":
  151943.575 ±(99.9%) 289.156 ops/s [Average]
  (min, avg, max) = (150878.537, 151943.575, 152564.153), stdev = 432.795
  CI (99.9%): [151654.419, 152232.731] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1019._Benchmark.benchmark_Cluster_1019  thrpt   30  151943.575 ± 289.156  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_102._Benchmark.benchmark_Cluster_102$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_102._Benchmark.benchmark_Cluster_102

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16597.307 ops/s
# Warmup Iteration   2: 124877.635 ops/s
# Warmup Iteration   3: 151759.237 ops/s
# Warmup Iteration   4: 195056.320 ops/s
# Warmup Iteration   5: 195009.086 ops/s
# Warmup Iteration   6: 194309.025 ops/s
# Warmup Iteration   7: 194991.111 ops/s
# Warmup Iteration   8: 194195.838 ops/s
# Warmup Iteration   9: 194188.035 ops/s
# Warmup Iteration  10: 194698.495 ops/s
# Warmup Iteration  11: 194562.872 ops/s
# Warmup Iteration  12: 194241.058 ops/s
# Warmup Iteration  13: 194729.830 ops/s
# Warmup Iteration  14: 193420.622 ops/s
# Warmup Iteration  15: 193180.453 ops/s
# Warmup Iteration  16: 194070.566 ops/s
# Warmup Iteration  17: 196590.300 ops/s
# Warmup Iteration  18: 196985.496 ops/s
# Warmup Iteration  19: 195911.408 ops/s
# Warmup Iteration  20: 195957.180 ops/s
# Warmup Iteration  21: 196263.162 ops/s
# Warmup Iteration  22: 196281.456 ops/s
# Warmup Iteration  23: 195553.448 ops/s
# Warmup Iteration  24: 196115.109 ops/s
# Warmup Iteration  25: 195500.431 ops/s
# Warmup Iteration  26: 195441.153 ops/s
# Warmup Iteration  27: 196706.699 ops/s
# Warmup Iteration  28: 196078.805 ops/s
# Warmup Iteration  29: 195869.259 ops/s
# Warmup Iteration  30: 195472.747 ops/s
Iteration   1: 196099.410 ops/s
Iteration   2: 195985.524 ops/s
Iteration   3: 194782.720 ops/s
Iteration   4: 197565.718 ops/s
Iteration   5: 196546.906 ops/s
Iteration   6: 195878.497 ops/s
Iteration   7: 196049.085 ops/s
Iteration   8: 196306.352 ops/s
Iteration   9: 193941.211 ops/s
Iteration  10: 196320.698 ops/s
Iteration  11: 195421.955 ops/s
Iteration  12: 194316.613 ops/s
Iteration  13: 193609.689 ops/s
Iteration  14: 193598.342 ops/s
Iteration  15: 194717.174 ops/s
Iteration  16: 194233.495 ops/s
Iteration  17: 194586.225 ops/s
Iteration  18: 195539.228 ops/s
Iteration  19: 194943.804 ops/s
Iteration  20: 195500.623 ops/s
Iteration  21: 193882.030 ops/s
Iteration  22: 195490.777 ops/s
Iteration  23: 194044.641 ops/s
Iteration  24: 195044.249 ops/s
Iteration  25: 194848.422 ops/s
Iteration  26: 194340.297 ops/s
Iteration  27: 193241.061 ops/s
Iteration  28: 194727.889 ops/s
Iteration  29: 195328.015 ops/s
Iteration  30: 195609.483 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_102._Benchmark.benchmark_Cluster_102":
  195083.338 ±(99.9%) 678.121 ops/s [Average]
  (min, avg, max) = (193241.061, 195083.338, 197565.718), stdev = 1014.979
  CI (99.9%): [194405.217, 195761.459] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_102._Benchmark.benchmark_Cluster_102  thrpt   30  195083.338 ± 678.121  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1020._Benchmark.benchmark_Cluster_1020$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1020._Benchmark.benchmark_Cluster_1020

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12414.262 ops/s
# Warmup Iteration   2: 50810.190 ops/s
# Warmup Iteration   3: 58744.513 ops/s
# Warmup Iteration   4: 124991.692 ops/s
# Warmup Iteration   5: 144446.962 ops/s
# Warmup Iteration   6: 157734.556 ops/s
# Warmup Iteration   7: 145292.618 ops/s
# Warmup Iteration   8: 151134.309 ops/s
# Warmup Iteration   9: 152972.265 ops/s
# Warmup Iteration  10: 147451.924 ops/s
# Warmup Iteration  11: 156726.878 ops/s
# Warmup Iteration  12: 149561.212 ops/s
# Warmup Iteration  13: 157646.045 ops/s
# Warmup Iteration  14: 156283.976 ops/s
# Warmup Iteration  15: 154795.435 ops/s
# Warmup Iteration  16: 155128.756 ops/s
# Warmup Iteration  17: 156389.360 ops/s
# Warmup Iteration  18: 158636.503 ops/s
# Warmup Iteration  19: 153988.617 ops/s
# Warmup Iteration  20: 154848.581 ops/s
# Warmup Iteration  21: 155424.335 ops/s
# Warmup Iteration  22: 159767.226 ops/s
# Warmup Iteration  23: 142924.473 ops/s
# Warmup Iteration  24: 153507.124 ops/s
# Warmup Iteration  25: 153262.343 ops/s
# Warmup Iteration  26: 154048.773 ops/s
# Warmup Iteration  27: 151751.226 ops/s
# Warmup Iteration  28: 155938.765 ops/s
# Warmup Iteration  29: 154554.036 ops/s
# Warmup Iteration  30: 151892.156 ops/s
Iteration   1: 157261.892 ops/s
Iteration   2: 157405.065 ops/s
Iteration   3: 156721.292 ops/s
Iteration   4: 147210.130 ops/s
Iteration   5: 155793.052 ops/s
Iteration   6: 153361.320 ops/s
Iteration   7: 155863.430 ops/s
Iteration   8: 153827.360 ops/s
Iteration   9: 155032.445 ops/s
Iteration  10: 156239.604 ops/s
Iteration  11: 152106.252 ops/s
Iteration  12: 141437.983 ops/s
Iteration  13: 158008.964 ops/s
Iteration  14: 158461.796 ops/s
Iteration  15: 156490.576 ops/s
Iteration  16: 157354.585 ops/s
Iteration  17: 157478.388 ops/s
Iteration  18: 159047.129 ops/s
Iteration  19: 157183.426 ops/s
Iteration  20: 155636.261 ops/s
Iteration  21: 155042.970 ops/s
Iteration  22: 157045.981 ops/s
Iteration  23: 156974.471 ops/s
Iteration  24: 158277.337 ops/s
Iteration  25: 157830.464 ops/s
Iteration  26: 146271.104 ops/s
Iteration  27: 153942.258 ops/s
Iteration  28: 158562.291 ops/s
Iteration  29: 152396.485 ops/s
Iteration  30: 154589.150 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1020._Benchmark.benchmark_Cluster_1020":
  155095.115 ±(99.9%) 2643.015 ops/s [Average]
  (min, avg, max) = (141437.983, 155095.115, 159047.129), stdev = 3955.941
  CI (99.9%): [152452.100, 157738.130] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score      Error  Units
Cluster_1020._Benchmark.benchmark_Cluster_1020  thrpt   30  155095.115 ± 2643.015  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1021._Benchmark.benchmark_Cluster_1021$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1021._Benchmark.benchmark_Cluster_1021

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 63077.787 ops/s
# Warmup Iteration   2: 52638.105 ops/s
# Warmup Iteration   3: 39811.017 ops/s
# Warmup Iteration   4: 29903.382 ops/s
# Warmup Iteration   5: 29165.458 ops/s
# Warmup Iteration   6: 21261.608 ops/s
# Warmup Iteration   7: 11699.038 ops/s
# Warmup Iteration   8: 14046.743 ops/s
# Warmup Iteration   9: 9241.007 ops/s
# Warmup Iteration  10: 12018.754 ops/s
# Warmup Iteration  11: 6027.078 ops/s
# Warmup Iteration  12: 10636.816 ops/s
# Warmup Iteration  13: 9611.917 ops/s
# Warmup Iteration  14: 11475.995 ops/s
# Warmup Iteration  15: 4401.833 ops/s
# Warmup Iteration  16: 11631.495 ops/s
# Warmup Iteration  17: 4693.421 ops/s
# Warmup Iteration  18: 9849.467 ops/s
# Warmup Iteration  19: 4774.190 ops/s
# Warmup Iteration  20: 9904.409 ops/s
# Warmup Iteration  21: 4731.619 ops/s
# Warmup Iteration  22: 10254.938 ops/s
# Warmup Iteration  23: 4307.970 ops/s
# Warmup Iteration  24: 9338.771 ops/s
# Warmup Iteration  25: 4851.093 ops/s
# Warmup Iteration  26: 9036.261 ops/s
# Warmup Iteration  27: 4369.199 ops/s
# Warmup Iteration  28: 10012.337 ops/s
# Warmup Iteration  29: 4101.815 ops/s
# Warmup Iteration  30: 10297.995 ops/s
Iteration   1: 3974.684 ops/s
Iteration   2: 9659.443 ops/s
Iteration   3: 4154.224 ops/s
Iteration   4: 9916.631 ops/s
Iteration   5: 2843.436 ops/s
Iteration   6: 9254.454 ops/s
Iteration   7: 3184.058 ops/s
Iteration   8: 9404.440 ops/s
Iteration   9: 2687.231 ops/s
Iteration  10: 9212.778 ops/s
Iteration  11: 2664.175 ops/s
Iteration  12: 9528.045 ops/s
Iteration  13: 2647.345 ops/s
Iteration  14: 11142.096 ops/s
Iteration  15: 2838.950 ops/s
Iteration  16: 9886.144 ops/s
Iteration  17: 2667.885 ops/s
Iteration  18: 8833.544 ops/s
Iteration  19: 2914.451 ops/s
Iteration  20: 3922.249 ops/s
Iteration  21: 3710.365 ops/s
Iteration  22: 4009.208 ops/s
Iteration  23: 3944.881 ops/s
Iteration  24: 3961.266 ops/s
Iteration  25: 3965.373 ops/s
Iteration  26: 4092.424 ops/s
Iteration  27: 4226.376 ops/s
Iteration  28: 4014.950 ops/s
Iteration  29: 3760.991 ops/s
Iteration  30: 3325.995 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1021._Benchmark.benchmark_Cluster_1021":
  5344.936 ±(99.9%) 1956.432 ops/s [Average]
  (min, avg, max) = (2647.345, 5344.936, 11142.096), stdev = 2928.296
  CI (99.9%): [3388.504, 7301.369] (assumes normal distribution)


# Run complete. Total time: 00:01:39

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt     Score      Error  Units
Cluster_1021._Benchmark.benchmark_Cluster_1021  thrpt   30  5344.936 ± 1956.432  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1022._Benchmark.benchmark_Cluster_1022$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1022._Benchmark.benchmark_Cluster_1022

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 50238.820 ops/s
# Warmup Iteration   2: 92826.920 ops/s
# Warmup Iteration   3: 98522.240 ops/s
# Warmup Iteration   4: 121313.141 ops/s
# Warmup Iteration   5: 112048.488 ops/s
# Warmup Iteration   6: 123635.052 ops/s
# Warmup Iteration   7: 123449.452 ops/s
# Warmup Iteration   8: 124377.587 ops/s
# Warmup Iteration   9: 123931.731 ops/s
# Warmup Iteration  10: 124254.674 ops/s
# Warmup Iteration  11: 125298.169 ops/s
# Warmup Iteration  12: 125457.857 ops/s
# Warmup Iteration  13: 124155.834 ops/s
# Warmup Iteration  14: 124471.566 ops/s
# Warmup Iteration  15: 125595.330 ops/s
# Warmup Iteration  16: 124780.749 ops/s
# Warmup Iteration  17: 127968.870 ops/s
# Warmup Iteration  18: 127964.961 ops/s
# Warmup Iteration  19: 127603.100 ops/s
# Warmup Iteration  20: 127272.431 ops/s
# Warmup Iteration  21: 127964.122 ops/s
# Warmup Iteration  22: 128242.508 ops/s
# Warmup Iteration  23: 127591.690 ops/s
# Warmup Iteration  24: 127423.778 ops/s
# Warmup Iteration  25: 127905.681 ops/s
# Warmup Iteration  26: 127261.225 ops/s
# Warmup Iteration  27: 127858.247 ops/s
# Warmup Iteration  28: 127851.365 ops/s
# Warmup Iteration  29: 128236.728 ops/s
# Warmup Iteration  30: 127548.814 ops/s
Iteration   1: 128602.772 ops/s
Iteration   2: 128503.596 ops/s
Iteration   3: 127213.169 ops/s
Iteration   4: 128363.675 ops/s
Iteration   5: 127601.574 ops/s
Iteration   6: 127506.386 ops/s
Iteration   7: 127662.754 ops/s
Iteration   8: 128426.939 ops/s
Iteration   9: 127609.623 ops/s
Iteration  10: 128267.216 ops/s
Iteration  11: 128177.906 ops/s
Iteration  12: 127596.997 ops/s
Iteration  13: 128092.018 ops/s
Iteration  14: 128228.492 ops/s
Iteration  15: 127701.334 ops/s
Iteration  16: 127991.977 ops/s
Iteration  17: 127557.882 ops/s
Iteration  18: 126887.564 ops/s
Iteration  19: 127711.548 ops/s
Iteration  20: 127786.378 ops/s
Iteration  21: 128052.742 ops/s
Iteration  22: 127689.740 ops/s
Iteration  23: 128111.348 ops/s
Iteration  24: 128546.521 ops/s
Iteration  25: 128398.067 ops/s
Iteration  26: 127448.794 ops/s
Iteration  27: 128688.270 ops/s
Iteration  28: 128016.014 ops/s
Iteration  29: 128912.891 ops/s
Iteration  30: 126999.890 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1022._Benchmark.benchmark_Cluster_1022":
  127945.136 ±(99.9%) 334.885 ops/s [Average]
  (min, avg, max) = (126887.564, 127945.136, 128912.891), stdev = 501.240
  CI (99.9%): [127610.251, 128280.021] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1022._Benchmark.benchmark_Cluster_1022  thrpt   30  127945.136 ± 334.885  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1023._Benchmark.benchmark_Cluster_1023$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1023._Benchmark.benchmark_Cluster_1023

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 104075.843 ops/s
# Warmup Iteration   2: 155743.726 ops/s
# Warmup Iteration   3: 160008.236 ops/s
# Warmup Iteration   4: 149565.221 ops/s
# Warmup Iteration   5: 171152.459 ops/s
# Warmup Iteration   6: 169948.220 ops/s
# Warmup Iteration   7: 169725.428 ops/s
# Warmup Iteration   8: 170475.980 ops/s
# Warmup Iteration   9: 169413.415 ops/s
# Warmup Iteration  10: 170379.583 ops/s
# Warmup Iteration  11: 169743.073 ops/s
# Warmup Iteration  12: 170491.132 ops/s
# Warmup Iteration  13: 171034.289 ops/s
# Warmup Iteration  14: 170575.967 ops/s
# Warmup Iteration  15: 169601.351 ops/s
# Warmup Iteration  16: 169786.808 ops/s
# Warmup Iteration  17: 177611.336 ops/s
# Warmup Iteration  18: 177403.061 ops/s
# Warmup Iteration  19: 176809.737 ops/s
# Warmup Iteration  20: 177661.001 ops/s
# Warmup Iteration  21: 177574.257 ops/s
# Warmup Iteration  22: 177188.352 ops/s
# Warmup Iteration  23: 178038.951 ops/s
# Warmup Iteration  24: 177232.011 ops/s
# Warmup Iteration  25: 177873.908 ops/s
# Warmup Iteration  26: 177262.669 ops/s
# Warmup Iteration  27: 177098.200 ops/s
# Warmup Iteration  28: 177462.968 ops/s
# Warmup Iteration  29: 177740.573 ops/s
# Warmup Iteration  30: 176637.899 ops/s
Iteration   1: 177806.676 ops/s
Iteration   2: 177115.888 ops/s
Iteration   3: 177386.734 ops/s
Iteration   4: 177008.044 ops/s
Iteration   5: 177621.870 ops/s
Iteration   6: 178078.852 ops/s
Iteration   7: 177680.595 ops/s
Iteration   8: 177924.761 ops/s
Iteration   9: 177193.822 ops/s
Iteration  10: 177882.846 ops/s
Iteration  11: 177065.751 ops/s
Iteration  12: 178273.880 ops/s
Iteration  13: 177530.598 ops/s
Iteration  14: 178260.160 ops/s
Iteration  15: 177770.235 ops/s
Iteration  16: 176718.648 ops/s
Iteration  17: 177249.369 ops/s
Iteration  18: 177289.904 ops/s
Iteration  19: 177125.638 ops/s
Iteration  20: 177480.959 ops/s
Iteration  21: 178124.351 ops/s
Iteration  22: 177555.060 ops/s
Iteration  23: 177303.730 ops/s
Iteration  24: 178276.402 ops/s
Iteration  25: 178216.795 ops/s
Iteration  26: 177874.703 ops/s
Iteration  27: 177158.736 ops/s
Iteration  28: 177961.080 ops/s
Iteration  29: 177328.554 ops/s
Iteration  30: 177893.685 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1023._Benchmark.benchmark_Cluster_1023":
  177605.278 ±(99.9%) 290.066 ops/s [Average]
  (min, avg, max) = (176718.648, 177605.278, 178276.402), stdev = 434.157
  CI (99.9%): [177315.212, 177895.343] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1023._Benchmark.benchmark_Cluster_1023  thrpt   30  177605.278 ± 290.066  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1024._Benchmark.benchmark_Cluster_1024$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1024._Benchmark.benchmark_Cluster_1024

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 65635.511 ops/s
# Warmup Iteration   2: 99884.459 ops/s
# Warmup Iteration   3: 111425.750 ops/s
# Warmup Iteration   4: 116284.703 ops/s
# Warmup Iteration   5: 117794.148 ops/s
# Warmup Iteration   6: 117774.283 ops/s
# Warmup Iteration   7: 117701.911 ops/s
# Warmup Iteration   8: 118470.609 ops/s
# Warmup Iteration   9: 118175.438 ops/s
# Warmup Iteration  10: 117669.510 ops/s
# Warmup Iteration  11: 117333.238 ops/s
# Warmup Iteration  12: 117629.123 ops/s
# Warmup Iteration  13: 117191.051 ops/s
# Warmup Iteration  14: 118379.903 ops/s
# Warmup Iteration  15: 117395.584 ops/s
# Warmup Iteration  16: 117137.352 ops/s
# Warmup Iteration  17: 122064.935 ops/s
# Warmup Iteration  18: 121617.471 ops/s
# Warmup Iteration  19: 121509.942 ops/s
# Warmup Iteration  20: 121004.520 ops/s
# Warmup Iteration  21: 121554.406 ops/s
# Warmup Iteration  22: 122143.427 ops/s
# Warmup Iteration  23: 121766.463 ops/s
# Warmup Iteration  24: 121265.371 ops/s
# Warmup Iteration  25: 121692.270 ops/s
# Warmup Iteration  26: 121156.974 ops/s
# Warmup Iteration  27: 120310.657 ops/s
# Warmup Iteration  28: 121728.245 ops/s
# Warmup Iteration  29: 122094.308 ops/s
# Warmup Iteration  30: 122195.089 ops/s
Iteration   1: 122346.022 ops/s
Iteration   2: 121210.249 ops/s
Iteration   3: 121626.765 ops/s
Iteration   4: 120965.718 ops/s
Iteration   5: 121191.559 ops/s
Iteration   6: 122156.656 ops/s
Iteration   7: 121851.975 ops/s
Iteration   8: 120232.644 ops/s
Iteration   9: 121876.464 ops/s
Iteration  10: 121713.444 ops/s
Iteration  11: 121509.190 ops/s
Iteration  12: 121257.116 ops/s
Iteration  13: 121774.177 ops/s
Iteration  14: 121287.568 ops/s
Iteration  15: 121270.034 ops/s
Iteration  16: 121808.300 ops/s
Iteration  17: 121397.343 ops/s
Iteration  18: 120412.396 ops/s
Iteration  19: 121508.958 ops/s
Iteration  20: 121650.919 ops/s
Iteration  21: 121362.406 ops/s
Iteration  22: 121493.081 ops/s
Iteration  23: 121196.805 ops/s
Iteration  24: 121779.525 ops/s
Iteration  25: 121378.872 ops/s
Iteration  26: 120833.055 ops/s
Iteration  27: 121271.347 ops/s
Iteration  28: 121171.755 ops/s
Iteration  29: 121386.042 ops/s
Iteration  30: 121404.363 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1024._Benchmark.benchmark_Cluster_1024":
  121410.825 ±(99.9%) 295.699 ops/s [Average]
  (min, avg, max) = (120232.644, 121410.825, 122346.022), stdev = 442.588
  CI (99.9%): [121115.126, 121706.524] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1024._Benchmark.benchmark_Cluster_1024  thrpt   30  121410.825 ± 295.699  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1025._Benchmark.benchmark_Cluster_1025$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1025._Benchmark.benchmark_Cluster_1025

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 111525.691 ops/s
# Warmup Iteration   2: 182381.014 ops/s
# Warmup Iteration   3: 178852.755 ops/s
# Warmup Iteration   4: 194390.645 ops/s
# Warmup Iteration   5: 193749.284 ops/s
# Warmup Iteration   6: 194889.696 ops/s
# Warmup Iteration   7: 193566.922 ops/s
# Warmup Iteration   8: 194303.349 ops/s
# Warmup Iteration   9: 193375.179 ops/s
# Warmup Iteration  10: 194148.164 ops/s
# Warmup Iteration  11: 194238.779 ops/s
# Warmup Iteration  12: 194422.699 ops/s
# Warmup Iteration  13: 193953.743 ops/s
# Warmup Iteration  14: 193491.864 ops/s
# Warmup Iteration  15: 194315.930 ops/s
# Warmup Iteration  16: 192939.522 ops/s
# Warmup Iteration  17: 202726.503 ops/s
# Warmup Iteration  18: 203065.751 ops/s
# Warmup Iteration  19: 201568.514 ops/s
# Warmup Iteration  20: 203124.863 ops/s
# Warmup Iteration  21: 204042.240 ops/s
# Warmup Iteration  22: 202028.851 ops/s
# Warmup Iteration  23: 202921.643 ops/s
# Warmup Iteration  24: 203863.191 ops/s
# Warmup Iteration  25: 203065.158 ops/s
# Warmup Iteration  26: 199270.168 ops/s
# Warmup Iteration  27: 201979.221 ops/s
# Warmup Iteration  28: 203478.322 ops/s
# Warmup Iteration  29: 203132.437 ops/s
# Warmup Iteration  30: 202883.510 ops/s
Iteration   1: 201959.249 ops/s
Iteration   2: 204247.617 ops/s
Iteration   3: 203332.369 ops/s
Iteration   4: 203441.811 ops/s
Iteration   5: 202704.214 ops/s
Iteration   6: 201635.885 ops/s
Iteration   7: 204118.200 ops/s
Iteration   8: 204177.815 ops/s
Iteration   9: 202881.236 ops/s
Iteration  10: 202652.491 ops/s
Iteration  11: 202839.868 ops/s
Iteration  12: 201712.648 ops/s
Iteration  13: 203054.390 ops/s
Iteration  14: 201879.488 ops/s
Iteration  15: 200754.046 ops/s
Iteration  16: 203557.137 ops/s
Iteration  17: 203083.202 ops/s
Iteration  18: 203449.003 ops/s
Iteration  19: 202947.240 ops/s
Iteration  20: 203097.798 ops/s
Iteration  21: 202115.117 ops/s
Iteration  22: 203596.548 ops/s
Iteration  23: 202749.455 ops/s
Iteration  24: 202751.178 ops/s
Iteration  25: 202011.726 ops/s
Iteration  26: 203086.852 ops/s
Iteration  27: 202696.983 ops/s
Iteration  28: 203658.468 ops/s
Iteration  29: 202737.743 ops/s
Iteration  30: 203342.692 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1025._Benchmark.benchmark_Cluster_1025":
  202875.749 ±(99.9%) 536.207 ops/s [Average]
  (min, avg, max) = (200754.046, 202875.749, 204247.617), stdev = 802.570
  CI (99.9%): [202339.542, 203411.956] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1025._Benchmark.benchmark_Cluster_1025  thrpt   30  202875.749 ± 536.207  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1026._Benchmark.benchmark_Cluster_1026$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1026._Benchmark.benchmark_Cluster_1026

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 33109.621 ops/s
# Warmup Iteration   2: 164042.651 ops/s
# Warmup Iteration   3: 214971.631 ops/s
# Warmup Iteration   4: 247349.174 ops/s
# Warmup Iteration   5: 272881.375 ops/s
# Warmup Iteration   6: 273881.743 ops/s
# Warmup Iteration   7: 273528.727 ops/s
# Warmup Iteration   8: 272241.336 ops/s
# Warmup Iteration   9: 272448.705 ops/s
# Warmup Iteration  10: 272527.055 ops/s
# Warmup Iteration  11: 271381.136 ops/s
# Warmup Iteration  12: 271245.450 ops/s
# Warmup Iteration  13: 272510.321 ops/s
# Warmup Iteration  14: 271474.867 ops/s
# Warmup Iteration  15: 272644.535 ops/s
# Warmup Iteration  16: 272416.753 ops/s
# Warmup Iteration  17: 269847.527 ops/s
# Warmup Iteration  18: 272538.705 ops/s
# Warmup Iteration  19: 272487.970 ops/s
# Warmup Iteration  20: 272399.039 ops/s
# Warmup Iteration  21: 271941.823 ops/s
# Warmup Iteration  22: 270469.371 ops/s
# Warmup Iteration  23: 273366.781 ops/s
# Warmup Iteration  24: 271520.579 ops/s
# Warmup Iteration  25: 272077.581 ops/s
# Warmup Iteration  26: 272706.753 ops/s
# Warmup Iteration  27: 271995.830 ops/s
# Warmup Iteration  28: 272354.644 ops/s
# Warmup Iteration  29: 271365.226 ops/s
# Warmup Iteration  30: 272360.368 ops/s
Iteration   1: 272155.023 ops/s
Iteration   2: 273052.001 ops/s
Iteration   3: 270821.419 ops/s
Iteration   4: 273038.390 ops/s
Iteration   5: 271781.180 ops/s
Iteration   6: 271286.420 ops/s
Iteration   7: 271831.583 ops/s
Iteration   8: 271787.981 ops/s
Iteration   9: 273010.439 ops/s
Iteration  10: 272230.508 ops/s
Iteration  11: 271409.219 ops/s
Iteration  12: 272025.457 ops/s
Iteration  13: 270504.048 ops/s
Iteration  14: 272712.915 ops/s
Iteration  15: 270888.692 ops/s
Iteration  16: 272156.206 ops/s
Iteration  17: 272857.770 ops/s
Iteration  18: 271562.227 ops/s
Iteration  19: 270114.318 ops/s
Iteration  20: 270943.895 ops/s
Iteration  21: 272582.781 ops/s
Iteration  22: 271769.280 ops/s
Iteration  23: 272304.479 ops/s
Iteration  24: 271067.553 ops/s
Iteration  25: 271635.623 ops/s
Iteration  26: 272447.158 ops/s
Iteration  27: 271761.581 ops/s
Iteration  28: 271773.552 ops/s
Iteration  29: 271935.344 ops/s
Iteration  30: 272896.471 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1026._Benchmark.benchmark_Cluster_1026":
  271878.117 ±(99.9%) 517.732 ops/s [Average]
  (min, avg, max) = (270114.318, 271878.117, 273052.001), stdev = 774.917
  CI (99.9%): [271360.385, 272395.849] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1026._Benchmark.benchmark_Cluster_1026  thrpt   30  271878.117 ± 517.732  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1027._Benchmark.benchmark_Cluster_1027$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1027._Benchmark.benchmark_Cluster_1027

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 103952.292 ops/s
# Warmup Iteration   2: 147499.310 ops/s
# Warmup Iteration   3: 170416.093 ops/s
# Warmup Iteration   4: 171763.450 ops/s
# Warmup Iteration   5: 173075.083 ops/s
# Warmup Iteration   6: 172806.317 ops/s
# Warmup Iteration   7: 173249.718 ops/s
# Warmup Iteration   8: 173352.172 ops/s
# Warmup Iteration   9: 172495.414 ops/s
# Warmup Iteration  10: 172076.628 ops/s
# Warmup Iteration  11: 172000.718 ops/s
# Warmup Iteration  12: 171727.433 ops/s
# Warmup Iteration  13: 171605.685 ops/s
# Warmup Iteration  14: 171524.049 ops/s
# Warmup Iteration  15: 171545.083 ops/s
# Warmup Iteration  16: 171033.784 ops/s
# Warmup Iteration  17: 178588.832 ops/s
# Warmup Iteration  18: 178440.877 ops/s
# Warmup Iteration  19: 178082.627 ops/s
# Warmup Iteration  20: 178001.492 ops/s
# Warmup Iteration  21: 177291.300 ops/s
# Warmup Iteration  22: 177581.727 ops/s
# Warmup Iteration  23: 178255.425 ops/s
# Warmup Iteration  24: 178239.393 ops/s
# Warmup Iteration  25: 177678.971 ops/s
# Warmup Iteration  26: 176852.949 ops/s
# Warmup Iteration  27: 179143.046 ops/s
# Warmup Iteration  28: 179059.219 ops/s
# Warmup Iteration  29: 178557.055 ops/s
# Warmup Iteration  30: 179506.821 ops/s
Iteration   1: 179184.352 ops/s
Iteration   2: 179321.606 ops/s
Iteration   3: 178419.777 ops/s
Iteration   4: 177832.458 ops/s
Iteration   5: 178174.995 ops/s
Iteration   6: 177493.557 ops/s
Iteration   7: 177986.360 ops/s
Iteration   8: 179232.983 ops/s
Iteration   9: 179289.257 ops/s
Iteration  10: 178224.888 ops/s
Iteration  11: 178329.152 ops/s
Iteration  12: 180386.043 ops/s
Iteration  13: 177456.239 ops/s
Iteration  14: 177876.329 ops/s
Iteration  15: 179328.230 ops/s
Iteration  16: 177981.645 ops/s
Iteration  17: 178471.413 ops/s
Iteration  18: 179282.563 ops/s
Iteration  19: 177334.550 ops/s
Iteration  20: 179173.238 ops/s
Iteration  21: 178704.392 ops/s
Iteration  22: 177579.009 ops/s
Iteration  23: 178989.275 ops/s
Iteration  24: 178050.728 ops/s
Iteration  25: 178425.261 ops/s
Iteration  26: 179413.944 ops/s
Iteration  27: 179836.169 ops/s
Iteration  28: 179203.452 ops/s
Iteration  29: 178466.175 ops/s
Iteration  30: 178207.549 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1027._Benchmark.benchmark_Cluster_1027":
  178588.520 ±(99.9%) 510.959 ops/s [Average]
  (min, avg, max) = (177334.550, 178588.520, 180386.043), stdev = 764.779
  CI (99.9%): [178077.561, 179099.479] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1027._Benchmark.benchmark_Cluster_1027  thrpt   30  178588.520 ± 510.959  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1028._Benchmark.benchmark_Cluster_1028$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1028._Benchmark.benchmark_Cluster_1028

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 75222.552 ops/s
# Warmup Iteration   2: 129278.155 ops/s
# Warmup Iteration   3: 139374.727 ops/s
# Warmup Iteration   4: 150088.297 ops/s
# Warmup Iteration   5: 151262.333 ops/s
# Warmup Iteration   6: 151790.984 ops/s
# Warmup Iteration   7: 151330.126 ops/s
# Warmup Iteration   8: 150268.062 ops/s
# Warmup Iteration   9: 151750.755 ops/s
# Warmup Iteration  10: 151136.996 ops/s
# Warmup Iteration  11: 150442.201 ops/s
# Warmup Iteration  12: 149929.175 ops/s
# Warmup Iteration  13: 149890.228 ops/s
# Warmup Iteration  14: 149547.946 ops/s
# Warmup Iteration  15: 149134.961 ops/s
# Warmup Iteration  16: 149188.416 ops/s
# Warmup Iteration  17: 155773.849 ops/s
# Warmup Iteration  18: 155548.608 ops/s
# Warmup Iteration  19: 155110.202 ops/s
# Warmup Iteration  20: 155239.357 ops/s
# Warmup Iteration  21: 155073.176 ops/s
# Warmup Iteration  22: 155255.935 ops/s
# Warmup Iteration  23: 155475.327 ops/s
# Warmup Iteration  24: 154527.733 ops/s
# Warmup Iteration  25: 154887.538 ops/s
# Warmup Iteration  26: 155041.596 ops/s
# Warmup Iteration  27: 154681.543 ops/s
# Warmup Iteration  28: 155111.548 ops/s
# Warmup Iteration  29: 155329.075 ops/s
# Warmup Iteration  30: 156041.193 ops/s
Iteration   1: 155770.574 ops/s
Iteration   2: 155340.674 ops/s
Iteration   3: 154685.974 ops/s
Iteration   4: 156116.654 ops/s
Iteration   5: 155299.952 ops/s
Iteration   6: 154893.131 ops/s
Iteration   7: 155381.770 ops/s
Iteration   8: 155994.578 ops/s
Iteration   9: 154530.684 ops/s
Iteration  10: 155874.229 ops/s
Iteration  11: 155550.008 ops/s
Iteration  12: 155438.686 ops/s
Iteration  13: 154746.183 ops/s
Iteration  14: 155084.197 ops/s
Iteration  15: 155104.883 ops/s
Iteration  16: 155024.238 ops/s
Iteration  17: 154988.621 ops/s
Iteration  18: 155539.212 ops/s
Iteration  19: 155541.106 ops/s
Iteration  20: 155366.946 ops/s
Iteration  21: 156920.585 ops/s
Iteration  22: 155133.798 ops/s
Iteration  23: 155040.350 ops/s
Iteration  24: 154940.667 ops/s
Iteration  25: 155103.526 ops/s
Iteration  26: 155871.292 ops/s
Iteration  27: 156733.330 ops/s
Iteration  28: 153987.077 ops/s
Iteration  29: 154946.882 ops/s
Iteration  30: 156523.566 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1028._Benchmark.benchmark_Cluster_1028":
  155382.446 ±(99.9%) 430.147 ops/s [Average]
  (min, avg, max) = (153987.077, 155382.446, 156920.585), stdev = 643.823
  CI (99.9%): [154952.299, 155812.592] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1028._Benchmark.benchmark_Cluster_1028  thrpt   30  155382.446 ± 430.147  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1029._Benchmark.benchmark_Cluster_1029$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1029._Benchmark.benchmark_Cluster_1029

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 58572.908 ops/s
# Warmup Iteration   2: 148189.664 ops/s
# Warmup Iteration   3: 172698.292 ops/s
# Warmup Iteration   4: 186256.744 ops/s
# Warmup Iteration   5: 185953.808 ops/s
# Warmup Iteration   6: 187182.770 ops/s
# Warmup Iteration   7: 186254.578 ops/s
# Warmup Iteration   8: 185972.260 ops/s
# Warmup Iteration   9: 185081.158 ops/s
# Warmup Iteration  10: 184079.517 ops/s
# Warmup Iteration  11: 184921.234 ops/s
# Warmup Iteration  12: 186336.776 ops/s
# Warmup Iteration  13: 184420.701 ops/s
# Warmup Iteration  14: 183824.503 ops/s
# Warmup Iteration  15: 185340.307 ops/s
# Warmup Iteration  16: 185202.476 ops/s
# Warmup Iteration  17: 190943.126 ops/s
# Warmup Iteration  18: 190914.738 ops/s
# Warmup Iteration  19: 193156.361 ops/s
# Warmup Iteration  20: 193083.058 ops/s
# Warmup Iteration  21: 192217.813 ops/s
# Warmup Iteration  22: 190565.317 ops/s
# Warmup Iteration  23: 191347.889 ops/s
# Warmup Iteration  24: 189968.891 ops/s
# Warmup Iteration  25: 190972.065 ops/s
# Warmup Iteration  26: 189870.756 ops/s
# Warmup Iteration  27: 189476.867 ops/s
# Warmup Iteration  28: 191079.894 ops/s
# Warmup Iteration  29: 190442.589 ops/s
# Warmup Iteration  30: 190859.805 ops/s
Iteration   1: 190272.372 ops/s
Iteration   2: 189063.643 ops/s
Iteration   3: 191248.282 ops/s
Iteration   4: 190008.521 ops/s
Iteration   5: 190189.656 ops/s
Iteration   6: 189583.862 ops/s
Iteration   7: 189987.754 ops/s
Iteration   8: 190872.911 ops/s
Iteration   9: 190107.656 ops/s
Iteration  10: 189779.541 ops/s
Iteration  11: 190617.284 ops/s
Iteration  12: 190054.626 ops/s
Iteration  13: 190517.339 ops/s
Iteration  14: 189890.539 ops/s
Iteration  15: 191148.818 ops/s
Iteration  16: 190134.002 ops/s
Iteration  17: 190649.941 ops/s
Iteration  18: 191921.524 ops/s
Iteration  19: 191120.967 ops/s
Iteration  20: 192581.744 ops/s
Iteration  21: 191641.962 ops/s
Iteration  22: 190102.448 ops/s
Iteration  23: 190928.834 ops/s
Iteration  24: 190534.920 ops/s
Iteration  25: 192610.433 ops/s
Iteration  26: 192099.408 ops/s
Iteration  27: 191484.215 ops/s
Iteration  28: 191590.883 ops/s
Iteration  29: 191576.125 ops/s
Iteration  30: 191571.326 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1029._Benchmark.benchmark_Cluster_1029":
  190796.384 ±(99.9%) 599.073 ops/s [Average]
  (min, avg, max) = (189063.643, 190796.384, 192610.433), stdev = 896.664
  CI (99.9%): [190197.312, 191395.457] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1029._Benchmark.benchmark_Cluster_1029  thrpt   30  190796.384 ± 599.073  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_103._Benchmark.benchmark_Cluster_103$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_103._Benchmark.benchmark_Cluster_103

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 38395.767 ops/s
# Warmup Iteration   2: 24592.313 ops/s
# Warmup Iteration   3: 24801.080 ops/s
# Warmup Iteration   4: 24957.622 ops/s
# Warmup Iteration   5: 24105.739 ops/s
# Warmup Iteration   6: 25486.587 ops/s
# Warmup Iteration   7: 23902.532 ops/s
# Warmup Iteration   8: 24729.586 ops/s
# Warmup Iteration   9: 24744.164 ops/s
# Warmup Iteration  10: 25176.798 ops/s
# Warmup Iteration  11: 24613.400 ops/s
# Warmup Iteration  12: 24332.500 ops/s
# Warmup Iteration  13: 24539.990 ops/s
# Warmup Iteration  14: 24694.324 ops/s
# Warmup Iteration  15: 24230.826 ops/s
# Warmup Iteration  16: 24604.973 ops/s
# Warmup Iteration  17: 24255.485 ops/s
# Warmup Iteration  18: 24717.095 ops/s
# Warmup Iteration  19: 24221.052 ops/s
# Warmup Iteration  20: 24369.898 ops/s
# Warmup Iteration  21: 25249.237 ops/s
# Warmup Iteration  22: 24216.225 ops/s
# Warmup Iteration  23: 24847.520 ops/s
# Warmup Iteration  24: 24365.189 ops/s
# Warmup Iteration  25: 24421.750 ops/s
# Warmup Iteration  26: 24424.392 ops/s
# Warmup Iteration  27: 24494.484 ops/s
# Warmup Iteration  28: 24607.335 ops/s
# Warmup Iteration  29: 24701.064 ops/s
# Warmup Iteration  30: 24208.748 ops/s
Iteration   1: 24288.109 ops/s
Iteration   2: 24678.110 ops/s
Iteration   3: 28484.425 ops/s
Iteration   4: 24449.183 ops/s
Iteration   5: 24508.971 ops/s
Iteration   6: 24369.696 ops/s
Iteration   7: 27746.257 ops/s
Iteration   8: 24576.313 ops/s
Iteration   9: 24337.658 ops/s
Iteration  10: 24411.161 ops/s
Iteration  11: 24322.668 ops/s
Iteration  12: 24451.411 ops/s
Iteration  13: 24427.814 ops/s
Iteration  14: 24400.019 ops/s
Iteration  15: 23874.943 ops/s
Iteration  16: 27051.251 ops/s
Iteration  17: 23612.947 ops/s
Iteration  18: 24903.419 ops/s
Iteration  19: 24286.712 ops/s
Iteration  20: 24131.159 ops/s
Iteration  21: 24150.614 ops/s
Iteration  22: 24860.306 ops/s
Iteration  23: 24174.225 ops/s
Iteration  24: 23808.268 ops/s
Iteration  25: 24440.297 ops/s
Iteration  26: 24075.521 ops/s
Iteration  27: 24014.328 ops/s
Iteration  28: 23904.383 ops/s
Iteration  29: 24167.703 ops/s
Iteration  30: 24177.085 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_103._Benchmark.benchmark_Cluster_103":
  24636.165 ±(99.9%) 743.350 ops/s [Average]
  (min, avg, max) = (23612.947, 24636.165, 28484.425), stdev = 1112.612
  CI (99.9%): [23892.815, 25379.516] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_103._Benchmark.benchmark_Cluster_103  thrpt   30  24636.165 ± 743.350  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1030._Benchmark.benchmark_Cluster_1030$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1030._Benchmark.benchmark_Cluster_1030

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 54748.281 ops/s
# Warmup Iteration   2: 92960.141 ops/s
# Warmup Iteration   3: 136858.587 ops/s
# Warmup Iteration   4: 148187.241 ops/s
# Warmup Iteration   5: 149311.485 ops/s
# Warmup Iteration   6: 149296.625 ops/s
# Warmup Iteration   7: 149244.785 ops/s
# Warmup Iteration   8: 148879.986 ops/s
# Warmup Iteration   9: 149312.526 ops/s
# Warmup Iteration  10: 148254.771 ops/s
# Warmup Iteration  11: 147687.612 ops/s
# Warmup Iteration  12: 148657.946 ops/s
# Warmup Iteration  13: 149215.677 ops/s
# Warmup Iteration  14: 147649.043 ops/s
# Warmup Iteration  15: 148121.760 ops/s
# Warmup Iteration  16: 148379.836 ops/s
# Warmup Iteration  17: 154720.386 ops/s
# Warmup Iteration  18: 153858.966 ops/s
# Warmup Iteration  19: 153213.197 ops/s
# Warmup Iteration  20: 155159.128 ops/s
# Warmup Iteration  21: 153737.004 ops/s
# Warmup Iteration  22: 153879.497 ops/s
# Warmup Iteration  23: 153829.855 ops/s
# Warmup Iteration  24: 154380.616 ops/s
# Warmup Iteration  25: 153482.608 ops/s
# Warmup Iteration  26: 154041.959 ops/s
# Warmup Iteration  27: 154595.612 ops/s
# Warmup Iteration  28: 154160.206 ops/s
# Warmup Iteration  29: 154407.072 ops/s
# Warmup Iteration  30: 154002.606 ops/s
Iteration   1: 153306.089 ops/s
Iteration   2: 153733.607 ops/s
Iteration   3: 154278.606 ops/s
Iteration   4: 154710.086 ops/s
Iteration   5: 154456.406 ops/s
Iteration   6: 153526.813 ops/s
Iteration   7: 154005.363 ops/s
Iteration   8: 154166.002 ops/s
Iteration   9: 153171.725 ops/s
Iteration  10: 153538.022 ops/s
Iteration  11: 154180.992 ops/s
Iteration  12: 154718.077 ops/s
Iteration  13: 154484.204 ops/s
Iteration  14: 154888.248 ops/s
Iteration  15: 154985.782 ops/s
Iteration  16: 153630.457 ops/s
Iteration  17: 153832.215 ops/s
Iteration  18: 154005.647 ops/s
Iteration  19: 154283.677 ops/s
Iteration  20: 154304.704 ops/s
Iteration  21: 153314.839 ops/s
Iteration  22: 154270.559 ops/s
Iteration  23: 153662.240 ops/s
Iteration  24: 154407.864 ops/s
Iteration  25: 153776.244 ops/s
Iteration  26: 153904.156 ops/s
Iteration  27: 153977.307 ops/s
Iteration  28: 154333.208 ops/s
Iteration  29: 154301.984 ops/s
Iteration  30: 154231.128 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1030._Benchmark.benchmark_Cluster_1030":
  154079.542 ±(99.9%) 311.993 ops/s [Average]
  (min, avg, max) = (153171.725, 154079.542, 154985.782), stdev = 466.976
  CI (99.9%): [153767.549, 154391.534] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1030._Benchmark.benchmark_Cluster_1030  thrpt   30  154079.542 ± 311.993  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1031._Benchmark.benchmark_Cluster_1031$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1031._Benchmark.benchmark_Cluster_1031

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 95045.580 ops/s
# Warmup Iteration   2: 147507.304 ops/s
# Warmup Iteration   3: 153899.563 ops/s
# Warmup Iteration   4: 172780.500 ops/s
# Warmup Iteration   5: 173471.194 ops/s
# Warmup Iteration   6: 173592.334 ops/s
# Warmup Iteration   7: 173810.002 ops/s
# Warmup Iteration   8: 173821.037 ops/s
# Warmup Iteration   9: 174038.795 ops/s
# Warmup Iteration  10: 173485.306 ops/s
# Warmup Iteration  11: 174049.606 ops/s
# Warmup Iteration  12: 174370.129 ops/s
# Warmup Iteration  13: 172420.116 ops/s
# Warmup Iteration  14: 173171.579 ops/s
# Warmup Iteration  15: 172041.731 ops/s
# Warmup Iteration  16: 174129.117 ops/s
# Warmup Iteration  17: 178606.745 ops/s
# Warmup Iteration  18: 179437.954 ops/s
# Warmup Iteration  19: 177195.962 ops/s
# Warmup Iteration  20: 177063.804 ops/s
# Warmup Iteration  21: 179490.222 ops/s
# Warmup Iteration  22: 177501.069 ops/s
# Warmup Iteration  23: 177513.222 ops/s
# Warmup Iteration  24: 178546.339 ops/s
# Warmup Iteration  25: 176828.600 ops/s
# Warmup Iteration  26: 177858.641 ops/s
# Warmup Iteration  27: 176136.636 ops/s
# Warmup Iteration  28: 176035.778 ops/s
# Warmup Iteration  29: 178291.646 ops/s
# Warmup Iteration  30: 176785.672 ops/s
Iteration   1: 177458.760 ops/s
Iteration   2: 178571.580 ops/s
Iteration   3: 177925.185 ops/s
Iteration   4: 178216.106 ops/s
Iteration   5: 179865.947 ops/s
Iteration   6: 177503.511 ops/s
Iteration   7: 178489.611 ops/s
Iteration   8: 177401.558 ops/s
Iteration   9: 178586.857 ops/s
Iteration  10: 177602.789 ops/s
Iteration  11: 177606.634 ops/s
Iteration  12: 177257.701 ops/s
Iteration  13: 178428.303 ops/s
Iteration  14: 178041.554 ops/s
Iteration  15: 176915.005 ops/s
Iteration  16: 178011.286 ops/s
Iteration  17: 177056.494 ops/s
Iteration  18: 178590.957 ops/s
Iteration  19: 178706.481 ops/s
Iteration  20: 177767.895 ops/s
Iteration  21: 178296.740 ops/s
Iteration  22: 177656.388 ops/s
Iteration  23: 177379.200 ops/s
Iteration  24: 178268.343 ops/s
Iteration  25: 177776.002 ops/s
Iteration  26: 178260.915 ops/s
Iteration  27: 178757.184 ops/s
Iteration  28: 179230.172 ops/s
Iteration  29: 178568.825 ops/s
Iteration  30: 178843.902 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1031._Benchmark.benchmark_Cluster_1031":
  178101.396 ±(99.9%) 446.578 ops/s [Average]
  (min, avg, max) = (176915.005, 178101.396, 179865.947), stdev = 668.416
  CI (99.9%): [177654.819, 178547.974] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1031._Benchmark.benchmark_Cluster_1031  thrpt   30  178101.396 ± 446.578  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1032._Benchmark.benchmark_Cluster_1032$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1032._Benchmark.benchmark_Cluster_1032

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 67127.350 ops/s
# Warmup Iteration   2: 121893.228 ops/s
# Warmup Iteration   3: 140439.591 ops/s
# Warmup Iteration   4: 140511.402 ops/s
# Warmup Iteration   5: 142165.478 ops/s
# Warmup Iteration   6: 142458.728 ops/s
# Warmup Iteration   7: 142284.201 ops/s
# Warmup Iteration   8: 141241.922 ops/s
# Warmup Iteration   9: 140518.285 ops/s
# Warmup Iteration  10: 141061.068 ops/s
# Warmup Iteration  11: 141629.791 ops/s
# Warmup Iteration  12: 141643.620 ops/s
# Warmup Iteration  13: 141425.711 ops/s
# Warmup Iteration  14: 141799.983 ops/s
# Warmup Iteration  15: 140866.052 ops/s
# Warmup Iteration  16: 141231.741 ops/s
# Warmup Iteration  17: 150256.716 ops/s
# Warmup Iteration  18: 149433.444 ops/s
# Warmup Iteration  19: 151361.217 ops/s
# Warmup Iteration  20: 151551.206 ops/s
# Warmup Iteration  21: 151489.068 ops/s
# Warmup Iteration  22: 151229.361 ops/s
# Warmup Iteration  23: 150785.610 ops/s
# Warmup Iteration  24: 151526.528 ops/s
# Warmup Iteration  25: 150571.291 ops/s
# Warmup Iteration  26: 150463.263 ops/s
# Warmup Iteration  27: 150785.306 ops/s
# Warmup Iteration  28: 150130.906 ops/s
# Warmup Iteration  29: 151072.606 ops/s
# Warmup Iteration  30: 150590.694 ops/s
Iteration   1: 150066.356 ops/s
Iteration   2: 150841.323 ops/s
Iteration   3: 150231.420 ops/s
Iteration   4: 150308.664 ops/s
Iteration   5: 150613.846 ops/s
Iteration   6: 150179.343 ops/s
Iteration   7: 149923.994 ops/s
Iteration   8: 150901.920 ops/s
Iteration   9: 151288.153 ops/s
Iteration  10: 149772.890 ops/s
Iteration  11: 150730.908 ops/s
Iteration  12: 150475.530 ops/s
Iteration  13: 150962.558 ops/s
Iteration  14: 150924.260 ops/s
Iteration  15: 150192.954 ops/s
Iteration  16: 150836.305 ops/s
Iteration  17: 150139.012 ops/s
Iteration  18: 151125.417 ops/s
Iteration  19: 150901.878 ops/s
Iteration  20: 150707.612 ops/s
Iteration  21: 150848.887 ops/s
Iteration  22: 151567.117 ops/s
Iteration  23: 148744.971 ops/s
Iteration  24: 151127.005 ops/s
Iteration  25: 151255.504 ops/s
Iteration  26: 149846.497 ops/s
Iteration  27: 150727.128 ops/s
Iteration  28: 151576.748 ops/s
Iteration  29: 151002.789 ops/s
Iteration  30: 151784.099 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1032._Benchmark.benchmark_Cluster_1032":
  150653.503 ±(99.9%) 424.205 ops/s [Average]
  (min, avg, max) = (148744.971, 150653.503, 151784.099), stdev = 634.930
  CI (99.9%): [150229.298, 151077.708] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1032._Benchmark.benchmark_Cluster_1032  thrpt   30  150653.503 ± 424.205  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1033._Benchmark.benchmark_Cluster_1033$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1033._Benchmark.benchmark_Cluster_1033

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 95043.975 ops/s
# Warmup Iteration   2: 176851.443 ops/s
# Warmup Iteration   3: 177232.444 ops/s
# Warmup Iteration   4: 167584.227 ops/s
# Warmup Iteration   5: 190205.013 ops/s
# Warmup Iteration   6: 190551.887 ops/s
# Warmup Iteration   7: 189988.957 ops/s
# Warmup Iteration   8: 189862.271 ops/s
# Warmup Iteration   9: 189460.479 ops/s
# Warmup Iteration  10: 190326.652 ops/s
# Warmup Iteration  11: 189580.608 ops/s
# Warmup Iteration  12: 190213.184 ops/s
# Warmup Iteration  13: 190117.760 ops/s
# Warmup Iteration  14: 190393.330 ops/s
# Warmup Iteration  15: 189611.894 ops/s
# Warmup Iteration  16: 188399.171 ops/s
# Warmup Iteration  17: 195013.538 ops/s
# Warmup Iteration  18: 194278.829 ops/s
# Warmup Iteration  19: 194683.610 ops/s
# Warmup Iteration  20: 196029.618 ops/s
# Warmup Iteration  21: 193992.994 ops/s
# Warmup Iteration  22: 195488.855 ops/s
# Warmup Iteration  23: 196043.957 ops/s
# Warmup Iteration  24: 196189.186 ops/s
# Warmup Iteration  25: 195743.777 ops/s
# Warmup Iteration  26: 193938.194 ops/s
# Warmup Iteration  27: 195072.288 ops/s
# Warmup Iteration  28: 196414.436 ops/s
# Warmup Iteration  29: 195374.005 ops/s
# Warmup Iteration  30: 195858.602 ops/s
Iteration   1: 195603.169 ops/s
Iteration   2: 195328.848 ops/s
Iteration   3: 195448.573 ops/s
Iteration   4: 196213.108 ops/s
Iteration   5: 196025.350 ops/s
Iteration   6: 195630.426 ops/s
Iteration   7: 194558.568 ops/s
Iteration   8: 195574.905 ops/s
Iteration   9: 195696.252 ops/s
Iteration  10: 195080.771 ops/s
Iteration  11: 197179.875 ops/s
Iteration  12: 195993.195 ops/s
Iteration  13: 195150.688 ops/s
Iteration  14: 195275.269 ops/s
Iteration  15: 195940.894 ops/s
Iteration  16: 195788.799 ops/s
Iteration  17: 197399.443 ops/s
Iteration  18: 196385.045 ops/s
Iteration  19: 195531.028 ops/s
Iteration  20: 196385.872 ops/s
Iteration  21: 195424.247 ops/s
Iteration  22: 195378.059 ops/s
Iteration  23: 195906.325 ops/s
Iteration  24: 197539.817 ops/s
Iteration  25: 195702.621 ops/s
Iteration  26: 195670.745 ops/s
Iteration  27: 196537.830 ops/s
Iteration  28: 195624.040 ops/s
Iteration  29: 196319.421 ops/s
Iteration  30: 194726.339 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1033._Benchmark.benchmark_Cluster_1033":
  195833.984 ±(99.9%) 465.463 ops/s [Average]
  (min, avg, max) = (194558.568, 195833.984, 197539.817), stdev = 696.683
  CI (99.9%): [195368.521, 196299.447] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1033._Benchmark.benchmark_Cluster_1033  thrpt   30  195833.984 ± 465.463  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1034._Benchmark.benchmark_Cluster_1034$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1034._Benchmark.benchmark_Cluster_1034

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 97192.200 ops/s
# Warmup Iteration   2: 147584.415 ops/s
# Warmup Iteration   3: 174642.888 ops/s
# Warmup Iteration   4: 164667.504 ops/s
# Warmup Iteration   5: 178400.952 ops/s
# Warmup Iteration   6: 178872.390 ops/s
# Warmup Iteration   7: 177756.466 ops/s
# Warmup Iteration   8: 177672.002 ops/s
# Warmup Iteration   9: 178101.113 ops/s
# Warmup Iteration  10: 176811.606 ops/s
# Warmup Iteration  11: 177470.253 ops/s
# Warmup Iteration  12: 178846.718 ops/s
# Warmup Iteration  13: 177177.556 ops/s
# Warmup Iteration  14: 177068.495 ops/s
# Warmup Iteration  15: 176831.822 ops/s
# Warmup Iteration  16: 176576.280 ops/s
# Warmup Iteration  17: 183742.053 ops/s
# Warmup Iteration  18: 184258.959 ops/s
# Warmup Iteration  19: 184838.000 ops/s
# Warmup Iteration  20: 184595.918 ops/s
# Warmup Iteration  21: 185271.340 ops/s
# Warmup Iteration  22: 184444.615 ops/s
# Warmup Iteration  23: 185277.372 ops/s
# Warmup Iteration  24: 184048.866 ops/s
# Warmup Iteration  25: 185502.992 ops/s
# Warmup Iteration  26: 185060.713 ops/s
# Warmup Iteration  27: 183101.919 ops/s
# Warmup Iteration  28: 183829.234 ops/s
# Warmup Iteration  29: 185257.459 ops/s
# Warmup Iteration  30: 184239.448 ops/s
Iteration   1: 184634.123 ops/s
Iteration   2: 185430.305 ops/s
Iteration   3: 185617.592 ops/s
Iteration   4: 184335.774 ops/s
Iteration   5: 184425.915 ops/s
Iteration   6: 184411.998 ops/s
Iteration   7: 184779.717 ops/s
Iteration   8: 184394.019 ops/s
Iteration   9: 183803.591 ops/s
Iteration  10: 185465.506 ops/s
Iteration  11: 184304.331 ops/s
Iteration  12: 184833.685 ops/s
Iteration  13: 185376.864 ops/s
Iteration  14: 184192.361 ops/s
Iteration  15: 184594.873 ops/s
Iteration  16: 184918.691 ops/s
Iteration  17: 184987.645 ops/s
Iteration  18: 184778.698 ops/s
Iteration  19: 184660.041 ops/s
Iteration  20: 184582.056 ops/s
Iteration  21: 185239.164 ops/s
Iteration  22: 184426.677 ops/s
Iteration  23: 184789.639 ops/s
Iteration  24: 184662.895 ops/s
Iteration  25: 183603.422 ops/s
Iteration  26: 183712.551 ops/s
Iteration  27: 185568.479 ops/s
Iteration  28: 184983.607 ops/s
Iteration  29: 184412.045 ops/s
Iteration  30: 183900.624 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1034._Benchmark.benchmark_Cluster_1034":
  184660.896 ±(99.9%) 356.925 ops/s [Average]
  (min, avg, max) = (183603.422, 184660.896, 185617.592), stdev = 534.228
  CI (99.9%): [184303.972, 185017.821] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1034._Benchmark.benchmark_Cluster_1034  thrpt   30  184660.896 ± 356.925  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1035._Benchmark.benchmark_Cluster_1035$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1035._Benchmark.benchmark_Cluster_1035

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 62641.635 ops/s
# Warmup Iteration   2: 90896.038 ops/s
# Warmup Iteration   3: 125241.540 ops/s
# Warmup Iteration   4: 158377.127 ops/s
# Warmup Iteration   5: 160934.384 ops/s
# Warmup Iteration   6: 160202.563 ops/s
# Warmup Iteration   7: 159695.070 ops/s
# Warmup Iteration   8: 160191.034 ops/s
# Warmup Iteration   9: 160759.176 ops/s
# Warmup Iteration  10: 160185.288 ops/s
# Warmup Iteration  11: 159204.879 ops/s
# Warmup Iteration  12: 160051.951 ops/s
# Warmup Iteration  13: 160007.869 ops/s
# Warmup Iteration  14: 159377.520 ops/s
# Warmup Iteration  15: 157984.961 ops/s
# Warmup Iteration  16: 160288.550 ops/s
# Warmup Iteration  17: 166037.611 ops/s
# Warmup Iteration  18: 165662.139 ops/s
# Warmup Iteration  19: 165638.780 ops/s
# Warmup Iteration  20: 166127.768 ops/s
# Warmup Iteration  21: 166921.721 ops/s
# Warmup Iteration  22: 165058.637 ops/s
# Warmup Iteration  23: 165521.813 ops/s
# Warmup Iteration  24: 165889.019 ops/s
# Warmup Iteration  25: 165637.608 ops/s
# Warmup Iteration  26: 165961.216 ops/s
# Warmup Iteration  27: 164290.065 ops/s
# Warmup Iteration  28: 165889.077 ops/s
# Warmup Iteration  29: 166624.618 ops/s
# Warmup Iteration  30: 165728.770 ops/s
Iteration   1: 165025.558 ops/s
Iteration   2: 165962.616 ops/s
Iteration   3: 165992.230 ops/s
Iteration   4: 165603.680 ops/s
Iteration   5: 164962.604 ops/s
Iteration   6: 165945.097 ops/s
Iteration   7: 165880.610 ops/s
Iteration   8: 163697.417 ops/s
Iteration   9: 165998.276 ops/s
Iteration  10: 166458.067 ops/s
Iteration  11: 166509.021 ops/s
Iteration  12: 165477.184 ops/s
Iteration  13: 165513.696 ops/s
Iteration  14: 165567.021 ops/s
Iteration  15: 166007.605 ops/s
Iteration  16: 166149.702 ops/s
Iteration  17: 165066.953 ops/s
Iteration  18: 165353.513 ops/s
Iteration  19: 165151.095 ops/s
Iteration  20: 165768.245 ops/s
Iteration  21: 165137.374 ops/s
Iteration  22: 165450.007 ops/s
Iteration  23: 166546.134 ops/s
Iteration  24: 165743.038 ops/s
Iteration  25: 165166.327 ops/s
Iteration  26: 166825.264 ops/s
Iteration  27: 166270.615 ops/s
Iteration  28: 165916.098 ops/s
Iteration  29: 166098.200 ops/s
Iteration  30: 166465.092 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1035._Benchmark.benchmark_Cluster_1035":
  165723.611 ±(99.9%) 421.758 ops/s [Average]
  (min, avg, max) = (163697.417, 165723.611, 166825.264), stdev = 631.268
  CI (99.9%): [165301.853, 166145.369] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1035._Benchmark.benchmark_Cluster_1035  thrpt   30  165723.611 ± 421.758  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1036._Benchmark.benchmark_Cluster_1036$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1036._Benchmark.benchmark_Cluster_1036

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 41692.116 ops/s
# Warmup Iteration   2: 116544.672 ops/s
# Warmup Iteration   3: 145432.565 ops/s
# Warmup Iteration   4: 158702.471 ops/s
# Warmup Iteration   5: 158446.302 ops/s
# Warmup Iteration   6: 159489.336 ops/s
# Warmup Iteration   7: 159537.389 ops/s
# Warmup Iteration   8: 159116.524 ops/s
# Warmup Iteration   9: 158547.093 ops/s
# Warmup Iteration  10: 158354.670 ops/s
# Warmup Iteration  11: 158290.617 ops/s
# Warmup Iteration  12: 158216.167 ops/s
# Warmup Iteration  13: 158386.267 ops/s
# Warmup Iteration  14: 158610.709 ops/s
# Warmup Iteration  15: 158985.167 ops/s
# Warmup Iteration  16: 158300.689 ops/s
# Warmup Iteration  17: 164662.030 ops/s
# Warmup Iteration  18: 163710.963 ops/s
# Warmup Iteration  19: 164717.293 ops/s
# Warmup Iteration  20: 164373.100 ops/s
# Warmup Iteration  21: 164176.186 ops/s
# Warmup Iteration  22: 163762.191 ops/s
# Warmup Iteration  23: 164599.118 ops/s
# Warmup Iteration  24: 163858.722 ops/s
# Warmup Iteration  25: 164140.049 ops/s
# Warmup Iteration  26: 163035.308 ops/s
# Warmup Iteration  27: 163138.407 ops/s
# Warmup Iteration  28: 163989.237 ops/s
# Warmup Iteration  29: 164308.733 ops/s
# Warmup Iteration  30: 164587.434 ops/s
Iteration   1: 163991.478 ops/s
Iteration   2: 163352.082 ops/s
Iteration   3: 164418.024 ops/s
Iteration   4: 163585.201 ops/s
Iteration   5: 163873.972 ops/s
Iteration   6: 164467.371 ops/s
Iteration   7: 163358.481 ops/s
Iteration   8: 163426.051 ops/s
Iteration   9: 163885.814 ops/s
Iteration  10: 163954.851 ops/s
Iteration  11: 164098.387 ops/s
Iteration  12: 164012.975 ops/s
Iteration  13: 164817.561 ops/s
Iteration  14: 163209.182 ops/s
Iteration  15: 162690.667 ops/s
Iteration  16: 163764.913 ops/s
Iteration  17: 163741.663 ops/s
Iteration  18: 163687.881 ops/s
Iteration  19: 164429.597 ops/s
Iteration  20: 163642.019 ops/s
Iteration  21: 164305.031 ops/s
Iteration  22: 163968.531 ops/s
Iteration  23: 163047.270 ops/s
Iteration  24: 163743.841 ops/s
Iteration  25: 164100.048 ops/s
Iteration  26: 163681.951 ops/s
Iteration  27: 163431.646 ops/s
Iteration  28: 164074.717 ops/s
Iteration  29: 164057.543 ops/s
Iteration  30: 162387.333 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1036._Benchmark.benchmark_Cluster_1036":
  163773.536 ±(99.9%) 348.262 ops/s [Average]
  (min, avg, max) = (162387.333, 163773.536, 164817.561), stdev = 521.262
  CI (99.9%): [163425.274, 164121.798] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1036._Benchmark.benchmark_Cluster_1036  thrpt   30  163773.536 ± 348.262  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1037._Benchmark.benchmark_Cluster_1037$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1037._Benchmark.benchmark_Cluster_1037

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 81614.450 ops/s
# Warmup Iteration   2: 140423.178 ops/s
# Warmup Iteration   3: 139218.996 ops/s
# Warmup Iteration   4: 150640.693 ops/s
# Warmup Iteration   5: 151183.348 ops/s
# Warmup Iteration   6: 150032.487 ops/s
# Warmup Iteration   7: 151277.176 ops/s
# Warmup Iteration   8: 150063.304 ops/s
# Warmup Iteration   9: 150372.443 ops/s
# Warmup Iteration  10: 150604.911 ops/s
# Warmup Iteration  11: 149895.233 ops/s
# Warmup Iteration  12: 149952.744 ops/s
# Warmup Iteration  13: 150098.135 ops/s
# Warmup Iteration  14: 149744.387 ops/s
# Warmup Iteration  15: 150095.301 ops/s
# Warmup Iteration  16: 149841.047 ops/s
# Warmup Iteration  17: 157228.043 ops/s
# Warmup Iteration  18: 156897.919 ops/s
# Warmup Iteration  19: 157779.363 ops/s
# Warmup Iteration  20: 156246.008 ops/s
# Warmup Iteration  21: 157316.360 ops/s
# Warmup Iteration  22: 157225.107 ops/s
# Warmup Iteration  23: 158115.628 ops/s
# Warmup Iteration  24: 157618.249 ops/s
# Warmup Iteration  25: 157552.918 ops/s
# Warmup Iteration  26: 157307.699 ops/s
# Warmup Iteration  27: 157740.277 ops/s
# Warmup Iteration  28: 157720.579 ops/s
# Warmup Iteration  29: 156724.161 ops/s
# Warmup Iteration  30: 157227.349 ops/s
Iteration   1: 156679.338 ops/s
Iteration   2: 157421.322 ops/s
Iteration   3: 157359.444 ops/s
Iteration   4: 158095.940 ops/s
Iteration   5: 157171.686 ops/s
Iteration   6: 156914.488 ops/s
Iteration   7: 158163.363 ops/s
Iteration   8: 157892.803 ops/s
Iteration   9: 157416.084 ops/s
Iteration  10: 157479.585 ops/s
Iteration  11: 158141.679 ops/s
Iteration  12: 157421.771 ops/s
Iteration  13: 158015.123 ops/s
Iteration  14: 157260.668 ops/s
Iteration  15: 157301.883 ops/s
Iteration  16: 157775.462 ops/s
Iteration  17: 157146.514 ops/s
Iteration  18: 156838.553 ops/s
Iteration  19: 157051.237 ops/s
Iteration  20: 157055.092 ops/s
Iteration  21: 157775.123 ops/s
Iteration  22: 157890.158 ops/s
Iteration  23: 157235.338 ops/s
Iteration  24: 156891.675 ops/s
Iteration  25: 157170.600 ops/s
Iteration  26: 157316.044 ops/s
Iteration  27: 157679.774 ops/s
Iteration  28: 157306.805 ops/s
Iteration  29: 157038.405 ops/s
Iteration  30: 157591.220 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1037._Benchmark.benchmark_Cluster_1037":
  157416.573 ±(99.9%) 272.295 ops/s [Average]
  (min, avg, max) = (156679.338, 157416.573, 158163.363), stdev = 407.559
  CI (99.9%): [157144.277, 157688.868] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1037._Benchmark.benchmark_Cluster_1037  thrpt   30  157416.573 ± 272.295  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1038._Benchmark.benchmark_Cluster_1038$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1038._Benchmark.benchmark_Cluster_1038

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 106260.449 ops/s
# Warmup Iteration   2: 148907.216 ops/s
# Warmup Iteration   3: 162203.330 ops/s
# Warmup Iteration   4: 147629.623 ops/s
# Warmup Iteration   5: 168969.423 ops/s
# Warmup Iteration   6: 169727.363 ops/s
# Warmup Iteration   7: 169165.418 ops/s
# Warmup Iteration   8: 169058.061 ops/s
# Warmup Iteration   9: 169369.532 ops/s
# Warmup Iteration  10: 169057.076 ops/s
# Warmup Iteration  11: 168826.419 ops/s
# Warmup Iteration  12: 169535.195 ops/s
# Warmup Iteration  13: 168750.358 ops/s
# Warmup Iteration  14: 168962.960 ops/s
# Warmup Iteration  15: 169770.693 ops/s
# Warmup Iteration  16: 168948.588 ops/s
# Warmup Iteration  17: 174148.588 ops/s
# Warmup Iteration  18: 174759.198 ops/s
# Warmup Iteration  19: 173447.770 ops/s
# Warmup Iteration  20: 175515.770 ops/s
# Warmup Iteration  21: 175111.971 ops/s
# Warmup Iteration  22: 174299.195 ops/s
# Warmup Iteration  23: 173810.605 ops/s
# Warmup Iteration  24: 173975.787 ops/s
# Warmup Iteration  25: 174526.629 ops/s
# Warmup Iteration  26: 174436.063 ops/s
# Warmup Iteration  27: 174282.804 ops/s
# Warmup Iteration  28: 173329.914 ops/s
# Warmup Iteration  29: 175064.056 ops/s
# Warmup Iteration  30: 173888.998 ops/s
Iteration   1: 174428.852 ops/s
Iteration   2: 174381.175 ops/s
Iteration   3: 173792.285 ops/s
Iteration   4: 174225.000 ops/s
Iteration   5: 173961.977 ops/s
Iteration   6: 173549.051 ops/s
Iteration   7: 174281.396 ops/s
Iteration   8: 175015.209 ops/s
Iteration   9: 175056.598 ops/s
Iteration  10: 174802.660 ops/s
Iteration  11: 174417.174 ops/s
Iteration  12: 174388.863 ops/s
Iteration  13: 174674.768 ops/s
Iteration  14: 173706.130 ops/s
Iteration  15: 174184.091 ops/s
Iteration  16: 173591.062 ops/s
Iteration  17: 173929.833 ops/s
Iteration  18: 174079.501 ops/s
Iteration  19: 174897.175 ops/s
Iteration  20: 173257.155 ops/s
Iteration  21: 174047.878 ops/s
Iteration  22: 173900.249 ops/s
Iteration  23: 173629.080 ops/s
Iteration  24: 174490.903 ops/s
Iteration  25: 174485.034 ops/s
Iteration  26: 174346.345 ops/s
Iteration  27: 174447.712 ops/s
Iteration  28: 173264.938 ops/s
Iteration  29: 173855.135 ops/s
Iteration  30: 175370.494 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1038._Benchmark.benchmark_Cluster_1038":
  174215.257 ±(99.9%) 349.377 ops/s [Average]
  (min, avg, max) = (173257.155, 174215.257, 175370.494), stdev = 522.931
  CI (99.9%): [173865.880, 174564.634] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1038._Benchmark.benchmark_Cluster_1038  thrpt   30  174215.257 ± 349.377  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1039._Benchmark.benchmark_Cluster_1039$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1039._Benchmark.benchmark_Cluster_1039

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 67444.380 ops/s
# Warmup Iteration   2: 131586.266 ops/s
# Warmup Iteration   3: 127360.800 ops/s
# Warmup Iteration   4: 145669.772 ops/s
# Warmup Iteration   5: 146105.219 ops/s
# Warmup Iteration   6: 146669.630 ops/s
# Warmup Iteration   7: 146592.255 ops/s
# Warmup Iteration   8: 145845.164 ops/s
# Warmup Iteration   9: 145414.454 ops/s
# Warmup Iteration  10: 145588.138 ops/s
# Warmup Iteration  11: 145562.903 ops/s
# Warmup Iteration  12: 144351.181 ops/s
# Warmup Iteration  13: 144295.574 ops/s
# Warmup Iteration  14: 144837.176 ops/s
# Warmup Iteration  15: 144753.839 ops/s
# Warmup Iteration  16: 144646.941 ops/s
# Warmup Iteration  17: 150098.724 ops/s
# Warmup Iteration  18: 151767.425 ops/s
# Warmup Iteration  19: 151973.210 ops/s
# Warmup Iteration  20: 151273.443 ops/s
# Warmup Iteration  21: 149756.639 ops/s
# Warmup Iteration  22: 150486.762 ops/s
# Warmup Iteration  23: 150967.003 ops/s
# Warmup Iteration  24: 151219.403 ops/s
# Warmup Iteration  25: 151484.495 ops/s
# Warmup Iteration  26: 151324.734 ops/s
# Warmup Iteration  27: 151376.419 ops/s
# Warmup Iteration  28: 151264.781 ops/s
# Warmup Iteration  29: 150714.919 ops/s
# Warmup Iteration  30: 150568.277 ops/s
Iteration   1: 150734.533 ops/s
Iteration   2: 151435.869 ops/s
Iteration   3: 150314.594 ops/s
Iteration   4: 150599.873 ops/s
Iteration   5: 151048.043 ops/s
Iteration   6: 150957.974 ops/s
Iteration   7: 150948.476 ops/s
Iteration   8: 150832.508 ops/s
Iteration   9: 150462.337 ops/s
Iteration  10: 151488.370 ops/s
Iteration  11: 151908.296 ops/s
Iteration  12: 151075.712 ops/s
Iteration  13: 150882.847 ops/s
Iteration  14: 151321.581 ops/s
Iteration  15: 150740.016 ops/s
Iteration  16: 151296.903 ops/s
Iteration  17: 150941.358 ops/s
Iteration  18: 151347.085 ops/s
Iteration  19: 151112.114 ops/s
Iteration  20: 151780.808 ops/s
Iteration  21: 151152.587 ops/s
Iteration  22: 150870.778 ops/s
Iteration  23: 151061.245 ops/s
Iteration  24: 151479.681 ops/s
Iteration  25: 151224.586 ops/s
Iteration  26: 150616.195 ops/s
Iteration  27: 151183.505 ops/s
Iteration  28: 150827.073 ops/s
Iteration  29: 150517.058 ops/s
Iteration  30: 150265.424 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1039._Benchmark.benchmark_Cluster_1039":
  151014.248 ±(99.9%) 266.217 ops/s [Average]
  (min, avg, max) = (150265.424, 151014.248, 151908.296), stdev = 398.461
  CI (99.9%): [150748.031, 151280.464] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1039._Benchmark.benchmark_Cluster_1039  thrpt   30  151014.248 ± 266.217  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_104._Benchmark.benchmark_Cluster_104$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_104._Benchmark.benchmark_Cluster_104

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 31609.556 ops/s
# Warmup Iteration   2: 57074.501 ops/s
# Warmup Iteration   3: 105844.454 ops/s
# Warmup Iteration   4: 104875.692 ops/s
# Warmup Iteration   5: 106128.896 ops/s
# Warmup Iteration   6: 137084.612 ops/s
# Warmup Iteration   7: 135598.019 ops/s
# Warmup Iteration   8: 136334.182 ops/s
# Warmup Iteration   9: 136260.355 ops/s
# Warmup Iteration  10: 137710.008 ops/s
# Warmup Iteration  11: 133265.812 ops/s
# Warmup Iteration  12: 139603.250 ops/s
# Warmup Iteration  13: 136080.456 ops/s
# Warmup Iteration  14: 135338.496 ops/s
# Warmup Iteration  15: 137623.562 ops/s
# Warmup Iteration  16: 136480.325 ops/s
# Warmup Iteration  17: 136467.937 ops/s
# Warmup Iteration  18: 138886.107 ops/s
# Warmup Iteration  19: 136189.820 ops/s
# Warmup Iteration  20: 139980.168 ops/s
# Warmup Iteration  21: 138154.583 ops/s
# Warmup Iteration  22: 136340.046 ops/s
# Warmup Iteration  23: 135087.165 ops/s
# Warmup Iteration  24: 139135.784 ops/s
# Warmup Iteration  25: 140701.078 ops/s
# Warmup Iteration  26: 141026.323 ops/s
# Warmup Iteration  27: 140254.904 ops/s
# Warmup Iteration  28: 142661.119 ops/s
# Warmup Iteration  29: 135237.766 ops/s
# Warmup Iteration  30: 141263.064 ops/s
Iteration   1: 138361.879 ops/s
Iteration   2: 139999.960 ops/s
Iteration   3: 137355.238 ops/s
Iteration   4: 133631.691 ops/s
Iteration   5: 136632.034 ops/s
Iteration   6: 137605.916 ops/s
Iteration   7: 139015.075 ops/s
Iteration   8: 139708.553 ops/s
Iteration   9: 137584.341 ops/s
Iteration  10: 138889.149 ops/s
Iteration  11: 139321.796 ops/s
Iteration  12: 139482.858 ops/s
Iteration  13: 141181.081 ops/s
Iteration  14: 139431.447 ops/s
Iteration  15: 141110.705 ops/s
Iteration  16: 141258.826 ops/s
Iteration  17: 143827.260 ops/s
Iteration  18: 142877.133 ops/s
Iteration  19: 137969.501 ops/s
Iteration  20: 141499.512 ops/s
Iteration  21: 138140.575 ops/s
Iteration  22: 137305.126 ops/s
Iteration  23: 137527.018 ops/s
Iteration  24: 140628.446 ops/s
Iteration  25: 140287.695 ops/s
Iteration  26: 133460.543 ops/s
Iteration  27: 136366.443 ops/s
Iteration  28: 137984.132 ops/s
Iteration  29: 136171.764 ops/s
Iteration  30: 142930.564 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_104._Benchmark.benchmark_Cluster_104":
  138918.209 ±(99.9%) 1643.451 ops/s [Average]
  (min, avg, max) = (133460.543, 138918.209, 143827.260), stdev = 2459.840
  CI (99.9%): [137274.758, 140561.659] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_104._Benchmark.benchmark_Cluster_104  thrpt   30  138918.209 ± 1643.451  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1040._Benchmark.benchmark_Cluster_1040$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1040._Benchmark.benchmark_Cluster_1040

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 54540.488 ops/s
# Warmup Iteration   2: 123649.631 ops/s
# Warmup Iteration   3: 136132.535 ops/s
# Warmup Iteration   4: 147737.809 ops/s
# Warmup Iteration   5: 147427.003 ops/s
# Warmup Iteration   6: 147484.060 ops/s
# Warmup Iteration   7: 147308.686 ops/s
# Warmup Iteration   8: 147267.651 ops/s
# Warmup Iteration   9: 147543.449 ops/s
# Warmup Iteration  10: 147381.687 ops/s
# Warmup Iteration  11: 147442.281 ops/s
# Warmup Iteration  12: 146177.275 ops/s
# Warmup Iteration  13: 146032.842 ops/s
# Warmup Iteration  14: 146114.564 ops/s
# Warmup Iteration  15: 147548.099 ops/s
# Warmup Iteration  16: 146646.285 ops/s
# Warmup Iteration  17: 153552.285 ops/s
# Warmup Iteration  18: 153653.609 ops/s
# Warmup Iteration  19: 152910.997 ops/s
# Warmup Iteration  20: 153225.017 ops/s
# Warmup Iteration  21: 153255.096 ops/s
# Warmup Iteration  22: 153789.373 ops/s
# Warmup Iteration  23: 154134.641 ops/s
# Warmup Iteration  24: 154392.473 ops/s
# Warmup Iteration  25: 152974.153 ops/s
# Warmup Iteration  26: 153137.124 ops/s
# Warmup Iteration  27: 153628.472 ops/s
# Warmup Iteration  28: 152529.691 ops/s
# Warmup Iteration  29: 153860.403 ops/s
# Warmup Iteration  30: 153934.696 ops/s
Iteration   1: 153373.279 ops/s
Iteration   2: 153069.395 ops/s
Iteration   3: 153363.492 ops/s
Iteration   4: 152582.737 ops/s
Iteration   5: 153059.472 ops/s
Iteration   6: 154021.581 ops/s
Iteration   7: 153242.595 ops/s
Iteration   8: 152631.822 ops/s
Iteration   9: 152140.908 ops/s
Iteration  10: 153464.721 ops/s
Iteration  11: 153498.532 ops/s
Iteration  12: 153613.558 ops/s
Iteration  13: 153609.162 ops/s
Iteration  14: 153447.085 ops/s
Iteration  15: 153123.221 ops/s
Iteration  16: 153704.694 ops/s
Iteration  17: 154066.495 ops/s
Iteration  18: 154481.774 ops/s
Iteration  19: 153236.282 ops/s
Iteration  20: 153646.373 ops/s
Iteration  21: 153407.366 ops/s
Iteration  22: 153411.356 ops/s
Iteration  23: 152457.220 ops/s
Iteration  24: 153837.779 ops/s
Iteration  25: 153198.639 ops/s
Iteration  26: 151934.709 ops/s
Iteration  27: 153742.962 ops/s
Iteration  28: 152521.113 ops/s
Iteration  29: 153127.451 ops/s
Iteration  30: 151642.230 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1040._Benchmark.benchmark_Cluster_1040":
  153221.933 ±(99.9%) 426.717 ops/s [Average]
  (min, avg, max) = (151642.230, 153221.933, 154481.774), stdev = 638.690
  CI (99.9%): [152795.217, 153648.650] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1040._Benchmark.benchmark_Cluster_1040  thrpt   30  153221.933 ± 426.717  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1041._Benchmark.benchmark_Cluster_1041$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1041._Benchmark.benchmark_Cluster_1041

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 59473.225 ops/s
# Warmup Iteration   2: 111214.518 ops/s
# Warmup Iteration   3: 130546.988 ops/s
# Warmup Iteration   4: 140959.998 ops/s
# Warmup Iteration   5: 140326.461 ops/s
# Warmup Iteration   6: 140815.058 ops/s
# Warmup Iteration   7: 140755.303 ops/s
# Warmup Iteration   8: 140414.607 ops/s
# Warmup Iteration   9: 140720.613 ops/s
# Warmup Iteration  10: 139744.059 ops/s
# Warmup Iteration  11: 140992.589 ops/s
# Warmup Iteration  12: 140185.052 ops/s
# Warmup Iteration  13: 139741.017 ops/s
# Warmup Iteration  14: 140425.191 ops/s
# Warmup Iteration  15: 140519.876 ops/s
# Warmup Iteration  16: 140570.363 ops/s
# Warmup Iteration  17: 145500.366 ops/s
# Warmup Iteration  18: 146435.890 ops/s
# Warmup Iteration  19: 145915.771 ops/s
# Warmup Iteration  20: 145497.565 ops/s
# Warmup Iteration  21: 145483.573 ops/s
# Warmup Iteration  22: 144907.705 ops/s
# Warmup Iteration  23: 144704.743 ops/s
# Warmup Iteration  24: 144052.157 ops/s
# Warmup Iteration  25: 145080.850 ops/s
# Warmup Iteration  26: 144938.182 ops/s
# Warmup Iteration  27: 144322.234 ops/s
# Warmup Iteration  28: 143870.921 ops/s
# Warmup Iteration  29: 144964.628 ops/s
# Warmup Iteration  30: 145682.517 ops/s
Iteration   1: 145061.982 ops/s
Iteration   2: 144846.339 ops/s
Iteration   3: 144303.970 ops/s
Iteration   4: 144823.541 ops/s
Iteration   5: 144383.486 ops/s
Iteration   6: 144592.576 ops/s
Iteration   7: 144098.333 ops/s
Iteration   8: 144789.995 ops/s
Iteration   9: 144523.585 ops/s
Iteration  10: 144742.538 ops/s
Iteration  11: 144379.152 ops/s
Iteration  12: 144820.458 ops/s
Iteration  13: 144545.632 ops/s
Iteration  14: 144864.978 ops/s
Iteration  15: 144919.281 ops/s
Iteration  16: 144848.497 ops/s
Iteration  17: 144613.157 ops/s
Iteration  18: 145468.974 ops/s
Iteration  19: 144521.781 ops/s
Iteration  20: 145046.928 ops/s
Iteration  21: 144979.636 ops/s
Iteration  22: 144605.334 ops/s
Iteration  23: 145274.673 ops/s
Iteration  24: 144824.654 ops/s
Iteration  25: 144350.042 ops/s
Iteration  26: 144967.728 ops/s
Iteration  27: 144209.704 ops/s
Iteration  28: 144653.775 ops/s
Iteration  29: 144330.619 ops/s
Iteration  30: 144370.066 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1041._Benchmark.benchmark_Cluster_1041":
  144692.047 ±(99.9%) 212.798 ops/s [Average]
  (min, avg, max) = (144098.333, 144692.047, 145468.974), stdev = 318.507
  CI (99.9%): [144479.249, 144904.846] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1041._Benchmark.benchmark_Cluster_1041  thrpt   30  144692.047 ± 212.798  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1042._Benchmark.benchmark_Cluster_1042$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1042._Benchmark.benchmark_Cluster_1042

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 34450.873 ops/s
# Warmup Iteration   2: 113329.257 ops/s
# Warmup Iteration   3: 137749.805 ops/s
# Warmup Iteration   4: 113025.183 ops/s
# Warmup Iteration   5: 94475.205 ops/s
# Warmup Iteration   6: 147602.758 ops/s
# Warmup Iteration   7: 66118.250 ops/s
# Warmup Iteration   8: 150085.341 ops/s
# Warmup Iteration   9: 146351.802 ops/s
# Warmup Iteration  10: 146278.119 ops/s
# Warmup Iteration  11: 151270.977 ops/s
# Warmup Iteration  12: 145637.454 ops/s
# Warmup Iteration  13: 141225.872 ops/s
# Warmup Iteration  14: 149476.462 ops/s
# Warmup Iteration  15: 140244.324 ops/s
# Warmup Iteration  16: 147092.874 ops/s
# Warmup Iteration  17: 145020.856 ops/s
# Warmup Iteration  18: 147516.464 ops/s
# Warmup Iteration  19: 149461.488 ops/s
# Warmup Iteration  20: 145197.386 ops/s
# Warmup Iteration  21: 148912.788 ops/s
# Warmup Iteration  22: 146032.276 ops/s
# Warmup Iteration  23: 144364.445 ops/s
# Warmup Iteration  24: 145321.010 ops/s
# Warmup Iteration  25: 102004.052 ops/s
# Warmup Iteration  26: 119365.203 ops/s
# Warmup Iteration  27: 116930.971 ops/s
# Warmup Iteration  28: 143491.528 ops/s
# Warmup Iteration  29: 143040.283 ops/s
# Warmup Iteration  30: 143548.656 ops/s
Iteration   1: 144657.493 ops/s
Iteration   2: 120694.453 ops/s
Iteration   3: 147639.009 ops/s
Iteration   4: 143905.563 ops/s
Iteration   5: 150623.326 ops/s
Iteration   6: 149717.216 ops/s
Iteration   7: 144212.972 ops/s
Iteration   8: 153046.914 ops/s
Iteration   9: 145913.812 ops/s
Iteration  10: 145172.583 ops/s
Iteration  11: 147999.227 ops/s
Iteration  12: 152088.779 ops/s
Iteration  13: 146678.288 ops/s
Iteration  14: 146777.880 ops/s
Iteration  15: 143390.892 ops/s
Iteration  16: 147274.615 ops/s
Iteration  17: 142936.387 ops/s
Iteration  18: 148272.403 ops/s
Iteration  19: 146413.777 ops/s
Iteration  20: 148172.897 ops/s
Iteration  21: 147205.574 ops/s
Iteration  22: 150171.767 ops/s
Iteration  23: 144179.154 ops/s
Iteration  24: 146901.594 ops/s
Iteration  25: 150466.127 ops/s
Iteration  26: 140903.378 ops/s
Iteration  27: 145960.850 ops/s
Iteration  28: 147463.625 ops/s
Iteration  29: 146225.669 ops/s
Iteration  30: 145190.886 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1042._Benchmark.benchmark_Cluster_1042":
  146008.570 ±(99.9%) 3679.848 ops/s [Average]
  (min, avg, max) = (120694.453, 146008.570, 153046.914), stdev = 5507.823
  CI (99.9%): [142328.723, 149688.418] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score      Error  Units
Cluster_1042._Benchmark.benchmark_Cluster_1042  thrpt   30  146008.570 ± 3679.848  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1043._Benchmark.benchmark_Cluster_1043$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1043._Benchmark.benchmark_Cluster_1043

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 33622.948 ops/s
# Warmup Iteration   2: 96768.908 ops/s
# Warmup Iteration   3: 99070.470 ops/s
# Warmup Iteration   4: 110612.822 ops/s
# Warmup Iteration   5: 111968.586 ops/s
# Warmup Iteration   6: 113312.977 ops/s
# Warmup Iteration   7: 110352.419 ops/s
# Warmup Iteration   8: 113627.904 ops/s
# Warmup Iteration   9: 113531.271 ops/s
# Warmup Iteration  10: 112839.509 ops/s
# Warmup Iteration  11: 110464.450 ops/s
# Warmup Iteration  12: 114086.093 ops/s
# Warmup Iteration  13: 106710.324 ops/s
# Warmup Iteration  14: 112376.700 ops/s
# Warmup Iteration  15: 110637.188 ops/s
# Warmup Iteration  16: 110188.257 ops/s
# Warmup Iteration  17: 113834.099 ops/s
# Warmup Iteration  18: 114660.863 ops/s
# Warmup Iteration  19: 113500.834 ops/s
# Warmup Iteration  20: 116055.072 ops/s
# Warmup Iteration  21: 113764.017 ops/s
# Warmup Iteration  22: 117709.396 ops/s
# Warmup Iteration  23: 113270.981 ops/s
# Warmup Iteration  24: 117248.749 ops/s
# Warmup Iteration  25: 114838.544 ops/s
# Warmup Iteration  26: 116957.402 ops/s
# Warmup Iteration  27: 115225.221 ops/s
# Warmup Iteration  28: 113621.454 ops/s
# Warmup Iteration  29: 114369.735 ops/s
# Warmup Iteration  30: 116855.210 ops/s
Iteration   1: 115418.063 ops/s
Iteration   2: 112588.939 ops/s
Iteration   3: 115516.831 ops/s
Iteration   4: 116393.152 ops/s
Iteration   5: 115011.546 ops/s
Iteration   6: 112395.822 ops/s
Iteration   7: 116694.959 ops/s
Iteration   8: 116105.502 ops/s
Iteration   9: 108239.482 ops/s
Iteration  10: 115234.566 ops/s
Iteration  11: 116562.009 ops/s
Iteration  12: 110446.856 ops/s
Iteration  13: 114359.236 ops/s
Iteration  14: 115052.964 ops/s
Iteration  15: 112200.085 ops/s
Iteration  16: 112647.457 ops/s
Iteration  17: 112632.145 ops/s
Iteration  18: 110622.784 ops/s
Iteration  19: 112491.026 ops/s
Iteration  20: 115364.249 ops/s
Iteration  21: 110354.762 ops/s
Iteration  22: 114961.007 ops/s
Iteration  23: 116012.324 ops/s
Iteration  24: 116732.132 ops/s
Iteration  25: 115383.474 ops/s
Iteration  26: 115364.590 ops/s
Iteration  27: 118067.856 ops/s
Iteration  28: 116405.835 ops/s
Iteration  29: 116736.808 ops/s
Iteration  30: 113586.988 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1043._Benchmark.benchmark_Cluster_1043":
  114319.448 ±(99.9%) 1576.055 ops/s [Average]
  (min, avg, max) = (108239.482, 114319.448, 118067.856), stdev = 2358.965
  CI (99.9%): [112743.393, 115895.503] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score      Error  Units
Cluster_1043._Benchmark.benchmark_Cluster_1043  thrpt   30  114319.448 ± 1576.055  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1044._Benchmark.benchmark_Cluster_1044$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1044._Benchmark.benchmark_Cluster_1044

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12941.458 ops/s
# Warmup Iteration   2: 82560.106 ops/s
# Warmup Iteration   3: 82700.931 ops/s
# Warmup Iteration   4: 92595.292 ops/s
# Warmup Iteration   5: 95040.234 ops/s
# Warmup Iteration   6: 128943.750 ops/s
# Warmup Iteration   7: 142107.943 ops/s
# Warmup Iteration   8: 170844.478 ops/s
# Warmup Iteration   9: 180601.670 ops/s
# Warmup Iteration  10: 180833.304 ops/s
# Warmup Iteration  11: 181370.496 ops/s
# Warmup Iteration  12: 181911.294 ops/s
# Warmup Iteration  13: 180885.565 ops/s
# Warmup Iteration  14: 181302.352 ops/s
# Warmup Iteration  15: 181304.593 ops/s
# Warmup Iteration  16: 181101.483 ops/s
# Warmup Iteration  17: 182429.700 ops/s
# Warmup Iteration  18: 182110.438 ops/s
# Warmup Iteration  19: 182064.114 ops/s
# Warmup Iteration  20: 182429.589 ops/s
# Warmup Iteration  21: 181790.764 ops/s
# Warmup Iteration  22: 180906.391 ops/s
# Warmup Iteration  23: 183158.436 ops/s
# Warmup Iteration  24: 182546.580 ops/s
# Warmup Iteration  25: 180885.688 ops/s
# Warmup Iteration  26: 182746.270 ops/s
# Warmup Iteration  27: 182555.483 ops/s
# Warmup Iteration  28: 182857.657 ops/s
# Warmup Iteration  29: 182290.403 ops/s
# Warmup Iteration  30: 181616.569 ops/s
Iteration   1: 182029.690 ops/s
Iteration   2: 181521.288 ops/s
Iteration   3: 181717.548 ops/s
Iteration   4: 182267.602 ops/s
Iteration   5: 181627.976 ops/s
Iteration   6: 181721.365 ops/s
Iteration   7: 181710.567 ops/s
Iteration   8: 182864.355 ops/s
Iteration   9: 182370.096 ops/s
Iteration  10: 181149.126 ops/s
Iteration  11: 182141.006 ops/s
Iteration  12: 182356.318 ops/s
Iteration  13: 181748.160 ops/s
Iteration  14: 181336.086 ops/s
Iteration  15: 182166.521 ops/s
Iteration  16: 181936.707 ops/s
Iteration  17: 181460.677 ops/s
Iteration  18: 181435.849 ops/s
Iteration  19: 181471.166 ops/s
Iteration  20: 181860.442 ops/s
Iteration  21: 182071.778 ops/s
Iteration  22: 181730.184 ops/s
Iteration  23: 181349.397 ops/s
Iteration  24: 182328.505 ops/s
Iteration  25: 181271.962 ops/s
Iteration  26: 180832.927 ops/s
Iteration  27: 182556.617 ops/s
Iteration  28: 181040.695 ops/s
Iteration  29: 181516.330 ops/s
Iteration  30: 182060.001 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1044._Benchmark.benchmark_Cluster_1044":
  181788.365 ±(99.9%) 316.442 ops/s [Average]
  (min, avg, max) = (180832.927, 181788.365, 182864.355), stdev = 473.635
  CI (99.9%): [181471.923, 182104.806] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1044._Benchmark.benchmark_Cluster_1044  thrpt   30  181788.365 ± 316.442  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1045._Benchmark.benchmark_Cluster_1045$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1045._Benchmark.benchmark_Cluster_1045

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 45229.450 ops/s
# Warmup Iteration   2: 85023.115 ops/s
# Warmup Iteration   3: 122672.351 ops/s
# Warmup Iteration   4: 132986.571 ops/s
# Warmup Iteration   5: 133512.772 ops/s
# Warmup Iteration   6: 132950.791 ops/s
# Warmup Iteration   7: 133012.018 ops/s
# Warmup Iteration   8: 132570.705 ops/s
# Warmup Iteration   9: 132586.820 ops/s
# Warmup Iteration  10: 133537.175 ops/s
# Warmup Iteration  11: 132691.329 ops/s
# Warmup Iteration  12: 131463.840 ops/s
# Warmup Iteration  13: 132301.403 ops/s
# Warmup Iteration  14: 133631.432 ops/s
# Warmup Iteration  15: 132518.334 ops/s
# Warmup Iteration  16: 132670.559 ops/s
# Warmup Iteration  17: 136218.160 ops/s
# Warmup Iteration  18: 135910.258 ops/s
# Warmup Iteration  19: 135435.552 ops/s
# Warmup Iteration  20: 136463.041 ops/s
# Warmup Iteration  21: 136393.764 ops/s
# Warmup Iteration  22: 135043.560 ops/s
# Warmup Iteration  23: 135660.956 ops/s
# Warmup Iteration  24: 135140.692 ops/s
# Warmup Iteration  25: 136538.318 ops/s
# Warmup Iteration  26: 136638.448 ops/s
# Warmup Iteration  27: 136365.730 ops/s
# Warmup Iteration  28: 136217.033 ops/s
# Warmup Iteration  29: 135949.312 ops/s
# Warmup Iteration  30: 136000.367 ops/s
Iteration   1: 135902.277 ops/s
Iteration   2: 136539.163 ops/s
Iteration   3: 135555.283 ops/s
Iteration   4: 135013.697 ops/s
Iteration   5: 135718.583 ops/s
Iteration   6: 135987.988 ops/s
Iteration   7: 135413.919 ops/s
Iteration   8: 136340.108 ops/s
Iteration   9: 136561.472 ops/s
Iteration  10: 136128.940 ops/s
Iteration  11: 136088.100 ops/s
Iteration  12: 135919.987 ops/s
Iteration  13: 136545.502 ops/s
Iteration  14: 136636.205 ops/s
Iteration  15: 135888.775 ops/s
Iteration  16: 136407.263 ops/s
Iteration  17: 136451.201 ops/s
Iteration  18: 136348.764 ops/s
Iteration  19: 135515.017 ops/s
Iteration  20: 135237.195 ops/s
Iteration  21: 135843.797 ops/s
Iteration  22: 136117.521 ops/s
Iteration  23: 135717.198 ops/s
Iteration  24: 134491.253 ops/s
Iteration  25: 135032.040 ops/s
Iteration  26: 135670.030 ops/s
Iteration  27: 135967.795 ops/s
Iteration  28: 134517.512 ops/s
Iteration  29: 135046.339 ops/s
Iteration  30: 135453.220 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1045._Benchmark.benchmark_Cluster_1045":
  135801.871 ±(99.9%) 393.273 ops/s [Average]
  (min, avg, max) = (134491.253, 135801.871, 136636.205), stdev = 588.632
  CI (99.9%): [135408.599, 136195.144] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1045._Benchmark.benchmark_Cluster_1045  thrpt   30  135801.871 ± 393.273  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1046._Benchmark.benchmark_Cluster_1046$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1046._Benchmark.benchmark_Cluster_1046

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 45096.801 ops/s
# Warmup Iteration   2: 109281.337 ops/s
# Warmup Iteration   3: 125345.322 ops/s
# Warmup Iteration   4: 141478.147 ops/s
# Warmup Iteration   5: 142990.884 ops/s
# Warmup Iteration   6: 143923.932 ops/s
# Warmup Iteration   7: 144065.199 ops/s
# Warmup Iteration   8: 143468.371 ops/s
# Warmup Iteration   9: 142160.157 ops/s
# Warmup Iteration  10: 144001.681 ops/s
# Warmup Iteration  11: 143646.358 ops/s
# Warmup Iteration  12: 143412.375 ops/s
# Warmup Iteration  13: 143213.455 ops/s
# Warmup Iteration  14: 143311.280 ops/s
# Warmup Iteration  15: 142994.256 ops/s
# Warmup Iteration  16: 143021.601 ops/s
# Warmup Iteration  17: 146822.002 ops/s
# Warmup Iteration  18: 146127.686 ops/s
# Warmup Iteration  19: 145672.014 ops/s
# Warmup Iteration  20: 145904.152 ops/s
# Warmup Iteration  21: 146755.904 ops/s
# Warmup Iteration  22: 146376.289 ops/s
# Warmup Iteration  23: 145995.545 ops/s
# Warmup Iteration  24: 145851.250 ops/s
# Warmup Iteration  25: 146015.153 ops/s
# Warmup Iteration  26: 146938.328 ops/s
# Warmup Iteration  27: 146501.747 ops/s
# Warmup Iteration  28: 145432.577 ops/s
# Warmup Iteration  29: 146144.950 ops/s
# Warmup Iteration  30: 146588.093 ops/s
Iteration   1: 146126.131 ops/s
Iteration   2: 146229.631 ops/s
Iteration   3: 146850.503 ops/s
Iteration   4: 145920.374 ops/s
Iteration   5: 146029.732 ops/s
Iteration   6: 145236.352 ops/s
Iteration   7: 146421.404 ops/s
Iteration   8: 146234.310 ops/s
Iteration   9: 146670.804 ops/s
Iteration  10: 146280.478 ops/s
Iteration  11: 146004.245 ops/s
Iteration  12: 146913.884 ops/s
Iteration  13: 146591.790 ops/s
Iteration  14: 146289.965 ops/s
Iteration  15: 145706.770 ops/s
Iteration  16: 146368.912 ops/s
Iteration  17: 146029.261 ops/s
Iteration  18: 145914.201 ops/s
Iteration  19: 145531.068 ops/s
Iteration  20: 146661.049 ops/s
Iteration  21: 147059.506 ops/s
Iteration  22: 145936.691 ops/s
Iteration  23: 145835.942 ops/s
Iteration  24: 146385.862 ops/s
Iteration  25: 145710.142 ops/s
Iteration  26: 145418.385 ops/s
Iteration  27: 146752.388 ops/s
Iteration  28: 146430.149 ops/s
Iteration  29: 146939.541 ops/s
Iteration  30: 145536.189 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1046._Benchmark.benchmark_Cluster_1046":
  146200.522 ±(99.9%) 320.357 ops/s [Average]
  (min, avg, max) = (145236.352, 146200.522, 147059.506), stdev = 479.495
  CI (99.9%): [145880.165, 146520.879] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1046._Benchmark.benchmark_Cluster_1046  thrpt   30  146200.522 ± 320.357  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1047._Benchmark.benchmark_Cluster_1047$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1047._Benchmark.benchmark_Cluster_1047

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 37601.658 ops/s
# Warmup Iteration   2: 70752.664 ops/s
# Warmup Iteration   3: 102206.674 ops/s
# Warmup Iteration   4: 128009.532 ops/s
# Warmup Iteration   5: 128665.105 ops/s
# Warmup Iteration   6: 128298.805 ops/s
# Warmup Iteration   7: 128448.889 ops/s
# Warmup Iteration   8: 128447.430 ops/s
# Warmup Iteration   9: 127533.356 ops/s
# Warmup Iteration  10: 127223.758 ops/s
# Warmup Iteration  11: 127481.825 ops/s
# Warmup Iteration  12: 127368.559 ops/s
# Warmup Iteration  13: 127749.914 ops/s
# Warmup Iteration  14: 128852.225 ops/s
# Warmup Iteration  15: 128193.892 ops/s
# Warmup Iteration  16: 128526.363 ops/s
# Warmup Iteration  17: 130615.955 ops/s
# Warmup Iteration  18: 131094.361 ops/s
# Warmup Iteration  19: 130442.417 ops/s
# Warmup Iteration  20: 130043.743 ops/s
# Warmup Iteration  21: 130129.530 ops/s
# Warmup Iteration  22: 130485.507 ops/s
# Warmup Iteration  23: 130827.149 ops/s
# Warmup Iteration  24: 130773.616 ops/s
# Warmup Iteration  25: 131170.911 ops/s
# Warmup Iteration  26: 130945.939 ops/s
# Warmup Iteration  27: 131129.739 ops/s
# Warmup Iteration  28: 131293.461 ops/s
# Warmup Iteration  29: 130639.900 ops/s
# Warmup Iteration  30: 131092.243 ops/s
Iteration   1: 130666.964 ops/s
Iteration   2: 130873.488 ops/s
Iteration   3: 130692.403 ops/s
Iteration   4: 130489.893 ops/s
Iteration   5: 130831.840 ops/s
Iteration   6: 131109.823 ops/s
Iteration   7: 130745.113 ops/s
Iteration   8: 130221.480 ops/s
Iteration   9: 130597.231 ops/s
Iteration  10: 131002.022 ops/s
Iteration  11: 131184.987 ops/s
Iteration  12: 130479.687 ops/s
Iteration  13: 130639.449 ops/s
Iteration  14: 130769.874 ops/s
Iteration  15: 130843.631 ops/s
Iteration  16: 130842.493 ops/s
Iteration  17: 130718.319 ops/s
Iteration  18: 129518.905 ops/s
Iteration  19: 130441.015 ops/s
Iteration  20: 130818.026 ops/s
Iteration  21: 131689.439 ops/s
Iteration  22: 129661.575 ops/s
Iteration  23: 131004.773 ops/s
Iteration  24: 130902.254 ops/s
Iteration  25: 130771.250 ops/s
Iteration  26: 130481.821 ops/s
Iteration  27: 130623.451 ops/s
Iteration  28: 130374.671 ops/s
Iteration  29: 130362.346 ops/s
Iteration  30: 130927.041 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1047._Benchmark.benchmark_Cluster_1047":
  130676.175 ±(99.9%) 274.829 ops/s [Average]
  (min, avg, max) = (129518.905, 130676.175, 131689.439), stdev = 411.352
  CI (99.9%): [130401.346, 130951.005] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1047._Benchmark.benchmark_Cluster_1047  thrpt   30  130676.175 ± 274.829  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1048._Benchmark.benchmark_Cluster_1048$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1048._Benchmark.benchmark_Cluster_1048

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 36877.162 ops/s
# Warmup Iteration   2: 104228.448 ops/s
# Warmup Iteration   3: 129581.334 ops/s
# Warmup Iteration   4: 133704.492 ops/s
# Warmup Iteration   5: 134595.219 ops/s
# Warmup Iteration   6: 134870.410 ops/s
# Warmup Iteration   7: 134068.088 ops/s
# Warmup Iteration   8: 134610.318 ops/s
# Warmup Iteration   9: 133901.454 ops/s
# Warmup Iteration  10: 134228.127 ops/s
# Warmup Iteration  11: 134336.401 ops/s
# Warmup Iteration  12: 133339.658 ops/s
# Warmup Iteration  13: 134799.571 ops/s
# Warmup Iteration  14: 133548.887 ops/s
# Warmup Iteration  15: 134804.650 ops/s
# Warmup Iteration  16: 134195.766 ops/s
# Warmup Iteration  17: 136432.757 ops/s
# Warmup Iteration  18: 137241.198 ops/s
# Warmup Iteration  19: 137155.592 ops/s
# Warmup Iteration  20: 136946.684 ops/s
# Warmup Iteration  21: 137586.268 ops/s
# Warmup Iteration  22: 137340.547 ops/s
# Warmup Iteration  23: 136194.741 ops/s
# Warmup Iteration  24: 138450.383 ops/s
# Warmup Iteration  25: 136648.900 ops/s
# Warmup Iteration  26: 137478.556 ops/s
# Warmup Iteration  27: 136268.224 ops/s
# Warmup Iteration  28: 137769.471 ops/s
# Warmup Iteration  29: 136478.531 ops/s
# Warmup Iteration  30: 137640.602 ops/s
Iteration   1: 137412.257 ops/s
Iteration   2: 137382.013 ops/s
Iteration   3: 137464.627 ops/s
Iteration   4: 136407.588 ops/s
Iteration   5: 137065.552 ops/s
Iteration   6: 137396.622 ops/s
Iteration   7: 137355.925 ops/s
Iteration   8: 137866.522 ops/s
Iteration   9: 137387.815 ops/s
Iteration  10: 137320.743 ops/s
Iteration  11: 137857.394 ops/s
Iteration  12: 136657.968 ops/s
Iteration  13: 137834.528 ops/s
Iteration  14: 136967.528 ops/s
Iteration  15: 137142.862 ops/s
Iteration  16: 136609.095 ops/s
Iteration  17: 137281.125 ops/s
Iteration  18: 136616.488 ops/s
Iteration  19: 137240.669 ops/s
Iteration  20: 137022.158 ops/s
Iteration  21: 136474.496 ops/s
Iteration  22: 136798.750 ops/s
Iteration  23: 136507.391 ops/s
Iteration  24: 137580.017 ops/s
Iteration  25: 137205.622 ops/s
Iteration  26: 136579.230 ops/s
Iteration  27: 136633.793 ops/s
Iteration  28: 136687.020 ops/s
Iteration  29: 136964.216 ops/s
Iteration  30: 137327.815 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1048._Benchmark.benchmark_Cluster_1048":
  137101.594 ±(99.9%) 286.393 ops/s [Average]
  (min, avg, max) = (136407.588, 137101.594, 137866.522), stdev = 428.660
  CI (99.9%): [136815.201, 137387.987] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1048._Benchmark.benchmark_Cluster_1048  thrpt   30  137101.594 ± 286.393  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1049._Benchmark.benchmark_Cluster_1049$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1049._Benchmark.benchmark_Cluster_1049

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 78465.796 ops/s
# Warmup Iteration   2: 133096.126 ops/s
# Warmup Iteration   3: 149124.594 ops/s
# Warmup Iteration   4: 160661.938 ops/s
# Warmup Iteration   5: 163072.175 ops/s
# Warmup Iteration   6: 163141.291 ops/s
# Warmup Iteration   7: 162636.583 ops/s
# Warmup Iteration   8: 162575.946 ops/s
# Warmup Iteration   9: 162273.200 ops/s
# Warmup Iteration  10: 162269.781 ops/s
# Warmup Iteration  11: 162542.631 ops/s
# Warmup Iteration  12: 162193.489 ops/s
# Warmup Iteration  13: 162750.523 ops/s
# Warmup Iteration  14: 160992.171 ops/s
# Warmup Iteration  15: 161892.278 ops/s
# Warmup Iteration  16: 161663.806 ops/s
# Warmup Iteration  17: 167451.905 ops/s
# Warmup Iteration  18: 168176.166 ops/s
# Warmup Iteration  19: 167648.829 ops/s
# Warmup Iteration  20: 166912.228 ops/s
# Warmup Iteration  21: 168273.475 ops/s
# Warmup Iteration  22: 168446.910 ops/s
# Warmup Iteration  23: 167867.255 ops/s
# Warmup Iteration  24: 168401.040 ops/s
# Warmup Iteration  25: 167735.051 ops/s
# Warmup Iteration  26: 168662.210 ops/s
# Warmup Iteration  27: 167698.843 ops/s
# Warmup Iteration  28: 167361.995 ops/s
# Warmup Iteration  29: 167805.249 ops/s
# Warmup Iteration  30: 168640.752 ops/s
Iteration   1: 168666.953 ops/s
Iteration   2: 168101.104 ops/s
Iteration   3: 168033.699 ops/s
Iteration   4: 168666.430 ops/s
Iteration   5: 168540.634 ops/s
Iteration   6: 168660.775 ops/s
Iteration   7: 167731.383 ops/s
Iteration   8: 168655.576 ops/s
Iteration   9: 168657.620 ops/s
Iteration  10: 168284.982 ops/s
Iteration  11: 167346.975 ops/s
Iteration  12: 167747.558 ops/s
Iteration  13: 168451.581 ops/s
Iteration  14: 168816.864 ops/s
Iteration  15: 167613.564 ops/s
Iteration  16: 168291.782 ops/s
Iteration  17: 167937.622 ops/s
Iteration  18: 167146.761 ops/s
Iteration  19: 168088.229 ops/s
Iteration  20: 168169.936 ops/s
Iteration  21: 168348.163 ops/s
Iteration  22: 167895.589 ops/s
Iteration  23: 168782.182 ops/s
Iteration  24: 168438.066 ops/s
Iteration  25: 167863.644 ops/s
Iteration  26: 168900.684 ops/s
Iteration  27: 167464.121 ops/s
Iteration  28: 167775.993 ops/s
Iteration  29: 167579.135 ops/s
Iteration  30: 168012.268 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1049._Benchmark.benchmark_Cluster_1049":
  168155.662 ±(99.9%) 317.825 ops/s [Average]
  (min, avg, max) = (167146.761, 168155.662, 168900.684), stdev = 475.706
  CI (99.9%): [167837.837, 168473.488] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1049._Benchmark.benchmark_Cluster_1049  thrpt   30  168155.662 ± 317.825  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_105._Benchmark.benchmark_Cluster_105$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_105._Benchmark.benchmark_Cluster_105

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 306964.280 ops/s
# Warmup Iteration   2: 535209.831 ops/s
# Warmup Iteration   3: 504556.869 ops/s
# Warmup Iteration   4: 577652.075 ops/s
# Warmup Iteration   5: 600206.449 ops/s
# Warmup Iteration   6: 602775.173 ops/s
# Warmup Iteration   7: 600279.326 ops/s
# Warmup Iteration   8: 598794.183 ops/s
# Warmup Iteration   9: 598978.272 ops/s
# Warmup Iteration  10: 596325.118 ops/s
# Warmup Iteration  11: 597999.562 ops/s
# Warmup Iteration  12: 594447.542 ops/s
# Warmup Iteration  13: 596914.375 ops/s
# Warmup Iteration  14: 600015.491 ops/s
# Warmup Iteration  15: 597582.000 ops/s
# Warmup Iteration  16: 596786.556 ops/s
# Warmup Iteration  17: 616870.984 ops/s
# Warmup Iteration  18: 615669.098 ops/s
# Warmup Iteration  19: 618903.582 ops/s
# Warmup Iteration  20: 616487.361 ops/s
# Warmup Iteration  21: 615858.307 ops/s
# Warmup Iteration  22: 617331.763 ops/s
# Warmup Iteration  23: 617013.895 ops/s
# Warmup Iteration  24: 620808.355 ops/s
# Warmup Iteration  25: 617865.516 ops/s
# Warmup Iteration  26: 617840.279 ops/s
# Warmup Iteration  27: 619895.538 ops/s
# Warmup Iteration  28: 619401.427 ops/s
# Warmup Iteration  29: 618534.568 ops/s
# Warmup Iteration  30: 617502.482 ops/s
Iteration   1: 616453.434 ops/s
Iteration   2: 618569.837 ops/s
Iteration   3: 617676.113 ops/s
Iteration   4: 618244.049 ops/s
Iteration   5: 614071.830 ops/s
Iteration   6: 617361.729 ops/s
Iteration   7: 616436.037 ops/s
Iteration   8: 617397.249 ops/s
Iteration   9: 614694.366 ops/s
Iteration  10: 620476.735 ops/s
Iteration  11: 615356.857 ops/s
Iteration  12: 620076.816 ops/s
Iteration  13: 618567.007 ops/s
Iteration  14: 616734.576 ops/s
Iteration  15: 615283.989 ops/s
Iteration  16: 616613.297 ops/s
Iteration  17: 615605.704 ops/s
Iteration  18: 616240.465 ops/s
Iteration  19: 616625.309 ops/s
Iteration  20: 612788.069 ops/s
Iteration  21: 616667.578 ops/s
Iteration  22: 622115.624 ops/s
Iteration  23: 618737.512 ops/s
Iteration  24: 617697.068 ops/s
Iteration  25: 620459.946 ops/s
Iteration  26: 616241.146 ops/s
Iteration  27: 616626.582 ops/s
Iteration  28: 613929.757 ops/s
Iteration  29: 618860.732 ops/s
Iteration  30: 616641.000 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_105._Benchmark.benchmark_Cluster_105":
  617108.347 ±(99.9%) 1385.306 ops/s [Average]
  (min, avg, max) = (612788.069, 617108.347, 622115.624), stdev = 2073.461
  CI (99.9%): [615723.041, 618493.653] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_105._Benchmark.benchmark_Cluster_105  thrpt   30  617108.347 ± 1385.306  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1050._Benchmark.benchmark_Cluster_1050$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1050._Benchmark.benchmark_Cluster_1050

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 45544.761 ops/s
# Warmup Iteration   2: 100390.010 ops/s
# Warmup Iteration   3: 124568.053 ops/s
# Warmup Iteration   4: 137122.366 ops/s
# Warmup Iteration   5: 138056.925 ops/s
# Warmup Iteration   6: 137402.242 ops/s
# Warmup Iteration   7: 137491.305 ops/s
# Warmup Iteration   8: 136578.983 ops/s
# Warmup Iteration   9: 137027.557 ops/s
# Warmup Iteration  10: 137108.327 ops/s
# Warmup Iteration  11: 136380.631 ops/s
# Warmup Iteration  12: 136008.688 ops/s
# Warmup Iteration  13: 137423.486 ops/s
# Warmup Iteration  14: 136196.054 ops/s
# Warmup Iteration  15: 137030.621 ops/s
# Warmup Iteration  16: 136388.076 ops/s
# Warmup Iteration  17: 139943.625 ops/s
# Warmup Iteration  18: 138129.014 ops/s
# Warmup Iteration  19: 140063.343 ops/s
# Warmup Iteration  20: 139557.055 ops/s
# Warmup Iteration  21: 140580.333 ops/s
# Warmup Iteration  22: 139448.753 ops/s
# Warmup Iteration  23: 139115.521 ops/s
# Warmup Iteration  24: 139399.463 ops/s
# Warmup Iteration  25: 139544.834 ops/s
# Warmup Iteration  26: 138721.303 ops/s
# Warmup Iteration  27: 139484.647 ops/s
# Warmup Iteration  28: 139790.477 ops/s
# Warmup Iteration  29: 140580.198 ops/s
# Warmup Iteration  30: 140770.751 ops/s
Iteration   1: 139754.225 ops/s
Iteration   2: 139899.482 ops/s
Iteration   3: 139518.283 ops/s
Iteration   4: 139547.022 ops/s
Iteration   5: 139112.167 ops/s
Iteration   6: 139695.178 ops/s
Iteration   7: 138601.139 ops/s
Iteration   8: 138864.661 ops/s
Iteration   9: 139080.968 ops/s
Iteration  10: 139385.401 ops/s
Iteration  11: 139936.053 ops/s
Iteration  12: 140052.605 ops/s
Iteration  13: 140066.110 ops/s
Iteration  14: 139510.852 ops/s
Iteration  15: 139018.325 ops/s
Iteration  16: 139964.778 ops/s
Iteration  17: 139964.303 ops/s
Iteration  18: 138757.772 ops/s
Iteration  19: 139496.878 ops/s
Iteration  20: 138843.871 ops/s
Iteration  21: 139529.676 ops/s
Iteration  22: 139557.132 ops/s
Iteration  23: 139605.327 ops/s
Iteration  24: 139454.473 ops/s
Iteration  25: 139111.905 ops/s
Iteration  26: 139285.865 ops/s
Iteration  27: 138632.725 ops/s
Iteration  28: 139930.123 ops/s
Iteration  29: 139565.641 ops/s
Iteration  30: 139319.602 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1050._Benchmark.benchmark_Cluster_1050":
  139435.418 ±(99.9%) 286.680 ops/s [Average]
  (min, avg, max) = (138601.139, 139435.418, 140066.110), stdev = 429.090
  CI (99.9%): [139148.738, 139722.098] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1050._Benchmark.benchmark_Cluster_1050  thrpt   30  139435.418 ± 286.680  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1051._Benchmark.benchmark_Cluster_1051$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1051._Benchmark.benchmark_Cluster_1051

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 79646.973 ops/s
# Warmup Iteration   2: 135728.178 ops/s
# Warmup Iteration   3: 142376.679 ops/s
# Warmup Iteration   4: 150328.404 ops/s
# Warmup Iteration   5: 150791.837 ops/s
# Warmup Iteration   6: 150960.868 ops/s
# Warmup Iteration   7: 151203.795 ops/s
# Warmup Iteration   8: 150612.894 ops/s
# Warmup Iteration   9: 150914.737 ops/s
# Warmup Iteration  10: 150025.825 ops/s
# Warmup Iteration  11: 149349.398 ops/s
# Warmup Iteration  12: 150916.196 ops/s
# Warmup Iteration  13: 151072.970 ops/s
# Warmup Iteration  14: 149859.307 ops/s
# Warmup Iteration  15: 149912.312 ops/s
# Warmup Iteration  16: 150438.511 ops/s
# Warmup Iteration  17: 156517.643 ops/s
# Warmup Iteration  18: 155949.088 ops/s
# Warmup Iteration  19: 156639.194 ops/s
# Warmup Iteration  20: 156750.301 ops/s
# Warmup Iteration  21: 156220.425 ops/s
# Warmup Iteration  22: 156724.649 ops/s
# Warmup Iteration  23: 157426.393 ops/s
# Warmup Iteration  24: 156413.975 ops/s
# Warmup Iteration  25: 155925.061 ops/s
# Warmup Iteration  26: 156975.283 ops/s
# Warmup Iteration  27: 157195.188 ops/s
# Warmup Iteration  28: 157068.976 ops/s
# Warmup Iteration  29: 155937.296 ops/s
# Warmup Iteration  30: 156872.095 ops/s
Iteration   1: 157771.193 ops/s
Iteration   2: 156632.620 ops/s
Iteration   3: 156015.634 ops/s
Iteration   4: 155368.169 ops/s
Iteration   5: 156970.644 ops/s
Iteration   6: 157069.101 ops/s
Iteration   7: 155964.181 ops/s
Iteration   8: 156727.699 ops/s
Iteration   9: 157017.549 ops/s
Iteration  10: 156431.379 ops/s
Iteration  11: 156866.337 ops/s
Iteration  12: 157133.442 ops/s
Iteration  13: 156680.679 ops/s
Iteration  14: 155965.662 ops/s
Iteration  15: 156233.388 ops/s
Iteration  16: 156869.326 ops/s
Iteration  17: 156439.859 ops/s
Iteration  18: 157051.957 ops/s
Iteration  19: 156409.310 ops/s
Iteration  20: 156052.332 ops/s
Iteration  21: 156901.476 ops/s
Iteration  22: 157161.075 ops/s
Iteration  23: 155600.987 ops/s
Iteration  24: 156034.422 ops/s
Iteration  25: 156295.758 ops/s
Iteration  26: 156333.284 ops/s
Iteration  27: 156299.888 ops/s
Iteration  28: 155421.992 ops/s
Iteration  29: 155844.878 ops/s
Iteration  30: 156881.882 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1051._Benchmark.benchmark_Cluster_1051":
  156481.537 ±(99.9%) 379.237 ops/s [Average]
  (min, avg, max) = (155368.169, 156481.537, 157771.193), stdev = 567.624
  CI (99.9%): [156102.300, 156860.773] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1051._Benchmark.benchmark_Cluster_1051  thrpt   30  156481.537 ± 379.237  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1052._Benchmark.benchmark_Cluster_1052$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1052._Benchmark.benchmark_Cluster_1052

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 87340.756 ops/s
# Warmup Iteration   2: 146015.130 ops/s
# Warmup Iteration   3: 149560.413 ops/s
# Warmup Iteration   4: 170202.322 ops/s
# Warmup Iteration   5: 178603.691 ops/s
# Warmup Iteration   6: 177040.644 ops/s
# Warmup Iteration   7: 177109.077 ops/s
# Warmup Iteration   8: 177912.628 ops/s
# Warmup Iteration   9: 177515.149 ops/s
# Warmup Iteration  10: 178266.065 ops/s
# Warmup Iteration  11: 177287.004 ops/s
# Warmup Iteration  12: 176309.203 ops/s
# Warmup Iteration  13: 176012.017 ops/s
# Warmup Iteration  14: 177041.044 ops/s
# Warmup Iteration  15: 176846.115 ops/s
# Warmup Iteration  16: 177241.395 ops/s
# Warmup Iteration  17: 179621.253 ops/s
# Warmup Iteration  18: 179694.642 ops/s
# Warmup Iteration  19: 180425.542 ops/s
# Warmup Iteration  20: 179324.927 ops/s
# Warmup Iteration  21: 179800.593 ops/s
# Warmup Iteration  22: 180083.999 ops/s
# Warmup Iteration  23: 179873.085 ops/s
# Warmup Iteration  24: 179488.905 ops/s
# Warmup Iteration  25: 180616.717 ops/s
# Warmup Iteration  26: 180154.968 ops/s
# Warmup Iteration  27: 180643.129 ops/s
# Warmup Iteration  28: 180566.445 ops/s
# Warmup Iteration  29: 179726.491 ops/s
# Warmup Iteration  30: 179906.680 ops/s
Iteration   1: 180532.524 ops/s
Iteration   2: 180371.383 ops/s
Iteration   3: 180223.194 ops/s
Iteration   4: 179386.003 ops/s
Iteration   5: 179966.577 ops/s
Iteration   6: 180213.682 ops/s
Iteration   7: 180585.483 ops/s
Iteration   8: 180541.516 ops/s
Iteration   9: 179526.002 ops/s
Iteration  10: 178816.310 ops/s
Iteration  11: 179906.681 ops/s
Iteration  12: 180609.425 ops/s
Iteration  13: 179394.142 ops/s
Iteration  14: 178676.678 ops/s
Iteration  15: 179379.510 ops/s
Iteration  16: 180259.629 ops/s
Iteration  17: 180315.345 ops/s
Iteration  18: 178984.965 ops/s
Iteration  19: 179720.420 ops/s
Iteration  20: 179797.394 ops/s
Iteration  21: 179674.164 ops/s
Iteration  22: 177373.528 ops/s
Iteration  23: 180882.259 ops/s
Iteration  24: 180281.034 ops/s
Iteration  25: 179177.622 ops/s
Iteration  26: 178880.239 ops/s
Iteration  27: 179313.224 ops/s
Iteration  28: 179397.106 ops/s
Iteration  29: 180175.054 ops/s
Iteration  30: 180406.463 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1052._Benchmark.benchmark_Cluster_1052":
  179758.919 ±(99.9%) 502.979 ops/s [Average]
  (min, avg, max) = (177373.528, 179758.919, 180882.259), stdev = 752.836
  CI (99.9%): [179255.939, 180261.898] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1052._Benchmark.benchmark_Cluster_1052  thrpt   30  179758.919 ± 502.979  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1053._Benchmark.benchmark_Cluster_1053$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1053._Benchmark.benchmark_Cluster_1053

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 145220.107 ops/s
# Warmup Iteration   2: 238142.656 ops/s
# Warmup Iteration   3: 249201.387 ops/s
# Warmup Iteration   4: 269295.064 ops/s
# Warmup Iteration   5: 269702.161 ops/s
# Warmup Iteration   6: 271173.191 ops/s
# Warmup Iteration   7: 270307.134 ops/s
# Warmup Iteration   8: 269387.660 ops/s
# Warmup Iteration   9: 269054.861 ops/s
# Warmup Iteration  10: 269940.658 ops/s
# Warmup Iteration  11: 269732.141 ops/s
# Warmup Iteration  12: 268955.737 ops/s
# Warmup Iteration  13: 269001.863 ops/s
# Warmup Iteration  14: 269014.624 ops/s
# Warmup Iteration  15: 268745.010 ops/s
# Warmup Iteration  16: 268314.779 ops/s
# Warmup Iteration  17: 279080.217 ops/s
# Warmup Iteration  18: 279262.657 ops/s
# Warmup Iteration  19: 277316.570 ops/s
# Warmup Iteration  20: 278130.883 ops/s
# Warmup Iteration  21: 279040.723 ops/s
# Warmup Iteration  22: 278876.175 ops/s
# Warmup Iteration  23: 279682.989 ops/s
# Warmup Iteration  24: 278886.353 ops/s
# Warmup Iteration  25: 279536.816 ops/s
# Warmup Iteration  26: 279213.460 ops/s
# Warmup Iteration  27: 278470.207 ops/s
# Warmup Iteration  28: 278090.648 ops/s
# Warmup Iteration  29: 278842.049 ops/s
# Warmup Iteration  30: 278490.709 ops/s
Iteration   1: 276283.406 ops/s
Iteration   2: 279949.648 ops/s
Iteration   3: 279198.082 ops/s
Iteration   4: 277802.324 ops/s
Iteration   5: 277910.944 ops/s
Iteration   6: 278141.775 ops/s
Iteration   7: 277879.346 ops/s
Iteration   8: 277985.911 ops/s
Iteration   9: 278807.371 ops/s
Iteration  10: 278875.426 ops/s
Iteration  11: 279703.991 ops/s
Iteration  12: 278326.350 ops/s
Iteration  13: 278834.493 ops/s
Iteration  14: 279072.992 ops/s
Iteration  15: 277653.559 ops/s
Iteration  16: 278256.922 ops/s
Iteration  17: 279664.114 ops/s
Iteration  18: 279419.871 ops/s
Iteration  19: 277684.505 ops/s
Iteration  20: 278859.656 ops/s
Iteration  21: 279961.223 ops/s
Iteration  22: 276995.275 ops/s
Iteration  23: 278398.862 ops/s
Iteration  24: 280002.232 ops/s
Iteration  25: 278944.377 ops/s
Iteration  26: 277878.363 ops/s
Iteration  27: 277590.266 ops/s
Iteration  28: 278538.350 ops/s
Iteration  29: 276357.855 ops/s
Iteration  30: 280219.781 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1053._Benchmark.benchmark_Cluster_1053":
  278506.576 ±(99.9%) 687.021 ops/s [Average]
  (min, avg, max) = (276283.406, 278506.576, 280219.781), stdev = 1028.301
  CI (99.9%): [277819.554, 279193.597] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1053._Benchmark.benchmark_Cluster_1053  thrpt   30  278506.576 ± 687.021  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1054._Benchmark.benchmark_Cluster_1054$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1054._Benchmark.benchmark_Cluster_1054

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 96232.206 ops/s
# Warmup Iteration   2: 145186.003 ops/s
# Warmup Iteration   3: 154003.158 ops/s
# Warmup Iteration   4: 160986.183 ops/s
# Warmup Iteration   5: 168291.262 ops/s
# Warmup Iteration   6: 168278.930 ops/s
# Warmup Iteration   7: 168972.273 ops/s
# Warmup Iteration   8: 168393.285 ops/s
# Warmup Iteration   9: 168577.703 ops/s
# Warmup Iteration  10: 168309.152 ops/s
# Warmup Iteration  11: 168577.283 ops/s
# Warmup Iteration  12: 168470.350 ops/s
# Warmup Iteration  13: 167336.841 ops/s
# Warmup Iteration  14: 168709.945 ops/s
# Warmup Iteration  15: 167067.104 ops/s
# Warmup Iteration  16: 166530.811 ops/s
# Warmup Iteration  17: 172352.625 ops/s
# Warmup Iteration  18: 173042.323 ops/s
# Warmup Iteration  19: 173839.927 ops/s
# Warmup Iteration  20: 172596.570 ops/s
# Warmup Iteration  21: 173411.693 ops/s
# Warmup Iteration  22: 172613.552 ops/s
# Warmup Iteration  23: 173439.677 ops/s
# Warmup Iteration  24: 173623.226 ops/s
# Warmup Iteration  25: 173028.301 ops/s
# Warmup Iteration  26: 172923.468 ops/s
# Warmup Iteration  27: 173416.157 ops/s
# Warmup Iteration  28: 173159.396 ops/s
# Warmup Iteration  29: 173090.388 ops/s
# Warmup Iteration  30: 173532.417 ops/s
Iteration   1: 173152.046 ops/s
Iteration   2: 173214.957 ops/s
Iteration   3: 173008.615 ops/s
Iteration   4: 172522.037 ops/s
Iteration   5: 172818.901 ops/s
Iteration   6: 172573.005 ops/s
Iteration   7: 173233.729 ops/s
Iteration   8: 172977.676 ops/s
Iteration   9: 173083.846 ops/s
Iteration  10: 173314.835 ops/s
Iteration  11: 172574.071 ops/s
Iteration  12: 173133.896 ops/s
Iteration  13: 170918.348 ops/s
Iteration  14: 171316.140 ops/s
Iteration  15: 174012.919 ops/s
Iteration  16: 174200.987 ops/s
Iteration  17: 173298.285 ops/s
Iteration  18: 171989.318 ops/s
Iteration  19: 173261.412 ops/s
Iteration  20: 172043.194 ops/s
Iteration  21: 173343.340 ops/s
Iteration  22: 172797.347 ops/s
Iteration  23: 172640.021 ops/s
Iteration  24: 171439.217 ops/s
Iteration  25: 174042.439 ops/s
Iteration  26: 172805.019 ops/s
Iteration  27: 173394.353 ops/s
Iteration  28: 172700.561 ops/s
Iteration  29: 172296.058 ops/s
Iteration  30: 172876.921 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1054._Benchmark.benchmark_Cluster_1054":
  172832.783 ±(99.9%) 501.985 ops/s [Average]
  (min, avg, max) = (170918.348, 172832.783, 174200.987), stdev = 751.348
  CI (99.9%): [172330.798, 173334.768] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1054._Benchmark.benchmark_Cluster_1054  thrpt   30  172832.783 ± 501.985  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1055._Benchmark.benchmark_Cluster_1055$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1055._Benchmark.benchmark_Cluster_1055

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 57854.854 ops/s
# Warmup Iteration   2: 109800.743 ops/s
# Warmup Iteration   3: 135722.065 ops/s
# Warmup Iteration   4: 153856.270 ops/s
# Warmup Iteration   5: 154933.041 ops/s
# Warmup Iteration   6: 154245.142 ops/s
# Warmup Iteration   7: 154156.693 ops/s
# Warmup Iteration   8: 154068.627 ops/s
# Warmup Iteration   9: 153467.606 ops/s
# Warmup Iteration  10: 153975.255 ops/s
# Warmup Iteration  11: 153686.206 ops/s
# Warmup Iteration  12: 153637.289 ops/s
# Warmup Iteration  13: 153729.259 ops/s
# Warmup Iteration  14: 153669.789 ops/s
# Warmup Iteration  15: 153913.962 ops/s
# Warmup Iteration  16: 153512.930 ops/s
# Warmup Iteration  17: 157697.800 ops/s
# Warmup Iteration  18: 157977.292 ops/s
# Warmup Iteration  19: 157862.582 ops/s
# Warmup Iteration  20: 157875.268 ops/s
# Warmup Iteration  21: 157983.986 ops/s
# Warmup Iteration  22: 157809.272 ops/s
# Warmup Iteration  23: 158273.000 ops/s
# Warmup Iteration  24: 157330.462 ops/s
# Warmup Iteration  25: 157968.914 ops/s
# Warmup Iteration  26: 157545.161 ops/s
# Warmup Iteration  27: 157110.586 ops/s
# Warmup Iteration  28: 157998.335 ops/s
# Warmup Iteration  29: 158063.456 ops/s
# Warmup Iteration  30: 158255.471 ops/s
Iteration   1: 158555.216 ops/s
Iteration   2: 157925.618 ops/s
Iteration   3: 157826.172 ops/s
Iteration   4: 158858.282 ops/s
Iteration   5: 157552.660 ops/s
Iteration   6: 157914.863 ops/s
Iteration   7: 158031.590 ops/s
Iteration   8: 157207.051 ops/s
Iteration   9: 158143.449 ops/s
Iteration  10: 157925.080 ops/s
Iteration  11: 158806.699 ops/s
Iteration  12: 156821.916 ops/s
Iteration  13: 157825.481 ops/s
Iteration  14: 157641.086 ops/s
Iteration  15: 157075.849 ops/s
Iteration  16: 158155.729 ops/s
Iteration  17: 157768.641 ops/s
Iteration  18: 157465.586 ops/s
Iteration  19: 156831.976 ops/s
Iteration  20: 157916.307 ops/s
Iteration  21: 157899.613 ops/s
Iteration  22: 158047.415 ops/s
Iteration  23: 158228.512 ops/s
Iteration  24: 157400.288 ops/s
Iteration  25: 158161.827 ops/s
Iteration  26: 158111.351 ops/s
Iteration  27: 157248.804 ops/s
Iteration  28: 157902.799 ops/s
Iteration  29: 157474.038 ops/s
Iteration  30: 157434.442 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1055._Benchmark.benchmark_Cluster_1055":
  157805.278 ±(99.9%) 333.506 ops/s [Average]
  (min, avg, max) = (156821.916, 157805.278, 158858.282), stdev = 499.176
  CI (99.9%): [157471.772, 158138.784] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1055._Benchmark.benchmark_Cluster_1055  thrpt   30  157805.278 ± 333.506  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1056._Benchmark.benchmark_Cluster_1056$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1056._Benchmark.benchmark_Cluster_1056

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 29360.983 ops/s
# Warmup Iteration   2: 82588.858 ops/s
# Warmup Iteration   3: 119317.512 ops/s
# Warmup Iteration   4: 122908.005 ops/s
# Warmup Iteration   5: 138839.234 ops/s
# Warmup Iteration   6: 139065.932 ops/s
# Warmup Iteration   7: 138348.799 ops/s
# Warmup Iteration   8: 139172.314 ops/s
# Warmup Iteration   9: 138655.089 ops/s
# Warmup Iteration  10: 138358.599 ops/s
# Warmup Iteration  11: 138593.882 ops/s
# Warmup Iteration  12: 137578.193 ops/s
# Warmup Iteration  13: 138077.136 ops/s
# Warmup Iteration  14: 138037.348 ops/s
# Warmup Iteration  15: 138294.708 ops/s
# Warmup Iteration  16: 137213.083 ops/s
# Warmup Iteration  17: 141219.295 ops/s
# Warmup Iteration  18: 141660.581 ops/s
# Warmup Iteration  19: 140716.451 ops/s
# Warmup Iteration  20: 141792.506 ops/s
# Warmup Iteration  21: 140692.008 ops/s
# Warmup Iteration  22: 141283.177 ops/s
# Warmup Iteration  23: 141359.639 ops/s
# Warmup Iteration  24: 142006.215 ops/s
# Warmup Iteration  25: 140878.102 ops/s
# Warmup Iteration  26: 141566.466 ops/s
# Warmup Iteration  27: 141984.788 ops/s
# Warmup Iteration  28: 141527.338 ops/s
# Warmup Iteration  29: 140936.168 ops/s
# Warmup Iteration  30: 140565.367 ops/s
Iteration   1: 140789.508 ops/s
Iteration   2: 141382.343 ops/s
Iteration   3: 141009.424 ops/s
Iteration   4: 142238.010 ops/s
Iteration   5: 141281.507 ops/s
Iteration   6: 141085.493 ops/s
Iteration   7: 141463.592 ops/s
Iteration   8: 141461.318 ops/s
Iteration   9: 141650.410 ops/s
Iteration  10: 141115.514 ops/s
Iteration  11: 140835.756 ops/s
Iteration  12: 141107.791 ops/s
Iteration  13: 140511.344 ops/s
Iteration  14: 141550.905 ops/s
Iteration  15: 140785.954 ops/s
Iteration  16: 139841.187 ops/s
Iteration  17: 141425.892 ops/s
Iteration  18: 141467.899 ops/s
Iteration  19: 142052.833 ops/s
Iteration  20: 140693.693 ops/s
Iteration  21: 140272.970 ops/s
Iteration  22: 140141.063 ops/s
Iteration  23: 140838.734 ops/s
Iteration  24: 140442.016 ops/s
Iteration  25: 140378.345 ops/s
Iteration  26: 141589.278 ops/s
Iteration  27: 141887.160 ops/s
Iteration  28: 140984.749 ops/s
Iteration  29: 139621.384 ops/s
Iteration  30: 140643.363 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1056._Benchmark.benchmark_Cluster_1056":
  141018.315 ±(99.9%) 418.681 ops/s [Average]
  (min, avg, max) = (139621.384, 141018.315, 142238.010), stdev = 626.662
  CI (99.9%): [140599.634, 141436.995] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1056._Benchmark.benchmark_Cluster_1056  thrpt   30  141018.315 ± 418.681  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1057._Benchmark.benchmark_Cluster_1057$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1057._Benchmark.benchmark_Cluster_1057

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 57395.970 ops/s
# Warmup Iteration   2: 123437.732 ops/s
# Warmup Iteration   3: 146878.992 ops/s
# Warmup Iteration   4: 160058.752 ops/s
# Warmup Iteration   5: 160263.866 ops/s
# Warmup Iteration   6: 160390.035 ops/s
# Warmup Iteration   7: 159980.689 ops/s
# Warmup Iteration   8: 160263.569 ops/s
# Warmup Iteration   9: 159455.316 ops/s
# Warmup Iteration  10: 159100.977 ops/s
# Warmup Iteration  11: 159763.486 ops/s
# Warmup Iteration  12: 160168.966 ops/s
# Warmup Iteration  13: 159236.975 ops/s
# Warmup Iteration  14: 159878.460 ops/s
# Warmup Iteration  15: 160143.111 ops/s
# Warmup Iteration  16: 159640.389 ops/s
# Warmup Iteration  17: 164963.528 ops/s
# Warmup Iteration  18: 165880.251 ops/s
# Warmup Iteration  19: 165352.678 ops/s
# Warmup Iteration  20: 165109.711 ops/s
# Warmup Iteration  21: 165621.100 ops/s
# Warmup Iteration  22: 165220.420 ops/s
# Warmup Iteration  23: 164544.197 ops/s
# Warmup Iteration  24: 165955.703 ops/s
# Warmup Iteration  25: 165790.758 ops/s
# Warmup Iteration  26: 165859.928 ops/s
# Warmup Iteration  27: 164853.547 ops/s
# Warmup Iteration  28: 165494.057 ops/s
# Warmup Iteration  29: 165557.746 ops/s
# Warmup Iteration  30: 165433.764 ops/s
Iteration   1: 165695.162 ops/s
Iteration   2: 165191.529 ops/s
Iteration   3: 165805.494 ops/s
Iteration   4: 165865.416 ops/s
Iteration   5: 164729.808 ops/s
Iteration   6: 164689.485 ops/s
Iteration   7: 165262.911 ops/s
Iteration   8: 165107.141 ops/s
Iteration   9: 166089.546 ops/s
Iteration  10: 165706.524 ops/s
Iteration  11: 165348.376 ops/s
Iteration  12: 166365.825 ops/s
Iteration  13: 165661.490 ops/s
Iteration  14: 165304.482 ops/s
Iteration  15: 165516.118 ops/s
Iteration  16: 165447.675 ops/s
Iteration  17: 165736.365 ops/s
Iteration  18: 166327.533 ops/s
Iteration  19: 165919.799 ops/s
Iteration  20: 165584.533 ops/s
Iteration  21: 165300.168 ops/s
Iteration  22: 165402.307 ops/s
Iteration  23: 164573.694 ops/s
Iteration  24: 166199.962 ops/s
Iteration  25: 165981.628 ops/s
Iteration  26: 165543.067 ops/s
Iteration  27: 164731.089 ops/s
Iteration  28: 165194.996 ops/s
Iteration  29: 165328.988 ops/s
Iteration  30: 164773.034 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1057._Benchmark.benchmark_Cluster_1057":
  165479.472 ±(99.9%) 324.369 ops/s [Average]
  (min, avg, max) = (164573.694, 165479.472, 166365.825), stdev = 485.501
  CI (99.9%): [165155.102, 165803.841] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1057._Benchmark.benchmark_Cluster_1057  thrpt   30  165479.472 ± 324.369  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1058._Benchmark.benchmark_Cluster_1058$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1058._Benchmark.benchmark_Cluster_1058

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 121032.270 ops/s
# Warmup Iteration   2: 172586.160 ops/s
# Warmup Iteration   3: 170498.892 ops/s
# Warmup Iteration   4: 183822.174 ops/s
# Warmup Iteration   5: 183708.965 ops/s
# Warmup Iteration   6: 183657.031 ops/s
# Warmup Iteration   7: 183415.867 ops/s
# Warmup Iteration   8: 183012.049 ops/s
# Warmup Iteration   9: 184177.055 ops/s
# Warmup Iteration  10: 183793.919 ops/s
# Warmup Iteration  11: 181951.643 ops/s
# Warmup Iteration  12: 183786.776 ops/s
# Warmup Iteration  13: 182125.659 ops/s
# Warmup Iteration  14: 182735.845 ops/s
# Warmup Iteration  15: 182232.010 ops/s
# Warmup Iteration  16: 182901.047 ops/s
# Warmup Iteration  17: 189552.730 ops/s
# Warmup Iteration  18: 189874.652 ops/s
# Warmup Iteration  19: 190676.260 ops/s
# Warmup Iteration  20: 190631.678 ops/s
# Warmup Iteration  21: 190390.008 ops/s
# Warmup Iteration  22: 190671.952 ops/s
# Warmup Iteration  23: 190525.437 ops/s
# Warmup Iteration  24: 189759.236 ops/s
# Warmup Iteration  25: 188746.640 ops/s
# Warmup Iteration  26: 190799.901 ops/s
# Warmup Iteration  27: 189404.171 ops/s
# Warmup Iteration  28: 189980.183 ops/s
# Warmup Iteration  29: 190096.560 ops/s
# Warmup Iteration  30: 190463.694 ops/s
Iteration   1: 190179.428 ops/s
Iteration   2: 189635.131 ops/s
Iteration   3: 189575.520 ops/s
Iteration   4: 189370.373 ops/s
Iteration   5: 188961.205 ops/s
Iteration   6: 189790.811 ops/s
Iteration   7: 191007.331 ops/s
Iteration   8: 189478.236 ops/s
Iteration   9: 189911.354 ops/s
Iteration  10: 190202.046 ops/s
Iteration  11: 190142.593 ops/s
Iteration  12: 190668.757 ops/s
Iteration  13: 189341.402 ops/s
Iteration  14: 189938.457 ops/s
Iteration  15: 189636.739 ops/s
Iteration  16: 189139.661 ops/s
Iteration  17: 189801.279 ops/s
Iteration  18: 190871.028 ops/s
Iteration  19: 189753.153 ops/s
Iteration  20: 185612.915 ops/s
Iteration  21: 189702.975 ops/s
Iteration  22: 191069.313 ops/s
Iteration  23: 188783.699 ops/s
Iteration  24: 189853.294 ops/s
Iteration  25: 189983.543 ops/s
Iteration  26: 189203.578 ops/s
Iteration  27: 189397.097 ops/s
Iteration  28: 189522.367 ops/s
Iteration  29: 190067.813 ops/s
Iteration  30: 189140.437 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1058._Benchmark.benchmark_Cluster_1058":
  189658.051 ±(99.9%) 635.981 ops/s [Average]
  (min, avg, max) = (185612.915, 189658.051, 191069.313), stdev = 951.906
  CI (99.9%): [189022.070, 190294.032] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1058._Benchmark.benchmark_Cluster_1058  thrpt   30  189658.051 ± 635.981  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1059._Benchmark.benchmark_Cluster_1059$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1059._Benchmark.benchmark_Cluster_1059

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 44183.873 ops/s
# Warmup Iteration   2: 106044.755 ops/s
# Warmup Iteration   3: 121147.072 ops/s
# Warmup Iteration   4: 129417.799 ops/s
# Warmup Iteration   5: 129604.102 ops/s
# Warmup Iteration   6: 129757.524 ops/s
# Warmup Iteration   7: 128886.510 ops/s
# Warmup Iteration   8: 129741.500 ops/s
# Warmup Iteration   9: 129786.748 ops/s
# Warmup Iteration  10: 128271.633 ops/s
# Warmup Iteration  11: 129368.753 ops/s
# Warmup Iteration  12: 129645.416 ops/s
# Warmup Iteration  13: 129823.188 ops/s
# Warmup Iteration  14: 126907.791 ops/s
# Warmup Iteration  15: 129415.047 ops/s
# Warmup Iteration  16: 129006.752 ops/s
# Warmup Iteration  17: 129242.351 ops/s
# Warmup Iteration  18: 127999.423 ops/s
# Warmup Iteration  19: 129861.094 ops/s
# Warmup Iteration  20: 129140.264 ops/s
# Warmup Iteration  21: 129451.356 ops/s
# Warmup Iteration  22: 129414.577 ops/s
# Warmup Iteration  23: 129174.631 ops/s
# Warmup Iteration  24: 129258.555 ops/s
# Warmup Iteration  25: 126629.025 ops/s
# Warmup Iteration  26: 129678.285 ops/s
# Warmup Iteration  27: 128918.390 ops/s
# Warmup Iteration  28: 128979.244 ops/s
# Warmup Iteration  29: 129287.230 ops/s
# Warmup Iteration  30: 129499.843 ops/s
Iteration   1: 129249.091 ops/s
Iteration   2: 129262.898 ops/s
Iteration   3: 129174.229 ops/s
Iteration   4: 129913.265 ops/s
Iteration   5: 128985.965 ops/s
Iteration   6: 129405.554 ops/s
Iteration   7: 127547.839 ops/s
Iteration   8: 129509.975 ops/s
Iteration   9: 129451.149 ops/s
Iteration  10: 128313.758 ops/s
Iteration  11: 129581.088 ops/s
Iteration  12: 129666.504 ops/s
Iteration  13: 128981.130 ops/s
Iteration  14: 129026.669 ops/s
Iteration  15: 128394.885 ops/s
Iteration  16: 128823.167 ops/s
Iteration  17: 129080.140 ops/s
Iteration  18: 129548.840 ops/s
Iteration  19: 129355.042 ops/s
Iteration  20: 128780.408 ops/s
Iteration  21: 129366.298 ops/s
Iteration  22: 128892.277 ops/s
Iteration  23: 129231.211 ops/s
Iteration  24: 128907.205 ops/s
Iteration  25: 129587.585 ops/s
Iteration  26: 129031.900 ops/s
Iteration  27: 129690.087 ops/s
Iteration  28: 126923.754 ops/s
Iteration  29: 129751.121 ops/s
Iteration  30: 129714.168 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1059._Benchmark.benchmark_Cluster_1059":
  129104.907 ±(99.9%) 428.898 ops/s [Average]
  (min, avg, max) = (126923.754, 129104.907, 129913.265), stdev = 641.955
  CI (99.9%): [128676.009, 129533.805] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1059._Benchmark.benchmark_Cluster_1059  thrpt   30  129104.907 ± 428.898  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_106._Benchmark.benchmark_Cluster_106$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_106._Benchmark.benchmark_Cluster_106

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 58110.792 ops/s
# Warmup Iteration   2: 103258.307 ops/s
# Warmup Iteration   3: 113950.743 ops/s
# Warmup Iteration   4: 119233.259 ops/s
# Warmup Iteration   5: 121334.285 ops/s
# Warmup Iteration   6: 121752.167 ops/s
# Warmup Iteration   7: 121451.228 ops/s
# Warmup Iteration   8: 121094.145 ops/s
# Warmup Iteration   9: 120677.579 ops/s
# Warmup Iteration  10: 120709.390 ops/s
# Warmup Iteration  11: 121044.703 ops/s
# Warmup Iteration  12: 121232.844 ops/s
# Warmup Iteration  13: 121184.565 ops/s
# Warmup Iteration  14: 121377.884 ops/s
# Warmup Iteration  15: 118772.601 ops/s
# Warmup Iteration  16: 121382.596 ops/s
# Warmup Iteration  17: 124744.334 ops/s
# Warmup Iteration  18: 124791.243 ops/s
# Warmup Iteration  19: 125382.467 ops/s
# Warmup Iteration  20: 125480.879 ops/s
# Warmup Iteration  21: 125054.283 ops/s
# Warmup Iteration  22: 125113.267 ops/s
# Warmup Iteration  23: 124597.634 ops/s
# Warmup Iteration  24: 125666.309 ops/s
# Warmup Iteration  25: 125601.201 ops/s
# Warmup Iteration  26: 125360.617 ops/s
# Warmup Iteration  27: 124996.506 ops/s
# Warmup Iteration  28: 125519.497 ops/s
# Warmup Iteration  29: 125854.443 ops/s
# Warmup Iteration  30: 124869.040 ops/s
Iteration   1: 124842.947 ops/s
Iteration   2: 125104.447 ops/s
Iteration   3: 124825.797 ops/s
Iteration   4: 125050.169 ops/s
Iteration   5: 125763.047 ops/s
Iteration   6: 124808.748 ops/s
Iteration   7: 124892.736 ops/s
Iteration   8: 124786.216 ops/s
Iteration   9: 124960.940 ops/s
Iteration  10: 124662.509 ops/s
Iteration  11: 125397.651 ops/s
Iteration  12: 125159.402 ops/s
Iteration  13: 124778.528 ops/s
Iteration  14: 123987.333 ops/s
Iteration  15: 124904.778 ops/s
Iteration  16: 123911.247 ops/s
Iteration  17: 125036.659 ops/s
Iteration  18: 125308.872 ops/s
Iteration  19: 124812.765 ops/s
Iteration  20: 124710.329 ops/s
Iteration  21: 124563.347 ops/s
Iteration  22: 125720.228 ops/s
Iteration  23: 125522.165 ops/s
Iteration  24: 123073.065 ops/s
Iteration  25: 124972.684 ops/s
Iteration  26: 125143.240 ops/s
Iteration  27: 125065.660 ops/s
Iteration  28: 124805.284 ops/s
Iteration  29: 124969.244 ops/s
Iteration  30: 124620.612 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_106._Benchmark.benchmark_Cluster_106":
  124872.022 ±(99.9%) 349.598 ops/s [Average]
  (min, avg, max) = (123073.065, 124872.022, 125763.047), stdev = 523.262
  CI (99.9%): [124522.424, 125221.619] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_106._Benchmark.benchmark_Cluster_106  thrpt   30  124872.022 ± 349.598  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1060._Benchmark.benchmark_Cluster_1060$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1060._Benchmark.benchmark_Cluster_1060

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20757.323 ops/s
# Warmup Iteration   2: 71803.526 ops/s
# Warmup Iteration   3: 92371.971 ops/s
# Warmup Iteration   4: 104538.602 ops/s
# Warmup Iteration   5: 103741.031 ops/s
# Warmup Iteration   6: 104228.167 ops/s
# Warmup Iteration   7: 104488.849 ops/s
# Warmup Iteration   8: 104240.874 ops/s
# Warmup Iteration   9: 104120.168 ops/s
# Warmup Iteration  10: 104754.360 ops/s
# Warmup Iteration  11: 104249.727 ops/s
# Warmup Iteration  12: 103455.188 ops/s
# Warmup Iteration  13: 104397.870 ops/s
# Warmup Iteration  14: 104301.596 ops/s
# Warmup Iteration  15: 104365.993 ops/s
# Warmup Iteration  16: 103729.505 ops/s
# Warmup Iteration  17: 105541.576 ops/s
# Warmup Iteration  18: 105334.626 ops/s
# Warmup Iteration  19: 104777.188 ops/s
# Warmup Iteration  20: 104862.706 ops/s
# Warmup Iteration  21: 105606.242 ops/s
# Warmup Iteration  22: 105189.306 ops/s
# Warmup Iteration  23: 105523.530 ops/s
# Warmup Iteration  24: 105486.489 ops/s
# Warmup Iteration  25: 105183.510 ops/s
# Warmup Iteration  26: 104820.608 ops/s
# Warmup Iteration  27: 105628.594 ops/s
# Warmup Iteration  28: 105973.228 ops/s
# Warmup Iteration  29: 105118.389 ops/s
# Warmup Iteration  30: 104545.580 ops/s
Iteration   1: 104989.970 ops/s
Iteration   2: 104399.320 ops/s
Iteration   3: 105114.961 ops/s
Iteration   4: 104989.229 ops/s
Iteration   5: 105137.890 ops/s
Iteration   6: 105151.983 ops/s
Iteration   7: 105503.517 ops/s
Iteration   8: 105155.480 ops/s
Iteration   9: 105400.472 ops/s
Iteration  10: 104982.025 ops/s
Iteration  11: 105331.395 ops/s
Iteration  12: 104194.014 ops/s
Iteration  13: 105701.046 ops/s
Iteration  14: 105161.227 ops/s
Iteration  15: 104614.423 ops/s
Iteration  16: 103980.705 ops/s
Iteration  17: 104937.442 ops/s
Iteration  18: 105278.248 ops/s
Iteration  19: 104847.313 ops/s
Iteration  20: 105509.721 ops/s
Iteration  21: 105297.408 ops/s
Iteration  22: 105081.339 ops/s
Iteration  23: 105333.304 ops/s
Iteration  24: 105350.837 ops/s
Iteration  25: 104815.855 ops/s
Iteration  26: 105395.065 ops/s
Iteration  27: 105431.638 ops/s
Iteration  28: 105622.143 ops/s
Iteration  29: 105851.247 ops/s
Iteration  30: 105243.413 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1060._Benchmark.benchmark_Cluster_1060":
  105126.754 ±(99.9%) 279.581 ops/s [Average]
  (min, avg, max) = (103980.705, 105126.754, 105851.247), stdev = 418.463
  CI (99.9%): [104847.174, 105406.335] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1060._Benchmark.benchmark_Cluster_1060  thrpt   30  105126.754 ± 279.581  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1061._Benchmark.benchmark_Cluster_1061$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1061._Benchmark.benchmark_Cluster_1061

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 65862.737 ops/s
# Warmup Iteration   2: 110220.599 ops/s
# Warmup Iteration   3: 129959.248 ops/s
# Warmup Iteration   4: 144970.858 ops/s
# Warmup Iteration   5: 171239.018 ops/s
# Warmup Iteration   6: 171502.136 ops/s
# Warmup Iteration   7: 171214.362 ops/s
# Warmup Iteration   8: 171712.787 ops/s
# Warmup Iteration   9: 171842.619 ops/s
# Warmup Iteration  10: 171137.188 ops/s
# Warmup Iteration  11: 171924.935 ops/s
# Warmup Iteration  12: 170028.579 ops/s
# Warmup Iteration  13: 170565.310 ops/s
# Warmup Iteration  14: 170653.002 ops/s
# Warmup Iteration  15: 170205.638 ops/s
# Warmup Iteration  16: 170346.345 ops/s
# Warmup Iteration  17: 174787.818 ops/s
# Warmup Iteration  18: 175658.807 ops/s
# Warmup Iteration  19: 176095.450 ops/s
# Warmup Iteration  20: 176006.219 ops/s
# Warmup Iteration  21: 174718.027 ops/s
# Warmup Iteration  22: 175609.439 ops/s
# Warmup Iteration  23: 174585.438 ops/s
# Warmup Iteration  24: 175523.970 ops/s
# Warmup Iteration  25: 174591.510 ops/s
# Warmup Iteration  26: 176213.341 ops/s
# Warmup Iteration  27: 175720.900 ops/s
# Warmup Iteration  28: 174992.069 ops/s
# Warmup Iteration  29: 175562.799 ops/s
# Warmup Iteration  30: 174876.345 ops/s
Iteration   1: 174655.515 ops/s
Iteration   2: 175240.976 ops/s
Iteration   3: 174647.534 ops/s
Iteration   4: 175436.114 ops/s
Iteration   5: 174089.786 ops/s
Iteration   6: 175027.076 ops/s
Iteration   7: 174412.091 ops/s
Iteration   8: 175634.497 ops/s
Iteration   9: 175010.177 ops/s
Iteration  10: 175501.229 ops/s
Iteration  11: 174038.813 ops/s
Iteration  12: 174085.580 ops/s
Iteration  13: 175539.923 ops/s
Iteration  14: 175342.079 ops/s
Iteration  15: 174514.536 ops/s
Iteration  16: 174983.097 ops/s
Iteration  17: 175587.108 ops/s
Iteration  18: 175093.417 ops/s
Iteration  19: 174436.212 ops/s
Iteration  20: 175405.913 ops/s
Iteration  21: 175753.757 ops/s
Iteration  22: 174724.523 ops/s
Iteration  23: 175479.428 ops/s
Iteration  24: 175801.675 ops/s
Iteration  25: 175077.205 ops/s
Iteration  26: 174628.390 ops/s
Iteration  27: 175256.601 ops/s
Iteration  28: 175686.311 ops/s
Iteration  29: 175341.284 ops/s
Iteration  30: 174743.765 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1061._Benchmark.benchmark_Cluster_1061":
  175039.154 ±(99.9%) 348.581 ops/s [Average]
  (min, avg, max) = (174038.813, 175039.154, 175801.675), stdev = 521.740
  CI (99.9%): [174690.573, 175387.735] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1061._Benchmark.benchmark_Cluster_1061  thrpt   30  175039.154 ± 348.581  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1062._Benchmark.benchmark_Cluster_1062$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1062._Benchmark.benchmark_Cluster_1062

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 88011.415 ops/s
# Warmup Iteration   2: 158905.812 ops/s
# Warmup Iteration   3: 151413.119 ops/s
# Warmup Iteration   4: 177168.599 ops/s
# Warmup Iteration   5: 178981.975 ops/s
# Warmup Iteration   6: 175780.365 ops/s
# Warmup Iteration   7: 176020.712 ops/s
# Warmup Iteration   8: 175294.356 ops/s
# Warmup Iteration   9: 175971.660 ops/s
# Warmup Iteration  10: 176040.589 ops/s
# Warmup Iteration  11: 176609.238 ops/s
# Warmup Iteration  12: 175972.567 ops/s
# Warmup Iteration  13: 175231.296 ops/s
# Warmup Iteration  14: 175834.296 ops/s
# Warmup Iteration  15: 175507.394 ops/s
# Warmup Iteration  16: 174904.374 ops/s
# Warmup Iteration  17: 181040.067 ops/s
# Warmup Iteration  18: 182854.383 ops/s
# Warmup Iteration  19: 182508.486 ops/s
# Warmup Iteration  20: 181141.845 ops/s
# Warmup Iteration  21: 181721.267 ops/s
# Warmup Iteration  22: 181656.355 ops/s
# Warmup Iteration  23: 182458.424 ops/s
# Warmup Iteration  24: 181306.693 ops/s
# Warmup Iteration  25: 181472.163 ops/s
# Warmup Iteration  26: 180773.702 ops/s
# Warmup Iteration  27: 181016.701 ops/s
# Warmup Iteration  28: 186721.480 ops/s
# Warmup Iteration  29: 185937.695 ops/s
# Warmup Iteration  30: 185419.558 ops/s
Iteration   1: 183517.154 ops/s
Iteration   2: 185962.966 ops/s
Iteration   3: 186294.435 ops/s
Iteration   4: 185969.400 ops/s
Iteration   5: 185512.136 ops/s
Iteration   6: 185308.129 ops/s
Iteration   7: 185369.210 ops/s
Iteration   8: 185321.453 ops/s
Iteration   9: 185916.888 ops/s
Iteration  10: 185452.490 ops/s
Iteration  11: 186098.310 ops/s
Iteration  12: 185682.367 ops/s
Iteration  13: 184956.617 ops/s
Iteration  14: 185319.329 ops/s
Iteration  15: 185581.070 ops/s
Iteration  16: 185391.114 ops/s
Iteration  17: 184956.832 ops/s
Iteration  18: 185763.133 ops/s
Iteration  19: 185108.775 ops/s
Iteration  20: 186472.936 ops/s
Iteration  21: 185388.219 ops/s
Iteration  22: 186324.185 ops/s
Iteration  23: 184464.979 ops/s
Iteration  24: 185376.977 ops/s
Iteration  25: 185004.853 ops/s
Iteration  26: 186095.749 ops/s
Iteration  27: 186133.622 ops/s
Iteration  28: 185824.025 ops/s
Iteration  29: 185033.762 ops/s
Iteration  30: 185825.808 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1062._Benchmark.benchmark_Cluster_1062":
  185514.231 ±(99.9%) 405.130 ops/s [Average]
  (min, avg, max) = (183517.154, 185514.231, 186472.936), stdev = 606.379
  CI (99.9%): [185109.101, 185919.360] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1062._Benchmark.benchmark_Cluster_1062  thrpt   30  185514.231 ± 405.130  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1063._Benchmark.benchmark_Cluster_1063$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1063._Benchmark.benchmark_Cluster_1063

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 57228.315 ops/s
# Warmup Iteration   2: 110233.987 ops/s
# Warmup Iteration   3: 139787.920 ops/s
# Warmup Iteration   4: 148729.855 ops/s
# Warmup Iteration   5: 150544.978 ops/s
# Warmup Iteration   6: 150226.968 ops/s
# Warmup Iteration   7: 149391.510 ops/s
# Warmup Iteration   8: 149378.315 ops/s
# Warmup Iteration   9: 148940.635 ops/s
# Warmup Iteration  10: 149328.665 ops/s
# Warmup Iteration  11: 149156.223 ops/s
# Warmup Iteration  12: 149214.945 ops/s
# Warmup Iteration  13: 148181.008 ops/s
# Warmup Iteration  14: 148687.901 ops/s
# Warmup Iteration  15: 149631.585 ops/s
# Warmup Iteration  16: 149622.131 ops/s
# Warmup Iteration  17: 155939.170 ops/s
# Warmup Iteration  18: 154484.031 ops/s
# Warmup Iteration  19: 155819.973 ops/s
# Warmup Iteration  20: 155244.694 ops/s
# Warmup Iteration  21: 155600.415 ops/s
# Warmup Iteration  22: 155165.713 ops/s
# Warmup Iteration  23: 155164.964 ops/s
# Warmup Iteration  24: 155030.299 ops/s
# Warmup Iteration  25: 155417.525 ops/s
# Warmup Iteration  26: 154724.488 ops/s
# Warmup Iteration  27: 155495.630 ops/s
# Warmup Iteration  28: 155414.167 ops/s
# Warmup Iteration  29: 155007.921 ops/s
# Warmup Iteration  30: 156000.365 ops/s
Iteration   1: 155550.223 ops/s
Iteration   2: 155284.774 ops/s
Iteration   3: 154494.272 ops/s
Iteration   4: 154376.129 ops/s
Iteration   5: 155233.174 ops/s
Iteration   6: 155938.914 ops/s
Iteration   7: 154363.879 ops/s
Iteration   8: 155398.683 ops/s
Iteration   9: 154185.088 ops/s
Iteration  10: 155006.130 ops/s
Iteration  11: 155347.552 ops/s
Iteration  12: 155767.564 ops/s
Iteration  13: 154149.563 ops/s
Iteration  14: 155456.581 ops/s
Iteration  15: 154679.091 ops/s
Iteration  16: 155822.041 ops/s
Iteration  17: 154599.637 ops/s
Iteration  18: 155129.256 ops/s
Iteration  19: 155651.285 ops/s
Iteration  20: 155943.289 ops/s
Iteration  21: 155317.731 ops/s
Iteration  22: 155632.891 ops/s
Iteration  23: 155682.315 ops/s
Iteration  24: 155177.560 ops/s
Iteration  25: 155381.271 ops/s
Iteration  26: 155894.916 ops/s
Iteration  27: 155044.366 ops/s
Iteration  28: 155093.878 ops/s
Iteration  29: 155102.514 ops/s
Iteration  30: 155525.602 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1063._Benchmark.benchmark_Cluster_1063":
  155207.672 ±(99.9%) 352.057 ops/s [Average]
  (min, avg, max) = (154149.563, 155207.672, 155943.289), stdev = 526.942
  CI (99.9%): [154855.616, 155559.729] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1063._Benchmark.benchmark_Cluster_1063  thrpt   30  155207.672 ± 352.057  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1064._Benchmark.benchmark_Cluster_1064$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1064._Benchmark.benchmark_Cluster_1064

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 124543.931 ops/s
# Warmup Iteration   2: 175003.660 ops/s
# Warmup Iteration   3: 173336.043 ops/s
# Warmup Iteration   4: 191502.181 ops/s
# Warmup Iteration   5: 192609.759 ops/s
# Warmup Iteration   6: 193246.261 ops/s
# Warmup Iteration   7: 192509.743 ops/s
# Warmup Iteration   8: 191602.404 ops/s
# Warmup Iteration   9: 193758.570 ops/s
# Warmup Iteration  10: 192568.933 ops/s
# Warmup Iteration  11: 192424.254 ops/s
# Warmup Iteration  12: 192729.550 ops/s
# Warmup Iteration  13: 191937.867 ops/s
# Warmup Iteration  14: 192270.425 ops/s
# Warmup Iteration  15: 190912.410 ops/s
# Warmup Iteration  16: 192761.193 ops/s
# Warmup Iteration  17: 199958.898 ops/s
# Warmup Iteration  18: 198562.802 ops/s
# Warmup Iteration  19: 200687.409 ops/s
# Warmup Iteration  20: 200462.121 ops/s
# Warmup Iteration  21: 199462.511 ops/s
# Warmup Iteration  22: 201354.377 ops/s
# Warmup Iteration  23: 200583.351 ops/s
# Warmup Iteration  24: 198615.681 ops/s
# Warmup Iteration  25: 199694.667 ops/s
# Warmup Iteration  26: 200805.765 ops/s
# Warmup Iteration  27: 200157.662 ops/s
# Warmup Iteration  28: 198515.663 ops/s
# Warmup Iteration  29: 198697.304 ops/s
# Warmup Iteration  30: 198792.351 ops/s
Iteration   1: 199064.941 ops/s
Iteration   2: 199491.126 ops/s
Iteration   3: 198914.198 ops/s
Iteration   4: 199756.773 ops/s
Iteration   5: 199945.233 ops/s
Iteration   6: 199672.527 ops/s
Iteration   7: 199110.401 ops/s
Iteration   8: 198845.668 ops/s
Iteration   9: 199525.720 ops/s
Iteration  10: 199476.848 ops/s
Iteration  11: 198708.044 ops/s
Iteration  12: 199067.663 ops/s
Iteration  13: 198011.719 ops/s
Iteration  14: 200737.091 ops/s
Iteration  15: 200093.733 ops/s
Iteration  16: 199491.327 ops/s
Iteration  17: 199032.287 ops/s
Iteration  18: 198708.587 ops/s
Iteration  19: 199829.023 ops/s
Iteration  20: 199146.109 ops/s
Iteration  21: 197750.259 ops/s
Iteration  22: 199784.555 ops/s
Iteration  23: 200119.575 ops/s
Iteration  24: 200305.451 ops/s
Iteration  25: 199987.865 ops/s
Iteration  26: 198712.365 ops/s
Iteration  27: 199307.080 ops/s
Iteration  28: 200301.152 ops/s
Iteration  29: 200071.979 ops/s
Iteration  30: 199080.254 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1064._Benchmark.benchmark_Cluster_1064":
  199401.652 ±(99.9%) 452.865 ops/s [Average]
  (min, avg, max) = (197750.259, 199401.652, 200737.091), stdev = 677.828
  CI (99.9%): [198948.786, 199854.517] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1064._Benchmark.benchmark_Cluster_1064  thrpt   30  199401.652 ± 452.865  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1065._Benchmark.benchmark_Cluster_1065$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1065._Benchmark.benchmark_Cluster_1065

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 48203.601 ops/s
# Warmup Iteration   2: 104996.299 ops/s
# Warmup Iteration   3: 131746.851 ops/s
# Warmup Iteration   4: 148572.035 ops/s
# Warmup Iteration   5: 149665.647 ops/s
# Warmup Iteration   6: 149234.606 ops/s
# Warmup Iteration   7: 149395.940 ops/s
# Warmup Iteration   8: 148419.377 ops/s
# Warmup Iteration   9: 147221.129 ops/s
# Warmup Iteration  10: 147766.815 ops/s
# Warmup Iteration  11: 148809.876 ops/s
# Warmup Iteration  12: 148798.400 ops/s
# Warmup Iteration  13: 148962.422 ops/s
# Warmup Iteration  14: 148289.330 ops/s
# Warmup Iteration  15: 148774.361 ops/s
# Warmup Iteration  16: 148560.817 ops/s
# Warmup Iteration  17: 153552.102 ops/s
# Warmup Iteration  18: 154435.867 ops/s
# Warmup Iteration  19: 153978.646 ops/s
# Warmup Iteration  20: 154510.288 ops/s
# Warmup Iteration  21: 154760.687 ops/s
# Warmup Iteration  22: 153489.107 ops/s
# Warmup Iteration  23: 153897.212 ops/s
# Warmup Iteration  24: 153848.853 ops/s
# Warmup Iteration  25: 153559.581 ops/s
# Warmup Iteration  26: 154449.956 ops/s
# Warmup Iteration  27: 154150.813 ops/s
# Warmup Iteration  28: 153454.118 ops/s
# Warmup Iteration  29: 154647.205 ops/s
# Warmup Iteration  30: 152934.994 ops/s
Iteration   1: 152288.548 ops/s
Iteration   2: 154880.743 ops/s
Iteration   3: 153833.260 ops/s
Iteration   4: 154144.636 ops/s
Iteration   5: 153649.035 ops/s
Iteration   6: 154154.202 ops/s
Iteration   7: 154447.549 ops/s
Iteration   8: 153584.085 ops/s
Iteration   9: 153629.468 ops/s
Iteration  10: 154509.374 ops/s
Iteration  11: 154795.325 ops/s
Iteration  12: 154327.203 ops/s
Iteration  13: 154162.433 ops/s
Iteration  14: 153781.690 ops/s
Iteration  15: 154132.264 ops/s
Iteration  16: 153762.249 ops/s
Iteration  17: 153959.367 ops/s
Iteration  18: 153966.764 ops/s
Iteration  19: 154255.198 ops/s
Iteration  20: 153991.964 ops/s
Iteration  21: 154165.964 ops/s
Iteration  22: 153535.791 ops/s
Iteration  23: 154482.423 ops/s
Iteration  24: 154745.393 ops/s
Iteration  25: 154505.822 ops/s
Iteration  26: 153478.181 ops/s
Iteration  27: 155055.748 ops/s
Iteration  28: 153524.842 ops/s
Iteration  29: 154683.304 ops/s
Iteration  30: 155308.378 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1065._Benchmark.benchmark_Cluster_1065":
  154124.707 ±(99.9%) 396.975 ops/s [Average]
  (min, avg, max) = (152288.548, 154124.707, 155308.378), stdev = 594.173
  CI (99.9%): [153727.732, 154521.682] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1065._Benchmark.benchmark_Cluster_1065  thrpt   30  154124.707 ± 396.975  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1066._Benchmark.benchmark_Cluster_1066$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_1066._Benchmark.benchmark_Cluster_1066

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 182868.353 ops/s
# Warmup Iteration   2: 262652.360 ops/s
# Warmup Iteration   3: 261363.129 ops/s
# Warmup Iteration   4: 282300.235 ops/s
# Warmup Iteration   5: 283809.755 ops/s
# Warmup Iteration   6: 283863.947 ops/s
# Warmup Iteration   7: 284046.233 ops/s
# Warmup Iteration   8: 282866.525 ops/s
# Warmup Iteration   9: 281659.821 ops/s
# Warmup Iteration  10: 283068.545 ops/s
# Warmup Iteration  11: 284286.325 ops/s
# Warmup Iteration  12: 281638.657 ops/s
# Warmup Iteration  13: 281963.666 ops/s
# Warmup Iteration  14: 281449.817 ops/s
# Warmup Iteration  15: 281642.033 ops/s
# Warmup Iteration  16: 281284.697 ops/s
# Warmup Iteration  17: 292564.477 ops/s
# Warmup Iteration  18: 291370.749 ops/s
# Warmup Iteration  19: 292157.232 ops/s
# Warmup Iteration  20: 292595.265 ops/s
# Warmup Iteration  21: 293227.355 ops/s
# Warmup Iteration  22: 291640.395 ops/s
# Warmup Iteration  23: 290684.898 ops/s
# Warmup Iteration  24: 291205.749 ops/s
# Warmup Iteration  25: 292304.897 ops/s
# Warmup Iteration  26: 291718.009 ops/s
# Warmup Iteration  27: 291821.629 ops/s
# Warmup Iteration  28: 291220.011 ops/s
# Warmup Iteration  29: 292817.451 ops/s
# Warmup Iteration  30: 290552.634 ops/s
Iteration   1: 291376.797 ops/s
Iteration   2: 293400.212 ops/s
Iteration   3: 293294.452 ops/s
Iteration   4: 292119.418 ops/s
Iteration   5: 290099.402 ops/s
Iteration   6: 291059.645 ops/s
Iteration   7: 291767.818 ops/s
Iteration   8: 292840.978 ops/s
Iteration   9: 291411.561 ops/s
Iteration  10: 292153.095 ops/s
Iteration  11: 292043.013 ops/s
Iteration  12: 292575.610 ops/s
Iteration  13: 292984.547 ops/s
Iteration  14: 291033.030 ops/s
Iteration  15: 293162.260 ops/s
Iteration  16: 290750.453 ops/s
Iteration  17: 291260.658 ops/s
Iteration  18: 291522.840 ops/s
Iteration  19: 290897.167 ops/s
Iteration  20: 291183.173 ops/s
Iteration  21: 293559.217 ops/s
Iteration  22: 291499.692 ops/s
Iteration  23: 292845.130 ops/s
Iteration  24: 293112.982 ops/s
Iteration  25: 291551.847 ops/s
Iteration  26: 291329.234 ops/s
Iteration  27: 292358.474 ops/s
Iteration  28: 290957.439 ops/s
Iteration  29: 291289.147 ops/s
Iteration  30: 293328.112 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_1066._Benchmark.benchmark_Cluster_1066":
  291958.913 ±(99.9%) 634.955 ops/s [Average]
  (min, avg, max) = (290099.402, 291958.913, 293559.217), stdev = 950.371
  CI (99.9%): [291323.958, 292593.868] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1066._Benchmark.benchmark_Cluster_1066  thrpt   30  291958.913 ± 634.955  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_107._Benchmark.benchmark_Cluster_107$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_107._Benchmark.benchmark_Cluster_107

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 35687.914 ops/s
# Warmup Iteration   2: 87895.325 ops/s
# Warmup Iteration   3: 107231.660 ops/s
# Warmup Iteration   4: 124001.724 ops/s
# Warmup Iteration   5: 125410.372 ops/s
# Warmup Iteration   6: 124751.759 ops/s
# Warmup Iteration   7: 124330.437 ops/s
# Warmup Iteration   8: 124477.560 ops/s
# Warmup Iteration   9: 124818.342 ops/s
# Warmup Iteration  10: 124434.834 ops/s
# Warmup Iteration  11: 123927.238 ops/s
# Warmup Iteration  12: 124863.833 ops/s
# Warmup Iteration  13: 124129.597 ops/s
# Warmup Iteration  14: 124871.954 ops/s
# Warmup Iteration  15: 124425.948 ops/s
# Warmup Iteration  16: 124486.138 ops/s
# Warmup Iteration  17: 125845.241 ops/s
# Warmup Iteration  18: 125272.915 ops/s
# Warmup Iteration  19: 126613.144 ops/s
# Warmup Iteration  20: 126560.309 ops/s
# Warmup Iteration  21: 125994.961 ops/s
# Warmup Iteration  22: 125013.121 ops/s
# Warmup Iteration  23: 126367.368 ops/s
# Warmup Iteration  24: 126108.118 ops/s
# Warmup Iteration  25: 125518.895 ops/s
# Warmup Iteration  26: 125033.499 ops/s
# Warmup Iteration  27: 125744.050 ops/s
# Warmup Iteration  28: 125105.483 ops/s
# Warmup Iteration  29: 125455.912 ops/s
# Warmup Iteration  30: 125418.980 ops/s
Iteration   1: 125498.324 ops/s
Iteration   2: 125872.262 ops/s
Iteration   3: 125697.991 ops/s
Iteration   4: 125435.240 ops/s
Iteration   5: 125899.957 ops/s
Iteration   6: 126182.621 ops/s
Iteration   7: 126205.067 ops/s
Iteration   8: 126231.269 ops/s
Iteration   9: 125055.406 ops/s
Iteration  10: 126006.019 ops/s
Iteration  11: 125875.713 ops/s
Iteration  12: 125867.815 ops/s
Iteration  13: 125491.292 ops/s
Iteration  14: 126456.552 ops/s
Iteration  15: 125319.348 ops/s
Iteration  16: 126358.528 ops/s
Iteration  17: 126073.175 ops/s
Iteration  18: 125175.320 ops/s
Iteration  19: 126283.697 ops/s
Iteration  20: 125815.140 ops/s
Iteration  21: 125502.819 ops/s
Iteration  22: 125792.244 ops/s
Iteration  23: 125299.492 ops/s
Iteration  24: 126098.438 ops/s
Iteration  25: 125381.262 ops/s
Iteration  26: 126247.079 ops/s
Iteration  27: 126186.019 ops/s
Iteration  28: 125945.175 ops/s
Iteration  29: 124925.092 ops/s
Iteration  30: 126268.935 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_107._Benchmark.benchmark_Cluster_107":
  125814.910 ±(99.9%) 279.455 ops/s [Average]
  (min, avg, max) = (124925.092, 125814.910, 126456.552), stdev = 418.276
  CI (99.9%): [125535.454, 126094.365] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_107._Benchmark.benchmark_Cluster_107  thrpt   30  125814.910 ± 279.455  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_108._Benchmark.benchmark_Cluster_108$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_108._Benchmark.benchmark_Cluster_108

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 65956.554 ops/s
# Warmup Iteration   2: 127202.679 ops/s
# Warmup Iteration   3: 134365.694 ops/s
# Warmup Iteration   4: 144853.783 ops/s
# Warmup Iteration   5: 145620.319 ops/s
# Warmup Iteration   6: 147505.227 ops/s
# Warmup Iteration   7: 146834.280 ops/s
# Warmup Iteration   8: 146661.914 ops/s
# Warmup Iteration   9: 145987.708 ops/s
# Warmup Iteration  10: 145868.485 ops/s
# Warmup Iteration  11: 145868.554 ops/s
# Warmup Iteration  12: 146007.263 ops/s
# Warmup Iteration  13: 146454.878 ops/s
# Warmup Iteration  14: 146058.236 ops/s
# Warmup Iteration  15: 146477.986 ops/s
# Warmup Iteration  16: 146444.615 ops/s
# Warmup Iteration  17: 151875.694 ops/s
# Warmup Iteration  18: 151970.480 ops/s
# Warmup Iteration  19: 152704.900 ops/s
# Warmup Iteration  20: 152604.841 ops/s
# Warmup Iteration  21: 150541.883 ops/s
# Warmup Iteration  22: 151281.733 ops/s
# Warmup Iteration  23: 151637.944 ops/s
# Warmup Iteration  24: 150577.404 ops/s
# Warmup Iteration  25: 150906.068 ops/s
# Warmup Iteration  26: 149948.784 ops/s
# Warmup Iteration  27: 151020.287 ops/s
# Warmup Iteration  28: 151573.680 ops/s
# Warmup Iteration  29: 151364.654 ops/s
# Warmup Iteration  30: 152358.519 ops/s
Iteration   1: 152217.178 ops/s
Iteration   2: 151115.177 ops/s
Iteration   3: 150997.511 ops/s
Iteration   4: 151065.913 ops/s
Iteration   5: 150469.019 ops/s
Iteration   6: 151025.072 ops/s
Iteration   7: 151247.132 ops/s
Iteration   8: 150527.989 ops/s
Iteration   9: 151014.605 ops/s
Iteration  10: 151078.470 ops/s
Iteration  11: 150866.784 ops/s
Iteration  12: 151164.465 ops/s
Iteration  13: 151250.463 ops/s
Iteration  14: 151263.610 ops/s
Iteration  15: 152040.178 ops/s
Iteration  16: 149386.924 ops/s
Iteration  17: 151428.847 ops/s
Iteration  18: 151792.483 ops/s
Iteration  19: 151241.175 ops/s
Iteration  20: 151847.665 ops/s
Iteration  21: 151519.731 ops/s
Iteration  22: 151074.013 ops/s
Iteration  23: 151488.047 ops/s
Iteration  24: 151488.437 ops/s
Iteration  25: 151058.152 ops/s
Iteration  26: 151100.342 ops/s
Iteration  27: 151356.055 ops/s
Iteration  28: 152146.713 ops/s
Iteration  29: 151792.754 ops/s
Iteration  30: 151743.177 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_108._Benchmark.benchmark_Cluster_108":
  151260.269 ±(99.9%) 369.659 ops/s [Average]
  (min, avg, max) = (149386.924, 151260.269, 152217.178), stdev = 553.288
  CI (99.9%): [150890.611, 151629.928] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_108._Benchmark.benchmark_Cluster_108  thrpt   30  151260.269 ± 369.659  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_109._Benchmark.benchmark_Cluster_109$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_109._Benchmark.benchmark_Cluster_109

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 87412.432 ops/s
# Warmup Iteration   2: 153511.971 ops/s
# Warmup Iteration   3: 192256.785 ops/s
# Warmup Iteration   4: 192525.340 ops/s
# Warmup Iteration   5: 192829.623 ops/s
# Warmup Iteration   6: 193358.167 ops/s
# Warmup Iteration   7: 190971.359 ops/s
# Warmup Iteration   8: 190857.645 ops/s
# Warmup Iteration   9: 191375.833 ops/s
# Warmup Iteration  10: 190269.936 ops/s
# Warmup Iteration  11: 191629.761 ops/s
# Warmup Iteration  12: 193365.068 ops/s
# Warmup Iteration  13: 191748.436 ops/s
# Warmup Iteration  14: 192704.765 ops/s
# Warmup Iteration  15: 192751.680 ops/s
# Warmup Iteration  16: 192322.706 ops/s
# Warmup Iteration  17: 190898.102 ops/s
# Warmup Iteration  18: 191783.443 ops/s
# Warmup Iteration  19: 190456.490 ops/s
# Warmup Iteration  20: 191292.805 ops/s
# Warmup Iteration  21: 191985.695 ops/s
# Warmup Iteration  22: 191451.620 ops/s
# Warmup Iteration  23: 192120.581 ops/s
# Warmup Iteration  24: 191151.003 ops/s
# Warmup Iteration  25: 191922.263 ops/s
# Warmup Iteration  26: 190801.872 ops/s
# Warmup Iteration  27: 189463.790 ops/s
# Warmup Iteration  28: 191423.327 ops/s
# Warmup Iteration  29: 192131.972 ops/s
# Warmup Iteration  30: 191603.576 ops/s
Iteration   1: 190963.253 ops/s
Iteration   2: 192289.429 ops/s
Iteration   3: 190672.886 ops/s
Iteration   4: 191367.786 ops/s
Iteration   5: 191786.564 ops/s
Iteration   6: 190765.850 ops/s
Iteration   7: 191927.412 ops/s
Iteration   8: 191732.790 ops/s
Iteration   9: 191197.781 ops/s
Iteration  10: 192589.989 ops/s
Iteration  11: 192192.812 ops/s
Iteration  12: 191884.751 ops/s
Iteration  13: 192305.734 ops/s
Iteration  14: 192443.121 ops/s
Iteration  15: 191901.722 ops/s
Iteration  16: 191373.139 ops/s
Iteration  17: 191609.693 ops/s
Iteration  18: 192132.840 ops/s
Iteration  19: 190917.559 ops/s
Iteration  20: 191237.316 ops/s
Iteration  21: 191484.443 ops/s
Iteration  22: 189901.874 ops/s
Iteration  23: 192280.709 ops/s
Iteration  24: 192039.787 ops/s
Iteration  25: 191014.971 ops/s
Iteration  26: 191564.804 ops/s
Iteration  27: 191764.801 ops/s
Iteration  28: 191091.599 ops/s
Iteration  29: 190679.823 ops/s
Iteration  30: 190326.437 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_109._Benchmark.benchmark_Cluster_109":
  191514.722 ±(99.9%) 445.430 ops/s [Average]
  (min, avg, max) = (189901.874, 191514.722, 192589.989), stdev = 666.699
  CI (99.9%): [191069.292, 191960.153] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_109._Benchmark.benchmark_Cluster_109  thrpt   30  191514.722 ± 445.430  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_11._Benchmark.benchmark_Cluster_11$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_11._Benchmark.benchmark_Cluster_11

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 84413.065 ops/s
# Warmup Iteration   2: 156623.218 ops/s
# Warmup Iteration   3: 173004.110 ops/s
# Warmup Iteration   4: 185508.252 ops/s
# Warmup Iteration   5: 186997.884 ops/s
# Warmup Iteration   6: 186819.210 ops/s
# Warmup Iteration   7: 186969.093 ops/s
# Warmup Iteration   8: 187391.760 ops/s
# Warmup Iteration   9: 185343.216 ops/s
# Warmup Iteration  10: 186332.386 ops/s
# Warmup Iteration  11: 185319.783 ops/s
# Warmup Iteration  12: 184754.250 ops/s
# Warmup Iteration  13: 185941.312 ops/s
# Warmup Iteration  14: 185904.337 ops/s
# Warmup Iteration  15: 186819.024 ops/s
# Warmup Iteration  16: 182986.197 ops/s
# Warmup Iteration  17: 191372.150 ops/s
# Warmup Iteration  18: 191281.289 ops/s
# Warmup Iteration  19: 192237.509 ops/s
# Warmup Iteration  20: 192069.525 ops/s
# Warmup Iteration  21: 190987.137 ops/s
# Warmup Iteration  22: 191844.210 ops/s
# Warmup Iteration  23: 191792.239 ops/s
# Warmup Iteration  24: 191195.851 ops/s
# Warmup Iteration  25: 191165.484 ops/s
# Warmup Iteration  26: 190735.649 ops/s
# Warmup Iteration  27: 192097.133 ops/s
# Warmup Iteration  28: 192594.153 ops/s
# Warmup Iteration  29: 191607.775 ops/s
# Warmup Iteration  30: 191349.629 ops/s
Iteration   1: 190793.518 ops/s
Iteration   2: 191678.521 ops/s
Iteration   3: 191919.622 ops/s
Iteration   4: 190921.531 ops/s
Iteration   5: 190644.367 ops/s
Iteration   6: 191949.164 ops/s
Iteration   7: 191657.603 ops/s
Iteration   8: 191529.975 ops/s
Iteration   9: 191928.969 ops/s
Iteration  10: 192217.448 ops/s
Iteration  11: 191372.530 ops/s
Iteration  12: 190729.310 ops/s
Iteration  13: 191441.333 ops/s
Iteration  14: 190825.465 ops/s
Iteration  15: 191660.604 ops/s
Iteration  16: 191315.229 ops/s
Iteration  17: 191188.526 ops/s
Iteration  18: 191905.822 ops/s
Iteration  19: 189622.339 ops/s
Iteration  20: 191593.289 ops/s
Iteration  21: 191617.359 ops/s
Iteration  22: 192004.701 ops/s
Iteration  23: 191116.881 ops/s
Iteration  24: 192178.085 ops/s
Iteration  25: 191904.198 ops/s
Iteration  26: 190038.812 ops/s
Iteration  27: 192272.685 ops/s
Iteration  28: 191254.727 ops/s
Iteration  29: 191344.802 ops/s
Iteration  30: 192683.659 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_11._Benchmark.benchmark_Cluster_11":
  191443.702 ±(99.9%) 443.617 ops/s [Average]
  (min, avg, max) = (189622.339, 191443.702, 192683.659), stdev = 663.985
  CI (99.9%): [191000.085, 191887.319] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_11._Benchmark.benchmark_Cluster_11  thrpt   30  191443.702 ± 443.617  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_110._Benchmark.benchmark_Cluster_110$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_110._Benchmark.benchmark_Cluster_110

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 75754.226 ops/s
# Warmup Iteration   2: 149251.727 ops/s
# Warmup Iteration   3: 187355.190 ops/s
# Warmup Iteration   4: 189639.885 ops/s
# Warmup Iteration   5: 189979.030 ops/s
# Warmup Iteration   6: 189370.401 ops/s
# Warmup Iteration   7: 190893.876 ops/s
# Warmup Iteration   8: 189682.032 ops/s
# Warmup Iteration   9: 189445.824 ops/s
# Warmup Iteration  10: 189884.262 ops/s
# Warmup Iteration  11: 189861.011 ops/s
# Warmup Iteration  12: 190654.782 ops/s
# Warmup Iteration  13: 189132.507 ops/s
# Warmup Iteration  14: 189287.965 ops/s
# Warmup Iteration  15: 190626.402 ops/s
# Warmup Iteration  16: 188608.450 ops/s
# Warmup Iteration  17: 199764.939 ops/s
# Warmup Iteration  18: 201553.480 ops/s
# Warmup Iteration  19: 202020.540 ops/s
# Warmup Iteration  20: 202216.747 ops/s
# Warmup Iteration  21: 201086.760 ops/s
# Warmup Iteration  22: 201897.968 ops/s
# Warmup Iteration  23: 202135.324 ops/s
# Warmup Iteration  24: 201688.061 ops/s
# Warmup Iteration  25: 201763.294 ops/s
# Warmup Iteration  26: 202083.970 ops/s
# Warmup Iteration  27: 201200.791 ops/s
# Warmup Iteration  28: 201716.325 ops/s
# Warmup Iteration  29: 201997.144 ops/s
# Warmup Iteration  30: 202424.182 ops/s
Iteration   1: 200485.770 ops/s
Iteration   2: 200131.849 ops/s
Iteration   3: 200888.472 ops/s
Iteration   4: 201207.109 ops/s
Iteration   5: 200256.315 ops/s
Iteration   6: 200880.726 ops/s
Iteration   7: 201581.527 ops/s
Iteration   8: 202251.729 ops/s
Iteration   9: 201908.100 ops/s
Iteration  10: 201995.052 ops/s
Iteration  11: 202255.141 ops/s
Iteration  12: 200811.303 ops/s
Iteration  13: 200928.750 ops/s
Iteration  14: 202082.991 ops/s
Iteration  15: 200647.965 ops/s
Iteration  16: 201114.006 ops/s
Iteration  17: 202406.782 ops/s
Iteration  18: 202492.470 ops/s
Iteration  19: 201568.509 ops/s
Iteration  20: 201860.535 ops/s
Iteration  21: 201841.836 ops/s
Iteration  22: 202500.618 ops/s
Iteration  23: 201146.485 ops/s
Iteration  24: 202151.433 ops/s
Iteration  25: 202056.547 ops/s
Iteration  26: 201459.862 ops/s
Iteration  27: 202214.385 ops/s
Iteration  28: 201445.551 ops/s
Iteration  29: 202125.297 ops/s
Iteration  30: 201780.877 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_110._Benchmark.benchmark_Cluster_110":
  201549.266 ±(99.9%) 459.053 ops/s [Average]
  (min, avg, max) = (200131.849, 201549.266, 202500.618), stdev = 687.089
  CI (99.9%): [201090.213, 202008.320] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_110._Benchmark.benchmark_Cluster_110  thrpt   30  201549.266 ± 459.053  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_111._Benchmark.benchmark_Cluster_111$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_111._Benchmark.benchmark_Cluster_111

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 86229.905 ops/s
# Warmup Iteration   2: 132658.791 ops/s
# Warmup Iteration   3: 149778.052 ops/s
# Warmup Iteration   4: 151831.994 ops/s
# Warmup Iteration   5: 152097.698 ops/s
# Warmup Iteration   6: 151826.995 ops/s
# Warmup Iteration   7: 152283.179 ops/s
# Warmup Iteration   8: 151881.264 ops/s
# Warmup Iteration   9: 151601.640 ops/s
# Warmup Iteration  10: 151084.411 ops/s
# Warmup Iteration  11: 150976.857 ops/s
# Warmup Iteration  12: 152313.733 ops/s
# Warmup Iteration  13: 151917.790 ops/s
# Warmup Iteration  14: 152621.139 ops/s
# Warmup Iteration  15: 152129.936 ops/s
# Warmup Iteration  16: 150907.698 ops/s
# Warmup Iteration  17: 158781.225 ops/s
# Warmup Iteration  18: 158716.155 ops/s
# Warmup Iteration  19: 158668.549 ops/s
# Warmup Iteration  20: 159080.091 ops/s
# Warmup Iteration  21: 158111.600 ops/s
# Warmup Iteration  22: 157735.957 ops/s
# Warmup Iteration  23: 158405.953 ops/s
# Warmup Iteration  24: 159100.858 ops/s
# Warmup Iteration  25: 159060.824 ops/s
# Warmup Iteration  26: 158996.897 ops/s
# Warmup Iteration  27: 158323.160 ops/s
# Warmup Iteration  28: 158074.179 ops/s
# Warmup Iteration  29: 158831.531 ops/s
# Warmup Iteration  30: 158230.188 ops/s
Iteration   1: 158221.521 ops/s
Iteration   2: 158835.916 ops/s
Iteration   3: 158843.674 ops/s
Iteration   4: 157808.385 ops/s
Iteration   5: 158902.284 ops/s
Iteration   6: 159080.204 ops/s
Iteration   7: 158092.504 ops/s
Iteration   8: 159483.121 ops/s
Iteration   9: 158422.081 ops/s
Iteration  10: 159295.545 ops/s
Iteration  11: 158511.375 ops/s
Iteration  12: 153796.839 ops/s
Iteration  13: 158751.571 ops/s
Iteration  14: 158960.422 ops/s
Iteration  15: 158283.375 ops/s
Iteration  16: 158876.349 ops/s
Iteration  17: 159185.533 ops/s
Iteration  18: 157702.777 ops/s
Iteration  19: 158677.346 ops/s
Iteration  20: 159375.666 ops/s
Iteration  21: 158913.034 ops/s
Iteration  22: 158218.084 ops/s
Iteration  23: 158114.013 ops/s
Iteration  24: 158785.121 ops/s
Iteration  25: 159558.518 ops/s
Iteration  26: 158714.207 ops/s
Iteration  27: 159164.716 ops/s
Iteration  28: 158603.713 ops/s
Iteration  29: 158302.227 ops/s
Iteration  30: 158218.062 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_111._Benchmark.benchmark_Cluster_111":
  158523.273 ±(99.9%) 676.651 ops/s [Average]
  (min, avg, max) = (153796.839, 158523.273, 159558.518), stdev = 1012.780
  CI (99.9%): [157846.622, 159199.924] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_111._Benchmark.benchmark_Cluster_111  thrpt   30  158523.273 ± 676.651  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_112._Benchmark.benchmark_Cluster_112$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_112._Benchmark.benchmark_Cluster_112

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 74664.259 ops/s
# Warmup Iteration   2: 117974.637 ops/s
# Warmup Iteration   3: 136329.888 ops/s
# Warmup Iteration   4: 151826.353 ops/s
# Warmup Iteration   5: 154310.814 ops/s
# Warmup Iteration   6: 153353.945 ops/s
# Warmup Iteration   7: 153642.897 ops/s
# Warmup Iteration   8: 153219.430 ops/s
# Warmup Iteration   9: 152565.441 ops/s
# Warmup Iteration  10: 153276.616 ops/s
# Warmup Iteration  11: 152525.440 ops/s
# Warmup Iteration  12: 152427.286 ops/s
# Warmup Iteration  13: 151177.575 ops/s
# Warmup Iteration  14: 151954.735 ops/s
# Warmup Iteration  15: 153897.744 ops/s
# Warmup Iteration  16: 152026.315 ops/s
# Warmup Iteration  17: 157582.492 ops/s
# Warmup Iteration  18: 157597.050 ops/s
# Warmup Iteration  19: 157302.321 ops/s
# Warmup Iteration  20: 156948.566 ops/s
# Warmup Iteration  21: 156689.535 ops/s
# Warmup Iteration  22: 156746.002 ops/s
# Warmup Iteration  23: 157170.212 ops/s
# Warmup Iteration  24: 157249.535 ops/s
# Warmup Iteration  25: 158236.561 ops/s
# Warmup Iteration  26: 157070.350 ops/s
# Warmup Iteration  27: 158144.793 ops/s
# Warmup Iteration  28: 157199.881 ops/s
# Warmup Iteration  29: 157624.990 ops/s
# Warmup Iteration  30: 156720.532 ops/s
Iteration   1: 156763.055 ops/s
Iteration   2: 157708.733 ops/s
Iteration   3: 156935.758 ops/s
Iteration   4: 157689.476 ops/s
Iteration   5: 157628.391 ops/s
Iteration   6: 157427.143 ops/s
Iteration   7: 157297.020 ops/s
Iteration   8: 157074.921 ops/s
Iteration   9: 158684.513 ops/s
Iteration  10: 158209.429 ops/s
Iteration  11: 158098.873 ops/s
Iteration  12: 158038.699 ops/s
Iteration  13: 157892.852 ops/s
Iteration  14: 158314.273 ops/s
Iteration  15: 157721.150 ops/s
Iteration  16: 158096.328 ops/s
Iteration  17: 157336.085 ops/s
Iteration  18: 157539.385 ops/s
Iteration  19: 157675.746 ops/s
Iteration  20: 156489.420 ops/s
Iteration  21: 158724.372 ops/s
Iteration  22: 157130.417 ops/s
Iteration  23: 156875.007 ops/s
Iteration  24: 157903.102 ops/s
Iteration  25: 157954.264 ops/s
Iteration  26: 156859.163 ops/s
Iteration  27: 157459.944 ops/s
Iteration  28: 157216.417 ops/s
Iteration  29: 157189.317 ops/s
Iteration  30: 156643.598 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_112._Benchmark.benchmark_Cluster_112":
  157552.562 ±(99.9%) 385.945 ops/s [Average]
  (min, avg, max) = (156489.420, 157552.562, 158724.372), stdev = 577.664
  CI (99.9%): [157166.617, 157938.507] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_112._Benchmark.benchmark_Cluster_112  thrpt   30  157552.562 ± 385.945  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_113._Benchmark.benchmark_Cluster_113$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_113._Benchmark.benchmark_Cluster_113

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 30317.234 ops/s
# Warmup Iteration   2: 77755.402 ops/s
# Warmup Iteration   3: 89721.954 ops/s
# Warmup Iteration   4: 109278.473 ops/s
# Warmup Iteration   5: 125111.197 ops/s
# Warmup Iteration   6: 124695.348 ops/s
# Warmup Iteration   7: 124467.704 ops/s
# Warmup Iteration   8: 124080.262 ops/s
# Warmup Iteration   9: 126068.158 ops/s
# Warmup Iteration  10: 124884.452 ops/s
# Warmup Iteration  11: 124635.506 ops/s
# Warmup Iteration  12: 125274.800 ops/s
# Warmup Iteration  13: 124512.061 ops/s
# Warmup Iteration  14: 124290.422 ops/s
# Warmup Iteration  15: 124208.680 ops/s
# Warmup Iteration  16: 124278.406 ops/s
# Warmup Iteration  17: 126341.169 ops/s
# Warmup Iteration  18: 126370.453 ops/s
# Warmup Iteration  19: 125452.465 ops/s
# Warmup Iteration  20: 124931.742 ops/s
# Warmup Iteration  21: 125248.355 ops/s
# Warmup Iteration  22: 124984.109 ops/s
# Warmup Iteration  23: 125781.257 ops/s
# Warmup Iteration  24: 125040.838 ops/s
# Warmup Iteration  25: 125169.071 ops/s
# Warmup Iteration  26: 125226.309 ops/s
# Warmup Iteration  27: 125588.656 ops/s
# Warmup Iteration  28: 125779.784 ops/s
# Warmup Iteration  29: 124650.079 ops/s
# Warmup Iteration  30: 125241.249 ops/s
Iteration   1: 125030.621 ops/s
Iteration   2: 124903.991 ops/s
Iteration   3: 125308.486 ops/s
Iteration   4: 125291.986 ops/s
Iteration   5: 125491.383 ops/s
Iteration   6: 125221.379 ops/s
Iteration   7: 125353.180 ops/s
Iteration   8: 125229.915 ops/s
Iteration   9: 125981.457 ops/s
Iteration  10: 125382.298 ops/s
Iteration  11: 125608.967 ops/s
Iteration  12: 125149.494 ops/s
Iteration  13: 125324.407 ops/s
Iteration  14: 122887.356 ops/s
Iteration  15: 125138.279 ops/s
Iteration  16: 124988.010 ops/s
Iteration  17: 125203.511 ops/s
Iteration  18: 125146.014 ops/s
Iteration  19: 125365.823 ops/s
Iteration  20: 124641.032 ops/s
Iteration  21: 125569.255 ops/s
Iteration  22: 125769.404 ops/s
Iteration  23: 125799.081 ops/s
Iteration  24: 125720.092 ops/s
Iteration  25: 125706.220 ops/s
Iteration  26: 124992.209 ops/s
Iteration  27: 125656.055 ops/s
Iteration  28: 124984.643 ops/s
Iteration  29: 125486.310 ops/s
Iteration  30: 125942.429 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_113._Benchmark.benchmark_Cluster_113":
  125275.776 ±(99.9%) 370.540 ops/s [Average]
  (min, avg, max) = (122887.356, 125275.776, 125981.457), stdev = 554.607
  CI (99.9%): [124905.236, 125646.316] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_113._Benchmark.benchmark_Cluster_113  thrpt   30  125275.776 ± 370.540  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_114._Benchmark.benchmark_Cluster_114$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_114._Benchmark.benchmark_Cluster_114

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3493.237 ops/s
# Warmup Iteration   2: 60944.522 ops/s
# Warmup Iteration   3: 85054.282 ops/s
# Warmup Iteration   4: 101849.393 ops/s
# Warmup Iteration   5: 118946.373 ops/s
# Warmup Iteration   6: 118697.267 ops/s
# Warmup Iteration   7: 118647.435 ops/s
# Warmup Iteration   8: 118511.351 ops/s
# Warmup Iteration   9: 118469.557 ops/s
# Warmup Iteration  10: 118288.502 ops/s
# Warmup Iteration  11: 118940.868 ops/s
# Warmup Iteration  12: 118618.720 ops/s
# Warmup Iteration  13: 118176.801 ops/s
# Warmup Iteration  14: 118383.005 ops/s
# Warmup Iteration  15: 117933.142 ops/s
# Warmup Iteration  16: 117886.514 ops/s
# Warmup Iteration  17: 118977.215 ops/s
# Warmup Iteration  18: 118401.073 ops/s
# Warmup Iteration  19: 119071.919 ops/s
# Warmup Iteration  20: 118572.468 ops/s
# Warmup Iteration  21: 118614.566 ops/s
# Warmup Iteration  22: 119177.756 ops/s
# Warmup Iteration  23: 118704.717 ops/s
# Warmup Iteration  24: 118596.266 ops/s
# Warmup Iteration  25: 118614.972 ops/s
# Warmup Iteration  26: 118229.953 ops/s
# Warmup Iteration  27: 119132.025 ops/s
# Warmup Iteration  28: 118817.989 ops/s
# Warmup Iteration  29: 118315.805 ops/s
# Warmup Iteration  30: 118386.329 ops/s
Iteration   1: 118045.642 ops/s
Iteration   2: 118357.043 ops/s
Iteration   3: 118533.041 ops/s
Iteration   4: 118655.224 ops/s
Iteration   5: 118509.352 ops/s
Iteration   6: 118178.667 ops/s
Iteration   7: 119627.957 ops/s
Iteration   8: 118662.832 ops/s
Iteration   9: 119205.168 ops/s
Iteration  10: 119178.358 ops/s
Iteration  11: 118647.938 ops/s
Iteration  12: 119216.216 ops/s
Iteration  13: 118564.073 ops/s
Iteration  14: 118373.483 ops/s
Iteration  15: 119253.816 ops/s
Iteration  16: 119434.684 ops/s
Iteration  17: 119027.044 ops/s
Iteration  18: 119103.742 ops/s
Iteration  19: 118732.139 ops/s
Iteration  20: 118866.401 ops/s
Iteration  21: 118910.620 ops/s
Iteration  22: 118583.551 ops/s
Iteration  23: 118870.671 ops/s
Iteration  24: 119025.923 ops/s
Iteration  25: 118799.872 ops/s
Iteration  26: 118928.267 ops/s
Iteration  27: 117949.866 ops/s
Iteration  28: 119315.711 ops/s
Iteration  29: 118864.960 ops/s
Iteration  30: 118937.839 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_114._Benchmark.benchmark_Cluster_114":
  118812.003 ±(99.9%) 268.233 ops/s [Average]
  (min, avg, max) = (117949.866, 118812.003, 119627.957), stdev = 401.478
  CI (99.9%): [118543.771, 119080.236] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_114._Benchmark.benchmark_Cluster_114  thrpt   30  118812.003 ± 268.233  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_115._Benchmark.benchmark_Cluster_115$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_115._Benchmark.benchmark_Cluster_115

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 72299.318 ops/s
# Warmup Iteration   2: 116908.941 ops/s
# Warmup Iteration   3: 139708.357 ops/s
# Warmup Iteration   4: 142076.685 ops/s
# Warmup Iteration   5: 141351.100 ops/s
# Warmup Iteration   6: 140979.153 ops/s
# Warmup Iteration   7: 140921.424 ops/s
# Warmup Iteration   8: 139266.479 ops/s
# Warmup Iteration   9: 139914.307 ops/s
# Warmup Iteration  10: 141118.265 ops/s
# Warmup Iteration  11: 141191.669 ops/s
# Warmup Iteration  12: 140611.654 ops/s
# Warmup Iteration  13: 140321.853 ops/s
# Warmup Iteration  14: 140728.507 ops/s
# Warmup Iteration  15: 140623.313 ops/s
# Warmup Iteration  16: 140833.581 ops/s
# Warmup Iteration  17: 142373.576 ops/s
# Warmup Iteration  18: 142695.519 ops/s
# Warmup Iteration  19: 142261.075 ops/s
# Warmup Iteration  20: 143919.161 ops/s
# Warmup Iteration  21: 143687.741 ops/s
# Warmup Iteration  22: 143203.453 ops/s
# Warmup Iteration  23: 143447.709 ops/s
# Warmup Iteration  24: 142056.662 ops/s
# Warmup Iteration  25: 142672.166 ops/s
# Warmup Iteration  26: 142945.521 ops/s
# Warmup Iteration  27: 143586.962 ops/s
# Warmup Iteration  28: 142369.170 ops/s
# Warmup Iteration  29: 141355.083 ops/s
# Warmup Iteration  30: 143952.626 ops/s
Iteration   1: 142760.068 ops/s
Iteration   2: 142289.957 ops/s
Iteration   3: 143416.636 ops/s
Iteration   4: 142966.120 ops/s
Iteration   5: 142601.376 ops/s
Iteration   6: 142683.639 ops/s
Iteration   7: 142672.488 ops/s
Iteration   8: 142408.506 ops/s
Iteration   9: 143502.239 ops/s
Iteration  10: 142957.916 ops/s
Iteration  11: 143685.173 ops/s
Iteration  12: 143272.569 ops/s
Iteration  13: 141481.554 ops/s
Iteration  14: 143211.447 ops/s
Iteration  15: 142489.052 ops/s
Iteration  16: 142189.166 ops/s
Iteration  17: 142718.583 ops/s
Iteration  18: 143485.731 ops/s
Iteration  19: 142726.126 ops/s
Iteration  20: 143379.507 ops/s
Iteration  21: 143509.862 ops/s
Iteration  22: 143790.362 ops/s
Iteration  23: 142121.868 ops/s
Iteration  24: 143314.253 ops/s
Iteration  25: 142898.810 ops/s
Iteration  26: 143530.109 ops/s
Iteration  27: 143359.462 ops/s
Iteration  28: 143322.084 ops/s
Iteration  29: 142973.197 ops/s
Iteration  30: 143833.506 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_115._Benchmark.benchmark_Cluster_115":
  142985.046 ±(99.9%) 372.628 ops/s [Average]
  (min, avg, max) = (141481.554, 142985.046, 143833.506), stdev = 557.731
  CI (99.9%): [142612.418, 143357.673] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_115._Benchmark.benchmark_Cluster_115  thrpt   30  142985.046 ± 372.628  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_116._Benchmark.benchmark_Cluster_116$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_116._Benchmark.benchmark_Cluster_116

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 110326.389 ops/s
# Warmup Iteration   2: 167927.608 ops/s
# Warmup Iteration   3: 185606.766 ops/s
# Warmup Iteration   4: 190891.932 ops/s
# Warmup Iteration   5: 191570.631 ops/s
# Warmup Iteration   6: 192800.074 ops/s
# Warmup Iteration   7: 193298.898 ops/s
# Warmup Iteration   8: 193420.737 ops/s
# Warmup Iteration   9: 193118.517 ops/s
# Warmup Iteration  10: 192295.220 ops/s
# Warmup Iteration  11: 191703.112 ops/s
# Warmup Iteration  12: 191578.728 ops/s
# Warmup Iteration  13: 192661.140 ops/s
# Warmup Iteration  14: 192729.208 ops/s
# Warmup Iteration  15: 192132.827 ops/s
# Warmup Iteration  16: 192949.985 ops/s
# Warmup Iteration  17: 214986.609 ops/s
# Warmup Iteration  18: 214304.168 ops/s
# Warmup Iteration  19: 214919.928 ops/s
# Warmup Iteration  20: 215501.730 ops/s
# Warmup Iteration  21: 216667.062 ops/s
# Warmup Iteration  22: 215862.953 ops/s
# Warmup Iteration  23: 215197.378 ops/s
# Warmup Iteration  24: 215046.275 ops/s
# Warmup Iteration  25: 216190.093 ops/s
# Warmup Iteration  26: 215869.577 ops/s
# Warmup Iteration  27: 214582.397 ops/s
# Warmup Iteration  28: 213814.672 ops/s
# Warmup Iteration  29: 215262.452 ops/s
# Warmup Iteration  30: 215066.495 ops/s
Iteration   1: 214170.733 ops/s
Iteration   2: 216304.146 ops/s
Iteration   3: 215722.987 ops/s
Iteration   4: 214934.512 ops/s
Iteration   5: 214984.135 ops/s
Iteration   6: 214974.642 ops/s
Iteration   7: 215800.091 ops/s
Iteration   8: 216108.509 ops/s
Iteration   9: 214334.026 ops/s
Iteration  10: 214898.664 ops/s
Iteration  11: 215818.137 ops/s
Iteration  12: 216109.180 ops/s
Iteration  13: 214888.981 ops/s
Iteration  14: 215860.612 ops/s
Iteration  15: 215313.064 ops/s
Iteration  16: 214709.542 ops/s
Iteration  17: 214575.709 ops/s
Iteration  18: 216031.237 ops/s
Iteration  19: 214579.779 ops/s
Iteration  20: 215972.467 ops/s
Iteration  21: 214290.078 ops/s
Iteration  22: 215470.481 ops/s
Iteration  23: 215474.757 ops/s
Iteration  24: 214678.782 ops/s
Iteration  25: 216518.007 ops/s
Iteration  26: 215542.464 ops/s
Iteration  27: 215601.827 ops/s
Iteration  28: 215301.760 ops/s
Iteration  29: 214722.740 ops/s
Iteration  30: 214776.730 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_116._Benchmark.benchmark_Cluster_116":
  215282.293 ±(99.9%) 434.790 ops/s [Average]
  (min, avg, max) = (214170.733, 215282.293, 216518.007), stdev = 650.773
  CI (99.9%): [214847.503, 215717.083] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_116._Benchmark.benchmark_Cluster_116  thrpt   30  215282.293 ± 434.790  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_117._Benchmark.benchmark_Cluster_117$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_117._Benchmark.benchmark_Cluster_117

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17724.994 ops/s
# Warmup Iteration   2: 76725.731 ops/s
# Warmup Iteration   3: 90910.713 ops/s
# Warmup Iteration   4: 112086.495 ops/s
# Warmup Iteration   5: 118215.485 ops/s
# Warmup Iteration   6: 118629.390 ops/s
# Warmup Iteration   7: 118259.311 ops/s
# Warmup Iteration   8: 118281.197 ops/s
# Warmup Iteration   9: 117733.488 ops/s
# Warmup Iteration  10: 117122.838 ops/s
# Warmup Iteration  11: 117986.677 ops/s
# Warmup Iteration  12: 117595.670 ops/s
# Warmup Iteration  13: 118028.252 ops/s
# Warmup Iteration  14: 117169.947 ops/s
# Warmup Iteration  15: 116827.726 ops/s
# Warmup Iteration  16: 117606.533 ops/s
# Warmup Iteration  17: 119289.249 ops/s
# Warmup Iteration  18: 119839.811 ops/s
# Warmup Iteration  19: 120000.518 ops/s
# Warmup Iteration  20: 119856.125 ops/s
# Warmup Iteration  21: 119109.101 ops/s
# Warmup Iteration  22: 120086.974 ops/s
# Warmup Iteration  23: 119588.965 ops/s
# Warmup Iteration  24: 118928.745 ops/s
# Warmup Iteration  25: 119420.504 ops/s
# Warmup Iteration  26: 119028.202 ops/s
# Warmup Iteration  27: 119602.931 ops/s
# Warmup Iteration  28: 119374.047 ops/s
# Warmup Iteration  29: 119301.843 ops/s
# Warmup Iteration  30: 118817.058 ops/s
Iteration   1: 120359.320 ops/s
Iteration   2: 119763.348 ops/s
Iteration   3: 119823.370 ops/s
Iteration   4: 119471.122 ops/s
Iteration   5: 118859.811 ops/s
Iteration   6: 120112.172 ops/s
Iteration   7: 119701.087 ops/s
Iteration   8: 119577.329 ops/s
Iteration   9: 119819.977 ops/s
Iteration  10: 120032.813 ops/s
Iteration  11: 119715.352 ops/s
Iteration  12: 119743.860 ops/s
Iteration  13: 119210.753 ops/s
Iteration  14: 119860.773 ops/s
Iteration  15: 119589.675 ops/s
Iteration  16: 119928.298 ops/s
Iteration  17: 120693.599 ops/s
Iteration  18: 119843.111 ops/s
Iteration  19: 119877.653 ops/s
Iteration  20: 119142.721 ops/s
Iteration  21: 119806.689 ops/s
Iteration  22: 119448.037 ops/s
Iteration  23: 119197.462 ops/s
Iteration  24: 119163.617 ops/s
Iteration  25: 120180.510 ops/s
Iteration  26: 119523.007 ops/s
Iteration  27: 119592.199 ops/s
Iteration  28: 119888.647 ops/s
Iteration  29: 119839.789 ops/s
Iteration  30: 120437.118 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_117._Benchmark.benchmark_Cluster_117":
  119740.107 ±(99.9%) 267.332 ops/s [Average]
  (min, avg, max) = (118859.811, 119740.107, 120693.599), stdev = 400.129
  CI (99.9%): [119472.776, 120007.439] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_117._Benchmark.benchmark_Cluster_117  thrpt   30  119740.107 ± 267.332  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_118._Benchmark.benchmark_Cluster_118$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_118._Benchmark.benchmark_Cluster_118

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 56547.483 ops/s
# Warmup Iteration   2: 105921.812 ops/s
# Warmup Iteration   3: 109553.737 ops/s
# Warmup Iteration   4: 123671.635 ops/s
# Warmup Iteration   5: 123386.380 ops/s
# Warmup Iteration   6: 123959.136 ops/s
# Warmup Iteration   7: 122976.950 ops/s
# Warmup Iteration   8: 123451.471 ops/s
# Warmup Iteration   9: 122928.292 ops/s
# Warmup Iteration  10: 122870.014 ops/s
# Warmup Iteration  11: 122702.796 ops/s
# Warmup Iteration  12: 122644.686 ops/s
# Warmup Iteration  13: 122414.611 ops/s
# Warmup Iteration  14: 122109.563 ops/s
# Warmup Iteration  15: 122624.015 ops/s
# Warmup Iteration  16: 122753.147 ops/s
# Warmup Iteration  17: 125610.814 ops/s
# Warmup Iteration  18: 125668.023 ops/s
# Warmup Iteration  19: 126535.447 ops/s
# Warmup Iteration  20: 125899.925 ops/s
# Warmup Iteration  21: 126107.153 ops/s
# Warmup Iteration  22: 125630.783 ops/s
# Warmup Iteration  23: 126807.333 ops/s
# Warmup Iteration  24: 126764.767 ops/s
# Warmup Iteration  25: 125734.101 ops/s
# Warmup Iteration  26: 125852.294 ops/s
# Warmup Iteration  27: 125410.792 ops/s
# Warmup Iteration  28: 126533.959 ops/s
# Warmup Iteration  29: 126256.409 ops/s
# Warmup Iteration  30: 125874.103 ops/s
Iteration   1: 126146.108 ops/s
Iteration   2: 126093.518 ops/s
Iteration   3: 126288.743 ops/s
Iteration   4: 126184.135 ops/s
Iteration   5: 126087.681 ops/s
Iteration   6: 125529.696 ops/s
Iteration   7: 126445.006 ops/s
Iteration   8: 126105.869 ops/s
Iteration   9: 126244.724 ops/s
Iteration  10: 126502.130 ops/s
Iteration  11: 125989.882 ops/s
Iteration  12: 126150.635 ops/s
Iteration  13: 126108.710 ops/s
Iteration  14: 125667.207 ops/s
Iteration  15: 125869.425 ops/s
Iteration  16: 126655.946 ops/s
Iteration  17: 126335.346 ops/s
Iteration  18: 126142.008 ops/s
Iteration  19: 125747.798 ops/s
Iteration  20: 126136.764 ops/s
Iteration  21: 126318.752 ops/s
Iteration  22: 126006.648 ops/s
Iteration  23: 126500.142 ops/s
Iteration  24: 125719.210 ops/s
Iteration  25: 126483.017 ops/s
Iteration  26: 126619.872 ops/s
Iteration  27: 127113.694 ops/s
Iteration  28: 125926.297 ops/s
Iteration  29: 126462.125 ops/s
Iteration  30: 126586.744 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_118._Benchmark.benchmark_Cluster_118":
  126205.594 ±(99.9%) 224.993 ops/s [Average]
  (min, avg, max) = (125529.696, 126205.594, 127113.694), stdev = 336.760
  CI (99.9%): [125980.601, 126430.588] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_118._Benchmark.benchmark_Cluster_118  thrpt   30  126205.594 ± 224.993  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_119._Benchmark.benchmark_Cluster_119$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_119._Benchmark.benchmark_Cluster_119

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 38678.857 ops/s
# Warmup Iteration   2: 109670.226 ops/s
# Warmup Iteration   3: 135199.062 ops/s
# Warmup Iteration   4: 174563.660 ops/s
# Warmup Iteration   5: 174456.763 ops/s
# Warmup Iteration   6: 174091.922 ops/s
# Warmup Iteration   7: 173607.459 ops/s
# Warmup Iteration   8: 173682.199 ops/s
# Warmup Iteration   9: 173559.478 ops/s
# Warmup Iteration  10: 172907.780 ops/s
# Warmup Iteration  11: 172193.412 ops/s
# Warmup Iteration  12: 173816.372 ops/s
# Warmup Iteration  13: 171539.073 ops/s
# Warmup Iteration  14: 172711.229 ops/s
# Warmup Iteration  15: 173216.887 ops/s
# Warmup Iteration  16: 173178.106 ops/s
# Warmup Iteration  17: 175318.713 ops/s
# Warmup Iteration  18: 176088.479 ops/s
# Warmup Iteration  19: 176206.577 ops/s
# Warmup Iteration  20: 177475.084 ops/s
# Warmup Iteration  21: 176761.688 ops/s
# Warmup Iteration  22: 176549.467 ops/s
# Warmup Iteration  23: 176586.447 ops/s
# Warmup Iteration  24: 176258.724 ops/s
# Warmup Iteration  25: 177038.989 ops/s
# Warmup Iteration  26: 176290.521 ops/s
# Warmup Iteration  27: 176777.491 ops/s
# Warmup Iteration  28: 176759.327 ops/s
# Warmup Iteration  29: 175791.791 ops/s
# Warmup Iteration  30: 176708.033 ops/s
Iteration   1: 176025.222 ops/s
Iteration   2: 176509.891 ops/s
Iteration   3: 177169.334 ops/s
Iteration   4: 176475.253 ops/s
Iteration   5: 175958.992 ops/s
Iteration   6: 176422.092 ops/s
Iteration   7: 176124.081 ops/s
Iteration   8: 176184.471 ops/s
Iteration   9: 177269.118 ops/s
Iteration  10: 175502.602 ops/s
Iteration  11: 176807.429 ops/s
Iteration  12: 175923.633 ops/s
Iteration  13: 174926.953 ops/s
Iteration  14: 176968.992 ops/s
Iteration  15: 176971.704 ops/s
Iteration  16: 177092.765 ops/s
Iteration  17: 176203.292 ops/s
Iteration  18: 175782.077 ops/s
Iteration  19: 177232.552 ops/s
Iteration  20: 176407.174 ops/s
Iteration  21: 176420.956 ops/s
Iteration  22: 176917.527 ops/s
Iteration  23: 176884.843 ops/s
Iteration  24: 176003.069 ops/s
Iteration  25: 176769.078 ops/s
Iteration  26: 179149.316 ops/s
Iteration  27: 179527.768 ops/s
Iteration  28: 180186.679 ops/s
Iteration  29: 179604.259 ops/s
Iteration  30: 179509.478 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_119._Benchmark.benchmark_Cluster_119":
  176964.353 ±(99.9%) 879.854 ops/s [Average]
  (min, avg, max) = (174926.953, 176964.353, 180186.679), stdev = 1316.924
  CI (99.9%): [176084.499, 177844.207] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_119._Benchmark.benchmark_Cluster_119  thrpt   30  176964.353 ± 879.854  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_12._Benchmark.benchmark_Cluster_12$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_12._Benchmark.benchmark_Cluster_12

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 22910.622 ops/s
# Warmup Iteration   2: 89481.525 ops/s
# Warmup Iteration   3: 105640.396 ops/s
# Warmup Iteration   4: 120756.331 ops/s
# Warmup Iteration   5: 126174.815 ops/s
# Warmup Iteration   6: 125643.352 ops/s
# Warmup Iteration   7: 126298.170 ops/s
# Warmup Iteration   8: 125776.107 ops/s
# Warmup Iteration   9: 125071.589 ops/s
# Warmup Iteration  10: 122838.283 ops/s
# Warmup Iteration  11: 124613.200 ops/s
# Warmup Iteration  12: 125178.512 ops/s
# Warmup Iteration  13: 125134.732 ops/s
# Warmup Iteration  14: 124773.302 ops/s
# Warmup Iteration  15: 125295.381 ops/s
# Warmup Iteration  16: 124673.924 ops/s
# Warmup Iteration  17: 129326.582 ops/s
# Warmup Iteration  18: 129499.632 ops/s
# Warmup Iteration  19: 129164.549 ops/s
# Warmup Iteration  20: 129214.723 ops/s
# Warmup Iteration  21: 130053.359 ops/s
# Warmup Iteration  22: 129870.321 ops/s
# Warmup Iteration  23: 128941.907 ops/s
# Warmup Iteration  24: 130104.183 ops/s
# Warmup Iteration  25: 128766.976 ops/s
# Warmup Iteration  26: 129687.744 ops/s
# Warmup Iteration  27: 129395.798 ops/s
# Warmup Iteration  28: 129426.372 ops/s
# Warmup Iteration  29: 129378.657 ops/s
# Warmup Iteration  30: 129968.620 ops/s
Iteration   1: 129758.179 ops/s
Iteration   2: 128656.026 ops/s
Iteration   3: 129838.791 ops/s
Iteration   4: 129549.853 ops/s
Iteration   5: 129933.697 ops/s
Iteration   6: 129778.511 ops/s
Iteration   7: 129635.300 ops/s
Iteration   8: 129654.258 ops/s
Iteration   9: 129091.425 ops/s
Iteration  10: 129060.556 ops/s
Iteration  11: 130062.857 ops/s
Iteration  12: 128949.839 ops/s
Iteration  13: 129635.170 ops/s
Iteration  14: 129020.597 ops/s
Iteration  15: 129481.586 ops/s
Iteration  16: 129607.935 ops/s
Iteration  17: 129539.763 ops/s
Iteration  18: 129715.061 ops/s
Iteration  19: 129583.583 ops/s
Iteration  20: 129561.615 ops/s
Iteration  21: 129968.898 ops/s
Iteration  22: 128956.821 ops/s
Iteration  23: 129186.144 ops/s
Iteration  24: 130086.919 ops/s
Iteration  25: 130282.142 ops/s
Iteration  26: 130065.089 ops/s
Iteration  27: 129242.567 ops/s
Iteration  28: 130028.956 ops/s
Iteration  29: 129197.914 ops/s
Iteration  30: 129830.454 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_12._Benchmark.benchmark_Cluster_12":
  129565.350 ±(99.9%) 272.085 ops/s [Average]
  (min, avg, max) = (128656.026, 129565.350, 130282.142), stdev = 407.243
  CI (99.9%): [129293.266, 129837.435] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_12._Benchmark.benchmark_Cluster_12  thrpt   30  129565.350 ± 272.085  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_120._Benchmark.benchmark_Cluster_120$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_120._Benchmark.benchmark_Cluster_120

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 78972.974 ops/s
# Warmup Iteration   2: 149129.950 ops/s
# Warmup Iteration   3: 161597.774 ops/s
# Warmup Iteration   4: 166520.285 ops/s
# Warmup Iteration   5: 176198.512 ops/s
# Warmup Iteration   6: 176795.122 ops/s
# Warmup Iteration   7: 177107.076 ops/s
# Warmup Iteration   8: 176298.440 ops/s
# Warmup Iteration   9: 176497.047 ops/s
# Warmup Iteration  10: 175248.043 ops/s
# Warmup Iteration  11: 176651.132 ops/s
# Warmup Iteration  12: 177322.355 ops/s
# Warmup Iteration  13: 176295.873 ops/s
# Warmup Iteration  14: 175189.458 ops/s
# Warmup Iteration  15: 174763.774 ops/s
# Warmup Iteration  16: 175489.033 ops/s
# Warmup Iteration  17: 181624.878 ops/s
# Warmup Iteration  18: 181203.059 ops/s
# Warmup Iteration  19: 182361.474 ops/s
# Warmup Iteration  20: 181609.070 ops/s
# Warmup Iteration  21: 181417.227 ops/s
# Warmup Iteration  22: 181534.859 ops/s
# Warmup Iteration  23: 181782.795 ops/s
# Warmup Iteration  24: 181320.542 ops/s
# Warmup Iteration  25: 182123.194 ops/s
# Warmup Iteration  26: 181355.019 ops/s
# Warmup Iteration  27: 183244.385 ops/s
# Warmup Iteration  28: 182813.176 ops/s
# Warmup Iteration  29: 182946.019 ops/s
# Warmup Iteration  30: 175490.485 ops/s
Iteration   1: 178293.455 ops/s
Iteration   2: 181509.787 ops/s
Iteration   3: 181731.369 ops/s
Iteration   4: 182511.793 ops/s
Iteration   5: 182577.361 ops/s
Iteration   6: 181280.370 ops/s
Iteration   7: 181663.585 ops/s
Iteration   8: 181444.895 ops/s
Iteration   9: 182792.830 ops/s
Iteration  10: 181855.615 ops/s
Iteration  11: 179948.751 ops/s
Iteration  12: 182346.076 ops/s
Iteration  13: 182435.791 ops/s
Iteration  14: 181893.269 ops/s
Iteration  15: 180474.756 ops/s
Iteration  16: 182663.930 ops/s
Iteration  17: 182049.322 ops/s
Iteration  18: 182043.508 ops/s
Iteration  19: 181407.549 ops/s
Iteration  20: 181757.640 ops/s
Iteration  21: 181778.254 ops/s
Iteration  22: 182488.293 ops/s
Iteration  23: 182267.091 ops/s
Iteration  24: 181957.487 ops/s
Iteration  25: 181463.271 ops/s
Iteration  26: 181617.641 ops/s
Iteration  27: 181746.595 ops/s
Iteration  28: 181554.514 ops/s
Iteration  29: 181993.409 ops/s
Iteration  30: 182108.763 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_120._Benchmark.benchmark_Cluster_120":
  181721.899 ±(99.9%) 591.027 ops/s [Average]
  (min, avg, max) = (178293.455, 181721.899, 182792.830), stdev = 884.622
  CI (99.9%): [181130.872, 182312.926] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_120._Benchmark.benchmark_Cluster_120  thrpt   30  181721.899 ± 591.027  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_121._Benchmark.benchmark_Cluster_121$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_121._Benchmark.benchmark_Cluster_121

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 64654.210 ops/s
# Warmup Iteration   2: 116479.130 ops/s
# Warmup Iteration   3: 128137.717 ops/s
# Warmup Iteration   4: 140513.632 ops/s
# Warmup Iteration   5: 141806.506 ops/s
# Warmup Iteration   6: 141831.442 ops/s
# Warmup Iteration   7: 141261.304 ops/s
# Warmup Iteration   8: 140959.126 ops/s
# Warmup Iteration   9: 141487.094 ops/s
# Warmup Iteration  10: 140576.326 ops/s
# Warmup Iteration  11: 141389.071 ops/s
# Warmup Iteration  12: 140970.284 ops/s
# Warmup Iteration  13: 140867.339 ops/s
# Warmup Iteration  14: 140785.844 ops/s
# Warmup Iteration  15: 140840.731 ops/s
# Warmup Iteration  16: 140144.208 ops/s
# Warmup Iteration  17: 144271.886 ops/s
# Warmup Iteration  18: 144109.927 ops/s
# Warmup Iteration  19: 143693.375 ops/s
# Warmup Iteration  20: 143635.291 ops/s
# Warmup Iteration  21: 144787.102 ops/s
# Warmup Iteration  22: 144165.404 ops/s
# Warmup Iteration  23: 144458.008 ops/s
# Warmup Iteration  24: 144017.862 ops/s
# Warmup Iteration  25: 144696.879 ops/s
# Warmup Iteration  26: 144542.016 ops/s
# Warmup Iteration  27: 144230.003 ops/s
# Warmup Iteration  28: 144419.869 ops/s
# Warmup Iteration  29: 143921.114 ops/s
# Warmup Iteration  30: 143948.446 ops/s
Iteration   1: 144016.024 ops/s
Iteration   2: 145096.706 ops/s
Iteration   3: 145427.982 ops/s
Iteration   4: 144699.564 ops/s
Iteration   5: 143986.917 ops/s
Iteration   6: 145098.654 ops/s
Iteration   7: 144856.501 ops/s
Iteration   8: 145126.190 ops/s
Iteration   9: 143783.562 ops/s
Iteration  10: 144677.680 ops/s
Iteration  11: 145148.756 ops/s
Iteration  12: 145002.052 ops/s
Iteration  13: 145364.705 ops/s
Iteration  14: 142006.849 ops/s
Iteration  15: 144859.040 ops/s
Iteration  16: 144729.522 ops/s
Iteration  17: 143690.626 ops/s
Iteration  18: 143978.865 ops/s
Iteration  19: 144159.716 ops/s
Iteration  20: 144668.619 ops/s
Iteration  21: 144223.066 ops/s
Iteration  22: 144081.761 ops/s
Iteration  23: 144617.539 ops/s
Iteration  24: 144574.781 ops/s
Iteration  25: 143962.263 ops/s
Iteration  26: 145062.809 ops/s
Iteration  27: 145084.979 ops/s
Iteration  28: 144849.687 ops/s
Iteration  29: 143873.586 ops/s
Iteration  30: 144701.827 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_121._Benchmark.benchmark_Cluster_121":
  144513.694 ±(99.9%) 461.464 ops/s [Average]
  (min, avg, max) = (142006.849, 144513.694, 145427.982), stdev = 690.698
  CI (99.9%): [144052.230, 144975.158] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_121._Benchmark.benchmark_Cluster_121  thrpt   30  144513.694 ± 461.464  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_122._Benchmark.benchmark_Cluster_122$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_122._Benchmark.benchmark_Cluster_122

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20637.780 ops/s
# Warmup Iteration   2: 90651.674 ops/s
# Warmup Iteration   3: 134288.293 ops/s
# Warmup Iteration   4: 157779.436 ops/s
# Warmup Iteration   5: 177246.535 ops/s
# Warmup Iteration   6: 177087.941 ops/s
# Warmup Iteration   7: 176476.152 ops/s
# Warmup Iteration   8: 175608.057 ops/s
# Warmup Iteration   9: 176100.611 ops/s
# Warmup Iteration  10: 176755.898 ops/s
# Warmup Iteration  11: 176292.898 ops/s
# Warmup Iteration  12: 176048.712 ops/s
# Warmup Iteration  13: 176698.061 ops/s
# Warmup Iteration  14: 175960.392 ops/s
# Warmup Iteration  15: 175148.395 ops/s
# Warmup Iteration  16: 176092.202 ops/s
# Warmup Iteration  17: 177776.785 ops/s
# Warmup Iteration  18: 177065.337 ops/s
# Warmup Iteration  19: 177466.387 ops/s
# Warmup Iteration  20: 177890.880 ops/s
# Warmup Iteration  21: 177918.477 ops/s
# Warmup Iteration  22: 174651.629 ops/s
# Warmup Iteration  23: 177694.765 ops/s
# Warmup Iteration  24: 177690.396 ops/s
# Warmup Iteration  25: 178023.868 ops/s
# Warmup Iteration  26: 177882.321 ops/s
# Warmup Iteration  27: 177652.596 ops/s
# Warmup Iteration  28: 176057.309 ops/s
# Warmup Iteration  29: 174785.101 ops/s
# Warmup Iteration  30: 177151.140 ops/s
Iteration   1: 177001.227 ops/s
Iteration   2: 176970.497 ops/s
Iteration   3: 178094.791 ops/s
Iteration   4: 178110.192 ops/s
Iteration   5: 177791.968 ops/s
Iteration   6: 177149.252 ops/s
Iteration   7: 177010.688 ops/s
Iteration   8: 177575.532 ops/s
Iteration   9: 177893.235 ops/s
Iteration  10: 178074.064 ops/s
Iteration  11: 176857.384 ops/s
Iteration  12: 177964.039 ops/s
Iteration  13: 177566.501 ops/s
Iteration  14: 177661.100 ops/s
Iteration  15: 177104.318 ops/s
Iteration  16: 178003.026 ops/s
Iteration  17: 177081.583 ops/s
Iteration  18: 177589.577 ops/s
Iteration  19: 176541.212 ops/s
Iteration  20: 176927.525 ops/s
Iteration  21: 177707.484 ops/s
Iteration  22: 177972.283 ops/s
Iteration  23: 175005.325 ops/s
Iteration  24: 177342.045 ops/s
Iteration  25: 176963.213 ops/s
Iteration  26: 177481.346 ops/s
Iteration  27: 177236.639 ops/s
Iteration  28: 178357.029 ops/s
Iteration  29: 177763.378 ops/s
Iteration  30: 177992.414 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_122._Benchmark.benchmark_Cluster_122":
  177426.296 ±(99.9%) 437.704 ops/s [Average]
  (min, avg, max) = (175005.325, 177426.296, 178357.029), stdev = 655.135
  CI (99.9%): [176988.591, 177864.000] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_122._Benchmark.benchmark_Cluster_122  thrpt   30  177426.296 ± 437.704  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_123._Benchmark.benchmark_Cluster_123$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_123._Benchmark.benchmark_Cluster_123

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 30957.305 ops/s
# Warmup Iteration   2: 104148.579 ops/s
# Warmup Iteration   3: 138763.768 ops/s
# Warmup Iteration   4: 148631.508 ops/s
# Warmup Iteration   5: 150236.396 ops/s
# Warmup Iteration   6: 149657.442 ops/s
# Warmup Iteration   7: 149135.449 ops/s
# Warmup Iteration   8: 148655.896 ops/s
# Warmup Iteration   9: 148683.993 ops/s
# Warmup Iteration  10: 149242.428 ops/s
# Warmup Iteration  11: 149304.919 ops/s
# Warmup Iteration  12: 149028.860 ops/s
# Warmup Iteration  13: 148938.416 ops/s
# Warmup Iteration  14: 149816.623 ops/s
# Warmup Iteration  15: 148947.715 ops/s
# Warmup Iteration  16: 149267.669 ops/s
# Warmup Iteration  17: 148427.182 ops/s
# Warmup Iteration  18: 148992.415 ops/s
# Warmup Iteration  19: 148378.292 ops/s
# Warmup Iteration  20: 148706.120 ops/s
# Warmup Iteration  21: 149021.548 ops/s
# Warmup Iteration  22: 148949.376 ops/s
# Warmup Iteration  23: 148615.921 ops/s
# Warmup Iteration  24: 149683.084 ops/s
# Warmup Iteration  25: 149000.988 ops/s
# Warmup Iteration  26: 149443.081 ops/s
# Warmup Iteration  27: 148997.791 ops/s
# Warmup Iteration  28: 148781.380 ops/s
# Warmup Iteration  29: 149808.018 ops/s
# Warmup Iteration  30: 149345.565 ops/s
Iteration   1: 149649.541 ops/s
Iteration   2: 149737.792 ops/s
Iteration   3: 148974.683 ops/s
Iteration   4: 149107.292 ops/s
Iteration   5: 148807.353 ops/s
Iteration   6: 149909.497 ops/s
Iteration   7: 148984.970 ops/s
Iteration   8: 149479.863 ops/s
Iteration   9: 149360.714 ops/s
Iteration  10: 149168.455 ops/s
Iteration  11: 148448.900 ops/s
Iteration  12: 149732.957 ops/s
Iteration  13: 149534.253 ops/s
Iteration  14: 148475.317 ops/s
Iteration  15: 148530.748 ops/s
Iteration  16: 149879.965 ops/s
Iteration  17: 148619.335 ops/s
Iteration  18: 148658.411 ops/s
Iteration  19: 150097.872 ops/s
Iteration  20: 149115.803 ops/s
Iteration  21: 149176.067 ops/s
Iteration  22: 149718.821 ops/s
Iteration  23: 150254.481 ops/s
Iteration  24: 149274.333 ops/s
Iteration  25: 149192.568 ops/s
Iteration  26: 148484.424 ops/s
Iteration  27: 149287.520 ops/s
Iteration  28: 149068.931 ops/s
Iteration  29: 149448.859 ops/s
Iteration  30: 149818.820 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_123._Benchmark.benchmark_Cluster_123":
  149266.618 ±(99.9%) 338.282 ops/s [Average]
  (min, avg, max) = (148448.900, 149266.618, 150254.481), stdev = 506.325
  CI (99.9%): [148928.336, 149604.900] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_123._Benchmark.benchmark_Cluster_123  thrpt   30  149266.618 ± 338.282  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_124._Benchmark.benchmark_Cluster_124$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_124._Benchmark.benchmark_Cluster_124

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 124110.817 ops/s
# Warmup Iteration   2: 149534.612 ops/s
# Warmup Iteration   3: 148913.818 ops/s
# Warmup Iteration   4: 159646.515 ops/s
# Warmup Iteration   5: 159779.324 ops/s
# Warmup Iteration   6: 160607.683 ops/s
# Warmup Iteration   7: 160212.565 ops/s
# Warmup Iteration   8: 159954.044 ops/s
# Warmup Iteration   9: 160207.233 ops/s
# Warmup Iteration  10: 159597.174 ops/s
# Warmup Iteration  11: 160077.082 ops/s
# Warmup Iteration  12: 159790.225 ops/s
# Warmup Iteration  13: 159659.700 ops/s
# Warmup Iteration  14: 159111.016 ops/s
# Warmup Iteration  15: 160160.329 ops/s
# Warmup Iteration  16: 158884.795 ops/s
# Warmup Iteration  17: 168425.537 ops/s
# Warmup Iteration  18: 167789.937 ops/s
# Warmup Iteration  19: 169322.568 ops/s
# Warmup Iteration  20: 169325.647 ops/s
# Warmup Iteration  21: 169347.194 ops/s
# Warmup Iteration  22: 167930.867 ops/s
# Warmup Iteration  23: 169197.773 ops/s
# Warmup Iteration  24: 168193.863 ops/s
# Warmup Iteration  25: 168477.860 ops/s
# Warmup Iteration  26: 163504.598 ops/s
# Warmup Iteration  27: 168001.396 ops/s
# Warmup Iteration  28: 169065.124 ops/s
# Warmup Iteration  29: 167986.175 ops/s
# Warmup Iteration  30: 168030.374 ops/s
Iteration   1: 168385.372 ops/s
Iteration   2: 168133.879 ops/s
Iteration   3: 167017.709 ops/s
Iteration   4: 168658.697 ops/s
Iteration   5: 168503.968 ops/s
Iteration   6: 168360.258 ops/s
Iteration   7: 167607.831 ops/s
Iteration   8: 167996.360 ops/s
Iteration   9: 168768.366 ops/s
Iteration  10: 168740.424 ops/s
Iteration  11: 168294.647 ops/s
Iteration  12: 168010.630 ops/s
Iteration  13: 168944.168 ops/s
Iteration  14: 167732.680 ops/s
Iteration  15: 168220.390 ops/s
Iteration  16: 168083.784 ops/s
Iteration  17: 167960.554 ops/s
Iteration  18: 168587.491 ops/s
Iteration  19: 168279.416 ops/s
Iteration  20: 168292.156 ops/s
Iteration  21: 168685.691 ops/s
Iteration  22: 169669.210 ops/s
Iteration  23: 168664.263 ops/s
Iteration  24: 168745.222 ops/s
Iteration  25: 167994.157 ops/s
Iteration  26: 168492.503 ops/s
Iteration  27: 169376.507 ops/s
Iteration  28: 169371.760 ops/s
Iteration  29: 168382.254 ops/s
Iteration  30: 168657.721 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_124._Benchmark.benchmark_Cluster_124":
  168420.602 ±(99.9%) 359.589 ops/s [Average]
  (min, avg, max) = (167017.709, 168420.602, 169669.210), stdev = 538.216
  CI (99.9%): [168061.013, 168780.191] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_124._Benchmark.benchmark_Cluster_124  thrpt   30  168420.602 ± 359.589  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_125._Benchmark.benchmark_Cluster_125$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_125._Benchmark.benchmark_Cluster_125

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 21633.398 ops/s
# Warmup Iteration   2: 102172.002 ops/s
# Warmup Iteration   3: 162686.419 ops/s
# Warmup Iteration   4: 164586.226 ops/s
# Warmup Iteration   5: 187570.072 ops/s
# Warmup Iteration   6: 186955.961 ops/s
# Warmup Iteration   7: 187419.565 ops/s
# Warmup Iteration   8: 187492.105 ops/s
# Warmup Iteration   9: 186376.028 ops/s
# Warmup Iteration  10: 187804.006 ops/s
# Warmup Iteration  11: 187497.976 ops/s
# Warmup Iteration  12: 186732.229 ops/s
# Warmup Iteration  13: 186686.818 ops/s
# Warmup Iteration  14: 185801.821 ops/s
# Warmup Iteration  15: 185866.731 ops/s
# Warmup Iteration  16: 185436.409 ops/s
# Warmup Iteration  17: 196727.035 ops/s
# Warmup Iteration  18: 195927.974 ops/s
# Warmup Iteration  19: 196701.497 ops/s
# Warmup Iteration  20: 196702.370 ops/s
# Warmup Iteration  21: 197702.061 ops/s
# Warmup Iteration  22: 196775.430 ops/s
# Warmup Iteration  23: 197171.223 ops/s
# Warmup Iteration  24: 197243.773 ops/s
# Warmup Iteration  25: 196149.063 ops/s
# Warmup Iteration  26: 196779.798 ops/s
# Warmup Iteration  27: 196618.313 ops/s
# Warmup Iteration  28: 197338.750 ops/s
# Warmup Iteration  29: 196779.237 ops/s
# Warmup Iteration  30: 196656.884 ops/s
Iteration   1: 196824.768 ops/s
Iteration   2: 196380.974 ops/s
Iteration   3: 195828.249 ops/s
Iteration   4: 196569.237 ops/s
Iteration   5: 196798.260 ops/s
Iteration   6: 195898.665 ops/s
Iteration   7: 190484.923 ops/s
Iteration   8: 197282.450 ops/s
Iteration   9: 196231.034 ops/s
Iteration  10: 196549.556 ops/s
Iteration  11: 197019.545 ops/s
Iteration  12: 196883.054 ops/s
Iteration  13: 196378.678 ops/s
Iteration  14: 196945.792 ops/s
Iteration  15: 196024.101 ops/s
Iteration  16: 196796.139 ops/s
Iteration  17: 196978.308 ops/s
Iteration  18: 195845.857 ops/s
Iteration  19: 196516.629 ops/s
Iteration  20: 195710.449 ops/s
Iteration  21: 196109.086 ops/s
Iteration  22: 197147.604 ops/s
Iteration  23: 197783.939 ops/s
Iteration  24: 196530.919 ops/s
Iteration  25: 195689.992 ops/s
Iteration  26: 195978.096 ops/s
Iteration  27: 196306.861 ops/s
Iteration  28: 196817.204 ops/s
Iteration  29: 196608.886 ops/s
Iteration  30: 196416.130 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_125._Benchmark.benchmark_Cluster_125":
  196311.180 ±(99.9%) 807.441 ops/s [Average]
  (min, avg, max) = (190484.923, 196311.180, 197783.939), stdev = 1208.539
  CI (99.9%): [195503.739, 197118.620] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_125._Benchmark.benchmark_Cluster_125  thrpt   30  196311.180 ± 807.441  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_126._Benchmark.benchmark_Cluster_126$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_126._Benchmark.benchmark_Cluster_126

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14684.215 ops/s
# Warmup Iteration   2: 107634.518 ops/s
# Warmup Iteration   3: 150486.054 ops/s
# Warmup Iteration   4: 177226.788 ops/s
# Warmup Iteration   5: 177302.819 ops/s
# Warmup Iteration   6: 178237.081 ops/s
# Warmup Iteration   7: 176590.953 ops/s
# Warmup Iteration   8: 177553.506 ops/s
# Warmup Iteration   9: 177118.890 ops/s
# Warmup Iteration  10: 176926.701 ops/s
# Warmup Iteration  11: 177504.831 ops/s
# Warmup Iteration  12: 177803.773 ops/s
# Warmup Iteration  13: 176995.419 ops/s
# Warmup Iteration  14: 177526.742 ops/s
# Warmup Iteration  15: 177047.127 ops/s
# Warmup Iteration  16: 177053.920 ops/s
# Warmup Iteration  17: 176896.453 ops/s
# Warmup Iteration  18: 177319.477 ops/s
# Warmup Iteration  19: 176131.777 ops/s
# Warmup Iteration  20: 177851.325 ops/s
# Warmup Iteration  21: 177660.811 ops/s
# Warmup Iteration  22: 176613.252 ops/s
# Warmup Iteration  23: 176738.263 ops/s
# Warmup Iteration  24: 175217.637 ops/s
# Warmup Iteration  25: 177600.894 ops/s
# Warmup Iteration  26: 176912.232 ops/s
# Warmup Iteration  27: 177228.575 ops/s
# Warmup Iteration  28: 176418.146 ops/s
# Warmup Iteration  29: 177292.272 ops/s
# Warmup Iteration  30: 176525.192 ops/s
Iteration   1: 176762.134 ops/s
Iteration   2: 176556.754 ops/s
Iteration   3: 177353.915 ops/s
Iteration   4: 176578.625 ops/s
Iteration   5: 177114.111 ops/s
Iteration   6: 177133.075 ops/s
Iteration   7: 177125.474 ops/s
Iteration   8: 177055.837 ops/s
Iteration   9: 177569.128 ops/s
Iteration  10: 177853.234 ops/s
Iteration  11: 176607.026 ops/s
Iteration  12: 177586.873 ops/s
Iteration  13: 177316.910 ops/s
Iteration  14: 177560.090 ops/s
Iteration  15: 176753.790 ops/s
Iteration  16: 176659.720 ops/s
Iteration  17: 177819.820 ops/s
Iteration  18: 177413.875 ops/s
Iteration  19: 177265.193 ops/s
Iteration  20: 177359.030 ops/s
Iteration  21: 177741.906 ops/s
Iteration  22: 176775.202 ops/s
Iteration  23: 177479.528 ops/s
Iteration  24: 176361.429 ops/s
Iteration  25: 176529.536 ops/s
Iteration  26: 177755.397 ops/s
Iteration  27: 177475.150 ops/s
Iteration  28: 176481.500 ops/s
Iteration  29: 176747.819 ops/s
Iteration  30: 177495.625 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_126._Benchmark.benchmark_Cluster_126":
  177142.924 ±(99.9%) 304.177 ops/s [Average]
  (min, avg, max) = (176361.429, 177142.924, 177853.234), stdev = 455.278
  CI (99.9%): [176838.747, 177447.101] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_126._Benchmark.benchmark_Cluster_126  thrpt   30  177142.924 ± 304.177  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_127._Benchmark.benchmark_Cluster_127$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_127._Benchmark.benchmark_Cluster_127

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19399.509 ops/s
# Warmup Iteration   2: 98232.812 ops/s
# Warmup Iteration   3: 134663.358 ops/s
# Warmup Iteration   4: 144771.310 ops/s
# Warmup Iteration   5: 174946.378 ops/s
# Warmup Iteration   6: 174679.429 ops/s
# Warmup Iteration   7: 173316.197 ops/s
# Warmup Iteration   8: 173567.441 ops/s
# Warmup Iteration   9: 173375.562 ops/s
# Warmup Iteration  10: 174506.672 ops/s
# Warmup Iteration  11: 172193.030 ops/s
# Warmup Iteration  12: 172055.962 ops/s
# Warmup Iteration  13: 173132.577 ops/s
# Warmup Iteration  14: 171645.964 ops/s
# Warmup Iteration  15: 171818.493 ops/s
# Warmup Iteration  16: 172118.501 ops/s
# Warmup Iteration  17: 177873.179 ops/s
# Warmup Iteration  18: 178142.380 ops/s
# Warmup Iteration  19: 178069.600 ops/s
# Warmup Iteration  20: 178934.078 ops/s
# Warmup Iteration  21: 178767.173 ops/s
# Warmup Iteration  22: 177494.670 ops/s
# Warmup Iteration  23: 177972.511 ops/s
# Warmup Iteration  24: 178474.579 ops/s
# Warmup Iteration  25: 179106.195 ops/s
# Warmup Iteration  26: 178008.311 ops/s
# Warmup Iteration  27: 178586.157 ops/s
# Warmup Iteration  28: 177747.210 ops/s
# Warmup Iteration  29: 178324.191 ops/s
# Warmup Iteration  30: 178808.621 ops/s
Iteration   1: 178883.687 ops/s
Iteration   2: 178136.439 ops/s
Iteration   3: 178372.996 ops/s
Iteration   4: 175442.872 ops/s
Iteration   5: 181026.278 ops/s
Iteration   6: 178115.172 ops/s
Iteration   7: 178269.280 ops/s
Iteration   8: 178675.098 ops/s
Iteration   9: 177569.351 ops/s
Iteration  10: 178350.473 ops/s
Iteration  11: 178543.778 ops/s
Iteration  12: 178080.773 ops/s
Iteration  13: 177717.304 ops/s
Iteration  14: 178427.790 ops/s
Iteration  15: 177123.856 ops/s
Iteration  16: 178369.792 ops/s
Iteration  17: 177236.982 ops/s
Iteration  18: 175478.623 ops/s
Iteration  19: 178310.678 ops/s
Iteration  20: 178702.577 ops/s
Iteration  21: 178010.463 ops/s
Iteration  22: 177331.869 ops/s
Iteration  23: 177842.263 ops/s
Iteration  24: 178320.717 ops/s
Iteration  25: 177747.456 ops/s
Iteration  26: 177755.900 ops/s
Iteration  27: 178412.183 ops/s
Iteration  28: 178348.358 ops/s
Iteration  29: 177825.129 ops/s
Iteration  30: 178086.188 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_127._Benchmark.benchmark_Cluster_127":
  178017.144 ±(99.9%) 650.640 ops/s [Average]
  (min, avg, max) = (175442.872, 178017.144, 181026.278), stdev = 973.847
  CI (99.9%): [177366.504, 178667.784] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_127._Benchmark.benchmark_Cluster_127  thrpt   30  178017.144 ± 650.640  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_128._Benchmark.benchmark_Cluster_128$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_128._Benchmark.benchmark_Cluster_128

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 42415.194 ops/s
# Warmup Iteration   2: 116631.419 ops/s
# Warmup Iteration   3: 127667.028 ops/s
# Warmup Iteration   4: 138442.900 ops/s
# Warmup Iteration   5: 143821.212 ops/s
# Warmup Iteration   6: 142557.780 ops/s
# Warmup Iteration   7: 143004.705 ops/s
# Warmup Iteration   8: 142985.461 ops/s
# Warmup Iteration   9: 143275.235 ops/s
# Warmup Iteration  10: 142894.712 ops/s
# Warmup Iteration  11: 141803.737 ops/s
# Warmup Iteration  12: 141853.261 ops/s
# Warmup Iteration  13: 140929.983 ops/s
# Warmup Iteration  14: 141498.910 ops/s
# Warmup Iteration  15: 141678.349 ops/s
# Warmup Iteration  16: 142362.723 ops/s
# Warmup Iteration  17: 146723.267 ops/s
# Warmup Iteration  18: 145948.854 ops/s
# Warmup Iteration  19: 146132.211 ops/s
# Warmup Iteration  20: 144366.962 ops/s
# Warmup Iteration  21: 145239.833 ops/s
# Warmup Iteration  22: 147180.687 ops/s
# Warmup Iteration  23: 146234.378 ops/s
# Warmup Iteration  24: 146436.944 ops/s
# Warmup Iteration  25: 146556.473 ops/s
# Warmup Iteration  26: 146017.884 ops/s
# Warmup Iteration  27: 145788.731 ops/s
# Warmup Iteration  28: 146168.628 ops/s
# Warmup Iteration  29: 146013.664 ops/s
# Warmup Iteration  30: 146473.543 ops/s
Iteration   1: 146143.375 ops/s
Iteration   2: 146850.900 ops/s
Iteration   3: 146425.948 ops/s
Iteration   4: 145721.887 ops/s
Iteration   5: 146401.805 ops/s
Iteration   6: 146430.186 ops/s
Iteration   7: 146437.432 ops/s
Iteration   8: 146074.779 ops/s
Iteration   9: 145936.220 ops/s
Iteration  10: 146434.884 ops/s
Iteration  11: 146560.276 ops/s
Iteration  12: 146914.885 ops/s
Iteration  13: 146123.978 ops/s
Iteration  14: 145845.856 ops/s
Iteration  15: 145357.559 ops/s
Iteration  16: 146439.767 ops/s
Iteration  17: 146145.449 ops/s
Iteration  18: 146646.327 ops/s
Iteration  19: 147686.309 ops/s
Iteration  20: 146555.252 ops/s
Iteration  21: 146810.959 ops/s
Iteration  22: 145124.809 ops/s
Iteration  23: 146553.835 ops/s
Iteration  24: 146259.651 ops/s
Iteration  25: 146785.064 ops/s
Iteration  26: 146483.280 ops/s
Iteration  27: 146599.234 ops/s
Iteration  28: 145991.793 ops/s
Iteration  29: 145790.700 ops/s
Iteration  30: 146316.671 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_128._Benchmark.benchmark_Cluster_128":
  146328.302 ±(99.9%) 329.286 ops/s [Average]
  (min, avg, max) = (145124.809, 146328.302, 147686.309), stdev = 492.861
  CI (99.9%): [145999.016, 146657.589] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_128._Benchmark.benchmark_Cluster_128  thrpt   30  146328.302 ± 329.286  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_129._Benchmark.benchmark_Cluster_129$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_129._Benchmark.benchmark_Cluster_129

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 66218.245 ops/s
# Warmup Iteration   2: 130144.282 ops/s
# Warmup Iteration   3: 133029.161 ops/s
# Warmup Iteration   4: 127001.974 ops/s
# Warmup Iteration   5: 145720.576 ops/s
# Warmup Iteration   6: 145032.700 ops/s
# Warmup Iteration   7: 144879.232 ops/s
# Warmup Iteration   8: 145317.044 ops/s
# Warmup Iteration   9: 144661.103 ops/s
# Warmup Iteration  10: 145330.133 ops/s
# Warmup Iteration  11: 145124.524 ops/s
# Warmup Iteration  12: 144663.303 ops/s
# Warmup Iteration  13: 144600.282 ops/s
# Warmup Iteration  14: 145343.974 ops/s
# Warmup Iteration  15: 144643.656 ops/s
# Warmup Iteration  16: 141846.547 ops/s
# Warmup Iteration  17: 151340.245 ops/s
# Warmup Iteration  18: 151235.075 ops/s
# Warmup Iteration  19: 150374.116 ops/s
# Warmup Iteration  20: 150599.122 ops/s
# Warmup Iteration  21: 150678.437 ops/s
# Warmup Iteration  22: 151433.396 ops/s
# Warmup Iteration  23: 150010.089 ops/s
# Warmup Iteration  24: 149741.830 ops/s
# Warmup Iteration  25: 151717.927 ops/s
# Warmup Iteration  26: 150475.798 ops/s
# Warmup Iteration  27: 150694.207 ops/s
# Warmup Iteration  28: 150649.276 ops/s
# Warmup Iteration  29: 150380.012 ops/s
# Warmup Iteration  30: 151516.644 ops/s
Iteration   1: 150236.853 ops/s
Iteration   2: 149926.962 ops/s
Iteration   3: 151203.937 ops/s
Iteration   4: 151375.158 ops/s
Iteration   5: 150719.302 ops/s
Iteration   6: 150290.302 ops/s
Iteration   7: 150534.213 ops/s
Iteration   8: 150944.849 ops/s
Iteration   9: 150589.999 ops/s
Iteration  10: 149825.012 ops/s
Iteration  11: 150404.069 ops/s
Iteration  12: 151019.924 ops/s
Iteration  13: 151088.394 ops/s
Iteration  14: 150760.484 ops/s
Iteration  15: 151372.198 ops/s
Iteration  16: 150572.036 ops/s
Iteration  17: 151260.971 ops/s
Iteration  18: 150392.863 ops/s
Iteration  19: 150409.198 ops/s
Iteration  20: 151235.307 ops/s
Iteration  21: 150340.069 ops/s
Iteration  22: 151104.751 ops/s
Iteration  23: 150729.021 ops/s
Iteration  24: 150792.517 ops/s
Iteration  25: 150236.770 ops/s
Iteration  26: 150403.129 ops/s
Iteration  27: 151816.179 ops/s
Iteration  28: 150439.479 ops/s
Iteration  29: 150227.236 ops/s
Iteration  30: 150153.654 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_129._Benchmark.benchmark_Cluster_129":
  150680.161 ±(99.9%) 318.185 ops/s [Average]
  (min, avg, max) = (149825.012, 150680.161, 151816.179), stdev = 476.245
  CI (99.9%): [150361.976, 150998.346] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_129._Benchmark.benchmark_Cluster_129  thrpt   30  150680.161 ± 318.185  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_13._Benchmark.benchmark_Cluster_13$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_13._Benchmark.benchmark_Cluster_13

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 61750.425 ops/s
# Warmup Iteration   2: 127423.575 ops/s
# Warmup Iteration   3: 132266.971 ops/s
# Warmup Iteration   4: 139462.066 ops/s
# Warmup Iteration   5: 138841.823 ops/s
# Warmup Iteration   6: 139087.637 ops/s
# Warmup Iteration   7: 139793.064 ops/s
# Warmup Iteration   8: 139958.822 ops/s
# Warmup Iteration   9: 138652.199 ops/s
# Warmup Iteration  10: 140015.639 ops/s
# Warmup Iteration  11: 138644.402 ops/s
# Warmup Iteration  12: 138792.978 ops/s
# Warmup Iteration  13: 139331.255 ops/s
# Warmup Iteration  14: 139191.363 ops/s
# Warmup Iteration  15: 138882.015 ops/s
# Warmup Iteration  16: 138353.276 ops/s
# Warmup Iteration  17: 145343.881 ops/s
# Warmup Iteration  18: 145129.572 ops/s
# Warmup Iteration  19: 146213.179 ops/s
# Warmup Iteration  20: 146017.275 ops/s
# Warmup Iteration  21: 145726.350 ops/s
# Warmup Iteration  22: 145377.772 ops/s
# Warmup Iteration  23: 145024.224 ops/s
# Warmup Iteration  24: 145121.838 ops/s
# Warmup Iteration  25: 145762.791 ops/s
# Warmup Iteration  26: 145251.427 ops/s
# Warmup Iteration  27: 143987.096 ops/s
# Warmup Iteration  28: 145304.602 ops/s
# Warmup Iteration  29: 145418.764 ops/s
# Warmup Iteration  30: 146098.534 ops/s
Iteration   1: 145657.703 ops/s
Iteration   2: 145499.858 ops/s
Iteration   3: 145589.198 ops/s
Iteration   4: 145628.649 ops/s
Iteration   5: 145704.401 ops/s
Iteration   6: 145963.134 ops/s
Iteration   7: 145050.795 ops/s
Iteration   8: 146453.627 ops/s
Iteration   9: 145353.117 ops/s
Iteration  10: 146162.339 ops/s
Iteration  11: 145309.934 ops/s
Iteration  12: 144849.120 ops/s
Iteration  13: 145609.690 ops/s
Iteration  14: 145575.118 ops/s
Iteration  15: 145662.125 ops/s
Iteration  16: 146209.083 ops/s
Iteration  17: 145934.596 ops/s
Iteration  18: 145532.397 ops/s
Iteration  19: 145852.697 ops/s
Iteration  20: 146132.368 ops/s
Iteration  21: 145784.918 ops/s
Iteration  22: 146183.676 ops/s
Iteration  23: 145439.714 ops/s
Iteration  24: 145915.282 ops/s
Iteration  25: 145277.258 ops/s
Iteration  26: 144999.048 ops/s
Iteration  27: 145544.098 ops/s
Iteration  28: 145551.812 ops/s
Iteration  29: 145195.997 ops/s
Iteration  30: 145583.555 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_13._Benchmark.benchmark_Cluster_13":
  145640.177 ±(99.9%) 252.364 ops/s [Average]
  (min, avg, max) = (144849.120, 145640.177, 146453.627), stdev = 377.726
  CI (99.9%): [145387.813, 145892.541] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_13._Benchmark.benchmark_Cluster_13  thrpt   30  145640.177 ± 252.364  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_130._Benchmark.benchmark_Cluster_130$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_130._Benchmark.benchmark_Cluster_130

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4059.497 ops/s
# Warmup Iteration   2: 65765.147 ops/s
# Warmup Iteration   3: 105140.732 ops/s
# Warmup Iteration   4: 120352.549 ops/s
# Warmup Iteration   5: 132578.238 ops/s
# Warmup Iteration   6: 133585.114 ops/s
# Warmup Iteration   7: 133623.824 ops/s
# Warmup Iteration   8: 133018.288 ops/s
# Warmup Iteration   9: 132086.362 ops/s
# Warmup Iteration  10: 132342.008 ops/s
# Warmup Iteration  11: 132868.969 ops/s
# Warmup Iteration  12: 133050.205 ops/s
# Warmup Iteration  13: 132669.908 ops/s
# Warmup Iteration  14: 133006.182 ops/s
# Warmup Iteration  15: 133331.392 ops/s
# Warmup Iteration  16: 132742.588 ops/s
# Warmup Iteration  17: 133608.301 ops/s
# Warmup Iteration  18: 132394.438 ops/s
# Warmup Iteration  19: 133159.390 ops/s
# Warmup Iteration  20: 132832.751 ops/s
# Warmup Iteration  21: 133713.602 ops/s
# Warmup Iteration  22: 133311.405 ops/s
# Warmup Iteration  23: 132853.361 ops/s
# Warmup Iteration  24: 132972.934 ops/s
# Warmup Iteration  25: 133168.462 ops/s
# Warmup Iteration  26: 132485.530 ops/s
# Warmup Iteration  27: 133274.292 ops/s
# Warmup Iteration  28: 132321.920 ops/s
# Warmup Iteration  29: 132569.136 ops/s
# Warmup Iteration  30: 132682.229 ops/s
Iteration   1: 132991.790 ops/s
Iteration   2: 133099.342 ops/s
Iteration   3: 133057.406 ops/s
Iteration   4: 133507.890 ops/s
Iteration   5: 132274.630 ops/s
Iteration   6: 132606.628 ops/s
Iteration   7: 132793.261 ops/s
Iteration   8: 133498.662 ops/s
Iteration   9: 132653.493 ops/s
Iteration  10: 133268.053 ops/s
Iteration  11: 133637.417 ops/s
Iteration  12: 133547.435 ops/s
Iteration  13: 132135.333 ops/s
Iteration  14: 132980.677 ops/s
Iteration  15: 133274.059 ops/s
Iteration  16: 132700.167 ops/s
Iteration  17: 133140.504 ops/s
Iteration  18: 132483.078 ops/s
Iteration  19: 133425.984 ops/s
Iteration  20: 133172.479 ops/s
Iteration  21: 132406.351 ops/s
Iteration  22: 133309.897 ops/s
Iteration  23: 132523.401 ops/s
Iteration  24: 132919.306 ops/s
Iteration  25: 133785.244 ops/s
Iteration  26: 132609.298 ops/s
Iteration  27: 132846.301 ops/s
Iteration  28: 133144.763 ops/s
Iteration  29: 133284.256 ops/s
Iteration  30: 131384.352 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_130._Benchmark.benchmark_Cluster_130":
  132948.715 ±(99.9%) 343.389 ops/s [Average]
  (min, avg, max) = (131384.352, 132948.715, 133785.244), stdev = 513.969
  CI (99.9%): [132605.326, 133292.104] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_130._Benchmark.benchmark_Cluster_130  thrpt   30  132948.715 ± 343.389  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_131._Benchmark.benchmark_Cluster_131$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_131._Benchmark.benchmark_Cluster_131

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 100414.918 ops/s
# Warmup Iteration   2: 188554.818 ops/s
# Warmup Iteration   3: 206223.995 ops/s
# Warmup Iteration   4: 222136.270 ops/s
# Warmup Iteration   5: 223055.069 ops/s
# Warmup Iteration   6: 222870.208 ops/s
# Warmup Iteration   7: 223702.967 ops/s
# Warmup Iteration   8: 223149.869 ops/s
# Warmup Iteration   9: 221048.984 ops/s
# Warmup Iteration  10: 222929.799 ops/s
# Warmup Iteration  11: 223081.645 ops/s
# Warmup Iteration  12: 222070.582 ops/s
# Warmup Iteration  13: 221812.832 ops/s
# Warmup Iteration  14: 220948.302 ops/s
# Warmup Iteration  15: 221571.591 ops/s
# Warmup Iteration  16: 221156.142 ops/s
# Warmup Iteration  17: 221953.713 ops/s
# Warmup Iteration  18: 228863.521 ops/s
# Warmup Iteration  19: 228873.491 ops/s
# Warmup Iteration  20: 228579.981 ops/s
# Warmup Iteration  21: 228480.252 ops/s
# Warmup Iteration  22: 227145.941 ops/s
# Warmup Iteration  23: 227720.279 ops/s
# Warmup Iteration  24: 228261.667 ops/s
# Warmup Iteration  25: 227645.567 ops/s
# Warmup Iteration  26: 227799.351 ops/s
# Warmup Iteration  27: 227438.242 ops/s
# Warmup Iteration  28: 226720.942 ops/s
# Warmup Iteration  29: 228223.138 ops/s
# Warmup Iteration  30: 228718.535 ops/s
Iteration   1: 227161.834 ops/s
Iteration   2: 228829.403 ops/s
Iteration   3: 228845.044 ops/s
Iteration   4: 228074.954 ops/s
Iteration   5: 227784.186 ops/s
Iteration   6: 227932.985 ops/s
Iteration   7: 227735.792 ops/s
Iteration   8: 228770.309 ops/s
Iteration   9: 228934.122 ops/s
Iteration  10: 227574.246 ops/s
Iteration  11: 227564.730 ops/s
Iteration  12: 228357.593 ops/s
Iteration  13: 227915.431 ops/s
Iteration  14: 228768.898 ops/s
Iteration  15: 227958.487 ops/s
Iteration  16: 227379.247 ops/s
Iteration  17: 229096.980 ops/s
Iteration  18: 227344.457 ops/s
Iteration  19: 228237.244 ops/s
Iteration  20: 228189.384 ops/s
Iteration  21: 229318.664 ops/s
Iteration  22: 228363.789 ops/s
Iteration  23: 228545.208 ops/s
Iteration  24: 227038.048 ops/s
Iteration  25: 229135.887 ops/s
Iteration  26: 228546.109 ops/s
Iteration  27: 227831.552 ops/s
Iteration  28: 227498.730 ops/s
Iteration  29: 228222.614 ops/s
Iteration  30: 227521.410 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_131._Benchmark.benchmark_Cluster_131":
  228149.245 ±(99.9%) 420.334 ops/s [Average]
  (min, avg, max) = (227038.048, 228149.245, 229318.664), stdev = 629.137
  CI (99.9%): [227728.910, 228569.579] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_131._Benchmark.benchmark_Cluster_131  thrpt   30  228149.245 ± 420.334  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_132._Benchmark.benchmark_Cluster_132$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_132._Benchmark.benchmark_Cluster_132

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 66481.406 ops/s
# Warmup Iteration   2: 143624.960 ops/s
# Warmup Iteration   3: 154134.048 ops/s
# Warmup Iteration   4: 167105.286 ops/s
# Warmup Iteration   5: 167981.914 ops/s
# Warmup Iteration   6: 168206.715 ops/s
# Warmup Iteration   7: 167052.278 ops/s
# Warmup Iteration   8: 167123.918 ops/s
# Warmup Iteration   9: 167549.717 ops/s
# Warmup Iteration  10: 167287.723 ops/s
# Warmup Iteration  11: 167063.740 ops/s
# Warmup Iteration  12: 166679.482 ops/s
# Warmup Iteration  13: 167106.584 ops/s
# Warmup Iteration  14: 166181.622 ops/s
# Warmup Iteration  15: 166846.991 ops/s
# Warmup Iteration  16: 166533.326 ops/s
# Warmup Iteration  17: 175834.393 ops/s
# Warmup Iteration  18: 175730.576 ops/s
# Warmup Iteration  19: 176953.107 ops/s
# Warmup Iteration  20: 176381.542 ops/s
# Warmup Iteration  21: 176260.077 ops/s
# Warmup Iteration  22: 173408.606 ops/s
# Warmup Iteration  23: 176311.013 ops/s
# Warmup Iteration  24: 175646.618 ops/s
# Warmup Iteration  25: 175771.085 ops/s
# Warmup Iteration  26: 175916.615 ops/s
# Warmup Iteration  27: 175792.268 ops/s
# Warmup Iteration  28: 176171.594 ops/s
# Warmup Iteration  29: 176375.345 ops/s
# Warmup Iteration  30: 176761.457 ops/s
Iteration   1: 176477.227 ops/s
Iteration   2: 176477.546 ops/s
Iteration   3: 176542.975 ops/s
Iteration   4: 175947.871 ops/s
Iteration   5: 176374.941 ops/s
Iteration   6: 175199.149 ops/s
Iteration   7: 175634.220 ops/s
Iteration   8: 176110.499 ops/s
Iteration   9: 176604.947 ops/s
Iteration  10: 175863.732 ops/s
Iteration  11: 176046.580 ops/s
Iteration  12: 175760.852 ops/s
Iteration  13: 176547.645 ops/s
Iteration  14: 176468.266 ops/s
Iteration  15: 176867.912 ops/s
Iteration  16: 174937.893 ops/s
Iteration  17: 175146.696 ops/s
Iteration  18: 176883.319 ops/s
Iteration  19: 175769.597 ops/s
Iteration  20: 175474.470 ops/s
Iteration  21: 176042.143 ops/s
Iteration  22: 176908.686 ops/s
Iteration  23: 175876.613 ops/s
Iteration  24: 175589.617 ops/s
Iteration  25: 175862.966 ops/s
Iteration  26: 176030.412 ops/s
Iteration  27: 175148.613 ops/s
Iteration  28: 176653.226 ops/s
Iteration  29: 175725.003 ops/s
Iteration  30: 175945.721 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_132._Benchmark.benchmark_Cluster_132":
  176030.645 ±(99.9%) 363.750 ops/s [Average]
  (min, avg, max) = (174937.893, 176030.645, 176908.686), stdev = 544.443
  CI (99.9%): [175666.895, 176394.394] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_132._Benchmark.benchmark_Cluster_132  thrpt   30  176030.645 ± 363.750  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_133._Benchmark.benchmark_Cluster_133$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_133._Benchmark.benchmark_Cluster_133

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 79801.822 ops/s
# Warmup Iteration   2: 115316.504 ops/s
# Warmup Iteration   3: 102622.015 ops/s
# Warmup Iteration   4: 136753.311 ops/s
# Warmup Iteration   5: 185784.016 ops/s
# Warmup Iteration   6: 185596.713 ops/s
# Warmup Iteration   7: 185216.903 ops/s
# Warmup Iteration   8: 184775.523 ops/s
# Warmup Iteration   9: 185491.911 ops/s
# Warmup Iteration  10: 184786.589 ops/s
# Warmup Iteration  11: 185749.436 ops/s
# Warmup Iteration  12: 183949.197 ops/s
# Warmup Iteration  13: 184062.120 ops/s
# Warmup Iteration  14: 184565.863 ops/s
# Warmup Iteration  15: 183803.868 ops/s
# Warmup Iteration  16: 184137.282 ops/s
# Warmup Iteration  17: 191343.208 ops/s
# Warmup Iteration  18: 192630.474 ops/s
# Warmup Iteration  19: 192025.277 ops/s
# Warmup Iteration  20: 191617.119 ops/s
# Warmup Iteration  21: 191236.278 ops/s
# Warmup Iteration  22: 192714.447 ops/s
# Warmup Iteration  23: 191951.954 ops/s
# Warmup Iteration  24: 191217.325 ops/s
# Warmup Iteration  25: 190639.512 ops/s
# Warmup Iteration  26: 193494.368 ops/s
# Warmup Iteration  27: 193520.859 ops/s
# Warmup Iteration  28: 191069.283 ops/s
# Warmup Iteration  29: 193186.550 ops/s
# Warmup Iteration  30: 192872.899 ops/s
Iteration   1: 192596.276 ops/s
Iteration   2: 192135.379 ops/s
Iteration   3: 192882.963 ops/s
Iteration   4: 192088.675 ops/s
Iteration   5: 190876.892 ops/s
Iteration   6: 191056.706 ops/s
Iteration   7: 192898.836 ops/s
Iteration   8: 192009.814 ops/s
Iteration   9: 192181.600 ops/s
Iteration  10: 192617.561 ops/s
Iteration  11: 192004.503 ops/s
Iteration  12: 194040.878 ops/s
Iteration  13: 193263.257 ops/s
Iteration  14: 191651.496 ops/s
Iteration  15: 192348.837 ops/s
Iteration  16: 192072.571 ops/s
Iteration  17: 193037.669 ops/s
Iteration  18: 191990.156 ops/s
Iteration  19: 192861.453 ops/s
Iteration  20: 191222.401 ops/s
Iteration  21: 191978.470 ops/s
Iteration  22: 192792.851 ops/s
Iteration  23: 193196.821 ops/s
Iteration  24: 192088.797 ops/s
Iteration  25: 192708.508 ops/s
Iteration  26: 192857.036 ops/s
Iteration  27: 191309.103 ops/s
Iteration  28: 192243.432 ops/s
Iteration  29: 192136.050 ops/s
Iteration  30: 192440.091 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_133._Benchmark.benchmark_Cluster_133":
  192319.636 ±(99.9%) 463.506 ops/s [Average]
  (min, avg, max) = (190876.892, 192319.636, 194040.878), stdev = 693.754
  CI (99.9%): [191856.130, 192783.142] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_133._Benchmark.benchmark_Cluster_133  thrpt   30  192319.636 ± 463.506  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_134._Benchmark.benchmark_Cluster_134$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_134._Benchmark.benchmark_Cluster_134

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 85601.990 ops/s
# Warmup Iteration   2: 132988.287 ops/s
# Warmup Iteration   3: 158764.026 ops/s
# Warmup Iteration   4: 160632.923 ops/s
# Warmup Iteration   5: 162627.116 ops/s
# Warmup Iteration   6: 161941.503 ops/s
# Warmup Iteration   7: 161965.885 ops/s
# Warmup Iteration   8: 162499.119 ops/s
# Warmup Iteration   9: 162316.684 ops/s
# Warmup Iteration  10: 160947.148 ops/s
# Warmup Iteration  11: 161249.420 ops/s
# Warmup Iteration  12: 161712.666 ops/s
# Warmup Iteration  13: 161669.624 ops/s
# Warmup Iteration  14: 161027.670 ops/s
# Warmup Iteration  15: 161287.119 ops/s
# Warmup Iteration  16: 160960.615 ops/s
# Warmup Iteration  17: 168748.259 ops/s
# Warmup Iteration  18: 167871.389 ops/s
# Warmup Iteration  19: 168922.422 ops/s
# Warmup Iteration  20: 169255.160 ops/s
# Warmup Iteration  21: 167698.585 ops/s
# Warmup Iteration  22: 168076.817 ops/s
# Warmup Iteration  23: 168662.371 ops/s
# Warmup Iteration  24: 168398.472 ops/s
# Warmup Iteration  25: 168253.841 ops/s
# Warmup Iteration  26: 166868.969 ops/s
# Warmup Iteration  27: 168591.716 ops/s
# Warmup Iteration  28: 169349.449 ops/s
# Warmup Iteration  29: 168799.722 ops/s
# Warmup Iteration  30: 168511.740 ops/s
Iteration   1: 167952.216 ops/s
Iteration   2: 168944.328 ops/s
Iteration   3: 167765.876 ops/s
Iteration   4: 168416.943 ops/s
Iteration   5: 169015.536 ops/s
Iteration   6: 167863.846 ops/s
Iteration   7: 168638.300 ops/s
Iteration   8: 168084.189 ops/s
Iteration   9: 168488.977 ops/s
Iteration  10: 168666.558 ops/s
Iteration  11: 168195.614 ops/s
Iteration  12: 168779.967 ops/s
Iteration  13: 168475.157 ops/s
Iteration  14: 167737.582 ops/s
Iteration  15: 168734.910 ops/s
Iteration  16: 167948.899 ops/s
Iteration  17: 168211.023 ops/s
Iteration  18: 168399.480 ops/s
Iteration  19: 169649.550 ops/s
Iteration  20: 167468.424 ops/s
Iteration  21: 168247.338 ops/s
Iteration  22: 167446.620 ops/s
Iteration  23: 167860.309 ops/s
Iteration  24: 167028.053 ops/s
Iteration  25: 169229.198 ops/s
Iteration  26: 168292.504 ops/s
Iteration  27: 168182.500 ops/s
Iteration  28: 168199.101 ops/s
Iteration  29: 168987.178 ops/s
Iteration  30: 167937.233 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_134._Benchmark.benchmark_Cluster_134":
  168294.914 ±(99.9%) 379.007 ops/s [Average]
  (min, avg, max) = (167028.053, 168294.914, 169649.550), stdev = 567.280
  CI (99.9%): [167915.907, 168673.921] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_134._Benchmark.benchmark_Cluster_134  thrpt   30  168294.914 ± 379.007  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_135._Benchmark.benchmark_Cluster_135$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_135._Benchmark.benchmark_Cluster_135

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 85128.515 ops/s
# Warmup Iteration   2: 124438.160 ops/s
# Warmup Iteration   3: 122670.062 ops/s
# Warmup Iteration   4: 132399.368 ops/s
# Warmup Iteration   5: 133268.380 ops/s
# Warmup Iteration   6: 132237.764 ops/s
# Warmup Iteration   7: 132824.358 ops/s
# Warmup Iteration   8: 133177.385 ops/s
# Warmup Iteration   9: 133167.380 ops/s
# Warmup Iteration  10: 132691.786 ops/s
# Warmup Iteration  11: 131940.109 ops/s
# Warmup Iteration  12: 132017.250 ops/s
# Warmup Iteration  13: 132456.625 ops/s
# Warmup Iteration  14: 132118.035 ops/s
# Warmup Iteration  15: 132461.799 ops/s
# Warmup Iteration  16: 131991.620 ops/s
# Warmup Iteration  17: 144916.402 ops/s
# Warmup Iteration  18: 145265.188 ops/s
# Warmup Iteration  19: 145086.840 ops/s
# Warmup Iteration  20: 145212.266 ops/s
# Warmup Iteration  21: 145481.702 ops/s
# Warmup Iteration  22: 146189.927 ops/s
# Warmup Iteration  23: 145125.380 ops/s
# Warmup Iteration  24: 145993.657 ops/s
# Warmup Iteration  25: 145731.119 ops/s
# Warmup Iteration  26: 145730.624 ops/s
# Warmup Iteration  27: 145335.288 ops/s
# Warmup Iteration  28: 145577.975 ops/s
# Warmup Iteration  29: 145696.386 ops/s
# Warmup Iteration  30: 146635.749 ops/s
Iteration   1: 145724.959 ops/s
Iteration   2: 145458.865 ops/s
Iteration   3: 144691.289 ops/s
Iteration   4: 145682.377 ops/s
Iteration   5: 146962.224 ops/s
Iteration   6: 146012.310 ops/s
Iteration   7: 143686.292 ops/s
Iteration   8: 145557.608 ops/s
Iteration   9: 145576.815 ops/s
Iteration  10: 145595.205 ops/s
Iteration  11: 145584.474 ops/s
Iteration  12: 146201.549 ops/s
Iteration  13: 145975.161 ops/s
Iteration  14: 145863.473 ops/s
Iteration  15: 145524.830 ops/s
Iteration  16: 145462.541 ops/s
Iteration  17: 145637.025 ops/s
Iteration  18: 145208.876 ops/s
Iteration  19: 146226.593 ops/s
Iteration  20: 145841.503 ops/s
Iteration  21: 145178.750 ops/s
Iteration  22: 145452.875 ops/s
Iteration  23: 145421.275 ops/s
Iteration  24: 145016.438 ops/s
Iteration  25: 145819.788 ops/s
Iteration  26: 145286.287 ops/s
Iteration  27: 146136.097 ops/s
Iteration  28: 145327.018 ops/s
Iteration  29: 145264.737 ops/s
Iteration  30: 144495.866 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_135._Benchmark.benchmark_Cluster_135":
  145529.103 ±(99.9%) 392.749 ops/s [Average]
  (min, avg, max) = (143686.292, 145529.103, 146962.224), stdev = 587.849
  CI (99.9%): [145136.354, 145921.853] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_135._Benchmark.benchmark_Cluster_135  thrpt   30  145529.103 ± 392.749  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_136._Benchmark.benchmark_Cluster_136$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_136._Benchmark.benchmark_Cluster_136

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 54774.897 ops/s
# Warmup Iteration   2: 125860.949 ops/s
# Warmup Iteration   3: 133812.423 ops/s
# Warmup Iteration   4: 145895.826 ops/s
# Warmup Iteration   5: 147698.200 ops/s
# Warmup Iteration   6: 147395.329 ops/s
# Warmup Iteration   7: 147030.427 ops/s
# Warmup Iteration   8: 146611.887 ops/s
# Warmup Iteration   9: 146714.275 ops/s
# Warmup Iteration  10: 146209.431 ops/s
# Warmup Iteration  11: 146019.015 ops/s
# Warmup Iteration  12: 146198.066 ops/s
# Warmup Iteration  13: 146500.807 ops/s
# Warmup Iteration  14: 146383.855 ops/s
# Warmup Iteration  15: 145187.071 ops/s
# Warmup Iteration  16: 146157.399 ops/s
# Warmup Iteration  17: 150892.981 ops/s
# Warmup Iteration  18: 150872.784 ops/s
# Warmup Iteration  19: 150994.238 ops/s
# Warmup Iteration  20: 151424.550 ops/s
# Warmup Iteration  21: 151405.141 ops/s
# Warmup Iteration  22: 151122.188 ops/s
# Warmup Iteration  23: 151032.140 ops/s
# Warmup Iteration  24: 150896.227 ops/s
# Warmup Iteration  25: 150451.302 ops/s
# Warmup Iteration  26: 151056.552 ops/s
# Warmup Iteration  27: 150549.138 ops/s
# Warmup Iteration  28: 150984.153 ops/s
# Warmup Iteration  29: 150590.097 ops/s
# Warmup Iteration  30: 151375.646 ops/s
Iteration   1: 151091.281 ops/s
Iteration   2: 152104.418 ops/s
Iteration   3: 150904.883 ops/s
Iteration   4: 151984.337 ops/s
Iteration   5: 151455.519 ops/s
Iteration   6: 150731.638 ops/s
Iteration   7: 151360.436 ops/s
Iteration   8: 151842.700 ops/s
Iteration   9: 151808.756 ops/s
Iteration  10: 151074.143 ops/s
Iteration  11: 149887.723 ops/s
Iteration  12: 151567.270 ops/s
Iteration  13: 150571.570 ops/s
Iteration  14: 151377.454 ops/s
Iteration  15: 150578.047 ops/s
Iteration  16: 151153.603 ops/s
Iteration  17: 151243.327 ops/s
Iteration  18: 150554.025 ops/s
Iteration  19: 150812.441 ops/s
Iteration  20: 150725.188 ops/s
Iteration  21: 150885.870 ops/s
Iteration  22: 150582.298 ops/s
Iteration  23: 151253.787 ops/s
Iteration  24: 150616.902 ops/s
Iteration  25: 150782.112 ops/s
Iteration  26: 150003.092 ops/s
Iteration  27: 152006.286 ops/s
Iteration  28: 150872.714 ops/s
Iteration  29: 150699.213 ops/s
Iteration  30: 150311.508 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_136._Benchmark.benchmark_Cluster_136":
  151028.085 ±(99.9%) 381.392 ops/s [Average]
  (min, avg, max) = (149887.723, 151028.085, 152104.418), stdev = 570.850
  CI (99.9%): [150646.692, 151409.477] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_136._Benchmark.benchmark_Cluster_136  thrpt   30  151028.085 ± 381.392  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_137._Benchmark.benchmark_Cluster_137$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_137._Benchmark.benchmark_Cluster_137

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 88044.032 ops/s
# Warmup Iteration   2: 164533.009 ops/s
# Warmup Iteration   3: 160360.856 ops/s
# Warmup Iteration   4: 173043.810 ops/s
# Warmup Iteration   5: 172961.310 ops/s
# Warmup Iteration   6: 173368.646 ops/s
# Warmup Iteration   7: 173143.064 ops/s
# Warmup Iteration   8: 173072.333 ops/s
# Warmup Iteration   9: 172434.525 ops/s
# Warmup Iteration  10: 173176.747 ops/s
# Warmup Iteration  11: 171398.157 ops/s
# Warmup Iteration  12: 172738.105 ops/s
# Warmup Iteration  13: 172348.823 ops/s
# Warmup Iteration  14: 172275.883 ops/s
# Warmup Iteration  15: 172787.965 ops/s
# Warmup Iteration  16: 172437.217 ops/s
# Warmup Iteration  17: 178704.611 ops/s
# Warmup Iteration  18: 179459.398 ops/s
# Warmup Iteration  19: 179864.866 ops/s
# Warmup Iteration  20: 179116.404 ops/s
# Warmup Iteration  21: 178952.169 ops/s
# Warmup Iteration  22: 179619.458 ops/s
# Warmup Iteration  23: 179438.995 ops/s
# Warmup Iteration  24: 179578.538 ops/s
# Warmup Iteration  25: 179439.927 ops/s
# Warmup Iteration  26: 178234.340 ops/s
# Warmup Iteration  27: 179628.898 ops/s
# Warmup Iteration  28: 178828.199 ops/s
# Warmup Iteration  29: 179388.402 ops/s
# Warmup Iteration  30: 178613.996 ops/s
Iteration   1: 178216.973 ops/s
Iteration   2: 178670.322 ops/s
Iteration   3: 179627.146 ops/s
Iteration   4: 178587.272 ops/s
Iteration   5: 179517.437 ops/s
Iteration   6: 179398.146 ops/s
Iteration   7: 179056.710 ops/s
Iteration   8: 179587.232 ops/s
Iteration   9: 178044.491 ops/s
Iteration  10: 179572.030 ops/s
Iteration  11: 179241.879 ops/s
Iteration  12: 178696.626 ops/s
Iteration  13: 179274.926 ops/s
Iteration  14: 178304.664 ops/s
Iteration  15: 178923.816 ops/s
Iteration  16: 178613.386 ops/s
Iteration  17: 178935.066 ops/s
Iteration  18: 179025.052 ops/s
Iteration  19: 178634.539 ops/s
Iteration  20: 179112.299 ops/s
Iteration  21: 178629.395 ops/s
Iteration  22: 179304.150 ops/s
Iteration  23: 179089.083 ops/s
Iteration  24: 179841.856 ops/s
Iteration  25: 178598.907 ops/s
Iteration  26: 178728.934 ops/s
Iteration  27: 179237.380 ops/s
Iteration  28: 178446.630 ops/s
Iteration  29: 177836.664 ops/s
Iteration  30: 179131.187 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_137._Benchmark.benchmark_Cluster_137":
  178929.473 ±(99.9%) 330.133 ops/s [Average]
  (min, avg, max) = (177836.664, 178929.473, 179841.856), stdev = 494.127
  CI (99.9%): [178599.340, 179259.606] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_137._Benchmark.benchmark_Cluster_137  thrpt   30  178929.473 ± 330.133  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_138._Benchmark.benchmark_Cluster_138$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_138._Benchmark.benchmark_Cluster_138

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 51957.439 ops/s
# Warmup Iteration   2: 69219.324 ops/s
# Warmup Iteration   3: 99599.801 ops/s
# Warmup Iteration   4: 139859.577 ops/s
# Warmup Iteration   5: 143037.454 ops/s
# Warmup Iteration   6: 143039.350 ops/s
# Warmup Iteration   7: 142839.057 ops/s
# Warmup Iteration   8: 143145.903 ops/s
# Warmup Iteration   9: 142695.551 ops/s
# Warmup Iteration  10: 141496.063 ops/s
# Warmup Iteration  11: 142263.808 ops/s
# Warmup Iteration  12: 141487.744 ops/s
# Warmup Iteration  13: 142308.000 ops/s
# Warmup Iteration  14: 141511.551 ops/s
# Warmup Iteration  15: 141475.647 ops/s
# Warmup Iteration  16: 142136.323 ops/s
# Warmup Iteration  17: 148274.685 ops/s
# Warmup Iteration  18: 148221.806 ops/s
# Warmup Iteration  19: 147963.191 ops/s
# Warmup Iteration  20: 147376.658 ops/s
# Warmup Iteration  21: 147928.215 ops/s
# Warmup Iteration  22: 148057.369 ops/s
# Warmup Iteration  23: 148310.560 ops/s
# Warmup Iteration  24: 147446.820 ops/s
# Warmup Iteration  25: 146984.678 ops/s
# Warmup Iteration  26: 148029.387 ops/s
# Warmup Iteration  27: 147443.654 ops/s
# Warmup Iteration  28: 147916.148 ops/s
# Warmup Iteration  29: 148667.162 ops/s
# Warmup Iteration  30: 147469.264 ops/s
Iteration   1: 148555.009 ops/s
Iteration   2: 147705.165 ops/s
Iteration   3: 147422.289 ops/s
Iteration   4: 148412.195 ops/s
Iteration   5: 148316.293 ops/s
Iteration   6: 148488.080 ops/s
Iteration   7: 148512.831 ops/s
Iteration   8: 147995.158 ops/s
Iteration   9: 147585.001 ops/s
Iteration  10: 148154.026 ops/s
Iteration  11: 148044.148 ops/s
Iteration  12: 147542.649 ops/s
Iteration  13: 148213.769 ops/s
Iteration  14: 147740.561 ops/s
Iteration  15: 146855.407 ops/s
Iteration  16: 147440.965 ops/s
Iteration  17: 148291.212 ops/s
Iteration  18: 148127.776 ops/s
Iteration  19: 147091.531 ops/s
Iteration  20: 147071.345 ops/s
Iteration  21: 147644.414 ops/s
Iteration  22: 147386.929 ops/s
Iteration  23: 148043.066 ops/s
Iteration  24: 147070.104 ops/s
Iteration  25: 147900.929 ops/s
Iteration  26: 148138.902 ops/s
Iteration  27: 148236.910 ops/s
Iteration  28: 148157.301 ops/s
Iteration  29: 148040.886 ops/s
Iteration  30: 147451.224 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_138._Benchmark.benchmark_Cluster_138":
  147854.536 ±(99.9%) 318.206 ops/s [Average]
  (min, avg, max) = (146855.407, 147854.536, 148555.009), stdev = 476.275
  CI (99.9%): [147536.330, 148172.741] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_138._Benchmark.benchmark_Cluster_138  thrpt   30  147854.536 ± 318.206  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_139._Benchmark.benchmark_Cluster_139$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_139._Benchmark.benchmark_Cluster_139

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 73767.411 ops/s
# Warmup Iteration   2: 144431.152 ops/s
# Warmup Iteration   3: 156386.694 ops/s
# Warmup Iteration   4: 156896.334 ops/s
# Warmup Iteration   5: 169537.562 ops/s
# Warmup Iteration   6: 169721.868 ops/s
# Warmup Iteration   7: 169460.014 ops/s
# Warmup Iteration   8: 161890.695 ops/s
# Warmup Iteration   9: 169002.121 ops/s
# Warmup Iteration  10: 169798.682 ops/s
# Warmup Iteration  11: 169428.543 ops/s
# Warmup Iteration  12: 168424.640 ops/s
# Warmup Iteration  13: 169365.803 ops/s
# Warmup Iteration  14: 169187.556 ops/s
# Warmup Iteration  15: 169373.051 ops/s
# Warmup Iteration  16: 168396.075 ops/s
# Warmup Iteration  17: 174239.060 ops/s
# Warmup Iteration  18: 175531.739 ops/s
# Warmup Iteration  19: 175576.011 ops/s
# Warmup Iteration  20: 174597.625 ops/s
# Warmup Iteration  21: 175422.646 ops/s
# Warmup Iteration  22: 173959.388 ops/s
# Warmup Iteration  23: 174795.141 ops/s
# Warmup Iteration  24: 174729.313 ops/s
# Warmup Iteration  25: 174418.440 ops/s
# Warmup Iteration  26: 174907.311 ops/s
# Warmup Iteration  27: 175321.265 ops/s
# Warmup Iteration  28: 175324.108 ops/s
# Warmup Iteration  29: 176065.315 ops/s
# Warmup Iteration  30: 175724.312 ops/s
Iteration   1: 176349.477 ops/s
Iteration   2: 174709.063 ops/s
Iteration   3: 175332.425 ops/s
Iteration   4: 175004.651 ops/s
Iteration   5: 174849.641 ops/s
Iteration   6: 175614.740 ops/s
Iteration   7: 174209.995 ops/s
Iteration   8: 175682.398 ops/s
Iteration   9: 175816.699 ops/s
Iteration  10: 174174.988 ops/s
Iteration  11: 174416.825 ops/s
Iteration  12: 175152.637 ops/s
Iteration  13: 175189.059 ops/s
Iteration  14: 174661.854 ops/s
Iteration  15: 174952.236 ops/s
Iteration  16: 175329.903 ops/s
Iteration  17: 174301.021 ops/s
Iteration  18: 174750.575 ops/s
Iteration  19: 175022.082 ops/s
Iteration  20: 174206.016 ops/s
Iteration  21: 174395.111 ops/s
Iteration  22: 175724.555 ops/s
Iteration  23: 175556.911 ops/s
Iteration  24: 175375.006 ops/s
Iteration  25: 174364.355 ops/s
Iteration  26: 173783.085 ops/s
Iteration  27: 174606.268 ops/s
Iteration  28: 174738.969 ops/s
Iteration  29: 175274.535 ops/s
Iteration  30: 174991.435 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_139._Benchmark.benchmark_Cluster_139":
  174951.217 ±(99.9%) 394.564 ops/s [Average]
  (min, avg, max) = (173783.085, 174951.217, 176349.477), stdev = 590.565
  CI (99.9%): [174556.653, 175345.782] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_139._Benchmark.benchmark_Cluster_139  thrpt   30  174951.217 ± 394.564  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_14._Benchmark.benchmark_Cluster_14$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_14._Benchmark.benchmark_Cluster_14

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 45357.159 ops/s
# Warmup Iteration   2: 105109.235 ops/s
# Warmup Iteration   3: 118339.393 ops/s
# Warmup Iteration   4: 135239.387 ops/s
# Warmup Iteration   5: 135820.960 ops/s
# Warmup Iteration   6: 135168.437 ops/s
# Warmup Iteration   7: 135104.102 ops/s
# Warmup Iteration   8: 134825.227 ops/s
# Warmup Iteration   9: 135569.707 ops/s
# Warmup Iteration  10: 135287.581 ops/s
# Warmup Iteration  11: 135062.078 ops/s
# Warmup Iteration  12: 134600.669 ops/s
# Warmup Iteration  13: 133909.971 ops/s
# Warmup Iteration  14: 133927.962 ops/s
# Warmup Iteration  15: 134713.554 ops/s
# Warmup Iteration  16: 133550.259 ops/s
# Warmup Iteration  17: 140019.401 ops/s
# Warmup Iteration  18: 138893.524 ops/s
# Warmup Iteration  19: 140243.759 ops/s
# Warmup Iteration  20: 139637.407 ops/s
# Warmup Iteration  21: 140127.003 ops/s
# Warmup Iteration  22: 139676.307 ops/s
# Warmup Iteration  23: 139881.438 ops/s
# Warmup Iteration  24: 139061.831 ops/s
# Warmup Iteration  25: 140472.854 ops/s
# Warmup Iteration  26: 140368.000 ops/s
# Warmup Iteration  27: 139684.904 ops/s
# Warmup Iteration  28: 139041.808 ops/s
# Warmup Iteration  29: 140886.867 ops/s
# Warmup Iteration  30: 139829.349 ops/s
Iteration   1: 139563.106 ops/s
Iteration   2: 139793.296 ops/s
Iteration   3: 139941.834 ops/s
Iteration   4: 140840.878 ops/s
Iteration   5: 139541.174 ops/s
Iteration   6: 139308.676 ops/s
Iteration   7: 140250.163 ops/s
Iteration   8: 140651.009 ops/s
Iteration   9: 139730.560 ops/s
Iteration  10: 139669.284 ops/s
Iteration  11: 140126.099 ops/s
Iteration  12: 140750.853 ops/s
Iteration  13: 140688.293 ops/s
Iteration  14: 139899.155 ops/s
Iteration  15: 139868.791 ops/s
Iteration  16: 139683.577 ops/s
Iteration  17: 140488.075 ops/s
Iteration  18: 139826.177 ops/s
Iteration  19: 139691.011 ops/s
Iteration  20: 139462.580 ops/s
Iteration  21: 140190.939 ops/s
Iteration  22: 140226.387 ops/s
Iteration  23: 140256.055 ops/s
Iteration  24: 139543.635 ops/s
Iteration  25: 139347.061 ops/s
Iteration  26: 140107.200 ops/s
Iteration  27: 140208.070 ops/s
Iteration  28: 139738.952 ops/s
Iteration  29: 139310.546 ops/s
Iteration  30: 139516.385 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_14._Benchmark.benchmark_Cluster_14":
  139940.661 ±(99.9%) 294.873 ops/s [Average]
  (min, avg, max) = (139308.676, 139940.661, 140840.878), stdev = 441.351
  CI (99.9%): [139645.788, 140235.533] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_14._Benchmark.benchmark_Cluster_14  thrpt   30  139940.661 ± 294.873  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_140._Benchmark.benchmark_Cluster_140$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_140._Benchmark.benchmark_Cluster_140

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 38049.822 ops/s
# Warmup Iteration   2: 29713.895 ops/s
# Warmup Iteration   3: 27110.239 ops/s
# Warmup Iteration   4: 24507.194 ops/s
# Warmup Iteration   5: 23484.857 ops/s
# Warmup Iteration   6: 30919.677 ops/s
# Warmup Iteration   7: 24731.778 ops/s
# Warmup Iteration   8: 23701.276 ops/s
# Warmup Iteration   9: 24069.724 ops/s
# Warmup Iteration  10: 24704.544 ops/s
# Warmup Iteration  11: 23951.814 ops/s
# Warmup Iteration  12: 24475.441 ops/s
# Warmup Iteration  13: 24592.280 ops/s
# Warmup Iteration  14: 24345.437 ops/s
# Warmup Iteration  15: 31898.860 ops/s
# Warmup Iteration  16: 24579.193 ops/s
# Warmup Iteration  17: 24681.642 ops/s
# Warmup Iteration  18: 24331.326 ops/s
# Warmup Iteration  19: 24614.693 ops/s
# Warmup Iteration  20: 24702.093 ops/s
# Warmup Iteration  21: 24786.542 ops/s
# Warmup Iteration  22: 24314.655 ops/s
# Warmup Iteration  23: 24788.365 ops/s
# Warmup Iteration  24: 24199.481 ops/s
# Warmup Iteration  25: 24243.119 ops/s
# Warmup Iteration  26: 24015.050 ops/s
# Warmup Iteration  27: 24670.787 ops/s
# Warmup Iteration  28: 24674.620 ops/s
# Warmup Iteration  29: 23927.160 ops/s
# Warmup Iteration  30: 24168.391 ops/s
Iteration   1: 24451.083 ops/s
Iteration   2: 24867.565 ops/s
Iteration   3: 24536.509 ops/s
Iteration   4: 24291.872 ops/s
Iteration   5: 25029.491 ops/s
Iteration   6: 23859.245 ops/s
Iteration   7: 24149.855 ops/s
Iteration   8: 24404.104 ops/s
Iteration   9: 24426.989 ops/s
Iteration  10: 29559.929 ops/s
Iteration  11: 47202.055 ops/s
Iteration  12: 23646.456 ops/s
Iteration  13: 24292.945 ops/s
Iteration  14: 24769.801 ops/s
Iteration  15: 24796.988 ops/s
Iteration  16: 24194.948 ops/s
Iteration  17: 24345.495 ops/s
Iteration  18: 24000.979 ops/s
Iteration  19: 24563.768 ops/s
Iteration  20: 24596.909 ops/s
Iteration  21: 24658.805 ops/s
Iteration  22: 24139.939 ops/s
Iteration  23: 24492.703 ops/s
Iteration  24: 24913.885 ops/s
Iteration  25: 24875.403 ops/s
Iteration  26: 24206.524 ops/s
Iteration  27: 24346.611 ops/s
Iteration  28: 25019.747 ops/s
Iteration  29: 24583.631 ops/s
Iteration  30: 24487.233 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_140._Benchmark.benchmark_Cluster_140":
  25390.382 ±(99.9%) 2830.158 ops/s [Average]
  (min, avg, max) = (23646.456, 25390.382, 47202.055), stdev = 4236.048
  CI (99.9%): [22560.224, 28220.540] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_140._Benchmark.benchmark_Cluster_140  thrpt   30  25390.382 ± 2830.158  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_141._Benchmark.benchmark_Cluster_141$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_141._Benchmark.benchmark_Cluster_141

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9096.718 ops/s
# Warmup Iteration   2: 55668.586 ops/s
# Warmup Iteration   3: 93234.702 ops/s
# Warmup Iteration   4: 96580.522 ops/s
# Warmup Iteration   5: 109238.194 ops/s
# Warmup Iteration   6: 110789.224 ops/s
# Warmup Iteration   7: 112377.566 ops/s
# Warmup Iteration   8: 110317.923 ops/s
# Warmup Iteration   9: 113756.408 ops/s
# Warmup Iteration  10: 112038.072 ops/s
# Warmup Iteration  11: 112569.320 ops/s
# Warmup Iteration  12: 111784.689 ops/s
# Warmup Iteration  13: 105039.698 ops/s
# Warmup Iteration  14: 107689.368 ops/s
# Warmup Iteration  15: 108806.084 ops/s
# Warmup Iteration  16: 109589.510 ops/s
# Warmup Iteration  17: 110115.040 ops/s
# Warmup Iteration  18: 109679.060 ops/s
# Warmup Iteration  19: 109359.784 ops/s
# Warmup Iteration  20: 110167.302 ops/s
# Warmup Iteration  21: 102423.662 ops/s
# Warmup Iteration  22: 110549.332 ops/s
# Warmup Iteration  23: 111462.149 ops/s
# Warmup Iteration  24: 114268.718 ops/s
# Warmup Iteration  25: 108765.902 ops/s
# Warmup Iteration  26: 109032.650 ops/s
# Warmup Iteration  27: 110709.441 ops/s
# Warmup Iteration  28: 109570.239 ops/s
# Warmup Iteration  29: 110888.914 ops/s
# Warmup Iteration  30: 109976.739 ops/s
Iteration   1: 111304.210 ops/s
Iteration   2: 111917.565 ops/s
Iteration   3: 108351.678 ops/s
Iteration   4: 113004.219 ops/s
Iteration   5: 108476.736 ops/s
Iteration   6: 110767.802 ops/s
Iteration   7: 107994.079 ops/s
Iteration   8: 110515.011 ops/s
Iteration   9: 109084.982 ops/s
Iteration  10: 109358.655 ops/s
Iteration  11: 110607.816 ops/s
Iteration  12: 111654.459 ops/s
Iteration  13: 112091.443 ops/s
Iteration  14: 111008.718 ops/s
Iteration  15: 111715.323 ops/s
Iteration  16: 108623.667 ops/s
Iteration  17: 109933.140 ops/s
Iteration  18: 112353.258 ops/s
Iteration  19: 109581.341 ops/s
Iteration  20: 111295.336 ops/s
Iteration  21: 111134.093 ops/s
Iteration  22: 107613.187 ops/s
Iteration  23: 110559.314 ops/s
Iteration  24: 106660.827 ops/s
Iteration  25: 109631.873 ops/s
Iteration  26: 109651.228 ops/s
Iteration  27: 103143.363 ops/s
Iteration  28: 110617.112 ops/s
Iteration  29: 109624.001 ops/s
Iteration  30: 109628.269 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_141._Benchmark.benchmark_Cluster_141":
  109930.090 ±(99.9%) 1316.079 ops/s [Average]
  (min, avg, max) = (103143.363, 109930.090, 113004.219), stdev = 1969.846
  CI (99.9%): [108614.011, 111246.170] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_141._Benchmark.benchmark_Cluster_141  thrpt   30  109930.090 ± 1316.079  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_142._Benchmark.benchmark_Cluster_142$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_142._Benchmark.benchmark_Cluster_142

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9162.476 ops/s
# Warmup Iteration   2: 71258.253 ops/s
# Warmup Iteration   3: 74435.005 ops/s
# Warmup Iteration   4: 30272.351 ops/s
# Warmup Iteration   5: 62271.482 ops/s
# Warmup Iteration   6: 43169.811 ops/s
# Warmup Iteration   7: 68429.998 ops/s
# Warmup Iteration   8: 63103.569 ops/s
# Warmup Iteration   9: 29212.427 ops/s
# Warmup Iteration  10: 38777.986 ops/s
# Warmup Iteration  11: 43963.444 ops/s
# Warmup Iteration  12: 51744.567 ops/s
# Warmup Iteration  13: 40241.595 ops/s
# Warmup Iteration  14: 47225.504 ops/s
# Warmup Iteration  15: 8588.924 ops/s
# Warmup Iteration  16: 14489.695 ops/s
# Warmup Iteration  17: 18206.209 ops/s
# Warmup Iteration  18: 30124.376 ops/s
# Warmup Iteration  19: 27187.982 ops/s
# Warmup Iteration  20: 31246.536 ops/s
# Warmup Iteration  21: 16172.393 ops/s
# Warmup Iteration  22: 21609.504 ops/s
# Warmup Iteration  23: 20780.875 ops/s
# Warmup Iteration  24: 15759.219 ops/s
# Warmup Iteration  25: 13566.852 ops/s
# Warmup Iteration  26: 18762.715 ops/s
# Warmup Iteration  27: 18746.438 ops/s
# Warmup Iteration  28: 10451.379 ops/s
# Warmup Iteration  29: 14792.141 ops/s
# Warmup Iteration  30: 17257.797 ops/s
Iteration   1: 11667.589 ops/s
Iteration   2: 14032.992 ops/s
Iteration   3: 12317.914 ops/s
Iteration   4: 4285.708 ops/s
Iteration   5: 13063.050 ops/s
Iteration   6: 11512.075 ops/s
Iteration   7: 11663.634 ops/s
Iteration   8: 12718.012 ops/s
Iteration   9: 12253.186 ops/s
Iteration  10: 11640.078 ops/s
Iteration  11: 11111.999 ops/s
Iteration  12: 12201.756 ops/s
Iteration  13: 12639.135 ops/s
Iteration  14: 9819.630 ops/s
Iteration  15: 11478.879 ops/s
Iteration  16: 11543.050 ops/s
Iteration  17: 8400.182 ops/s
Iteration  18: 12247.205 ops/s
Iteration  19: 12153.244 ops/s
Iteration  20: 12002.806 ops/s
Iteration  21: 8692.271 ops/s
Iteration  22: 12191.963 ops/s
Iteration  23: 12063.496 ops/s
Iteration  24: 8150.694 ops/s
Iteration  25: 13486.653 ops/s
Iteration  26: 12322.194 ops/s
Iteration  27: 7023.922 ops/s
Iteration  28: 12034.894 ops/s
Iteration  29: 10903.828 ops/s
Iteration  30: 6405.095 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_142._Benchmark.benchmark_Cluster_142":
  11067.571 ±(99.9%) 1493.216 ops/s [Average]
  (min, avg, max) = (4285.708, 11067.571, 14032.992), stdev = 2234.975
  CI (99.9%): [9574.356, 12560.787] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_142._Benchmark.benchmark_Cluster_142  thrpt   30  11067.571 ± 1493.216  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_143._Benchmark.benchmark_Cluster_143$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_143._Benchmark.benchmark_Cluster_143

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 101834.994 ops/s
# Warmup Iteration   2: 140289.586 ops/s
# Warmup Iteration   3: 158610.167 ops/s
# Warmup Iteration   4: 161553.654 ops/s
# Warmup Iteration   5: 163398.138 ops/s
# Warmup Iteration   6: 162459.399 ops/s
# Warmup Iteration   7: 162570.753 ops/s
# Warmup Iteration   8: 163588.462 ops/s
# Warmup Iteration   9: 161817.863 ops/s
# Warmup Iteration  10: 162998.571 ops/s
# Warmup Iteration  11: 161386.131 ops/s
# Warmup Iteration  12: 162619.510 ops/s
# Warmup Iteration  13: 161769.734 ops/s
# Warmup Iteration  14: 162392.544 ops/s
# Warmup Iteration  15: 161815.587 ops/s
# Warmup Iteration  16: 161787.136 ops/s
# Warmup Iteration  17: 170157.215 ops/s
# Warmup Iteration  18: 169748.006 ops/s
# Warmup Iteration  19: 170022.037 ops/s
# Warmup Iteration  20: 170443.473 ops/s
# Warmup Iteration  21: 170454.505 ops/s
# Warmup Iteration  22: 169536.225 ops/s
# Warmup Iteration  23: 171241.642 ops/s
# Warmup Iteration  24: 171017.037 ops/s
# Warmup Iteration  25: 170882.998 ops/s
# Warmup Iteration  26: 169883.486 ops/s
# Warmup Iteration  27: 169598.069 ops/s
# Warmup Iteration  28: 171315.862 ops/s
# Warmup Iteration  29: 170731.227 ops/s
# Warmup Iteration  30: 169764.096 ops/s
Iteration   1: 170280.888 ops/s
Iteration   2: 170406.765 ops/s
Iteration   3: 169954.737 ops/s
Iteration   4: 169593.841 ops/s
Iteration   5: 168579.321 ops/s
Iteration   6: 169895.844 ops/s
Iteration   7: 170139.081 ops/s
Iteration   8: 169186.624 ops/s
Iteration   9: 169534.086 ops/s
Iteration  10: 169361.508 ops/s
Iteration  11: 169608.208 ops/s
Iteration  12: 170179.406 ops/s
Iteration  13: 169476.618 ops/s
Iteration  14: 170431.594 ops/s
Iteration  15: 169638.663 ops/s
Iteration  16: 169637.131 ops/s
Iteration  17: 170216.006 ops/s
Iteration  18: 169925.281 ops/s
Iteration  19: 169870.827 ops/s
Iteration  20: 169554.793 ops/s
Iteration  21: 169232.293 ops/s
Iteration  22: 168159.529 ops/s
Iteration  23: 169959.543 ops/s
Iteration  24: 170169.827 ops/s
Iteration  25: 169694.601 ops/s
Iteration  26: 170031.761 ops/s
Iteration  27: 171011.181 ops/s
Iteration  28: 169689.834 ops/s
Iteration  29: 168988.643 ops/s
Iteration  30: 167496.943 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_143._Benchmark.benchmark_Cluster_143":
  169663.512 ±(99.9%) 464.758 ops/s [Average]
  (min, avg, max) = (167496.943, 169663.512, 171011.181), stdev = 695.628
  CI (99.9%): [169198.754, 170128.271] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_143._Benchmark.benchmark_Cluster_143  thrpt   30  169663.512 ± 464.758  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_144._Benchmark.benchmark_Cluster_144$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_144._Benchmark.benchmark_Cluster_144

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 263535.822 ops/s
# Warmup Iteration   2: 350565.605 ops/s
# Warmup Iteration   3: 390687.885 ops/s
# Warmup Iteration   4: 399448.950 ops/s
# Warmup Iteration   5: 397747.582 ops/s
# Warmup Iteration   6: 400862.194 ops/s
# Warmup Iteration   7: 398538.797 ops/s
# Warmup Iteration   8: 398771.832 ops/s
# Warmup Iteration   9: 396078.711 ops/s
# Warmup Iteration  10: 393891.357 ops/s
# Warmup Iteration  11: 396476.459 ops/s
# Warmup Iteration  12: 397138.196 ops/s
# Warmup Iteration  13: 397248.269 ops/s
# Warmup Iteration  14: 396922.457 ops/s
# Warmup Iteration  15: 395810.162 ops/s
# Warmup Iteration  16: 397354.049 ops/s
# Warmup Iteration  17: 417218.425 ops/s
# Warmup Iteration  18: 416757.487 ops/s
# Warmup Iteration  19: 416392.411 ops/s
# Warmup Iteration  20: 415133.651 ops/s
# Warmup Iteration  21: 417243.851 ops/s
# Warmup Iteration  22: 414367.995 ops/s
# Warmup Iteration  23: 415954.167 ops/s
# Warmup Iteration  24: 414907.108 ops/s
# Warmup Iteration  25: 418206.128 ops/s
# Warmup Iteration  26: 415212.477 ops/s
# Warmup Iteration  27: 416834.474 ops/s
# Warmup Iteration  28: 416729.336 ops/s
# Warmup Iteration  29: 413915.117 ops/s
# Warmup Iteration  30: 415729.730 ops/s
Iteration   1: 416771.976 ops/s
Iteration   2: 414905.494 ops/s
Iteration   3: 416733.482 ops/s
Iteration   4: 414806.589 ops/s
Iteration   5: 416505.094 ops/s
Iteration   6: 416969.261 ops/s
Iteration   7: 416275.775 ops/s
Iteration   8: 415490.973 ops/s
Iteration   9: 417770.608 ops/s
Iteration  10: 417600.098 ops/s
Iteration  11: 416413.186 ops/s
Iteration  12: 415928.407 ops/s
Iteration  13: 414130.641 ops/s
Iteration  14: 416922.491 ops/s
Iteration  15: 416670.338 ops/s
Iteration  16: 416825.657 ops/s
Iteration  17: 415550.519 ops/s
Iteration  18: 413271.913 ops/s
Iteration  19: 416482.597 ops/s
Iteration  20: 413209.107 ops/s
Iteration  21: 416613.042 ops/s
Iteration  22: 415577.083 ops/s
Iteration  23: 415092.185 ops/s
Iteration  24: 416890.290 ops/s
Iteration  25: 417115.197 ops/s
Iteration  26: 414333.679 ops/s
Iteration  27: 414635.486 ops/s
Iteration  28: 414362.178 ops/s
Iteration  29: 417376.465 ops/s
Iteration  30: 414091.200 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_144._Benchmark.benchmark_Cluster_144":
  415844.034 ±(99.9%) 858.158 ops/s [Average]
  (min, avg, max) = (413209.107, 415844.034, 417770.608), stdev = 1284.451
  CI (99.9%): [414985.876, 416702.192] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_144._Benchmark.benchmark_Cluster_144  thrpt   30  415844.034 ± 858.158  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_145._Benchmark.benchmark_Cluster_145$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_145._Benchmark.benchmark_Cluster_145

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 232441.869 ops/s
# Warmup Iteration   2: 314889.235 ops/s
# Warmup Iteration   3: 315117.655 ops/s
# Warmup Iteration   4: 353904.376 ops/s
# Warmup Iteration   5: 355859.353 ops/s
# Warmup Iteration   6: 354883.324 ops/s
# Warmup Iteration   7: 354062.298 ops/s
# Warmup Iteration   8: 354295.753 ops/s
# Warmup Iteration   9: 354558.671 ops/s
# Warmup Iteration  10: 352371.595 ops/s
# Warmup Iteration  11: 354800.849 ops/s
# Warmup Iteration  12: 352923.614 ops/s
# Warmup Iteration  13: 352260.520 ops/s
# Warmup Iteration  14: 351060.759 ops/s
# Warmup Iteration  15: 351604.393 ops/s
# Warmup Iteration  16: 352935.841 ops/s
# Warmup Iteration  17: 365307.405 ops/s
# Warmup Iteration  18: 366415.532 ops/s
# Warmup Iteration  19: 368045.691 ops/s
# Warmup Iteration  20: 367176.225 ops/s
# Warmup Iteration  21: 365524.305 ops/s
# Warmup Iteration  22: 367701.620 ops/s
# Warmup Iteration  23: 366492.720 ops/s
# Warmup Iteration  24: 366964.627 ops/s
# Warmup Iteration  25: 366382.958 ops/s
# Warmup Iteration  26: 366581.910 ops/s
# Warmup Iteration  27: 367352.330 ops/s
# Warmup Iteration  28: 365658.924 ops/s
# Warmup Iteration  29: 367490.169 ops/s
# Warmup Iteration  30: 368305.321 ops/s
Iteration   1: 365085.660 ops/s
Iteration   2: 367416.847 ops/s
Iteration   3: 365852.367 ops/s
Iteration   4: 365628.458 ops/s
Iteration   5: 366774.483 ops/s
Iteration   6: 366348.375 ops/s
Iteration   7: 365973.053 ops/s
Iteration   8: 364869.551 ops/s
Iteration   9: 367935.734 ops/s
Iteration  10: 366656.363 ops/s
Iteration  11: 365457.238 ops/s
Iteration  12: 367087.189 ops/s
Iteration  13: 366995.255 ops/s
Iteration  14: 367320.935 ops/s
Iteration  15: 366676.641 ops/s
Iteration  16: 367254.557 ops/s
Iteration  17: 367045.549 ops/s
Iteration  18: 368144.067 ops/s
Iteration  19: 366453.904 ops/s
Iteration  20: 365529.000 ops/s
Iteration  21: 366997.046 ops/s
Iteration  22: 366152.234 ops/s
Iteration  23: 368194.020 ops/s
Iteration  24: 365471.439 ops/s
Iteration  25: 363968.369 ops/s
Iteration  26: 366919.450 ops/s
Iteration  27: 364101.843 ops/s
Iteration  28: 368409.558 ops/s
Iteration  29: 369881.727 ops/s
Iteration  30: 367527.908 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_145._Benchmark.benchmark_Cluster_145":
  366604.294 ±(99.9%) 863.858 ops/s [Average]
  (min, avg, max) = (363968.369, 366604.294, 369881.727), stdev = 1292.982
  CI (99.9%): [365740.436, 367468.152] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_145._Benchmark.benchmark_Cluster_145  thrpt   30  366604.294 ± 863.858  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_146._Benchmark.benchmark_Cluster_146$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_146._Benchmark.benchmark_Cluster_146

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 95195.982 ops/s
# Warmup Iteration   2: 145400.618 ops/s
# Warmup Iteration   3: 135796.480 ops/s
# Warmup Iteration   4: 155664.828 ops/s
# Warmup Iteration   5: 156018.372 ops/s
# Warmup Iteration   6: 155723.076 ops/s
# Warmup Iteration   7: 155811.293 ops/s
# Warmup Iteration   8: 156307.614 ops/s
# Warmup Iteration   9: 155985.406 ops/s
# Warmup Iteration  10: 155133.671 ops/s
# Warmup Iteration  11: 155568.935 ops/s
# Warmup Iteration  12: 155615.800 ops/s
# Warmup Iteration  13: 155492.328 ops/s
# Warmup Iteration  14: 155344.405 ops/s
# Warmup Iteration  15: 154900.626 ops/s
# Warmup Iteration  16: 154525.828 ops/s
# Warmup Iteration  17: 160480.810 ops/s
# Warmup Iteration  18: 161184.524 ops/s
# Warmup Iteration  19: 162049.315 ops/s
# Warmup Iteration  20: 161328.424 ops/s
# Warmup Iteration  21: 161601.139 ops/s
# Warmup Iteration  22: 161143.174 ops/s
# Warmup Iteration  23: 161868.611 ops/s
# Warmup Iteration  24: 161994.515 ops/s
# Warmup Iteration  25: 162131.188 ops/s
# Warmup Iteration  26: 161649.827 ops/s
# Warmup Iteration  27: 161653.770 ops/s
# Warmup Iteration  28: 162431.680 ops/s
# Warmup Iteration  29: 161399.458 ops/s
# Warmup Iteration  30: 162619.743 ops/s
Iteration   1: 161685.844 ops/s
Iteration   2: 161242.444 ops/s
Iteration   3: 161569.664 ops/s
Iteration   4: 161553.422 ops/s
Iteration   5: 161735.326 ops/s
Iteration   6: 161136.826 ops/s
Iteration   7: 161623.156 ops/s
Iteration   8: 161908.532 ops/s
Iteration   9: 161081.010 ops/s
Iteration  10: 161665.668 ops/s
Iteration  11: 161808.082 ops/s
Iteration  12: 161147.406 ops/s
Iteration  13: 161618.632 ops/s
Iteration  14: 160845.038 ops/s
Iteration  15: 161178.243 ops/s
Iteration  16: 161721.972 ops/s
Iteration  17: 160211.311 ops/s
Iteration  18: 161442.100 ops/s
Iteration  19: 162236.048 ops/s
Iteration  20: 162419.019 ops/s
Iteration  21: 161234.422 ops/s
Iteration  22: 162701.751 ops/s
Iteration  23: 161589.764 ops/s
Iteration  24: 161591.530 ops/s
Iteration  25: 160816.992 ops/s
Iteration  26: 161962.507 ops/s
Iteration  27: 161369.180 ops/s
Iteration  28: 161826.862 ops/s
Iteration  29: 161763.212 ops/s
Iteration  30: 160672.070 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_146._Benchmark.benchmark_Cluster_146":
  161511.934 ±(99.9%) 342.754 ops/s [Average]
  (min, avg, max) = (160211.311, 161511.934, 162701.751), stdev = 513.018
  CI (99.9%): [161169.180, 161854.689] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_146._Benchmark.benchmark_Cluster_146  thrpt   30  161511.934 ± 342.754  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_147._Benchmark.benchmark_Cluster_147$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_147._Benchmark.benchmark_Cluster_147

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 136687.749 ops/s
# Warmup Iteration   2: 187313.614 ops/s
# Warmup Iteration   3: 183644.025 ops/s
# Warmup Iteration   4: 175662.768 ops/s
# Warmup Iteration   5: 200530.737 ops/s
# Warmup Iteration   6: 197234.530 ops/s
# Warmup Iteration   7: 197207.666 ops/s
# Warmup Iteration   8: 195982.178 ops/s
# Warmup Iteration   9: 197496.141 ops/s
# Warmup Iteration  10: 197314.202 ops/s
# Warmup Iteration  11: 197412.718 ops/s
# Warmup Iteration  12: 197041.265 ops/s
# Warmup Iteration  13: 197169.153 ops/s
# Warmup Iteration  14: 195673.446 ops/s
# Warmup Iteration  15: 196520.187 ops/s
# Warmup Iteration  16: 196001.934 ops/s
# Warmup Iteration  17: 203517.436 ops/s
# Warmup Iteration  18: 203431.066 ops/s
# Warmup Iteration  19: 204117.032 ops/s
# Warmup Iteration  20: 203510.728 ops/s
# Warmup Iteration  21: 203547.895 ops/s
# Warmup Iteration  22: 202552.123 ops/s
# Warmup Iteration  23: 201925.908 ops/s
# Warmup Iteration  24: 202731.233 ops/s
# Warmup Iteration  25: 202823.076 ops/s
# Warmup Iteration  26: 203928.379 ops/s
# Warmup Iteration  27: 203194.658 ops/s
# Warmup Iteration  28: 203323.321 ops/s
# Warmup Iteration  29: 203250.706 ops/s
# Warmup Iteration  30: 202972.197 ops/s
Iteration   1: 203595.623 ops/s
Iteration   2: 203079.253 ops/s
Iteration   3: 201274.219 ops/s
Iteration   4: 202743.666 ops/s
Iteration   5: 203241.823 ops/s
Iteration   6: 202854.760 ops/s
Iteration   7: 200813.024 ops/s
Iteration   8: 202721.351 ops/s
Iteration   9: 201498.269 ops/s
Iteration  10: 201830.968 ops/s
Iteration  11: 202852.786 ops/s
Iteration  12: 203098.451 ops/s
Iteration  13: 202821.754 ops/s
Iteration  14: 201692.750 ops/s
Iteration  15: 203383.668 ops/s
Iteration  16: 202935.726 ops/s
Iteration  17: 201413.415 ops/s
Iteration  18: 202458.442 ops/s
Iteration  19: 203220.886 ops/s
Iteration  20: 203369.211 ops/s
Iteration  21: 203734.312 ops/s
Iteration  22: 202550.401 ops/s
Iteration  23: 202072.371 ops/s
Iteration  24: 203050.196 ops/s
Iteration  25: 196170.939 ops/s
Iteration  26: 202464.300 ops/s
Iteration  27: 202885.660 ops/s
Iteration  28: 201347.171 ops/s
Iteration  29: 203082.251 ops/s
Iteration  30: 202760.071 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_147._Benchmark.benchmark_Cluster_147":
  202367.257 ±(99.9%) 930.175 ops/s [Average]
  (min, avg, max) = (196170.939, 202367.257, 203734.312), stdev = 1392.242
  CI (99.9%): [201437.083, 203297.432] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_147._Benchmark.benchmark_Cluster_147  thrpt   30  202367.257 ± 930.175  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_148._Benchmark.benchmark_Cluster_148$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_148._Benchmark.benchmark_Cluster_148

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 110253.615 ops/s
# Warmup Iteration   2: 171129.237 ops/s
# Warmup Iteration   3: 160205.288 ops/s
# Warmup Iteration   4: 183188.555 ops/s
# Warmup Iteration   5: 184486.034 ops/s
# Warmup Iteration   6: 183670.441 ops/s
# Warmup Iteration   7: 183490.944 ops/s
# Warmup Iteration   8: 184005.731 ops/s
# Warmup Iteration   9: 183901.735 ops/s
# Warmup Iteration  10: 184339.810 ops/s
# Warmup Iteration  11: 184317.297 ops/s
# Warmup Iteration  12: 183841.829 ops/s
# Warmup Iteration  13: 183664.666 ops/s
# Warmup Iteration  14: 183265.380 ops/s
# Warmup Iteration  15: 183258.928 ops/s
# Warmup Iteration  16: 183811.668 ops/s
# Warmup Iteration  17: 189880.503 ops/s
# Warmup Iteration  18: 189587.403 ops/s
# Warmup Iteration  19: 190805.173 ops/s
# Warmup Iteration  20: 190421.392 ops/s
# Warmup Iteration  21: 189254.845 ops/s
# Warmup Iteration  22: 190686.066 ops/s
# Warmup Iteration  23: 189408.891 ops/s
# Warmup Iteration  24: 190088.837 ops/s
# Warmup Iteration  25: 190407.759 ops/s
# Warmup Iteration  26: 190382.539 ops/s
# Warmup Iteration  27: 190273.591 ops/s
# Warmup Iteration  28: 189494.461 ops/s
# Warmup Iteration  29: 190226.303 ops/s
# Warmup Iteration  30: 190025.047 ops/s
Iteration   1: 191058.120 ops/s
Iteration   2: 190418.879 ops/s
Iteration   3: 189916.747 ops/s
Iteration   4: 188332.379 ops/s
Iteration   5: 190565.057 ops/s
Iteration   6: 190661.524 ops/s
Iteration   7: 190502.821 ops/s
Iteration   8: 189909.128 ops/s
Iteration   9: 190105.842 ops/s
Iteration  10: 189424.633 ops/s
Iteration  11: 189972.839 ops/s
Iteration  12: 189430.035 ops/s
Iteration  13: 189383.110 ops/s
Iteration  14: 189805.822 ops/s
Iteration  15: 190239.592 ops/s
Iteration  16: 190593.706 ops/s
Iteration  17: 189972.325 ops/s
Iteration  18: 190000.707 ops/s
Iteration  19: 190108.093 ops/s
Iteration  20: 190737.602 ops/s
Iteration  21: 189564.835 ops/s
Iteration  22: 189084.327 ops/s
Iteration  23: 190491.235 ops/s
Iteration  24: 190510.315 ops/s
Iteration  25: 190641.083 ops/s
Iteration  26: 190585.856 ops/s
Iteration  27: 189945.340 ops/s
Iteration  28: 190239.734 ops/s
Iteration  29: 189375.375 ops/s
Iteration  30: 191066.919 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_148._Benchmark.benchmark_Cluster_148":
  190088.133 ±(99.9%) 407.591 ops/s [Average]
  (min, avg, max) = (188332.379, 190088.133, 191066.919), stdev = 610.064
  CI (99.9%): [189680.541, 190495.724] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_148._Benchmark.benchmark_Cluster_148  thrpt   30  190088.133 ± 407.591  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_149._Benchmark.benchmark_Cluster_149$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_149._Benchmark.benchmark_Cluster_149

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 99242.292 ops/s
# Warmup Iteration   2: 157601.047 ops/s
# Warmup Iteration   3: 162704.817 ops/s
# Warmup Iteration   4: 174965.835 ops/s
# Warmup Iteration   5: 177298.370 ops/s
# Warmup Iteration   6: 177412.632 ops/s
# Warmup Iteration   7: 177179.559 ops/s
# Warmup Iteration   8: 177483.204 ops/s
# Warmup Iteration   9: 176981.901 ops/s
# Warmup Iteration  10: 176608.194 ops/s
# Warmup Iteration  11: 176967.092 ops/s
# Warmup Iteration  12: 177112.756 ops/s
# Warmup Iteration  13: 177534.070 ops/s
# Warmup Iteration  14: 176876.673 ops/s
# Warmup Iteration  15: 175374.750 ops/s
# Warmup Iteration  16: 175917.028 ops/s
# Warmup Iteration  17: 183020.435 ops/s
# Warmup Iteration  18: 183692.007 ops/s
# Warmup Iteration  19: 184425.036 ops/s
# Warmup Iteration  20: 184422.087 ops/s
# Warmup Iteration  21: 182680.627 ops/s
# Warmup Iteration  22: 183533.578 ops/s
# Warmup Iteration  23: 183033.639 ops/s
# Warmup Iteration  24: 181761.964 ops/s
# Warmup Iteration  25: 184467.018 ops/s
# Warmup Iteration  26: 184472.422 ops/s
# Warmup Iteration  27: 183768.360 ops/s
# Warmup Iteration  28: 182609.998 ops/s
# Warmup Iteration  29: 182799.571 ops/s
# Warmup Iteration  30: 183820.809 ops/s
Iteration   1: 183435.844 ops/s
Iteration   2: 183318.863 ops/s
Iteration   3: 183923.452 ops/s
Iteration   4: 182749.592 ops/s
Iteration   5: 183093.696 ops/s
Iteration   6: 184503.547 ops/s
Iteration   7: 182979.905 ops/s
Iteration   8: 183681.635 ops/s
Iteration   9: 183580.381 ops/s
Iteration  10: 183860.299 ops/s
Iteration  11: 184162.459 ops/s
Iteration  12: 183582.032 ops/s
Iteration  13: 183064.078 ops/s
Iteration  14: 183708.560 ops/s
Iteration  15: 183492.770 ops/s
Iteration  16: 182360.433 ops/s
Iteration  17: 183833.864 ops/s
Iteration  18: 183418.138 ops/s
Iteration  19: 182609.671 ops/s
Iteration  20: 183168.422 ops/s
Iteration  21: 183266.528 ops/s
Iteration  22: 183374.172 ops/s
Iteration  23: 183436.774 ops/s
Iteration  24: 182955.262 ops/s
Iteration  25: 182840.973 ops/s
Iteration  26: 184763.876 ops/s
Iteration  27: 184486.068 ops/s
Iteration  28: 183283.551 ops/s
Iteration  29: 183225.609 ops/s
Iteration  30: 183503.984 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_149._Benchmark.benchmark_Cluster_149":
  183455.481 ±(99.9%) 368.616 ops/s [Average]
  (min, avg, max) = (182360.433, 183455.481, 184763.876), stdev = 551.727
  CI (99.9%): [183086.865, 183824.097] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_149._Benchmark.benchmark_Cluster_149  thrpt   30  183455.481 ± 368.616  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_15._Benchmark.benchmark_Cluster_15$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_15._Benchmark.benchmark_Cluster_15

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2831.641 ops/s
# Warmup Iteration   2: 52554.741 ops/s
# Warmup Iteration   3: 81524.383 ops/s
# Warmup Iteration   4: 91585.992 ops/s
# Warmup Iteration   5: 112265.152 ops/s
# Warmup Iteration   6: 112649.495 ops/s
# Warmup Iteration   7: 112518.770 ops/s
# Warmup Iteration   8: 112311.415 ops/s
# Warmup Iteration   9: 111945.618 ops/s
# Warmup Iteration  10: 111513.941 ops/s
# Warmup Iteration  11: 111801.522 ops/s
# Warmup Iteration  12: 111651.927 ops/s
# Warmup Iteration  13: 112544.494 ops/s
# Warmup Iteration  14: 112131.106 ops/s
# Warmup Iteration  15: 112140.074 ops/s
# Warmup Iteration  16: 111680.514 ops/s
# Warmup Iteration  17: 111372.350 ops/s
# Warmup Iteration  18: 110820.438 ops/s
# Warmup Iteration  19: 112269.706 ops/s
# Warmup Iteration  20: 112297.524 ops/s
# Warmup Iteration  21: 112528.482 ops/s
# Warmup Iteration  22: 112300.875 ops/s
# Warmup Iteration  23: 112358.194 ops/s
# Warmup Iteration  24: 112296.530 ops/s
# Warmup Iteration  25: 112241.404 ops/s
# Warmup Iteration  26: 112371.725 ops/s
# Warmup Iteration  27: 112097.750 ops/s
# Warmup Iteration  28: 111600.972 ops/s
# Warmup Iteration  29: 112633.036 ops/s
# Warmup Iteration  30: 113026.486 ops/s
Iteration   1: 111442.180 ops/s
Iteration   2: 111750.809 ops/s
Iteration   3: 112508.568 ops/s
Iteration   4: 112760.064 ops/s
Iteration   5: 112260.462 ops/s
Iteration   6: 111797.222 ops/s
Iteration   7: 112303.230 ops/s
Iteration   8: 111570.471 ops/s
Iteration   9: 112152.857 ops/s
Iteration  10: 111939.655 ops/s
Iteration  11: 112014.144 ops/s
Iteration  12: 112165.777 ops/s
Iteration  13: 112466.415 ops/s
Iteration  14: 112013.875 ops/s
Iteration  15: 112421.133 ops/s
Iteration  16: 112450.025 ops/s
Iteration  17: 112368.082 ops/s
Iteration  18: 112344.968 ops/s
Iteration  19: 112028.943 ops/s
Iteration  20: 112108.497 ops/s
Iteration  21: 112077.706 ops/s
Iteration  22: 111735.323 ops/s
Iteration  23: 111625.987 ops/s
Iteration  24: 112635.368 ops/s
Iteration  25: 111853.827 ops/s
Iteration  26: 112369.445 ops/s
Iteration  27: 111820.011 ops/s
Iteration  28: 111996.298 ops/s
Iteration  29: 112727.010 ops/s
Iteration  30: 111910.464 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_15._Benchmark.benchmark_Cluster_15":
  112120.627 ±(99.9%) 229.584 ops/s [Average]
  (min, avg, max) = (111442.180, 112120.627, 112760.064), stdev = 343.630
  CI (99.9%): [111891.044, 112350.211] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_15._Benchmark.benchmark_Cluster_15  thrpt   30  112120.627 ± 229.584  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_150._Benchmark.benchmark_Cluster_150$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_150._Benchmark.benchmark_Cluster_150

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 229553.925 ops/s
# Warmup Iteration   2: 301787.552 ops/s
# Warmup Iteration   3: 306125.796 ops/s
# Warmup Iteration   4: 328341.482 ops/s
# Warmup Iteration   5: 328511.704 ops/s
# Warmup Iteration   6: 325882.910 ops/s
# Warmup Iteration   7: 326197.201 ops/s
# Warmup Iteration   8: 327202.848 ops/s
# Warmup Iteration   9: 327966.812 ops/s
# Warmup Iteration  10: 326972.547 ops/s
# Warmup Iteration  11: 325791.442 ops/s
# Warmup Iteration  12: 324869.481 ops/s
# Warmup Iteration  13: 324189.076 ops/s
# Warmup Iteration  14: 324567.252 ops/s
# Warmup Iteration  15: 324002.604 ops/s
# Warmup Iteration  16: 325196.899 ops/s
# Warmup Iteration  17: 336585.341 ops/s
# Warmup Iteration  18: 339705.250 ops/s
# Warmup Iteration  19: 339293.129 ops/s
# Warmup Iteration  20: 338567.961 ops/s
# Warmup Iteration  21: 339336.102 ops/s
# Warmup Iteration  22: 340813.553 ops/s
# Warmup Iteration  23: 335716.903 ops/s
# Warmup Iteration  24: 340156.388 ops/s
# Warmup Iteration  25: 338441.438 ops/s
# Warmup Iteration  26: 340104.903 ops/s
# Warmup Iteration  27: 340710.378 ops/s
# Warmup Iteration  28: 337425.394 ops/s
# Warmup Iteration  29: 338045.673 ops/s
# Warmup Iteration  30: 339003.674 ops/s
Iteration   1: 338039.246 ops/s
Iteration   2: 336801.066 ops/s
Iteration   3: 339707.334 ops/s
Iteration   4: 338946.166 ops/s
Iteration   5: 336320.591 ops/s
Iteration   6: 337953.279 ops/s
Iteration   7: 336792.728 ops/s
Iteration   8: 338419.214 ops/s
Iteration   9: 339293.430 ops/s
Iteration  10: 338018.888 ops/s
Iteration  11: 337995.524 ops/s
Iteration  12: 338204.962 ops/s
Iteration  13: 338747.465 ops/s
Iteration  14: 338502.408 ops/s
Iteration  15: 338875.670 ops/s
Iteration  16: 337993.051 ops/s
Iteration  17: 338760.356 ops/s
Iteration  18: 339912.504 ops/s
Iteration  19: 340645.430 ops/s
Iteration  20: 339490.885 ops/s
Iteration  21: 337105.542 ops/s
Iteration  22: 339144.953 ops/s
Iteration  23: 338369.117 ops/s
Iteration  24: 338011.373 ops/s
Iteration  25: 338229.983 ops/s
Iteration  26: 340193.236 ops/s
Iteration  27: 337536.598 ops/s
Iteration  28: 337699.444 ops/s
Iteration  29: 340145.704 ops/s
Iteration  30: 339925.738 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_150._Benchmark.benchmark_Cluster_150":
  338526.063 ±(99.9%) 722.153 ops/s [Average]
  (min, avg, max) = (336320.591, 338526.063, 340645.430), stdev = 1080.885
  CI (99.9%): [337803.910, 339248.216] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_150._Benchmark.benchmark_Cluster_150  thrpt   30  338526.063 ± 722.153  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_151._Benchmark.benchmark_Cluster_151$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_151._Benchmark.benchmark_Cluster_151

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 33446.498 ops/s
# Warmup Iteration   2: 124856.775 ops/s
# Warmup Iteration   3: 153556.126 ops/s
# Warmup Iteration   4: 161862.025 ops/s
# Warmup Iteration   5: 175956.490 ops/s
# Warmup Iteration   6: 175823.580 ops/s
# Warmup Iteration   7: 176470.019 ops/s
# Warmup Iteration   8: 174836.966 ops/s
# Warmup Iteration   9: 175137.464 ops/s
# Warmup Iteration  10: 175357.059 ops/s
# Warmup Iteration  11: 174917.052 ops/s
# Warmup Iteration  12: 175038.104 ops/s
# Warmup Iteration  13: 173781.759 ops/s
# Warmup Iteration  14: 173768.789 ops/s
# Warmup Iteration  15: 173981.886 ops/s
# Warmup Iteration  16: 174050.786 ops/s
# Warmup Iteration  17: 176268.007 ops/s
# Warmup Iteration  18: 176514.040 ops/s
# Warmup Iteration  19: 174883.358 ops/s
# Warmup Iteration  20: 176320.987 ops/s
# Warmup Iteration  21: 175373.559 ops/s
# Warmup Iteration  22: 176228.397 ops/s
# Warmup Iteration  23: 176966.011 ops/s
# Warmup Iteration  24: 175000.623 ops/s
# Warmup Iteration  25: 175830.430 ops/s
# Warmup Iteration  26: 175313.434 ops/s
# Warmup Iteration  27: 176070.064 ops/s
# Warmup Iteration  28: 176424.415 ops/s
# Warmup Iteration  29: 176115.298 ops/s
# Warmup Iteration  30: 175672.879 ops/s
Iteration   1: 175249.625 ops/s
Iteration   2: 176053.270 ops/s
Iteration   3: 175505.379 ops/s
Iteration   4: 175529.809 ops/s
Iteration   5: 176077.517 ops/s
Iteration   6: 175399.741 ops/s
Iteration   7: 175874.988 ops/s
Iteration   8: 175688.465 ops/s
Iteration   9: 175444.963 ops/s
Iteration  10: 176574.378 ops/s
Iteration  11: 175675.805 ops/s
Iteration  12: 175304.283 ops/s
Iteration  13: 177131.310 ops/s
Iteration  14: 175888.937 ops/s
Iteration  15: 175211.000 ops/s
Iteration  16: 177528.038 ops/s
Iteration  17: 175288.890 ops/s
Iteration  18: 174928.804 ops/s
Iteration  19: 177547.966 ops/s
Iteration  20: 176917.394 ops/s
Iteration  21: 176170.192 ops/s
Iteration  22: 176208.570 ops/s
Iteration  23: 175301.722 ops/s
Iteration  24: 176140.325 ops/s
Iteration  25: 174998.899 ops/s
Iteration  26: 175976.995 ops/s
Iteration  27: 176343.126 ops/s
Iteration  28: 175217.218 ops/s
Iteration  29: 175767.674 ops/s
Iteration  30: 175717.124 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_151._Benchmark.benchmark_Cluster_151":
  175888.747 ±(99.9%) 463.446 ops/s [Average]
  (min, avg, max) = (174928.804, 175888.747, 177547.966), stdev = 693.664
  CI (99.9%): [175425.301, 176352.193] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_151._Benchmark.benchmark_Cluster_151  thrpt   30  175888.747 ± 463.446  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_152._Benchmark.benchmark_Cluster_152$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_152._Benchmark.benchmark_Cluster_152

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 91148.852 ops/s
# Warmup Iteration   2: 133516.458 ops/s
# Warmup Iteration   3: 128419.142 ops/s
# Warmup Iteration   4: 143345.605 ops/s
# Warmup Iteration   5: 145871.198 ops/s
# Warmup Iteration   6: 145275.326 ops/s
# Warmup Iteration   7: 145990.974 ops/s
# Warmup Iteration   8: 144678.840 ops/s
# Warmup Iteration   9: 145080.654 ops/s
# Warmup Iteration  10: 145536.425 ops/s
# Warmup Iteration  11: 145137.227 ops/s
# Warmup Iteration  12: 141559.611 ops/s
# Warmup Iteration  13: 144502.737 ops/s
# Warmup Iteration  14: 144675.022 ops/s
# Warmup Iteration  15: 144648.279 ops/s
# Warmup Iteration  16: 143798.310 ops/s
# Warmup Iteration  17: 150897.968 ops/s
# Warmup Iteration  18: 151763.520 ops/s
# Warmup Iteration  19: 151716.123 ops/s
# Warmup Iteration  20: 150894.735 ops/s
# Warmup Iteration  21: 151309.343 ops/s
# Warmup Iteration  22: 150776.714 ops/s
# Warmup Iteration  23: 150712.387 ops/s
# Warmup Iteration  24: 151579.933 ops/s
# Warmup Iteration  25: 150649.007 ops/s
# Warmup Iteration  26: 150871.460 ops/s
# Warmup Iteration  27: 150010.805 ops/s
# Warmup Iteration  28: 150145.891 ops/s
# Warmup Iteration  29: 150293.683 ops/s
# Warmup Iteration  30: 151161.749 ops/s
Iteration   1: 151174.968 ops/s
Iteration   2: 150955.672 ops/s
Iteration   3: 150861.453 ops/s
Iteration   4: 150804.424 ops/s
Iteration   5: 150395.742 ops/s
Iteration   6: 150324.423 ops/s
Iteration   7: 151361.398 ops/s
Iteration   8: 150767.839 ops/s
Iteration   9: 150873.081 ops/s
Iteration  10: 150776.123 ops/s
Iteration  11: 150597.813 ops/s
Iteration  12: 151749.789 ops/s
Iteration  13: 151309.939 ops/s
Iteration  14: 148894.119 ops/s
Iteration  15: 151076.773 ops/s
Iteration  16: 150869.107 ops/s
Iteration  17: 150910.992 ops/s
Iteration  18: 151303.605 ops/s
Iteration  19: 150155.116 ops/s
Iteration  20: 150882.662 ops/s
Iteration  21: 151227.074 ops/s
Iteration  22: 152300.163 ops/s
Iteration  23: 151465.533 ops/s
Iteration  24: 151341.544 ops/s
Iteration  25: 150939.708 ops/s
Iteration  26: 150532.924 ops/s
Iteration  27: 151142.491 ops/s
Iteration  28: 150806.945 ops/s
Iteration  29: 150817.868 ops/s
Iteration  30: 151309.598 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_152._Benchmark.benchmark_Cluster_152":
  150930.963 ±(99.9%) 384.573 ops/s [Average]
  (min, avg, max) = (148894.119, 150930.963, 152300.163), stdev = 575.611
  CI (99.9%): [150546.390, 151315.536] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_152._Benchmark.benchmark_Cluster_152  thrpt   30  150930.963 ± 384.573  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_153._Benchmark.benchmark_Cluster_153$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_153._Benchmark.benchmark_Cluster_153

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 84913.176 ops/s
# Warmup Iteration   2: 122892.214 ops/s
# Warmup Iteration   3: 121985.337 ops/s
# Warmup Iteration   4: 137092.166 ops/s
# Warmup Iteration   5: 138774.786 ops/s
# Warmup Iteration   6: 138046.782 ops/s
# Warmup Iteration   7: 138725.653 ops/s
# Warmup Iteration   8: 138489.371 ops/s
# Warmup Iteration   9: 137624.523 ops/s
# Warmup Iteration  10: 138324.911 ops/s
# Warmup Iteration  11: 137822.344 ops/s
# Warmup Iteration  12: 137805.362 ops/s
# Warmup Iteration  13: 137838.491 ops/s
# Warmup Iteration  14: 137492.277 ops/s
# Warmup Iteration  15: 137886.597 ops/s
# Warmup Iteration  16: 137803.704 ops/s
# Warmup Iteration  17: 142968.670 ops/s
# Warmup Iteration  18: 143160.443 ops/s
# Warmup Iteration  19: 143286.293 ops/s
# Warmup Iteration  20: 144208.859 ops/s
# Warmup Iteration  21: 143915.346 ops/s
# Warmup Iteration  22: 143375.375 ops/s
# Warmup Iteration  23: 142785.644 ops/s
# Warmup Iteration  24: 142697.292 ops/s
# Warmup Iteration  25: 143281.463 ops/s
# Warmup Iteration  26: 143893.813 ops/s
# Warmup Iteration  27: 142269.392 ops/s
# Warmup Iteration  28: 143701.939 ops/s
# Warmup Iteration  29: 143651.020 ops/s
# Warmup Iteration  30: 142181.598 ops/s
Iteration   1: 143474.722 ops/s
Iteration   2: 143183.954 ops/s
Iteration   3: 143097.263 ops/s
Iteration   4: 143238.862 ops/s
Iteration   5: 143600.185 ops/s
Iteration   6: 142848.326 ops/s
Iteration   7: 143301.160 ops/s
Iteration   8: 143300.182 ops/s
Iteration   9: 143354.727 ops/s
Iteration  10: 143632.075 ops/s
Iteration  11: 143687.134 ops/s
Iteration  12: 143046.666 ops/s
Iteration  13: 142944.335 ops/s
Iteration  14: 142607.128 ops/s
Iteration  15: 143383.301 ops/s
Iteration  16: 144028.341 ops/s
Iteration  17: 143195.085 ops/s
Iteration  18: 142703.240 ops/s
Iteration  19: 142806.793 ops/s
Iteration  20: 141920.673 ops/s
Iteration  21: 142858.947 ops/s
Iteration  22: 143003.959 ops/s
Iteration  23: 141668.286 ops/s
Iteration  24: 143094.358 ops/s
Iteration  25: 142491.935 ops/s
Iteration  26: 142799.051 ops/s
Iteration  27: 143743.043 ops/s
Iteration  28: 143060.665 ops/s
Iteration  29: 143448.229 ops/s
Iteration  30: 142617.258 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_153._Benchmark.benchmark_Cluster_153":
  143071.329 ±(99.9%) 338.201 ops/s [Average]
  (min, avg, max) = (141668.286, 143071.329, 144028.341), stdev = 506.204
  CI (99.9%): [142733.128, 143409.531] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_153._Benchmark.benchmark_Cluster_153  thrpt   30  143071.329 ± 338.201  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_154._Benchmark.benchmark_Cluster_154$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_154._Benchmark.benchmark_Cluster_154

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 25972.076 ops/s
# Warmup Iteration   2: 65401.539 ops/s
# Warmup Iteration   3: 78794.706 ops/s
# Warmup Iteration   4: 92861.934 ops/s
# Warmup Iteration   5: 92324.302 ops/s
# Warmup Iteration   6: 92970.534 ops/s
# Warmup Iteration   7: 92403.757 ops/s
# Warmup Iteration   8: 92794.490 ops/s
# Warmup Iteration   9: 92396.038 ops/s
# Warmup Iteration  10: 92048.602 ops/s
# Warmup Iteration  11: 92503.110 ops/s
# Warmup Iteration  12: 92160.650 ops/s
# Warmup Iteration  13: 92508.714 ops/s
# Warmup Iteration  14: 92055.498 ops/s
# Warmup Iteration  15: 91835.937 ops/s
# Warmup Iteration  16: 92141.194 ops/s
# Warmup Iteration  17: 92160.865 ops/s
# Warmup Iteration  18: 92004.816 ops/s
# Warmup Iteration  19: 92404.866 ops/s
# Warmup Iteration  20: 92273.926 ops/s
# Warmup Iteration  21: 91799.366 ops/s
# Warmup Iteration  22: 92066.658 ops/s
# Warmup Iteration  23: 92045.765 ops/s
# Warmup Iteration  24: 92403.965 ops/s
# Warmup Iteration  25: 92558.273 ops/s
# Warmup Iteration  26: 91668.480 ops/s
# Warmup Iteration  27: 92171.543 ops/s
# Warmup Iteration  28: 91863.138 ops/s
# Warmup Iteration  29: 92363.808 ops/s
# Warmup Iteration  30: 92488.675 ops/s
Iteration   1: 92384.868 ops/s
Iteration   2: 92117.174 ops/s
Iteration   3: 92508.942 ops/s
Iteration   4: 92185.074 ops/s
Iteration   5: 92534.723 ops/s
Iteration   6: 92229.319 ops/s
Iteration   7: 92159.928 ops/s
Iteration   8: 92349.879 ops/s
Iteration   9: 92318.894 ops/s
Iteration  10: 91942.922 ops/s
Iteration  11: 92377.230 ops/s
Iteration  12: 92068.025 ops/s
Iteration  13: 92037.537 ops/s
Iteration  14: 92314.225 ops/s
Iteration  15: 92627.860 ops/s
Iteration  16: 91175.821 ops/s
Iteration  17: 92168.036 ops/s
Iteration  18: 92412.203 ops/s
Iteration  19: 92419.662 ops/s
Iteration  20: 92060.999 ops/s
Iteration  21: 92360.021 ops/s
Iteration  22: 92703.190 ops/s
Iteration  23: 92392.126 ops/s
Iteration  24: 91980.354 ops/s
Iteration  25: 92730.992 ops/s
Iteration  26: 91987.924 ops/s
Iteration  27: 92232.278 ops/s
Iteration  28: 92477.188 ops/s
Iteration  29: 92140.385 ops/s
Iteration  30: 91949.636 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_154._Benchmark.benchmark_Cluster_154":
  92244.914 ±(99.9%) 198.593 ops/s [Average]
  (min, avg, max) = (91175.821, 92244.914, 92730.992), stdev = 297.245
  CI (99.9%): [92046.321, 92443.507] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_154._Benchmark.benchmark_Cluster_154  thrpt   30  92244.914 ± 198.593  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_155._Benchmark.benchmark_Cluster_155$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_155._Benchmark.benchmark_Cluster_155

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 30674.095 ops/s
# Warmup Iteration   2: 81717.516 ops/s
# Warmup Iteration   3: 102605.671 ops/s
# Warmup Iteration   4: 129090.621 ops/s
# Warmup Iteration   5: 130051.802 ops/s
# Warmup Iteration   6: 130157.611 ops/s
# Warmup Iteration   7: 130552.282 ops/s
# Warmup Iteration   8: 129401.375 ops/s
# Warmup Iteration   9: 130007.448 ops/s
# Warmup Iteration  10: 130016.606 ops/s
# Warmup Iteration  11: 129433.411 ops/s
# Warmup Iteration  12: 129621.124 ops/s
# Warmup Iteration  13: 128984.214 ops/s
# Warmup Iteration  14: 129081.322 ops/s
# Warmup Iteration  15: 129070.447 ops/s
# Warmup Iteration  16: 129584.765 ops/s
# Warmup Iteration  17: 131585.473 ops/s
# Warmup Iteration  18: 130219.633 ops/s
# Warmup Iteration  19: 131146.032 ops/s
# Warmup Iteration  20: 130598.090 ops/s
# Warmup Iteration  21: 130808.019 ops/s
# Warmup Iteration  22: 130816.247 ops/s
# Warmup Iteration  23: 130745.329 ops/s
# Warmup Iteration  24: 130469.353 ops/s
# Warmup Iteration  25: 130223.677 ops/s
# Warmup Iteration  26: 131221.122 ops/s
# Warmup Iteration  27: 130098.886 ops/s
# Warmup Iteration  28: 131122.321 ops/s
# Warmup Iteration  29: 131458.753 ops/s
# Warmup Iteration  30: 130335.887 ops/s
Iteration   1: 130594.501 ops/s
Iteration   2: 130438.094 ops/s
Iteration   3: 130814.300 ops/s
Iteration   4: 131327.482 ops/s
Iteration   5: 131474.964 ops/s
Iteration   6: 130283.272 ops/s
Iteration   7: 130681.818 ops/s
Iteration   8: 130652.816 ops/s
Iteration   9: 130628.340 ops/s
Iteration  10: 130660.730 ops/s
Iteration  11: 130149.063 ops/s
Iteration  12: 130689.639 ops/s
Iteration  13: 130997.675 ops/s
Iteration  14: 131130.290 ops/s
Iteration  15: 131442.898 ops/s
Iteration  16: 130894.817 ops/s
Iteration  17: 130851.285 ops/s
Iteration  18: 131343.046 ops/s
Iteration  19: 130020.553 ops/s
Iteration  20: 130920.723 ops/s
Iteration  21: 130920.665 ops/s
Iteration  22: 130441.172 ops/s
Iteration  23: 130305.037 ops/s
Iteration  24: 130885.126 ops/s
Iteration  25: 130984.282 ops/s
Iteration  26: 130215.527 ops/s
Iteration  27: 130580.045 ops/s
Iteration  28: 131480.628 ops/s
Iteration  29: 130541.235 ops/s
Iteration  30: 130428.830 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_155._Benchmark.benchmark_Cluster_155":
  130759.295 ±(99.9%) 266.741 ops/s [Average]
  (min, avg, max) = (130020.553, 130759.295, 131480.628), stdev = 399.246
  CI (99.9%): [130492.554, 131026.036] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_155._Benchmark.benchmark_Cluster_155  thrpt   30  130759.295 ± 266.741  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_156._Benchmark.benchmark_Cluster_156$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_156._Benchmark.benchmark_Cluster_156

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 21827.868 ops/s
# Warmup Iteration   2: 46356.799 ops/s
# Warmup Iteration   3: 85762.196 ops/s
# Warmup Iteration   4: 94933.141 ops/s
# Warmup Iteration   5: 91298.878 ops/s
# Warmup Iteration   6: 96595.808 ops/s
# Warmup Iteration   7: 94286.815 ops/s
# Warmup Iteration   8: 93368.195 ops/s
# Warmup Iteration   9: 96218.964 ops/s
# Warmup Iteration  10: 93470.821 ops/s
# Warmup Iteration  11: 96245.227 ops/s
# Warmup Iteration  12: 94274.411 ops/s
# Warmup Iteration  13: 95526.815 ops/s
# Warmup Iteration  14: 93555.520 ops/s
# Warmup Iteration  15: 94969.789 ops/s
# Warmup Iteration  16: 93392.425 ops/s
# Warmup Iteration  17: 97474.047 ops/s
# Warmup Iteration  18: 95347.795 ops/s
# Warmup Iteration  19: 96033.437 ops/s
# Warmup Iteration  20: 96682.825 ops/s
# Warmup Iteration  21: 94389.556 ops/s
# Warmup Iteration  22: 93360.064 ops/s
# Warmup Iteration  23: 94792.536 ops/s
# Warmup Iteration  24: 95017.118 ops/s
# Warmup Iteration  25: 93848.865 ops/s
# Warmup Iteration  26: 97574.230 ops/s
# Warmup Iteration  27: 93393.323 ops/s
# Warmup Iteration  28: 88687.499 ops/s
# Warmup Iteration  29: 95278.358 ops/s
# Warmup Iteration  30: 94229.528 ops/s
Iteration   1: 97786.840 ops/s
Iteration   2: 91809.057 ops/s
Iteration   3: 95967.474 ops/s
Iteration   4: 96870.620 ops/s
Iteration   5: 97489.772 ops/s
Iteration   6: 94988.455 ops/s
Iteration   7: 95841.803 ops/s
Iteration   8: 98147.456 ops/s
Iteration   9: 96677.994 ops/s
Iteration  10: 97898.283 ops/s
Iteration  11: 97637.811 ops/s
Iteration  12: 96761.400 ops/s
Iteration  13: 90989.297 ops/s
Iteration  14: 91611.576 ops/s
Iteration  15: 96478.388 ops/s
Iteration  16: 96604.632 ops/s
Iteration  17: 96235.109 ops/s
Iteration  18: 96057.872 ops/s
Iteration  19: 95692.481 ops/s
Iteration  20: 94639.271 ops/s
Iteration  21: 96848.299 ops/s
Iteration  22: 96455.450 ops/s
Iteration  23: 98012.850 ops/s
Iteration  24: 96127.758 ops/s
Iteration  25: 95709.564 ops/s
Iteration  26: 96460.693 ops/s
Iteration  27: 95442.254 ops/s
Iteration  28: 95494.165 ops/s
Iteration  29: 97428.762 ops/s
Iteration  30: 98115.593 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_156._Benchmark.benchmark_Cluster_156":
  96076.033 ±(99.9%) 1214.873 ops/s [Average]
  (min, avg, max) = (90989.297, 96076.033, 98147.456), stdev = 1818.366
  CI (99.9%): [94861.159, 97290.906] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_156._Benchmark.benchmark_Cluster_156  thrpt   30  96076.033 ± 1214.873  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_157._Benchmark.benchmark_Cluster_157$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_157._Benchmark.benchmark_Cluster_157

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 111521.072 ops/s
# Warmup Iteration   2: 149854.751 ops/s
# Warmup Iteration   3: 148467.013 ops/s
# Warmup Iteration   4: 162693.626 ops/s
# Warmup Iteration   5: 163444.209 ops/s
# Warmup Iteration   6: 162992.428 ops/s
# Warmup Iteration   7: 163708.932 ops/s
# Warmup Iteration   8: 164030.610 ops/s
# Warmup Iteration   9: 163672.316 ops/s
# Warmup Iteration  10: 163964.136 ops/s
# Warmup Iteration  11: 163322.909 ops/s
# Warmup Iteration  12: 164024.972 ops/s
# Warmup Iteration  13: 163705.508 ops/s
# Warmup Iteration  14: 163693.755 ops/s
# Warmup Iteration  15: 163877.296 ops/s
# Warmup Iteration  16: 163078.596 ops/s
# Warmup Iteration  17: 168396.253 ops/s
# Warmup Iteration  18: 167871.428 ops/s
# Warmup Iteration  19: 168042.764 ops/s
# Warmup Iteration  20: 166961.643 ops/s
# Warmup Iteration  21: 168449.791 ops/s
# Warmup Iteration  22: 167914.766 ops/s
# Warmup Iteration  23: 167945.410 ops/s
# Warmup Iteration  24: 167724.144 ops/s
# Warmup Iteration  25: 167758.231 ops/s
# Warmup Iteration  26: 168347.138 ops/s
# Warmup Iteration  27: 169218.410 ops/s
# Warmup Iteration  28: 167780.536 ops/s
# Warmup Iteration  29: 168902.592 ops/s
# Warmup Iteration  30: 168362.786 ops/s
Iteration   1: 168512.398 ops/s
Iteration   2: 168122.365 ops/s
Iteration   3: 168281.310 ops/s
Iteration   4: 167990.254 ops/s
Iteration   5: 167913.300 ops/s
Iteration   6: 168895.551 ops/s
Iteration   7: 168044.926 ops/s
Iteration   8: 168582.494 ops/s
Iteration   9: 168610.698 ops/s
Iteration  10: 168548.946 ops/s
Iteration  11: 168559.120 ops/s
Iteration  12: 168019.788 ops/s
Iteration  13: 168144.881 ops/s
Iteration  14: 168794.439 ops/s
Iteration  15: 168268.748 ops/s
Iteration  16: 168903.268 ops/s
Iteration  17: 168668.823 ops/s
Iteration  18: 169201.587 ops/s
Iteration  19: 168579.966 ops/s
Iteration  20: 168797.835 ops/s
Iteration  21: 168879.693 ops/s
Iteration  22: 167891.948 ops/s
Iteration  23: 168950.617 ops/s
Iteration  24: 167901.230 ops/s
Iteration  25: 169470.881 ops/s
Iteration  26: 169336.242 ops/s
Iteration  27: 169162.034 ops/s
Iteration  28: 169413.018 ops/s
Iteration  29: 169065.413 ops/s
Iteration  30: 167996.628 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_157._Benchmark.benchmark_Cluster_157":
  168583.613 ±(99.9%) 323.787 ops/s [Average]
  (min, avg, max) = (167891.948, 168583.613, 169470.881), stdev = 484.629
  CI (99.9%): [168259.826, 168907.400] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_157._Benchmark.benchmark_Cluster_157  thrpt   30  168583.613 ± 323.787  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_158._Benchmark.benchmark_Cluster_158$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_158._Benchmark.benchmark_Cluster_158

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 55662.336 ops/s
# Warmup Iteration   2: 108569.306 ops/s
# Warmup Iteration   3: 123685.279 ops/s
# Warmup Iteration   4: 127226.125 ops/s
# Warmup Iteration   5: 128021.545 ops/s
# Warmup Iteration   6: 128412.049 ops/s
# Warmup Iteration   7: 127937.055 ops/s
# Warmup Iteration   8: 127506.546 ops/s
# Warmup Iteration   9: 128142.546 ops/s
# Warmup Iteration  10: 128139.533 ops/s
# Warmup Iteration  11: 128106.398 ops/s
# Warmup Iteration  12: 127439.837 ops/s
# Warmup Iteration  13: 127943.967 ops/s
# Warmup Iteration  14: 127474.487 ops/s
# Warmup Iteration  15: 127972.925 ops/s
# Warmup Iteration  16: 127560.997 ops/s
# Warmup Iteration  17: 131508.760 ops/s
# Warmup Iteration  18: 131125.587 ops/s
# Warmup Iteration  19: 131569.352 ops/s
# Warmup Iteration  20: 131953.414 ops/s
# Warmup Iteration  21: 131090.501 ops/s
# Warmup Iteration  22: 131595.903 ops/s
# Warmup Iteration  23: 131794.632 ops/s
# Warmup Iteration  24: 131817.092 ops/s
# Warmup Iteration  25: 131301.305 ops/s
# Warmup Iteration  26: 131924.971 ops/s
# Warmup Iteration  27: 131950.713 ops/s
# Warmup Iteration  28: 131894.509 ops/s
# Warmup Iteration  29: 131532.663 ops/s
# Warmup Iteration  30: 131423.688 ops/s
Iteration   1: 131079.984 ops/s
Iteration   2: 132430.715 ops/s
Iteration   3: 131242.337 ops/s
Iteration   4: 132640.456 ops/s
Iteration   5: 131908.059 ops/s
Iteration   6: 132132.347 ops/s
Iteration   7: 131207.803 ops/s
Iteration   8: 132452.518 ops/s
Iteration   9: 130567.928 ops/s
Iteration  10: 131691.905 ops/s
Iteration  11: 131574.963 ops/s
Iteration  12: 131835.332 ops/s
Iteration  13: 132058.075 ops/s
Iteration  14: 132061.649 ops/s
Iteration  15: 131450.266 ops/s
Iteration  16: 131398.403 ops/s
Iteration  17: 132186.576 ops/s
Iteration  18: 131334.240 ops/s
Iteration  19: 131388.358 ops/s
Iteration  20: 131636.194 ops/s
Iteration  21: 132191.389 ops/s
Iteration  22: 131775.424 ops/s
Iteration  23: 131711.917 ops/s
Iteration  24: 131950.414 ops/s
Iteration  25: 132054.994 ops/s
Iteration  26: 131147.245 ops/s
Iteration  27: 131113.641 ops/s
Iteration  28: 131331.749 ops/s
Iteration  29: 131796.122 ops/s
Iteration  30: 132206.874 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_158._Benchmark.benchmark_Cluster_158":
  131718.596 ±(99.9%) 321.793 ops/s [Average]
  (min, avg, max) = (130567.928, 131718.596, 132640.456), stdev = 481.645
  CI (99.9%): [131396.803, 132040.389] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_158._Benchmark.benchmark_Cluster_158  thrpt   30  131718.596 ± 321.793  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_159._Benchmark.benchmark_Cluster_159$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_159._Benchmark.benchmark_Cluster_159

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 25562.945 ops/s
# Warmup Iteration   2: 25808.753 ops/s
# Warmup Iteration   3: 21467.958 ops/s
# Warmup Iteration   4: 23249.040 ops/s
# Warmup Iteration   5: 24584.842 ops/s
# Warmup Iteration   6: 23218.650 ops/s
# Warmup Iteration   7: 23541.373 ops/s
# Warmup Iteration   8: 23015.995 ops/s
# Warmup Iteration   9: 23568.852 ops/s
# Warmup Iteration  10: 23471.490 ops/s
# Warmup Iteration  11: 23205.195 ops/s
# Warmup Iteration  12: 23517.897 ops/s
# Warmup Iteration  13: 23843.051 ops/s
# Warmup Iteration  14: 23330.488 ops/s
# Warmup Iteration  15: 23244.781 ops/s
# Warmup Iteration  16: 22814.083 ops/s
# Warmup Iteration  17: 22270.901 ops/s
# Warmup Iteration  18: 23437.918 ops/s
# Warmup Iteration  19: 23446.025 ops/s
# Warmup Iteration  20: 22606.896 ops/s
# Warmup Iteration  21: 22650.747 ops/s
# Warmup Iteration  22: 23042.260 ops/s
# Warmup Iteration  23: 22906.642 ops/s
# Warmup Iteration  24: 23155.913 ops/s
# Warmup Iteration  25: 23223.208 ops/s
# Warmup Iteration  26: 24865.097 ops/s
# Warmup Iteration  27: 23078.941 ops/s
# Warmup Iteration  28: 22903.608 ops/s
# Warmup Iteration  29: 22368.822 ops/s
# Warmup Iteration  30: 22865.318 ops/s
Iteration   1: 22967.762 ops/s
Iteration   2: 23090.487 ops/s
Iteration   3: 23598.199 ops/s
Iteration   4: 22577.054 ops/s
Iteration   5: 23004.678 ops/s
Iteration   6: 22925.696 ops/s
Iteration   7: 23606.245 ops/s
Iteration   8: 22926.556 ops/s
Iteration   9: 22623.048 ops/s
Iteration  10: 23031.504 ops/s
Iteration  11: 22756.790 ops/s
Iteration  12: 23218.796 ops/s
Iteration  13: 22446.282 ops/s
Iteration  14: 22930.203 ops/s
Iteration  15: 22464.053 ops/s
Iteration  16: 23021.101 ops/s
Iteration  17: 23208.517 ops/s
Iteration  18: 23079.774 ops/s
Iteration  19: 23255.571 ops/s
Iteration  20: 23845.493 ops/s
Iteration  21: 23690.247 ops/s
Iteration  22: 23536.124 ops/s
Iteration  23: 23620.339 ops/s
Iteration  24: 22903.389 ops/s
Iteration  25: 22673.007 ops/s
Iteration  26: 22723.662 ops/s
Iteration  27: 22890.132 ops/s
Iteration  28: 23080.004 ops/s
Iteration  29: 23288.671 ops/s
Iteration  30: 22776.072 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_159._Benchmark.benchmark_Cluster_159":
  23058.649 ±(99.9%) 247.938 ops/s [Average]
  (min, avg, max) = (22446.282, 23058.649, 23845.493), stdev = 371.102
  CI (99.9%): [22810.711, 23306.586] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_159._Benchmark.benchmark_Cluster_159  thrpt   30  23058.649 ± 247.938  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_16._Benchmark.benchmark_Cluster_16$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_16._Benchmark.benchmark_Cluster_16

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 28732.470 ops/s
# Warmup Iteration   2: 73539.163 ops/s
# Warmup Iteration   3: 96328.419 ops/s
# Warmup Iteration   4: 120496.598 ops/s
# Warmup Iteration   5: 121341.843 ops/s
# Warmup Iteration   6: 121314.176 ops/s
# Warmup Iteration   7: 120987.478 ops/s
# Warmup Iteration   8: 121130.159 ops/s
# Warmup Iteration   9: 120936.812 ops/s
# Warmup Iteration  10: 119974.882 ops/s
# Warmup Iteration  11: 120899.855 ops/s
# Warmup Iteration  12: 120586.144 ops/s
# Warmup Iteration  13: 120830.710 ops/s
# Warmup Iteration  14: 120132.178 ops/s
# Warmup Iteration  15: 120162.899 ops/s
# Warmup Iteration  16: 121213.753 ops/s
# Warmup Iteration  17: 123339.007 ops/s
# Warmup Iteration  18: 123748.651 ops/s
# Warmup Iteration  19: 123344.092 ops/s
# Warmup Iteration  20: 123681.204 ops/s
# Warmup Iteration  21: 123726.189 ops/s
# Warmup Iteration  22: 123303.393 ops/s
# Warmup Iteration  23: 124018.174 ops/s
# Warmup Iteration  24: 123826.814 ops/s
# Warmup Iteration  25: 123176.709 ops/s
# Warmup Iteration  26: 123883.679 ops/s
# Warmup Iteration  27: 124184.785 ops/s
# Warmup Iteration  28: 124344.400 ops/s
# Warmup Iteration  29: 123983.147 ops/s
# Warmup Iteration  30: 123549.649 ops/s
Iteration   1: 123149.657 ops/s
Iteration   2: 123789.269 ops/s
Iteration   3: 123766.598 ops/s
Iteration   4: 124147.880 ops/s
Iteration   5: 123900.528 ops/s
Iteration   6: 124278.904 ops/s
Iteration   7: 124243.912 ops/s
Iteration   8: 123834.353 ops/s
Iteration   9: 124001.426 ops/s
Iteration  10: 123930.292 ops/s
Iteration  11: 123770.220 ops/s
Iteration  12: 123781.466 ops/s
Iteration  13: 124643.853 ops/s
Iteration  14: 123854.295 ops/s
Iteration  15: 123519.998 ops/s
Iteration  16: 124167.299 ops/s
Iteration  17: 123360.971 ops/s
Iteration  18: 123719.639 ops/s
Iteration  19: 123802.966 ops/s
Iteration  20: 124149.629 ops/s
Iteration  21: 124096.083 ops/s
Iteration  22: 123780.290 ops/s
Iteration  23: 123809.734 ops/s
Iteration  24: 123515.782 ops/s
Iteration  25: 122613.449 ops/s
Iteration  26: 123748.728 ops/s
Iteration  27: 123656.488 ops/s
Iteration  28: 124320.980 ops/s
Iteration  29: 123593.277 ops/s
Iteration  30: 123467.665 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_16._Benchmark.benchmark_Cluster_16":
  123813.854 ±(99.9%) 257.578 ops/s [Average]
  (min, avg, max) = (122613.449, 123813.854, 124643.853), stdev = 385.530
  CI (99.9%): [123556.277, 124071.432] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_16._Benchmark.benchmark_Cluster_16  thrpt   30  123813.854 ± 257.578  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_160._Benchmark.benchmark_Cluster_160$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_160._Benchmark.benchmark_Cluster_160

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10499.866 ops/s
# Warmup Iteration   2: 62654.710 ops/s
# Warmup Iteration   3: 59083.229 ops/s
# Warmup Iteration   4: 103982.546 ops/s
# Warmup Iteration   5: 120122.267 ops/s
# Warmup Iteration   6: 121943.930 ops/s
# Warmup Iteration   7: 121842.877 ops/s
# Warmup Iteration   8: 113953.705 ops/s
# Warmup Iteration   9: 118263.732 ops/s
# Warmup Iteration  10: 118774.680 ops/s
# Warmup Iteration  11: 117861.242 ops/s
# Warmup Iteration  12: 120271.909 ops/s
# Warmup Iteration  13: 119717.899 ops/s
# Warmup Iteration  14: 115548.754 ops/s
# Warmup Iteration  15: 119692.995 ops/s
# Warmup Iteration  16: 119937.049 ops/s
# Warmup Iteration  17: 116549.542 ops/s
# Warmup Iteration  18: 120064.203 ops/s
# Warmup Iteration  19: 120623.252 ops/s
# Warmup Iteration  20: 117891.799 ops/s
# Warmup Iteration  21: 117498.222 ops/s
# Warmup Iteration  22: 121587.159 ops/s
# Warmup Iteration  23: 120900.128 ops/s
# Warmup Iteration  24: 117386.245 ops/s
# Warmup Iteration  25: 115782.871 ops/s
# Warmup Iteration  26: 119617.740 ops/s
# Warmup Iteration  27: 121199.516 ops/s
# Warmup Iteration  28: 116941.979 ops/s
# Warmup Iteration  29: 119476.286 ops/s
# Warmup Iteration  30: 119903.687 ops/s
Iteration   1: 121371.820 ops/s
Iteration   2: 117928.476 ops/s
Iteration   3: 117043.902 ops/s
Iteration   4: 120384.559 ops/s
Iteration   5: 117997.500 ops/s
Iteration   6: 117248.661 ops/s
Iteration   7: 121110.836 ops/s
Iteration   8: 118582.286 ops/s
Iteration   9: 118972.384 ops/s
Iteration  10: 117087.087 ops/s
Iteration  11: 121889.663 ops/s
Iteration  12: 119562.204 ops/s
Iteration  13: 121536.348 ops/s
Iteration  14: 116810.940 ops/s
Iteration  15: 120962.925 ops/s
Iteration  16: 122112.725 ops/s
Iteration  17: 120714.873 ops/s
Iteration  18: 121049.701 ops/s
Iteration  19: 119220.242 ops/s
Iteration  20: 120477.527 ops/s
Iteration  21: 115976.635 ops/s
Iteration  22: 120666.890 ops/s
Iteration  23: 119617.779 ops/s
Iteration  24: 118217.432 ops/s
Iteration  25: 121890.411 ops/s
Iteration  26: 118731.348 ops/s
Iteration  27: 118858.449 ops/s
Iteration  28: 119474.046 ops/s
Iteration  29: 120238.161 ops/s
Iteration  30: 119319.822 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_160._Benchmark.benchmark_Cluster_160":
  119501.854 ±(99.9%) 1132.675 ops/s [Average]
  (min, avg, max) = (115976.635, 119501.854, 122112.725), stdev = 1695.335
  CI (99.9%): [118369.179, 120634.530] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_160._Benchmark.benchmark_Cluster_160  thrpt   30  119501.854 ± 1132.675  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_161._Benchmark.benchmark_Cluster_161$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_161._Benchmark.benchmark_Cluster_161

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 65911.630 ops/s
# Warmup Iteration   2: 123094.158 ops/s
# Warmup Iteration   3: 121596.677 ops/s
# Warmup Iteration   4: 130604.851 ops/s
# Warmup Iteration   5: 132606.129 ops/s
# Warmup Iteration   6: 131799.857 ops/s
# Warmup Iteration   7: 131667.895 ops/s
# Warmup Iteration   8: 132272.906 ops/s
# Warmup Iteration   9: 132557.914 ops/s
# Warmup Iteration  10: 132493.530 ops/s
# Warmup Iteration  11: 131432.943 ops/s
# Warmup Iteration  12: 131517.743 ops/s
# Warmup Iteration  13: 130774.319 ops/s
# Warmup Iteration  14: 132015.635 ops/s
# Warmup Iteration  15: 128704.975 ops/s
# Warmup Iteration  16: 131761.303 ops/s
# Warmup Iteration  17: 135389.327 ops/s
# Warmup Iteration  18: 135091.800 ops/s
# Warmup Iteration  19: 134707.282 ops/s
# Warmup Iteration  20: 134716.768 ops/s
# Warmup Iteration  21: 135420.606 ops/s
# Warmup Iteration  22: 135351.197 ops/s
# Warmup Iteration  23: 135628.618 ops/s
# Warmup Iteration  24: 134576.722 ops/s
# Warmup Iteration  25: 134995.772 ops/s
# Warmup Iteration  26: 135816.652 ops/s
# Warmup Iteration  27: 134797.693 ops/s
# Warmup Iteration  28: 134839.994 ops/s
# Warmup Iteration  29: 135689.288 ops/s
# Warmup Iteration  30: 136286.697 ops/s
Iteration   1: 135588.857 ops/s
Iteration   2: 135493.374 ops/s
Iteration   3: 135680.450 ops/s
Iteration   4: 136066.343 ops/s
Iteration   5: 135543.571 ops/s
Iteration   6: 134813.143 ops/s
Iteration   7: 135291.036 ops/s
Iteration   8: 135317.948 ops/s
Iteration   9: 135199.456 ops/s
Iteration  10: 135221.578 ops/s
Iteration  11: 134363.555 ops/s
Iteration  12: 135431.167 ops/s
Iteration  13: 134955.370 ops/s
Iteration  14: 133347.225 ops/s
Iteration  15: 135618.705 ops/s
Iteration  16: 134756.734 ops/s
Iteration  17: 135965.780 ops/s
Iteration  18: 135895.355 ops/s
Iteration  19: 135347.837 ops/s
Iteration  20: 135471.816 ops/s
Iteration  21: 134684.428 ops/s
Iteration  22: 135156.776 ops/s
Iteration  23: 136183.405 ops/s
Iteration  24: 135063.397 ops/s
Iteration  25: 135412.767 ops/s
Iteration  26: 134421.965 ops/s
Iteration  27: 135030.504 ops/s
Iteration  28: 135213.054 ops/s
Iteration  29: 135384.368 ops/s
Iteration  30: 136381.294 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_161._Benchmark.benchmark_Cluster_161":
  135276.709 ±(99.9%) 401.598 ops/s [Average]
  (min, avg, max) = (133347.225, 135276.709, 136381.294), stdev = 601.093
  CI (99.9%): [134875.111, 135678.306] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_161._Benchmark.benchmark_Cluster_161  thrpt   30  135276.709 ± 401.598  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_162._Benchmark.benchmark_Cluster_162$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_162._Benchmark.benchmark_Cluster_162

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 95201.167 ops/s
# Warmup Iteration   2: 152880.726 ops/s
# Warmup Iteration   3: 155380.030 ops/s
# Warmup Iteration   4: 167425.452 ops/s
# Warmup Iteration   5: 168196.942 ops/s
# Warmup Iteration   6: 169462.735 ops/s
# Warmup Iteration   7: 168432.678 ops/s
# Warmup Iteration   8: 168402.474 ops/s
# Warmup Iteration   9: 167939.087 ops/s
# Warmup Iteration  10: 167443.770 ops/s
# Warmup Iteration  11: 167730.187 ops/s
# Warmup Iteration  12: 167090.751 ops/s
# Warmup Iteration  13: 167432.355 ops/s
# Warmup Iteration  14: 167627.469 ops/s
# Warmup Iteration  15: 166403.986 ops/s
# Warmup Iteration  16: 168534.097 ops/s
# Warmup Iteration  17: 175494.130 ops/s
# Warmup Iteration  18: 175324.444 ops/s
# Warmup Iteration  19: 174305.830 ops/s
# Warmup Iteration  20: 176049.959 ops/s
# Warmup Iteration  21: 176591.060 ops/s
# Warmup Iteration  22: 176712.588 ops/s
# Warmup Iteration  23: 174711.642 ops/s
# Warmup Iteration  24: 176583.300 ops/s
# Warmup Iteration  25: 175780.713 ops/s
# Warmup Iteration  26: 175036.725 ops/s
# Warmup Iteration  27: 175836.862 ops/s
# Warmup Iteration  28: 175143.812 ops/s
# Warmup Iteration  29: 175240.312 ops/s
# Warmup Iteration  30: 175647.024 ops/s
Iteration   1: 175346.008 ops/s
Iteration   2: 175792.631 ops/s
Iteration   3: 175597.714 ops/s
Iteration   4: 175766.632 ops/s
Iteration   5: 175839.357 ops/s
Iteration   6: 174752.326 ops/s
Iteration   7: 176605.891 ops/s
Iteration   8: 176876.772 ops/s
Iteration   9: 175833.953 ops/s
Iteration  10: 175624.860 ops/s
Iteration  11: 175722.416 ops/s
Iteration  12: 174699.158 ops/s
Iteration  13: 175498.900 ops/s
Iteration  14: 175338.147 ops/s
Iteration  15: 174987.472 ops/s
Iteration  16: 175946.829 ops/s
Iteration  17: 175689.517 ops/s
Iteration  18: 175576.571 ops/s
Iteration  19: 175177.148 ops/s
Iteration  20: 175739.556 ops/s
Iteration  21: 175954.784 ops/s
Iteration  22: 175569.988 ops/s
Iteration  23: 175558.463 ops/s
Iteration  24: 175558.985 ops/s
Iteration  25: 175586.029 ops/s
Iteration  26: 175588.405 ops/s
Iteration  27: 175995.760 ops/s
Iteration  28: 175795.080 ops/s
Iteration  29: 175152.611 ops/s
Iteration  30: 175515.366 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_162._Benchmark.benchmark_Cluster_162":
  175622.911 ±(99.9%) 296.901 ops/s [Average]
  (min, avg, max) = (174699.158, 175622.911, 176876.772), stdev = 444.387
  CI (99.9%): [175326.010, 175919.812] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_162._Benchmark.benchmark_Cluster_162  thrpt   30  175622.911 ± 296.901  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_163._Benchmark.benchmark_Cluster_163$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_163._Benchmark.benchmark_Cluster_163

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 140108.972 ops/s
# Warmup Iteration   2: 195132.442 ops/s
# Warmup Iteration   3: 193891.190 ops/s
# Warmup Iteration   4: 206508.126 ops/s
# Warmup Iteration   5: 207053.051 ops/s
# Warmup Iteration   6: 206727.000 ops/s
# Warmup Iteration   7: 206484.064 ops/s
# Warmup Iteration   8: 207150.649 ops/s
# Warmup Iteration   9: 206463.839 ops/s
# Warmup Iteration  10: 206798.872 ops/s
# Warmup Iteration  11: 206890.422 ops/s
# Warmup Iteration  12: 206000.126 ops/s
# Warmup Iteration  13: 206557.336 ops/s
# Warmup Iteration  14: 206200.539 ops/s
# Warmup Iteration  15: 205155.880 ops/s
# Warmup Iteration  16: 203587.139 ops/s
# Warmup Iteration  17: 214472.393 ops/s
# Warmup Iteration  18: 215523.686 ops/s
# Warmup Iteration  19: 215061.016 ops/s
# Warmup Iteration  20: 213283.970 ops/s
# Warmup Iteration  21: 213679.159 ops/s
# Warmup Iteration  22: 210043.288 ops/s
# Warmup Iteration  23: 214743.790 ops/s
# Warmup Iteration  24: 214283.671 ops/s
# Warmup Iteration  25: 212961.708 ops/s
# Warmup Iteration  26: 214801.855 ops/s
# Warmup Iteration  27: 213312.505 ops/s
# Warmup Iteration  28: 214551.658 ops/s
# Warmup Iteration  29: 213932.142 ops/s
# Warmup Iteration  30: 213895.241 ops/s
Iteration   1: 214781.518 ops/s
Iteration   2: 215314.143 ops/s
Iteration   3: 213850.669 ops/s
Iteration   4: 213943.246 ops/s
Iteration   5: 203825.520 ops/s
Iteration   6: 213929.871 ops/s
Iteration   7: 214413.396 ops/s
Iteration   8: 216043.513 ops/s
Iteration   9: 214998.494 ops/s
Iteration  10: 212700.618 ops/s
Iteration  11: 214865.478 ops/s
Iteration  12: 214019.223 ops/s
Iteration  13: 214865.834 ops/s
Iteration  14: 214687.358 ops/s
Iteration  15: 214648.107 ops/s
Iteration  16: 215825.149 ops/s
Iteration  17: 215190.294 ops/s
Iteration  18: 213593.016 ops/s
Iteration  19: 214041.434 ops/s
Iteration  20: 215152.332 ops/s
Iteration  21: 213536.995 ops/s
Iteration  22: 215844.124 ops/s
Iteration  23: 214716.872 ops/s
Iteration  24: 213618.147 ops/s
Iteration  25: 215379.209 ops/s
Iteration  26: 214931.294 ops/s
Iteration  27: 213516.006 ops/s
Iteration  28: 214721.161 ops/s
Iteration  29: 214766.988 ops/s
Iteration  30: 215292.750 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_163._Benchmark.benchmark_Cluster_163":
  214233.759 ±(99.9%) 1414.423 ops/s [Average]
  (min, avg, max) = (203825.520, 214233.759, 216043.513), stdev = 2117.042
  CI (99.9%): [212819.335, 215648.182] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_163._Benchmark.benchmark_Cluster_163  thrpt   30  214233.759 ± 1414.423  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_164._Benchmark.benchmark_Cluster_164$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_164._Benchmark.benchmark_Cluster_164

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 25168.495 ops/s
# Warmup Iteration   2: 82601.518 ops/s
# Warmup Iteration   3: 93847.091 ops/s
# Warmup Iteration   4: 130038.417 ops/s
# Warmup Iteration   5: 145912.802 ops/s
# Warmup Iteration   6: 146116.822 ops/s
# Warmup Iteration   7: 146048.286 ops/s
# Warmup Iteration   8: 146478.135 ops/s
# Warmup Iteration   9: 145605.329 ops/s
# Warmup Iteration  10: 145644.549 ops/s
# Warmup Iteration  11: 145792.977 ops/s
# Warmup Iteration  12: 145037.978 ops/s
# Warmup Iteration  13: 144412.961 ops/s
# Warmup Iteration  14: 145546.781 ops/s
# Warmup Iteration  15: 144505.142 ops/s
# Warmup Iteration  16: 144738.108 ops/s
# Warmup Iteration  17: 145869.091 ops/s
# Warmup Iteration  18: 145267.959 ops/s
# Warmup Iteration  19: 145922.062 ops/s
# Warmup Iteration  20: 144437.217 ops/s
# Warmup Iteration  21: 145584.711 ops/s
# Warmup Iteration  22: 145473.081 ops/s
# Warmup Iteration  23: 144867.546 ops/s
# Warmup Iteration  24: 143946.839 ops/s
# Warmup Iteration  25: 145467.393 ops/s
# Warmup Iteration  26: 145034.433 ops/s
# Warmup Iteration  27: 145098.321 ops/s
# Warmup Iteration  28: 144978.859 ops/s
# Warmup Iteration  29: 145260.337 ops/s
# Warmup Iteration  30: 144817.354 ops/s
Iteration   1: 145830.260 ops/s
Iteration   2: 145422.987 ops/s
Iteration   3: 145851.880 ops/s
Iteration   4: 145072.267 ops/s
Iteration   5: 145266.649 ops/s
Iteration   6: 145788.352 ops/s
Iteration   7: 146074.711 ops/s
Iteration   8: 146334.231 ops/s
Iteration   9: 145186.445 ops/s
Iteration  10: 144869.180 ops/s
Iteration  11: 145933.118 ops/s
Iteration  12: 145640.166 ops/s
Iteration  13: 145808.909 ops/s
Iteration  14: 145488.010 ops/s
Iteration  15: 145553.016 ops/s
Iteration  16: 145000.744 ops/s
Iteration  17: 144784.003 ops/s
Iteration  18: 145328.569 ops/s
Iteration  19: 145797.969 ops/s
Iteration  20: 144573.179 ops/s
Iteration  21: 145961.813 ops/s
Iteration  22: 145201.144 ops/s
Iteration  23: 144687.185 ops/s
Iteration  24: 145112.326 ops/s
Iteration  25: 144676.565 ops/s
Iteration  26: 145988.874 ops/s
Iteration  27: 145235.246 ops/s
Iteration  28: 145872.374 ops/s
Iteration  29: 145532.981 ops/s
Iteration  30: 145601.136 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_164._Benchmark.benchmark_Cluster_164":
  145449.143 ±(99.9%) 311.393 ops/s [Average]
  (min, avg, max) = (144573.179, 145449.143, 146334.231), stdev = 466.078
  CI (99.9%): [145137.750, 145760.535] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_164._Benchmark.benchmark_Cluster_164  thrpt   30  145449.143 ± 311.393  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_165._Benchmark.benchmark_Cluster_165$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_165._Benchmark.benchmark_Cluster_165

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 112592.413 ops/s
# Warmup Iteration   2: 184265.483 ops/s
# Warmup Iteration   3: 199623.369 ops/s
# Warmup Iteration   4: 215850.736 ops/s
# Warmup Iteration   5: 217601.066 ops/s
# Warmup Iteration   6: 217172.887 ops/s
# Warmup Iteration   7: 217701.390 ops/s
# Warmup Iteration   8: 217262.461 ops/s
# Warmup Iteration   9: 217242.173 ops/s
# Warmup Iteration  10: 217240.288 ops/s
# Warmup Iteration  11: 216002.424 ops/s
# Warmup Iteration  12: 216427.549 ops/s
# Warmup Iteration  13: 215876.074 ops/s
# Warmup Iteration  14: 216498.600 ops/s
# Warmup Iteration  15: 216443.731 ops/s
# Warmup Iteration  16: 216882.913 ops/s
# Warmup Iteration  17: 224849.770 ops/s
# Warmup Iteration  18: 225764.855 ops/s
# Warmup Iteration  19: 225190.653 ops/s
# Warmup Iteration  20: 225414.545 ops/s
# Warmup Iteration  21: 226481.677 ops/s
# Warmup Iteration  22: 224653.937 ops/s
# Warmup Iteration  23: 226345.701 ops/s
# Warmup Iteration  24: 224721.811 ops/s
# Warmup Iteration  25: 223153.155 ops/s
# Warmup Iteration  26: 225476.245 ops/s
# Warmup Iteration  27: 224757.620 ops/s
# Warmup Iteration  28: 225483.665 ops/s
# Warmup Iteration  29: 226281.404 ops/s
# Warmup Iteration  30: 225741.135 ops/s
Iteration   1: 225974.225 ops/s
Iteration   2: 226739.297 ops/s
Iteration   3: 225314.396 ops/s
Iteration   4: 225428.320 ops/s
Iteration   5: 224564.325 ops/s
Iteration   6: 225278.218 ops/s
Iteration   7: 226327.397 ops/s
Iteration   8: 225421.511 ops/s
Iteration   9: 224934.369 ops/s
Iteration  10: 224120.963 ops/s
Iteration  11: 224462.211 ops/s
Iteration  12: 225233.870 ops/s
Iteration  13: 226635.412 ops/s
Iteration  14: 225507.931 ops/s
Iteration  15: 225160.659 ops/s
Iteration  16: 227512.705 ops/s
Iteration  17: 226172.553 ops/s
Iteration  18: 225793.431 ops/s
Iteration  19: 225416.787 ops/s
Iteration  20: 223939.721 ops/s
Iteration  21: 225551.143 ops/s
Iteration  22: 224638.738 ops/s
Iteration  23: 224883.608 ops/s
Iteration  24: 224903.462 ops/s
Iteration  25: 225999.435 ops/s
Iteration  26: 225311.294 ops/s
Iteration  27: 226304.814 ops/s
Iteration  28: 225083.873 ops/s
Iteration  29: 225858.124 ops/s
Iteration  30: 225556.715 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_165._Benchmark.benchmark_Cluster_165":
  225467.650 ±(99.9%) 524.998 ops/s [Average]
  (min, avg, max) = (223939.721, 225467.650, 227512.705), stdev = 785.793
  CI (99.9%): [224942.652, 225992.649] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_165._Benchmark.benchmark_Cluster_165  thrpt   30  225467.650 ± 524.998  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_166._Benchmark.benchmark_Cluster_166$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_166._Benchmark.benchmark_Cluster_166

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 113361.932 ops/s
# Warmup Iteration   2: 168562.632 ops/s
# Warmup Iteration   3: 168816.105 ops/s
# Warmup Iteration   4: 182702.246 ops/s
# Warmup Iteration   5: 183268.650 ops/s
# Warmup Iteration   6: 183661.405 ops/s
# Warmup Iteration   7: 183716.635 ops/s
# Warmup Iteration   8: 183408.811 ops/s
# Warmup Iteration   9: 183457.263 ops/s
# Warmup Iteration  10: 182347.605 ops/s
# Warmup Iteration  11: 182782.944 ops/s
# Warmup Iteration  12: 183025.615 ops/s
# Warmup Iteration  13: 182744.300 ops/s
# Warmup Iteration  14: 181497.426 ops/s
# Warmup Iteration  15: 181736.535 ops/s
# Warmup Iteration  16: 182432.249 ops/s
# Warmup Iteration  17: 189312.379 ops/s
# Warmup Iteration  18: 190485.374 ops/s
# Warmup Iteration  19: 189150.863 ops/s
# Warmup Iteration  20: 189823.798 ops/s
# Warmup Iteration  21: 190217.209 ops/s
# Warmup Iteration  22: 189739.204 ops/s
# Warmup Iteration  23: 190311.604 ops/s
# Warmup Iteration  24: 189605.263 ops/s
# Warmup Iteration  25: 189847.892 ops/s
# Warmup Iteration  26: 189966.429 ops/s
# Warmup Iteration  27: 189429.135 ops/s
# Warmup Iteration  28: 188937.068 ops/s
# Warmup Iteration  29: 189727.992 ops/s
# Warmup Iteration  30: 190515.416 ops/s
Iteration   1: 189897.893 ops/s
Iteration   2: 189168.445 ops/s
Iteration   3: 189463.544 ops/s
Iteration   4: 190247.913 ops/s
Iteration   5: 190007.444 ops/s
Iteration   6: 190723.881 ops/s
Iteration   7: 189791.808 ops/s
Iteration   8: 189865.153 ops/s
Iteration   9: 189899.133 ops/s
Iteration  10: 190334.000 ops/s
Iteration  11: 190304.413 ops/s
Iteration  12: 189312.922 ops/s
Iteration  13: 190941.620 ops/s
Iteration  14: 189106.376 ops/s
Iteration  15: 189599.142 ops/s
Iteration  16: 189649.519 ops/s
Iteration  17: 189520.286 ops/s
Iteration  18: 188943.776 ops/s
Iteration  19: 188873.992 ops/s
Iteration  20: 190410.176 ops/s
Iteration  21: 190314.701 ops/s
Iteration  22: 189621.537 ops/s
Iteration  23: 189335.905 ops/s
Iteration  24: 189817.307 ops/s
Iteration  25: 190094.178 ops/s
Iteration  26: 189673.589 ops/s
Iteration  27: 190103.666 ops/s
Iteration  28: 190731.283 ops/s
Iteration  29: 189300.844 ops/s
Iteration  30: 189951.662 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_166._Benchmark.benchmark_Cluster_166":
  189833.537 ±(99.9%) 353.342 ops/s [Average]
  (min, avg, max) = (188873.992, 189833.537, 190941.620), stdev = 528.866
  CI (99.9%): [189480.195, 190186.879] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_166._Benchmark.benchmark_Cluster_166  thrpt   30  189833.537 ± 353.342  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_167._Benchmark.benchmark_Cluster_167$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_167._Benchmark.benchmark_Cluster_167

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 103350.122 ops/s
# Warmup Iteration   2: 149522.855 ops/s
# Warmup Iteration   3: 156080.724 ops/s
# Warmup Iteration   4: 165888.405 ops/s
# Warmup Iteration   5: 171931.916 ops/s
# Warmup Iteration   6: 171161.598 ops/s
# Warmup Iteration   7: 170851.860 ops/s
# Warmup Iteration   8: 171715.343 ops/s
# Warmup Iteration   9: 171233.206 ops/s
# Warmup Iteration  10: 170646.832 ops/s
# Warmup Iteration  11: 170260.862 ops/s
# Warmup Iteration  12: 170818.643 ops/s
# Warmup Iteration  13: 170743.813 ops/s
# Warmup Iteration  14: 170838.422 ops/s
# Warmup Iteration  15: 170671.577 ops/s
# Warmup Iteration  16: 169645.160 ops/s
# Warmup Iteration  17: 177913.280 ops/s
# Warmup Iteration  18: 177448.033 ops/s
# Warmup Iteration  19: 177266.645 ops/s
# Warmup Iteration  20: 178064.232 ops/s
# Warmup Iteration  21: 177675.723 ops/s
# Warmup Iteration  22: 177496.881 ops/s
# Warmup Iteration  23: 176372.510 ops/s
# Warmup Iteration  24: 177690.198 ops/s
# Warmup Iteration  25: 178511.567 ops/s
# Warmup Iteration  26: 176926.053 ops/s
# Warmup Iteration  27: 177018.120 ops/s
# Warmup Iteration  28: 177163.604 ops/s
# Warmup Iteration  29: 177925.427 ops/s
# Warmup Iteration  30: 176971.882 ops/s
Iteration   1: 177990.269 ops/s
Iteration   2: 177436.069 ops/s
Iteration   3: 176972.963 ops/s
Iteration   4: 177017.683 ops/s
Iteration   5: 177215.895 ops/s
Iteration   6: 177681.741 ops/s
Iteration   7: 177605.979 ops/s
Iteration   8: 175174.890 ops/s
Iteration   9: 176628.524 ops/s
Iteration  10: 177829.345 ops/s
Iteration  11: 177616.495 ops/s
Iteration  12: 176269.381 ops/s
Iteration  13: 176910.314 ops/s
Iteration  14: 176787.312 ops/s
Iteration  15: 177919.711 ops/s
Iteration  16: 177552.959 ops/s
Iteration  17: 178107.653 ops/s
Iteration  18: 176450.570 ops/s
Iteration  19: 177306.577 ops/s
Iteration  20: 177831.282 ops/s
Iteration  21: 176630.827 ops/s
Iteration  22: 177521.943 ops/s
Iteration  23: 178003.441 ops/s
Iteration  24: 177629.812 ops/s
Iteration  25: 177229.139 ops/s
Iteration  26: 177165.010 ops/s
Iteration  27: 177920.209 ops/s
Iteration  28: 177614.311 ops/s
Iteration  29: 178372.763 ops/s
Iteration  30: 177041.980 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_167._Benchmark.benchmark_Cluster_167":
  177314.501 ±(99.9%) 441.696 ops/s [Average]
  (min, avg, max) = (175174.890, 177314.501, 178372.763), stdev = 661.109
  CI (99.9%): [176872.806, 177756.197] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_167._Benchmark.benchmark_Cluster_167  thrpt   30  177314.501 ± 441.696  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_168._Benchmark.benchmark_Cluster_168$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_168._Benchmark.benchmark_Cluster_168

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 104365.894 ops/s
# Warmup Iteration   2: 158527.730 ops/s
# Warmup Iteration   3: 182762.526 ops/s
# Warmup Iteration   4: 186411.309 ops/s
# Warmup Iteration   5: 204942.292 ops/s
# Warmup Iteration   6: 205905.421 ops/s
# Warmup Iteration   7: 206726.738 ops/s
# Warmup Iteration   8: 206059.118 ops/s
# Warmup Iteration   9: 205880.863 ops/s
# Warmup Iteration  10: 205981.064 ops/s
# Warmup Iteration  11: 205385.065 ops/s
# Warmup Iteration  12: 205452.155 ops/s
# Warmup Iteration  13: 204442.548 ops/s
# Warmup Iteration  14: 203790.134 ops/s
# Warmup Iteration  15: 205335.875 ops/s
# Warmup Iteration  16: 204334.122 ops/s
# Warmup Iteration  17: 203455.167 ops/s
# Warmup Iteration  18: 202174.937 ops/s
# Warmup Iteration  19: 204209.235 ops/s
# Warmup Iteration  20: 202935.502 ops/s
# Warmup Iteration  21: 203098.382 ops/s
# Warmup Iteration  22: 203408.591 ops/s
# Warmup Iteration  23: 203412.030 ops/s
# Warmup Iteration  24: 203649.310 ops/s
# Warmup Iteration  25: 202752.311 ops/s
# Warmup Iteration  26: 203237.876 ops/s
# Warmup Iteration  27: 204356.488 ops/s
# Warmup Iteration  28: 203345.561 ops/s
# Warmup Iteration  29: 203673.382 ops/s
# Warmup Iteration  30: 204285.819 ops/s
Iteration   1: 203737.538 ops/s
Iteration   2: 204171.886 ops/s
Iteration   3: 203114.407 ops/s
Iteration   4: 204132.069 ops/s
Iteration   5: 204679.330 ops/s
Iteration   6: 203876.868 ops/s
Iteration   7: 203455.924 ops/s
Iteration   8: 203176.301 ops/s
Iteration   9: 202817.052 ops/s
Iteration  10: 202915.507 ops/s
Iteration  11: 204205.976 ops/s
Iteration  12: 203715.389 ops/s
Iteration  13: 202324.899 ops/s
Iteration  14: 203105.627 ops/s
Iteration  15: 203262.534 ops/s
Iteration  16: 203226.757 ops/s
Iteration  17: 203277.699 ops/s
Iteration  18: 203299.971 ops/s
Iteration  19: 203422.352 ops/s
Iteration  20: 204003.629 ops/s
Iteration  21: 202699.142 ops/s
Iteration  22: 204276.027 ops/s
Iteration  23: 203515.009 ops/s
Iteration  24: 203707.807 ops/s
Iteration  25: 204353.358 ops/s
Iteration  26: 203594.179 ops/s
Iteration  27: 203767.269 ops/s
Iteration  28: 203382.618 ops/s
Iteration  29: 204115.555 ops/s
Iteration  30: 202413.357 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_168._Benchmark.benchmark_Cluster_168":
  203524.868 ±(99.9%) 386.707 ops/s [Average]
  (min, avg, max) = (202324.899, 203524.868, 204679.330), stdev = 578.806
  CI (99.9%): [203138.160, 203911.575] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_168._Benchmark.benchmark_Cluster_168  thrpt   30  203524.868 ± 386.707  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_169._Benchmark.benchmark_Cluster_169$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_169._Benchmark.benchmark_Cluster_169

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 132220.659 ops/s
# Warmup Iteration   2: 221430.142 ops/s
# Warmup Iteration   3: 218905.752 ops/s
# Warmup Iteration   4: 240317.190 ops/s
# Warmup Iteration   5: 251701.363 ops/s
# Warmup Iteration   6: 250871.287 ops/s
# Warmup Iteration   7: 250325.229 ops/s
# Warmup Iteration   8: 250805.529 ops/s
# Warmup Iteration   9: 251002.297 ops/s
# Warmup Iteration  10: 251537.603 ops/s
# Warmup Iteration  11: 250743.447 ops/s
# Warmup Iteration  12: 251831.826 ops/s
# Warmup Iteration  13: 251365.247 ops/s
# Warmup Iteration  14: 249597.630 ops/s
# Warmup Iteration  15: 249308.293 ops/s
# Warmup Iteration  16: 248381.003 ops/s
# Warmup Iteration  17: 250092.824 ops/s
# Warmup Iteration  18: 249093.251 ops/s
# Warmup Iteration  19: 249988.418 ops/s
# Warmup Iteration  20: 249508.172 ops/s
# Warmup Iteration  21: 249988.435 ops/s
# Warmup Iteration  22: 249781.604 ops/s
# Warmup Iteration  23: 249180.538 ops/s
# Warmup Iteration  24: 249162.522 ops/s
# Warmup Iteration  25: 251006.929 ops/s
# Warmup Iteration  26: 250842.330 ops/s
# Warmup Iteration  27: 249290.535 ops/s
# Warmup Iteration  28: 249853.870 ops/s
# Warmup Iteration  29: 250223.846 ops/s
# Warmup Iteration  30: 251000.007 ops/s
Iteration   1: 248306.177 ops/s
Iteration   2: 250625.628 ops/s
Iteration   3: 249737.481 ops/s
Iteration   4: 250040.560 ops/s
Iteration   5: 249505.272 ops/s
Iteration   6: 249643.683 ops/s
Iteration   7: 250213.725 ops/s
Iteration   8: 248844.707 ops/s
Iteration   9: 250814.502 ops/s
Iteration  10: 250964.710 ops/s
Iteration  11: 250009.830 ops/s
Iteration  12: 250401.700 ops/s
Iteration  13: 250676.427 ops/s
Iteration  14: 247358.070 ops/s
Iteration  15: 249807.275 ops/s
Iteration  16: 248762.653 ops/s
Iteration  17: 252002.869 ops/s
Iteration  18: 250532.758 ops/s
Iteration  19: 250034.095 ops/s
Iteration  20: 250616.211 ops/s
Iteration  21: 251263.771 ops/s
Iteration  22: 250094.141 ops/s
Iteration  23: 250470.176 ops/s
Iteration  24: 250242.924 ops/s
Iteration  25: 249956.170 ops/s
Iteration  26: 249670.907 ops/s
Iteration  27: 250931.618 ops/s
Iteration  28: 251092.733 ops/s
Iteration  29: 251294.795 ops/s
Iteration  30: 250304.027 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_169._Benchmark.benchmark_Cluster_169":
  250140.653 ±(99.9%) 629.613 ops/s [Average]
  (min, avg, max) = (247358.070, 250140.653, 252002.869), stdev = 942.375
  CI (99.9%): [249511.040, 250770.266] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_169._Benchmark.benchmark_Cluster_169  thrpt   30  250140.653 ± 629.613  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_17._Benchmark.benchmark_Cluster_17$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_17._Benchmark.benchmark_Cluster_17

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 74446.178 ops/s
# Warmup Iteration   2: 128814.039 ops/s
# Warmup Iteration   3: 160916.038 ops/s
# Warmup Iteration   4: 184007.796 ops/s
# Warmup Iteration   5: 183719.927 ops/s
# Warmup Iteration   6: 183624.497 ops/s
# Warmup Iteration   7: 183671.013 ops/s
# Warmup Iteration   8: 183439.648 ops/s
# Warmup Iteration   9: 183583.419 ops/s
# Warmup Iteration  10: 184053.810 ops/s
# Warmup Iteration  11: 183308.581 ops/s
# Warmup Iteration  12: 183976.920 ops/s
# Warmup Iteration  13: 183023.219 ops/s
# Warmup Iteration  14: 181629.799 ops/s
# Warmup Iteration  15: 183051.415 ops/s
# Warmup Iteration  16: 183075.755 ops/s
# Warmup Iteration  17: 191328.088 ops/s
# Warmup Iteration  18: 191963.154 ops/s
# Warmup Iteration  19: 192114.537 ops/s
# Warmup Iteration  20: 191794.131 ops/s
# Warmup Iteration  21: 191369.703 ops/s
# Warmup Iteration  22: 191879.828 ops/s
# Warmup Iteration  23: 192352.880 ops/s
# Warmup Iteration  24: 192997.757 ops/s
# Warmup Iteration  25: 190534.055 ops/s
# Warmup Iteration  26: 191282.937 ops/s
# Warmup Iteration  27: 191354.997 ops/s
# Warmup Iteration  28: 191429.444 ops/s
# Warmup Iteration  29: 191590.148 ops/s
# Warmup Iteration  30: 191673.428 ops/s
Iteration   1: 191343.451 ops/s
Iteration   2: 192212.807 ops/s
Iteration   3: 191105.199 ops/s
Iteration   4: 190518.578 ops/s
Iteration   5: 190947.695 ops/s
Iteration   6: 191816.018 ops/s
Iteration   7: 190703.479 ops/s
Iteration   8: 187991.433 ops/s
Iteration   9: 191614.391 ops/s
Iteration  10: 190791.330 ops/s
Iteration  11: 193770.222 ops/s
Iteration  12: 191972.151 ops/s
Iteration  13: 191509.351 ops/s
Iteration  14: 191465.598 ops/s
Iteration  15: 192883.606 ops/s
Iteration  16: 191327.983 ops/s
Iteration  17: 191247.198 ops/s
Iteration  18: 191494.772 ops/s
Iteration  19: 190628.889 ops/s
Iteration  20: 191930.416 ops/s
Iteration  21: 191947.936 ops/s
Iteration  22: 191653.869 ops/s
Iteration  23: 191166.053 ops/s
Iteration  24: 190973.640 ops/s
Iteration  25: 192248.243 ops/s
Iteration  26: 191489.602 ops/s
Iteration  27: 190881.139 ops/s
Iteration  28: 191813.431 ops/s
Iteration  29: 191805.934 ops/s
Iteration  30: 192093.029 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_17._Benchmark.benchmark_Cluster_17":
  191444.915 ±(99.9%) 630.843 ops/s [Average]
  (min, avg, max) = (187991.433, 191444.915, 193770.222), stdev = 944.216
  CI (99.9%): [190814.072, 192075.758] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_17._Benchmark.benchmark_Cluster_17  thrpt   30  191444.915 ± 630.843  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_170._Benchmark.benchmark_Cluster_170$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_170._Benchmark.benchmark_Cluster_170

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 89689.872 ops/s
# Warmup Iteration   2: 139629.572 ops/s
# Warmup Iteration   3: 162161.722 ops/s
# Warmup Iteration   4: 164499.238 ops/s
# Warmup Iteration   5: 176630.707 ops/s
# Warmup Iteration   6: 176516.387 ops/s
# Warmup Iteration   7: 176722.749 ops/s
# Warmup Iteration   8: 177188.582 ops/s
# Warmup Iteration   9: 177642.515 ops/s
# Warmup Iteration  10: 176605.482 ops/s
# Warmup Iteration  11: 177950.152 ops/s
# Warmup Iteration  12: 176818.871 ops/s
# Warmup Iteration  13: 176536.756 ops/s
# Warmup Iteration  14: 175949.125 ops/s
# Warmup Iteration  15: 175747.904 ops/s
# Warmup Iteration  16: 175280.668 ops/s
# Warmup Iteration  17: 182994.773 ops/s
# Warmup Iteration  18: 182307.939 ops/s
# Warmup Iteration  19: 183140.540 ops/s
# Warmup Iteration  20: 181298.753 ops/s
# Warmup Iteration  21: 182374.178 ops/s
# Warmup Iteration  22: 182548.676 ops/s
# Warmup Iteration  23: 181783.728 ops/s
# Warmup Iteration  24: 181586.239 ops/s
# Warmup Iteration  25: 182058.787 ops/s
# Warmup Iteration  26: 182106.518 ops/s
# Warmup Iteration  27: 183245.365 ops/s
# Warmup Iteration  28: 182606.604 ops/s
# Warmup Iteration  29: 181898.998 ops/s
# Warmup Iteration  30: 182531.088 ops/s
Iteration   1: 181532.386 ops/s
Iteration   2: 182812.930 ops/s
Iteration   3: 182275.921 ops/s
Iteration   4: 181643.902 ops/s
Iteration   5: 182264.987 ops/s
Iteration   6: 182812.705 ops/s
Iteration   7: 182358.684 ops/s
Iteration   8: 182230.900 ops/s
Iteration   9: 180970.523 ops/s
Iteration  10: 182711.249 ops/s
Iteration  11: 182800.867 ops/s
Iteration  12: 178815.221 ops/s
Iteration  13: 181330.353 ops/s
Iteration  14: 182142.524 ops/s
Iteration  15: 182519.418 ops/s
Iteration  16: 182349.065 ops/s
Iteration  17: 182376.493 ops/s
Iteration  18: 182341.998 ops/s
Iteration  19: 181841.103 ops/s
Iteration  20: 182184.449 ops/s
Iteration  21: 182350.772 ops/s
Iteration  22: 182105.587 ops/s
Iteration  23: 182421.042 ops/s
Iteration  24: 181765.798 ops/s
Iteration  25: 181499.417 ops/s
Iteration  26: 182739.427 ops/s
Iteration  27: 181742.367 ops/s
Iteration  28: 181919.850 ops/s
Iteration  29: 183038.980 ops/s
Iteration  30: 183108.365 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_170._Benchmark.benchmark_Cluster_170":
  182100.243 ±(99.9%) 537.453 ops/s [Average]
  (min, avg, max) = (178815.221, 182100.243, 183108.365), stdev = 804.435
  CI (99.9%): [181562.790, 182637.696] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_170._Benchmark.benchmark_Cluster_170  thrpt   30  182100.243 ± 537.453  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_171._Benchmark.benchmark_Cluster_171$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_171._Benchmark.benchmark_Cluster_171

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 70286.700 ops/s
# Warmup Iteration   2: 117781.380 ops/s
# Warmup Iteration   3: 138622.213 ops/s
# Warmup Iteration   4: 140149.239 ops/s
# Warmup Iteration   5: 141847.061 ops/s
# Warmup Iteration   6: 141209.377 ops/s
# Warmup Iteration   7: 141564.321 ops/s
# Warmup Iteration   8: 141644.874 ops/s
# Warmup Iteration   9: 141191.558 ops/s
# Warmup Iteration  10: 140732.685 ops/s
# Warmup Iteration  11: 140221.253 ops/s
# Warmup Iteration  12: 140707.143 ops/s
# Warmup Iteration  13: 140756.784 ops/s
# Warmup Iteration  14: 140771.554 ops/s
# Warmup Iteration  15: 141375.500 ops/s
# Warmup Iteration  16: 141292.456 ops/s
# Warmup Iteration  17: 146258.059 ops/s
# Warmup Iteration  18: 147353.529 ops/s
# Warmup Iteration  19: 148074.554 ops/s
# Warmup Iteration  20: 147087.168 ops/s
# Warmup Iteration  21: 147150.827 ops/s
# Warmup Iteration  22: 147712.123 ops/s
# Warmup Iteration  23: 146957.023 ops/s
# Warmup Iteration  24: 147996.545 ops/s
# Warmup Iteration  25: 147604.177 ops/s
# Warmup Iteration  26: 146761.989 ops/s
# Warmup Iteration  27: 147770.744 ops/s
# Warmup Iteration  28: 147657.438 ops/s
# Warmup Iteration  29: 147012.099 ops/s
# Warmup Iteration  30: 147582.615 ops/s
Iteration   1: 147823.088 ops/s
Iteration   2: 147946.029 ops/s
Iteration   3: 147226.195 ops/s
Iteration   4: 148418.516 ops/s
Iteration   5: 147323.578 ops/s
Iteration   6: 147394.480 ops/s
Iteration   7: 148760.304 ops/s
Iteration   8: 148148.860 ops/s
Iteration   9: 146889.152 ops/s
Iteration  10: 148353.917 ops/s
Iteration  11: 147858.050 ops/s
Iteration  12: 148728.201 ops/s
Iteration  13: 147704.209 ops/s
Iteration  14: 147025.942 ops/s
Iteration  15: 147715.299 ops/s
Iteration  16: 147822.112 ops/s
Iteration  17: 147105.665 ops/s
Iteration  18: 147788.415 ops/s
Iteration  19: 147905.284 ops/s
Iteration  20: 147078.248 ops/s
Iteration  21: 148377.305 ops/s
Iteration  22: 147428.030 ops/s
Iteration  23: 146693.555 ops/s
Iteration  24: 146733.242 ops/s
Iteration  25: 148118.169 ops/s
Iteration  26: 146949.791 ops/s
Iteration  27: 147785.728 ops/s
Iteration  28: 147204.112 ops/s
Iteration  29: 146862.925 ops/s
Iteration  30: 147649.617 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_171._Benchmark.benchmark_Cluster_171":
  147627.267 ±(99.9%) 388.772 ops/s [Average]
  (min, avg, max) = (146693.555, 147627.267, 148760.304), stdev = 581.895
  CI (99.9%): [147238.496, 148016.039] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_171._Benchmark.benchmark_Cluster_171  thrpt   30  147627.267 ± 388.772  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_172._Benchmark.benchmark_Cluster_172$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_172._Benchmark.benchmark_Cluster_172

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 61332.815 ops/s
# Warmup Iteration   2: 119957.428 ops/s
# Warmup Iteration   3: 119130.780 ops/s
# Warmup Iteration   4: 128184.575 ops/s
# Warmup Iteration   5: 128836.562 ops/s
# Warmup Iteration   6: 128518.834 ops/s
# Warmup Iteration   7: 128110.223 ops/s
# Warmup Iteration   8: 128713.599 ops/s
# Warmup Iteration   9: 128346.288 ops/s
# Warmup Iteration  10: 128332.140 ops/s
# Warmup Iteration  11: 127835.423 ops/s
# Warmup Iteration  12: 127720.494 ops/s
# Warmup Iteration  13: 127460.197 ops/s
# Warmup Iteration  14: 127113.863 ops/s
# Warmup Iteration  15: 127687.287 ops/s
# Warmup Iteration  16: 126846.818 ops/s
# Warmup Iteration  17: 129973.717 ops/s
# Warmup Iteration  18: 130812.531 ops/s
# Warmup Iteration  19: 130223.833 ops/s
# Warmup Iteration  20: 129680.570 ops/s
# Warmup Iteration  21: 130271.700 ops/s
# Warmup Iteration  22: 129842.960 ops/s
# Warmup Iteration  23: 130384.596 ops/s
# Warmup Iteration  24: 129752.608 ops/s
# Warmup Iteration  25: 129860.368 ops/s
# Warmup Iteration  26: 130299.425 ops/s
# Warmup Iteration  27: 130041.190 ops/s
# Warmup Iteration  28: 130526.163 ops/s
# Warmup Iteration  29: 130820.740 ops/s
# Warmup Iteration  30: 130305.995 ops/s
Iteration   1: 130466.520 ops/s
Iteration   2: 130620.630 ops/s
Iteration   3: 130825.499 ops/s
Iteration   4: 130550.008 ops/s
Iteration   5: 130064.949 ops/s
Iteration   6: 130151.931 ops/s
Iteration   7: 129837.502 ops/s
Iteration   8: 130779.509 ops/s
Iteration   9: 129830.186 ops/s
Iteration  10: 130835.650 ops/s
Iteration  11: 130691.222 ops/s
Iteration  12: 130441.197 ops/s
Iteration  13: 131135.331 ops/s
Iteration  14: 130449.900 ops/s
Iteration  15: 129894.930 ops/s
Iteration  16: 130168.829 ops/s
Iteration  17: 129991.262 ops/s
Iteration  18: 129891.917 ops/s
Iteration  19: 130654.156 ops/s
Iteration  20: 130005.121 ops/s
Iteration  21: 130575.017 ops/s
Iteration  22: 130401.023 ops/s
Iteration  23: 130533.953 ops/s
Iteration  24: 129969.473 ops/s
Iteration  25: 130156.010 ops/s
Iteration  26: 130870.401 ops/s
Iteration  27: 130918.662 ops/s
Iteration  28: 130372.894 ops/s
Iteration  29: 130555.429 ops/s
Iteration  30: 130455.834 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_172._Benchmark.benchmark_Cluster_172":
  130403.165 ±(99.9%) 241.874 ops/s [Average]
  (min, avg, max) = (129830.186, 130403.165, 131135.331), stdev = 362.025
  CI (99.9%): [130161.291, 130645.038] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_172._Benchmark.benchmark_Cluster_172  thrpt   30  130403.165 ± 241.874  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_173._Benchmark.benchmark_Cluster_173$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_173._Benchmark.benchmark_Cluster_173

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 30550.562 ops/s
# Warmup Iteration   2: 71443.431 ops/s
# Warmup Iteration   3: 92509.093 ops/s
# Warmup Iteration   4: 120968.767 ops/s
# Warmup Iteration   5: 121911.775 ops/s
# Warmup Iteration   6: 122699.488 ops/s
# Warmup Iteration   7: 122651.307 ops/s
# Warmup Iteration   8: 121674.088 ops/s
# Warmup Iteration   9: 121125.892 ops/s
# Warmup Iteration  10: 121242.570 ops/s
# Warmup Iteration  11: 120817.824 ops/s
# Warmup Iteration  12: 121794.677 ops/s
# Warmup Iteration  13: 121481.768 ops/s
# Warmup Iteration  14: 121590.574 ops/s
# Warmup Iteration  15: 121683.375 ops/s
# Warmup Iteration  16: 121784.663 ops/s
# Warmup Iteration  17: 122375.647 ops/s
# Warmup Iteration  18: 122901.528 ops/s
# Warmup Iteration  19: 122027.793 ops/s
# Warmup Iteration  20: 122340.839 ops/s
# Warmup Iteration  21: 122514.732 ops/s
# Warmup Iteration  22: 122402.366 ops/s
# Warmup Iteration  23: 122760.265 ops/s
# Warmup Iteration  24: 122450.988 ops/s
# Warmup Iteration  25: 123067.410 ops/s
# Warmup Iteration  26: 122649.127 ops/s
# Warmup Iteration  27: 122227.850 ops/s
# Warmup Iteration  28: 122935.279 ops/s
# Warmup Iteration  29: 122908.957 ops/s
# Warmup Iteration  30: 122680.762 ops/s
Iteration   1: 122576.931 ops/s
Iteration   2: 121958.708 ops/s
Iteration   3: 122494.707 ops/s
Iteration   4: 122573.785 ops/s
Iteration   5: 122330.823 ops/s
Iteration   6: 122365.335 ops/s
Iteration   7: 123398.157 ops/s
Iteration   8: 122228.376 ops/s
Iteration   9: 121532.223 ops/s
Iteration  10: 122500.310 ops/s
Iteration  11: 121954.173 ops/s
Iteration  12: 123020.410 ops/s
Iteration  13: 121969.935 ops/s
Iteration  14: 122724.192 ops/s
Iteration  15: 122884.515 ops/s
Iteration  16: 122308.176 ops/s
Iteration  17: 122496.773 ops/s
Iteration  18: 122186.330 ops/s
Iteration  19: 123482.049 ops/s
Iteration  20: 122516.207 ops/s
Iteration  21: 121504.580 ops/s
Iteration  22: 122416.439 ops/s
Iteration  23: 122460.352 ops/s
Iteration  24: 123324.813 ops/s
Iteration  25: 122796.842 ops/s
Iteration  26: 122517.028 ops/s
Iteration  27: 122931.657 ops/s
Iteration  28: 123171.663 ops/s
Iteration  29: 121883.189 ops/s
Iteration  30: 122103.098 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_173._Benchmark.benchmark_Cluster_173":
  122487.059 ±(99.9%) 334.160 ops/s [Average]
  (min, avg, max) = (121504.580, 122487.059, 123482.049), stdev = 500.154
  CI (99.9%): [122152.900, 122821.219] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_173._Benchmark.benchmark_Cluster_173  thrpt   30  122487.059 ± 334.160  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_174._Benchmark.benchmark_Cluster_174$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_174._Benchmark.benchmark_Cluster_174

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 59122.293 ops/s
# Warmup Iteration   2: 166375.781 ops/s
# Warmup Iteration   3: 196464.014 ops/s
# Warmup Iteration   4: 210063.188 ops/s
# Warmup Iteration   5: 207863.140 ops/s
# Warmup Iteration   6: 209966.065 ops/s
# Warmup Iteration   7: 208298.560 ops/s
# Warmup Iteration   8: 208246.114 ops/s
# Warmup Iteration   9: 209165.642 ops/s
# Warmup Iteration  10: 208412.559 ops/s
# Warmup Iteration  11: 207728.129 ops/s
# Warmup Iteration  12: 208107.006 ops/s
# Warmup Iteration  13: 208421.612 ops/s
# Warmup Iteration  14: 208443.200 ops/s
# Warmup Iteration  15: 207318.721 ops/s
# Warmup Iteration  16: 209315.040 ops/s
# Warmup Iteration  17: 208727.213 ops/s
# Warmup Iteration  18: 208991.756 ops/s
# Warmup Iteration  19: 208967.626 ops/s
# Warmup Iteration  20: 208075.863 ops/s
# Warmup Iteration  21: 209254.263 ops/s
# Warmup Iteration  22: 208130.025 ops/s
# Warmup Iteration  23: 208680.501 ops/s
# Warmup Iteration  24: 209148.123 ops/s
# Warmup Iteration  25: 208904.021 ops/s
# Warmup Iteration  26: 208976.982 ops/s
# Warmup Iteration  27: 207892.910 ops/s
# Warmup Iteration  28: 205940.759 ops/s
# Warmup Iteration  29: 209218.691 ops/s
# Warmup Iteration  30: 208600.162 ops/s
Iteration   1: 208690.921 ops/s
Iteration   2: 207062.759 ops/s
Iteration   3: 208946.382 ops/s
Iteration   4: 208287.977 ops/s
Iteration   5: 208150.654 ops/s
Iteration   6: 209066.804 ops/s
Iteration   7: 207565.984 ops/s
Iteration   8: 207618.852 ops/s
Iteration   9: 208747.006 ops/s
Iteration  10: 207853.561 ops/s
Iteration  11: 206501.191 ops/s
Iteration  12: 209299.412 ops/s
Iteration  13: 209438.182 ops/s
Iteration  14: 208870.443 ops/s
Iteration  15: 208949.562 ops/s
Iteration  16: 207630.579 ops/s
Iteration  17: 208502.194 ops/s
Iteration  18: 207688.959 ops/s
Iteration  19: 208384.315 ops/s
Iteration  20: 208149.600 ops/s
Iteration  21: 208621.000 ops/s
Iteration  22: 208362.621 ops/s
Iteration  23: 209682.824 ops/s
Iteration  24: 207796.677 ops/s
Iteration  25: 209458.539 ops/s
Iteration  26: 207922.242 ops/s
Iteration  27: 208013.413 ops/s
Iteration  28: 208952.663 ops/s
Iteration  29: 209357.422 ops/s
Iteration  30: 209034.383 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_174._Benchmark.benchmark_Cluster_174":
  208420.237 ±(99.9%) 508.099 ops/s [Average]
  (min, avg, max) = (206501.191, 208420.237, 209682.824), stdev = 760.499
  CI (99.9%): [207912.138, 208928.336] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_174._Benchmark.benchmark_Cluster_174  thrpt   30  208420.237 ± 508.099  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_175._Benchmark.benchmark_Cluster_175$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_175._Benchmark.benchmark_Cluster_175

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 48832.744 ops/s
# Warmup Iteration   2: 118867.599 ops/s
# Warmup Iteration   3: 146135.650 ops/s
# Warmup Iteration   4: 154465.803 ops/s
# Warmup Iteration   5: 153404.918 ops/s
# Warmup Iteration   6: 154527.582 ops/s
# Warmup Iteration   7: 153842.708 ops/s
# Warmup Iteration   8: 153777.567 ops/s
# Warmup Iteration   9: 153841.596 ops/s
# Warmup Iteration  10: 154639.561 ops/s
# Warmup Iteration  11: 155060.818 ops/s
# Warmup Iteration  12: 153961.779 ops/s
# Warmup Iteration  13: 153176.011 ops/s
# Warmup Iteration  14: 155097.777 ops/s
# Warmup Iteration  15: 154821.626 ops/s
# Warmup Iteration  16: 154412.030 ops/s
# Warmup Iteration  17: 154578.477 ops/s
# Warmup Iteration  18: 154256.236 ops/s
# Warmup Iteration  19: 154199.601 ops/s
# Warmup Iteration  20: 153009.561 ops/s
# Warmup Iteration  21: 153833.788 ops/s
# Warmup Iteration  22: 153277.810 ops/s
# Warmup Iteration  23: 154106.078 ops/s
# Warmup Iteration  24: 153422.147 ops/s
# Warmup Iteration  25: 154398.509 ops/s
# Warmup Iteration  26: 154603.156 ops/s
# Warmup Iteration  27: 154141.842 ops/s
# Warmup Iteration  28: 153275.718 ops/s
# Warmup Iteration  29: 154193.473 ops/s
# Warmup Iteration  30: 154671.576 ops/s
Iteration   1: 154183.850 ops/s
Iteration   2: 154721.660 ops/s
Iteration   3: 154778.648 ops/s
Iteration   4: 152940.765 ops/s
Iteration   5: 154106.810 ops/s
Iteration   6: 154394.107 ops/s
Iteration   7: 154213.760 ops/s
Iteration   8: 153388.475 ops/s
Iteration   9: 154533.746 ops/s
Iteration  10: 154094.209 ops/s
Iteration  11: 153433.078 ops/s
Iteration  12: 153264.739 ops/s
Iteration  13: 153433.627 ops/s
Iteration  14: 154385.739 ops/s
Iteration  15: 154298.278 ops/s
Iteration  16: 153298.172 ops/s
Iteration  17: 154180.758 ops/s
Iteration  18: 153763.803 ops/s
Iteration  19: 154566.390 ops/s
Iteration  20: 155100.474 ops/s
Iteration  21: 153092.778 ops/s
Iteration  22: 153780.424 ops/s
Iteration  23: 154708.655 ops/s
Iteration  24: 152832.575 ops/s
Iteration  25: 153776.564 ops/s
Iteration  26: 154857.056 ops/s
Iteration  27: 154492.509 ops/s
Iteration  28: 153625.898 ops/s
Iteration  29: 153326.125 ops/s
Iteration  30: 153800.836 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_175._Benchmark.benchmark_Cluster_175":
  153979.150 ±(99.9%) 412.981 ops/s [Average]
  (min, avg, max) = (152832.575, 153979.150, 155100.474), stdev = 618.131
  CI (99.9%): [153566.169, 154392.131] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_175._Benchmark.benchmark_Cluster_175  thrpt   30  153979.150 ± 412.981  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_176._Benchmark.benchmark_Cluster_176$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_176._Benchmark.benchmark_Cluster_176

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 41362.371 ops/s
# Warmup Iteration   2: 92623.686 ops/s
# Warmup Iteration   3: 98810.089 ops/s
# Warmup Iteration   4: 111780.877 ops/s
# Warmup Iteration   5: 111521.465 ops/s
# Warmup Iteration   6: 111742.422 ops/s
# Warmup Iteration   7: 111460.578 ops/s
# Warmup Iteration   8: 111444.058 ops/s
# Warmup Iteration   9: 110757.725 ops/s
# Warmup Iteration  10: 110908.638 ops/s
# Warmup Iteration  11: 110351.086 ops/s
# Warmup Iteration  12: 111588.133 ops/s
# Warmup Iteration  13: 110856.334 ops/s
# Warmup Iteration  14: 110807.077 ops/s
# Warmup Iteration  15: 111546.673 ops/s
# Warmup Iteration  16: 111968.720 ops/s
# Warmup Iteration  17: 112549.115 ops/s
# Warmup Iteration  18: 113137.814 ops/s
# Warmup Iteration  19: 110712.775 ops/s
# Warmup Iteration  20: 112412.586 ops/s
# Warmup Iteration  21: 113008.047 ops/s
# Warmup Iteration  22: 113266.238 ops/s
# Warmup Iteration  23: 112560.888 ops/s
# Warmup Iteration  24: 112521.131 ops/s
# Warmup Iteration  25: 112169.324 ops/s
# Warmup Iteration  26: 112487.625 ops/s
# Warmup Iteration  27: 112881.601 ops/s
# Warmup Iteration  28: 112669.769 ops/s
# Warmup Iteration  29: 113228.627 ops/s
# Warmup Iteration  30: 112465.384 ops/s
Iteration   1: 112267.306 ops/s
Iteration   2: 113341.181 ops/s
Iteration   3: 112555.583 ops/s
Iteration   4: 113104.798 ops/s
Iteration   5: 112506.021 ops/s
Iteration   6: 112675.956 ops/s
Iteration   7: 112924.529 ops/s
Iteration   8: 112332.511 ops/s
Iteration   9: 112835.817 ops/s
Iteration  10: 112713.128 ops/s
Iteration  11: 112555.199 ops/s
Iteration  12: 112971.148 ops/s
Iteration  13: 112538.000 ops/s
Iteration  14: 112714.706 ops/s
Iteration  15: 112657.220 ops/s
Iteration  16: 112891.692 ops/s
Iteration  17: 112658.671 ops/s
Iteration  18: 112480.022 ops/s
Iteration  19: 112295.104 ops/s
Iteration  20: 112851.275 ops/s
Iteration  21: 113314.412 ops/s
Iteration  22: 112612.948 ops/s
Iteration  23: 112540.963 ops/s
Iteration  24: 112710.661 ops/s
Iteration  25: 112301.252 ops/s
Iteration  26: 112332.930 ops/s
Iteration  27: 112533.868 ops/s
Iteration  28: 112645.001 ops/s
Iteration  29: 112549.295 ops/s
Iteration  30: 112979.512 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_176._Benchmark.benchmark_Cluster_176":
  112679.690 ±(99.9%) 185.896 ops/s [Average]
  (min, avg, max) = (112267.306, 112679.690, 113341.181), stdev = 278.240
  CI (99.9%): [112493.795, 112865.586] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_176._Benchmark.benchmark_Cluster_176  thrpt   30  112679.690 ± 185.896  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_177._Benchmark.benchmark_Cluster_177$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_177._Benchmark.benchmark_Cluster_177

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 78958.998 ops/s
# Warmup Iteration   2: 150809.574 ops/s
# Warmup Iteration   3: 170985.078 ops/s
# Warmup Iteration   4: 193636.438 ops/s
# Warmup Iteration   5: 194102.066 ops/s
# Warmup Iteration   6: 195414.802 ops/s
# Warmup Iteration   7: 197050.215 ops/s
# Warmup Iteration   8: 195198.722 ops/s
# Warmup Iteration   9: 194674.241 ops/s
# Warmup Iteration  10: 194572.819 ops/s
# Warmup Iteration  11: 193720.092 ops/s
# Warmup Iteration  12: 193302.640 ops/s
# Warmup Iteration  13: 193338.813 ops/s
# Warmup Iteration  14: 194541.169 ops/s
# Warmup Iteration  15: 195054.868 ops/s
# Warmup Iteration  16: 193164.154 ops/s
# Warmup Iteration  17: 201080.591 ops/s
# Warmup Iteration  18: 201293.699 ops/s
# Warmup Iteration  19: 201231.144 ops/s
# Warmup Iteration  20: 199663.598 ops/s
# Warmup Iteration  21: 201780.090 ops/s
# Warmup Iteration  22: 200886.037 ops/s
# Warmup Iteration  23: 199791.983 ops/s
# Warmup Iteration  24: 201213.076 ops/s
# Warmup Iteration  25: 201177.655 ops/s
# Warmup Iteration  26: 200808.401 ops/s
# Warmup Iteration  27: 200745.016 ops/s
# Warmup Iteration  28: 201500.812 ops/s
# Warmup Iteration  29: 200601.395 ops/s
# Warmup Iteration  30: 200528.444 ops/s
Iteration   1: 200757.340 ops/s
Iteration   2: 200438.302 ops/s
Iteration   3: 201846.503 ops/s
Iteration   4: 199624.582 ops/s
Iteration   5: 199520.203 ops/s
Iteration   6: 200101.704 ops/s
Iteration   7: 201478.984 ops/s
Iteration   8: 201871.370 ops/s
Iteration   9: 200917.805 ops/s
Iteration  10: 200151.963 ops/s
Iteration  11: 201319.565 ops/s
Iteration  12: 200476.564 ops/s
Iteration  13: 200902.856 ops/s
Iteration  14: 199808.097 ops/s
Iteration  15: 201557.987 ops/s
Iteration  16: 201614.307 ops/s
Iteration  17: 201092.574 ops/s
Iteration  18: 200316.348 ops/s
Iteration  19: 199850.296 ops/s
Iteration  20: 201634.802 ops/s
Iteration  21: 200701.575 ops/s
Iteration  22: 199541.325 ops/s
Iteration  23: 201200.959 ops/s
Iteration  24: 200478.843 ops/s
Iteration  25: 199483.472 ops/s
Iteration  26: 200886.455 ops/s
Iteration  27: 199923.116 ops/s
Iteration  28: 200662.690 ops/s
Iteration  29: 199897.192 ops/s
Iteration  30: 201612.402 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_177._Benchmark.benchmark_Cluster_177":
  200655.673 ±(99.9%) 504.553 ops/s [Average]
  (min, avg, max) = (199483.472, 200655.673, 201871.370), stdev = 755.192
  CI (99.9%): [200151.119, 201160.226] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_177._Benchmark.benchmark_Cluster_177  thrpt   30  200655.673 ± 504.553  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_178._Benchmark.benchmark_Cluster_178$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_178._Benchmark.benchmark_Cluster_178

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 45499.065 ops/s
# Warmup Iteration   2: 103084.820 ops/s
# Warmup Iteration   3: 121614.292 ops/s
# Warmup Iteration   4: 136711.801 ops/s
# Warmup Iteration   5: 137898.426 ops/s
# Warmup Iteration   6: 138323.220 ops/s
# Warmup Iteration   7: 138311.387 ops/s
# Warmup Iteration   8: 137982.832 ops/s
# Warmup Iteration   9: 137161.571 ops/s
# Warmup Iteration  10: 137448.917 ops/s
# Warmup Iteration  11: 137048.124 ops/s
# Warmup Iteration  12: 136466.038 ops/s
# Warmup Iteration  13: 137508.510 ops/s
# Warmup Iteration  14: 137440.438 ops/s
# Warmup Iteration  15: 137041.134 ops/s
# Warmup Iteration  16: 138234.801 ops/s
# Warmup Iteration  17: 140885.461 ops/s
# Warmup Iteration  18: 142101.467 ops/s
# Warmup Iteration  19: 141465.143 ops/s
# Warmup Iteration  20: 140991.227 ops/s
# Warmup Iteration  21: 141688.558 ops/s
# Warmup Iteration  22: 140920.054 ops/s
# Warmup Iteration  23: 141914.097 ops/s
# Warmup Iteration  24: 141910.808 ops/s
# Warmup Iteration  25: 140527.435 ops/s
# Warmup Iteration  26: 141600.907 ops/s
# Warmup Iteration  27: 140625.342 ops/s
# Warmup Iteration  28: 141210.287 ops/s
# Warmup Iteration  29: 141221.342 ops/s
# Warmup Iteration  30: 141614.715 ops/s
Iteration   1: 141823.237 ops/s
Iteration   2: 141575.310 ops/s
Iteration   3: 141772.839 ops/s
Iteration   4: 142175.714 ops/s
Iteration   5: 141915.183 ops/s
Iteration   6: 142288.388 ops/s
Iteration   7: 141546.491 ops/s
Iteration   8: 141429.860 ops/s
Iteration   9: 142117.999 ops/s
Iteration  10: 141411.808 ops/s
Iteration  11: 141589.028 ops/s
Iteration  12: 142499.146 ops/s
Iteration  13: 141062.615 ops/s
Iteration  14: 140688.839 ops/s
Iteration  15: 141551.646 ops/s
Iteration  16: 141632.336 ops/s
Iteration  17: 141712.934 ops/s
Iteration  18: 140893.474 ops/s
Iteration  19: 142128.042 ops/s
Iteration  20: 142640.497 ops/s
Iteration  21: 142030.709 ops/s
Iteration  22: 141939.593 ops/s
Iteration  23: 141645.871 ops/s
Iteration  24: 141590.047 ops/s
Iteration  25: 141092.750 ops/s
Iteration  26: 141668.372 ops/s
Iteration  27: 141995.336 ops/s
Iteration  28: 141681.589 ops/s
Iteration  29: 141696.134 ops/s
Iteration  30: 141078.950 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_178._Benchmark.benchmark_Cluster_178":
  141695.825 ±(99.9%) 300.282 ops/s [Average]
  (min, avg, max) = (140688.839, 141695.825, 142640.497), stdev = 449.449
  CI (99.9%): [141395.542, 141996.107] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_178._Benchmark.benchmark_Cluster_178  thrpt   30  141695.825 ± 300.282  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_179._Benchmark.benchmark_Cluster_179$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_179._Benchmark.benchmark_Cluster_179

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 149612.788 ops/s
# Warmup Iteration   2: 270503.405 ops/s
# Warmup Iteration   3: 339249.686 ops/s
# Warmup Iteration   4: 343553.265 ops/s
# Warmup Iteration   5: 345205.168 ops/s
# Warmup Iteration   6: 342718.784 ops/s
# Warmup Iteration   7: 340537.833 ops/s
# Warmup Iteration   8: 338803.391 ops/s
# Warmup Iteration   9: 339392.412 ops/s
# Warmup Iteration  10: 340231.241 ops/s
# Warmup Iteration  11: 339059.421 ops/s
# Warmup Iteration  12: 338473.083 ops/s
# Warmup Iteration  13: 341780.115 ops/s
# Warmup Iteration  14: 341607.118 ops/s
# Warmup Iteration  15: 338987.647 ops/s
# Warmup Iteration  16: 339773.614 ops/s
# Warmup Iteration  17: 342101.830 ops/s
# Warmup Iteration  18: 341300.887 ops/s
# Warmup Iteration  19: 339641.644 ops/s
# Warmup Iteration  20: 341225.861 ops/s
# Warmup Iteration  21: 340883.335 ops/s
# Warmup Iteration  22: 342972.042 ops/s
# Warmup Iteration  23: 342476.798 ops/s
# Warmup Iteration  24: 341609.027 ops/s
# Warmup Iteration  25: 340399.930 ops/s
# Warmup Iteration  26: 340875.839 ops/s
# Warmup Iteration  27: 341695.270 ops/s
# Warmup Iteration  28: 343064.822 ops/s
# Warmup Iteration  29: 340908.720 ops/s
# Warmup Iteration  30: 341780.599 ops/s
Iteration   1: 341439.125 ops/s
Iteration   2: 342264.405 ops/s
Iteration   3: 342498.535 ops/s
Iteration   4: 340957.885 ops/s
Iteration   5: 343603.147 ops/s
Iteration   6: 341313.582 ops/s
Iteration   7: 341509.436 ops/s
Iteration   8: 342539.790 ops/s
Iteration   9: 342829.220 ops/s
Iteration  10: 342951.508 ops/s
Iteration  11: 343675.844 ops/s
Iteration  12: 342770.286 ops/s
Iteration  13: 342628.878 ops/s
Iteration  14: 341345.862 ops/s
Iteration  15: 341955.359 ops/s
Iteration  16: 342756.389 ops/s
Iteration  17: 340606.822 ops/s
Iteration  18: 342439.221 ops/s
Iteration  19: 343153.837 ops/s
Iteration  20: 341712.026 ops/s
Iteration  21: 341899.669 ops/s
Iteration  22: 340405.325 ops/s
Iteration  23: 339819.480 ops/s
Iteration  24: 340059.292 ops/s
Iteration  25: 337437.788 ops/s
Iteration  26: 340836.978 ops/s
Iteration  27: 339551.775 ops/s
Iteration  28: 340507.289 ops/s
Iteration  29: 341483.426 ops/s
Iteration  30: 339770.138 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_179._Benchmark.benchmark_Cluster_179":
  341557.411 ±(99.9%) 928.899 ops/s [Average]
  (min, avg, max) = (337437.788, 341557.411, 343675.844), stdev = 1390.333
  CI (99.9%): [340628.511, 342486.310] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_179._Benchmark.benchmark_Cluster_179  thrpt   30  341557.411 ± 928.899  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_18._Benchmark.benchmark_Cluster_18$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_18._Benchmark.benchmark_Cluster_18

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 79823.387 ops/s
# Warmup Iteration   2: 168781.838 ops/s
# Warmup Iteration   3: 201295.161 ops/s
# Warmup Iteration   4: 198902.069 ops/s
# Warmup Iteration   5: 220780.177 ops/s
# Warmup Iteration   6: 220560.371 ops/s
# Warmup Iteration   7: 221863.035 ops/s
# Warmup Iteration   8: 220450.465 ops/s
# Warmup Iteration   9: 220662.643 ops/s
# Warmup Iteration  10: 220982.946 ops/s
# Warmup Iteration  11: 221089.482 ops/s
# Warmup Iteration  12: 218940.965 ops/s
# Warmup Iteration  13: 221284.900 ops/s
# Warmup Iteration  14: 220590.138 ops/s
# Warmup Iteration  15: 219255.267 ops/s
# Warmup Iteration  16: 219910.045 ops/s
# Warmup Iteration  17: 229498.742 ops/s
# Warmup Iteration  18: 228544.328 ops/s
# Warmup Iteration  19: 228007.749 ops/s
# Warmup Iteration  20: 227845.845 ops/s
# Warmup Iteration  21: 229018.736 ops/s
# Warmup Iteration  22: 229289.024 ops/s
# Warmup Iteration  23: 229878.055 ops/s
# Warmup Iteration  24: 229498.934 ops/s
# Warmup Iteration  25: 228274.610 ops/s
# Warmup Iteration  26: 228201.572 ops/s
# Warmup Iteration  27: 228493.308 ops/s
# Warmup Iteration  28: 228300.676 ops/s
# Warmup Iteration  29: 229890.426 ops/s
# Warmup Iteration  30: 228530.401 ops/s
Iteration   1: 228543.163 ops/s
Iteration   2: 228415.122 ops/s
Iteration   3: 228522.116 ops/s
Iteration   4: 228252.541 ops/s
Iteration   5: 227245.909 ops/s
Iteration   6: 228232.431 ops/s
Iteration   7: 228033.739 ops/s
Iteration   8: 226100.256 ops/s
Iteration   9: 228668.279 ops/s
Iteration  10: 228716.718 ops/s
Iteration  11: 228436.788 ops/s
Iteration  12: 227338.112 ops/s
Iteration  13: 229040.825 ops/s
Iteration  14: 228869.870 ops/s
Iteration  15: 229093.460 ops/s
Iteration  16: 228335.474 ops/s
Iteration  17: 228718.529 ops/s
Iteration  18: 227638.953 ops/s
Iteration  19: 228613.817 ops/s
Iteration  20: 229221.191 ops/s
Iteration  21: 228065.562 ops/s
Iteration  22: 229755.237 ops/s
Iteration  23: 227752.494 ops/s
Iteration  24: 227651.077 ops/s
Iteration  25: 227567.330 ops/s
Iteration  26: 227221.005 ops/s
Iteration  27: 227986.369 ops/s
Iteration  28: 228185.986 ops/s
Iteration  29: 227019.466 ops/s
Iteration  30: 229685.673 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_18._Benchmark.benchmark_Cluster_18":
  228230.916 ±(99.9%) 534.906 ops/s [Average]
  (min, avg, max) = (226100.256, 228230.916, 229755.237), stdev = 800.622
  CI (99.9%): [227696.010, 228765.823] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_18._Benchmark.benchmark_Cluster_18  thrpt   30  228230.916 ± 534.906  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_180._Benchmark.benchmark_Cluster_180$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_180._Benchmark.benchmark_Cluster_180

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 159636.411 ops/s
# Warmup Iteration   2: 211705.665 ops/s
# Warmup Iteration   3: 210653.094 ops/s
# Warmup Iteration   4: 225697.140 ops/s
# Warmup Iteration   5: 227423.271 ops/s
# Warmup Iteration   6: 227457.446 ops/s
# Warmup Iteration   7: 227029.156 ops/s
# Warmup Iteration   8: 228554.330 ops/s
# Warmup Iteration   9: 227374.764 ops/s
# Warmup Iteration  10: 226828.429 ops/s
# Warmup Iteration  11: 227459.203 ops/s
# Warmup Iteration  12: 226811.905 ops/s
# Warmup Iteration  13: 227210.538 ops/s
# Warmup Iteration  14: 226619.153 ops/s
# Warmup Iteration  15: 225344.058 ops/s
# Warmup Iteration  16: 226037.205 ops/s
# Warmup Iteration  17: 238414.871 ops/s
# Warmup Iteration  18: 240204.866 ops/s
# Warmup Iteration  19: 240283.544 ops/s
# Warmup Iteration  20: 239301.900 ops/s
# Warmup Iteration  21: 238809.018 ops/s
# Warmup Iteration  22: 238951.224 ops/s
# Warmup Iteration  23: 239304.647 ops/s
# Warmup Iteration  24: 239276.665 ops/s
# Warmup Iteration  25: 238169.851 ops/s
# Warmup Iteration  26: 238881.700 ops/s
# Warmup Iteration  27: 238450.413 ops/s
# Warmup Iteration  28: 239622.700 ops/s
# Warmup Iteration  29: 240302.384 ops/s
# Warmup Iteration  30: 239168.454 ops/s
Iteration   1: 238478.796 ops/s
Iteration   2: 239246.039 ops/s
Iteration   3: 240789.896 ops/s
Iteration   4: 240434.399 ops/s
Iteration   5: 239280.733 ops/s
Iteration   6: 239129.866 ops/s
Iteration   7: 239625.916 ops/s
Iteration   8: 238872.955 ops/s
Iteration   9: 239185.296 ops/s
Iteration  10: 239177.574 ops/s
Iteration  11: 238932.035 ops/s
Iteration  12: 239790.926 ops/s
Iteration  13: 239291.583 ops/s
Iteration  14: 239589.227 ops/s
Iteration  15: 238061.203 ops/s
Iteration  16: 239191.462 ops/s
Iteration  17: 239051.321 ops/s
Iteration  18: 239476.118 ops/s
Iteration  19: 239180.404 ops/s
Iteration  20: 241050.511 ops/s
Iteration  21: 240176.890 ops/s
Iteration  22: 240229.112 ops/s
Iteration  23: 239830.797 ops/s
Iteration  24: 238361.638 ops/s
Iteration  25: 237502.473 ops/s
Iteration  26: 239568.418 ops/s
Iteration  27: 238430.626 ops/s
Iteration  28: 239695.656 ops/s
Iteration  29: 240175.561 ops/s
Iteration  30: 240123.796 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_180._Benchmark.benchmark_Cluster_180":
  239397.708 ±(99.9%) 524.560 ops/s [Average]
  (min, avg, max) = (237502.473, 239397.708, 241050.511), stdev = 785.137
  CI (99.9%): [238873.147, 239922.268] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_180._Benchmark.benchmark_Cluster_180  thrpt   30  239397.708 ± 524.560  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_181._Benchmark.benchmark_Cluster_181$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_181._Benchmark.benchmark_Cluster_181

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 30184.088 ops/s
# Warmup Iteration   2: 87397.625 ops/s
# Warmup Iteration   3: 115373.258 ops/s
# Warmup Iteration   4: 121110.837 ops/s
# Warmup Iteration   5: 136443.512 ops/s
# Warmup Iteration   6: 136907.759 ops/s
# Warmup Iteration   7: 136943.385 ops/s
# Warmup Iteration   8: 136564.555 ops/s
# Warmup Iteration   9: 137045.816 ops/s
# Warmup Iteration  10: 136621.268 ops/s
# Warmup Iteration  11: 137049.734 ops/s
# Warmup Iteration  12: 136143.189 ops/s
# Warmup Iteration  13: 136260.468 ops/s
# Warmup Iteration  14: 135993.866 ops/s
# Warmup Iteration  15: 135854.008 ops/s
# Warmup Iteration  16: 135879.582 ops/s
# Warmup Iteration  17: 139186.716 ops/s
# Warmup Iteration  18: 138619.612 ops/s
# Warmup Iteration  19: 139954.545 ops/s
# Warmup Iteration  20: 140175.432 ops/s
# Warmup Iteration  21: 140245.126 ops/s
# Warmup Iteration  22: 140214.691 ops/s
# Warmup Iteration  23: 140150.246 ops/s
# Warmup Iteration  24: 139963.002 ops/s
# Warmup Iteration  25: 139497.071 ops/s
# Warmup Iteration  26: 139342.478 ops/s
# Warmup Iteration  27: 141046.657 ops/s
# Warmup Iteration  28: 140099.080 ops/s
# Warmup Iteration  29: 140073.259 ops/s
# Warmup Iteration  30: 140596.349 ops/s
Iteration   1: 139897.314 ops/s
Iteration   2: 140410.743 ops/s
Iteration   3: 139442.094 ops/s
Iteration   4: 139542.369 ops/s
Iteration   5: 139749.887 ops/s
Iteration   6: 140099.339 ops/s
Iteration   7: 139495.175 ops/s
Iteration   8: 139789.144 ops/s
Iteration   9: 140184.671 ops/s
Iteration  10: 139742.284 ops/s
Iteration  11: 139719.249 ops/s
Iteration  12: 139490.264 ops/s
Iteration  13: 139874.942 ops/s
Iteration  14: 140269.906 ops/s
Iteration  15: 140356.963 ops/s
Iteration  16: 139744.388 ops/s
Iteration  17: 139335.357 ops/s
Iteration  18: 139527.021 ops/s
Iteration  19: 138311.975 ops/s
Iteration  20: 139949.899 ops/s
Iteration  21: 140203.889 ops/s
Iteration  22: 138977.332 ops/s
Iteration  23: 139073.306 ops/s
Iteration  24: 140025.276 ops/s
Iteration  25: 140069.875 ops/s
Iteration  26: 139565.415 ops/s
Iteration  27: 139400.319 ops/s
Iteration  28: 139738.727 ops/s
Iteration  29: 139010.947 ops/s
Iteration  30: 140060.964 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_181._Benchmark.benchmark_Cluster_181":
  139701.968 ±(99.9%) 308.801 ops/s [Average]
  (min, avg, max) = (138311.975, 139701.968, 140410.743), stdev = 462.198
  CI (99.9%): [139393.167, 140010.768] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_181._Benchmark.benchmark_Cluster_181  thrpt   30  139701.968 ± 308.801  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_182._Benchmark.benchmark_Cluster_182$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_182._Benchmark.benchmark_Cluster_182

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 36383.668 ops/s
# Warmup Iteration   2: 81121.321 ops/s
# Warmup Iteration   3: 99566.442 ops/s
# Warmup Iteration   4: 107708.240 ops/s
# Warmup Iteration   5: 132118.804 ops/s
# Warmup Iteration   6: 132280.324 ops/s
# Warmup Iteration   7: 131862.349 ops/s
# Warmup Iteration   8: 132283.773 ops/s
# Warmup Iteration   9: 132040.091 ops/s
# Warmup Iteration  10: 132039.657 ops/s
# Warmup Iteration  11: 131865.265 ops/s
# Warmup Iteration  12: 131549.551 ops/s
# Warmup Iteration  13: 131607.657 ops/s
# Warmup Iteration  14: 130986.475 ops/s
# Warmup Iteration  15: 132068.966 ops/s
# Warmup Iteration  16: 131218.565 ops/s
# Warmup Iteration  17: 134269.264 ops/s
# Warmup Iteration  18: 134493.943 ops/s
# Warmup Iteration  19: 135410.213 ops/s
# Warmup Iteration  20: 135148.941 ops/s
# Warmup Iteration  21: 135199.904 ops/s
# Warmup Iteration  22: 134690.462 ops/s
# Warmup Iteration  23: 134720.283 ops/s
# Warmup Iteration  24: 135329.249 ops/s
# Warmup Iteration  25: 135532.465 ops/s
# Warmup Iteration  26: 135316.424 ops/s
# Warmup Iteration  27: 135036.576 ops/s
# Warmup Iteration  28: 133563.280 ops/s
# Warmup Iteration  29: 134957.309 ops/s
# Warmup Iteration  30: 134469.014 ops/s
Iteration   1: 134889.722 ops/s
Iteration   2: 134863.151 ops/s
Iteration   3: 134730.168 ops/s
Iteration   4: 135130.008 ops/s
Iteration   5: 134686.714 ops/s
Iteration   6: 134336.682 ops/s
Iteration   7: 135167.914 ops/s
Iteration   8: 135066.419 ops/s
Iteration   9: 134769.318 ops/s
Iteration  10: 134877.804 ops/s
Iteration  11: 134861.646 ops/s
Iteration  12: 134362.585 ops/s
Iteration  13: 132967.188 ops/s
Iteration  14: 135216.932 ops/s
Iteration  15: 134251.688 ops/s
Iteration  16: 134755.501 ops/s
Iteration  17: 134297.735 ops/s
Iteration  18: 135350.825 ops/s
Iteration  19: 135692.848 ops/s
Iteration  20: 134362.346 ops/s
Iteration  21: 134080.430 ops/s
Iteration  22: 134689.635 ops/s
Iteration  23: 134176.787 ops/s
Iteration  24: 134383.801 ops/s
Iteration  25: 134970.815 ops/s
Iteration  26: 135346.866 ops/s
Iteration  27: 134712.703 ops/s
Iteration  28: 134573.263 ops/s
Iteration  29: 134524.874 ops/s
Iteration  30: 135009.304 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_182._Benchmark.benchmark_Cluster_182":
  134703.522 ±(99.9%) 338.882 ops/s [Average]
  (min, avg, max) = (132967.188, 134703.522, 135692.848), stdev = 507.222
  CI (99.9%): [134364.641, 135042.404] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_182._Benchmark.benchmark_Cluster_182  thrpt   30  134703.522 ± 338.882  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_183._Benchmark.benchmark_Cluster_183$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_183._Benchmark.benchmark_Cluster_183

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 64928.026 ops/s
# Warmup Iteration   2: 125720.152 ops/s
# Warmup Iteration   3: 153986.340 ops/s
# Warmup Iteration   4: 154475.369 ops/s
# Warmup Iteration   5: 155642.483 ops/s
# Warmup Iteration   6: 153597.007 ops/s
# Warmup Iteration   7: 154209.527 ops/s
# Warmup Iteration   8: 154181.656 ops/s
# Warmup Iteration   9: 154023.474 ops/s
# Warmup Iteration  10: 152909.310 ops/s
# Warmup Iteration  11: 153147.382 ops/s
# Warmup Iteration  12: 153174.668 ops/s
# Warmup Iteration  13: 154339.309 ops/s
# Warmup Iteration  14: 153199.827 ops/s
# Warmup Iteration  15: 154268.244 ops/s
# Warmup Iteration  16: 154320.608 ops/s
# Warmup Iteration  17: 159715.187 ops/s
# Warmup Iteration  18: 159733.818 ops/s
# Warmup Iteration  19: 160194.237 ops/s
# Warmup Iteration  20: 159967.629 ops/s
# Warmup Iteration  21: 160260.459 ops/s
# Warmup Iteration  22: 159647.069 ops/s
# Warmup Iteration  23: 160985.577 ops/s
# Warmup Iteration  24: 159720.454 ops/s
# Warmup Iteration  25: 160261.711 ops/s
# Warmup Iteration  26: 160103.660 ops/s
# Warmup Iteration  27: 160003.760 ops/s
# Warmup Iteration  28: 159870.934 ops/s
# Warmup Iteration  29: 159928.956 ops/s
# Warmup Iteration  30: 160265.420 ops/s
Iteration   1: 160472.615 ops/s
Iteration   2: 159372.297 ops/s
Iteration   3: 159519.065 ops/s
Iteration   4: 160863.609 ops/s
Iteration   5: 159347.011 ops/s
Iteration   6: 158700.055 ops/s
Iteration   7: 159961.711 ops/s
Iteration   8: 160185.237 ops/s
Iteration   9: 160244.504 ops/s
Iteration  10: 159404.952 ops/s
Iteration  11: 159417.494 ops/s
Iteration  12: 160981.073 ops/s
Iteration  13: 159439.181 ops/s
Iteration  14: 160420.318 ops/s
Iteration  15: 160622.818 ops/s
Iteration  16: 160134.744 ops/s
Iteration  17: 160945.432 ops/s
Iteration  18: 160011.804 ops/s
Iteration  19: 159732.575 ops/s
Iteration  20: 159523.528 ops/s
Iteration  21: 159893.024 ops/s
Iteration  22: 159616.787 ops/s
Iteration  23: 160167.630 ops/s
Iteration  24: 159266.564 ops/s
Iteration  25: 158508.828 ops/s
Iteration  26: 160746.853 ops/s
Iteration  27: 159661.141 ops/s
Iteration  28: 160769.762 ops/s
Iteration  29: 159992.607 ops/s
Iteration  30: 159791.512 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_183._Benchmark.benchmark_Cluster_183":
  159923.824 ±(99.9%) 423.179 ops/s [Average]
  (min, avg, max) = (158508.828, 159923.824, 160981.073), stdev = 633.395
  CI (99.9%): [159500.645, 160347.004] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_183._Benchmark.benchmark_Cluster_183  thrpt   30  159923.824 ± 423.179  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_184._Benchmark.benchmark_Cluster_184$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_184._Benchmark.benchmark_Cluster_184

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13369.238 ops/s
# Warmup Iteration   2: 67646.709 ops/s
# Warmup Iteration   3: 82533.286 ops/s
# Warmup Iteration   4: 93639.646 ops/s
# Warmup Iteration   5: 90344.253 ops/s
# Warmup Iteration   6: 108569.068 ops/s
# Warmup Iteration   7: 116960.948 ops/s
# Warmup Iteration   8: 119044.347 ops/s
# Warmup Iteration   9: 138634.949 ops/s
# Warmup Iteration  10: 142120.743 ops/s
# Warmup Iteration  11: 142271.172 ops/s
# Warmup Iteration  12: 140934.067 ops/s
# Warmup Iteration  13: 142744.530 ops/s
# Warmup Iteration  14: 142857.313 ops/s
# Warmup Iteration  15: 142322.570 ops/s
# Warmup Iteration  16: 142363.983 ops/s
# Warmup Iteration  17: 143583.133 ops/s
# Warmup Iteration  18: 143779.014 ops/s
# Warmup Iteration  19: 144329.712 ops/s
# Warmup Iteration  20: 143470.191 ops/s
# Warmup Iteration  21: 144089.540 ops/s
# Warmup Iteration  22: 143646.081 ops/s
# Warmup Iteration  23: 143366.813 ops/s
# Warmup Iteration  24: 143948.371 ops/s
# Warmup Iteration  25: 143908.742 ops/s
# Warmup Iteration  26: 143797.855 ops/s
# Warmup Iteration  27: 143156.148 ops/s
# Warmup Iteration  28: 143989.793 ops/s
# Warmup Iteration  29: 144323.158 ops/s
# Warmup Iteration  30: 143971.566 ops/s
Iteration   1: 143558.478 ops/s
Iteration   2: 143009.272 ops/s
Iteration   3: 143544.895 ops/s
Iteration   4: 144167.497 ops/s
Iteration   5: 141935.089 ops/s
Iteration   6: 144003.854 ops/s
Iteration   7: 143635.339 ops/s
Iteration   8: 144494.774 ops/s
Iteration   9: 143964.932 ops/s
Iteration  10: 143511.149 ops/s
Iteration  11: 144392.354 ops/s
Iteration  12: 143930.075 ops/s
Iteration  13: 143453.492 ops/s
Iteration  14: 144723.441 ops/s
Iteration  15: 143678.895 ops/s
Iteration  16: 143619.027 ops/s
Iteration  17: 142989.730 ops/s
Iteration  18: 143688.467 ops/s
Iteration  19: 143600.136 ops/s
Iteration  20: 143585.504 ops/s
Iteration  21: 143832.739 ops/s
Iteration  22: 143087.747 ops/s
Iteration  23: 142721.733 ops/s
Iteration  24: 144662.972 ops/s
Iteration  25: 143443.652 ops/s
Iteration  26: 144436.180 ops/s
Iteration  27: 144575.140 ops/s
Iteration  28: 143620.659 ops/s
Iteration  29: 143518.973 ops/s
Iteration  30: 143316.452 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_184._Benchmark.benchmark_Cluster_184":
  143690.088 ±(99.9%) 405.780 ops/s [Average]
  (min, avg, max) = (141935.089, 143690.088, 144723.441), stdev = 607.353
  CI (99.9%): [143284.308, 144095.868] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_184._Benchmark.benchmark_Cluster_184  thrpt   30  143690.088 ± 405.780  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_185._Benchmark.benchmark_Cluster_185$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_185._Benchmark.benchmark_Cluster_185

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 24348.125 ops/s
# Warmup Iteration   2: 60737.198 ops/s
# Warmup Iteration   3: 74991.423 ops/s
# Warmup Iteration   4: 88747.380 ops/s
# Warmup Iteration   5: 99373.053 ops/s
# Warmup Iteration   6: 102450.670 ops/s
# Warmup Iteration   7: 102431.731 ops/s
# Warmup Iteration   8: 101525.226 ops/s
# Warmup Iteration   9: 101876.416 ops/s
# Warmup Iteration  10: 102088.550 ops/s
# Warmup Iteration  11: 102143.303 ops/s
# Warmup Iteration  12: 102549.030 ops/s
# Warmup Iteration  13: 102088.359 ops/s
# Warmup Iteration  14: 102687.391 ops/s
# Warmup Iteration  15: 103173.104 ops/s
# Warmup Iteration  16: 102133.939 ops/s
# Warmup Iteration  17: 103379.072 ops/s
# Warmup Iteration  18: 103284.054 ops/s
# Warmup Iteration  19: 102977.398 ops/s
# Warmup Iteration  20: 102795.179 ops/s
# Warmup Iteration  21: 103506.629 ops/s
# Warmup Iteration  22: 103515.163 ops/s
# Warmup Iteration  23: 103153.479 ops/s
# Warmup Iteration  24: 102922.138 ops/s
# Warmup Iteration  25: 103652.520 ops/s
# Warmup Iteration  26: 103175.688 ops/s
# Warmup Iteration  27: 102896.856 ops/s
# Warmup Iteration  28: 102854.818 ops/s
# Warmup Iteration  29: 103451.448 ops/s
# Warmup Iteration  30: 102187.869 ops/s
Iteration   1: 102673.377 ops/s
Iteration   2: 102797.618 ops/s
Iteration   3: 102833.953 ops/s
Iteration   4: 103309.345 ops/s
Iteration   5: 103099.617 ops/s
Iteration   6: 103448.932 ops/s
Iteration   7: 103299.591 ops/s
Iteration   8: 102988.581 ops/s
Iteration   9: 103067.805 ops/s
Iteration  10: 103568.045 ops/s
Iteration  11: 103015.217 ops/s
Iteration  12: 102282.430 ops/s
Iteration  13: 103149.314 ops/s
Iteration  14: 103387.545 ops/s
Iteration  15: 102863.714 ops/s
Iteration  16: 102883.848 ops/s
Iteration  17: 103009.712 ops/s
Iteration  18: 103711.218 ops/s
Iteration  19: 102899.625 ops/s
Iteration  20: 103297.588 ops/s
Iteration  21: 103281.291 ops/s
Iteration  22: 102849.340 ops/s
Iteration  23: 103720.459 ops/s
Iteration  24: 102521.736 ops/s
Iteration  25: 102957.632 ops/s
Iteration  26: 102321.061 ops/s
Iteration  27: 102954.759 ops/s
Iteration  28: 102896.938 ops/s
Iteration  29: 102984.180 ops/s
Iteration  30: 103121.652 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_185._Benchmark.benchmark_Cluster_185":
  103039.871 ±(99.9%) 232.641 ops/s [Average]
  (min, avg, max) = (102282.430, 103039.871, 103720.459), stdev = 348.206
  CI (99.9%): [102807.230, 103272.512] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_185._Benchmark.benchmark_Cluster_185  thrpt   30  103039.871 ± 232.641  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_186._Benchmark.benchmark_Cluster_186$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_186._Benchmark.benchmark_Cluster_186

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3589.231 ops/s
# Warmup Iteration   2: 57965.811 ops/s
# Warmup Iteration   3: 72001.684 ops/s
# Warmup Iteration   4: 98172.894 ops/s
# Warmup Iteration   5: 111831.062 ops/s
# Warmup Iteration   6: 111517.535 ops/s
# Warmup Iteration   7: 112128.331 ops/s
# Warmup Iteration   8: 111886.827 ops/s
# Warmup Iteration   9: 111992.021 ops/s
# Warmup Iteration  10: 111377.361 ops/s
# Warmup Iteration  11: 111160.544 ops/s
# Warmup Iteration  12: 111357.327 ops/s
# Warmup Iteration  13: 111009.537 ops/s
# Warmup Iteration  14: 110479.339 ops/s
# Warmup Iteration  15: 110781.005 ops/s
# Warmup Iteration  16: 111163.690 ops/s
# Warmup Iteration  17: 112247.476 ops/s
# Warmup Iteration  18: 111768.884 ops/s
# Warmup Iteration  19: 112315.216 ops/s
# Warmup Iteration  20: 111694.777 ops/s
# Warmup Iteration  21: 112353.712 ops/s
# Warmup Iteration  22: 112022.355 ops/s
# Warmup Iteration  23: 111638.461 ops/s
# Warmup Iteration  24: 111798.597 ops/s
# Warmup Iteration  25: 112533.492 ops/s
# Warmup Iteration  26: 112576.794 ops/s
# Warmup Iteration  27: 112331.035 ops/s
# Warmup Iteration  28: 112608.970 ops/s
# Warmup Iteration  29: 112499.079 ops/s
# Warmup Iteration  30: 112325.380 ops/s
Iteration   1: 111947.921 ops/s
Iteration   2: 112506.594 ops/s
Iteration   3: 112516.494 ops/s
Iteration   4: 112266.332 ops/s
Iteration   5: 112093.262 ops/s
Iteration   6: 112478.484 ops/s
Iteration   7: 112520.176 ops/s
Iteration   8: 111200.384 ops/s
Iteration   9: 111822.208 ops/s
Iteration  10: 112265.609 ops/s
Iteration  11: 112116.074 ops/s
Iteration  12: 110214.183 ops/s
Iteration  13: 111922.428 ops/s
Iteration  14: 111888.689 ops/s
Iteration  15: 112490.712 ops/s
Iteration  16: 111956.656 ops/s
Iteration  17: 111546.182 ops/s
Iteration  18: 112098.750 ops/s
Iteration  19: 112312.778 ops/s
Iteration  20: 112696.334 ops/s
Iteration  21: 111995.057 ops/s
Iteration  22: 111948.790 ops/s
Iteration  23: 111169.009 ops/s
Iteration  24: 112256.944 ops/s
Iteration  25: 112422.778 ops/s
Iteration  26: 112269.789 ops/s
Iteration  27: 111987.626 ops/s
Iteration  28: 112001.169 ops/s
Iteration  29: 111876.253 ops/s
Iteration  30: 112713.579 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_186._Benchmark.benchmark_Cluster_186":
  112050.041 ±(99.9%) 341.331 ops/s [Average]
  (min, avg, max) = (110214.183, 112050.041, 112713.579), stdev = 510.889
  CI (99.9%): [111708.710, 112391.373] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_186._Benchmark.benchmark_Cluster_186  thrpt   30  112050.041 ± 341.331  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_187._Benchmark.benchmark_Cluster_187$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_187._Benchmark.benchmark_Cluster_187

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7463.226 ops/s
# Warmup Iteration   2: 78782.802 ops/s
# Warmup Iteration   3: 99372.975 ops/s
# Warmup Iteration   4: 123250.015 ops/s
# Warmup Iteration   5: 132951.204 ops/s
# Warmup Iteration   6: 144248.810 ops/s
# Warmup Iteration   7: 144305.193 ops/s
# Warmup Iteration   8: 143652.186 ops/s
# Warmup Iteration   9: 143562.654 ops/s
# Warmup Iteration  10: 143357.677 ops/s
# Warmup Iteration  11: 143364.767 ops/s
# Warmup Iteration  12: 143559.880 ops/s
# Warmup Iteration  13: 143390.577 ops/s
# Warmup Iteration  14: 143190.939 ops/s
# Warmup Iteration  15: 143021.438 ops/s
# Warmup Iteration  16: 143360.846 ops/s
# Warmup Iteration  17: 145251.670 ops/s
# Warmup Iteration  18: 144475.255 ops/s
# Warmup Iteration  19: 144381.725 ops/s
# Warmup Iteration  20: 143931.011 ops/s
# Warmup Iteration  21: 145067.814 ops/s
# Warmup Iteration  22: 144965.064 ops/s
# Warmup Iteration  23: 144289.333 ops/s
# Warmup Iteration  24: 144042.755 ops/s
# Warmup Iteration  25: 144883.100 ops/s
# Warmup Iteration  26: 144940.198 ops/s
# Warmup Iteration  27: 144910.099 ops/s
# Warmup Iteration  28: 144837.674 ops/s
# Warmup Iteration  29: 144504.104 ops/s
# Warmup Iteration  30: 144283.971 ops/s
Iteration   1: 144891.128 ops/s
Iteration   2: 144068.626 ops/s
Iteration   3: 143662.237 ops/s
Iteration   4: 144326.656 ops/s
Iteration   5: 144207.053 ops/s
Iteration   6: 144334.491 ops/s
Iteration   7: 144724.228 ops/s
Iteration   8: 144757.976 ops/s
Iteration   9: 144472.799 ops/s
Iteration  10: 143782.875 ops/s
Iteration  11: 144543.073 ops/s
Iteration  12: 144558.784 ops/s
Iteration  13: 144078.440 ops/s
Iteration  14: 144660.873 ops/s
Iteration  15: 143450.627 ops/s
Iteration  16: 144372.971 ops/s
Iteration  17: 143578.725 ops/s
Iteration  18: 144448.132 ops/s
Iteration  19: 143555.016 ops/s
Iteration  20: 144075.939 ops/s
Iteration  21: 144323.835 ops/s
Iteration  22: 143986.289 ops/s
Iteration  23: 143039.895 ops/s
Iteration  24: 145139.705 ops/s
Iteration  25: 144424.556 ops/s
Iteration  26: 144217.215 ops/s
Iteration  27: 144445.743 ops/s
Iteration  28: 144412.572 ops/s
Iteration  29: 144639.679 ops/s
Iteration  30: 144097.401 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_187._Benchmark.benchmark_Cluster_187":
  144242.585 ±(99.9%) 308.734 ops/s [Average]
  (min, avg, max) = (143039.895, 144242.585, 145139.705), stdev = 462.099
  CI (99.9%): [143933.851, 144551.319] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_187._Benchmark.benchmark_Cluster_187  thrpt   30  144242.585 ± 308.734  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_188._Benchmark.benchmark_Cluster_188$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_188._Benchmark.benchmark_Cluster_188

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9269.565 ops/s
# Warmup Iteration   2: 90729.159 ops/s
# Warmup Iteration   3: 143526.904 ops/s
# Warmup Iteration   4: 165370.693 ops/s
# Warmup Iteration   5: 182917.189 ops/s
# Warmup Iteration   6: 183668.886 ops/s
# Warmup Iteration   7: 183532.646 ops/s
# Warmup Iteration   8: 183716.516 ops/s
# Warmup Iteration   9: 183083.317 ops/s
# Warmup Iteration  10: 181985.052 ops/s
# Warmup Iteration  11: 180382.949 ops/s
# Warmup Iteration  12: 182471.575 ops/s
# Warmup Iteration  13: 182096.860 ops/s
# Warmup Iteration  14: 183069.595 ops/s
# Warmup Iteration  15: 182095.264 ops/s
# Warmup Iteration  16: 182590.034 ops/s
# Warmup Iteration  17: 181697.206 ops/s
# Warmup Iteration  18: 182392.750 ops/s
# Warmup Iteration  19: 182348.366 ops/s
# Warmup Iteration  20: 181682.354 ops/s
# Warmup Iteration  21: 182518.185 ops/s
# Warmup Iteration  22: 181827.999 ops/s
# Warmup Iteration  23: 182655.232 ops/s
# Warmup Iteration  24: 183176.731 ops/s
# Warmup Iteration  25: 182578.115 ops/s
# Warmup Iteration  26: 182736.046 ops/s
# Warmup Iteration  27: 182576.167 ops/s
# Warmup Iteration  28: 182437.328 ops/s
# Warmup Iteration  29: 182682.738 ops/s
# Warmup Iteration  30: 182894.883 ops/s
Iteration   1: 183470.815 ops/s
Iteration   2: 182591.350 ops/s
Iteration   3: 182402.341 ops/s
Iteration   4: 182579.718 ops/s
Iteration   5: 182984.953 ops/s
Iteration   6: 182815.694 ops/s
Iteration   7: 183074.841 ops/s
Iteration   8: 182744.179 ops/s
Iteration   9: 182231.374 ops/s
Iteration  10: 182697.936 ops/s
Iteration  11: 182792.259 ops/s
Iteration  12: 181628.829 ops/s
Iteration  13: 182080.531 ops/s
Iteration  14: 181628.391 ops/s
Iteration  15: 182436.172 ops/s
Iteration  16: 183305.554 ops/s
Iteration  17: 182528.125 ops/s
Iteration  18: 181808.815 ops/s
Iteration  19: 182698.188 ops/s
Iteration  20: 182864.222 ops/s
Iteration  21: 181829.242 ops/s
Iteration  22: 180996.718 ops/s
Iteration  23: 182552.529 ops/s
Iteration  24: 182102.283 ops/s
Iteration  25: 182523.960 ops/s
Iteration  26: 182233.719 ops/s
Iteration  27: 182118.851 ops/s
Iteration  28: 181881.687 ops/s
Iteration  29: 182105.555 ops/s
Iteration  30: 182276.268 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_188._Benchmark.benchmark_Cluster_188":
  182399.503 ±(99.9%) 356.542 ops/s [Average]
  (min, avg, max) = (180996.718, 182399.503, 183470.815), stdev = 533.656
  CI (99.9%): [182042.961, 182756.045] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_188._Benchmark.benchmark_Cluster_188  thrpt   30  182399.503 ± 356.542  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_189._Benchmark.benchmark_Cluster_189$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_189._Benchmark.benchmark_Cluster_189

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 52634.106 ops/s
# Warmup Iteration   2: 109649.844 ops/s
# Warmup Iteration   3: 123149.654 ops/s
# Warmup Iteration   4: 131839.665 ops/s
# Warmup Iteration   5: 133218.444 ops/s
# Warmup Iteration   6: 133576.520 ops/s
# Warmup Iteration   7: 133117.932 ops/s
# Warmup Iteration   8: 132955.785 ops/s
# Warmup Iteration   9: 132510.038 ops/s
# Warmup Iteration  10: 132837.054 ops/s
# Warmup Iteration  11: 133078.048 ops/s
# Warmup Iteration  12: 132363.609 ops/s
# Warmup Iteration  13: 132672.051 ops/s
# Warmup Iteration  14: 132836.829 ops/s
# Warmup Iteration  15: 132156.040 ops/s
# Warmup Iteration  16: 131321.759 ops/s
# Warmup Iteration  17: 137351.859 ops/s
# Warmup Iteration  18: 136727.489 ops/s
# Warmup Iteration  19: 137060.001 ops/s
# Warmup Iteration  20: 136385.628 ops/s
# Warmup Iteration  21: 135939.538 ops/s
# Warmup Iteration  22: 136285.291 ops/s
# Warmup Iteration  23: 136128.497 ops/s
# Warmup Iteration  24: 136237.367 ops/s
# Warmup Iteration  25: 136679.535 ops/s
# Warmup Iteration  26: 136293.272 ops/s
# Warmup Iteration  27: 136377.757 ops/s
# Warmup Iteration  28: 136230.007 ops/s
# Warmup Iteration  29: 136116.226 ops/s
# Warmup Iteration  30: 136512.247 ops/s
Iteration   1: 136487.764 ops/s
Iteration   2: 136938.732 ops/s
Iteration   3: 137422.093 ops/s
Iteration   4: 136893.960 ops/s
Iteration   5: 136854.266 ops/s
Iteration   6: 136462.119 ops/s
Iteration   7: 136504.312 ops/s
Iteration   8: 136698.174 ops/s
Iteration   9: 136814.136 ops/s
Iteration  10: 137622.360 ops/s
Iteration  11: 137264.161 ops/s
Iteration  12: 136680.227 ops/s
Iteration  13: 137157.178 ops/s
Iteration  14: 136950.623 ops/s
Iteration  15: 136589.369 ops/s
Iteration  16: 136827.661 ops/s
Iteration  17: 101841.748 ops/s
Iteration  18: 101468.716 ops/s
Iteration  19: 103159.840 ops/s
Iteration  20: 98548.420 ops/s
Iteration  21: 105048.401 ops/s
Iteration  22: 100868.211 ops/s
Iteration  23: 97600.928 ops/s
Iteration  24: 103218.308 ops/s
Iteration  25: 98973.108 ops/s
Iteration  26: 103122.634 ops/s
Iteration  27: 102392.598 ops/s
Iteration  28: 100541.141 ops/s
Iteration  29: 101576.472 ops/s
Iteration  30: 103220.927 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_189._Benchmark.benchmark_Cluster_189":
  120391.620 ±(99.9%) 12019.261 ops/s [Average]
  (min, avg, max) = (97600.928, 120391.620, 137622.360), stdev = 17989.865
  CI (99.9%): [108372.359, 132410.880] (assumes normal distribution)


# Run complete. Total time: 00:01:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score       Error  Units
Cluster_189._Benchmark.benchmark_Cluster_189  thrpt   30  120391.620 ± 12019.261  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_19._Benchmark.benchmark_Cluster_19$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_19._Benchmark.benchmark_Cluster_19

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6358.811 ops/s
# Warmup Iteration   2: 35747.849 ops/s
# Warmup Iteration   3: 39864.697 ops/s
# Warmup Iteration   4: 38159.718 ops/s
# Warmup Iteration   5: 42834.419 ops/s
# Warmup Iteration   6: 91284.865 ops/s
# Warmup Iteration   7: 105925.910 ops/s
# Warmup Iteration   8: 106857.354 ops/s
# Warmup Iteration   9: 107659.939 ops/s
# Warmup Iteration  10: 106558.533 ops/s
# Warmup Iteration  11: 106050.773 ops/s
# Warmup Iteration  12: 109362.474 ops/s
# Warmup Iteration  13: 106815.952 ops/s
# Warmup Iteration  14: 105139.174 ops/s
# Warmup Iteration  15: 103198.605 ops/s
# Warmup Iteration  16: 104576.569 ops/s
# Warmup Iteration  17: 107325.384 ops/s
# Warmup Iteration  18: 111735.963 ops/s
# Warmup Iteration  19: 108848.988 ops/s
# Warmup Iteration  20: 112502.536 ops/s
# Warmup Iteration  21: 115948.566 ops/s
# Warmup Iteration  22: 108333.216 ops/s
# Warmup Iteration  23: 114918.770 ops/s
# Warmup Iteration  24: 109066.311 ops/s
# Warmup Iteration  25: 113883.655 ops/s
# Warmup Iteration  26: 108538.934 ops/s
# Warmup Iteration  27: 112405.209 ops/s
# Warmup Iteration  28: 110640.530 ops/s
# Warmup Iteration  29: 111527.287 ops/s
# Warmup Iteration  30: 113252.110 ops/s
Iteration   1: 110141.644 ops/s
Iteration   2: 112081.108 ops/s
Iteration   3: 108744.205 ops/s
Iteration   4: 111043.686 ops/s
Iteration   5: 112925.301 ops/s
Iteration   6: 108933.988 ops/s
Iteration   7: 113424.744 ops/s
Iteration   8: 103523.210 ops/s
Iteration   9: 113342.521 ops/s
Iteration  10: 109307.717 ops/s
Iteration  11: 105336.423 ops/s
Iteration  12: 113891.541 ops/s
Iteration  13: 108352.267 ops/s
Iteration  14: 108597.741 ops/s
Iteration  15: 107754.348 ops/s
Iteration  16: 113886.907 ops/s
Iteration  17: 110428.266 ops/s
Iteration  18: 111300.081 ops/s
Iteration  19: 110009.154 ops/s
Iteration  20: 110145.761 ops/s
Iteration  21: 116788.972 ops/s
Iteration  22: 108425.964 ops/s
Iteration  23: 114228.051 ops/s
Iteration  24: 109262.237 ops/s
Iteration  25: 110695.046 ops/s
Iteration  26: 115273.252 ops/s
Iteration  27: 107335.961 ops/s
Iteration  28: 114210.828 ops/s
Iteration  29: 104836.462 ops/s
Iteration  30: 96053.835 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_19._Benchmark.benchmark_Cluster_19":
  110009.374 ±(99.9%) 2737.669 ops/s [Average]
  (min, avg, max) = (96053.835, 110009.374, 116788.972), stdev = 4097.614
  CI (99.9%): [107271.705, 112747.043] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_19._Benchmark.benchmark_Cluster_19  thrpt   30  110009.374 ± 2737.669  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_190._Benchmark.benchmark_Cluster_190$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_190._Benchmark.benchmark_Cluster_190

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 26819.939 ops/s
# Warmup Iteration   2: 78576.733 ops/s
# Warmup Iteration   3: 157296.293 ops/s
# Warmup Iteration   4: 161683.839 ops/s
# Warmup Iteration   5: 168698.521 ops/s
# Warmup Iteration   6: 162155.348 ops/s
# Warmup Iteration   7: 165685.711 ops/s
# Warmup Iteration   8: 172421.730 ops/s
# Warmup Iteration   9: 159747.424 ops/s
# Warmup Iteration  10: 160623.288 ops/s
# Warmup Iteration  11: 175160.103 ops/s
# Warmup Iteration  12: 174369.590 ops/s
# Warmup Iteration  13: 163116.773 ops/s
# Warmup Iteration  14: 171784.191 ops/s
# Warmup Iteration  15: 161102.249 ops/s
# Warmup Iteration  16: 163406.889 ops/s
# Warmup Iteration  17: 179797.246 ops/s
# Warmup Iteration  18: 167877.106 ops/s
# Warmup Iteration  19: 179319.688 ops/s
# Warmup Iteration  20: 171018.443 ops/s
# Warmup Iteration  21: 175672.496 ops/s
# Warmup Iteration  22: 175853.707 ops/s
# Warmup Iteration  23: 164589.120 ops/s
# Warmup Iteration  24: 174386.377 ops/s
# Warmup Iteration  25: 162087.548 ops/s
# Warmup Iteration  26: 173402.262 ops/s
# Warmup Iteration  27: 176609.677 ops/s
# Warmup Iteration  28: 171206.467 ops/s
# Warmup Iteration  29: 178298.125 ops/s
# Warmup Iteration  30: 177189.291 ops/s
Iteration   1: 168985.739 ops/s
Iteration   2: 173636.711 ops/s
Iteration   3: 165133.054 ops/s
Iteration   4: 172687.522 ops/s
Iteration   5: 181536.026 ops/s
Iteration   6: 159052.807 ops/s
Iteration   7: 186013.348 ops/s
Iteration   8: 174625.819 ops/s
Iteration   9: 169485.598 ops/s
Iteration  10: 180476.826 ops/s
Iteration  11: 174422.108 ops/s
Iteration  12: 181314.337 ops/s
Iteration  13: 167621.071 ops/s
Iteration  14: 170411.737 ops/s
Iteration  15: 174988.492 ops/s
Iteration  16: 180407.718 ops/s
Iteration  17: 166889.901 ops/s
Iteration  18: 180283.579 ops/s
Iteration  19: 176522.387 ops/s
Iteration  20: 172271.848 ops/s
Iteration  21: 172307.402 ops/s
Iteration  22: 177452.275 ops/s
Iteration  23: 176021.291 ops/s
Iteration  24: 172581.206 ops/s
Iteration  25: 175810.841 ops/s
Iteration  26: 177512.221 ops/s
Iteration  27: 170928.405 ops/s
Iteration  28: 179236.383 ops/s
Iteration  29: 173346.544 ops/s
Iteration  30: 169545.693 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_190._Benchmark.benchmark_Cluster_190":
  174050.296 ±(99.9%) 3793.808 ops/s [Average]
  (min, avg, max) = (159052.807, 174050.296, 186013.348), stdev = 5678.393
  CI (99.9%): [170256.488, 177844.104] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_190._Benchmark.benchmark_Cluster_190  thrpt   30  174050.296 ± 3793.808  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_191._Benchmark.benchmark_Cluster_191$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_191._Benchmark.benchmark_Cluster_191

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1386.954 ops/s
# Warmup Iteration   2: 18400.963 ops/s
# Warmup Iteration   3: 26326.244 ops/s
# Warmup Iteration   4: 37812.156 ops/s
# Warmup Iteration   5: 31546.160 ops/s
# Warmup Iteration   6: 69483.493 ops/s
# Warmup Iteration   7: 94089.112 ops/s
# Warmup Iteration   8: 95118.433 ops/s
# Warmup Iteration   9: 97003.116 ops/s
# Warmup Iteration  10: 94808.359 ops/s
# Warmup Iteration  11: 82741.091 ops/s
# Warmup Iteration  12: 94956.376 ops/s
# Warmup Iteration  13: 96161.224 ops/s
# Warmup Iteration  14: 94363.042 ops/s
# Warmup Iteration  15: 97607.379 ops/s
# Warmup Iteration  16: 93291.820 ops/s
# Warmup Iteration  17: 98080.516 ops/s
# Warmup Iteration  18: 98356.916 ops/s
# Warmup Iteration  19: 96948.357 ops/s
# Warmup Iteration  20: 102222.021 ops/s
# Warmup Iteration  21: 96330.697 ops/s
# Warmup Iteration  22: 95641.778 ops/s
# Warmup Iteration  23: 96390.493 ops/s
# Warmup Iteration  24: 98117.097 ops/s
# Warmup Iteration  25: 96223.821 ops/s
# Warmup Iteration  26: 91874.375 ops/s
# Warmup Iteration  27: 101336.342 ops/s
# Warmup Iteration  28: 93673.384 ops/s
# Warmup Iteration  29: 101214.893 ops/s
# Warmup Iteration  30: 100740.261 ops/s
Iteration   1: 96093.670 ops/s
Iteration   2: 96275.170 ops/s
Iteration   3: 95075.193 ops/s
Iteration   4: 98122.891 ops/s
Iteration   5: 99921.068 ops/s
Iteration   6: 95417.067 ops/s
Iteration   7: 100111.071 ops/s
Iteration   8: 99361.922 ops/s
Iteration   9: 96199.345 ops/s
Iteration  10: 101515.472 ops/s
Iteration  11: 95058.497 ops/s
Iteration  12: 97798.623 ops/s
Iteration  13: 96075.351 ops/s
Iteration  14: 95484.223 ops/s
Iteration  15: 97316.513 ops/s
Iteration  16: 96897.715 ops/s
Iteration  17: 98798.436 ops/s
Iteration  18: 98945.161 ops/s
Iteration  19: 95492.572 ops/s
Iteration  20: 98763.654 ops/s
Iteration  21: 95683.982 ops/s
Iteration  22: 101694.206 ops/s
Iteration  23: 95477.067 ops/s
Iteration  24: 98964.061 ops/s
Iteration  25: 78109.615 ops/s
Iteration  26: 97722.559 ops/s
Iteration  27: 97783.425 ops/s
Iteration  28: 94294.426 ops/s
Iteration  29: 94339.495 ops/s
Iteration  30: 99546.087 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_191._Benchmark.benchmark_Cluster_191":
  96744.618 ±(99.9%) 2719.727 ops/s [Average]
  (min, avg, max) = (78109.615, 96744.618, 101694.206), stdev = 4070.759
  CI (99.9%): [94024.891, 99464.345] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_191._Benchmark.benchmark_Cluster_191  thrpt   30  96744.618 ± 2719.727  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_192._Benchmark.benchmark_Cluster_192$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_192._Benchmark.benchmark_Cluster_192

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4426.558 ops/s
# Warmup Iteration   2: 27565.762 ops/s
# Warmup Iteration   3: 29877.702 ops/s
# Warmup Iteration   4: 40609.721 ops/s
# Warmup Iteration   5: 49803.682 ops/s
# Warmup Iteration   6: 78674.762 ops/s
# Warmup Iteration   7: 92556.013 ops/s
# Warmup Iteration   8: 93282.247 ops/s
# Warmup Iteration   9: 94031.884 ops/s
# Warmup Iteration  10: 94982.035 ops/s
# Warmup Iteration  11: 95340.817 ops/s
# Warmup Iteration  12: 91894.306 ops/s
# Warmup Iteration  13: 98625.104 ops/s
# Warmup Iteration  14: 91242.311 ops/s
# Warmup Iteration  15: 95382.348 ops/s
# Warmup Iteration  16: 91630.225 ops/s
# Warmup Iteration  17: 102471.639 ops/s
# Warmup Iteration  18: 102434.210 ops/s
# Warmup Iteration  19: 97968.707 ops/s
# Warmup Iteration  20: 100438.098 ops/s
# Warmup Iteration  21: 101842.227 ops/s
# Warmup Iteration  22: 93683.068 ops/s
# Warmup Iteration  23: 102888.166 ops/s
# Warmup Iteration  24: 94854.942 ops/s
# Warmup Iteration  25: 100584.367 ops/s
# Warmup Iteration  26: 97575.802 ops/s
# Warmup Iteration  27: 101009.599 ops/s
# Warmup Iteration  28: 101581.673 ops/s
# Warmup Iteration  29: 97740.089 ops/s
# Warmup Iteration  30: 100633.300 ops/s
Iteration   1: 100699.036 ops/s
Iteration   2: 99115.571 ops/s
Iteration   3: 99819.851 ops/s
Iteration   4: 98344.979 ops/s
Iteration   5: 99326.424 ops/s
Iteration   6: 104598.974 ops/s
Iteration   7: 102353.631 ops/s
Iteration   8: 99042.900 ops/s
Iteration   9: 97881.451 ops/s
Iteration  10: 100051.524 ops/s
Iteration  11: 99276.443 ops/s
Iteration  12: 103607.845 ops/s
Iteration  13: 99210.979 ops/s
Iteration  14: 96144.715 ops/s
Iteration  15: 98923.127 ops/s
Iteration  16: 98656.475 ops/s
Iteration  17: 102201.309 ops/s
Iteration  18: 99143.413 ops/s
Iteration  19: 99819.356 ops/s
Iteration  20: 102560.973 ops/s
Iteration  21: 100533.034 ops/s
Iteration  22: 98054.474 ops/s
Iteration  23: 105983.637 ops/s
Iteration  24: 97259.586 ops/s
Iteration  25: 101784.724 ops/s
Iteration  26: 96299.527 ops/s
Iteration  27: 99371.657 ops/s
Iteration  28: 102786.064 ops/s
Iteration  29: 102414.946 ops/s
Iteration  30: 96710.648 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_192._Benchmark.benchmark_Cluster_192":
  100065.909 ±(99.9%) 1616.162 ops/s [Average]
  (min, avg, max) = (96144.715, 100065.909, 105983.637), stdev = 2418.996
  CI (99.9%): [98449.747, 101682.071] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_192._Benchmark.benchmark_Cluster_192  thrpt   30  100065.909 ± 1616.162  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_193._Benchmark.benchmark_Cluster_193$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_193._Benchmark.benchmark_Cluster_193

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19051.519 ops/s
# Warmup Iteration   2: 59212.763 ops/s
# Warmup Iteration   3: 107669.064 ops/s
# Warmup Iteration   4: 126706.382 ops/s
# Warmup Iteration   5: 123835.593 ops/s
# Warmup Iteration   6: 128926.183 ops/s
# Warmup Iteration   7: 132337.014 ops/s
# Warmup Iteration   8: 140294.778 ops/s
# Warmup Iteration   9: 130257.669 ops/s
# Warmup Iteration  10: 131828.606 ops/s
# Warmup Iteration  11: 134569.294 ops/s
# Warmup Iteration  12: 131756.386 ops/s
# Warmup Iteration  13: 135917.876 ops/s
# Warmup Iteration  14: 128644.693 ops/s
# Warmup Iteration  15: 130967.021 ops/s
# Warmup Iteration  16: 132418.173 ops/s
# Warmup Iteration  17: 145439.194 ops/s
# Warmup Iteration  18: 146105.580 ops/s
# Warmup Iteration  19: 132215.941 ops/s
# Warmup Iteration  20: 139328.309 ops/s
# Warmup Iteration  21: 134772.457 ops/s
# Warmup Iteration  22: 134670.083 ops/s
# Warmup Iteration  23: 137955.293 ops/s
# Warmup Iteration  24: 142207.673 ops/s
# Warmup Iteration  25: 145719.843 ops/s
# Warmup Iteration  26: 133265.054 ops/s
# Warmup Iteration  27: 143698.166 ops/s
# Warmup Iteration  28: 146660.542 ops/s
# Warmup Iteration  29: 139968.050 ops/s
# Warmup Iteration  30: 142265.852 ops/s
Iteration   1: 138286.964 ops/s
Iteration   2: 142362.271 ops/s
Iteration   3: 138685.088 ops/s
Iteration   4: 143704.873 ops/s
Iteration   5: 138235.063 ops/s
Iteration   6: 137362.379 ops/s
Iteration   7: 144276.089 ops/s
Iteration   8: 135066.804 ops/s
Iteration   9: 138206.037 ops/s
Iteration  10: 145656.562 ops/s
Iteration  11: 138213.068 ops/s
Iteration  12: 144468.570 ops/s
Iteration  13: 135657.611 ops/s
Iteration  14: 144282.491 ops/s
Iteration  15: 141022.267 ops/s
Iteration  16: 136452.911 ops/s
Iteration  17: 143729.465 ops/s
Iteration  18: 140913.419 ops/s
Iteration  19: 110423.022 ops/s
Iteration  20: 144602.254 ops/s
Iteration  21: 138366.167 ops/s
Iteration  22: 142371.992 ops/s
Iteration  23: 135379.431 ops/s
Iteration  24: 144845.823 ops/s
Iteration  25: 141414.827 ops/s
Iteration  26: 140152.780 ops/s
Iteration  27: 143410.316 ops/s
Iteration  28: 137555.474 ops/s
Iteration  29: 138700.352 ops/s
Iteration  30: 138652.162 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_193._Benchmark.benchmark_Cluster_193":
  139415.218 ±(99.9%) 4230.230 ops/s [Average]
  (min, avg, max) = (110423.022, 139415.218, 145656.562), stdev = 6331.610
  CI (99.9%): [135184.988, 143645.448] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_193._Benchmark.benchmark_Cluster_193  thrpt   30  139415.218 ± 4230.230  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_194._Benchmark.benchmark_Cluster_194$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_194._Benchmark.benchmark_Cluster_194

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1490.684 ops/s
# Warmup Iteration   2: 16320.479 ops/s
# Warmup Iteration   3: 24181.802 ops/s
# Warmup Iteration   4: 29644.926 ops/s
# Warmup Iteration   5: 24510.939 ops/s
# Warmup Iteration   6: 23963.213 ops/s
# Warmup Iteration   7: 26141.083 ops/s
# Warmup Iteration   8: 46259.079 ops/s
# Warmup Iteration   9: 96815.432 ops/s
# Warmup Iteration  10: 104483.303 ops/s
# Warmup Iteration  11: 105201.578 ops/s
# Warmup Iteration  12: 107588.978 ops/s
# Warmup Iteration  13: 108248.339 ops/s
# Warmup Iteration  14: 110553.760 ops/s
# Warmup Iteration  15: 110459.553 ops/s
# Warmup Iteration  16: 111823.558 ops/s
# Warmup Iteration  17: 109455.709 ops/s
# Warmup Iteration  18: 112894.516 ops/s
# Warmup Iteration  19: 114205.796 ops/s
# Warmup Iteration  20: 112891.346 ops/s
# Warmup Iteration  21: 118005.048 ops/s
# Warmup Iteration  22: 110997.276 ops/s
# Warmup Iteration  23: 108334.741 ops/s
# Warmup Iteration  24: 109234.457 ops/s
# Warmup Iteration  25: 113795.752 ops/s
# Warmup Iteration  26: 119402.536 ops/s
# Warmup Iteration  27: 110190.250 ops/s
# Warmup Iteration  28: 113687.423 ops/s
# Warmup Iteration  29: 117922.069 ops/s
# Warmup Iteration  30: 108899.140 ops/s
Iteration   1: 117766.887 ops/s
Iteration   2: 110843.344 ops/s
Iteration   3: 114000.041 ops/s
Iteration   4: 119082.260 ops/s
Iteration   5: 113247.725 ops/s
Iteration   6: 115862.274 ops/s
Iteration   7: 113551.165 ops/s
Iteration   8: 117539.863 ops/s
Iteration   9: 111671.081 ops/s
Iteration  10: 112507.300 ops/s
Iteration  11: 114112.869 ops/s
Iteration  12: 119752.316 ops/s
Iteration  13: 109775.922 ops/s
Iteration  14: 112889.525 ops/s
Iteration  15: 114334.483 ops/s
Iteration  16: 112070.933 ops/s
Iteration  17: 114791.178 ops/s
Iteration  18: 116411.037 ops/s
Iteration  19: 109089.820 ops/s
Iteration  20: 120314.665 ops/s
Iteration  21: 111245.997 ops/s
Iteration  22: 115743.168 ops/s
Iteration  23: 115916.437 ops/s
Iteration  24: 113342.791 ops/s
Iteration  25: 118281.809 ops/s
Iteration  26: 115416.012 ops/s
Iteration  27: 112406.065 ops/s
Iteration  28: 115915.049 ops/s
Iteration  29: 113736.258 ops/s
Iteration  30: 114869.448 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_194._Benchmark.benchmark_Cluster_194":
  114549.591 ±(99.9%) 1897.330 ops/s [Average]
  (min, avg, max) = (109089.820, 114549.591, 120314.665), stdev = 2839.835
  CI (99.9%): [112652.261, 116446.921] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_194._Benchmark.benchmark_Cluster_194  thrpt   30  114549.591 ± 1897.330  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_195._Benchmark.benchmark_Cluster_195$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_195._Benchmark.benchmark_Cluster_195

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 56418.729 ops/s
# Warmup Iteration   2: 160921.583 ops/s
# Warmup Iteration   3: 169692.051 ops/s
# Warmup Iteration   4: 169363.091 ops/s
# Warmup Iteration   5: 176626.310 ops/s
# Warmup Iteration   6: 171190.287 ops/s
# Warmup Iteration   7: 171822.331 ops/s
# Warmup Iteration   8: 165964.602 ops/s
# Warmup Iteration   9: 180246.386 ops/s
# Warmup Iteration  10: 181633.364 ops/s
# Warmup Iteration  11: 169686.114 ops/s
# Warmup Iteration  12: 178402.271 ops/s
# Warmup Iteration  13: 180832.187 ops/s
# Warmup Iteration  14: 170938.341 ops/s
# Warmup Iteration  15: 180319.446 ops/s
# Warmup Iteration  16: 173342.986 ops/s
# Warmup Iteration  17: 185025.027 ops/s
# Warmup Iteration  18: 191038.719 ops/s
# Warmup Iteration  19: 183318.719 ops/s
# Warmup Iteration  20: 188688.364 ops/s
# Warmup Iteration  21: 177894.251 ops/s
# Warmup Iteration  22: 185878.619 ops/s
# Warmup Iteration  23: 184223.188 ops/s
# Warmup Iteration  24: 179374.500 ops/s
# Warmup Iteration  25: 190090.468 ops/s
# Warmup Iteration  26: 184576.586 ops/s
# Warmup Iteration  27: 190110.330 ops/s
# Warmup Iteration  28: 182312.564 ops/s
# Warmup Iteration  29: 189257.834 ops/s
# Warmup Iteration  30: 188301.095 ops/s
Iteration   1: 186378.861 ops/s
Iteration   2: 189628.267 ops/s
Iteration   3: 176455.742 ops/s
Iteration   4: 194083.716 ops/s
Iteration   5: 182048.166 ops/s
Iteration   6: 185237.468 ops/s
Iteration   7: 194037.905 ops/s
Iteration   8: 185453.895 ops/s
Iteration   9: 196428.788 ops/s
Iteration  10: 186825.338 ops/s
Iteration  11: 178348.497 ops/s
Iteration  12: 195053.782 ops/s
Iteration  13: 136988.294 ops/s
Iteration  14: 184093.904 ops/s
Iteration  15: 184864.009 ops/s
Iteration  16: 193106.653 ops/s
Iteration  17: 180189.431 ops/s
Iteration  18: 189037.181 ops/s
Iteration  19: 184538.885 ops/s
Iteration  20: 189600.846 ops/s
Iteration  21: 187214.221 ops/s
Iteration  22: 183294.440 ops/s
Iteration  23: 197723.821 ops/s
Iteration  24: 180128.446 ops/s
Iteration  25: 194273.747 ops/s
Iteration  26: 192009.394 ops/s
Iteration  27: 182039.232 ops/s
Iteration  28: 189909.294 ops/s
Iteration  29: 186621.379 ops/s
Iteration  30: 187746.827 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_195._Benchmark.benchmark_Cluster_195":
  185778.681 ±(99.9%) 7164.386 ops/s [Average]
  (min, avg, max) = (136988.294, 185778.681, 197723.821), stdev = 10723.317
  CI (99.9%): [178614.295, 192943.067] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_195._Benchmark.benchmark_Cluster_195  thrpt   30  185778.681 ± 7164.386  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_196._Benchmark.benchmark_Cluster_196$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_196._Benchmark.benchmark_Cluster_196

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1565.015 ops/s
# Warmup Iteration   2: 14062.225 ops/s
# Warmup Iteration   3: 26740.705 ops/s
# Warmup Iteration   4: 30631.716 ops/s
# Warmup Iteration   5: 40651.672 ops/s
# Warmup Iteration   6: 38112.702 ops/s
# Warmup Iteration   7: 33126.776 ops/s
# Warmup Iteration   8: 30224.586 ops/s
# Warmup Iteration   9: 36831.956 ops/s
# Warmup Iteration  10: 33027.319 ops/s
# Warmup Iteration  11: 37286.969 ops/s
# Warmup Iteration  12: 41097.877 ops/s
# Warmup Iteration  13: 41360.053 ops/s
# Warmup Iteration  14: 37282.527 ops/s
# Warmup Iteration  15: 87863.017 ops/s
# Warmup Iteration  16: 89799.875 ops/s
# Warmup Iteration  17: 96600.068 ops/s
# Warmup Iteration  18: 90139.560 ops/s
# Warmup Iteration  19: 97511.109 ops/s
# Warmup Iteration  20: 94461.505 ops/s
# Warmup Iteration  21: 92415.184 ops/s
# Warmup Iteration  22: 97533.593 ops/s
# Warmup Iteration  23: 92511.765 ops/s
# Warmup Iteration  24: 91903.672 ops/s
# Warmup Iteration  25: 95718.563 ops/s
# Warmup Iteration  26: 94296.204 ops/s
# Warmup Iteration  27: 89170.012 ops/s
# Warmup Iteration  28: 96887.634 ops/s
# Warmup Iteration  29: 92794.526 ops/s
# Warmup Iteration  30: 91431.688 ops/s
Iteration   1: 94477.754 ops/s
Iteration   2: 86639.767 ops/s
Iteration   3: 94039.858 ops/s
Iteration   4: 98316.711 ops/s
Iteration   5: 94622.735 ops/s
Iteration   6: 95206.252 ops/s
Iteration   7: 96169.065 ops/s
Iteration   8: 92816.832 ops/s
Iteration   9: 94282.195 ops/s
Iteration  10: 93189.931 ops/s
Iteration  11: 92172.205 ops/s
Iteration  12: 100294.692 ops/s
Iteration  13: 92582.965 ops/s
Iteration  14: 97685.373 ops/s
Iteration  15: 95289.263 ops/s
Iteration  16: 92745.921 ops/s
Iteration  17: 97773.626 ops/s
Iteration  18: 93353.901 ops/s
Iteration  19: 96856.248 ops/s
Iteration  20: 95592.008 ops/s
Iteration  21: 96107.880 ops/s
Iteration  22: 92435.855 ops/s
Iteration  23: 94372.951 ops/s
Iteration  24: 94582.875 ops/s
Iteration  25: 94377.166 ops/s
Iteration  26: 98323.379 ops/s
Iteration  27: 92821.553 ops/s
Iteration  28: 97901.073 ops/s
Iteration  29: 91650.646 ops/s
Iteration  30: 94731.486 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_196._Benchmark.benchmark_Cluster_196":
  94713.739 ±(99.9%) 1765.224 ops/s [Average]
  (min, avg, max) = (86639.767, 94713.739, 100294.692), stdev = 2642.105
  CI (99.9%): [92948.514, 96478.963] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_196._Benchmark.benchmark_Cluster_196  thrpt   30  94713.739 ± 1765.224  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_197._Benchmark.benchmark_Cluster_197$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_197._Benchmark.benchmark_Cluster_197

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 49386.501 ops/s
# Warmup Iteration   2: 130190.208 ops/s
# Warmup Iteration   3: 346193.357 ops/s
# Warmup Iteration   4: 379106.379 ops/s
# Warmup Iteration   5: 382677.710 ops/s
# Warmup Iteration   6: 394440.675 ops/s
# Warmup Iteration   7: 358161.302 ops/s
# Warmup Iteration   8: 377743.434 ops/s
# Warmup Iteration   9: 400488.918 ops/s
# Warmup Iteration  10: 380773.547 ops/s
# Warmup Iteration  11: 392586.082 ops/s
# Warmup Iteration  12: 396503.332 ops/s
# Warmup Iteration  13: 371613.180 ops/s
# Warmup Iteration  14: 387425.847 ops/s
# Warmup Iteration  15: 381520.736 ops/s
# Warmup Iteration  16: 396876.124 ops/s
# Warmup Iteration  17: 381652.958 ops/s
# Warmup Iteration  18: 390049.015 ops/s
# Warmup Iteration  19: 407599.788 ops/s
# Warmup Iteration  20: 378885.768 ops/s
# Warmup Iteration  21: 397060.595 ops/s
# Warmup Iteration  22: 376932.137 ops/s
# Warmup Iteration  23: 408404.720 ops/s
# Warmup Iteration  24: 384819.890 ops/s
# Warmup Iteration  25: 373234.614 ops/s
# Warmup Iteration  26: 395682.533 ops/s
# Warmup Iteration  27: 398267.649 ops/s
# Warmup Iteration  28: 406290.847 ops/s
# Warmup Iteration  29: 385175.902 ops/s
# Warmup Iteration  30: 405517.169 ops/s
Iteration   1: 375609.870 ops/s
Iteration   2: 409216.966 ops/s
Iteration   3: 391337.839 ops/s
Iteration   4: 390030.210 ops/s
Iteration   5: 413515.734 ops/s
Iteration   6: 385631.400 ops/s
Iteration   7: 332725.875 ops/s
Iteration   8: 387889.352 ops/s
Iteration   9: 417122.529 ops/s
Iteration  10: 393527.724 ops/s
Iteration  11: 412450.708 ops/s
Iteration  12: 400820.940 ops/s
Iteration  13: 391262.750 ops/s
Iteration  14: 413716.669 ops/s
Iteration  15: 407249.109 ops/s
Iteration  16: 387561.405 ops/s
Iteration  17: 404663.562 ops/s
Iteration  18: 405064.370 ops/s
Iteration  19: 388695.319 ops/s
Iteration  20: 404601.198 ops/s
Iteration  21: 419674.306 ops/s
Iteration  22: 381675.109 ops/s
Iteration  23: 400895.908 ops/s
Iteration  24: 390686.970 ops/s
Iteration  25: 396865.013 ops/s
Iteration  26: 398881.599 ops/s
Iteration  27: 401106.982 ops/s
Iteration  28: 403301.564 ops/s
Iteration  29: 396204.791 ops/s
Iteration  30: 415955.946 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_197._Benchmark.benchmark_Cluster_197":
  397264.724 ±(99.9%) 11064.048 ops/s [Average]
  (min, avg, max) = (332725.875, 397264.724, 419674.306), stdev = 16560.147
  CI (99.9%): [386200.676, 408328.772] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score       Error  Units
Cluster_197._Benchmark.benchmark_Cluster_197  thrpt   30  397264.724 ± 11064.048  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_198._Benchmark.benchmark_Cluster_198$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_198._Benchmark.benchmark_Cluster_198

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4243.850 ops/s
# Warmup Iteration   2: 21129.330 ops/s
# Warmup Iteration   3: 33037.899 ops/s
# Warmup Iteration   4: 37614.769 ops/s
# Warmup Iteration   5: 46899.834 ops/s
# Warmup Iteration   6: 39335.281 ops/s
# Warmup Iteration   7: 40855.550 ops/s
# Warmup Iteration   8: 90658.847 ops/s
# Warmup Iteration   9: 101588.501 ops/s
# Warmup Iteration  10: 99529.725 ops/s
# Warmup Iteration  11: 99371.125 ops/s
# Warmup Iteration  12: 103896.444 ops/s
# Warmup Iteration  13: 98217.330 ops/s
# Warmup Iteration  14: 103106.603 ops/s
# Warmup Iteration  15: 98849.499 ops/s
# Warmup Iteration  16: 102475.030 ops/s
# Warmup Iteration  17: 101975.702 ops/s
# Warmup Iteration  18: 94321.882 ops/s
# Warmup Iteration  19: 110641.685 ops/s
# Warmup Iteration  20: 100681.021 ops/s
# Warmup Iteration  21: 106737.482 ops/s
# Warmup Iteration  22: 101596.284 ops/s
# Warmup Iteration  23: 105022.849 ops/s
# Warmup Iteration  24: 107721.604 ops/s
# Warmup Iteration  25: 102843.939 ops/s
# Warmup Iteration  26: 103750.060 ops/s
# Warmup Iteration  27: 102646.102 ops/s
# Warmup Iteration  28: 103996.246 ops/s
# Warmup Iteration  29: 103342.488 ops/s
# Warmup Iteration  30: 109150.972 ops/s
Iteration   1: 103457.423 ops/s
Iteration   2: 106644.118 ops/s
Iteration   3: 105036.039 ops/s
Iteration   4: 107202.608 ops/s
Iteration   5: 104046.833 ops/s
Iteration   6: 104584.264 ops/s
Iteration   7: 109949.621 ops/s
Iteration   8: 103941.770 ops/s
Iteration   9: 110445.748 ops/s
Iteration  10: 100644.841 ops/s
Iteration  11: 108636.589 ops/s
Iteration  12: 107318.930 ops/s
Iteration  13: 104929.104 ops/s
Iteration  14: 101853.822 ops/s
Iteration  15: 106627.341 ops/s
Iteration  16: 109227.767 ops/s
Iteration  17: 105894.280 ops/s
Iteration  18: 105279.566 ops/s
Iteration  19: 104880.960 ops/s
Iteration  20: 108244.160 ops/s
Iteration  21: 110234.237 ops/s
Iteration  22: 101373.276 ops/s
Iteration  23: 108212.692 ops/s
Iteration  24: 106111.290 ops/s
Iteration  25: 105446.166 ops/s
Iteration  26: 110292.618 ops/s
Iteration  27: 100625.750 ops/s
Iteration  28: 108695.039 ops/s
Iteration  29: 104540.191 ops/s
Iteration  30: 107172.059 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_198._Benchmark.benchmark_Cluster_198":
  106051.637 ±(99.9%) 1883.833 ops/s [Average]
  (min, avg, max) = (100625.750, 106051.637, 110445.748), stdev = 2819.633
  CI (99.9%): [104167.803, 107935.470] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_198._Benchmark.benchmark_Cluster_198  thrpt   30  106051.637 ± 1883.833  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_199._Benchmark.benchmark_Cluster_199$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_199._Benchmark.benchmark_Cluster_199

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3751.684 ops/s
# Warmup Iteration   2: 26861.189 ops/s
# Warmup Iteration   3: 43265.989 ops/s
# Warmup Iteration   4: 72181.951 ops/s
# Warmup Iteration   5: 104426.207 ops/s
# Warmup Iteration   6: 109043.967 ops/s
# Warmup Iteration   7: 102560.277 ops/s
# Warmup Iteration   8: 103896.949 ops/s
# Warmup Iteration   9: 105049.329 ops/s
# Warmup Iteration  10: 103390.393 ops/s
# Warmup Iteration  11: 103278.006 ops/s
# Warmup Iteration  12: 106618.441 ops/s
# Warmup Iteration  13: 112761.709 ops/s
# Warmup Iteration  14: 104786.986 ops/s
# Warmup Iteration  15: 111797.376 ops/s
# Warmup Iteration  16: 105259.427 ops/s
# Warmup Iteration  17: 115636.471 ops/s
# Warmup Iteration  18: 114624.842 ops/s
# Warmup Iteration  19: 111786.536 ops/s
# Warmup Iteration  20: 115465.782 ops/s
# Warmup Iteration  21: 117588.033 ops/s
# Warmup Iteration  22: 116118.567 ops/s
# Warmup Iteration  23: 111198.650 ops/s
# Warmup Iteration  24: 113074.605 ops/s
# Warmup Iteration  25: 114926.748 ops/s
# Warmup Iteration  26: 113504.315 ops/s
# Warmup Iteration  27: 115462.834 ops/s
# Warmup Iteration  28: 115039.888 ops/s
# Warmup Iteration  29: 112590.755 ops/s
# Warmup Iteration  30: 116538.798 ops/s
Iteration   1: 80788.785 ops/s
Iteration   2: 120061.641 ops/s
Iteration   3: 112474.233 ops/s
Iteration   4: 110740.490 ops/s
Iteration   5: 115086.064 ops/s
Iteration   6: 113245.164 ops/s
Iteration   7: 120191.450 ops/s
Iteration   8: 119034.347 ops/s
Iteration   9: 110080.628 ops/s
Iteration  10: 117039.930 ops/s
Iteration  11: 113773.027 ops/s
Iteration  12: 116701.713 ops/s
Iteration  13: 115397.256 ops/s
Iteration  14: 114005.698 ops/s
Iteration  15: 115706.244 ops/s
Iteration  16: 111901.712 ops/s
Iteration  17: 114804.116 ops/s
Iteration  18: 113909.835 ops/s
Iteration  19: 114378.251 ops/s
Iteration  20: 118992.667 ops/s
Iteration  21: 114081.427 ops/s
Iteration  22: 113923.906 ops/s
Iteration  23: 115096.094 ops/s
Iteration  24: 112946.313 ops/s
Iteration  25: 117166.111 ops/s
Iteration  26: 108572.730 ops/s
Iteration  27: 118289.969 ops/s
Iteration  28: 113006.040 ops/s
Iteration  29: 114855.963 ops/s
Iteration  30: 118935.170 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_199._Benchmark.benchmark_Cluster_199":
  113839.566 ±(99.9%) 4593.045 ops/s [Average]
  (min, avg, max) = (80788.785, 113839.566, 120191.450), stdev = 6874.653
  CI (99.9%): [109246.521, 118432.610] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_199._Benchmark.benchmark_Cluster_199  thrpt   30  113839.566 ± 4593.045  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_2._Benchmark.benchmark_Cluster_2$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_2._Benchmark.benchmark_Cluster_2

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 22709.883 ops/s
# Warmup Iteration   2: 79526.694 ops/s
# Warmup Iteration   3: 152713.314 ops/s
# Warmup Iteration   4: 160859.146 ops/s
# Warmup Iteration   5: 166311.735 ops/s
# Warmup Iteration   6: 163051.381 ops/s
# Warmup Iteration   7: 174873.377 ops/s
# Warmup Iteration   8: 163007.780 ops/s
# Warmup Iteration   9: 172360.171 ops/s
# Warmup Iteration  10: 172217.055 ops/s
# Warmup Iteration  11: 162433.697 ops/s
# Warmup Iteration  12: 172106.982 ops/s
# Warmup Iteration  13: 167040.677 ops/s
# Warmup Iteration  14: 172237.376 ops/s
# Warmup Iteration  15: 173720.807 ops/s
# Warmup Iteration  16: 163044.772 ops/s
# Warmup Iteration  17: 178796.351 ops/s
# Warmup Iteration  18: 180970.646 ops/s
# Warmup Iteration  19: 170673.148 ops/s
# Warmup Iteration  20: 173522.687 ops/s
# Warmup Iteration  21: 177355.496 ops/s
# Warmup Iteration  22: 175863.074 ops/s
# Warmup Iteration  23: 177763.813 ops/s
# Warmup Iteration  24: 175472.078 ops/s
# Warmup Iteration  25: 170738.191 ops/s
# Warmup Iteration  26: 183812.852 ops/s
# Warmup Iteration  27: 168989.140 ops/s
# Warmup Iteration  28: 186654.457 ops/s
# Warmup Iteration  29: 170968.213 ops/s
# Warmup Iteration  30: 176928.597 ops/s
Iteration   1: 181682.704 ops/s
Iteration   2: 175110.888 ops/s
Iteration   3: 176752.201 ops/s
Iteration   4: 170916.460 ops/s
Iteration   5: 179034.309 ops/s
Iteration   6: 172664.575 ops/s
Iteration   7: 176438.991 ops/s
Iteration   8: 171865.262 ops/s
Iteration   9: 172024.262 ops/s
Iteration  10: 185129.666 ops/s
Iteration  11: 170900.541 ops/s
Iteration  12: 178699.804 ops/s
Iteration  13: 173208.403 ops/s
Iteration  14: 180356.411 ops/s
Iteration  15: 176170.613 ops/s
Iteration  16: 175117.774 ops/s
Iteration  17: 181236.243 ops/s
Iteration  18: 172968.727 ops/s
Iteration  19: 174716.319 ops/s
Iteration  20: 177517.118 ops/s
Iteration  21: 172599.181 ops/s
Iteration  22: 177639.082 ops/s
Iteration  23: 175637.833 ops/s
Iteration  24: 178289.528 ops/s
Iteration  25: 173133.888 ops/s
Iteration  26: 177632.353 ops/s
Iteration  27: 174430.132 ops/s
Iteration  28: 174480.845 ops/s
Iteration  29: 177372.986 ops/s
Iteration  30: 175869.657 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_2._Benchmark.benchmark_Cluster_2":
  175986.558 ±(99.9%) 2270.336 ops/s [Average]
  (min, avg, max) = (170900.541, 175986.558, 185129.666), stdev = 3398.133
  CI (99.9%): [173716.222, 178256.895] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score      Error  Units
Cluster_2._Benchmark.benchmark_Cluster_2  thrpt   30  175986.558 ± 2270.336  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_20._Benchmark.benchmark_Cluster_20$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_20._Benchmark.benchmark_Cluster_20

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11750.956 ops/s
# Warmup Iteration   2: 31406.380 ops/s
# Warmup Iteration   3: 54124.908 ops/s
# Warmup Iteration   4: 63922.852 ops/s
# Warmup Iteration   5: 93169.749 ops/s
# Warmup Iteration   6: 93965.829 ops/s
# Warmup Iteration   7: 94961.785 ops/s
# Warmup Iteration   8: 100197.659 ops/s
# Warmup Iteration   9: 93150.182 ops/s
# Warmup Iteration  10: 96887.594 ops/s
# Warmup Iteration  11: 96591.648 ops/s
# Warmup Iteration  12: 94674.402 ops/s
# Warmup Iteration  13: 97167.652 ops/s
# Warmup Iteration  14: 95553.338 ops/s
# Warmup Iteration  15: 98790.985 ops/s
# Warmup Iteration  16: 94781.148 ops/s
# Warmup Iteration  17: 105807.275 ops/s
# Warmup Iteration  18: 97015.901 ops/s
# Warmup Iteration  19: 102624.108 ops/s
# Warmup Iteration  20: 102532.172 ops/s
# Warmup Iteration  21: 98089.724 ops/s
# Warmup Iteration  22: 103631.345 ops/s
# Warmup Iteration  23: 98597.683 ops/s
# Warmup Iteration  24: 99580.787 ops/s
# Warmup Iteration  25: 83946.915 ops/s
# Warmup Iteration  26: 101072.196 ops/s
# Warmup Iteration  27: 102113.521 ops/s
# Warmup Iteration  28: 99256.033 ops/s
# Warmup Iteration  29: 101569.166 ops/s
# Warmup Iteration  30: 98701.309 ops/s
Iteration   1: 100997.996 ops/s
Iteration   2: 103773.136 ops/s
Iteration   3: 99934.114 ops/s
Iteration   4: 103006.431 ops/s
Iteration   5: 98232.881 ops/s
Iteration   6: 101545.755 ops/s
Iteration   7: 100373.677 ops/s
Iteration   8: 100767.215 ops/s
Iteration   9: 100502.186 ops/s
Iteration  10: 102284.125 ops/s
Iteration  11: 102663.829 ops/s
Iteration  12: 98120.099 ops/s
Iteration  13: 102606.569 ops/s
Iteration  14: 98096.160 ops/s
Iteration  15: 97578.642 ops/s
Iteration  16: 105607.344 ops/s
Iteration  17: 98592.935 ops/s
Iteration  18: 102850.270 ops/s
Iteration  19: 97006.547 ops/s
Iteration  20: 102060.960 ops/s
Iteration  21: 97137.037 ops/s
Iteration  22: 99669.881 ops/s
Iteration  23: 100685.001 ops/s
Iteration  24: 98806.708 ops/s
Iteration  25: 104324.230 ops/s
Iteration  26: 96604.666 ops/s
Iteration  27: 101157.980 ops/s
Iteration  28: 101031.572 ops/s
Iteration  29: 97449.834 ops/s
Iteration  30: 101391.225 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_20._Benchmark.benchmark_Cluster_20":
  100495.300 ±(99.9%) 1576.958 ops/s [Average]
  (min, avg, max) = (96604.666, 100495.300, 105607.344), stdev = 2360.317
  CI (99.9%): [98918.342, 102072.258] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_20._Benchmark.benchmark_Cluster_20  thrpt   30  100495.300 ± 1576.958  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_200._Benchmark.benchmark_Cluster_200$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_200._Benchmark.benchmark_Cluster_200

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1794.566 ops/s
# Warmup Iteration   2: 5511.158 ops/s
# Warmup Iteration   3: 5259.500 ops/s
# Warmup Iteration   4: 12085.691 ops/s
# Warmup Iteration   5: 22992.166 ops/s
# Warmup Iteration   6: 16785.790 ops/s
# Warmup Iteration   7: 19857.993 ops/s
# Warmup Iteration   8: 20821.836 ops/s
# Warmup Iteration   9: 20641.402 ops/s
# Warmup Iteration  10: 23152.472 ops/s
# Warmup Iteration  11: 23284.224 ops/s
# Warmup Iteration  12: 26235.118 ops/s
# Warmup Iteration  13: 23221.617 ops/s
# Warmup Iteration  14: 21620.658 ops/s
# Warmup Iteration  15: 23305.010 ops/s
# Warmup Iteration  16: 22885.193 ops/s
# Warmup Iteration  17: 20212.460 ops/s
# Warmup Iteration  18: 21410.403 ops/s
# Warmup Iteration  19: 23518.458 ops/s
# Warmup Iteration  20: 25101.600 ops/s
# Warmup Iteration  21: 22518.634 ops/s
# Warmup Iteration  22: 22134.739 ops/s
# Warmup Iteration  23: 23194.769 ops/s
# Warmup Iteration  24: 22066.146 ops/s
# Warmup Iteration  25: 22730.829 ops/s
# Warmup Iteration  26: 24498.524 ops/s
# Warmup Iteration  27: 20889.848 ops/s
# Warmup Iteration  28: 23434.243 ops/s
# Warmup Iteration  29: 21647.847 ops/s
# Warmup Iteration  30: 22761.110 ops/s
Iteration   1: 23485.135 ops/s
Iteration   2: 21138.404 ops/s
Iteration   3: 24032.271 ops/s
Iteration   4: 23250.277 ops/s
Iteration   5: 21374.867 ops/s
Iteration   6: 21781.300 ops/s
Iteration   7: 23536.497 ops/s
Iteration   8: 23977.921 ops/s
Iteration   9: 22608.010 ops/s
Iteration  10: 20982.030 ops/s
Iteration  11: 23479.034 ops/s
Iteration  12: 21956.153 ops/s
Iteration  13: 22241.044 ops/s
Iteration  14: 21494.568 ops/s
Iteration  15: 22327.679 ops/s
Iteration  16: 21438.765 ops/s
Iteration  17: 23589.353 ops/s
Iteration  18: 21819.022 ops/s
Iteration  19: 21765.355 ops/s
Iteration  20: 22371.279 ops/s
Iteration  21: 21454.540 ops/s
Iteration  22: 23319.601 ops/s
Iteration  23: 23174.374 ops/s
Iteration  24: 21527.178 ops/s
Iteration  25: 21641.662 ops/s
Iteration  26: 23214.453 ops/s
Iteration  27: 22093.274 ops/s
Iteration  28: 22736.109 ops/s
Iteration  29: 22078.690 ops/s
Iteration  30: 22655.559 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_200._Benchmark.benchmark_Cluster_200":
  22418.147 ±(99.9%) 600.430 ops/s [Average]
  (min, avg, max) = (20982.030, 22418.147, 24032.271), stdev = 898.695
  CI (99.9%): [21817.717, 23018.577] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_200._Benchmark.benchmark_Cluster_200  thrpt   30  22418.147 ± 600.430  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_201._Benchmark.benchmark_Cluster_201$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_201._Benchmark.benchmark_Cluster_201

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2610.076 ops/s
# Warmup Iteration   2: 23990.315 ops/s
# Warmup Iteration   3: 32423.079 ops/s
# Warmup Iteration   4: 37968.277 ops/s
# Warmup Iteration   5: 52094.362 ops/s
# Warmup Iteration   6: 32010.490 ops/s
# Warmup Iteration   7: 57095.457 ops/s
# Warmup Iteration   8: 96271.108 ops/s
# Warmup Iteration   9: 100224.954 ops/s
# Warmup Iteration  10: 98870.966 ops/s
# Warmup Iteration  11: 104737.908 ops/s
# Warmup Iteration  12: 104199.980 ops/s
# Warmup Iteration  13: 97959.875 ops/s
# Warmup Iteration  14: 106472.198 ops/s
# Warmup Iteration  15: 100920.291 ops/s
# Warmup Iteration  16: 109045.901 ops/s
# Warmup Iteration  17: 106322.985 ops/s
# Warmup Iteration  18: 84273.755 ops/s
# Warmup Iteration  19: 112569.567 ops/s
# Warmup Iteration  20: 106889.901 ops/s
# Warmup Iteration  21: 109924.246 ops/s
# Warmup Iteration  22: 105118.340 ops/s
# Warmup Iteration  23: 107741.272 ops/s
# Warmup Iteration  24: 107944.267 ops/s
# Warmup Iteration  25: 109304.275 ops/s
# Warmup Iteration  26: 104481.877 ops/s
# Warmup Iteration  27: 107989.898 ops/s
# Warmup Iteration  28: 111857.557 ops/s
# Warmup Iteration  29: 105062.036 ops/s
# Warmup Iteration  30: 110968.870 ops/s
Iteration   1: 106120.092 ops/s
Iteration   2: 103176.058 ops/s
Iteration   3: 113148.643 ops/s
Iteration   4: 112772.550 ops/s
Iteration   5: 111129.016 ops/s
Iteration   6: 106713.797 ops/s
Iteration   7: 110919.072 ops/s
Iteration   8: 107571.514 ops/s
Iteration   9: 106959.787 ops/s
Iteration  10: 110947.189 ops/s
Iteration  11: 108237.090 ops/s
Iteration  12: 107332.858 ops/s
Iteration  13: 108534.302 ops/s
Iteration  14: 108326.491 ops/s
Iteration  15: 106321.830 ops/s
Iteration  16: 111915.593 ops/s
Iteration  17: 106875.460 ops/s
Iteration  18: 111170.259 ops/s
Iteration  19: 109303.951 ops/s
Iteration  20: 108535.897 ops/s
Iteration  21: 111433.418 ops/s
Iteration  22: 112392.213 ops/s
Iteration  23: 106546.704 ops/s
Iteration  24: 110120.761 ops/s
Iteration  25: 109290.829 ops/s
Iteration  26: 109810.723 ops/s
Iteration  27: 107925.512 ops/s
Iteration  28: 109636.111 ops/s
Iteration  29: 108183.913 ops/s
Iteration  30: 109131.384 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_201._Benchmark.benchmark_Cluster_201":
  109016.101 ±(99.9%) 1539.656 ops/s [Average]
  (min, avg, max) = (103176.058, 109016.101, 113148.643), stdev = 2304.485
  CI (99.9%): [107476.444, 110555.757] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_201._Benchmark.benchmark_Cluster_201  thrpt   30  109016.101 ± 1539.656  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_202._Benchmark.benchmark_Cluster_202$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_202._Benchmark.benchmark_Cluster_202

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7524.916 ops/s
# Warmup Iteration   2: 37554.102 ops/s
# Warmup Iteration   3: 65414.871 ops/s
# Warmup Iteration   4: 115439.326 ops/s
# Warmup Iteration   5: 123895.292 ops/s
# Warmup Iteration   6: 133868.672 ops/s
# Warmup Iteration   7: 137636.425 ops/s
# Warmup Iteration   8: 144714.157 ops/s
# Warmup Iteration   9: 136952.911 ops/s
# Warmup Iteration  10: 142510.076 ops/s
# Warmup Iteration  11: 134195.887 ops/s
# Warmup Iteration  12: 139218.266 ops/s
# Warmup Iteration  13: 139273.756 ops/s
# Warmup Iteration  14: 136873.893 ops/s
# Warmup Iteration  15: 138548.697 ops/s
# Warmup Iteration  16: 138064.346 ops/s
# Warmup Iteration  17: 150172.403 ops/s
# Warmup Iteration  18: 146759.569 ops/s
# Warmup Iteration  19: 148907.012 ops/s
# Warmup Iteration  20: 151878.776 ops/s
# Warmup Iteration  21: 153243.813 ops/s
# Warmup Iteration  22: 144595.271 ops/s
# Warmup Iteration  23: 149847.083 ops/s
# Warmup Iteration  24: 146010.864 ops/s
# Warmup Iteration  25: 145317.921 ops/s
# Warmup Iteration  26: 148965.073 ops/s
# Warmup Iteration  27: 145220.617 ops/s
# Warmup Iteration  28: 152872.901 ops/s
# Warmup Iteration  29: 153917.651 ops/s
# Warmup Iteration  30: 144547.050 ops/s
Iteration   1: 152019.849 ops/s
Iteration   2: 140894.047 ops/s
Iteration   3: 145455.204 ops/s
Iteration   4: 154830.793 ops/s
Iteration   5: 148028.126 ops/s
Iteration   6: 147275.752 ops/s
Iteration   7: 148774.925 ops/s
Iteration   8: 144706.451 ops/s
Iteration   9: 146971.237 ops/s
Iteration  10: 143150.287 ops/s
Iteration  11: 147445.160 ops/s
Iteration  12: 146818.999 ops/s
Iteration  13: 145717.525 ops/s
Iteration  14: 151334.953 ops/s
Iteration  15: 149850.873 ops/s
Iteration  16: 144261.273 ops/s
Iteration  17: 152460.200 ops/s
Iteration  18: 153306.016 ops/s
Iteration  19: 143265.215 ops/s
Iteration  20: 151881.564 ops/s
Iteration  21: 146986.119 ops/s
Iteration  22: 145632.868 ops/s
Iteration  23: 149664.525 ops/s
Iteration  24: 145288.758 ops/s
Iteration  25: 143889.848 ops/s
Iteration  26: 145311.148 ops/s
Iteration  27: 151809.244 ops/s
Iteration  28: 153548.427 ops/s
Iteration  29: 144116.083 ops/s
Iteration  30: 152149.636 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_202._Benchmark.benchmark_Cluster_202":
  147894.837 ±(99.9%) 2467.171 ops/s [Average]
  (min, avg, max) = (140894.047, 147894.837, 154830.793), stdev = 3692.745
  CI (99.9%): [145427.666, 150362.008] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_202._Benchmark.benchmark_Cluster_202  thrpt   30  147894.837 ± 2467.171  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_203._Benchmark.benchmark_Cluster_203$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_203._Benchmark.benchmark_Cluster_203

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1943.293 ops/s
# Warmup Iteration   2: 18446.058 ops/s
# Warmup Iteration   3: 26439.643 ops/s
# Warmup Iteration   4: 24990.301 ops/s
# Warmup Iteration   5: 30137.411 ops/s
# Warmup Iteration   6: 57354.181 ops/s
# Warmup Iteration   7: 63800.752 ops/s
# Warmup Iteration   8: 88468.571 ops/s
# Warmup Iteration   9: 90634.637 ops/s
# Warmup Iteration  10: 85693.006 ops/s
# Warmup Iteration  11: 88399.031 ops/s
# Warmup Iteration  12: 65116.313 ops/s
# Warmup Iteration  13: 83008.395 ops/s
# Warmup Iteration  14: 84420.635 ops/s
# Warmup Iteration  15: 89352.535 ops/s
# Warmup Iteration  16: 89542.349 ops/s
# Warmup Iteration  17: 87156.659 ops/s
# Warmup Iteration  18: 92163.049 ops/s
# Warmup Iteration  19: 89596.296 ops/s
# Warmup Iteration  20: 92364.951 ops/s
# Warmup Iteration  21: 90798.477 ops/s
# Warmup Iteration  22: 87699.074 ops/s
# Warmup Iteration  23: 94817.949 ops/s
# Warmup Iteration  24: 86074.722 ops/s
# Warmup Iteration  25: 91635.993 ops/s
# Warmup Iteration  26: 88283.975 ops/s
# Warmup Iteration  27: 88407.479 ops/s
# Warmup Iteration  28: 91408.508 ops/s
# Warmup Iteration  29: 88071.538 ops/s
# Warmup Iteration  30: 94746.447 ops/s
Iteration   1: 94837.695 ops/s
Iteration   2: 89309.455 ops/s
Iteration   3: 93057.389 ops/s
Iteration   4: 88014.738 ops/s
Iteration   5: 93544.051 ops/s
Iteration   6: 89267.430 ops/s
Iteration   7: 93065.621 ops/s
Iteration   8: 88696.689 ops/s
Iteration   9: 91098.388 ops/s
Iteration  10: 93497.880 ops/s
Iteration  11: 87865.338 ops/s
Iteration  12: 89822.396 ops/s
Iteration  13: 92206.599 ops/s
Iteration  14: 90782.860 ops/s
Iteration  15: 88918.395 ops/s
Iteration  16: 89984.319 ops/s
Iteration  17: 87457.778 ops/s
Iteration  18: 89943.643 ops/s
Iteration  19: 95502.435 ops/s
Iteration  20: 87401.597 ops/s
Iteration  21: 91697.082 ops/s
Iteration  22: 90690.454 ops/s
Iteration  23: 89613.848 ops/s
Iteration  24: 94533.037 ops/s
Iteration  25: 88170.836 ops/s
Iteration  26: 94235.532 ops/s
Iteration  27: 89161.137 ops/s
Iteration  28: 89932.759 ops/s
Iteration  29: 93596.942 ops/s
Iteration  30: 88973.506 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_203._Benchmark.benchmark_Cluster_203":
  90829.328 ±(99.9%) 1612.591 ops/s [Average]
  (min, avg, max) = (87401.597, 90829.328, 95502.435), stdev = 2413.650
  CI (99.9%): [89216.737, 92441.918] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_203._Benchmark.benchmark_Cluster_203  thrpt   30  90829.328 ± 1612.591  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_204._Benchmark.benchmark_Cluster_204$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_204._Benchmark.benchmark_Cluster_204

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8265.086 ops/s
# Warmup Iteration   2: 23556.141 ops/s
# Warmup Iteration   3: 17496.756 ops/s
# Warmup Iteration   4: 22497.758 ops/s
# Warmup Iteration   5: 17203.964 ops/s
# Warmup Iteration   6: 25043.303 ops/s
# Warmup Iteration   7: 17755.656 ops/s
# Warmup Iteration   8: 18503.943 ops/s
# Warmup Iteration   9: 18086.910 ops/s
# Warmup Iteration  10: 17725.587 ops/s
# Warmup Iteration  11: 18203.587 ops/s
# Warmup Iteration  12: 17956.117 ops/s
# Warmup Iteration  13: 18359.840 ops/s
# Warmup Iteration  14: 17988.031 ops/s
# Warmup Iteration  15: 18096.314 ops/s
# Warmup Iteration  16: 18030.595 ops/s
# Warmup Iteration  17: 17969.650 ops/s
# Warmup Iteration  18: 18162.231 ops/s
# Warmup Iteration  19: 17625.650 ops/s
# Warmup Iteration  20: 18338.840 ops/s
# Warmup Iteration  21: 17704.346 ops/s
# Warmup Iteration  22: 18718.729 ops/s
# Warmup Iteration  23: 18339.209 ops/s
# Warmup Iteration  24: 18454.033 ops/s
# Warmup Iteration  25: 18354.751 ops/s
# Warmup Iteration  26: 18248.476 ops/s
# Warmup Iteration  27: 17852.766 ops/s
# Warmup Iteration  28: 17680.176 ops/s
# Warmup Iteration  29: 18514.836 ops/s
# Warmup Iteration  30: 18714.346 ops/s
Iteration   1: 18242.524 ops/s
Iteration   2: 18174.245 ops/s
Iteration   3: 19425.620 ops/s
Iteration   4: 18235.213 ops/s
Iteration   5: 18240.805 ops/s
Iteration   6: 17980.782 ops/s
Iteration   7: 18488.837 ops/s
Iteration   8: 17379.590 ops/s
Iteration   9: 18500.075 ops/s
Iteration  10: 17948.835 ops/s
Iteration  11: 18009.744 ops/s
Iteration  12: 18024.574 ops/s
Iteration  13: 18115.278 ops/s
Iteration  14: 18598.898 ops/s
Iteration  15: 17817.300 ops/s
Iteration  16: 18177.764 ops/s
Iteration  17: 18268.768 ops/s
Iteration  18: 18471.919 ops/s
Iteration  19: 18011.112 ops/s
Iteration  20: 18751.941 ops/s
Iteration  21: 18200.322 ops/s
Iteration  22: 18620.532 ops/s
Iteration  23: 18139.705 ops/s
Iteration  24: 19035.769 ops/s
Iteration  25: 17629.329 ops/s
Iteration  26: 17854.249 ops/s
Iteration  27: 17710.433 ops/s
Iteration  28: 17916.392 ops/s
Iteration  29: 18406.761 ops/s
Iteration  30: 18087.161 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_204._Benchmark.benchmark_Cluster_204":
  18215.483 ±(99.9%) 276.224 ops/s [Average]
  (min, avg, max) = (17379.590, 18215.483, 19425.620), stdev = 413.439
  CI (99.9%): [17939.259, 18491.706] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_204._Benchmark.benchmark_Cluster_204  thrpt   30  18215.483 ± 276.224  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_205._Benchmark.benchmark_Cluster_205$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_205._Benchmark.benchmark_Cluster_205

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.782 ops/s
# Warmup Iteration   2: 5401.424 ops/s
# Warmup Iteration   3: 16344.319 ops/s
# Warmup Iteration   4: 27504.049 ops/s
# Warmup Iteration   5: 29874.377 ops/s
# Warmup Iteration   6: 36695.978 ops/s
# Warmup Iteration   7: 36116.284 ops/s
# Warmup Iteration   8: 67073.387 ops/s
# Warmup Iteration   9: 63680.399 ops/s
# Warmup Iteration  10: 81084.527 ops/s
# Warmup Iteration  11: 66476.579 ops/s
# Warmup Iteration  12: 84832.935 ops/s
# Warmup Iteration  13: 84695.855 ops/s
# Warmup Iteration  14: 69289.826 ops/s
# Warmup Iteration  15: 84602.295 ops/s
# Warmup Iteration  16: 78777.704 ops/s
# Warmup Iteration  17: 70090.393 ops/s
# Warmup Iteration  18: 81954.525 ops/s
# Warmup Iteration  19: 84953.644 ops/s
# Warmup Iteration  20: 78560.355 ops/s
# Warmup Iteration  21: 75250.747 ops/s
# Warmup Iteration  22: 83228.225 ops/s
# Warmup Iteration  23: 68866.746 ops/s
# Warmup Iteration  24: 85062.502 ops/s
# Warmup Iteration  25: 74828.836 ops/s
# Warmup Iteration  26: 79958.737 ops/s
# Warmup Iteration  27: 74606.965 ops/s
# Warmup Iteration  28: 82273.584 ops/s
# Warmup Iteration  29: 79868.832 ops/s
# Warmup Iteration  30: 75359.775 ops/s
Iteration   1: 79040.195 ops/s
Iteration   2: 78592.559 ops/s
Iteration   3: 75838.685 ops/s
Iteration   4: 83032.077 ops/s
Iteration   5: 73839.218 ops/s
Iteration   6: 78153.410 ops/s
Iteration   7: 81948.260 ops/s
Iteration   8: 87343.258 ops/s
Iteration   9: 82161.570 ops/s
Iteration  10: 70391.054 ops/s
Iteration  11: 79416.385 ops/s
Iteration  12: 79606.984 ops/s
Iteration  13: 86297.541 ops/s
Iteration  14: 85267.629 ops/s
Iteration  15: 83271.417 ops/s
Iteration  16: 83520.391 ops/s
Iteration  17: 79134.022 ops/s
Iteration  18: 81746.743 ops/s
Iteration  19: 80064.693 ops/s
Iteration  20: 77610.304 ops/s
Iteration  21: 78169.008 ops/s
Iteration  22: 79789.545 ops/s
Iteration  23: 88047.195 ops/s
Iteration  24: 84365.317 ops/s
Iteration  25: 76572.488 ops/s
Iteration  26: 76000.096 ops/s
Iteration  27: 82060.845 ops/s
Iteration  28: 85561.075 ops/s
Iteration  29: 69780.960 ops/s
Iteration  30: 82576.968 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_205._Benchmark.benchmark_Cluster_205":
  80306.663 ±(99.9%) 2999.183 ops/s [Average]
  (min, avg, max) = (69780.960, 80306.663, 88047.195), stdev = 4489.036
  CI (99.9%): [77307.480, 83305.846] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_205._Benchmark.benchmark_Cluster_205  thrpt   30  80306.663 ± 2999.183  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_206._Benchmark.benchmark_Cluster_206$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_206._Benchmark.benchmark_Cluster_206

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.736 ops/s
# Warmup Iteration   2: 3516.313 ops/s
# Warmup Iteration   3: 19478.161 ops/s
# Warmup Iteration   4: 20952.638 ops/s
# Warmup Iteration   5: 17620.710 ops/s
# Warmup Iteration   6: 21173.177 ops/s
# Warmup Iteration   7: 21631.369 ops/s
# Warmup Iteration   8: 27568.989 ops/s
# Warmup Iteration   9: 22858.280 ops/s
# Warmup Iteration  10: 26357.578 ops/s
# Warmup Iteration  11: 21186.765 ops/s
# Warmup Iteration  12: 23090.760 ops/s
# Warmup Iteration  13: 20959.158 ops/s
# Warmup Iteration  14: 23612.079 ops/s
# Warmup Iteration  15: 42710.212 ops/s
# Warmup Iteration  16: 43113.604 ops/s
# Warmup Iteration  17: 39384.514 ops/s
# Warmup Iteration  18: 45597.503 ops/s
# Warmup Iteration  19: 41502.619 ops/s
# Warmup Iteration  20: 46543.265 ops/s
# Warmup Iteration  21: 45010.859 ops/s
# Warmup Iteration  22: 40101.693 ops/s
# Warmup Iteration  23: 43578.047 ops/s
# Warmup Iteration  24: 40998.573 ops/s
# Warmup Iteration  25: 43554.258 ops/s
# Warmup Iteration  26: 43029.728 ops/s
# Warmup Iteration  27: 44850.184 ops/s
# Warmup Iteration  28: 40317.706 ops/s
# Warmup Iteration  29: 42299.807 ops/s
# Warmup Iteration  30: 43084.295 ops/s
Iteration   1: 42632.871 ops/s
Iteration   2: 44161.805 ops/s
Iteration   3: 40575.767 ops/s
Iteration   4: 44080.868 ops/s
Iteration   5: 44313.555 ops/s
Iteration   6: 43987.696 ops/s
Iteration   7: 44560.469 ops/s
Iteration   8: 46757.874 ops/s
Iteration   9: 43864.579 ops/s
Iteration  10: 45028.707 ops/s
Iteration  11: 39035.584 ops/s
Iteration  12: 45023.121 ops/s
Iteration  13: 43257.836 ops/s
Iteration  14: 44750.787 ops/s
Iteration  15: 46633.239 ops/s
Iteration  16: 42427.641 ops/s
Iteration  17: 44983.155 ops/s
Iteration  18: 47894.250 ops/s
Iteration  19: 46040.337 ops/s
Iteration  20: 44572.321 ops/s
Iteration  21: 42658.856 ops/s
Iteration  22: 47023.075 ops/s
Iteration  23: 44854.650 ops/s
Iteration  24: 39693.329 ops/s
Iteration  25: 48115.645 ops/s
Iteration  26: 45258.104 ops/s
Iteration  27: 45313.487 ops/s
Iteration  28: 44456.751 ops/s
Iteration  29: 46153.586 ops/s
Iteration  30: 35718.910 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_206._Benchmark.benchmark_Cluster_206":
  44127.628 ±(99.9%) 1767.460 ops/s [Average]
  (min, avg, max) = (35718.910, 44127.628, 48115.645), stdev = 2645.451
  CI (99.9%): [42360.169, 45895.088] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_206._Benchmark.benchmark_Cluster_206  thrpt   30  44127.628 ± 1767.460  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_207._Benchmark.benchmark_Cluster_207$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_207._Benchmark.benchmark_Cluster_207

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16174.748 ops/s
# Warmup Iteration   2: 42228.002 ops/s
# Warmup Iteration   3: 50515.991 ops/s
# Warmup Iteration   4: 95897.617 ops/s
# Warmup Iteration   5: 106103.422 ops/s
# Warmup Iteration   6: 107921.205 ops/s
# Warmup Iteration   7: 107592.095 ops/s
# Warmup Iteration   8: 109564.094 ops/s
# Warmup Iteration   9: 113293.029 ops/s
# Warmup Iteration  10: 109243.410 ops/s
# Warmup Iteration  11: 107212.926 ops/s
# Warmup Iteration  12: 112381.806 ops/s
# Warmup Iteration  13: 109373.360 ops/s
# Warmup Iteration  14: 108070.221 ops/s
# Warmup Iteration  15: 115396.323 ops/s
# Warmup Iteration  16: 109078.435 ops/s
# Warmup Iteration  17: 115246.322 ops/s
# Warmup Iteration  18: 118730.734 ops/s
# Warmup Iteration  19: 111828.928 ops/s
# Warmup Iteration  20: 119627.873 ops/s
# Warmup Iteration  21: 113694.650 ops/s
# Warmup Iteration  22: 118094.505 ops/s
# Warmup Iteration  23: 113423.280 ops/s
# Warmup Iteration  24: 110860.418 ops/s
# Warmup Iteration  25: 116089.827 ops/s
# Warmup Iteration  26: 115496.937 ops/s
# Warmup Iteration  27: 114529.290 ops/s
# Warmup Iteration  28: 119582.993 ops/s
# Warmup Iteration  29: 115153.536 ops/s
# Warmup Iteration  30: 120018.783 ops/s
Iteration   1: 112275.285 ops/s
Iteration   2: 114655.584 ops/s
Iteration   3: 118572.506 ops/s
Iteration   4: 111532.011 ops/s
Iteration   5: 119139.647 ops/s
Iteration   6: 121758.074 ops/s
Iteration   7: 111724.339 ops/s
Iteration   8: 116637.434 ops/s
Iteration   9: 117526.611 ops/s
Iteration  10: 119372.303 ops/s
Iteration  11: 121218.828 ops/s
Iteration  12: 119059.046 ops/s
Iteration  13: 113659.719 ops/s
Iteration  14: 116265.806 ops/s
Iteration  15: 114554.651 ops/s
Iteration  16: 112486.958 ops/s
Iteration  17: 118694.515 ops/s
Iteration  18: 115390.593 ops/s
Iteration  19: 120799.955 ops/s
Iteration  20: 121509.617 ops/s
Iteration  21: 111954.607 ops/s
Iteration  22: 118386.561 ops/s
Iteration  23: 118974.579 ops/s
Iteration  24: 108341.641 ops/s
Iteration  25: 119931.283 ops/s
Iteration  26: 115046.926 ops/s
Iteration  27: 117720.246 ops/s
Iteration  28: 119170.910 ops/s
Iteration  29: 115690.369 ops/s
Iteration  30: 120872.081 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_207._Benchmark.benchmark_Cluster_207":
  116764.090 ±(99.9%) 2355.673 ops/s [Average]
  (min, avg, max) = (108341.641, 116764.090, 121758.074), stdev = 3525.860
  CI (99.9%): [114408.417, 119119.762] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_207._Benchmark.benchmark_Cluster_207  thrpt   30  116764.090 ± 2355.673  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_208._Benchmark.benchmark_Cluster_208$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_208._Benchmark.benchmark_Cluster_208

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15361.402 ops/s
# Warmup Iteration   2: 45457.402 ops/s
# Warmup Iteration   3: 84450.741 ops/s
# Warmup Iteration   4: 109754.305 ops/s
# Warmup Iteration   5: 104646.342 ops/s
# Warmup Iteration   6: 101340.907 ops/s
# Warmup Iteration   7: 112543.121 ops/s
# Warmup Iteration   8: 102938.818 ops/s
# Warmup Iteration   9: 117377.504 ops/s
# Warmup Iteration  10: 112742.689 ops/s
# Warmup Iteration  11: 114042.911 ops/s
# Warmup Iteration  12: 118676.364 ops/s
# Warmup Iteration  13: 114148.045 ops/s
# Warmup Iteration  14: 115126.510 ops/s
# Warmup Iteration  15: 115371.025 ops/s
# Warmup Iteration  16: 117436.503 ops/s
# Warmup Iteration  17: 118852.862 ops/s
# Warmup Iteration  18: 117175.311 ops/s
# Warmup Iteration  19: 122079.609 ops/s
# Warmup Iteration  20: 121598.725 ops/s
# Warmup Iteration  21: 121786.914 ops/s
# Warmup Iteration  22: 122441.868 ops/s
# Warmup Iteration  23: 117676.066 ops/s
# Warmup Iteration  24: 118176.197 ops/s
# Warmup Iteration  25: 125318.251 ops/s
# Warmup Iteration  26: 117137.349 ops/s
# Warmup Iteration  27: 122356.991 ops/s
# Warmup Iteration  28: 118004.437 ops/s
# Warmup Iteration  29: 123109.706 ops/s
# Warmup Iteration  30: 124290.392 ops/s
Iteration   1: 120767.860 ops/s
Iteration   2: 117385.184 ops/s
Iteration   3: 122525.750 ops/s
Iteration   4: 118889.624 ops/s
Iteration   5: 123952.239 ops/s
Iteration   6: 124181.190 ops/s
Iteration   7: 116784.155 ops/s
Iteration   8: 121124.790 ops/s
Iteration   9: 119614.857 ops/s
Iteration  10: 121883.477 ops/s
Iteration  11: 116629.881 ops/s
Iteration  12: 118101.848 ops/s
Iteration  13: 123863.990 ops/s
Iteration  14: 114123.968 ops/s
Iteration  15: 117947.771 ops/s
Iteration  16: 114236.430 ops/s
Iteration  17: 119783.006 ops/s
Iteration  18: 124269.227 ops/s
Iteration  19: 116929.310 ops/s
Iteration  20: 120518.735 ops/s
Iteration  21: 124812.496 ops/s
Iteration  22: 116186.761 ops/s
Iteration  23: 118269.940 ops/s
Iteration  24: 114695.375 ops/s
Iteration  25: 100557.618 ops/s
Iteration  26: 116310.605 ops/s
Iteration  27: 118459.756 ops/s
Iteration  28: 125574.567 ops/s
Iteration  29: 116098.954 ops/s
Iteration  30: 124528.501 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_208._Benchmark.benchmark_Cluster_208":
  118966.929 ±(99.9%) 3260.993 ops/s [Average]
  (min, avg, max) = (100557.618, 118966.929, 125574.567), stdev = 4880.901
  CI (99.9%): [115705.936, 122227.922] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_208._Benchmark.benchmark_Cluster_208  thrpt   30  118966.929 ± 3260.993  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_209._Benchmark.benchmark_Cluster_209$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_209._Benchmark.benchmark_Cluster_209

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 25387.776 ops/s
# Warmup Iteration   2: 101966.166 ops/s
# Warmup Iteration   3: 145447.733 ops/s
# Warmup Iteration   4: 138412.947 ops/s
# Warmup Iteration   5: 136930.916 ops/s
# Warmup Iteration   6: 147576.211 ops/s
# Warmup Iteration   7: 144641.224 ops/s
# Warmup Iteration   8: 147835.947 ops/s
# Warmup Iteration   9: 141242.104 ops/s
# Warmup Iteration  10: 150006.855 ops/s
# Warmup Iteration  11: 152454.492 ops/s
# Warmup Iteration  12: 143919.903 ops/s
# Warmup Iteration  13: 141471.776 ops/s
# Warmup Iteration  14: 149948.188 ops/s
# Warmup Iteration  15: 143483.734 ops/s
# Warmup Iteration  16: 147628.074 ops/s
# Warmup Iteration  17: 148467.724 ops/s
# Warmup Iteration  18: 157068.808 ops/s
# Warmup Iteration  19: 159269.960 ops/s
# Warmup Iteration  20: 147652.974 ops/s
# Warmup Iteration  21: 153696.286 ops/s
# Warmup Iteration  22: 155706.038 ops/s
# Warmup Iteration  23: 149138.960 ops/s
# Warmup Iteration  24: 154539.078 ops/s
# Warmup Iteration  25: 145452.598 ops/s
# Warmup Iteration  26: 156551.452 ops/s
# Warmup Iteration  27: 158266.444 ops/s
# Warmup Iteration  28: 149815.642 ops/s
# Warmup Iteration  29: 162717.733 ops/s
# Warmup Iteration  30: 145837.393 ops/s
Iteration   1: 153024.148 ops/s
Iteration   2: 154522.038 ops/s
Iteration   3: 154373.084 ops/s
Iteration   4: 154441.697 ops/s
Iteration   5: 159596.657 ops/s
Iteration   6: 149870.814 ops/s
Iteration   7: 153330.035 ops/s
Iteration   8: 158088.830 ops/s
Iteration   9: 154481.989 ops/s
Iteration  10: 154023.574 ops/s
Iteration  11: 152323.470 ops/s
Iteration  12: 157501.002 ops/s
Iteration  13: 151215.510 ops/s
Iteration  14: 147979.610 ops/s
Iteration  15: 153130.932 ops/s
Iteration  16: 150098.324 ops/s
Iteration  17: 155993.163 ops/s
Iteration  18: 162300.243 ops/s
Iteration  19: 150942.903 ops/s
Iteration  20: 157872.477 ops/s
Iteration  21: 149243.111 ops/s
Iteration  22: 158456.885 ops/s
Iteration  23: 146860.139 ops/s
Iteration  24: 152147.366 ops/s
Iteration  25: 160073.858 ops/s
Iteration  26: 151424.807 ops/s
Iteration  27: 155074.430 ops/s
Iteration  28: 158003.301 ops/s
Iteration  29: 149349.927 ops/s
Iteration  30: 154080.610 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_209._Benchmark.benchmark_Cluster_209":
  153994.165 ±(99.9%) 2539.011 ops/s [Average]
  (min, avg, max) = (146860.139, 153994.165, 162300.243), stdev = 3800.272
  CI (99.9%): [151455.154, 156533.175] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_209._Benchmark.benchmark_Cluster_209  thrpt   30  153994.165 ± 2539.011  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_21._Benchmark.benchmark_Cluster_21$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_21._Benchmark.benchmark_Cluster_21

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 26024.622 ops/s
# Warmup Iteration   2: 80818.380 ops/s
# Warmup Iteration   3: 34865.139 ops/s
# Warmup Iteration   4: 97950.300 ops/s
# Warmup Iteration   5: 94249.531 ops/s
# Warmup Iteration   6: 100059.315 ops/s
# Warmup Iteration   7: 95811.013 ops/s
# Warmup Iteration   8: 99159.875 ops/s
# Warmup Iteration   9: 98132.358 ops/s
# Warmup Iteration  10: 92878.351 ops/s
# Warmup Iteration  11: 99735.622 ops/s
# Warmup Iteration  12: 94853.819 ops/s
# Warmup Iteration  13: 96404.340 ops/s
# Warmup Iteration  14: 96825.486 ops/s
# Warmup Iteration  15: 94089.735 ops/s
# Warmup Iteration  16: 102056.141 ops/s
# Warmup Iteration  17: 100671.215 ops/s
# Warmup Iteration  18: 99885.052 ops/s
# Warmup Iteration  19: 102050.295 ops/s
# Warmup Iteration  20: 99262.105 ops/s
# Warmup Iteration  21: 103363.805 ops/s
# Warmup Iteration  22: 96895.184 ops/s
# Warmup Iteration  23: 102541.282 ops/s
# Warmup Iteration  24: 100318.432 ops/s
# Warmup Iteration  25: 103249.334 ops/s
# Warmup Iteration  26: 106112.357 ops/s
# Warmup Iteration  27: 97299.420 ops/s
# Warmup Iteration  28: 97803.822 ops/s
# Warmup Iteration  29: 104702.232 ops/s
# Warmup Iteration  30: 99338.102 ops/s
Iteration   1: 102299.403 ops/s
Iteration   2: 105160.144 ops/s
Iteration   3: 101918.865 ops/s
Iteration   4: 103649.311 ops/s
Iteration   5: 100670.943 ops/s
Iteration   6: 100008.686 ops/s
Iteration   7: 105874.544 ops/s
Iteration   8: 100459.756 ops/s
Iteration   9: 104972.496 ops/s
Iteration  10: 101253.642 ops/s
Iteration  11: 101222.579 ops/s
Iteration  12: 106356.775 ops/s
Iteration  13: 96670.779 ops/s
Iteration  14: 103731.008 ops/s
Iteration  15: 99948.494 ops/s
Iteration  16: 100148.932 ops/s
Iteration  17: 105783.631 ops/s
Iteration  18: 100931.114 ops/s
Iteration  19: 84406.858 ops/s
Iteration  20: 101491.218 ops/s
Iteration  21: 102523.800 ops/s
Iteration  22: 105885.014 ops/s
Iteration  23: 100484.923 ops/s
Iteration  24: 101567.774 ops/s
Iteration  25: 106660.322 ops/s
Iteration  26: 99312.445 ops/s
Iteration  27: 106270.755 ops/s
Iteration  28: 101026.567 ops/s
Iteration  29: 104962.597 ops/s
Iteration  30: 104983.210 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_21._Benchmark.benchmark_Cluster_21":
  102021.219 ±(99.9%) 2809.493 ops/s [Average]
  (min, avg, max) = (84406.858, 102021.219, 106660.322), stdev = 4205.117
  CI (99.9%): [99211.727, 104830.712] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_21._Benchmark.benchmark_Cluster_21  thrpt   30  102021.219 ± 2809.493  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_210._Benchmark.benchmark_Cluster_210$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_210._Benchmark.benchmark_Cluster_210

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17476.672 ops/s
# Warmup Iteration   2: 27434.612 ops/s
# Warmup Iteration   3: 65333.994 ops/s
# Warmup Iteration   4: 103527.700 ops/s
# Warmup Iteration   5: 111983.345 ops/s
# Warmup Iteration   6: 114210.681 ops/s
# Warmup Iteration   7: 111327.288 ops/s
# Warmup Iteration   8: 113996.238 ops/s
# Warmup Iteration   9: 113773.211 ops/s
# Warmup Iteration  10: 109725.091 ops/s
# Warmup Iteration  11: 113112.788 ops/s
# Warmup Iteration  12: 110362.440 ops/s
# Warmup Iteration  13: 108575.765 ops/s
# Warmup Iteration  14: 117327.591 ops/s
# Warmup Iteration  15: 110535.830 ops/s
# Warmup Iteration  16: 113979.817 ops/s
# Warmup Iteration  17: 116378.789 ops/s
# Warmup Iteration  18: 113818.575 ops/s
# Warmup Iteration  19: 116551.065 ops/s
# Warmup Iteration  20: 118577.033 ops/s
# Warmup Iteration  21: 122761.639 ops/s
# Warmup Iteration  22: 119530.237 ops/s
# Warmup Iteration  23: 118238.084 ops/s
# Warmup Iteration  24: 114799.605 ops/s
# Warmup Iteration  25: 121669.573 ops/s
# Warmup Iteration  26: 117859.044 ops/s
# Warmup Iteration  27: 119047.982 ops/s
# Warmup Iteration  28: 118646.498 ops/s
# Warmup Iteration  29: 119591.104 ops/s
# Warmup Iteration  30: 119293.516 ops/s
Iteration   1: 122215.196 ops/s
Iteration   2: 118500.229 ops/s
Iteration   3: 119248.995 ops/s
Iteration   4: 122003.152 ops/s
Iteration   5: 117259.496 ops/s
Iteration   6: 122562.588 ops/s
Iteration   7: 115149.435 ops/s
Iteration   8: 123195.191 ops/s
Iteration   9: 120395.772 ops/s
Iteration  10: 114608.828 ops/s
Iteration  11: 119391.551 ops/s
Iteration  12: 120786.065 ops/s
Iteration  13: 119625.480 ops/s
Iteration  14: 120433.835 ops/s
Iteration  15: 119399.597 ops/s
Iteration  16: 118451.976 ops/s
Iteration  17: 111817.998 ops/s
Iteration  18: 121954.928 ops/s
Iteration  19: 115542.114 ops/s
Iteration  20: 122757.425 ops/s
Iteration  21: 109990.124 ops/s
Iteration  22: 121534.445 ops/s
Iteration  23: 118818.605 ops/s
Iteration  24: 122362.917 ops/s
Iteration  25: 124501.869 ops/s
Iteration  26: 116589.990 ops/s
Iteration  27: 123355.788 ops/s
Iteration  28: 117320.295 ops/s
Iteration  29: 118867.647 ops/s
Iteration  30: 124478.887 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_210._Benchmark.benchmark_Cluster_210":
  119437.347 ±(99.9%) 2363.110 ops/s [Average]
  (min, avg, max) = (109990.124, 119437.347, 124501.869), stdev = 3536.992
  CI (99.9%): [117074.237, 121800.457] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_210._Benchmark.benchmark_Cluster_210  thrpt   30  119437.347 ± 2363.110  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_211._Benchmark.benchmark_Cluster_211$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_211._Benchmark.benchmark_Cluster_211

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11670.260 ops/s
# Warmup Iteration   2: 36243.220 ops/s
# Warmup Iteration   3: 58728.424 ops/s
# Warmup Iteration   4: 49243.257 ops/s
# Warmup Iteration   5: 111533.709 ops/s
# Warmup Iteration   6: 104944.826 ops/s
# Warmup Iteration   7: 106132.025 ops/s
# Warmup Iteration   8: 110408.897 ops/s
# Warmup Iteration   9: 102280.155 ops/s
# Warmup Iteration  10: 102671.174 ops/s
# Warmup Iteration  11: 112739.041 ops/s
# Warmup Iteration  12: 105601.611 ops/s
# Warmup Iteration  13: 109386.221 ops/s
# Warmup Iteration  14: 111034.458 ops/s
# Warmup Iteration  15: 105393.685 ops/s
# Warmup Iteration  16: 107439.480 ops/s
# Warmup Iteration  17: 115246.868 ops/s
# Warmup Iteration  18: 116049.809 ops/s
# Warmup Iteration  19: 108856.736 ops/s
# Warmup Iteration  20: 116955.940 ops/s
# Warmup Iteration  21: 118679.302 ops/s
# Warmup Iteration  22: 105843.840 ops/s
# Warmup Iteration  23: 115848.239 ops/s
# Warmup Iteration  24: 113987.373 ops/s
# Warmup Iteration  25: 111436.411 ops/s
# Warmup Iteration  26: 112502.331 ops/s
# Warmup Iteration  27: 117084.993 ops/s
# Warmup Iteration  28: 113348.073 ops/s
# Warmup Iteration  29: 112400.208 ops/s
# Warmup Iteration  30: 113623.838 ops/s
Iteration   1: 116655.919 ops/s
Iteration   2: 104937.684 ops/s
Iteration   3: 114062.090 ops/s
Iteration   4: 111901.049 ops/s
Iteration   5: 106452.173 ops/s
Iteration   6: 118932.186 ops/s
Iteration   7: 110127.886 ops/s
Iteration   8: 118333.000 ops/s
Iteration   9: 112646.034 ops/s
Iteration  10: 113340.867 ops/s
Iteration  11: 116202.692 ops/s
Iteration  12: 113760.563 ops/s
Iteration  13: 84234.126 ops/s
Iteration  14: 110183.767 ops/s
Iteration  15: 115418.210 ops/s
Iteration  16: 118747.970 ops/s
Iteration  17: 113924.492 ops/s
Iteration  18: 113140.167 ops/s
Iteration  19: 116078.908 ops/s
Iteration  20: 113857.211 ops/s
Iteration  21: 116303.055 ops/s
Iteration  22: 112143.541 ops/s
Iteration  23: 117261.981 ops/s
Iteration  24: 113638.195 ops/s
Iteration  25: 117559.376 ops/s
Iteration  26: 113054.536 ops/s
Iteration  27: 116349.128 ops/s
Iteration  28: 112879.541 ops/s
Iteration  29: 114925.470 ops/s
Iteration  30: 116356.415 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_211._Benchmark.benchmark_Cluster_211":
  113113.608 ±(99.9%) 4241.406 ops/s [Average]
  (min, avg, max) = (84234.126, 113113.608, 118932.186), stdev = 6348.337
  CI (99.9%): [108872.202, 117355.013] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_211._Benchmark.benchmark_Cluster_211  thrpt   30  113113.608 ± 4241.406  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_212._Benchmark.benchmark_Cluster_212$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_212._Benchmark.benchmark_Cluster_212

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16606.513 ops/s
# Warmup Iteration   2: 47606.778 ops/s
# Warmup Iteration   3: 52798.975 ops/s
# Warmup Iteration   4: 54557.111 ops/s
# Warmup Iteration   5: 99620.448 ops/s
# Warmup Iteration   6: 103531.994 ops/s
# Warmup Iteration   7: 105858.119 ops/s
# Warmup Iteration   8: 103828.877 ops/s
# Warmup Iteration   9: 106871.434 ops/s
# Warmup Iteration  10: 104657.144 ops/s
# Warmup Iteration  11: 106594.718 ops/s
# Warmup Iteration  12: 100015.089 ops/s
# Warmup Iteration  13: 112602.247 ops/s
# Warmup Iteration  14: 110158.394 ops/s
# Warmup Iteration  15: 104867.141 ops/s
# Warmup Iteration  16: 112009.593 ops/s
# Warmup Iteration  17: 112027.305 ops/s
# Warmup Iteration  18: 109562.558 ops/s
# Warmup Iteration  19: 113603.009 ops/s
# Warmup Iteration  20: 107704.138 ops/s
# Warmup Iteration  21: 116353.210 ops/s
# Warmup Iteration  22: 109071.417 ops/s
# Warmup Iteration  23: 110517.899 ops/s
# Warmup Iteration  24: 111523.356 ops/s
# Warmup Iteration  25: 112955.342 ops/s
# Warmup Iteration  26: 108928.442 ops/s
# Warmup Iteration  27: 114631.706 ops/s
# Warmup Iteration  28: 115289.524 ops/s
# Warmup Iteration  29: 108813.154 ops/s
# Warmup Iteration  30: 119734.262 ops/s
Iteration   1: 108871.675 ops/s
Iteration   2: 116122.366 ops/s
Iteration   3: 108778.414 ops/s
Iteration   4: 113934.828 ops/s
Iteration   5: 107369.763 ops/s
Iteration   6: 113410.460 ops/s
Iteration   7: 115611.174 ops/s
Iteration   8: 108464.849 ops/s
Iteration   9: 115418.839 ops/s
Iteration  10: 109782.842 ops/s
Iteration  11: 115441.842 ops/s
Iteration  12: 105659.978 ops/s
Iteration  13: 114115.385 ops/s
Iteration  14: 112079.230 ops/s
Iteration  15: 112195.954 ops/s
Iteration  16: 114284.002 ops/s
Iteration  17: 111679.003 ops/s
Iteration  18: 115551.260 ops/s
Iteration  19: 109336.984 ops/s
Iteration  20: 115682.947 ops/s
Iteration  21: 112804.201 ops/s
Iteration  22: 114961.239 ops/s
Iteration  23: 118911.866 ops/s
Iteration  24: 108629.221 ops/s
Iteration  25: 116612.453 ops/s
Iteration  26: 110787.669 ops/s
Iteration  27: 115224.516 ops/s
Iteration  28: 111084.872 ops/s
Iteration  29: 110548.618 ops/s
Iteration  30: 111265.479 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_212._Benchmark.benchmark_Cluster_212":
  112487.398 ±(99.9%) 2147.702 ops/s [Average]
  (min, avg, max) = (105659.978, 112487.398, 118911.866), stdev = 3214.580
  CI (99.9%): [110339.695, 114635.100] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_212._Benchmark.benchmark_Cluster_212  thrpt   30  112487.398 ± 2147.702  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_213._Benchmark.benchmark_Cluster_213$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_213._Benchmark.benchmark_Cluster_213

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 25103.388 ops/s
# Warmup Iteration   2: 107260.166 ops/s
# Warmup Iteration   3: 146873.213 ops/s
# Warmup Iteration   4: 173029.948 ops/s
# Warmup Iteration   5: 179125.872 ops/s
# Warmup Iteration   6: 191607.421 ops/s
# Warmup Iteration   7: 206452.601 ops/s
# Warmup Iteration   8: 210184.229 ops/s
# Warmup Iteration   9: 199609.920 ops/s
# Warmup Iteration  10: 197799.275 ops/s
# Warmup Iteration  11: 192581.683 ops/s
# Warmup Iteration  12: 206926.484 ops/s
# Warmup Iteration  13: 198057.892 ops/s
# Warmup Iteration  14: 203202.964 ops/s
# Warmup Iteration  15: 199001.449 ops/s
# Warmup Iteration  16: 202567.685 ops/s
# Warmup Iteration  17: 199018.683 ops/s
# Warmup Iteration  18: 198157.860 ops/s
# Warmup Iteration  19: 207722.486 ops/s
# Warmup Iteration  20: 197278.707 ops/s
# Warmup Iteration  21: 205428.277 ops/s
# Warmup Iteration  22: 194670.455 ops/s
# Warmup Iteration  23: 202158.274 ops/s
# Warmup Iteration  24: 200617.464 ops/s
# Warmup Iteration  25: 203697.191 ops/s
# Warmup Iteration  26: 195866.988 ops/s
# Warmup Iteration  27: 204641.469 ops/s
# Warmup Iteration  28: 199908.749 ops/s
# Warmup Iteration  29: 203849.754 ops/s
# Warmup Iteration  30: 196458.393 ops/s
Iteration   1: 201955.865 ops/s
Iteration   2: 211132.073 ops/s
Iteration   3: 195356.921 ops/s
Iteration   4: 196809.023 ops/s
Iteration   5: 205061.994 ops/s
Iteration   6: 204181.077 ops/s
Iteration   7: 149952.737 ops/s
Iteration   8: 195454.569 ops/s
Iteration   9: 202391.605 ops/s
Iteration  10: 196556.983 ops/s
Iteration  11: 200194.129 ops/s
Iteration  12: 198505.176 ops/s
Iteration  13: 193940.039 ops/s
Iteration  14: 202585.173 ops/s
Iteration  15: 201206.590 ops/s
Iteration  16: 198149.919 ops/s
Iteration  17: 205151.672 ops/s
Iteration  18: 197806.767 ops/s
Iteration  19: 201429.270 ops/s
Iteration  20: 197894.532 ops/s
Iteration  21: 204271.813 ops/s
Iteration  22: 195310.132 ops/s
Iteration  23: 196994.732 ops/s
Iteration  24: 204072.978 ops/s
Iteration  25: 195901.936 ops/s
Iteration  26: 205971.678 ops/s
Iteration  27: 190846.437 ops/s
Iteration  28: 205574.970 ops/s
Iteration  29: 198251.745 ops/s
Iteration  30: 199442.928 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_213._Benchmark.benchmark_Cluster_213":
  198411.849 ±(99.9%) 6789.484 ops/s [Average]
  (min, avg, max) = (149952.737, 198411.849, 211132.073), stdev = 10162.181
  CI (99.9%): [191622.365, 205201.333] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_213._Benchmark.benchmark_Cluster_213  thrpt   30  198411.849 ± 6789.484  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_214._Benchmark.benchmark_Cluster_214$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_214._Benchmark.benchmark_Cluster_214

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4394.382 ops/s
# Warmup Iteration   2: 37126.490 ops/s
# Warmup Iteration   3: 49949.616 ops/s
# Warmup Iteration   4: 61244.815 ops/s
# Warmup Iteration   5: 100506.489 ops/s
# Warmup Iteration   6: 116965.154 ops/s
# Warmup Iteration   7: 140865.582 ops/s
# Warmup Iteration   8: 134780.075 ops/s
# Warmup Iteration   9: 140102.887 ops/s
# Warmup Iteration  10: 143608.989 ops/s
# Warmup Iteration  11: 142300.141 ops/s
# Warmup Iteration  12: 135465.394 ops/s
# Warmup Iteration  13: 139942.434 ops/s
# Warmup Iteration  14: 144521.140 ops/s
# Warmup Iteration  15: 137214.556 ops/s
# Warmup Iteration  16: 145192.590 ops/s
# Warmup Iteration  17: 134440.636 ops/s
# Warmup Iteration  18: 142733.177 ops/s
# Warmup Iteration  19: 145031.325 ops/s
# Warmup Iteration  20: 136868.507 ops/s
# Warmup Iteration  21: 147597.762 ops/s
# Warmup Iteration  22: 148496.060 ops/s
# Warmup Iteration  23: 139350.561 ops/s
# Warmup Iteration  24: 144409.622 ops/s
# Warmup Iteration  25: 145953.476 ops/s
# Warmup Iteration  26: 146561.775 ops/s
# Warmup Iteration  27: 140102.727 ops/s
# Warmup Iteration  28: 144849.156 ops/s
# Warmup Iteration  29: 138916.602 ops/s
# Warmup Iteration  30: 147351.077 ops/s
Iteration   1: 136356.844 ops/s
Iteration   2: 140557.975 ops/s
Iteration   3: 142427.677 ops/s
Iteration   4: 137333.698 ops/s
Iteration   5: 138345.244 ops/s
Iteration   6: 143952.527 ops/s
Iteration   7: 138448.351 ops/s
Iteration   8: 142901.254 ops/s
Iteration   9: 137773.036 ops/s
Iteration  10: 140522.749 ops/s
Iteration  11: 140565.351 ops/s
Iteration  12: 145073.137 ops/s
Iteration  13: 139481.414 ops/s
Iteration  14: 140312.291 ops/s
Iteration  15: 138249.296 ops/s
Iteration  16: 143917.161 ops/s
Iteration  17: 143490.401 ops/s
Iteration  18: 146838.109 ops/s
Iteration  19: 141824.889 ops/s
Iteration  20: 145508.361 ops/s
Iteration  21: 136461.526 ops/s
Iteration  22: 145871.910 ops/s
Iteration  23: 141950.955 ops/s
Iteration  24: 141930.126 ops/s
Iteration  25: 149685.647 ops/s
Iteration  26: 135914.379 ops/s
Iteration  27: 145250.992 ops/s
Iteration  28: 148007.038 ops/s
Iteration  29: 140369.636 ops/s
Iteration  30: 145558.393 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_214._Benchmark.benchmark_Cluster_214":
  141829.346 ±(99.9%) 2436.900 ops/s [Average]
  (min, avg, max) = (135914.379, 141829.346, 149685.647), stdev = 3647.438
  CI (99.9%): [139392.445, 144266.246] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_214._Benchmark.benchmark_Cluster_214  thrpt   30  141829.346 ± 2436.900  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_215._Benchmark.benchmark_Cluster_215$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_215._Benchmark.benchmark_Cluster_215

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8880.662 ops/s
# Warmup Iteration   2: 32221.548 ops/s
# Warmup Iteration   3: 75995.439 ops/s
# Warmup Iteration   4: 111919.922 ops/s
# Warmup Iteration   5: 107270.897 ops/s
# Warmup Iteration   6: 123729.882 ops/s
# Warmup Iteration   7: 117844.966 ops/s
# Warmup Iteration   8: 119852.380 ops/s
# Warmup Iteration   9: 122373.083 ops/s
# Warmup Iteration  10: 117470.660 ops/s
# Warmup Iteration  11: 118552.337 ops/s
# Warmup Iteration  12: 126759.530 ops/s
# Warmup Iteration  13: 113407.749 ops/s
# Warmup Iteration  14: 120878.968 ops/s
# Warmup Iteration  15: 119688.552 ops/s
# Warmup Iteration  16: 124323.864 ops/s
# Warmup Iteration  17: 131247.332 ops/s
# Warmup Iteration  18: 128460.075 ops/s
# Warmup Iteration  19: 126360.968 ops/s
# Warmup Iteration  20: 126330.021 ops/s
# Warmup Iteration  21: 128574.265 ops/s
# Warmup Iteration  22: 123881.099 ops/s
# Warmup Iteration  23: 124246.628 ops/s
# Warmup Iteration  24: 122979.590 ops/s
# Warmup Iteration  25: 123431.021 ops/s
# Warmup Iteration  26: 127509.393 ops/s
# Warmup Iteration  27: 122304.638 ops/s
# Warmup Iteration  28: 122030.730 ops/s
# Warmup Iteration  29: 129690.929 ops/s
# Warmup Iteration  30: 125956.965 ops/s
Iteration   1: 113945.031 ops/s
Iteration   2: 118240.801 ops/s
Iteration   3: 127981.928 ops/s
Iteration   4: 125238.891 ops/s
Iteration   5: 124470.299 ops/s
Iteration   6: 120913.989 ops/s
Iteration   7: 129527.341 ops/s
Iteration   8: 120579.352 ops/s
Iteration   9: 126696.413 ops/s
Iteration  10: 127144.228 ops/s
Iteration  11: 123605.854 ops/s
Iteration  12: 126743.102 ops/s
Iteration  13: 124629.229 ops/s
Iteration  14: 120037.702 ops/s
Iteration  15: 127536.004 ops/s
Iteration  16: 125315.519 ops/s
Iteration  17: 124055.597 ops/s
Iteration  18: 127033.303 ops/s
Iteration  19: 124521.190 ops/s
Iteration  20: 133437.709 ops/s
Iteration  21: 122974.946 ops/s
Iteration  22: 126075.487 ops/s
Iteration  23: 124881.929 ops/s
Iteration  24: 123918.939 ops/s
Iteration  25: 129644.457 ops/s
Iteration  26: 122511.133 ops/s
Iteration  27: 130536.609 ops/s
Iteration  28: 124886.964 ops/s
Iteration  29: 125651.725 ops/s
Iteration  30: 127721.328 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_215._Benchmark.benchmark_Cluster_215":
  125015.233 ±(99.9%) 2562.964 ops/s [Average]
  (min, avg, max) = (113945.031, 125015.233, 133437.709), stdev = 3836.124
  CI (99.9%): [122452.269, 127578.197] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_215._Benchmark.benchmark_Cluster_215  thrpt   30  125015.233 ± 2562.964  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_216._Benchmark.benchmark_Cluster_216$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_216._Benchmark.benchmark_Cluster_216

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16252.028 ops/s
# Warmup Iteration   2: 82498.470 ops/s
# Warmup Iteration   3: 84216.668 ops/s
# Warmup Iteration   4: 90594.280 ops/s
# Warmup Iteration   5: 106358.873 ops/s
# Warmup Iteration   6: 94554.136 ops/s
# Warmup Iteration   7: 104505.111 ops/s
# Warmup Iteration   8: 104779.121 ops/s
# Warmup Iteration   9: 102647.343 ops/s
# Warmup Iteration  10: 109092.889 ops/s
# Warmup Iteration  11: 99209.754 ops/s
# Warmup Iteration  12: 108058.653 ops/s
# Warmup Iteration  13: 107114.593 ops/s
# Warmup Iteration  14: 102991.112 ops/s
# Warmup Iteration  15: 106714.485 ops/s
# Warmup Iteration  16: 103968.376 ops/s
# Warmup Iteration  17: 104296.953 ops/s
# Warmup Iteration  18: 111117.486 ops/s
# Warmup Iteration  19: 105350.308 ops/s
# Warmup Iteration  20: 109461.473 ops/s
# Warmup Iteration  21: 103727.359 ops/s
# Warmup Iteration  22: 104662.410 ops/s
# Warmup Iteration  23: 107944.539 ops/s
# Warmup Iteration  24: 110971.161 ops/s
# Warmup Iteration  25: 104898.919 ops/s
# Warmup Iteration  26: 107719.903 ops/s
# Warmup Iteration  27: 108422.156 ops/s
# Warmup Iteration  28: 107737.380 ops/s
# Warmup Iteration  29: 109327.515 ops/s
# Warmup Iteration  30: 101815.897 ops/s
Iteration   1: 107468.831 ops/s
Iteration   2: 106582.033 ops/s
Iteration   3: 109108.506 ops/s
Iteration   4: 107600.563 ops/s
Iteration   5: 105648.296 ops/s
Iteration   6: 110182.028 ops/s
Iteration   7: 106116.724 ops/s
Iteration   8: 104591.273 ops/s
Iteration   9: 109706.411 ops/s
Iteration  10: 104427.386 ops/s
Iteration  11: 109913.747 ops/s
Iteration  12: 105859.038 ops/s
Iteration  13: 108910.709 ops/s
Iteration  14: 110378.701 ops/s
Iteration  15: 111622.149 ops/s
Iteration  16: 104291.293 ops/s
Iteration  17: 109083.234 ops/s
Iteration  18: 106071.322 ops/s
Iteration  19: 110456.881 ops/s
Iteration  20: 107985.200 ops/s
Iteration  21: 106571.561 ops/s
Iteration  22: 111940.192 ops/s
Iteration  23: 107556.512 ops/s
Iteration  24: 108292.191 ops/s
Iteration  25: 111342.823 ops/s
Iteration  26: 106043.167 ops/s
Iteration  27: 109022.888 ops/s
Iteration  28: 107072.967 ops/s
Iteration  29: 106659.069 ops/s
Iteration  30: 112136.540 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_216._Benchmark.benchmark_Cluster_216":
  108088.075 ±(99.9%) 1523.459 ops/s [Average]
  (min, avg, max) = (104291.293, 108088.075, 112136.540), stdev = 2280.242
  CI (99.9%): [106564.615, 109611.534] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_216._Benchmark.benchmark_Cluster_216  thrpt   30  108088.075 ± 1523.459  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_217._Benchmark.benchmark_Cluster_217$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_217._Benchmark.benchmark_Cluster_217

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7496.741 ops/s
# Warmup Iteration   2: 31767.652 ops/s
# Warmup Iteration   3: 39641.322 ops/s
# Warmup Iteration   4: 41214.140 ops/s
# Warmup Iteration   5: 74907.855 ops/s
# Warmup Iteration   6: 124473.635 ops/s
# Warmup Iteration   7: 127048.972 ops/s
# Warmup Iteration   8: 127902.568 ops/s
# Warmup Iteration   9: 124154.000 ops/s
# Warmup Iteration  10: 125164.230 ops/s
# Warmup Iteration  11: 129857.446 ops/s
# Warmup Iteration  12: 124798.282 ops/s
# Warmup Iteration  13: 132906.213 ops/s
# Warmup Iteration  14: 125801.234 ops/s
# Warmup Iteration  15: 127239.270 ops/s
# Warmup Iteration  16: 132825.739 ops/s
# Warmup Iteration  17: 140087.626 ops/s
# Warmup Iteration  18: 128820.525 ops/s
# Warmup Iteration  19: 133758.699 ops/s
# Warmup Iteration  20: 129452.027 ops/s
# Warmup Iteration  21: 131154.569 ops/s
# Warmup Iteration  22: 133909.837 ops/s
# Warmup Iteration  23: 126345.638 ops/s
# Warmup Iteration  24: 130525.323 ops/s
# Warmup Iteration  25: 137309.660 ops/s
# Warmup Iteration  26: 107687.022 ops/s
# Warmup Iteration  27: 128721.387 ops/s
# Warmup Iteration  28: 136388.188 ops/s
# Warmup Iteration  29: 130050.453 ops/s
# Warmup Iteration  30: 135797.245 ops/s
Iteration   1: 127836.791 ops/s
Iteration   2: 129911.178 ops/s
Iteration   3: 135241.284 ops/s
Iteration   4: 128755.119 ops/s
Iteration   5: 135265.217 ops/s
Iteration   6: 131217.362 ops/s
Iteration   7: 127809.701 ops/s
Iteration   8: 132436.915 ops/s
Iteration   9: 130435.441 ops/s
Iteration  10: 136139.630 ops/s
Iteration  11: 133739.366 ops/s
Iteration  12: 131276.528 ops/s
Iteration  13: 135097.941 ops/s
Iteration  14: 135412.660 ops/s
Iteration  15: 131547.620 ops/s
Iteration  16: 132422.113 ops/s
Iteration  17: 139055.979 ops/s
Iteration  18: 129863.037 ops/s
Iteration  19: 137103.467 ops/s
Iteration  20: 142546.474 ops/s
Iteration  21: 132917.490 ops/s
Iteration  22: 129736.993 ops/s
Iteration  23: 136051.999 ops/s
Iteration  24: 134854.949 ops/s
Iteration  25: 137709.302 ops/s
Iteration  26: 132391.321 ops/s
Iteration  27: 132717.630 ops/s
Iteration  28: 134908.323 ops/s
Iteration  29: 134931.981 ops/s
Iteration  30: 140729.409 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_217._Benchmark.benchmark_Cluster_217":
  133668.774 ±(99.9%) 2423.728 ops/s [Average]
  (min, avg, max) = (127809.701, 133668.774, 142546.474), stdev = 3627.722
  CI (99.9%): [131245.046, 136092.502] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_217._Benchmark.benchmark_Cluster_217  thrpt   30  133668.774 ± 2423.728  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_218._Benchmark.benchmark_Cluster_218$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_218._Benchmark.benchmark_Cluster_218

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 24790.029 ops/s
# Warmup Iteration   2: 69870.543 ops/s
# Warmup Iteration   3: 123523.406 ops/s
# Warmup Iteration   4: 134344.357 ops/s
# Warmup Iteration   5: 135983.793 ops/s
# Warmup Iteration   6: 142922.439 ops/s
# Warmup Iteration   7: 137037.699 ops/s
# Warmup Iteration   8: 146994.504 ops/s
# Warmup Iteration   9: 141754.871 ops/s
# Warmup Iteration  10: 139080.223 ops/s
# Warmup Iteration  11: 145700.724 ops/s
# Warmup Iteration  12: 143733.393 ops/s
# Warmup Iteration  13: 137525.079 ops/s
# Warmup Iteration  14: 158008.565 ops/s
# Warmup Iteration  15: 139464.127 ops/s
# Warmup Iteration  16: 148355.148 ops/s
# Warmup Iteration  17: 150782.710 ops/s
# Warmup Iteration  18: 145262.598 ops/s
# Warmup Iteration  19: 146192.595 ops/s
# Warmup Iteration  20: 160142.736 ops/s
# Warmup Iteration  21: 151936.468 ops/s
# Warmup Iteration  22: 150694.629 ops/s
# Warmup Iteration  23: 160295.414 ops/s
# Warmup Iteration  24: 144820.335 ops/s
# Warmup Iteration  25: 136979.586 ops/s
# Warmup Iteration  26: 147121.125 ops/s
# Warmup Iteration  27: 148057.020 ops/s
# Warmup Iteration  28: 142334.414 ops/s
# Warmup Iteration  29: 151491.489 ops/s
# Warmup Iteration  30: 143190.798 ops/s
Iteration   1: 145020.158 ops/s
Iteration   2: 144783.163 ops/s
Iteration   3: 154016.293 ops/s
Iteration   4: 146396.815 ops/s
Iteration   5: 143051.307 ops/s
Iteration   6: 147984.088 ops/s
Iteration   7: 145368.231 ops/s
Iteration   8: 146724.139 ops/s
Iteration   9: 152424.832 ops/s
Iteration  10: 142436.525 ops/s
Iteration  11: 150560.661 ops/s
Iteration  12: 149775.276 ops/s
Iteration  13: 143444.908 ops/s
Iteration  14: 147082.737 ops/s
Iteration  15: 147059.469 ops/s
Iteration  16: 145324.402 ops/s
Iteration  17: 146458.616 ops/s
Iteration  18: 149926.118 ops/s
Iteration  19: 145806.461 ops/s
Iteration  20: 150256.153 ops/s
Iteration  21: 151181.752 ops/s
Iteration  22: 143787.013 ops/s
Iteration  23: 149762.864 ops/s
Iteration  24: 140364.583 ops/s
Iteration  25: 145593.590 ops/s
Iteration  26: 144250.827 ops/s
Iteration  27: 144812.095 ops/s
Iteration  28: 149429.469 ops/s
Iteration  29: 144353.670 ops/s
Iteration  30: 143337.894 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_218._Benchmark.benchmark_Cluster_218":
  146692.470 ±(99.9%) 2155.934 ops/s [Average]
  (min, avg, max) = (140364.583, 146692.470, 154016.293), stdev = 3226.901
  CI (99.9%): [144536.536, 148848.405] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_218._Benchmark.benchmark_Cluster_218  thrpt   30  146692.470 ± 2155.934  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_219._Benchmark.benchmark_Cluster_219$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_219._Benchmark.benchmark_Cluster_219

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1208.201 ops/s
# Warmup Iteration   2: 17298.934 ops/s
# Warmup Iteration   3: 33182.591 ops/s
# Warmup Iteration   4: 36867.303 ops/s
# Warmup Iteration   5: 45048.321 ops/s
# Warmup Iteration   6: 41476.470 ops/s
# Warmup Iteration   7: 59221.292 ops/s
# Warmup Iteration   8: 86112.649 ops/s
# Warmup Iteration   9: 114513.467 ops/s
# Warmup Iteration  10: 119311.062 ops/s
# Warmup Iteration  11: 117511.494 ops/s
# Warmup Iteration  12: 112867.195 ops/s
# Warmup Iteration  13: 117274.301 ops/s
# Warmup Iteration  14: 122522.911 ops/s
# Warmup Iteration  15: 119106.135 ops/s
# Warmup Iteration  16: 123287.339 ops/s
# Warmup Iteration  17: 120037.842 ops/s
# Warmup Iteration  18: 117330.573 ops/s
# Warmup Iteration  19: 121380.027 ops/s
# Warmup Iteration  20: 102760.415 ops/s
# Warmup Iteration  21: 110167.058 ops/s
# Warmup Iteration  22: 126002.125 ops/s
# Warmup Iteration  23: 119862.084 ops/s
# Warmup Iteration  24: 118227.982 ops/s
# Warmup Iteration  25: 120681.200 ops/s
# Warmup Iteration  26: 119793.336 ops/s
# Warmup Iteration  27: 122730.728 ops/s
# Warmup Iteration  28: 117871.526 ops/s
# Warmup Iteration  29: 123747.009 ops/s
# Warmup Iteration  30: 121727.824 ops/s
Iteration   1: 121017.032 ops/s
Iteration   2: 125042.309 ops/s
Iteration   3: 118286.649 ops/s
Iteration   4: 117307.851 ops/s
Iteration   5: 122940.681 ops/s
Iteration   6: 122730.011 ops/s
Iteration   7: 117445.058 ops/s
Iteration   8: 123666.441 ops/s
Iteration   9: 118337.207 ops/s
Iteration  10: 121251.100 ops/s
Iteration  11: 118566.759 ops/s
Iteration  12: 117718.036 ops/s
Iteration  13: 125141.500 ops/s
Iteration  14: 119448.261 ops/s
Iteration  15: 118875.720 ops/s
Iteration  16: 123858.143 ops/s
Iteration  17: 121195.977 ops/s
Iteration  18: 125045.335 ops/s
Iteration  19: 119978.708 ops/s
Iteration  20: 126069.255 ops/s
Iteration  21: 127546.590 ops/s
Iteration  22: 110377.400 ops/s
Iteration  23: 124237.043 ops/s
Iteration  24: 119568.902 ops/s
Iteration  25: 124358.112 ops/s
Iteration  26: 118732.774 ops/s
Iteration  27: 122589.755 ops/s
Iteration  28: 123301.672 ops/s
Iteration  29: 120667.398 ops/s
Iteration  30: 125210.018 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_219._Benchmark.benchmark_Cluster_219":
  121350.390 ±(99.9%) 2385.446 ops/s [Average]
  (min, avg, max) = (110377.400, 121350.390, 127546.590), stdev = 3570.424
  CI (99.9%): [118964.944, 123735.836] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_219._Benchmark.benchmark_Cluster_219  thrpt   30  121350.390 ± 2385.446  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_22._Benchmark.benchmark_Cluster_22$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_22._Benchmark.benchmark_Cluster_22

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10777.210 ops/s
# Warmup Iteration   2: 44658.678 ops/s
# Warmup Iteration   3: 76694.328 ops/s
# Warmup Iteration   4: 97151.465 ops/s
# Warmup Iteration   5: 108505.887 ops/s
# Warmup Iteration   6: 103954.589 ops/s
# Warmup Iteration   7: 109673.533 ops/s
# Warmup Iteration   8: 110426.572 ops/s
# Warmup Iteration   9: 109266.756 ops/s
# Warmup Iteration  10: 111814.639 ops/s
# Warmup Iteration  11: 111855.144 ops/s
# Warmup Iteration  12: 110975.428 ops/s
# Warmup Iteration  13: 110248.177 ops/s
# Warmup Iteration  14: 112569.542 ops/s
# Warmup Iteration  15: 108755.804 ops/s
# Warmup Iteration  16: 114086.642 ops/s
# Warmup Iteration  17: 114884.409 ops/s
# Warmup Iteration  18: 114752.397 ops/s
# Warmup Iteration  19: 115640.768 ops/s
# Warmup Iteration  20: 115901.394 ops/s
# Warmup Iteration  21: 117271.425 ops/s
# Warmup Iteration  22: 113893.885 ops/s
# Warmup Iteration  23: 116307.487 ops/s
# Warmup Iteration  24: 114512.773 ops/s
# Warmup Iteration  25: 111068.729 ops/s
# Warmup Iteration  26: 119265.846 ops/s
# Warmup Iteration  27: 112700.835 ops/s
# Warmup Iteration  28: 116537.983 ops/s
# Warmup Iteration  29: 117358.292 ops/s
# Warmup Iteration  30: 115293.634 ops/s
Iteration   1: 114289.017 ops/s
Iteration   2: 117705.226 ops/s
Iteration   3: 116385.061 ops/s
Iteration   4: 115444.120 ops/s
Iteration   5: 117220.607 ops/s
Iteration   6: 114246.154 ops/s
Iteration   7: 114998.231 ops/s
Iteration   8: 116292.574 ops/s
Iteration   9: 121255.847 ops/s
Iteration  10: 115974.232 ops/s
Iteration  11: 114189.121 ops/s
Iteration  12: 120921.842 ops/s
Iteration  13: 113529.647 ops/s
Iteration  14: 115788.482 ops/s
Iteration  15: 122158.288 ops/s
Iteration  16: 113193.091 ops/s
Iteration  17: 115084.379 ops/s
Iteration  18: 115812.645 ops/s
Iteration  19: 120296.044 ops/s
Iteration  20: 113066.327 ops/s
Iteration  21: 119666.578 ops/s
Iteration  22: 112656.655 ops/s
Iteration  23: 117945.957 ops/s
Iteration  24: 123134.820 ops/s
Iteration  25: 108973.488 ops/s
Iteration  26: 115230.052 ops/s
Iteration  27: 119258.938 ops/s
Iteration  28: 114304.042 ops/s
Iteration  29: 117661.269 ops/s
Iteration  30: 118660.555 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_22._Benchmark.benchmark_Cluster_22":
  116511.443 ±(99.9%) 2119.049 ops/s [Average]
  (min, avg, max) = (108973.488, 116511.443, 123134.820), stdev = 3171.693
  CI (99.9%): [114392.394, 118630.492] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_22._Benchmark.benchmark_Cluster_22  thrpt   30  116511.443 ± 2119.049  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_220._Benchmark.benchmark_Cluster_220$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_220._Benchmark.benchmark_Cluster_220

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3062.799 ops/s
# Warmup Iteration   2: 22948.399 ops/s
# Warmup Iteration   3: 30681.972 ops/s
# Warmup Iteration   4: 31382.436 ops/s
# Warmup Iteration   5: 41169.430 ops/s
# Warmup Iteration   6: 38094.070 ops/s
# Warmup Iteration   7: 72723.394 ops/s
# Warmup Iteration   8: 100094.945 ops/s
# Warmup Iteration   9: 102958.259 ops/s
# Warmup Iteration  10: 98709.462 ops/s
# Warmup Iteration  11: 100852.034 ops/s
# Warmup Iteration  12: 100571.128 ops/s
# Warmup Iteration  13: 100264.126 ops/s
# Warmup Iteration  14: 84758.059 ops/s
# Warmup Iteration  15: 92006.649 ops/s
# Warmup Iteration  16: 100711.685 ops/s
# Warmup Iteration  17: 103292.879 ops/s
# Warmup Iteration  18: 101913.154 ops/s
# Warmup Iteration  19: 101271.056 ops/s
# Warmup Iteration  20: 99989.504 ops/s
# Warmup Iteration  21: 106445.288 ops/s
# Warmup Iteration  22: 105311.734 ops/s
# Warmup Iteration  23: 103541.079 ops/s
# Warmup Iteration  24: 104609.838 ops/s
# Warmup Iteration  25: 102941.327 ops/s
# Warmup Iteration  26: 106259.672 ops/s
# Warmup Iteration  27: 101126.479 ops/s
# Warmup Iteration  28: 106861.545 ops/s
# Warmup Iteration  29: 102997.611 ops/s
# Warmup Iteration  30: 102869.999 ops/s
Iteration   1: 105982.088 ops/s
Iteration   2: 101049.177 ops/s
Iteration   3: 105392.117 ops/s
Iteration   4: 104172.890 ops/s
Iteration   5: 106729.677 ops/s
Iteration   6: 107293.438 ops/s
Iteration   7: 102159.392 ops/s
Iteration   8: 102095.882 ops/s
Iteration   9: 109123.927 ops/s
Iteration  10: 101813.697 ops/s
Iteration  11: 103752.064 ops/s
Iteration  12: 101245.667 ops/s
Iteration  13: 101764.053 ops/s
Iteration  14: 107027.187 ops/s
Iteration  15: 103244.215 ops/s
Iteration  16: 103010.566 ops/s
Iteration  17: 109813.863 ops/s
Iteration  18: 101785.613 ops/s
Iteration  19: 107193.412 ops/s
Iteration  20: 104172.764 ops/s
Iteration  21: 104775.827 ops/s
Iteration  22: 106884.055 ops/s
Iteration  23: 103251.746 ops/s
Iteration  24: 105884.908 ops/s
Iteration  25: 102020.282 ops/s
Iteration  26: 106133.434 ops/s
Iteration  27: 102773.518 ops/s
Iteration  28: 105521.442 ops/s
Iteration  29: 106864.568 ops/s
Iteration  30: 102507.461 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_220._Benchmark.benchmark_Cluster_220":
  104514.631 ±(99.9%) 1622.621 ops/s [Average]
  (min, avg, max) = (101049.177, 104514.631, 109813.863), stdev = 2428.664
  CI (99.9%): [102892.010, 106137.252] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_220._Benchmark.benchmark_Cluster_220  thrpt   30  104514.631 ± 1622.621  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_221._Benchmark.benchmark_Cluster_221$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_221._Benchmark.benchmark_Cluster_221

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20324.237 ops/s
# Warmup Iteration   2: 76652.397 ops/s
# Warmup Iteration   3: 89145.647 ops/s
# Warmup Iteration   4: 111307.819 ops/s
# Warmup Iteration   5: 113105.675 ops/s
# Warmup Iteration   6: 109090.840 ops/s
# Warmup Iteration   7: 113978.036 ops/s
# Warmup Iteration   8: 112022.883 ops/s
# Warmup Iteration   9: 109997.136 ops/s
# Warmup Iteration  10: 110824.430 ops/s
# Warmup Iteration  11: 112549.592 ops/s
# Warmup Iteration  12: 116742.180 ops/s
# Warmup Iteration  13: 114313.900 ops/s
# Warmup Iteration  14: 109013.121 ops/s
# Warmup Iteration  15: 117897.195 ops/s
# Warmup Iteration  16: 112767.808 ops/s
# Warmup Iteration  17: 118484.331 ops/s
# Warmup Iteration  18: 122525.655 ops/s
# Warmup Iteration  19: 115554.460 ops/s
# Warmup Iteration  20: 120968.884 ops/s
# Warmup Iteration  21: 117414.875 ops/s
# Warmup Iteration  22: 117146.258 ops/s
# Warmup Iteration  23: 118265.029 ops/s
# Warmup Iteration  24: 121212.695 ops/s
# Warmup Iteration  25: 117456.500 ops/s
# Warmup Iteration  26: 121044.867 ops/s
# Warmup Iteration  27: 116943.759 ops/s
# Warmup Iteration  28: 119593.616 ops/s
# Warmup Iteration  29: 119843.184 ops/s
# Warmup Iteration  30: 115856.229 ops/s
Iteration   1: 122727.683 ops/s
Iteration   2: 118776.367 ops/s
Iteration   3: 120744.687 ops/s
Iteration   4: 121198.857 ops/s
Iteration   5: 114988.003 ops/s
Iteration   6: 122603.665 ops/s
Iteration   7: 116397.941 ops/s
Iteration   8: 120512.335 ops/s
Iteration   9: 126849.345 ops/s
Iteration  10: 117547.515 ops/s
Iteration  11: 115548.323 ops/s
Iteration  12: 123060.699 ops/s
Iteration  13: 116068.033 ops/s
Iteration  14: 124934.804 ops/s
Iteration  15: 111603.937 ops/s
Iteration  16: 125529.707 ops/s
Iteration  17: 114239.142 ops/s
Iteration  18: 123183.357 ops/s
Iteration  19: 115676.531 ops/s
Iteration  20: 122000.227 ops/s
Iteration  21: 119168.297 ops/s
Iteration  22: 117255.787 ops/s
Iteration  23: 125317.533 ops/s
Iteration  24: 122393.342 ops/s
Iteration  25: 114894.610 ops/s
Iteration  26: 124336.553 ops/s
Iteration  27: 114474.940 ops/s
Iteration  28: 121998.815 ops/s
Iteration  29: 111507.519 ops/s
Iteration  30: 123096.070 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_221._Benchmark.benchmark_Cluster_221":
  119621.154 ±(99.9%) 2893.942 ops/s [Average]
  (min, avg, max) = (111507.519, 119621.154, 126849.345), stdev = 4331.517
  CI (99.9%): [116727.212, 122515.097] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_221._Benchmark.benchmark_Cluster_221  thrpt   30  119621.154 ± 2893.942  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_222._Benchmark.benchmark_Cluster_222$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_222._Benchmark.benchmark_Cluster_222

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14027.361 ops/s
# Warmup Iteration   2: 33757.983 ops/s
# Warmup Iteration   3: 38035.519 ops/s
# Warmup Iteration   4: 47142.489 ops/s
# Warmup Iteration   5: 67437.414 ops/s
# Warmup Iteration   6: 116635.031 ops/s
# Warmup Iteration   7: 137661.298 ops/s
# Warmup Iteration   8: 132623.962 ops/s
# Warmup Iteration   9: 110494.430 ops/s
# Warmup Iteration  10: 131871.541 ops/s
# Warmup Iteration  11: 132895.801 ops/s
# Warmup Iteration  12: 133821.029 ops/s
# Warmup Iteration  13: 134811.825 ops/s
# Warmup Iteration  14: 136951.315 ops/s
# Warmup Iteration  15: 130962.996 ops/s
# Warmup Iteration  16: 133657.599 ops/s
# Warmup Iteration  17: 142740.623 ops/s
# Warmup Iteration  18: 144032.473 ops/s
# Warmup Iteration  19: 141230.547 ops/s
# Warmup Iteration  20: 141062.443 ops/s
# Warmup Iteration  21: 144264.445 ops/s
# Warmup Iteration  22: 133177.102 ops/s
# Warmup Iteration  23: 137643.040 ops/s
# Warmup Iteration  24: 144219.583 ops/s
# Warmup Iteration  25: 137064.531 ops/s
# Warmup Iteration  26: 144238.858 ops/s
# Warmup Iteration  27: 139366.202 ops/s
# Warmup Iteration  28: 144893.096 ops/s
# Warmup Iteration  29: 137284.765 ops/s
# Warmup Iteration  30: 139329.562 ops/s
Iteration   1: 142643.443 ops/s
Iteration   2: 138121.557 ops/s
Iteration   3: 143301.784 ops/s
Iteration   4: 139867.906 ops/s
Iteration   5: 138977.683 ops/s
Iteration   6: 149072.424 ops/s
Iteration   7: 134681.348 ops/s
Iteration   8: 144817.964 ops/s
Iteration   9: 136179.914 ops/s
Iteration  10: 144026.438 ops/s
Iteration  11: 148676.385 ops/s
Iteration  12: 137899.786 ops/s
Iteration  13: 144529.251 ops/s
Iteration  14: 140661.141 ops/s
Iteration  15: 133714.934 ops/s
Iteration  16: 143962.030 ops/s
Iteration  17: 137652.095 ops/s
Iteration  18: 145455.642 ops/s
Iteration  19: 135954.395 ops/s
Iteration  20: 138351.739 ops/s
Iteration  21: 144419.815 ops/s
Iteration  22: 138519.718 ops/s
Iteration  23: 144669.049 ops/s
Iteration  24: 135902.954 ops/s
Iteration  25: 142147.235 ops/s
Iteration  26: 145326.231 ops/s
Iteration  27: 135045.234 ops/s
Iteration  28: 142680.736 ops/s
Iteration  29: 137538.361 ops/s
Iteration  30: 143795.773 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_222._Benchmark.benchmark_Cluster_222":
  140953.099 ±(99.9%) 2816.970 ops/s [Average]
  (min, avg, max) = (133714.934, 140953.099, 149072.424), stdev = 4216.308
  CI (99.9%): [138136.129, 143770.069] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_222._Benchmark.benchmark_Cluster_222  thrpt   30  140953.099 ± 2816.970  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_223._Benchmark.benchmark_Cluster_223$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_223._Benchmark.benchmark_Cluster_223

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18514.665 ops/s
# Warmup Iteration   2: 43062.253 ops/s
# Warmup Iteration   3: 88785.139 ops/s
# Warmup Iteration   4: 103803.192 ops/s
# Warmup Iteration   5: 104873.859 ops/s
# Warmup Iteration   6: 99490.768 ops/s
# Warmup Iteration   7: 98409.301 ops/s
# Warmup Iteration   8: 111018.331 ops/s
# Warmup Iteration   9: 107105.073 ops/s
# Warmup Iteration  10: 109240.420 ops/s
# Warmup Iteration  11: 107279.657 ops/s
# Warmup Iteration  12: 109006.113 ops/s
# Warmup Iteration  13: 111589.573 ops/s
# Warmup Iteration  14: 106401.295 ops/s
# Warmup Iteration  15: 110127.792 ops/s
# Warmup Iteration  16: 105546.760 ops/s
# Warmup Iteration  17: 115863.537 ops/s
# Warmup Iteration  18: 115786.047 ops/s
# Warmup Iteration  19: 106584.885 ops/s
# Warmup Iteration  20: 112737.914 ops/s
# Warmup Iteration  21: 111063.644 ops/s
# Warmup Iteration  22: 113214.126 ops/s
# Warmup Iteration  23: 118765.433 ops/s
# Warmup Iteration  24: 110679.743 ops/s
# Warmup Iteration  25: 109324.931 ops/s
# Warmup Iteration  26: 114932.054 ops/s
# Warmup Iteration  27: 109719.408 ops/s
# Warmup Iteration  28: 113691.575 ops/s
# Warmup Iteration  29: 111579.213 ops/s
# Warmup Iteration  30: 114359.236 ops/s
Iteration   1: 112727.185 ops/s
Iteration   2: 109221.054 ops/s
Iteration   3: 116111.300 ops/s
Iteration   4: 113536.529 ops/s
Iteration   5: 110944.109 ops/s
Iteration   6: 115987.733 ops/s
Iteration   7: 110570.832 ops/s
Iteration   8: 112115.070 ops/s
Iteration   9: 115253.485 ops/s
Iteration  10: 115087.665 ops/s
Iteration  11: 109421.987 ops/s
Iteration  12: 114833.195 ops/s
Iteration  13: 113820.438 ops/s
Iteration  14: 108756.773 ops/s
Iteration  15: 111280.220 ops/s
Iteration  16: 114901.983 ops/s
Iteration  17: 112019.098 ops/s
Iteration  18: 112072.556 ops/s
Iteration  19: 116038.347 ops/s
Iteration  20: 108658.913 ops/s
Iteration  21: 109650.109 ops/s
Iteration  22: 111742.420 ops/s
Iteration  23: 114115.566 ops/s
Iteration  24: 114549.303 ops/s
Iteration  25: 109356.539 ops/s
Iteration  26: 116418.305 ops/s
Iteration  27: 108741.677 ops/s
Iteration  28: 113705.849 ops/s
Iteration  29: 110969.431 ops/s
Iteration  30: 112694.353 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_223._Benchmark.benchmark_Cluster_223":
  112510.067 ±(99.9%) 1673.580 ops/s [Average]
  (min, avg, max) = (108658.913, 112510.067, 116418.305), stdev = 2504.936
  CI (99.9%): [110836.487, 114183.648] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_223._Benchmark.benchmark_Cluster_223  thrpt   30  112510.067 ± 1673.580  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_224._Benchmark.benchmark_Cluster_224$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_224._Benchmark.benchmark_Cluster_224

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 27683.548 ops/s
# Warmup Iteration   2: 87012.583 ops/s
# Warmup Iteration   3: 114236.147 ops/s
# Warmup Iteration   4: 199745.606 ops/s
# Warmup Iteration   5: 281127.672 ops/s
# Warmup Iteration   6: 303516.840 ops/s
# Warmup Iteration   7: 312794.244 ops/s
# Warmup Iteration   8: 325336.034 ops/s
# Warmup Iteration   9: 302849.055 ops/s
# Warmup Iteration  10: 317600.125 ops/s
# Warmup Iteration  11: 309643.326 ops/s
# Warmup Iteration  12: 325514.020 ops/s
# Warmup Iteration  13: 302624.582 ops/s
# Warmup Iteration  14: 318353.961 ops/s
# Warmup Iteration  15: 318691.448 ops/s
# Warmup Iteration  16: 313807.429 ops/s
# Warmup Iteration  17: 322893.286 ops/s
# Warmup Iteration  18: 308900.757 ops/s
# Warmup Iteration  19: 323504.389 ops/s
# Warmup Iteration  20: 321677.614 ops/s
# Warmup Iteration  21: 311972.132 ops/s
# Warmup Iteration  22: 318692.814 ops/s
# Warmup Iteration  23: 315086.341 ops/s
# Warmup Iteration  24: 311205.871 ops/s
# Warmup Iteration  25: 323260.588 ops/s
# Warmup Iteration  26: 308095.222 ops/s
# Warmup Iteration  27: 314858.885 ops/s
# Warmup Iteration  28: 319744.593 ops/s
# Warmup Iteration  29: 304067.544 ops/s
# Warmup Iteration  30: 329925.616 ops/s
Iteration   1: 312844.753 ops/s
Iteration   2: 303670.940 ops/s
Iteration   3: 318670.764 ops/s
Iteration   4: 312315.337 ops/s
Iteration   5: 306712.553 ops/s
Iteration   6: 329371.932 ops/s
Iteration   7: 323326.546 ops/s
Iteration   8: 308280.994 ops/s
Iteration   9: 333118.787 ops/s
Iteration  10: 330090.338 ops/s
Iteration  11: 307563.298 ops/s
Iteration  12: 330823.844 ops/s
Iteration  13: 316716.183 ops/s
Iteration  14: 313292.234 ops/s
Iteration  15: 318495.380 ops/s
Iteration  16: 322722.878 ops/s
Iteration  17: 307817.813 ops/s
Iteration  18: 314234.193 ops/s
Iteration  19: 304414.924 ops/s
Iteration  20: 318674.482 ops/s
Iteration  21: 316351.424 ops/s
Iteration  22: 313728.152 ops/s
Iteration  23: 321427.620 ops/s
Iteration  24: 308496.531 ops/s
Iteration  25: 323137.999 ops/s
Iteration  26: 308747.261 ops/s
Iteration  27: 324480.762 ops/s
Iteration  28: 319656.708 ops/s
Iteration  29: 309096.614 ops/s
Iteration  30: 325061.433 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_224._Benchmark.benchmark_Cluster_224":
  316778.089 ±(99.9%) 5556.293 ops/s [Average]
  (min, avg, max) = (303670.940, 316778.089, 333118.787), stdev = 8316.398
  CI (99.9%): [311221.796, 322334.382] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_224._Benchmark.benchmark_Cluster_224  thrpt   30  316778.089 ± 5556.293  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_225._Benchmark.benchmark_Cluster_225$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_225._Benchmark.benchmark_Cluster_225

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4228.698 ops/s
# Warmup Iteration   2: 19905.134 ops/s
# Warmup Iteration   3: 36459.637 ops/s
# Warmup Iteration   4: 60430.305 ops/s
# Warmup Iteration   5: 81697.817 ops/s
# Warmup Iteration   6: 87464.923 ops/s
# Warmup Iteration   7: 92665.074 ops/s
# Warmup Iteration   8: 95858.038 ops/s
# Warmup Iteration   9: 100144.442 ops/s
# Warmup Iteration  10: 100816.385 ops/s
# Warmup Iteration  11: 96217.169 ops/s
# Warmup Iteration  12: 99227.381 ops/s
# Warmup Iteration  13: 101040.529 ops/s
# Warmup Iteration  14: 97714.861 ops/s
# Warmup Iteration  15: 105992.546 ops/s
# Warmup Iteration  16: 95405.116 ops/s
# Warmup Iteration  17: 109454.304 ops/s
# Warmup Iteration  18: 103513.799 ops/s
# Warmup Iteration  19: 107178.526 ops/s
# Warmup Iteration  20: 106232.985 ops/s
# Warmup Iteration  21: 103481.247 ops/s
# Warmup Iteration  22: 105224.743 ops/s
# Warmup Iteration  23: 108860.038 ops/s
# Warmup Iteration  24: 104876.508 ops/s
# Warmup Iteration  25: 106272.178 ops/s
# Warmup Iteration  26: 105264.519 ops/s
# Warmup Iteration  27: 105669.273 ops/s
# Warmup Iteration  28: 111355.568 ops/s
# Warmup Iteration  29: 102270.904 ops/s
# Warmup Iteration  30: 108875.023 ops/s
Iteration   1: 103903.693 ops/s
Iteration   2: 108234.087 ops/s
Iteration   3: 102297.974 ops/s
Iteration   4: 101877.912 ops/s
Iteration   5: 110158.505 ops/s
Iteration   6: 109486.707 ops/s
Iteration   7: 103684.213 ops/s
Iteration   8: 110516.388 ops/s
Iteration   9: 101532.353 ops/s
Iteration  10: 105521.472 ops/s
Iteration  11: 107500.792 ops/s
Iteration  12: 100561.924 ops/s
Iteration  13: 107069.341 ops/s
Iteration  14: 108565.483 ops/s
Iteration  15: 105180.710 ops/s
Iteration  16: 104340.428 ops/s
Iteration  17: 110157.620 ops/s
Iteration  18: 106527.470 ops/s
Iteration  19: 102618.120 ops/s
Iteration  20: 109817.310 ops/s
Iteration  21: 104327.262 ops/s
Iteration  22: 109165.066 ops/s
Iteration  23: 105141.228 ops/s
Iteration  24: 105676.801 ops/s
Iteration  25: 104706.535 ops/s
Iteration  26: 106128.366 ops/s
Iteration  27: 107334.343 ops/s
Iteration  28: 105466.158 ops/s
Iteration  29: 107118.067 ops/s
Iteration  30: 81080.889 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_225._Benchmark.benchmark_Cluster_225":
  105189.907 ±(99.9%) 3556.954 ops/s [Average]
  (min, avg, max) = (81080.889, 105189.907, 110516.388), stdev = 5323.882
  CI (99.9%): [101632.953, 108746.862] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_225._Benchmark.benchmark_Cluster_225  thrpt   30  105189.907 ± 3556.954  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_226._Benchmark.benchmark_Cluster_226$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_226._Benchmark.benchmark_Cluster_226

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3350.978 ops/s
# Warmup Iteration   2: 13149.309 ops/s
# Warmup Iteration   3: 28631.769 ops/s
# Warmup Iteration   4: 26071.726 ops/s
# Warmup Iteration   5: 30236.565 ops/s
# Warmup Iteration   6: 40074.526 ops/s
# Warmup Iteration   7: 70793.562 ops/s
# Warmup Iteration   8: 98164.335 ops/s
# Warmup Iteration   9: 96941.248 ops/s
# Warmup Iteration  10: 100833.025 ops/s
# Warmup Iteration  11: 97264.154 ops/s
# Warmup Iteration  12: 102212.660 ops/s
# Warmup Iteration  13: 105158.201 ops/s
# Warmup Iteration  14: 102869.489 ops/s
# Warmup Iteration  15: 101093.177 ops/s
# Warmup Iteration  16: 98175.769 ops/s
# Warmup Iteration  17: 104657.229 ops/s
# Warmup Iteration  18: 109054.070 ops/s
# Warmup Iteration  19: 107027.686 ops/s
# Warmup Iteration  20: 106910.761 ops/s
# Warmup Iteration  21: 107376.801 ops/s
# Warmup Iteration  22: 109259.123 ops/s
# Warmup Iteration  23: 104965.139 ops/s
# Warmup Iteration  24: 105403.206 ops/s
# Warmup Iteration  25: 106897.225 ops/s
# Warmup Iteration  26: 111891.890 ops/s
# Warmup Iteration  27: 109588.606 ops/s
# Warmup Iteration  28: 104744.544 ops/s
# Warmup Iteration  29: 108694.074 ops/s
# Warmup Iteration  30: 103909.385 ops/s
Iteration   1: 109325.987 ops/s
Iteration   2: 104966.570 ops/s
Iteration   3: 110505.478 ops/s
Iteration   4: 104353.071 ops/s
Iteration   5: 110676.398 ops/s
Iteration   6: 104485.372 ops/s
Iteration   7: 107141.591 ops/s
Iteration   8: 111535.815 ops/s
Iteration   9: 103358.209 ops/s
Iteration  10: 108428.812 ops/s
Iteration  11: 101974.273 ops/s
Iteration  12: 107396.104 ops/s
Iteration  13: 112021.670 ops/s
Iteration  14: 106326.125 ops/s
Iteration  15: 104546.958 ops/s
Iteration  16: 108138.349 ops/s
Iteration  17: 105821.013 ops/s
Iteration  18: 107482.908 ops/s
Iteration  19: 110712.264 ops/s
Iteration  20: 105865.470 ops/s
Iteration  21: 110689.915 ops/s
Iteration  22: 103882.952 ops/s
Iteration  23: 107895.018 ops/s
Iteration  24: 102889.035 ops/s
Iteration  25: 106014.933 ops/s
Iteration  26: 102652.891 ops/s
Iteration  27: 106192.640 ops/s
Iteration  28: 107793.195 ops/s
Iteration  29: 103498.424 ops/s
Iteration  30: 111669.584 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_226._Benchmark.benchmark_Cluster_226":
  106941.367 ±(99.9%) 1984.316 ops/s [Average]
  (min, avg, max) = (101974.273, 106941.367, 112021.670), stdev = 2970.032
  CI (99.9%): [104957.051, 108925.684] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_226._Benchmark.benchmark_Cluster_226  thrpt   30  106941.367 ± 1984.316  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_227._Benchmark.benchmark_Cluster_227$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_227._Benchmark.benchmark_Cluster_227

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17646.471 ops/s
# Warmup Iteration   2: 43109.544 ops/s
# Warmup Iteration   3: 43639.325 ops/s
# Warmup Iteration   4: 48403.456 ops/s
# Warmup Iteration   5: 103278.624 ops/s
# Warmup Iteration   6: 113476.462 ops/s
# Warmup Iteration   7: 102369.543 ops/s
# Warmup Iteration   8: 122033.120 ops/s
# Warmup Iteration   9: 114389.809 ops/s
# Warmup Iteration  10: 111954.622 ops/s
# Warmup Iteration  11: 117119.376 ops/s
# Warmup Iteration  12: 115846.523 ops/s
# Warmup Iteration  13: 119351.812 ops/s
# Warmup Iteration  14: 113471.150 ops/s
# Warmup Iteration  15: 118675.634 ops/s
# Warmup Iteration  16: 119464.807 ops/s
# Warmup Iteration  17: 122051.733 ops/s
# Warmup Iteration  18: 121181.090 ops/s
# Warmup Iteration  19: 125666.588 ops/s
# Warmup Iteration  20: 117474.483 ops/s
# Warmup Iteration  21: 126367.754 ops/s
# Warmup Iteration  22: 127260.562 ops/s
# Warmup Iteration  23: 109549.810 ops/s
# Warmup Iteration  24: 124169.458 ops/s
# Warmup Iteration  25: 126874.850 ops/s
# Warmup Iteration  26: 129337.638 ops/s
# Warmup Iteration  27: 124983.161 ops/s
# Warmup Iteration  28: 122048.942 ops/s
# Warmup Iteration  29: 121563.124 ops/s
# Warmup Iteration  30: 120301.336 ops/s
Iteration   1: 124438.241 ops/s
Iteration   2: 121769.576 ops/s
Iteration   3: 121613.678 ops/s
Iteration   4: 127295.808 ops/s
Iteration   5: 124569.510 ops/s
Iteration   6: 118459.799 ops/s
Iteration   7: 125654.548 ops/s
Iteration   8: 123785.865 ops/s
Iteration   9: 120292.807 ops/s
Iteration  10: 125148.931 ops/s
Iteration  11: 123123.346 ops/s
Iteration  12: 123916.964 ops/s
Iteration  13: 119574.020 ops/s
Iteration  14: 118503.278 ops/s
Iteration  15: 121743.952 ops/s
Iteration  16: 118157.347 ops/s
Iteration  17: 125039.044 ops/s
Iteration  18: 121637.470 ops/s
Iteration  19: 120159.757 ops/s
Iteration  20: 127096.849 ops/s
Iteration  21: 120035.419 ops/s
Iteration  22: 124339.795 ops/s
Iteration  23: 120804.028 ops/s
Iteration  24: 96108.863 ops/s
Iteration  25: 122943.703 ops/s
Iteration  26: 120962.002 ops/s
Iteration  27: 127102.303 ops/s
Iteration  28: 117132.479 ops/s
Iteration  29: 121707.649 ops/s
Iteration  30: 120511.197 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_227._Benchmark.benchmark_Cluster_227":
  121454.274 ±(99.9%) 3691.845 ops/s [Average]
  (min, avg, max) = (96108.863, 121454.274, 127295.808), stdev = 5525.780
  CI (99.9%): [117762.429, 125146.119] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_227._Benchmark.benchmark_Cluster_227  thrpt   30  121454.274 ± 3691.845  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_228._Benchmark.benchmark_Cluster_228$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_228._Benchmark.benchmark_Cluster_228

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3274.432 ops/s
# Warmup Iteration   2: 18634.886 ops/s
# Warmup Iteration   3: 25422.090 ops/s
# Warmup Iteration   4: 42703.691 ops/s
# Warmup Iteration   5: 49405.579 ops/s
# Warmup Iteration   6: 91796.956 ops/s
# Warmup Iteration   7: 111003.880 ops/s
# Warmup Iteration   8: 105293.605 ops/s
# Warmup Iteration   9: 108952.425 ops/s
# Warmup Iteration  10: 111953.041 ops/s
# Warmup Iteration  11: 101715.643 ops/s
# Warmup Iteration  12: 108559.132 ops/s
# Warmup Iteration  13: 106440.769 ops/s
# Warmup Iteration  14: 110242.707 ops/s
# Warmup Iteration  15: 106087.388 ops/s
# Warmup Iteration  16: 108255.579 ops/s
# Warmup Iteration  17: 113750.861 ops/s
# Warmup Iteration  18: 110570.492 ops/s
# Warmup Iteration  19: 116946.033 ops/s
# Warmup Iteration  20: 113661.248 ops/s
# Warmup Iteration  21: 110589.938 ops/s
# Warmup Iteration  22: 115994.249 ops/s
# Warmup Iteration  23: 115442.764 ops/s
# Warmup Iteration  24: 112785.496 ops/s
# Warmup Iteration  25: 108919.950 ops/s
# Warmup Iteration  26: 111613.718 ops/s
# Warmup Iteration  27: 116029.684 ops/s
# Warmup Iteration  28: 111864.605 ops/s
# Warmup Iteration  29: 114668.896 ops/s
# Warmup Iteration  30: 110164.316 ops/s
Iteration   1: 107317.753 ops/s
Iteration   2: 111846.159 ops/s
Iteration   3: 104881.694 ops/s
Iteration   4: 112693.416 ops/s
Iteration   5: 112719.101 ops/s
Iteration   6: 114448.602 ops/s
Iteration   7: 111297.541 ops/s
Iteration   8: 112662.505 ops/s
Iteration   9: 114930.189 ops/s
Iteration  10: 110513.106 ops/s
Iteration  11: 113479.851 ops/s
Iteration  12: 112509.486 ops/s
Iteration  13: 114299.742 ops/s
Iteration  14: 110415.238 ops/s
Iteration  15: 113582.817 ops/s
Iteration  16: 115290.189 ops/s
Iteration  17: 115424.355 ops/s
Iteration  18: 111394.261 ops/s
Iteration  19: 117193.427 ops/s
Iteration  20: 108980.769 ops/s
Iteration  21: 113270.119 ops/s
Iteration  22: 118089.861 ops/s
Iteration  23: 110326.450 ops/s
Iteration  24: 112028.632 ops/s
Iteration  25: 108728.113 ops/s
Iteration  26: 115801.420 ops/s
Iteration  27: 111182.979 ops/s
Iteration  28: 110485.290 ops/s
Iteration  29: 116430.316 ops/s
Iteration  30: 108112.873 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_228._Benchmark.benchmark_Cluster_228":
  112344.542 ±(99.9%) 2015.430 ops/s [Average]
  (min, avg, max) = (104881.694, 112344.542, 118089.861), stdev = 3016.601
  CI (99.9%): [110329.112, 114359.972] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_228._Benchmark.benchmark_Cluster_228  thrpt   30  112344.542 ± 2015.430  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_229._Benchmark.benchmark_Cluster_229$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_229._Benchmark.benchmark_Cluster_229

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1668.215 ops/s
# Warmup Iteration   2: 12066.740 ops/s
# Warmup Iteration   3: 19687.606 ops/s
# Warmup Iteration   4: 56516.970 ops/s
# Warmup Iteration   5: 39898.313 ops/s
# Warmup Iteration   6: 40969.234 ops/s
# Warmup Iteration   7: 68024.499 ops/s
# Warmup Iteration   8: 92447.288 ops/s
# Warmup Iteration   9: 96346.980 ops/s
# Warmup Iteration  10: 93733.531 ops/s
# Warmup Iteration  11: 94566.376 ops/s
# Warmup Iteration  12: 95847.656 ops/s
# Warmup Iteration  13: 95952.333 ops/s
# Warmup Iteration  14: 100470.575 ops/s
# Warmup Iteration  15: 93475.228 ops/s
# Warmup Iteration  16: 95955.520 ops/s
# Warmup Iteration  17: 103551.639 ops/s
# Warmup Iteration  18: 95044.646 ops/s
# Warmup Iteration  19: 103534.781 ops/s
# Warmup Iteration  20: 103055.775 ops/s
# Warmup Iteration  21: 100496.827 ops/s
# Warmup Iteration  22: 101523.407 ops/s
# Warmup Iteration  23: 102162.399 ops/s
# Warmup Iteration  24: 100128.729 ops/s
# Warmup Iteration  25: 102347.886 ops/s
# Warmup Iteration  26: 95837.927 ops/s
# Warmup Iteration  27: 103637.541 ops/s
# Warmup Iteration  28: 101483.854 ops/s
# Warmup Iteration  29: 100727.419 ops/s
# Warmup Iteration  30: 101364.686 ops/s
Iteration   1: 102160.137 ops/s
Iteration   2: 103748.297 ops/s
Iteration   3: 104324.756 ops/s
Iteration   4: 95027.683 ops/s
Iteration   5: 103631.333 ops/s
Iteration   6: 101809.049 ops/s
Iteration   7: 103450.577 ops/s
Iteration   8: 98581.803 ops/s
Iteration   9: 99618.011 ops/s
Iteration  10: 105529.341 ops/s
Iteration  11: 101350.240 ops/s
Iteration  12: 103978.324 ops/s
Iteration  13: 104165.688 ops/s
Iteration  14: 97976.502 ops/s
Iteration  15: 94508.989 ops/s
Iteration  16: 107982.840 ops/s
Iteration  17: 100092.374 ops/s
Iteration  18: 87324.220 ops/s
Iteration  19: 106308.508 ops/s
Iteration  20: 98402.817 ops/s
Iteration  21: 103255.561 ops/s
Iteration  22: 102966.018 ops/s
Iteration  23: 102015.642 ops/s
Iteration  24: 101935.500 ops/s
Iteration  25: 100047.963 ops/s
Iteration  26: 102243.802 ops/s
Iteration  27: 102269.884 ops/s
Iteration  28: 100881.039 ops/s
Iteration  29: 103010.181 ops/s
Iteration  30: 100367.158 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_229._Benchmark.benchmark_Cluster_229":
  101298.808 ±(99.9%) 2649.331 ops/s [Average]
  (min, avg, max) = (87324.220, 101298.808, 107982.840), stdev = 3965.394
  CI (99.9%): [98649.477, 103948.139] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_229._Benchmark.benchmark_Cluster_229  thrpt   30  101298.808 ± 2649.331  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_23._Benchmark.benchmark_Cluster_23$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_23._Benchmark.benchmark_Cluster_23

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7312.517 ops/s
# Warmup Iteration   2: 34027.724 ops/s
# Warmup Iteration   3: 35071.302 ops/s
# Warmup Iteration   4: 50194.186 ops/s
# Warmup Iteration   5: 52900.004 ops/s
# Warmup Iteration   6: 125295.022 ops/s
# Warmup Iteration   7: 125251.926 ops/s
# Warmup Iteration   8: 131126.701 ops/s
# Warmup Iteration   9: 130202.707 ops/s
# Warmup Iteration  10: 125145.004 ops/s
# Warmup Iteration  11: 129290.056 ops/s
# Warmup Iteration  12: 124895.679 ops/s
# Warmup Iteration  13: 129174.746 ops/s
# Warmup Iteration  14: 135672.561 ops/s
# Warmup Iteration  15: 127781.183 ops/s
# Warmup Iteration  16: 132364.443 ops/s
# Warmup Iteration  17: 132082.488 ops/s
# Warmup Iteration  18: 138199.604 ops/s
# Warmup Iteration  19: 133186.114 ops/s
# Warmup Iteration  20: 131444.623 ops/s
# Warmup Iteration  21: 140893.128 ops/s
# Warmup Iteration  22: 133071.879 ops/s
# Warmup Iteration  23: 139188.134 ops/s
# Warmup Iteration  24: 136834.383 ops/s
# Warmup Iteration  25: 133084.766 ops/s
# Warmup Iteration  26: 136560.910 ops/s
# Warmup Iteration  27: 141619.068 ops/s
# Warmup Iteration  28: 132718.462 ops/s
# Warmup Iteration  29: 137147.587 ops/s
# Warmup Iteration  30: 135308.616 ops/s
Iteration   1: 138535.613 ops/s
Iteration   2: 139255.635 ops/s
Iteration   3: 134665.979 ops/s
Iteration   4: 143647.754 ops/s
Iteration   5: 135314.945 ops/s
Iteration   6: 136760.608 ops/s
Iteration   7: 139986.975 ops/s
Iteration   8: 140534.544 ops/s
Iteration   9: 133940.795 ops/s
Iteration  10: 141057.834 ops/s
Iteration  11: 134164.478 ops/s
Iteration  12: 139410.952 ops/s
Iteration  13: 132466.879 ops/s
Iteration  14: 135990.116 ops/s
Iteration  15: 136737.800 ops/s
Iteration  16: 134531.917 ops/s
Iteration  17: 132884.951 ops/s
Iteration  18: 140063.313 ops/s
Iteration  19: 134402.753 ops/s
Iteration  20: 140714.969 ops/s
Iteration  21: 133911.750 ops/s
Iteration  22: 138941.943 ops/s
Iteration  23: 136377.404 ops/s
Iteration  24: 135862.318 ops/s
Iteration  25: 137653.152 ops/s
Iteration  26: 137406.742 ops/s
Iteration  27: 140213.963 ops/s
Iteration  28: 134943.996 ops/s
Iteration  29: 135512.327 ops/s
Iteration  30: 139575.175 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_23._Benchmark.benchmark_Cluster_23":
  137182.253 ±(99.9%) 1896.443 ops/s [Average]
  (min, avg, max) = (132466.879, 137182.253, 143647.754), stdev = 2838.506
  CI (99.9%): [135285.810, 139078.695] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_23._Benchmark.benchmark_Cluster_23  thrpt   30  137182.253 ± 1896.443  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_230._Benchmark.benchmark_Cluster_230$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_230._Benchmark.benchmark_Cluster_230

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14982.980 ops/s
# Warmup Iteration   2: 33636.213 ops/s
# Warmup Iteration   3: 74135.295 ops/s
# Warmup Iteration   4: 96259.385 ops/s
# Warmup Iteration   5: 106795.992 ops/s
# Warmup Iteration   6: 116132.569 ops/s
# Warmup Iteration   7: 109039.338 ops/s
# Warmup Iteration   8: 112102.263 ops/s
# Warmup Iteration   9: 112284.074 ops/s
# Warmup Iteration  10: 105417.719 ops/s
# Warmup Iteration  11: 106805.659 ops/s
# Warmup Iteration  12: 104250.614 ops/s
# Warmup Iteration  13: 116226.162 ops/s
# Warmup Iteration  14: 107766.133 ops/s
# Warmup Iteration  15: 118076.683 ops/s
# Warmup Iteration  16: 112587.500 ops/s
# Warmup Iteration  17: 113820.487 ops/s
# Warmup Iteration  18: 121774.016 ops/s
# Warmup Iteration  19: 113525.661 ops/s
# Warmup Iteration  20: 117006.868 ops/s
# Warmup Iteration  21: 122066.225 ops/s
# Warmup Iteration  22: 115009.870 ops/s
# Warmup Iteration  23: 116324.205 ops/s
# Warmup Iteration  24: 117380.494 ops/s
# Warmup Iteration  25: 115105.062 ops/s
# Warmup Iteration  26: 123422.637 ops/s
# Warmup Iteration  27: 115373.435 ops/s
# Warmup Iteration  28: 117699.588 ops/s
# Warmup Iteration  29: 113730.291 ops/s
# Warmup Iteration  30: 119896.258 ops/s
Iteration   1: 118206.367 ops/s
Iteration   2: 114577.968 ops/s
Iteration   3: 120960.014 ops/s
Iteration   4: 112117.871 ops/s
Iteration   5: 118693.899 ops/s
Iteration   6: 115331.698 ops/s
Iteration   7: 110436.717 ops/s
Iteration   8: 120767.218 ops/s
Iteration   9: 116906.822 ops/s
Iteration  10: 119366.851 ops/s
Iteration  11: 113526.304 ops/s
Iteration  12: 112095.091 ops/s
Iteration  13: 104787.132 ops/s
Iteration  14: 117939.979 ops/s
Iteration  15: 115641.533 ops/s
Iteration  16: 116631.012 ops/s
Iteration  17: 116806.910 ops/s
Iteration  18: 117325.964 ops/s
Iteration  19: 116239.343 ops/s
Iteration  20: 120803.137 ops/s
Iteration  21: 115451.118 ops/s
Iteration  22: 119540.069 ops/s
Iteration  23: 116063.190 ops/s
Iteration  24: 114038.113 ops/s
Iteration  25: 122649.700 ops/s
Iteration  26: 115590.173 ops/s
Iteration  27: 118138.067 ops/s
Iteration  28: 117738.292 ops/s
Iteration  29: 116203.949 ops/s
Iteration  30: 122639.032 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_230._Benchmark.benchmark_Cluster_230":
  116573.784 ±(99.9%) 2481.096 ops/s [Average]
  (min, avg, max) = (104787.132, 116573.784, 122649.700), stdev = 3713.587
  CI (99.9%): [114092.689, 119054.880] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_230._Benchmark.benchmark_Cluster_230  thrpt   30  116573.784 ± 2481.096  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_231._Benchmark.benchmark_Cluster_231$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_231._Benchmark.benchmark_Cluster_231

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2801.164 ops/s
# Warmup Iteration   2: 29385.071 ops/s
# Warmup Iteration   3: 33180.969 ops/s
# Warmup Iteration   4: 63176.362 ops/s
# Warmup Iteration   5: 80793.047 ops/s
# Warmup Iteration   6: 117768.127 ops/s
# Warmup Iteration   7: 124508.178 ops/s
# Warmup Iteration   8: 121499.178 ops/s
# Warmup Iteration   9: 124765.998 ops/s
# Warmup Iteration  10: 124427.965 ops/s
# Warmup Iteration  11: 124022.052 ops/s
# Warmup Iteration  12: 117931.231 ops/s
# Warmup Iteration  13: 118874.155 ops/s
# Warmup Iteration  14: 128884.930 ops/s
# Warmup Iteration  15: 116620.557 ops/s
# Warmup Iteration  16: 126118.270 ops/s
# Warmup Iteration  17: 122205.140 ops/s
# Warmup Iteration  18: 122057.592 ops/s
# Warmup Iteration  19: 127275.631 ops/s
# Warmup Iteration  20: 120934.142 ops/s
# Warmup Iteration  21: 126413.947 ops/s
# Warmup Iteration  22: 119822.255 ops/s
# Warmup Iteration  23: 128411.822 ops/s
# Warmup Iteration  24: 124270.855 ops/s
# Warmup Iteration  25: 126366.817 ops/s
# Warmup Iteration  26: 124118.733 ops/s
# Warmup Iteration  27: 120463.156 ops/s
# Warmup Iteration  28: 128326.547 ops/s
# Warmup Iteration  29: 121332.237 ops/s
# Warmup Iteration  30: 122008.156 ops/s
Iteration   1: 126869.460 ops/s
Iteration   2: 119395.978 ops/s
Iteration   3: 125515.554 ops/s
Iteration   4: 120355.220 ops/s
Iteration   5: 126075.468 ops/s
Iteration   6: 127091.619 ops/s
Iteration   7: 122109.321 ops/s
Iteration   8: 125556.290 ops/s
Iteration   9: 124114.173 ops/s
Iteration  10: 126685.521 ops/s
Iteration  11: 120924.070 ops/s
Iteration  12: 124084.955 ops/s
Iteration  13: 122585.707 ops/s
Iteration  14: 120592.167 ops/s
Iteration  15: 122820.104 ops/s
Iteration  16: 117836.728 ops/s
Iteration  17: 122879.613 ops/s
Iteration  18: 124874.795 ops/s
Iteration  19: 122748.001 ops/s
Iteration  20: 119934.711 ops/s
Iteration  21: 124999.396 ops/s
Iteration  22: 125263.592 ops/s
Iteration  23: 121170.128 ops/s
Iteration  24: 125191.925 ops/s
Iteration  25: 125028.219 ops/s
Iteration  26: 126454.123 ops/s
Iteration  27: 121747.692 ops/s
Iteration  28: 123786.586 ops/s
Iteration  29: 122470.887 ops/s
Iteration  30: 122216.082 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_231._Benchmark.benchmark_Cluster_231":
  123379.270 ±(99.9%) 1631.158 ops/s [Average]
  (min, avg, max) = (117836.728, 123379.270, 127091.619), stdev = 2441.441
  CI (99.9%): [121748.111, 125010.428] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_231._Benchmark.benchmark_Cluster_231  thrpt   30  123379.270 ± 1631.158  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_232._Benchmark.benchmark_Cluster_232$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_232._Benchmark.benchmark_Cluster_232

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15909.446 ops/s
# Warmup Iteration   2: 77140.332 ops/s
# Warmup Iteration   3: 98862.781 ops/s
# Warmup Iteration   4: 115887.560 ops/s
# Warmup Iteration   5: 120934.333 ops/s
# Warmup Iteration   6: 113676.862 ops/s
# Warmup Iteration   7: 120532.042 ops/s
# Warmup Iteration   8: 117795.112 ops/s
# Warmup Iteration   9: 118237.540 ops/s
# Warmup Iteration  10: 124728.054 ops/s
# Warmup Iteration  11: 117435.331 ops/s
# Warmup Iteration  12: 117064.847 ops/s
# Warmup Iteration  13: 121642.337 ops/s
# Warmup Iteration  14: 116839.023 ops/s
# Warmup Iteration  15: 119183.424 ops/s
# Warmup Iteration  16: 116616.558 ops/s
# Warmup Iteration  17: 120083.773 ops/s
# Warmup Iteration  18: 129002.544 ops/s
# Warmup Iteration  19: 120247.566 ops/s
# Warmup Iteration  20: 123453.188 ops/s
# Warmup Iteration  21: 131510.900 ops/s
# Warmup Iteration  22: 119665.045 ops/s
# Warmup Iteration  23: 120924.333 ops/s
# Warmup Iteration  24: 125885.254 ops/s
# Warmup Iteration  25: 124336.947 ops/s
# Warmup Iteration  26: 121708.504 ops/s
# Warmup Iteration  27: 120051.390 ops/s
# Warmup Iteration  28: 122728.500 ops/s
# Warmup Iteration  29: 126598.168 ops/s
# Warmup Iteration  30: 121228.246 ops/s
Iteration   1: 129894.559 ops/s
Iteration   2: 121892.233 ops/s
Iteration   3: 122023.728 ops/s
Iteration   4: 126247.459 ops/s
Iteration   5: 122065.003 ops/s
Iteration   6: 126361.553 ops/s
Iteration   7: 103557.965 ops/s
Iteration   8: 121671.122 ops/s
Iteration   9: 120205.302 ops/s
Iteration  10: 123037.788 ops/s
Iteration  11: 122811.581 ops/s
Iteration  12: 128987.045 ops/s
Iteration  13: 122982.166 ops/s
Iteration  14: 126553.258 ops/s
Iteration  15: 126951.893 ops/s
Iteration  16: 120786.230 ops/s
Iteration  17: 129796.878 ops/s
Iteration  18: 118857.354 ops/s
Iteration  19: 125614.501 ops/s
Iteration  20: 123464.416 ops/s
Iteration  21: 127908.932 ops/s
Iteration  22: 121931.892 ops/s
Iteration  23: 124508.292 ops/s
Iteration  24: 129998.793 ops/s
Iteration  25: 121660.129 ops/s
Iteration  26: 123191.882 ops/s
Iteration  27: 120044.187 ops/s
Iteration  28: 125690.353 ops/s
Iteration  29: 124546.807 ops/s
Iteration  30: 126278.237 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_232._Benchmark.benchmark_Cluster_232":
  123650.718 ±(99.9%) 3268.790 ops/s [Average]
  (min, avg, max) = (103557.965, 123650.718, 129998.793), stdev = 4892.572
  CI (99.9%): [120381.928, 126919.508] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_232._Benchmark.benchmark_Cluster_232  thrpt   30  123650.718 ± 3268.790  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_233._Benchmark.benchmark_Cluster_233$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_233._Benchmark.benchmark_Cluster_233

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4612.101 ops/s
# Warmup Iteration   2: 20038.550 ops/s
# Warmup Iteration   3: 26181.312 ops/s
# Warmup Iteration   4: 27684.179 ops/s
# Warmup Iteration   5: 29821.424 ops/s
# Warmup Iteration   6: 43341.010 ops/s
# Warmup Iteration   7: 34750.246 ops/s
# Warmup Iteration   8: 34467.898 ops/s
# Warmup Iteration   9: 102752.764 ops/s
# Warmup Iteration  10: 83575.402 ops/s
# Warmup Iteration  11: 104506.988 ops/s
# Warmup Iteration  12: 101580.463 ops/s
# Warmup Iteration  13: 103135.880 ops/s
# Warmup Iteration  14: 103905.688 ops/s
# Warmup Iteration  15: 99601.931 ops/s
# Warmup Iteration  16: 103746.181 ops/s
# Warmup Iteration  17: 107727.748 ops/s
# Warmup Iteration  18: 103870.024 ops/s
# Warmup Iteration  19: 107846.648 ops/s
# Warmup Iteration  20: 103784.198 ops/s
# Warmup Iteration  21: 105226.224 ops/s
# Warmup Iteration  22: 107918.415 ops/s
# Warmup Iteration  23: 101661.860 ops/s
# Warmup Iteration  24: 104993.008 ops/s
# Warmup Iteration  25: 106498.413 ops/s
# Warmup Iteration  26: 103737.849 ops/s
# Warmup Iteration  27: 108255.994 ops/s
# Warmup Iteration  28: 109746.628 ops/s
# Warmup Iteration  29: 102048.126 ops/s
# Warmup Iteration  30: 106748.107 ops/s
Iteration   1: 105321.749 ops/s
Iteration   2: 107160.021 ops/s
Iteration   3: 109102.852 ops/s
Iteration   4: 101251.750 ops/s
Iteration   5: 107035.645 ops/s
Iteration   6: 103451.903 ops/s
Iteration   7: 105235.586 ops/s
Iteration   8: 107332.343 ops/s
Iteration   9: 103960.069 ops/s
Iteration  10: 107662.734 ops/s
Iteration  11: 103849.843 ops/s
Iteration  12: 105877.124 ops/s
Iteration  13: 105246.869 ops/s
Iteration  14: 104141.638 ops/s
Iteration  15: 104619.837 ops/s
Iteration  16: 104264.668 ops/s
Iteration  17: 106807.146 ops/s
Iteration  18: 106942.498 ops/s
Iteration  19: 102735.381 ops/s
Iteration  20: 111395.330 ops/s
Iteration  21: 104853.939 ops/s
Iteration  22: 103769.936 ops/s
Iteration  23: 107363.442 ops/s
Iteration  24: 103384.110 ops/s
Iteration  25: 104745.876 ops/s
Iteration  26: 111202.252 ops/s
Iteration  27: 102914.442 ops/s
Iteration  28: 108193.495 ops/s
Iteration  29: 102990.872 ops/s
Iteration  30: 110590.045 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_233._Benchmark.benchmark_Cluster_233":
  105780.113 ±(99.9%) 1720.632 ops/s [Average]
  (min, avg, max) = (101251.750, 105780.113, 111395.330), stdev = 2575.361
  CI (99.9%): [104059.481, 107500.745] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_233._Benchmark.benchmark_Cluster_233  thrpt   30  105780.113 ± 1720.632  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_234._Benchmark.benchmark_Cluster_234$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_234._Benchmark.benchmark_Cluster_234

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1868.399 ops/s
# Warmup Iteration   2: 25096.675 ops/s
# Warmup Iteration   3: 31039.755 ops/s
# Warmup Iteration   4: 45946.793 ops/s
# Warmup Iteration   5: 56177.694 ops/s
# Warmup Iteration   6: 87051.812 ops/s
# Warmup Iteration   7: 110109.936 ops/s
# Warmup Iteration   8: 105983.854 ops/s
# Warmup Iteration   9: 111032.387 ops/s
# Warmup Iteration  10: 109401.648 ops/s
# Warmup Iteration  11: 107433.556 ops/s
# Warmup Iteration  12: 105857.238 ops/s
# Warmup Iteration  13: 112594.541 ops/s
# Warmup Iteration  14: 109899.517 ops/s
# Warmup Iteration  15: 105057.948 ops/s
# Warmup Iteration  16: 109574.389 ops/s
# Warmup Iteration  17: 104704.137 ops/s
# Warmup Iteration  18: 112773.941 ops/s
# Warmup Iteration  19: 113769.767 ops/s
# Warmup Iteration  20: 109506.918 ops/s
# Warmup Iteration  21: 114058.922 ops/s
# Warmup Iteration  22: 109134.840 ops/s
# Warmup Iteration  23: 113369.199 ops/s
# Warmup Iteration  24: 110786.711 ops/s
# Warmup Iteration  25: 108650.292 ops/s
# Warmup Iteration  26: 116038.184 ops/s
# Warmup Iteration  27: 107676.190 ops/s
# Warmup Iteration  28: 111402.443 ops/s
# Warmup Iteration  29: 114850.636 ops/s
# Warmup Iteration  30: 104565.115 ops/s
Iteration   1: 98627.658 ops/s
Iteration   2: 106811.032 ops/s
Iteration   3: 112017.427 ops/s
Iteration   4: 108147.659 ops/s
Iteration   5: 109935.825 ops/s
Iteration   6: 112329.410 ops/s
Iteration   7: 108799.321 ops/s
Iteration   8: 111897.269 ops/s
Iteration   9: 109389.137 ops/s
Iteration  10: 114821.858 ops/s
Iteration  11: 106888.098 ops/s
Iteration  12: 110491.226 ops/s
Iteration  13: 115573.873 ops/s
Iteration  14: 106487.638 ops/s
Iteration  15: 111751.582 ops/s
Iteration  16: 112079.538 ops/s
Iteration  17: 110529.018 ops/s
Iteration  18: 109872.519 ops/s
Iteration  19: 114754.733 ops/s
Iteration  20: 111305.733 ops/s
Iteration  21: 114844.828 ops/s
Iteration  22: 109842.271 ops/s
Iteration  23: 110003.314 ops/s
Iteration  24: 114059.365 ops/s
Iteration  25: 107236.080 ops/s
Iteration  26: 112815.460 ops/s
Iteration  27: 109010.994 ops/s
Iteration  28: 113853.412 ops/s
Iteration  29: 109283.791 ops/s
Iteration  30: 110104.555 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_234._Benchmark.benchmark_Cluster_234":
  110452.154 ±(99.9%) 2261.214 ops/s [Average]
  (min, avg, max) = (98627.658, 110452.154, 115573.873), stdev = 3384.479
  CI (99.9%): [108190.940, 112713.368] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_234._Benchmark.benchmark_Cluster_234  thrpt   30  110452.154 ± 2261.214  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_235._Benchmark.benchmark_Cluster_235$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_235._Benchmark.benchmark_Cluster_235

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2397.445 ops/s
# Warmup Iteration   2: 12526.612 ops/s
# Warmup Iteration   3: 14312.003 ops/s
# Warmup Iteration   4: 16642.257 ops/s
# Warmup Iteration   5: 18339.403 ops/s
# Warmup Iteration   6: 16133.421 ops/s
# Warmup Iteration   7: 15754.358 ops/s
# Warmup Iteration   8: 19714.257 ops/s
# Warmup Iteration   9: 21854.531 ops/s
# Warmup Iteration  10: 16594.738 ops/s
# Warmup Iteration  11: 17150.598 ops/s
# Warmup Iteration  12: 16131.723 ops/s
# Warmup Iteration  13: 15413.674 ops/s
# Warmup Iteration  14: 16123.786 ops/s
# Warmup Iteration  15: 16394.391 ops/s
# Warmup Iteration  16: 16946.519 ops/s
# Warmup Iteration  17: 17053.713 ops/s
# Warmup Iteration  18: 16349.602 ops/s
# Warmup Iteration  19: 17562.514 ops/s
# Warmup Iteration  20: 16305.866 ops/s
# Warmup Iteration  21: 17779.270 ops/s
# Warmup Iteration  22: 17177.005 ops/s
# Warmup Iteration  23: 17156.270 ops/s
# Warmup Iteration  24: 17185.681 ops/s
# Warmup Iteration  25: 16752.866 ops/s
# Warmup Iteration  26: 17257.184 ops/s
# Warmup Iteration  27: 16906.124 ops/s
# Warmup Iteration  28: 16610.394 ops/s
# Warmup Iteration  29: 16829.077 ops/s
# Warmup Iteration  30: 16488.879 ops/s
Iteration   1: 16781.231 ops/s
Iteration   2: 16187.298 ops/s
Iteration   3: 17319.592 ops/s
Iteration   4: 16522.413 ops/s
Iteration   5: 17141.661 ops/s
Iteration   6: 16719.951 ops/s
Iteration   7: 16728.236 ops/s
Iteration   8: 17184.445 ops/s
Iteration   9: 16304.526 ops/s
Iteration  10: 16892.505 ops/s
Iteration  11: 16483.352 ops/s
Iteration  12: 16952.122 ops/s
Iteration  13: 17130.638 ops/s
Iteration  14: 16544.471 ops/s
Iteration  15: 17250.129 ops/s
Iteration  16: 16635.557 ops/s
Iteration  17: 16622.211 ops/s
Iteration  18: 16400.614 ops/s
Iteration  19: 17102.763 ops/s
Iteration  20: 16802.238 ops/s
Iteration  21: 17038.509 ops/s
Iteration  22: 16946.963 ops/s
Iteration  23: 17236.789 ops/s
Iteration  24: 16448.880 ops/s
Iteration  25: 16485.515 ops/s
Iteration  26: 16388.390 ops/s
Iteration  27: 16799.721 ops/s
Iteration  28: 16804.632 ops/s
Iteration  29: 16543.476 ops/s
Iteration  30: 17139.120 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_235._Benchmark.benchmark_Cluster_235":
  16784.598 ±(99.9%) 211.202 ops/s [Average]
  (min, avg, max) = (16187.298, 16784.598, 17319.592), stdev = 316.118
  CI (99.9%): [16573.396, 16995.801] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_235._Benchmark.benchmark_Cluster_235  thrpt   30  16784.598 ± 211.202  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_236._Benchmark.benchmark_Cluster_236$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_236._Benchmark.benchmark_Cluster_236

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6929.430 ops/s
# Warmup Iteration   2: 36697.346 ops/s
# Warmup Iteration   3: 71937.046 ops/s
# Warmup Iteration   4: 83683.546 ops/s
# Warmup Iteration   5: 102623.489 ops/s
# Warmup Iteration   6: 96085.669 ops/s
# Warmup Iteration   7: 96507.820 ops/s
# Warmup Iteration   8: 102199.607 ops/s
# Warmup Iteration   9: 95387.846 ops/s
# Warmup Iteration  10: 96805.222 ops/s
# Warmup Iteration  11: 99139.020 ops/s
# Warmup Iteration  12: 97702.771 ops/s
# Warmup Iteration  13: 99897.853 ops/s
# Warmup Iteration  14: 98087.080 ops/s
# Warmup Iteration  15: 99254.743 ops/s
# Warmup Iteration  16: 95951.195 ops/s
# Warmup Iteration  17: 98971.284 ops/s
# Warmup Iteration  18: 98993.153 ops/s
# Warmup Iteration  19: 101297.188 ops/s
# Warmup Iteration  20: 102683.169 ops/s
# Warmup Iteration  21: 99597.223 ops/s
# Warmup Iteration  22: 102543.693 ops/s
# Warmup Iteration  23: 101036.718 ops/s
# Warmup Iteration  24: 101235.096 ops/s
# Warmup Iteration  25: 75683.254 ops/s
# Warmup Iteration  26: 97971.075 ops/s
# Warmup Iteration  27: 98821.559 ops/s
# Warmup Iteration  28: 101665.691 ops/s
# Warmup Iteration  29: 99924.171 ops/s
# Warmup Iteration  30: 99356.352 ops/s
Iteration   1: 96571.056 ops/s
Iteration   2: 98004.477 ops/s
Iteration   3: 101645.632 ops/s
Iteration   4: 103158.414 ops/s
Iteration   5: 99413.766 ops/s
Iteration   6: 105369.823 ops/s
Iteration   7: 104475.911 ops/s
Iteration   8: 99578.312 ops/s
Iteration   9: 101572.915 ops/s
Iteration  10: 99860.557 ops/s
Iteration  11: 104599.609 ops/s
Iteration  12: 97385.455 ops/s
Iteration  13: 101464.737 ops/s
Iteration  14: 100692.372 ops/s
Iteration  15: 103717.534 ops/s
Iteration  16: 99812.239 ops/s
Iteration  17: 102694.375 ops/s
Iteration  18: 100569.738 ops/s
Iteration  19: 101395.201 ops/s
Iteration  20: 101579.030 ops/s
Iteration  21: 100740.723 ops/s
Iteration  22: 102258.628 ops/s
Iteration  23: 98411.433 ops/s
Iteration  24: 102456.980 ops/s
Iteration  25: 97119.321 ops/s
Iteration  26: 99725.177 ops/s
Iteration  27: 102759.289 ops/s
Iteration  28: 96005.435 ops/s
Iteration  29: 103826.489 ops/s
Iteration  30: 101277.142 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_236._Benchmark.benchmark_Cluster_236":
  100938.059 ±(99.9%) 1631.037 ops/s [Average]
  (min, avg, max) = (96005.435, 100938.059, 105369.823), stdev = 2441.260
  CI (99.9%): [99307.022, 102569.096] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_236._Benchmark.benchmark_Cluster_236  thrpt   30  100938.059 ± 1631.037  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_237._Benchmark.benchmark_Cluster_237$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_237._Benchmark.benchmark_Cluster_237

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3585.464 ops/s
# Warmup Iteration   2: 17483.323 ops/s
# Warmup Iteration   3: 22046.623 ops/s
# Warmup Iteration   4: 52856.357 ops/s
# Warmup Iteration   5: 78978.939 ops/s
# Warmup Iteration   6: 83692.051 ops/s
# Warmup Iteration   7: 86065.431 ops/s
# Warmup Iteration   8: 83484.258 ops/s
# Warmup Iteration   9: 88224.620 ops/s
# Warmup Iteration  10: 85560.113 ops/s
# Warmup Iteration  11: 84247.092 ops/s
# Warmup Iteration  12: 85477.831 ops/s
# Warmup Iteration  13: 84026.200 ops/s
# Warmup Iteration  14: 85902.609 ops/s
# Warmup Iteration  15: 84498.669 ops/s
# Warmup Iteration  16: 84934.103 ops/s
# Warmup Iteration  17: 83926.781 ops/s
# Warmup Iteration  18: 86262.268 ops/s
# Warmup Iteration  19: 86619.276 ops/s
# Warmup Iteration  20: 84908.278 ops/s
# Warmup Iteration  21: 87831.239 ops/s
# Warmup Iteration  22: 86328.604 ops/s
# Warmup Iteration  23: 84973.129 ops/s
# Warmup Iteration  24: 86360.626 ops/s
# Warmup Iteration  25: 84443.758 ops/s
# Warmup Iteration  26: 87973.752 ops/s
# Warmup Iteration  27: 86213.346 ops/s
# Warmup Iteration  28: 86208.601 ops/s
# Warmup Iteration  29: 88159.911 ops/s
# Warmup Iteration  30: 89261.256 ops/s
Iteration   1: 84147.926 ops/s
Iteration   2: 87672.285 ops/s
Iteration   3: 86151.353 ops/s
Iteration   4: 86753.012 ops/s
Iteration   5: 90986.591 ops/s
Iteration   6: 88418.388 ops/s
Iteration   7: 85443.721 ops/s
Iteration   8: 89118.088 ops/s
Iteration   9: 87826.971 ops/s
Iteration  10: 89202.965 ops/s
Iteration  11: 86318.380 ops/s
Iteration  12: 88821.167 ops/s
Iteration  13: 84916.905 ops/s
Iteration  14: 87996.787 ops/s
Iteration  15: 86204.298 ops/s
Iteration  16: 89401.426 ops/s
Iteration  17: 84979.606 ops/s
Iteration  18: 86402.323 ops/s
Iteration  19: 90210.173 ops/s
Iteration  20: 83526.073 ops/s
Iteration  21: 88183.336 ops/s
Iteration  22: 87412.216 ops/s
Iteration  23: 85882.826 ops/s
Iteration  24: 88267.176 ops/s
Iteration  25: 84812.079 ops/s
Iteration  26: 84845.176 ops/s
Iteration  27: 85813.421 ops/s
Iteration  28: 87367.392 ops/s
Iteration  29: 88268.610 ops/s
Iteration  30: 85679.574 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_237._Benchmark.benchmark_Cluster_237":
  87034.341 ±(99.9%) 1245.353 ops/s [Average]
  (min, avg, max) = (83526.073, 87034.341, 90986.591), stdev = 1863.986
  CI (99.9%): [85788.988, 88279.695] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_237._Benchmark.benchmark_Cluster_237  thrpt   30  87034.341 ± 1245.353  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_238._Benchmark.benchmark_Cluster_238$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_238._Benchmark.benchmark_Cluster_238

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.652 ops/s
# Warmup Iteration   2: 4204.169 ops/s
# Warmup Iteration   3: 23873.274 ops/s
# Warmup Iteration   4: 34632.243 ops/s
# Warmup Iteration   5: 42405.030 ops/s
# Warmup Iteration   6: 33282.678 ops/s
# Warmup Iteration   7: 56039.447 ops/s
# Warmup Iteration   8: 56051.282 ops/s
# Warmup Iteration   9: 43350.786 ops/s
# Warmup Iteration  10: 123439.074 ops/s
# Warmup Iteration  11: 123724.794 ops/s
# Warmup Iteration  12: 124078.177 ops/s
# Warmup Iteration  13: 118389.016 ops/s
# Warmup Iteration  14: 123150.933 ops/s
# Warmup Iteration  15: 129271.356 ops/s
# Warmup Iteration  16: 123677.618 ops/s
# Warmup Iteration  17: 126009.978 ops/s
# Warmup Iteration  18: 126781.881 ops/s
# Warmup Iteration  19: 87430.852 ops/s
# Warmup Iteration  20: 126376.758 ops/s
# Warmup Iteration  21: 122139.736 ops/s
# Warmup Iteration  22: 126457.320 ops/s
# Warmup Iteration  23: 123222.873 ops/s
# Warmup Iteration  24: 125691.410 ops/s
# Warmup Iteration  25: 120486.746 ops/s
# Warmup Iteration  26: 129959.801 ops/s
# Warmup Iteration  27: 125332.008 ops/s
# Warmup Iteration  28: 122197.577 ops/s
# Warmup Iteration  29: 133364.994 ops/s
# Warmup Iteration  30: 124922.136 ops/s
Iteration   1: 125395.249 ops/s
Iteration   2: 127159.017 ops/s
Iteration   3: 132894.412 ops/s
Iteration   4: 122770.049 ops/s
Iteration   5: 131138.508 ops/s
Iteration   6: 127781.456 ops/s
Iteration   7: 125727.706 ops/s
Iteration   8: 127762.978 ops/s
Iteration   9: 124105.266 ops/s
Iteration  10: 123762.441 ops/s
Iteration  11: 133522.814 ops/s
Iteration  12: 122657.344 ops/s
Iteration  13: 129879.709 ops/s
Iteration  14: 121239.589 ops/s
Iteration  15: 126528.349 ops/s
Iteration  16: 129269.509 ops/s
Iteration  17: 121141.296 ops/s
Iteration  18: 128151.493 ops/s
Iteration  19: 130197.982 ops/s
Iteration  20: 122928.556 ops/s
Iteration  21: 127412.635 ops/s
Iteration  22: 126136.286 ops/s
Iteration  23: 125611.914 ops/s
Iteration  24: 127852.826 ops/s
Iteration  25: 125706.107 ops/s
Iteration  26: 128019.917 ops/s
Iteration  27: 126685.965 ops/s
Iteration  28: 124758.199 ops/s
Iteration  29: 130682.858 ops/s
Iteration  30: 122442.629 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_238._Benchmark.benchmark_Cluster_238":
  126644.102 ±(99.9%) 2172.695 ops/s [Average]
  (min, avg, max) = (121141.296, 126644.102, 133522.814), stdev = 3251.988
  CI (99.9%): [124471.407, 128816.797] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_238._Benchmark.benchmark_Cluster_238  thrpt   30  126644.102 ± 2172.695  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_239._Benchmark.benchmark_Cluster_239$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_239._Benchmark.benchmark_Cluster_239

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1421.332 ops/s
# Warmup Iteration   2: 13236.283 ops/s
# Warmup Iteration   3: 22670.200 ops/s
# Warmup Iteration   4: 36625.437 ops/s
# Warmup Iteration   5: 43134.894 ops/s
# Warmup Iteration   6: 28985.295 ops/s
# Warmup Iteration   7: 27037.627 ops/s
# Warmup Iteration   8: 34700.896 ops/s
# Warmup Iteration   9: 48747.994 ops/s
# Warmup Iteration  10: 86237.965 ops/s
# Warmup Iteration  11: 88889.747 ops/s
# Warmup Iteration  12: 85113.726 ops/s
# Warmup Iteration  13: 89984.793 ops/s
# Warmup Iteration  14: 90264.095 ops/s
# Warmup Iteration  15: 95330.583 ops/s
# Warmup Iteration  16: 88562.729 ops/s
# Warmup Iteration  17: 95575.913 ops/s
# Warmup Iteration  18: 87192.691 ops/s
# Warmup Iteration  19: 85403.174 ops/s
# Warmup Iteration  20: 96506.267 ops/s
# Warmup Iteration  21: 87265.581 ops/s
# Warmup Iteration  22: 89578.461 ops/s
# Warmup Iteration  23: 92390.121 ops/s
# Warmup Iteration  24: 91928.664 ops/s
# Warmup Iteration  25: 96385.936 ops/s
# Warmup Iteration  26: 91323.424 ops/s
# Warmup Iteration  27: 96340.363 ops/s
# Warmup Iteration  28: 94243.093 ops/s
# Warmup Iteration  29: 91753.468 ops/s
# Warmup Iteration  30: 96288.108 ops/s
Iteration   1: 93254.289 ops/s
Iteration   2: 92696.406 ops/s
Iteration   3: 92646.619 ops/s
Iteration   4: 92137.519 ops/s
Iteration   5: 95891.784 ops/s
Iteration   6: 91534.081 ops/s
Iteration   7: 95446.444 ops/s
Iteration   8: 95773.213 ops/s
Iteration   9: 91072.120 ops/s
Iteration  10: 95579.685 ops/s
Iteration  11: 90423.162 ops/s
Iteration  12: 95492.187 ops/s
Iteration  13: 91731.657 ops/s
Iteration  14: 92770.724 ops/s
Iteration  15: 92897.869 ops/s
Iteration  16: 95826.317 ops/s
Iteration  17: 90720.142 ops/s
Iteration  18: 96915.612 ops/s
Iteration  19: 93479.638 ops/s
Iteration  20: 94326.956 ops/s
Iteration  21: 95505.027 ops/s
Iteration  22: 91058.264 ops/s
Iteration  23: 95174.199 ops/s
Iteration  24: 91309.638 ops/s
Iteration  25: 94364.095 ops/s
Iteration  26: 90888.596 ops/s
Iteration  27: 93792.967 ops/s
Iteration  28: 96661.982 ops/s
Iteration  29: 93057.781 ops/s
Iteration  30: 92703.905 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_239._Benchmark.benchmark_Cluster_239":
  93504.429 ±(99.9%) 1307.469 ops/s [Average]
  (min, avg, max) = (90423.162, 93504.429, 96915.612), stdev = 1956.958
  CI (99.9%): [92196.960, 94811.898] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_239._Benchmark.benchmark_Cluster_239  thrpt   30  93504.429 ± 1307.469  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_24._Benchmark.benchmark_Cluster_24$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_24._Benchmark.benchmark_Cluster_24

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1256.111 ops/s
# Warmup Iteration   2: 7955.203 ops/s
# Warmup Iteration   3: 34023.545 ops/s
# Warmup Iteration   4: 41592.751 ops/s
# Warmup Iteration   5: 52726.806 ops/s
# Warmup Iteration   6: 53317.137 ops/s
# Warmup Iteration   7: 57981.279 ops/s
# Warmup Iteration   8: 55182.361 ops/s
# Warmup Iteration   9: 48594.024 ops/s
# Warmup Iteration  10: 105173.784 ops/s
# Warmup Iteration  11: 113587.342 ops/s
# Warmup Iteration  12: 125147.362 ops/s
# Warmup Iteration  13: 84014.242 ops/s
# Warmup Iteration  14: 122241.887 ops/s
# Warmup Iteration  15: 117096.088 ops/s
# Warmup Iteration  16: 120718.584 ops/s
# Warmup Iteration  17: 118943.986 ops/s
# Warmup Iteration  18: 119427.352 ops/s
# Warmup Iteration  19: 122498.075 ops/s
# Warmup Iteration  20: 115099.639 ops/s
# Warmup Iteration  21: 119944.643 ops/s
# Warmup Iteration  22: 116511.660 ops/s
# Warmup Iteration  23: 123361.985 ops/s
# Warmup Iteration  24: 124206.481 ops/s
# Warmup Iteration  25: 119157.716 ops/s
# Warmup Iteration  26: 117147.381 ops/s
# Warmup Iteration  27: 124462.316 ops/s
# Warmup Iteration  28: 123122.360 ops/s
# Warmup Iteration  29: 120197.593 ops/s
# Warmup Iteration  30: 120241.752 ops/s
Iteration   1: 120075.855 ops/s
Iteration   2: 129652.073 ops/s
Iteration   3: 120212.322 ops/s
Iteration   4: 122851.837 ops/s
Iteration   5: 124842.876 ops/s
Iteration   6: 122292.682 ops/s
Iteration   7: 128132.721 ops/s
Iteration   8: 119636.804 ops/s
Iteration   9: 127578.193 ops/s
Iteration  10: 124135.941 ops/s
Iteration  11: 120867.425 ops/s
Iteration  12: 124373.394 ops/s
Iteration  13: 122742.042 ops/s
Iteration  14: 120150.832 ops/s
Iteration  15: 125689.022 ops/s
Iteration  16: 121067.191 ops/s
Iteration  17: 127781.926 ops/s
Iteration  18: 123616.069 ops/s
Iteration  19: 120400.910 ops/s
Iteration  20: 125373.073 ops/s
Iteration  21: 121761.566 ops/s
Iteration  22: 124521.435 ops/s
Iteration  23: 122217.179 ops/s
Iteration  24: 125761.414 ops/s
Iteration  25: 125247.187 ops/s
Iteration  26: 125383.273 ops/s
Iteration  27: 126942.351 ops/s
Iteration  28: 118882.183 ops/s
Iteration  29: 127551.855 ops/s
Iteration  30: 120449.804 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_24._Benchmark.benchmark_Cluster_24":
  123673.048 ±(99.9%) 1979.467 ops/s [Average]
  (min, avg, max) = (118882.183, 123673.048, 129652.073), stdev = 2962.773
  CI (99.9%): [121693.581, 125652.515] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_24._Benchmark.benchmark_Cluster_24  thrpt   30  123673.048 ± 1979.467  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_240._Benchmark.benchmark_Cluster_240$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_240._Benchmark.benchmark_Cluster_240

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2486.297 ops/s
# Warmup Iteration   2: 17360.574 ops/s
# Warmup Iteration   3: 23798.277 ops/s
# Warmup Iteration   4: 31906.268 ops/s
# Warmup Iteration   5: 33422.677 ops/s
# Warmup Iteration   6: 37200.124 ops/s
# Warmup Iteration   7: 61503.012 ops/s
# Warmup Iteration   8: 83609.634 ops/s
# Warmup Iteration   9: 78596.428 ops/s
# Warmup Iteration  10: 84458.019 ops/s
# Warmup Iteration  11: 82098.738 ops/s
# Warmup Iteration  12: 86633.710 ops/s
# Warmup Iteration  13: 87011.261 ops/s
# Warmup Iteration  14: 83763.237 ops/s
# Warmup Iteration  15: 86660.745 ops/s
# Warmup Iteration  16: 83974.361 ops/s
# Warmup Iteration  17: 85761.245 ops/s
# Warmup Iteration  18: 88511.173 ops/s
# Warmup Iteration  19: 84886.787 ops/s
# Warmup Iteration  20: 86784.321 ops/s
# Warmup Iteration  21: 85029.683 ops/s
# Warmup Iteration  22: 85110.854 ops/s
# Warmup Iteration  23: 88929.636 ops/s
# Warmup Iteration  24: 82339.791 ops/s
# Warmup Iteration  25: 89031.267 ops/s
# Warmup Iteration  26: 83573.894 ops/s
# Warmup Iteration  27: 84740.195 ops/s
# Warmup Iteration  28: 86109.781 ops/s
# Warmup Iteration  29: 83450.267 ops/s
# Warmup Iteration  30: 85814.872 ops/s
Iteration   1: 84713.015 ops/s
Iteration   2: 88759.792 ops/s
Iteration   3: 88659.549 ops/s
Iteration   4: 84590.787 ops/s
Iteration   5: 86334.581 ops/s
Iteration   6: 87395.478 ops/s
Iteration   7: 85874.492 ops/s
Iteration   8: 89623.935 ops/s
Iteration   9: 84828.806 ops/s
Iteration  10: 85586.793 ops/s
Iteration  11: 88809.670 ops/s
Iteration  12: 85588.024 ops/s
Iteration  13: 83887.805 ops/s
Iteration  14: 87144.489 ops/s
Iteration  15: 85595.529 ops/s
Iteration  16: 87524.773 ops/s
Iteration  17: 85202.654 ops/s
Iteration  18: 86216.640 ops/s
Iteration  19: 87337.472 ops/s
Iteration  20: 84112.543 ops/s
Iteration  21: 88668.093 ops/s
Iteration  22: 85348.594 ops/s
Iteration  23: 89490.098 ops/s
Iteration  24: 85162.174 ops/s
Iteration  25: 84716.692 ops/s
Iteration  26: 89308.481 ops/s
Iteration  27: 84999.713 ops/s
Iteration  28: 88618.840 ops/s
Iteration  29: 84565.253 ops/s
Iteration  30: 87524.612 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_240._Benchmark.benchmark_Cluster_240":
  86539.646 ±(99.9%) 1202.629 ops/s [Average]
  (min, avg, max) = (83887.805, 86539.646, 89623.935), stdev = 1800.038
  CI (99.9%): [85337.017, 87742.275] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_240._Benchmark.benchmark_Cluster_240  thrpt   30  86539.646 ± 1202.629  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_241._Benchmark.benchmark_Cluster_241$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_241._Benchmark.benchmark_Cluster_241

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1643.297 ops/s
# Warmup Iteration   2: 21845.802 ops/s
# Warmup Iteration   3: 24911.172 ops/s
# Warmup Iteration   4: 36262.822 ops/s
# Warmup Iteration   5: 65950.340 ops/s
# Warmup Iteration   6: 89033.535 ops/s
# Warmup Iteration   7: 72672.936 ops/s
# Warmup Iteration   8: 87405.572 ops/s
# Warmup Iteration   9: 85593.449 ops/s
# Warmup Iteration  10: 91332.966 ops/s
# Warmup Iteration  11: 88562.933 ops/s
# Warmup Iteration  12: 85773.188 ops/s
# Warmup Iteration  13: 88832.350 ops/s
# Warmup Iteration  14: 88446.902 ops/s
# Warmup Iteration  15: 86650.907 ops/s
# Warmup Iteration  16: 90944.820 ops/s
# Warmup Iteration  17: 87630.694 ops/s
# Warmup Iteration  18: 89429.586 ops/s
# Warmup Iteration  19: 93647.979 ops/s
# Warmup Iteration  20: 88498.896 ops/s
# Warmup Iteration  21: 92334.905 ops/s
# Warmup Iteration  22: 94560.878 ops/s
# Warmup Iteration  23: 90967.145 ops/s
# Warmup Iteration  24: 85022.292 ops/s
# Warmup Iteration  25: 91214.228 ops/s
# Warmup Iteration  26: 89732.091 ops/s
# Warmup Iteration  27: 90222.987 ops/s
# Warmup Iteration  28: 95350.363 ops/s
# Warmup Iteration  29: 88711.596 ops/s
# Warmup Iteration  30: 93672.105 ops/s
Iteration   1: 89011.474 ops/s
Iteration   2: 93005.676 ops/s
Iteration   3: 90601.103 ops/s
Iteration   4: 91499.855 ops/s
Iteration   5: 91913.013 ops/s
Iteration   6: 90254.886 ops/s
Iteration   7: 89456.444 ops/s
Iteration   8: 94710.653 ops/s
Iteration   9: 87878.694 ops/s
Iteration  10: 92970.226 ops/s
Iteration  11: 92534.605 ops/s
Iteration  12: 86839.557 ops/s
Iteration  13: 95513.315 ops/s
Iteration  14: 93677.297 ops/s
Iteration  15: 87099.335 ops/s
Iteration  16: 93229.796 ops/s
Iteration  17: 89921.157 ops/s
Iteration  18: 90436.571 ops/s
Iteration  19: 93832.602 ops/s
Iteration  20: 90236.383 ops/s
Iteration  21: 94192.680 ops/s
Iteration  22: 88165.225 ops/s
Iteration  23: 93968.850 ops/s
Iteration  24: 95882.606 ops/s
Iteration  25: 88692.082 ops/s
Iteration  26: 94734.501 ops/s
Iteration  27: 87082.885 ops/s
Iteration  28: 94541.177 ops/s
Iteration  29: 93174.140 ops/s
Iteration  30: 88272.090 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_241._Benchmark.benchmark_Cluster_241":
  91444.296 ±(99.9%) 1845.676 ops/s [Average]
  (min, avg, max) = (86839.557, 91444.296, 95882.606), stdev = 2762.522
  CI (99.9%): [89598.619, 93289.972] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_241._Benchmark.benchmark_Cluster_241  thrpt   30  91444.296 ± 1845.676  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_242._Benchmark.benchmark_Cluster_242$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_242._Benchmark.benchmark_Cluster_242

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1214.571 ops/s
# Warmup Iteration   2: 16861.734 ops/s
# Warmup Iteration   3: 33342.542 ops/s
# Warmup Iteration   4: 41988.689 ops/s
# Warmup Iteration   5: 35250.658 ops/s
# Warmup Iteration   6: 42165.036 ops/s
# Warmup Iteration   7: 78263.663 ops/s
# Warmup Iteration   8: 104040.674 ops/s
# Warmup Iteration   9: 96755.981 ops/s
# Warmup Iteration  10: 101484.052 ops/s
# Warmup Iteration  11: 98029.229 ops/s
# Warmup Iteration  12: 100212.290 ops/s
# Warmup Iteration  13: 102657.027 ops/s
# Warmup Iteration  14: 97837.228 ops/s
# Warmup Iteration  15: 100129.086 ops/s
# Warmup Iteration  16: 99508.416 ops/s
# Warmup Iteration  17: 97776.245 ops/s
# Warmup Iteration  18: 100347.894 ops/s
# Warmup Iteration  19: 98056.773 ops/s
# Warmup Iteration  20: 103092.732 ops/s
# Warmup Iteration  21: 104158.796 ops/s
# Warmup Iteration  22: 98422.452 ops/s
# Warmup Iteration  23: 102358.616 ops/s
# Warmup Iteration  24: 103185.101 ops/s
# Warmup Iteration  25: 101003.029 ops/s
# Warmup Iteration  26: 99316.048 ops/s
# Warmup Iteration  27: 104605.085 ops/s
# Warmup Iteration  28: 99446.220 ops/s
# Warmup Iteration  29: 103492.599 ops/s
# Warmup Iteration  30: 98994.184 ops/s
Iteration   1: 104155.058 ops/s
Iteration   2: 97288.245 ops/s
Iteration   3: 101347.778 ops/s
Iteration   4: 105025.232 ops/s
Iteration   5: 103737.606 ops/s
Iteration   6: 98120.816 ops/s
Iteration   7: 105601.504 ops/s
Iteration   8: 103177.375 ops/s
Iteration   9: 96768.507 ops/s
Iteration  10: 102997.094 ops/s
Iteration  11: 101084.958 ops/s
Iteration  12: 102175.884 ops/s
Iteration  13: 100290.451 ops/s
Iteration  14: 104163.965 ops/s
Iteration  15: 103633.515 ops/s
Iteration  16: 100573.367 ops/s
Iteration  17: 99827.596 ops/s
Iteration  18: 105006.328 ops/s
Iteration  19: 99764.195 ops/s
Iteration  20: 100387.024 ops/s
Iteration  21: 103594.787 ops/s
Iteration  22: 99331.476 ops/s
Iteration  23: 101789.061 ops/s
Iteration  24: 99626.183 ops/s
Iteration  25: 104636.378 ops/s
Iteration  26: 97868.725 ops/s
Iteration  27: 99707.885 ops/s
Iteration  28: 104062.923 ops/s
Iteration  29: 98493.925 ops/s
Iteration  30: 101886.262 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_242._Benchmark.benchmark_Cluster_242":
  101537.470 ±(99.9%) 1694.314 ops/s [Average]
  (min, avg, max) = (96768.507, 101537.470, 105601.504), stdev = 2535.970
  CI (99.9%): [99843.156, 103231.785] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_242._Benchmark.benchmark_Cluster_242  thrpt   30  101537.470 ± 1694.314  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_243._Benchmark.benchmark_Cluster_243$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_243._Benchmark.benchmark_Cluster_243

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6557.097 ops/s
# Warmup Iteration   2: 41811.283 ops/s
# Warmup Iteration   3: 51882.104 ops/s
# Warmup Iteration   4: 110196.407 ops/s
# Warmup Iteration   5: 163057.249 ops/s
# Warmup Iteration   6: 170743.377 ops/s
# Warmup Iteration   7: 167095.007 ops/s
# Warmup Iteration   8: 167142.520 ops/s
# Warmup Iteration   9: 169096.196 ops/s
# Warmup Iteration  10: 164221.026 ops/s
# Warmup Iteration  11: 167779.989 ops/s
# Warmup Iteration  12: 174108.536 ops/s
# Warmup Iteration  13: 170927.545 ops/s
# Warmup Iteration  14: 172013.680 ops/s
# Warmup Iteration  15: 173643.051 ops/s
# Warmup Iteration  16: 168254.554 ops/s
# Warmup Iteration  17: 168811.809 ops/s
# Warmup Iteration  18: 172938.003 ops/s
# Warmup Iteration  19: 176244.173 ops/s
# Warmup Iteration  20: 182246.030 ops/s
# Warmup Iteration  21: 171960.381 ops/s
# Warmup Iteration  22: 177170.837 ops/s
# Warmup Iteration  23: 173057.070 ops/s
# Warmup Iteration  24: 177546.103 ops/s
# Warmup Iteration  25: 171547.656 ops/s
# Warmup Iteration  26: 166520.033 ops/s
# Warmup Iteration  27: 182681.647 ops/s
# Warmup Iteration  28: 175184.977 ops/s
# Warmup Iteration  29: 175309.753 ops/s
# Warmup Iteration  30: 179935.070 ops/s
Iteration   1: 176308.441 ops/s
Iteration   2: 176060.993 ops/s
Iteration   3: 174546.982 ops/s
Iteration   4: 177481.786 ops/s
Iteration   5: 179026.156 ops/s
Iteration   6: 175236.474 ops/s
Iteration   7: 171907.525 ops/s
Iteration   8: 178772.083 ops/s
Iteration   9: 170920.688 ops/s
Iteration  10: 177080.902 ops/s
Iteration  11: 172600.225 ops/s
Iteration  12: 180845.597 ops/s
Iteration  13: 175336.342 ops/s
Iteration  14: 175575.367 ops/s
Iteration  15: 169136.990 ops/s
Iteration  16: 181783.198 ops/s
Iteration  17: 169304.754 ops/s
Iteration  18: 182400.782 ops/s
Iteration  19: 179854.905 ops/s
Iteration  20: 169872.365 ops/s
Iteration  21: 183319.664 ops/s
Iteration  22: 172480.866 ops/s
Iteration  23: 180816.237 ops/s
Iteration  24: 176901.433 ops/s
Iteration  25: 178163.265 ops/s
Iteration  26: 175642.486 ops/s
Iteration  27: 178429.085 ops/s
Iteration  28: 180092.868 ops/s
Iteration  29: 168543.975 ops/s
Iteration  30: 176401.309 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_243._Benchmark.benchmark_Cluster_243":
  176161.458 ±(99.9%) 2752.906 ops/s [Average]
  (min, avg, max) = (168543.975, 176161.458, 183319.664), stdev = 4120.421
  CI (99.9%): [173408.552, 178914.364] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_243._Benchmark.benchmark_Cluster_243  thrpt   30  176161.458 ± 2752.906  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_244._Benchmark.benchmark_Cluster_244$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_244._Benchmark.benchmark_Cluster_244

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3275.633 ops/s
# Warmup Iteration   2: 18978.796 ops/s
# Warmup Iteration   3: 22459.832 ops/s
# Warmup Iteration   4: 23825.120 ops/s
# Warmup Iteration   5: 22216.243 ops/s
# Warmup Iteration   6: 37251.336 ops/s
# Warmup Iteration   7: 35695.127 ops/s
# Warmup Iteration   8: 70931.900 ops/s
# Warmup Iteration   9: 77322.863 ops/s
# Warmup Iteration  10: 75025.793 ops/s
# Warmup Iteration  11: 74704.912 ops/s
# Warmup Iteration  12: 73985.553 ops/s
# Warmup Iteration  13: 75073.922 ops/s
# Warmup Iteration  14: 75614.106 ops/s
# Warmup Iteration  15: 73542.260 ops/s
# Warmup Iteration  16: 78673.405 ops/s
# Warmup Iteration  17: 75024.330 ops/s
# Warmup Iteration  18: 79852.549 ops/s
# Warmup Iteration  19: 81347.910 ops/s
# Warmup Iteration  20: 77818.583 ops/s
# Warmup Iteration  21: 80917.080 ops/s
# Warmup Iteration  22: 79263.468 ops/s
# Warmup Iteration  23: 80332.075 ops/s
# Warmup Iteration  24: 80215.499 ops/s
# Warmup Iteration  25: 78083.430 ops/s
# Warmup Iteration  26: 79182.842 ops/s
# Warmup Iteration  27: 80177.564 ops/s
# Warmup Iteration  28: 78285.155 ops/s
# Warmup Iteration  29: 80409.900 ops/s
# Warmup Iteration  30: 78489.163 ops/s
Iteration   1: 81722.067 ops/s
Iteration   2: 78910.390 ops/s
Iteration   3: 76764.975 ops/s
Iteration   4: 80508.472 ops/s
Iteration   5: 77713.322 ops/s
Iteration   6: 77868.446 ops/s
Iteration   7: 82082.657 ops/s
Iteration   8: 80056.179 ops/s
Iteration   9: 78603.993 ops/s
Iteration  10: 80049.088 ops/s
Iteration  11: 73230.462 ops/s
Iteration  12: 80170.149 ops/s
Iteration  13: 76412.811 ops/s
Iteration  14: 81589.290 ops/s
Iteration  15: 79461.566 ops/s
Iteration  16: 75426.180 ops/s
Iteration  17: 81486.499 ops/s
Iteration  18: 82315.619 ops/s
Iteration  19: 76856.723 ops/s
Iteration  20: 81586.923 ops/s
Iteration  21: 78548.818 ops/s
Iteration  22: 78980.425 ops/s
Iteration  23: 82467.932 ops/s
Iteration  24: 77675.505 ops/s
Iteration  25: 82206.568 ops/s
Iteration  26: 77297.807 ops/s
Iteration  27: 71874.803 ops/s
Iteration  28: 64413.506 ops/s
Iteration  29: 79973.761 ops/s
Iteration  30: 79011.785 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_244._Benchmark.benchmark_Cluster_244":
  78508.891 ±(99.9%) 2491.873 ops/s [Average]
  (min, avg, max) = (64413.506, 78508.891, 82467.932), stdev = 3729.719
  CI (99.9%): [76017.017, 81000.764] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_244._Benchmark.benchmark_Cluster_244  thrpt   30  78508.891 ± 2491.873  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_245._Benchmark.benchmark_Cluster_245$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_245._Benchmark.benchmark_Cluster_245

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3733.373 ops/s
# Warmup Iteration   2: 28254.291 ops/s
# Warmup Iteration   3: 31213.098 ops/s
# Warmup Iteration   4: 31661.255 ops/s
# Warmup Iteration   5: 36792.808 ops/s
# Warmup Iteration   6: 35581.095 ops/s
# Warmup Iteration   7: 26938.246 ops/s
# Warmup Iteration   8: 30964.366 ops/s
# Warmup Iteration   9: 46241.482 ops/s
# Warmup Iteration  10: 54048.350 ops/s
# Warmup Iteration  11: 96262.658 ops/s
# Warmup Iteration  12: 92908.096 ops/s
# Warmup Iteration  13: 98687.909 ops/s
# Warmup Iteration  14: 94560.277 ops/s
# Warmup Iteration  15: 96503.034 ops/s
# Warmup Iteration  16: 96579.987 ops/s
# Warmup Iteration  17: 105571.726 ops/s
# Warmup Iteration  18: 105118.612 ops/s
# Warmup Iteration  19: 101956.837 ops/s
# Warmup Iteration  20: 103894.573 ops/s
# Warmup Iteration  21: 103400.714 ops/s
# Warmup Iteration  22: 100922.159 ops/s
# Warmup Iteration  23: 104129.917 ops/s
# Warmup Iteration  24: 100594.704 ops/s
# Warmup Iteration  25: 104502.761 ops/s
# Warmup Iteration  26: 101007.791 ops/s
# Warmup Iteration  27: 101872.754 ops/s
# Warmup Iteration  28: 106169.260 ops/s
# Warmup Iteration  29: 103103.609 ops/s
# Warmup Iteration  30: 101694.736 ops/s
Iteration   1: 101057.787 ops/s
Iteration   2: 104651.740 ops/s
Iteration   3: 102427.755 ops/s
Iteration   4: 101351.965 ops/s
Iteration   5: 103556.138 ops/s
Iteration   6: 102626.220 ops/s
Iteration   7: 105092.853 ops/s
Iteration   8: 99689.508 ops/s
Iteration   9: 104910.691 ops/s
Iteration  10: 108239.442 ops/s
Iteration  11: 103215.512 ops/s
Iteration  12: 99376.921 ops/s
Iteration  13: 104345.495 ops/s
Iteration  14: 100321.468 ops/s
Iteration  15: 100504.287 ops/s
Iteration  16: 106512.382 ops/s
Iteration  17: 101043.740 ops/s
Iteration  18: 104458.822 ops/s
Iteration  19: 100746.350 ops/s
Iteration  20: 102567.168 ops/s
Iteration  21: 103668.342 ops/s
Iteration  22: 104094.465 ops/s
Iteration  23: 98638.549 ops/s
Iteration  24: 106597.465 ops/s
Iteration  25: 102090.408 ops/s
Iteration  26: 102167.917 ops/s
Iteration  27: 104074.614 ops/s
Iteration  28: 101919.018 ops/s
Iteration  29: 105645.461 ops/s
Iteration  30: 100568.310 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_245._Benchmark.benchmark_Cluster_245":
  102872.026 ±(99.9%) 1560.719 ops/s [Average]
  (min, avg, max) = (98638.549, 102872.026, 108239.442), stdev = 2336.011
  CI (99.9%): [101311.307, 104432.746] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_245._Benchmark.benchmark_Cluster_245  thrpt   30  102872.026 ± 1560.719  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_246._Benchmark.benchmark_Cluster_246$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_246._Benchmark.benchmark_Cluster_246

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3626.659 ops/s
# Warmup Iteration   2: 19416.802 ops/s
# Warmup Iteration   3: 32305.152 ops/s
# Warmup Iteration   4: 36024.940 ops/s
# Warmup Iteration   5: 53231.290 ops/s
# Warmup Iteration   6: 91843.902 ops/s
# Warmup Iteration   7: 88542.215 ops/s
# Warmup Iteration   8: 96557.761 ops/s
# Warmup Iteration   9: 97465.110 ops/s
# Warmup Iteration  10: 96086.957 ops/s
# Warmup Iteration  11: 96317.024 ops/s
# Warmup Iteration  12: 99558.172 ops/s
# Warmup Iteration  13: 94240.113 ops/s
# Warmup Iteration  14: 99892.607 ops/s
# Warmup Iteration  15: 101174.761 ops/s
# Warmup Iteration  16: 95674.957 ops/s
# Warmup Iteration  17: 108069.543 ops/s
# Warmup Iteration  18: 104919.291 ops/s
# Warmup Iteration  19: 99826.103 ops/s
# Warmup Iteration  20: 107072.788 ops/s
# Warmup Iteration  21: 104435.925 ops/s
# Warmup Iteration  22: 104526.004 ops/s
# Warmup Iteration  23: 101786.404 ops/s
# Warmup Iteration  24: 104361.200 ops/s
# Warmup Iteration  25: 105535.924 ops/s
# Warmup Iteration  26: 104754.334 ops/s
# Warmup Iteration  27: 107175.206 ops/s
# Warmup Iteration  28: 104455.819 ops/s
# Warmup Iteration  29: 102245.394 ops/s
# Warmup Iteration  30: 107173.072 ops/s
Iteration   1: 101321.612 ops/s
Iteration   2: 103627.236 ops/s
Iteration   3: 106659.038 ops/s
Iteration   4: 105990.537 ops/s
Iteration   5: 100724.443 ops/s
Iteration   6: 105298.620 ops/s
Iteration   7: 104212.277 ops/s
Iteration   8: 106785.984 ops/s
Iteration   9: 101503.006 ops/s
Iteration  10: 107757.997 ops/s
Iteration  11: 103410.594 ops/s
Iteration  12: 103098.692 ops/s
Iteration  13: 107000.257 ops/s
Iteration  14: 103128.019 ops/s
Iteration  15: 104120.399 ops/s
Iteration  16: 107029.279 ops/s
Iteration  17: 100369.276 ops/s
Iteration  18: 111164.602 ops/s
Iteration  19: 102220.366 ops/s
Iteration  20: 107821.434 ops/s
Iteration  21: 106577.419 ops/s
Iteration  22: 77708.176 ops/s
Iteration  23: 104861.211 ops/s
Iteration  24: 104355.487 ops/s
Iteration  25: 104962.502 ops/s
Iteration  26: 105414.944 ops/s
Iteration  27: 102960.699 ops/s
Iteration  28: 104415.715 ops/s
Iteration  29: 102465.360 ops/s
Iteration  30: 105957.374 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_246._Benchmark.benchmark_Cluster_246":
  103764.085 ±(99.9%) 3656.863 ops/s [Average]
  (min, avg, max) = (77708.176, 103764.085, 111164.602), stdev = 5473.420
  CI (99.9%): [100107.223, 107420.948] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_246._Benchmark.benchmark_Cluster_246  thrpt   30  103764.085 ± 3656.863  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_247._Benchmark.benchmark_Cluster_247$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_247._Benchmark.benchmark_Cluster_247

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7966.366 ops/s
# Warmup Iteration   2: 23018.086 ops/s
# Warmup Iteration   3: 29194.291 ops/s
# Warmup Iteration   4: 24168.067 ops/s
# Warmup Iteration   5: 31860.479 ops/s
# Warmup Iteration   6: 84024.346 ops/s
# Warmup Iteration   7: 101291.532 ops/s
# Warmup Iteration   8: 91393.168 ops/s
# Warmup Iteration   9: 102839.203 ops/s
# Warmup Iteration  10: 98770.707 ops/s
# Warmup Iteration  11: 101167.930 ops/s
# Warmup Iteration  12: 105262.416 ops/s
# Warmup Iteration  13: 97695.919 ops/s
# Warmup Iteration  14: 104129.809 ops/s
# Warmup Iteration  15: 98618.291 ops/s
# Warmup Iteration  16: 103898.936 ops/s
# Warmup Iteration  17: 103223.020 ops/s
# Warmup Iteration  18: 104858.316 ops/s
# Warmup Iteration  19: 104744.262 ops/s
# Warmup Iteration  20: 105398.357 ops/s
# Warmup Iteration  21: 109384.495 ops/s
# Warmup Iteration  22: 100415.007 ops/s
# Warmup Iteration  23: 107606.429 ops/s
# Warmup Iteration  24: 107119.742 ops/s
# Warmup Iteration  25: 102394.259 ops/s
# Warmup Iteration  26: 108540.839 ops/s
# Warmup Iteration  27: 106901.486 ops/s
# Warmup Iteration  28: 101657.927 ops/s
# Warmup Iteration  29: 104858.443 ops/s
# Warmup Iteration  30: 106554.408 ops/s
Iteration   1: 99775.843 ops/s
Iteration   2: 104124.143 ops/s
Iteration   3: 105822.211 ops/s
Iteration   4: 104359.811 ops/s
Iteration   5: 109246.697 ops/s
Iteration   6: 101226.217 ops/s
Iteration   7: 108237.319 ops/s
Iteration   8: 101647.069 ops/s
Iteration   9: 105183.756 ops/s
Iteration  10: 105575.087 ops/s
Iteration  11: 102446.459 ops/s
Iteration  12: 105192.185 ops/s
Iteration  13: 105041.672 ops/s
Iteration  14: 101592.472 ops/s
Iteration  15: 103942.623 ops/s
Iteration  16: 103498.091 ops/s
Iteration  17: 98168.786 ops/s
Iteration  18: 107285.184 ops/s
Iteration  19: 96614.465 ops/s
Iteration  20: 104181.746 ops/s
Iteration  21: 108178.544 ops/s
Iteration  22: 100855.636 ops/s
Iteration  23: 106909.556 ops/s
Iteration  24: 102334.717 ops/s
Iteration  25: 105550.322 ops/s
Iteration  26: 101954.413 ops/s
Iteration  27: 103594.626 ops/s
Iteration  28: 107651.292 ops/s
Iteration  29: 100585.272 ops/s
Iteration  30: 107257.061 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_247._Benchmark.benchmark_Cluster_247":
  103934.442 ±(99.9%) 2057.616 ops/s [Average]
  (min, avg, max) = (96614.465, 103934.442, 109246.697), stdev = 3079.744
  CI (99.9%): [101876.826, 105992.059] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_247._Benchmark.benchmark_Cluster_247  thrpt   30  103934.442 ± 2057.616  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_248._Benchmark.benchmark_Cluster_248$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_248._Benchmark.benchmark_Cluster_248

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13106.286 ops/s
# Warmup Iteration   2: 45912.874 ops/s
# Warmup Iteration   3: 75173.390 ops/s
# Warmup Iteration   4: 92668.406 ops/s
# Warmup Iteration   5: 86565.148 ops/s
# Warmup Iteration   6: 101868.345 ops/s
# Warmup Iteration   7: 98047.642 ops/s
# Warmup Iteration   8: 97172.961 ops/s
# Warmup Iteration   9: 103883.508 ops/s
# Warmup Iteration  10: 99236.548 ops/s
# Warmup Iteration  11: 99491.109 ops/s
# Warmup Iteration  12: 98451.549 ops/s
# Warmup Iteration  13: 99826.327 ops/s
# Warmup Iteration  14: 103702.058 ops/s
# Warmup Iteration  15: 95537.973 ops/s
# Warmup Iteration  16: 102369.117 ops/s
# Warmup Iteration  17: 101712.651 ops/s
# Warmup Iteration  18: 105210.974 ops/s
# Warmup Iteration  19: 103162.737 ops/s
# Warmup Iteration  20: 101505.958 ops/s
# Warmup Iteration  21: 103497.233 ops/s
# Warmup Iteration  22: 109193.709 ops/s
# Warmup Iteration  23: 102621.365 ops/s
# Warmup Iteration  24: 106880.362 ops/s
# Warmup Iteration  25: 105529.462 ops/s
# Warmup Iteration  26: 100920.603 ops/s
# Warmup Iteration  27: 109004.712 ops/s
# Warmup Iteration  28: 103265.571 ops/s
# Warmup Iteration  29: 104404.250 ops/s
# Warmup Iteration  30: 103876.228 ops/s
Iteration   1: 106900.864 ops/s
Iteration   2: 107075.863 ops/s
Iteration   3: 98440.641 ops/s
Iteration   4: 106178.953 ops/s
Iteration   5: 99201.215 ops/s
Iteration   6: 101591.960 ops/s
Iteration   7: 108180.019 ops/s
Iteration   8: 106980.945 ops/s
Iteration   9: 102420.286 ops/s
Iteration  10: 107510.363 ops/s
Iteration  11: 103262.238 ops/s
Iteration  12: 106113.042 ops/s
Iteration  13: 103228.351 ops/s
Iteration  14: 106558.402 ops/s
Iteration  15: 105284.231 ops/s
Iteration  16: 78812.099 ops/s
Iteration  17: 110346.605 ops/s
Iteration  18: 103478.880 ops/s
Iteration  19: 102588.989 ops/s
Iteration  20: 105426.988 ops/s
Iteration  21: 101624.636 ops/s
Iteration  22: 105377.338 ops/s
Iteration  23: 103326.933 ops/s
Iteration  24: 105227.706 ops/s
Iteration  25: 107185.418 ops/s
Iteration  26: 100087.456 ops/s
Iteration  27: 105870.886 ops/s
Iteration  28: 103530.748 ops/s
Iteration  29: 104852.446 ops/s
Iteration  30: 108673.439 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_248._Benchmark.benchmark_Cluster_248":
  103844.598 ±(99.9%) 3673.804 ops/s [Average]
  (min, avg, max) = (78812.099, 103844.598, 110346.605), stdev = 5498.778
  CI (99.9%): [100170.794, 107518.402] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_248._Benchmark.benchmark_Cluster_248  thrpt   30  103844.598 ± 3673.804  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_249._Benchmark.benchmark_Cluster_249$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_249._Benchmark.benchmark_Cluster_249

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20295.687 ops/s
# Warmup Iteration   2: 45665.407 ops/s
# Warmup Iteration   3: 102657.967 ops/s
# Warmup Iteration   4: 123884.431 ops/s
# Warmup Iteration   5: 118066.870 ops/s
# Warmup Iteration   6: 125659.860 ops/s
# Warmup Iteration   7: 124402.321 ops/s
# Warmup Iteration   8: 131715.627 ops/s
# Warmup Iteration   9: 127418.709 ops/s
# Warmup Iteration  10: 124255.353 ops/s
# Warmup Iteration  11: 130585.916 ops/s
# Warmup Iteration  12: 130611.966 ops/s
# Warmup Iteration  13: 124523.613 ops/s
# Warmup Iteration  14: 127762.792 ops/s
# Warmup Iteration  15: 124891.496 ops/s
# Warmup Iteration  16: 130156.606 ops/s
# Warmup Iteration  17: 127652.668 ops/s
# Warmup Iteration  18: 131935.171 ops/s
# Warmup Iteration  19: 133787.946 ops/s
# Warmup Iteration  20: 131278.506 ops/s
# Warmup Iteration  21: 136752.936 ops/s
# Warmup Iteration  22: 124642.265 ops/s
# Warmup Iteration  23: 137997.145 ops/s
# Warmup Iteration  24: 131727.533 ops/s
# Warmup Iteration  25: 130888.074 ops/s
# Warmup Iteration  26: 134978.413 ops/s
# Warmup Iteration  27: 131672.426 ops/s
# Warmup Iteration  28: 130394.578 ops/s
# Warmup Iteration  29: 137115.368 ops/s
# Warmup Iteration  30: 126392.008 ops/s
Iteration   1: 133875.560 ops/s
Iteration   2: 126318.400 ops/s
Iteration   3: 134221.998 ops/s
Iteration   4: 129898.188 ops/s
Iteration   5: 127545.141 ops/s
Iteration   6: 132787.166 ops/s
Iteration   7: 132274.267 ops/s
Iteration   8: 135272.395 ops/s
Iteration   9: 131924.095 ops/s
Iteration  10: 131881.336 ops/s
Iteration  11: 136222.103 ops/s
Iteration  12: 122360.912 ops/s
Iteration  13: 137027.073 ops/s
Iteration  14: 134251.876 ops/s
Iteration  15: 131148.057 ops/s
Iteration  16: 130382.689 ops/s
Iteration  17: 137911.065 ops/s
Iteration  18: 128775.687 ops/s
Iteration  19: 132821.592 ops/s
Iteration  20: 139479.355 ops/s
Iteration  21: 128709.081 ops/s
Iteration  22: 138499.010 ops/s
Iteration  23: 136375.697 ops/s
Iteration  24: 130820.861 ops/s
Iteration  25: 136099.664 ops/s
Iteration  26: 131273.931 ops/s
Iteration  27: 136945.219 ops/s
Iteration  28: 136705.213 ops/s
Iteration  29: 127370.940 ops/s
Iteration  30: 134544.073 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_249._Benchmark.benchmark_Cluster_249":
  132790.755 ±(99.9%) 2688.163 ops/s [Average]
  (min, avg, max) = (122360.912, 132790.755, 139479.355), stdev = 4023.516
  CI (99.9%): [130102.592, 135478.917] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_249._Benchmark.benchmark_Cluster_249  thrpt   30  132790.755 ± 2688.163  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_25._Benchmark.benchmark_Cluster_25$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_25._Benchmark.benchmark_Cluster_25

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1371.704 ops/s
# Warmup Iteration   2: 7024.527 ops/s
# Warmup Iteration   3: 23498.100 ops/s
# Warmup Iteration   4: 23488.646 ops/s
# Warmup Iteration   5: 29288.977 ops/s
# Warmup Iteration   6: 30384.384 ops/s
# Warmup Iteration   7: 33749.335 ops/s
# Warmup Iteration   8: 32184.642 ops/s
# Warmup Iteration   9: 35801.752 ops/s
# Warmup Iteration  10: 39586.318 ops/s
# Warmup Iteration  11: 37911.705 ops/s
# Warmup Iteration  12: 35241.777 ops/s
# Warmup Iteration  13: 77034.861 ops/s
# Warmup Iteration  14: 85902.723 ops/s
# Warmup Iteration  15: 85697.602 ops/s
# Warmup Iteration  16: 84827.448 ops/s
# Warmup Iteration  17: 86018.961 ops/s
# Warmup Iteration  18: 87018.941 ops/s
# Warmup Iteration  19: 88173.297 ops/s
# Warmup Iteration  20: 89694.533 ops/s
# Warmup Iteration  21: 85000.199 ops/s
# Warmup Iteration  22: 88128.122 ops/s
# Warmup Iteration  23: 82353.369 ops/s
# Warmup Iteration  24: 90800.385 ops/s
# Warmup Iteration  25: 89905.864 ops/s
# Warmup Iteration  26: 86095.423 ops/s
# Warmup Iteration  27: 89097.819 ops/s
# Warmup Iteration  28: 87275.472 ops/s
# Warmup Iteration  29: 85591.144 ops/s
# Warmup Iteration  30: 91514.151 ops/s
Iteration   1: 87821.942 ops/s
Iteration   2: 88740.745 ops/s
Iteration   3: 85595.704 ops/s
Iteration   4: 87991.432 ops/s
Iteration   5: 89300.564 ops/s
Iteration   6: 86021.970 ops/s
Iteration   7: 85979.469 ops/s
Iteration   8: 87899.601 ops/s
Iteration   9: 78318.700 ops/s
Iteration  10: 80579.974 ops/s
Iteration  11: 87500.955 ops/s
Iteration  12: 87331.382 ops/s
Iteration  13: 91179.420 ops/s
Iteration  14: 85615.189 ops/s
Iteration  15: 85619.703 ops/s
Iteration  16: 90604.787 ops/s
Iteration  17: 86384.141 ops/s
Iteration  18: 84644.849 ops/s
Iteration  19: 82498.621 ops/s
Iteration  20: 87542.534 ops/s
Iteration  21: 91766.530 ops/s
Iteration  22: 85181.834 ops/s
Iteration  23: 90160.682 ops/s
Iteration  24: 87287.639 ops/s
Iteration  25: 90139.037 ops/s
Iteration  26: 86594.471 ops/s
Iteration  27: 88681.670 ops/s
Iteration  28: 91702.853 ops/s
Iteration  29: 85812.811 ops/s
Iteration  30: 92518.570 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_25._Benchmark.benchmark_Cluster_25":
  87233.926 ±(99.9%) 2126.390 ops/s [Average]
  (min, avg, max) = (78318.700, 87233.926, 92518.570), stdev = 3182.681
  CI (99.9%): [85107.536, 89360.316] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_25._Benchmark.benchmark_Cluster_25  thrpt   30  87233.926 ± 2126.390  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_250._Benchmark.benchmark_Cluster_250$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_250._Benchmark.benchmark_Cluster_250

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8403.020 ops/s
# Warmup Iteration   2: 36793.475 ops/s
# Warmup Iteration   3: 57688.806 ops/s
# Warmup Iteration   4: 114528.247 ops/s
# Warmup Iteration   5: 120006.532 ops/s
# Warmup Iteration   6: 134570.610 ops/s
# Warmup Iteration   7: 128531.599 ops/s
# Warmup Iteration   8: 134148.199 ops/s
# Warmup Iteration   9: 138730.989 ops/s
# Warmup Iteration  10: 138034.983 ops/s
# Warmup Iteration  11: 138469.231 ops/s
# Warmup Iteration  12: 137964.823 ops/s
# Warmup Iteration  13: 135756.411 ops/s
# Warmup Iteration  14: 141235.250 ops/s
# Warmup Iteration  15: 136995.469 ops/s
# Warmup Iteration  16: 136163.997 ops/s
# Warmup Iteration  17: 140836.959 ops/s
# Warmup Iteration  18: 139980.434 ops/s
# Warmup Iteration  19: 143053.831 ops/s
# Warmup Iteration  20: 141282.827 ops/s
# Warmup Iteration  21: 145040.644 ops/s
# Warmup Iteration  22: 135243.870 ops/s
# Warmup Iteration  23: 142161.245 ops/s
# Warmup Iteration  24: 142943.856 ops/s
# Warmup Iteration  25: 136036.944 ops/s
# Warmup Iteration  26: 145170.903 ops/s
# Warmup Iteration  27: 139936.021 ops/s
# Warmup Iteration  28: 140955.269 ops/s
# Warmup Iteration  29: 147065.843 ops/s
# Warmup Iteration  30: 137402.072 ops/s
Iteration   1: 147286.709 ops/s
Iteration   2: 134969.667 ops/s
Iteration   3: 145650.449 ops/s
Iteration   4: 138261.787 ops/s
Iteration   5: 138822.538 ops/s
Iteration   6: 143868.266 ops/s
Iteration   7: 140353.799 ops/s
Iteration   8: 144673.531 ops/s
Iteration   9: 140127.163 ops/s
Iteration  10: 143103.855 ops/s
Iteration  11: 144865.284 ops/s
Iteration  12: 136264.448 ops/s
Iteration  13: 144057.967 ops/s
Iteration  14: 144262.758 ops/s
Iteration  15: 135672.971 ops/s
Iteration  16: 139508.439 ops/s
Iteration  17: 140972.703 ops/s
Iteration  18: 143128.996 ops/s
Iteration  19: 147413.741 ops/s
Iteration  20: 136778.156 ops/s
Iteration  21: 146992.332 ops/s
Iteration  22: 139651.522 ops/s
Iteration  23: 146401.801 ops/s
Iteration  24: 138839.389 ops/s
Iteration  25: 147270.814 ops/s
Iteration  26: 144861.642 ops/s
Iteration  27: 141742.691 ops/s
Iteration  28: 142040.753 ops/s
Iteration  29: 141493.808 ops/s
Iteration  30: 146340.088 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_250._Benchmark.benchmark_Cluster_250":
  142189.269 ±(99.9%) 2488.472 ops/s [Average]
  (min, avg, max) = (134969.667, 142189.269, 147413.741), stdev = 3724.628
  CI (99.9%): [139700.797, 144677.741] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_250._Benchmark.benchmark_Cluster_250  thrpt   30  142189.269 ± 2488.472  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_251._Benchmark.benchmark_Cluster_251$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_251._Benchmark.benchmark_Cluster_251

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.700 ops/s
# Warmup Iteration   2: 1986.453 ops/s
# Warmup Iteration   3: 11127.567 ops/s
# Warmup Iteration   4: 24591.410 ops/s
# Warmup Iteration   5: 31061.992 ops/s
# Warmup Iteration   6: 25588.820 ops/s
# Warmup Iteration   7: 34658.434 ops/s
# Warmup Iteration   8: 38910.849 ops/s
# Warmup Iteration   9: 63477.658 ops/s
# Warmup Iteration  10: 81694.319 ops/s
# Warmup Iteration  11: 86725.192 ops/s
# Warmup Iteration  12: 83041.119 ops/s
# Warmup Iteration  13: 83524.065 ops/s
# Warmup Iteration  14: 86185.535 ops/s
# Warmup Iteration  15: 82801.890 ops/s
# Warmup Iteration  16: 87126.633 ops/s
# Warmup Iteration  17: 82887.888 ops/s
# Warmup Iteration  18: 83966.373 ops/s
# Warmup Iteration  19: 86993.129 ops/s
# Warmup Iteration  20: 84125.042 ops/s
# Warmup Iteration  21: 86034.919 ops/s
# Warmup Iteration  22: 82943.591 ops/s
# Warmup Iteration  23: 84756.889 ops/s
# Warmup Iteration  24: 83867.354 ops/s
# Warmup Iteration  25: 82681.533 ops/s
# Warmup Iteration  26: 83643.805 ops/s
# Warmup Iteration  27: 86782.411 ops/s
# Warmup Iteration  28: 85160.760 ops/s
# Warmup Iteration  29: 86943.707 ops/s
# Warmup Iteration  30: 83247.465 ops/s
Iteration   1: 85287.152 ops/s
Iteration   2: 86315.089 ops/s
Iteration   3: 82281.767 ops/s
Iteration   4: 70436.132 ops/s
Iteration   5: 81158.946 ops/s
Iteration   6: 87792.870 ops/s
Iteration   7: 84011.559 ops/s
Iteration   8: 86470.855 ops/s
Iteration   9: 84056.486 ops/s
Iteration  10: 82325.222 ops/s
Iteration  11: 88822.142 ops/s
Iteration  12: 88793.658 ops/s
Iteration  13: 87621.193 ops/s
Iteration  14: 87666.314 ops/s
Iteration  15: 87323.418 ops/s
Iteration  16: 86169.815 ops/s
Iteration  17: 87301.445 ops/s
Iteration  18: 85204.363 ops/s
Iteration  19: 85827.591 ops/s
Iteration  20: 87653.258 ops/s
Iteration  21: 80396.849 ops/s
Iteration  22: 89208.360 ops/s
Iteration  23: 85080.703 ops/s
Iteration  24: 88991.454 ops/s
Iteration  25: 86867.703 ops/s
Iteration  26: 83479.958 ops/s
Iteration  27: 89703.160 ops/s
Iteration  28: 86006.888 ops/s
Iteration  29: 84551.180 ops/s
Iteration  30: 87356.663 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_251._Benchmark.benchmark_Cluster_251":
  85472.073 ±(99.9%) 2483.466 ops/s [Average]
  (min, avg, max) = (70436.132, 85472.073, 89703.160), stdev = 3717.135
  CI (99.9%): [82988.607, 87955.539] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_251._Benchmark.benchmark_Cluster_251  thrpt   30  85472.073 ± 2483.466  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_252._Benchmark.benchmark_Cluster_252$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_252._Benchmark.benchmark_Cluster_252

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2689.246 ops/s
# Warmup Iteration   2: 22305.296 ops/s
# Warmup Iteration   3: 63239.699 ops/s
# Warmup Iteration   4: 77424.282 ops/s
# Warmup Iteration   5: 88502.391 ops/s
# Warmup Iteration   6: 88755.930 ops/s
# Warmup Iteration   7: 88952.538 ops/s
# Warmup Iteration   8: 93935.549 ops/s
# Warmup Iteration   9: 79937.856 ops/s
# Warmup Iteration  10: 89730.223 ops/s
# Warmup Iteration  11: 89555.420 ops/s
# Warmup Iteration  12: 88583.627 ops/s
# Warmup Iteration  13: 89939.496 ops/s
# Warmup Iteration  14: 86812.514 ops/s
# Warmup Iteration  15: 93913.817 ops/s
# Warmup Iteration  16: 94684.059 ops/s
# Warmup Iteration  17: 91196.201 ops/s
# Warmup Iteration  18: 95775.420 ops/s
# Warmup Iteration  19: 92327.918 ops/s
# Warmup Iteration  20: 98324.076 ops/s
# Warmup Iteration  21: 91772.862 ops/s
# Warmup Iteration  22: 96375.495 ops/s
# Warmup Iteration  23: 92114.440 ops/s
# Warmup Iteration  24: 93921.414 ops/s
# Warmup Iteration  25: 97011.129 ops/s
# Warmup Iteration  26: 92200.625 ops/s
# Warmup Iteration  27: 97108.762 ops/s
# Warmup Iteration  28: 91422.183 ops/s
# Warmup Iteration  29: 94327.241 ops/s
# Warmup Iteration  30: 95919.734 ops/s
Iteration   1: 91695.478 ops/s
Iteration   2: 94431.716 ops/s
Iteration   3: 95806.382 ops/s
Iteration   4: 91564.180 ops/s
Iteration   5: 94043.183 ops/s
Iteration   6: 98241.004 ops/s
Iteration   7: 91742.077 ops/s
Iteration   8: 96965.939 ops/s
Iteration   9: 92065.164 ops/s
Iteration  10: 94785.382 ops/s
Iteration  11: 94739.308 ops/s
Iteration  12: 93315.029 ops/s
Iteration  13: 97252.336 ops/s
Iteration  14: 94881.218 ops/s
Iteration  15: 93069.790 ops/s
Iteration  16: 92916.227 ops/s
Iteration  17: 97105.577 ops/s
Iteration  18: 92107.417 ops/s
Iteration  19: 93576.694 ops/s
Iteration  20: 96697.806 ops/s
Iteration  21: 93329.977 ops/s
Iteration  22: 97103.870 ops/s
Iteration  23: 92063.665 ops/s
Iteration  24: 96114.991 ops/s
Iteration  25: 92203.239 ops/s
Iteration  26: 96092.043 ops/s
Iteration  27: 99134.264 ops/s
Iteration  28: 89006.851 ops/s
Iteration  29: 91408.866 ops/s
Iteration  30: 95314.991 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_252._Benchmark.benchmark_Cluster_252":
  94292.489 ±(99.9%) 1613.375 ops/s [Average]
  (min, avg, max) = (89006.851, 94292.489, 99134.264), stdev = 2414.824
  CI (99.9%): [92679.114, 95905.864] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_252._Benchmark.benchmark_Cluster_252  thrpt   30  94292.489 ± 1613.375  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_253._Benchmark.benchmark_Cluster_253$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_253._Benchmark.benchmark_Cluster_253

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2833.509 ops/s
# Warmup Iteration   2: 20395.925 ops/s
# Warmup Iteration   3: 28587.902 ops/s
# Warmup Iteration   4: 22873.743 ops/s
# Warmup Iteration   5: 35400.822 ops/s
# Warmup Iteration   6: 22957.747 ops/s
# Warmup Iteration   7: 31844.272 ops/s
# Warmup Iteration   8: 32361.168 ops/s
# Warmup Iteration   9: 53880.460 ops/s
# Warmup Iteration  10: 71379.171 ops/s
# Warmup Iteration  11: 90498.419 ops/s
# Warmup Iteration  12: 91399.057 ops/s
# Warmup Iteration  13: 91201.325 ops/s
# Warmup Iteration  14: 92934.066 ops/s
# Warmup Iteration  15: 90526.792 ops/s
# Warmup Iteration  16: 94754.707 ops/s
# Warmup Iteration  17: 89699.873 ops/s
# Warmup Iteration  18: 91567.374 ops/s
# Warmup Iteration  19: 96283.085 ops/s
# Warmup Iteration  20: 90268.883 ops/s
# Warmup Iteration  21: 95769.860 ops/s
# Warmup Iteration  22: 95703.226 ops/s
# Warmup Iteration  23: 90673.309 ops/s
# Warmup Iteration  24: 92743.483 ops/s
# Warmup Iteration  25: 94116.676 ops/s
# Warmup Iteration  26: 92595.745 ops/s
# Warmup Iteration  27: 94270.297 ops/s
# Warmup Iteration  28: 75426.857 ops/s
# Warmup Iteration  29: 92668.071 ops/s
# Warmup Iteration  30: 96779.152 ops/s
Iteration   1: 88518.112 ops/s
Iteration   2: 94634.185 ops/s
Iteration   3: 90711.782 ops/s
Iteration   4: 96014.999 ops/s
Iteration   5: 92378.006 ops/s
Iteration   6: 88417.396 ops/s
Iteration   7: 97254.355 ops/s
Iteration   8: 89062.618 ops/s
Iteration   9: 97928.985 ops/s
Iteration  10: 91540.150 ops/s
Iteration  11: 94058.700 ops/s
Iteration  12: 94651.279 ops/s
Iteration  13: 89816.183 ops/s
Iteration  14: 94961.942 ops/s
Iteration  15: 92003.868 ops/s
Iteration  16: 92903.170 ops/s
Iteration  17: 94268.835 ops/s
Iteration  18: 92731.281 ops/s
Iteration  19: 94425.056 ops/s
Iteration  20: 92542.582 ops/s
Iteration  21: 92316.121 ops/s
Iteration  22: 93963.511 ops/s
Iteration  23: 95053.972 ops/s
Iteration  24: 90851.227 ops/s
Iteration  25: 95240.157 ops/s
Iteration  26: 90862.403 ops/s
Iteration  27: 93578.418 ops/s
Iteration  28: 90599.160 ops/s
Iteration  29: 93104.973 ops/s
Iteration  30: 96229.787 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_253._Benchmark.benchmark_Cluster_253":
  93020.774 ±(99.9%) 1653.402 ops/s [Average]
  (min, avg, max) = (88417.396, 93020.774, 97928.985), stdev = 2474.734
  CI (99.9%): [91367.372, 94674.175] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_253._Benchmark.benchmark_Cluster_253  thrpt   30  93020.774 ± 1653.402  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_254._Benchmark.benchmark_Cluster_254$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_254._Benchmark.benchmark_Cluster_254

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3766.282 ops/s
# Warmup Iteration   2: 25206.550 ops/s
# Warmup Iteration   3: 45656.032 ops/s
# Warmup Iteration   4: 102075.635 ops/s
# Warmup Iteration   5: 122327.203 ops/s
# Warmup Iteration   6: 127768.321 ops/s
# Warmup Iteration   7: 125292.622 ops/s
# Warmup Iteration   8: 124141.152 ops/s
# Warmup Iteration   9: 119698.164 ops/s
# Warmup Iteration  10: 123494.423 ops/s
# Warmup Iteration  11: 120976.275 ops/s
# Warmup Iteration  12: 126559.088 ops/s
# Warmup Iteration  13: 117169.546 ops/s
# Warmup Iteration  14: 128606.867 ops/s
# Warmup Iteration  15: 127179.131 ops/s
# Warmup Iteration  16: 123112.115 ops/s
# Warmup Iteration  17: 133139.942 ops/s
# Warmup Iteration  18: 125207.799 ops/s
# Warmup Iteration  19: 127252.155 ops/s
# Warmup Iteration  20: 130079.465 ops/s
# Warmup Iteration  21: 124986.959 ops/s
# Warmup Iteration  22: 127787.765 ops/s
# Warmup Iteration  23: 134299.422 ops/s
# Warmup Iteration  24: 129171.884 ops/s
# Warmup Iteration  25: 123706.639 ops/s
# Warmup Iteration  26: 129316.940 ops/s
# Warmup Iteration  27: 132544.501 ops/s
# Warmup Iteration  28: 123868.351 ops/s
# Warmup Iteration  29: 131655.908 ops/s
# Warmup Iteration  30: 128814.692 ops/s
Iteration   1: 124891.538 ops/s
Iteration   2: 127566.093 ops/s
Iteration   3: 123769.853 ops/s
Iteration   4: 132200.635 ops/s
Iteration   5: 124790.027 ops/s
Iteration   6: 127276.129 ops/s
Iteration   7: 132158.794 ops/s
Iteration   8: 126075.979 ops/s
Iteration   9: 132171.433 ops/s
Iteration  10: 127675.031 ops/s
Iteration  11: 129882.928 ops/s
Iteration  12: 130549.275 ops/s
Iteration  13: 126735.101 ops/s
Iteration  14: 124681.972 ops/s
Iteration  15: 131269.282 ops/s
Iteration  16: 126851.731 ops/s
Iteration  17: 132041.746 ops/s
Iteration  18: 129867.522 ops/s
Iteration  19: 125330.639 ops/s
Iteration  20: 131294.836 ops/s
Iteration  21: 125299.504 ops/s
Iteration  22: 126589.682 ops/s
Iteration  23: 130909.349 ops/s
Iteration  24: 122361.835 ops/s
Iteration  25: 132318.120 ops/s
Iteration  26: 129317.497 ops/s
Iteration  27: 125368.086 ops/s
Iteration  28: 129602.124 ops/s
Iteration  29: 125767.389 ops/s
Iteration  30: 125682.585 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_254._Benchmark.benchmark_Cluster_254":
  128009.890 ±(99.9%) 1988.726 ops/s [Average]
  (min, avg, max) = (122361.835, 128009.890, 132318.120), stdev = 2976.632
  CI (99.9%): [126021.164, 129998.616] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_254._Benchmark.benchmark_Cluster_254  thrpt   30  128009.890 ± 1988.726  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_255._Benchmark.benchmark_Cluster_255$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_255._Benchmark.benchmark_Cluster_255

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1861.230 ops/s
# Warmup Iteration   2: 19321.849 ops/s
# Warmup Iteration   3: 27988.044 ops/s
# Warmup Iteration   4: 35380.963 ops/s
# Warmup Iteration   5: 45288.668 ops/s
# Warmup Iteration   6: 67332.714 ops/s
# Warmup Iteration   7: 76195.760 ops/s
# Warmup Iteration   8: 78319.461 ops/s
# Warmup Iteration   9: 76356.064 ops/s
# Warmup Iteration  10: 80283.920 ops/s
# Warmup Iteration  11: 83047.991 ops/s
# Warmup Iteration  12: 79481.125 ops/s
# Warmup Iteration  13: 79456.118 ops/s
# Warmup Iteration  14: 82263.718 ops/s
# Warmup Iteration  15: 75243.117 ops/s
# Warmup Iteration  16: 82100.503 ops/s
# Warmup Iteration  17: 83948.499 ops/s
# Warmup Iteration  18: 80411.611 ops/s
# Warmup Iteration  19: 85300.001 ops/s
# Warmup Iteration  20: 81547.797 ops/s
# Warmup Iteration  21: 82449.010 ops/s
# Warmup Iteration  22: 70030.852 ops/s
# Warmup Iteration  23: 81788.685 ops/s
# Warmup Iteration  24: 82880.299 ops/s
# Warmup Iteration  25: 80912.704 ops/s
# Warmup Iteration  26: 82460.248 ops/s
# Warmup Iteration  27: 82512.350 ops/s
# Warmup Iteration  28: 81062.130 ops/s
# Warmup Iteration  29: 84226.611 ops/s
# Warmup Iteration  30: 80467.358 ops/s
Iteration   1: 84930.830 ops/s
Iteration   2: 81633.118 ops/s
Iteration   3: 81303.411 ops/s
Iteration   4: 81844.509 ops/s
Iteration   5: 80823.830 ops/s
Iteration   6: 81653.769 ops/s
Iteration   7: 85018.545 ops/s
Iteration   8: 79690.898 ops/s
Iteration   9: 86476.802 ops/s
Iteration  10: 85973.186 ops/s
Iteration  11: 80705.329 ops/s
Iteration  12: 83108.074 ops/s
Iteration  13: 80964.029 ops/s
Iteration  14: 82885.437 ops/s
Iteration  15: 82421.644 ops/s
Iteration  16: 80148.752 ops/s
Iteration  17: 82099.274 ops/s
Iteration  18: 84443.896 ops/s
Iteration  19: 80713.807 ops/s
Iteration  20: 82496.632 ops/s
Iteration  21: 80162.081 ops/s
Iteration  22: 81372.037 ops/s
Iteration  23: 83688.646 ops/s
Iteration  24: 81850.171 ops/s
Iteration  25: 82571.681 ops/s
Iteration  26: 82099.136 ops/s
Iteration  27: 82378.696 ops/s
Iteration  28: 84158.722 ops/s
Iteration  29: 80383.855 ops/s
Iteration  30: 83321.787 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_255._Benchmark.benchmark_Cluster_255":
  82377.419 ±(99.9%) 1171.287 ops/s [Average]
  (min, avg, max) = (79690.898, 82377.419, 86476.802), stdev = 1753.127
  CI (99.9%): [81206.133, 83548.706] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_255._Benchmark.benchmark_Cluster_255  thrpt   30  82377.419 ± 1171.287  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_256._Benchmark.benchmark_Cluster_256$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_256._Benchmark.benchmark_Cluster_256

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14183.846 ops/s
# Warmup Iteration   2: 90721.089 ops/s
# Warmup Iteration   3: 214175.385 ops/s
# Warmup Iteration   4: 235518.743 ops/s
# Warmup Iteration   5: 255676.654 ops/s
# Warmup Iteration   6: 245126.896 ops/s
# Warmup Iteration   7: 234205.154 ops/s
# Warmup Iteration   8: 251873.171 ops/s
# Warmup Iteration   9: 236486.902 ops/s
# Warmup Iteration  10: 237010.736 ops/s
# Warmup Iteration  11: 242499.104 ops/s
# Warmup Iteration  12: 255566.320 ops/s
# Warmup Iteration  13: 239125.935 ops/s
# Warmup Iteration  14: 253380.290 ops/s
# Warmup Iteration  15: 237389.952 ops/s
# Warmup Iteration  16: 242711.425 ops/s
# Warmup Iteration  17: 251908.661 ops/s
# Warmup Iteration  18: 249906.872 ops/s
# Warmup Iteration  19: 252898.542 ops/s
# Warmup Iteration  20: 257232.133 ops/s
# Warmup Iteration  21: 255678.990 ops/s
# Warmup Iteration  22: 253013.504 ops/s
# Warmup Iteration  23: 244878.335 ops/s
# Warmup Iteration  24: 245802.229 ops/s
# Warmup Iteration  25: 258744.309 ops/s
# Warmup Iteration  26: 250374.562 ops/s
# Warmup Iteration  27: 248925.371 ops/s
# Warmup Iteration  28: 253404.194 ops/s
# Warmup Iteration  29: 242724.724 ops/s
# Warmup Iteration  30: 252660.974 ops/s
Iteration   1: 249467.625 ops/s
Iteration   2: 252035.948 ops/s
Iteration   3: 263465.437 ops/s
Iteration   4: 255833.947 ops/s
Iteration   5: 257130.201 ops/s
Iteration   6: 246411.592 ops/s
Iteration   7: 258349.874 ops/s
Iteration   8: 262714.681 ops/s
Iteration   9: 255169.796 ops/s
Iteration  10: 249660.931 ops/s
Iteration  11: 261483.829 ops/s
Iteration  12: 249215.659 ops/s
Iteration  13: 258247.761 ops/s
Iteration  14: 255009.546 ops/s
Iteration  15: 250414.659 ops/s
Iteration  16: 255538.774 ops/s
Iteration  17: 254750.164 ops/s
Iteration  18: 262044.615 ops/s
Iteration  19: 244546.740 ops/s
Iteration  20: 255631.737 ops/s
Iteration  21: 249404.855 ops/s
Iteration  22: 259690.470 ops/s
Iteration  23: 253149.638 ops/s
Iteration  24: 266019.884 ops/s
Iteration  25: 253698.770 ops/s
Iteration  26: 245148.243 ops/s
Iteration  27: 265683.039 ops/s
Iteration  28: 244942.589 ops/s
Iteration  29: 258348.375 ops/s
Iteration  30: 244574.446 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_256._Benchmark.benchmark_Cluster_256":
  254592.794 ±(99.9%) 4231.287 ops/s [Average]
  (min, avg, max) = (244546.740, 254592.794, 266019.884), stdev = 6333.192
  CI (99.9%): [250361.507, 258824.081] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_256._Benchmark.benchmark_Cluster_256  thrpt   30  254592.794 ± 4231.287  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_257._Benchmark.benchmark_Cluster_257$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_257._Benchmark.benchmark_Cluster_257

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2887.944 ops/s
# Warmup Iteration   2: 29260.387 ops/s
# Warmup Iteration   3: 48514.793 ops/s
# Warmup Iteration   4: 78985.229 ops/s
# Warmup Iteration   5: 119030.747 ops/s
# Warmup Iteration   6: 122671.320 ops/s
# Warmup Iteration   7: 115644.487 ops/s
# Warmup Iteration   8: 122518.725 ops/s
# Warmup Iteration   9: 117272.567 ops/s
# Warmup Iteration  10: 118306.254 ops/s
# Warmup Iteration  11: 121337.565 ops/s
# Warmup Iteration  12: 117240.641 ops/s
# Warmup Iteration  13: 123294.768 ops/s
# Warmup Iteration  14: 118913.486 ops/s
# Warmup Iteration  15: 116743.575 ops/s
# Warmup Iteration  16: 108942.201 ops/s
# Warmup Iteration  17: 96668.007 ops/s
# Warmup Iteration  18: 117952.649 ops/s
# Warmup Iteration  19: 128236.937 ops/s
# Warmup Iteration  20: 123988.586 ops/s
# Warmup Iteration  21: 122266.171 ops/s
# Warmup Iteration  22: 131618.108 ops/s
# Warmup Iteration  23: 123317.343 ops/s
# Warmup Iteration  24: 122968.613 ops/s
# Warmup Iteration  25: 128719.026 ops/s
# Warmup Iteration  26: 129072.554 ops/s
# Warmup Iteration  27: 124620.337 ops/s
# Warmup Iteration  28: 126106.314 ops/s
# Warmup Iteration  29: 129493.603 ops/s
# Warmup Iteration  30: 123374.920 ops/s
Iteration   1: 127893.921 ops/s
Iteration   2: 123218.277 ops/s
Iteration   3: 125261.387 ops/s
Iteration   4: 126901.248 ops/s
Iteration   5: 123025.174 ops/s
Iteration   6: 123567.141 ops/s
Iteration   7: 133199.760 ops/s
Iteration   8: 125425.038 ops/s
Iteration   9: 118329.670 ops/s
Iteration  10: 131896.719 ops/s
Iteration  11: 120498.747 ops/s
Iteration  12: 129235.729 ops/s
Iteration  13: 123981.768 ops/s
Iteration  14: 124201.717 ops/s
Iteration  15: 130131.463 ops/s
Iteration  16: 125043.977 ops/s
Iteration  17: 125618.315 ops/s
Iteration  18: 128217.668 ops/s
Iteration  19: 121528.226 ops/s
Iteration  20: 130267.707 ops/s
Iteration  21: 129133.381 ops/s
Iteration  22: 122334.048 ops/s
Iteration  23: 133904.757 ops/s
Iteration  24: 124900.830 ops/s
Iteration  25: 127742.111 ops/s
Iteration  26: 126004.403 ops/s
Iteration  27: 129135.865 ops/s
Iteration  28: 128314.862 ops/s
Iteration  29: 124689.549 ops/s
Iteration  30: 125565.208 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_257._Benchmark.benchmark_Cluster_257":
  126305.622 ±(99.9%) 2440.034 ops/s [Average]
  (min, avg, max) = (118329.670, 126305.622, 133904.757), stdev = 3652.128
  CI (99.9%): [123865.588, 128745.656] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_257._Benchmark.benchmark_Cluster_257  thrpt   30  126305.622 ± 2440.034  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_258._Benchmark.benchmark_Cluster_258$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_258._Benchmark.benchmark_Cluster_258

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6887.739 ops/s
# Warmup Iteration   2: 35568.821 ops/s
# Warmup Iteration   3: 74448.198 ops/s
# Warmup Iteration   4: 89016.425 ops/s
# Warmup Iteration   5: 98927.993 ops/s
# Warmup Iteration   6: 103050.133 ops/s
# Warmup Iteration   7: 105424.806 ops/s
# Warmup Iteration   8: 111628.090 ops/s
# Warmup Iteration   9: 104168.010 ops/s
# Warmup Iteration  10: 104679.832 ops/s
# Warmup Iteration  11: 108058.921 ops/s
# Warmup Iteration  12: 106848.245 ops/s
# Warmup Iteration  13: 107085.020 ops/s
# Warmup Iteration  14: 105357.506 ops/s
# Warmup Iteration  15: 109975.563 ops/s
# Warmup Iteration  16: 105971.253 ops/s
# Warmup Iteration  17: 104100.934 ops/s
# Warmup Iteration  18: 108103.902 ops/s
# Warmup Iteration  19: 112840.411 ops/s
# Warmup Iteration  20: 111401.076 ops/s
# Warmup Iteration  21: 113828.733 ops/s
# Warmup Iteration  22: 108158.064 ops/s
# Warmup Iteration  23: 108605.584 ops/s
# Warmup Iteration  24: 111170.527 ops/s
# Warmup Iteration  25: 109906.702 ops/s
# Warmup Iteration  26: 108825.311 ops/s
# Warmup Iteration  27: 109949.282 ops/s
# Warmup Iteration  28: 114257.757 ops/s
# Warmup Iteration  29: 107430.422 ops/s
# Warmup Iteration  30: 112571.664 ops/s
Iteration   1: 112207.580 ops/s
Iteration   2: 110395.503 ops/s
Iteration   3: 112005.201 ops/s
Iteration   4: 111770.434 ops/s
Iteration   5: 109306.639 ops/s
Iteration   6: 110692.184 ops/s
Iteration   7: 111570.471 ops/s
Iteration   8: 109861.281 ops/s
Iteration   9: 112978.257 ops/s
Iteration  10: 107920.406 ops/s
Iteration  11: 110927.319 ops/s
Iteration  12: 111529.682 ops/s
Iteration  13: 110469.371 ops/s
Iteration  14: 114608.074 ops/s
Iteration  15: 108076.713 ops/s
Iteration  16: 112834.850 ops/s
Iteration  17: 111900.444 ops/s
Iteration  18: 111230.108 ops/s
Iteration  19: 107692.851 ops/s
Iteration  20: 115323.769 ops/s
Iteration  21: 108722.565 ops/s
Iteration  22: 110761.821 ops/s
Iteration  23: 112329.259 ops/s
Iteration  24: 110417.276 ops/s
Iteration  25: 110498.920 ops/s
Iteration  26: 108418.646 ops/s
Iteration  27: 113783.776 ops/s
Iteration  28: 110295.594 ops/s
Iteration  29: 109037.514 ops/s
Iteration  30: 110569.658 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_258._Benchmark.benchmark_Cluster_258":
  110937.872 ±(99.9%) 1264.214 ops/s [Average]
  (min, avg, max) = (107692.851, 110937.872, 115323.769), stdev = 1892.217
  CI (99.9%): [109673.658, 112202.086] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_258._Benchmark.benchmark_Cluster_258  thrpt   30  110937.872 ± 1264.214  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_259._Benchmark.benchmark_Cluster_259$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_259._Benchmark.benchmark_Cluster_259

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3704.526 ops/s
# Warmup Iteration   2: 24846.905 ops/s
# Warmup Iteration   3: 22902.411 ops/s
# Warmup Iteration   4: 39710.425 ops/s
# Warmup Iteration   5: 29200.225 ops/s
# Warmup Iteration   6: 43732.332 ops/s
# Warmup Iteration   7: 48515.635 ops/s
# Warmup Iteration   8: 83192.341 ops/s
# Warmup Iteration   9: 99592.709 ops/s
# Warmup Iteration  10: 103180.006 ops/s
# Warmup Iteration  11: 80498.729 ops/s
# Warmup Iteration  12: 101416.119 ops/s
# Warmup Iteration  13: 102857.424 ops/s
# Warmup Iteration  14: 101789.281 ops/s
# Warmup Iteration  15: 101789.768 ops/s
# Warmup Iteration  16: 103423.631 ops/s
# Warmup Iteration  17: 102044.844 ops/s
# Warmup Iteration  18: 105738.275 ops/s
# Warmup Iteration  19: 108280.920 ops/s
# Warmup Iteration  20: 100425.069 ops/s
# Warmup Iteration  21: 108574.883 ops/s
# Warmup Iteration  22: 107044.730 ops/s
# Warmup Iteration  23: 106210.846 ops/s
# Warmup Iteration  24: 103842.101 ops/s
# Warmup Iteration  25: 104733.057 ops/s
# Warmup Iteration  26: 110866.303 ops/s
# Warmup Iteration  27: 105285.043 ops/s
# Warmup Iteration  28: 105598.228 ops/s
# Warmup Iteration  29: 105428.719 ops/s
# Warmup Iteration  30: 103376.481 ops/s
Iteration   1: 110248.636 ops/s
Iteration   2: 103157.786 ops/s
Iteration   3: 105162.805 ops/s
Iteration   4: 110810.282 ops/s
Iteration   5: 104444.747 ops/s
Iteration   6: 109756.099 ops/s
Iteration   7: 108187.599 ops/s
Iteration   8: 108298.957 ops/s
Iteration   9: 106731.841 ops/s
Iteration  10: 106833.549 ops/s
Iteration  11: 105699.885 ops/s
Iteration  12: 106118.720 ops/s
Iteration  13: 105346.059 ops/s
Iteration  14: 105977.572 ops/s
Iteration  15: 110129.124 ops/s
Iteration  16: 108861.509 ops/s
Iteration  17: 105030.740 ops/s
Iteration  18: 104675.075 ops/s
Iteration  19: 110819.288 ops/s
Iteration  20: 102895.037 ops/s
Iteration  21: 107976.537 ops/s
Iteration  22: 107277.256 ops/s
Iteration  23: 103573.786 ops/s
Iteration  24: 105411.518 ops/s
Iteration  25: 104925.411 ops/s
Iteration  26: 107176.407 ops/s
Iteration  27: 110437.463 ops/s
Iteration  28: 103568.218 ops/s
Iteration  29: 109085.247 ops/s
Iteration  30: 101583.708 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_259._Benchmark.benchmark_Cluster_259":
  106673.362 ±(99.9%) 1730.091 ops/s [Average]
  (min, avg, max) = (101583.708, 106673.362, 110819.288), stdev = 2589.519
  CI (99.9%): [104943.271, 108403.453] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_259._Benchmark.benchmark_Cluster_259  thrpt   30  106673.362 ± 1730.091  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_26._Benchmark.benchmark_Cluster_26$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_26._Benchmark.benchmark_Cluster_26

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6533.909 ops/s
# Warmup Iteration   2: 26164.870 ops/s
# Warmup Iteration   3: 29399.096 ops/s
# Warmup Iteration   4: 35212.542 ops/s
# Warmup Iteration   5: 34210.901 ops/s
# Warmup Iteration   6: 37076.661 ops/s
# Warmup Iteration   7: 30983.241 ops/s
# Warmup Iteration   8: 45545.214 ops/s
# Warmup Iteration   9: 44200.935 ops/s
# Warmup Iteration  10: 44080.712 ops/s
# Warmup Iteration  11: 47871.156 ops/s
# Warmup Iteration  12: 47411.480 ops/s
# Warmup Iteration  13: 42895.484 ops/s
# Warmup Iteration  14: 42987.170 ops/s
# Warmup Iteration  15: 81529.069 ops/s
# Warmup Iteration  16: 113613.902 ops/s
# Warmup Iteration  17: 117352.686 ops/s
# Warmup Iteration  18: 113676.638 ops/s
# Warmup Iteration  19: 115749.876 ops/s
# Warmup Iteration  20: 113222.892 ops/s
# Warmup Iteration  21: 116228.948 ops/s
# Warmup Iteration  22: 113057.108 ops/s
# Warmup Iteration  23: 115237.862 ops/s
# Warmup Iteration  24: 116159.793 ops/s
# Warmup Iteration  25: 112531.491 ops/s
# Warmup Iteration  26: 113410.689 ops/s
# Warmup Iteration  27: 117637.028 ops/s
# Warmup Iteration  28: 114079.834 ops/s
# Warmup Iteration  29: 113006.229 ops/s
# Warmup Iteration  30: 118401.181 ops/s
Iteration   1: 115645.010 ops/s
Iteration   2: 111947.626 ops/s
Iteration   3: 113373.795 ops/s
Iteration   4: 117324.794 ops/s
Iteration   5: 112533.099 ops/s
Iteration   6: 108419.087 ops/s
Iteration   7: 113774.973 ops/s
Iteration   8: 113587.207 ops/s
Iteration   9: 116765.312 ops/s
Iteration  10: 114690.588 ops/s
Iteration  11: 116405.126 ops/s
Iteration  12: 115715.531 ops/s
Iteration  13: 114282.563 ops/s
Iteration  14: 113924.978 ops/s
Iteration  15: 110420.300 ops/s
Iteration  16: 114574.637 ops/s
Iteration  17: 117558.180 ops/s
Iteration  18: 110809.663 ops/s
Iteration  19: 116787.971 ops/s
Iteration  20: 108220.526 ops/s
Iteration  21: 118692.487 ops/s
Iteration  22: 103893.095 ops/s
Iteration  23: 116542.331 ops/s
Iteration  24: 110261.579 ops/s
Iteration  25: 114690.202 ops/s
Iteration  26: 114642.229 ops/s
Iteration  27: 116268.463 ops/s
Iteration  28: 111251.314 ops/s
Iteration  29: 116583.189 ops/s
Iteration  30: 112927.204 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_26._Benchmark.benchmark_Cluster_26":
  113750.435 ±(99.9%) 2184.867 ops/s [Average]
  (min, avg, max) = (103893.095, 113750.435, 118692.487), stdev = 3270.206
  CI (99.9%): [111565.569, 115935.302] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_26._Benchmark.benchmark_Cluster_26  thrpt   30  113750.435 ± 2184.867  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_260._Benchmark.benchmark_Cluster_260$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_260._Benchmark.benchmark_Cluster_260

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1057.669 ops/s
# Warmup Iteration   2: 5423.408 ops/s
# Warmup Iteration   3: 25035.828 ops/s
# Warmup Iteration   4: 31324.347 ops/s
# Warmup Iteration   5: 27031.078 ops/s
# Warmup Iteration   6: 25241.211 ops/s
# Warmup Iteration   7: 33294.330 ops/s
# Warmup Iteration   8: 32950.937 ops/s
# Warmup Iteration   9: 38977.870 ops/s
# Warmup Iteration  10: 39101.439 ops/s
# Warmup Iteration  11: 42810.179 ops/s
# Warmup Iteration  12: 87907.811 ops/s
# Warmup Iteration  13: 84674.477 ops/s
# Warmup Iteration  14: 89103.507 ops/s
# Warmup Iteration  15: 84962.618 ops/s
# Warmup Iteration  16: 86368.847 ops/s
# Warmup Iteration  17: 86668.676 ops/s
# Warmup Iteration  18: 87498.500 ops/s
# Warmup Iteration  19: 89654.809 ops/s
# Warmup Iteration  20: 89569.208 ops/s
# Warmup Iteration  21: 88543.548 ops/s
# Warmup Iteration  22: 92340.182 ops/s
# Warmup Iteration  23: 85766.648 ops/s
# Warmup Iteration  24: 87933.872 ops/s
# Warmup Iteration  25: 88627.899 ops/s
# Warmup Iteration  26: 89436.138 ops/s
# Warmup Iteration  27: 85884.762 ops/s
# Warmup Iteration  28: 89880.126 ops/s
# Warmup Iteration  29: 92989.113 ops/s
# Warmup Iteration  30: 85972.393 ops/s
Iteration   1: 88504.927 ops/s
Iteration   2: 85761.787 ops/s
Iteration   3: 83428.713 ops/s
Iteration   4: 86071.615 ops/s
Iteration   5: 89501.992 ops/s
Iteration   6: 90328.740 ops/s
Iteration   7: 88229.932 ops/s
Iteration   8: 90687.927 ops/s
Iteration   9: 87385.534 ops/s
Iteration  10: 91498.836 ops/s
Iteration  11: 87909.524 ops/s
Iteration  12: 90715.133 ops/s
Iteration  13: 89357.703 ops/s
Iteration  14: 89405.703 ops/s
Iteration  15: 85514.737 ops/s
Iteration  16: 85945.719 ops/s
Iteration  17: 89532.194 ops/s
Iteration  18: 86597.574 ops/s
Iteration  19: 91033.562 ops/s
Iteration  20: 90379.659 ops/s
Iteration  21: 90029.509 ops/s
Iteration  22: 90716.913 ops/s
Iteration  23: 86790.729 ops/s
Iteration  24: 88870.179 ops/s
Iteration  25: 90988.826 ops/s
Iteration  26: 87175.509 ops/s
Iteration  27: 91913.310 ops/s
Iteration  28: 83510.558 ops/s
Iteration  29: 91078.728 ops/s
Iteration  30: 87028.948 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_260._Benchmark.benchmark_Cluster_260":
  88529.824 ±(99.9%) 1564.573 ops/s [Average]
  (min, avg, max) = (83428.713, 88529.824, 91913.310), stdev = 2341.780
  CI (99.9%): [86965.251, 90094.397] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_260._Benchmark.benchmark_Cluster_260  thrpt   30  88529.824 ± 1564.573  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_261._Benchmark.benchmark_Cluster_261$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_261._Benchmark.benchmark_Cluster_261

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1861.699 ops/s
# Warmup Iteration   2: 16343.515 ops/s
# Warmup Iteration   3: 29632.374 ops/s
# Warmup Iteration   4: 23870.390 ops/s
# Warmup Iteration   5: 26509.670 ops/s
# Warmup Iteration   6: 33547.779 ops/s
# Warmup Iteration   7: 51506.758 ops/s
# Warmup Iteration   8: 85604.908 ops/s
# Warmup Iteration   9: 86416.205 ops/s
# Warmup Iteration  10: 89680.594 ops/s
# Warmup Iteration  11: 80658.917 ops/s
# Warmup Iteration  12: 85991.684 ops/s
# Warmup Iteration  13: 85133.242 ops/s
# Warmup Iteration  14: 87831.625 ops/s
# Warmup Iteration  15: 89004.752 ops/s
# Warmup Iteration  16: 85140.165 ops/s
# Warmup Iteration  17: 90442.315 ops/s
# Warmup Iteration  18: 85772.104 ops/s
# Warmup Iteration  19: 88225.852 ops/s
# Warmup Iteration  20: 89552.470 ops/s
# Warmup Iteration  21: 86785.499 ops/s
# Warmup Iteration  22: 90995.086 ops/s
# Warmup Iteration  23: 86651.648 ops/s
# Warmup Iteration  24: 88051.540 ops/s
# Warmup Iteration  25: 93413.224 ops/s
# Warmup Iteration  26: 85581.100 ops/s
# Warmup Iteration  27: 90803.354 ops/s
# Warmup Iteration  28: 87643.898 ops/s
# Warmup Iteration  29: 91946.428 ops/s
# Warmup Iteration  30: 89753.803 ops/s
Iteration   1: 88476.320 ops/s
Iteration   2: 91810.201 ops/s
Iteration   3: 86078.848 ops/s
Iteration   4: 88373.731 ops/s
Iteration   5: 89119.022 ops/s
Iteration   6: 89051.448 ops/s
Iteration   7: 89193.590 ops/s
Iteration   8: 88457.397 ops/s
Iteration   9: 88608.716 ops/s
Iteration  10: 88778.096 ops/s
Iteration  11: 86849.580 ops/s
Iteration  12: 92670.680 ops/s
Iteration  13: 89062.090 ops/s
Iteration  14: 85068.131 ops/s
Iteration  15: 91310.749 ops/s
Iteration  16: 87772.245 ops/s
Iteration  17: 91160.664 ops/s
Iteration  18: 85783.200 ops/s
Iteration  19: 91465.767 ops/s
Iteration  20: 89515.036 ops/s
Iteration  21: 87327.817 ops/s
Iteration  22: 92401.033 ops/s
Iteration  23: 87059.499 ops/s
Iteration  24: 89009.083 ops/s
Iteration  25: 91098.696 ops/s
Iteration  26: 85605.239 ops/s
Iteration  27: 90024.727 ops/s
Iteration  28: 86431.212 ops/s
Iteration  29: 86918.000 ops/s
Iteration  30: 91194.110 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_261._Benchmark.benchmark_Cluster_261":
  88855.831 ±(99.9%) 1412.657 ops/s [Average]
  (min, avg, max) = (85068.131, 88855.831, 92670.680), stdev = 2114.399
  CI (99.9%): [87443.174, 90268.488] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_261._Benchmark.benchmark_Cluster_261  thrpt   30  88855.831 ± 1412.657  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_262._Benchmark.benchmark_Cluster_262$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_262._Benchmark.benchmark_Cluster_262

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11790.220 ops/s
# Warmup Iteration   2: 60398.037 ops/s
# Warmup Iteration   3: 79816.402 ops/s
# Warmup Iteration   4: 118119.505 ops/s
# Warmup Iteration   5: 119571.626 ops/s
# Warmup Iteration   6: 122269.256 ops/s
# Warmup Iteration   7: 125364.275 ops/s
# Warmup Iteration   8: 126231.867 ops/s
# Warmup Iteration   9: 126472.407 ops/s
# Warmup Iteration  10: 127597.727 ops/s
# Warmup Iteration  11: 126921.235 ops/s
# Warmup Iteration  12: 123023.500 ops/s
# Warmup Iteration  13: 125388.177 ops/s
# Warmup Iteration  14: 122791.748 ops/s
# Warmup Iteration  15: 123237.792 ops/s
# Warmup Iteration  16: 130427.660 ops/s
# Warmup Iteration  17: 129517.163 ops/s
# Warmup Iteration  18: 129069.911 ops/s
# Warmup Iteration  19: 131133.791 ops/s
# Warmup Iteration  20: 134944.458 ops/s
# Warmup Iteration  21: 128430.320 ops/s
# Warmup Iteration  22: 135013.708 ops/s
# Warmup Iteration  23: 129359.954 ops/s
# Warmup Iteration  24: 130173.610 ops/s
# Warmup Iteration  25: 128542.395 ops/s
# Warmup Iteration  26: 131905.150 ops/s
# Warmup Iteration  27: 136535.608 ops/s
# Warmup Iteration  28: 133772.521 ops/s
# Warmup Iteration  29: 128618.715 ops/s
# Warmup Iteration  30: 133794.050 ops/s
Iteration   1: 129255.434 ops/s
Iteration   2: 132053.946 ops/s
Iteration   3: 132587.826 ops/s
Iteration   4: 130766.548 ops/s
Iteration   5: 138092.975 ops/s
Iteration   6: 129754.742 ops/s
Iteration   7: 132911.117 ops/s
Iteration   8: 128209.258 ops/s
Iteration   9: 131530.403 ops/s
Iteration  10: 133307.845 ops/s
Iteration  11: 130110.457 ops/s
Iteration  12: 134002.265 ops/s
Iteration  13: 128339.765 ops/s
Iteration  14: 135752.101 ops/s
Iteration  15: 133849.449 ops/s
Iteration  16: 127502.905 ops/s
Iteration  17: 128403.177 ops/s
Iteration  18: 135772.775 ops/s
Iteration  19: 128465.597 ops/s
Iteration  20: 134164.022 ops/s
Iteration  21: 131228.070 ops/s
Iteration  22: 133711.377 ops/s
Iteration  23: 128875.683 ops/s
Iteration  24: 126174.609 ops/s
Iteration  25: 130129.756 ops/s
Iteration  26: 126014.036 ops/s
Iteration  27: 134530.091 ops/s
Iteration  28: 129481.040 ops/s
Iteration  29: 134044.197 ops/s
Iteration  30: 135275.154 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_262._Benchmark.benchmark_Cluster_262":
  131476.554 ±(99.9%) 2067.568 ops/s [Average]
  (min, avg, max) = (126014.036, 131476.554, 138092.975), stdev = 3094.639
  CI (99.9%): [129408.985, 133544.122] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_262._Benchmark.benchmark_Cluster_262  thrpt   30  131476.554 ± 2067.568  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_263._Benchmark.benchmark_Cluster_263$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_263._Benchmark.benchmark_Cluster_263

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5604.089 ops/s
# Warmup Iteration   2: 29354.269 ops/s
# Warmup Iteration   3: 39807.624 ops/s
# Warmup Iteration   4: 67752.057 ops/s
# Warmup Iteration   5: 108546.790 ops/s
# Warmup Iteration   6: 115298.289 ops/s
# Warmup Iteration   7: 108341.887 ops/s
# Warmup Iteration   8: 115434.477 ops/s
# Warmup Iteration   9: 115194.912 ops/s
# Warmup Iteration  10: 105342.650 ops/s
# Warmup Iteration  11: 114985.043 ops/s
# Warmup Iteration  12: 115774.166 ops/s
# Warmup Iteration  13: 117147.174 ops/s
# Warmup Iteration  14: 116814.806 ops/s
# Warmup Iteration  15: 121949.374 ops/s
# Warmup Iteration  16: 114426.342 ops/s
# Warmup Iteration  17: 123681.068 ops/s
# Warmup Iteration  18: 121021.894 ops/s
# Warmup Iteration  19: 125607.117 ops/s
# Warmup Iteration  20: 127334.002 ops/s
# Warmup Iteration  21: 117935.104 ops/s
# Warmup Iteration  22: 127151.146 ops/s
# Warmup Iteration  23: 121092.543 ops/s
# Warmup Iteration  24: 120199.750 ops/s
# Warmup Iteration  25: 120973.155 ops/s
# Warmup Iteration  26: 126514.507 ops/s
# Warmup Iteration  27: 117887.831 ops/s
# Warmup Iteration  28: 124046.329 ops/s
# Warmup Iteration  29: 120310.366 ops/s
# Warmup Iteration  30: 124995.418 ops/s
Iteration   1: 120553.143 ops/s
Iteration   2: 124571.362 ops/s
Iteration   3: 121419.976 ops/s
Iteration   4: 123926.953 ops/s
Iteration   5: 121998.183 ops/s
Iteration   6: 124857.491 ops/s
Iteration   7: 122265.076 ops/s
Iteration   8: 119974.142 ops/s
Iteration   9: 128924.120 ops/s
Iteration  10: 118646.532 ops/s
Iteration  11: 126967.129 ops/s
Iteration  12: 119304.874 ops/s
Iteration  13: 122798.716 ops/s
Iteration  14: 120641.987 ops/s
Iteration  15: 121605.302 ops/s
Iteration  16: 124729.075 ops/s
Iteration  17: 123896.733 ops/s
Iteration  18: 117237.372 ops/s
Iteration  19: 127177.555 ops/s
Iteration  20: 126549.421 ops/s
Iteration  21: 119930.351 ops/s
Iteration  22: 125134.146 ops/s
Iteration  23: 120566.702 ops/s
Iteration  24: 125912.457 ops/s
Iteration  25: 86225.577 ops/s
Iteration  26: 122075.838 ops/s
Iteration  27: 124846.670 ops/s
Iteration  28: 117158.676 ops/s
Iteration  29: 120909.190 ops/s
Iteration  30: 123494.567 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_263._Benchmark.benchmark_Cluster_263":
  121476.644 ±(99.9%) 4865.710 ops/s [Average]
  (min, avg, max) = (86225.577, 121476.644, 128924.120), stdev = 7282.766
  CI (99.9%): [116610.934, 126342.354] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_263._Benchmark.benchmark_Cluster_263  thrpt   30  121476.644 ± 4865.710  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_264._Benchmark.benchmark_Cluster_264$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_264._Benchmark.benchmark_Cluster_264

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3950.698 ops/s
# Warmup Iteration   2: 22115.483 ops/s
# Warmup Iteration   3: 49279.435 ops/s
# Warmup Iteration   4: 82167.013 ops/s
# Warmup Iteration   5: 92704.731 ops/s
# Warmup Iteration   6: 92650.827 ops/s
# Warmup Iteration   7: 87410.358 ops/s
# Warmup Iteration   8: 100660.788 ops/s
# Warmup Iteration   9: 100141.995 ops/s
# Warmup Iteration  10: 98023.943 ops/s
# Warmup Iteration  11: 97624.107 ops/s
# Warmup Iteration  12: 100838.260 ops/s
# Warmup Iteration  13: 97156.179 ops/s
# Warmup Iteration  14: 100157.742 ops/s
# Warmup Iteration  15: 97441.453 ops/s
# Warmup Iteration  16: 96182.057 ops/s
# Warmup Iteration  17: 104600.083 ops/s
# Warmup Iteration  18: 99884.008 ops/s
# Warmup Iteration  19: 102560.815 ops/s
# Warmup Iteration  20: 101408.968 ops/s
# Warmup Iteration  21: 103807.524 ops/s
# Warmup Iteration  22: 103601.031 ops/s
# Warmup Iteration  23: 101254.097 ops/s
# Warmup Iteration  24: 100654.324 ops/s
# Warmup Iteration  25: 102431.387 ops/s
# Warmup Iteration  26: 102273.910 ops/s
# Warmup Iteration  27: 99465.863 ops/s
# Warmup Iteration  28: 105459.265 ops/s
# Warmup Iteration  29: 100329.208 ops/s
# Warmup Iteration  30: 101883.090 ops/s
Iteration   1: 100382.896 ops/s
Iteration   2: 104738.536 ops/s
Iteration   3: 104461.669 ops/s
Iteration   4: 98378.314 ops/s
Iteration   5: 101321.220 ops/s
Iteration   6: 103243.075 ops/s
Iteration   7: 98962.646 ops/s
Iteration   8: 105772.027 ops/s
Iteration   9: 100518.353 ops/s
Iteration  10: 102204.513 ops/s
Iteration  11: 103633.839 ops/s
Iteration  12: 102136.365 ops/s
Iteration  13: 98299.489 ops/s
Iteration  14: 101299.470 ops/s
Iteration  15: 102440.756 ops/s
Iteration  16: 100387.600 ops/s
Iteration  17: 100672.458 ops/s
Iteration  18: 99519.026 ops/s
Iteration  19: 100613.822 ops/s
Iteration  20: 104033.193 ops/s
Iteration  21: 100229.013 ops/s
Iteration  22: 104515.470 ops/s
Iteration  23: 99919.359 ops/s
Iteration  24: 101576.740 ops/s
Iteration  25: 101411.112 ops/s
Iteration  26: 104382.642 ops/s
Iteration  27: 106362.072 ops/s
Iteration  28: 98034.705 ops/s
Iteration  29: 103923.667 ops/s
Iteration  30: 102376.150 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_264._Benchmark.benchmark_Cluster_264":
  101858.340 ±(99.9%) 1512.452 ops/s [Average]
  (min, avg, max) = (98034.705, 101858.340, 106362.072), stdev = 2263.767
  CI (99.9%): [100345.888, 103370.792] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_264._Benchmark.benchmark_Cluster_264  thrpt   30  101858.340 ± 1512.452  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_265._Benchmark.benchmark_Cluster_265$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_265._Benchmark.benchmark_Cluster_265

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 23255.086 ops/s
# Warmup Iteration   2: 69846.704 ops/s
# Warmup Iteration   3: 158193.248 ops/s
# Warmup Iteration   4: 207562.445 ops/s
# Warmup Iteration   5: 226874.290 ops/s
# Warmup Iteration   6: 208638.784 ops/s
# Warmup Iteration   7: 206386.520 ops/s
# Warmup Iteration   8: 213409.189 ops/s
# Warmup Iteration   9: 220482.416 ops/s
# Warmup Iteration  10: 224324.484 ops/s
# Warmup Iteration  11: 220562.905 ops/s
# Warmup Iteration  12: 215007.082 ops/s
# Warmup Iteration  13: 222408.002 ops/s
# Warmup Iteration  14: 221053.834 ops/s
# Warmup Iteration  15: 224490.200 ops/s
# Warmup Iteration  16: 213787.932 ops/s
# Warmup Iteration  17: 224802.047 ops/s
# Warmup Iteration  18: 229627.688 ops/s
# Warmup Iteration  19: 224678.284 ops/s
# Warmup Iteration  20: 227027.939 ops/s
# Warmup Iteration  21: 238884.014 ops/s
# Warmup Iteration  22: 222366.549 ops/s
# Warmup Iteration  23: 230687.346 ops/s
# Warmup Iteration  24: 228746.575 ops/s
# Warmup Iteration  25: 227904.970 ops/s
# Warmup Iteration  26: 224501.194 ops/s
# Warmup Iteration  27: 239471.222 ops/s
# Warmup Iteration  28: 224631.247 ops/s
# Warmup Iteration  29: 223896.892 ops/s
# Warmup Iteration  30: 229717.278 ops/s
Iteration   1: 234559.529 ops/s
Iteration   2: 211746.467 ops/s
Iteration   3: 223688.697 ops/s
Iteration   4: 229912.880 ops/s
Iteration   5: 221782.858 ops/s
Iteration   6: 234504.749 ops/s
Iteration   7: 230524.583 ops/s
Iteration   8: 231022.973 ops/s
Iteration   9: 219269.075 ops/s
Iteration  10: 234486.272 ops/s
Iteration  11: 228636.587 ops/s
Iteration  12: 225499.496 ops/s
Iteration  13: 234775.375 ops/s
Iteration  14: 223846.940 ops/s
Iteration  15: 228071.609 ops/s
Iteration  16: 234434.503 ops/s
Iteration  17: 225574.803 ops/s
Iteration  18: 190737.978 ops/s
Iteration  19: 199703.265 ops/s
Iteration  20: 226104.937 ops/s
Iteration  21: 231517.515 ops/s
Iteration  22: 225393.778 ops/s
Iteration  23: 230858.681 ops/s
Iteration  24: 239931.393 ops/s
Iteration  25: 226737.148 ops/s
Iteration  26: 221725.286 ops/s
Iteration  27: 232263.438 ops/s
Iteration  28: 232856.240 ops/s
Iteration  29: 222843.026 ops/s
Iteration  30: 230159.686 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_265._Benchmark.benchmark_Cluster_265":
  226105.659 ±(99.9%) 6829.360 ops/s [Average]
  (min, avg, max) = (190737.978, 226105.659, 239931.393), stdev = 10221.865
  CI (99.9%): [219276.299, 232935.019] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_265._Benchmark.benchmark_Cluster_265  thrpt   30  226105.659 ± 6829.360  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_266._Benchmark.benchmark_Cluster_266$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_266._Benchmark.benchmark_Cluster_266

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4334.161 ops/s
# Warmup Iteration   2: 17687.284 ops/s
# Warmup Iteration   3: 37289.305 ops/s
# Warmup Iteration   4: 54854.864 ops/s
# Warmup Iteration   5: 71466.925 ops/s
# Warmup Iteration   6: 74058.895 ops/s
# Warmup Iteration   7: 78072.561 ops/s
# Warmup Iteration   8: 77659.295 ops/s
# Warmup Iteration   9: 79519.334 ops/s
# Warmup Iteration  10: 79952.615 ops/s
# Warmup Iteration  11: 78371.544 ops/s
# Warmup Iteration  12: 67588.977 ops/s
# Warmup Iteration  13: 77333.885 ops/s
# Warmup Iteration  14: 81708.296 ops/s
# Warmup Iteration  15: 76608.618 ops/s
# Warmup Iteration  16: 75456.083 ops/s
# Warmup Iteration  17: 83609.428 ops/s
# Warmup Iteration  18: 82056.505 ops/s
# Warmup Iteration  19: 83908.266 ops/s
# Warmup Iteration  20: 83898.494 ops/s
# Warmup Iteration  21: 80053.825 ops/s
# Warmup Iteration  22: 79312.724 ops/s
# Warmup Iteration  23: 79111.755 ops/s
# Warmup Iteration  24: 81017.919 ops/s
# Warmup Iteration  25: 80517.569 ops/s
# Warmup Iteration  26: 78034.538 ops/s
# Warmup Iteration  27: 78568.439 ops/s
# Warmup Iteration  28: 79489.998 ops/s
# Warmup Iteration  29: 79570.249 ops/s
# Warmup Iteration  30: 85321.524 ops/s
Iteration   1: 79372.385 ops/s
Iteration   2: 83023.111 ops/s
Iteration   3: 81169.334 ops/s
Iteration   4: 81163.752 ops/s
Iteration   5: 83308.745 ops/s
Iteration   6: 78708.661 ops/s
Iteration   7: 81829.553 ops/s
Iteration   8: 82277.562 ops/s
Iteration   9: 82755.762 ops/s
Iteration  10: 80168.557 ops/s
Iteration  11: 78389.507 ops/s
Iteration  12: 84267.201 ops/s
Iteration  13: 76245.715 ops/s
Iteration  14: 79205.414 ops/s
Iteration  15: 81111.418 ops/s
Iteration  16: 67231.928 ops/s
Iteration  17: 79259.497 ops/s
Iteration  18: 82371.528 ops/s
Iteration  19: 80913.117 ops/s
Iteration  20: 83328.923 ops/s
Iteration  21: 80326.186 ops/s
Iteration  22: 83058.206 ops/s
Iteration  23: 79927.818 ops/s
Iteration  24: 83234.852 ops/s
Iteration  25: 82281.260 ops/s
Iteration  26: 80519.114 ops/s
Iteration  27: 81994.863 ops/s
Iteration  28: 79821.092 ops/s
Iteration  29: 82839.561 ops/s
Iteration  30: 80157.989 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_266._Benchmark.benchmark_Cluster_266":
  80675.420 ±(99.9%) 2086.067 ops/s [Average]
  (min, avg, max) = (67231.928, 80675.420, 84267.201), stdev = 3122.327
  CI (99.9%): [78589.353, 82761.487] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_266._Benchmark.benchmark_Cluster_266  thrpt   30  80675.420 ± 2086.067  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_267._Benchmark.benchmark_Cluster_267$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_267._Benchmark.benchmark_Cluster_267

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5672.024 ops/s
# Warmup Iteration   2: 19694.371 ops/s
# Warmup Iteration   3: 55888.027 ops/s
# Warmup Iteration   4: 92567.103 ops/s
# Warmup Iteration   5: 91750.622 ops/s
# Warmup Iteration   6: 88793.864 ops/s
# Warmup Iteration   7: 104518.347 ops/s
# Warmup Iteration   8: 87105.343 ops/s
# Warmup Iteration   9: 102644.069 ops/s
# Warmup Iteration  10: 103518.722 ops/s
# Warmup Iteration  11: 100837.898 ops/s
# Warmup Iteration  12: 102889.232 ops/s
# Warmup Iteration  13: 105304.819 ops/s
# Warmup Iteration  14: 98387.141 ops/s
# Warmup Iteration  15: 104846.364 ops/s
# Warmup Iteration  16: 100777.934 ops/s
# Warmup Iteration  17: 104191.396 ops/s
# Warmup Iteration  18: 108065.013 ops/s
# Warmup Iteration  19: 104774.070 ops/s
# Warmup Iteration  20: 104956.929 ops/s
# Warmup Iteration  21: 103768.789 ops/s
# Warmup Iteration  22: 106320.173 ops/s
# Warmup Iteration  23: 103076.203 ops/s
# Warmup Iteration  24: 101680.782 ops/s
# Warmup Iteration  25: 109566.168 ops/s
# Warmup Iteration  26: 100504.008 ops/s
# Warmup Iteration  27: 101722.814 ops/s
# Warmup Iteration  28: 104003.609 ops/s
# Warmup Iteration  29: 105621.146 ops/s
# Warmup Iteration  30: 102809.926 ops/s
Iteration   1: 102382.723 ops/s
Iteration   2: 107462.277 ops/s
Iteration   3: 102239.592 ops/s
Iteration   4: 107908.274 ops/s
Iteration   5: 103695.434 ops/s
Iteration   6: 103736.345 ops/s
Iteration   7: 110180.544 ops/s
Iteration   8: 102644.275 ops/s
Iteration   9: 103772.940 ops/s
Iteration  10: 106896.372 ops/s
Iteration  11: 104515.599 ops/s
Iteration  12: 108090.905 ops/s
Iteration  13: 103654.921 ops/s
Iteration  14: 105921.826 ops/s
Iteration  15: 106779.117 ops/s
Iteration  16: 102555.077 ops/s
Iteration  17: 106736.450 ops/s
Iteration  18: 102674.503 ops/s
Iteration  19: 109775.397 ops/s
Iteration  20: 109624.390 ops/s
Iteration  21: 103773.397 ops/s
Iteration  22: 107971.464 ops/s
Iteration  23: 103050.530 ops/s
Iteration  24: 106769.443 ops/s
Iteration  25: 105526.631 ops/s
Iteration  26: 107430.664 ops/s
Iteration  27: 102346.399 ops/s
Iteration  28: 106817.489 ops/s
Iteration  29: 109926.259 ops/s
Iteration  30: 104807.345 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_267._Benchmark.benchmark_Cluster_267":
  105655.553 ±(99.9%) 1706.476 ops/s [Average]
  (min, avg, max) = (102239.592, 105655.553, 110180.544), stdev = 2554.174
  CI (99.9%): [103949.076, 107362.029] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_267._Benchmark.benchmark_Cluster_267  thrpt   30  105655.553 ± 1706.476  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_268._Benchmark.benchmark_Cluster_268$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_268._Benchmark.benchmark_Cluster_268

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11030.109 ops/s
# Warmup Iteration   2: 47313.319 ops/s
# Warmup Iteration   3: 100694.292 ops/s
# Warmup Iteration   4: 120518.811 ops/s
# Warmup Iteration   5: 131320.936 ops/s
# Warmup Iteration   6: 125048.203 ops/s
# Warmup Iteration   7: 123704.030 ops/s
# Warmup Iteration   8: 123919.144 ops/s
# Warmup Iteration   9: 130953.854 ops/s
# Warmup Iteration  10: 128666.919 ops/s
# Warmup Iteration  11: 131771.532 ops/s
# Warmup Iteration  12: 124263.796 ops/s
# Warmup Iteration  13: 129437.723 ops/s
# Warmup Iteration  14: 126444.179 ops/s
# Warmup Iteration  15: 132350.350 ops/s
# Warmup Iteration  16: 129681.023 ops/s
# Warmup Iteration  17: 127458.550 ops/s
# Warmup Iteration  18: 128189.056 ops/s
# Warmup Iteration  19: 130672.270 ops/s
# Warmup Iteration  20: 129668.829 ops/s
# Warmup Iteration  21: 135818.031 ops/s
# Warmup Iteration  22: 131802.943 ops/s
# Warmup Iteration  23: 136327.422 ops/s
# Warmup Iteration  24: 130112.153 ops/s
# Warmup Iteration  25: 123714.167 ops/s
# Warmup Iteration  26: 138491.001 ops/s
# Warmup Iteration  27: 135919.165 ops/s
# Warmup Iteration  28: 132479.321 ops/s
# Warmup Iteration  29: 134572.903 ops/s
# Warmup Iteration  30: 133324.350 ops/s
Iteration   1: 133624.438 ops/s
Iteration   2: 130486.597 ops/s
Iteration   3: 131588.055 ops/s
Iteration   4: 129714.375 ops/s
Iteration   5: 136550.663 ops/s
Iteration   6: 128386.370 ops/s
Iteration   7: 132860.637 ops/s
Iteration   8: 136574.577 ops/s
Iteration   9: 126631.458 ops/s
Iteration  10: 101831.076 ops/s
Iteration  11: 131666.170 ops/s
Iteration  12: 129349.507 ops/s
Iteration  13: 130310.802 ops/s
Iteration  14: 136807.109 ops/s
Iteration  15: 133906.031 ops/s
Iteration  16: 127007.221 ops/s
Iteration  17: 137876.399 ops/s
Iteration  18: 127587.185 ops/s
Iteration  19: 134694.250 ops/s
Iteration  20: 128268.853 ops/s
Iteration  21: 138105.406 ops/s
Iteration  22: 138615.151 ops/s
Iteration  23: 129613.470 ops/s
Iteration  24: 135633.037 ops/s
Iteration  25: 132451.458 ops/s
Iteration  26: 135414.926 ops/s
Iteration  27: 135912.925 ops/s
Iteration  28: 131294.583 ops/s
Iteration  29: 135164.667 ops/s
Iteration  30: 129585.528 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_268._Benchmark.benchmark_Cluster_268":
  131583.764 ±(99.9%) 4438.421 ops/s [Average]
  (min, avg, max) = (101831.076, 131583.764, 138615.151), stdev = 6643.220
  CI (99.9%): [127145.343, 136022.185] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_268._Benchmark.benchmark_Cluster_268  thrpt   30  131583.764 ± 4438.421  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_269._Benchmark.benchmark_Cluster_269$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_269._Benchmark.benchmark_Cluster_269

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10872.047 ops/s
# Warmup Iteration   2: 35881.197 ops/s
# Warmup Iteration   3: 48751.325 ops/s
# Warmup Iteration   4: 92072.101 ops/s
# Warmup Iteration   5: 113737.396 ops/s
# Warmup Iteration   6: 104257.047 ops/s
# Warmup Iteration   7: 120972.607 ops/s
# Warmup Iteration   8: 115499.749 ops/s
# Warmup Iteration   9: 113282.636 ops/s
# Warmup Iteration  10: 118830.571 ops/s
# Warmup Iteration  11: 114836.239 ops/s
# Warmup Iteration  12: 122104.257 ops/s
# Warmup Iteration  13: 115316.061 ops/s
# Warmup Iteration  14: 120003.520 ops/s
# Warmup Iteration  15: 120354.255 ops/s
# Warmup Iteration  16: 113365.811 ops/s
# Warmup Iteration  17: 121637.025 ops/s
# Warmup Iteration  18: 124336.210 ops/s
# Warmup Iteration  19: 116812.430 ops/s
# Warmup Iteration  20: 126094.977 ops/s
# Warmup Iteration  21: 119408.223 ops/s
# Warmup Iteration  22: 121537.205 ops/s
# Warmup Iteration  23: 123357.868 ops/s
# Warmup Iteration  24: 118879.290 ops/s
# Warmup Iteration  25: 124027.893 ops/s
# Warmup Iteration  26: 119339.983 ops/s
# Warmup Iteration  27: 118746.556 ops/s
# Warmup Iteration  28: 127251.120 ops/s
# Warmup Iteration  29: 118882.045 ops/s
# Warmup Iteration  30: 123691.314 ops/s
Iteration   1: 121597.518 ops/s
Iteration   2: 118389.365 ops/s
Iteration   3: 121079.033 ops/s
Iteration   4: 120393.980 ops/s
Iteration   5: 119242.108 ops/s
Iteration   6: 127179.651 ops/s
Iteration   7: 124882.769 ops/s
Iteration   8: 117208.901 ops/s
Iteration   9: 122098.457 ops/s
Iteration  10: 119717.469 ops/s
Iteration  11: 122217.945 ops/s
Iteration  12: 118675.521 ops/s
Iteration  13: 121070.391 ops/s
Iteration  14: 126851.547 ops/s
Iteration  15: 115520.687 ops/s
Iteration  16: 124871.368 ops/s
Iteration  17: 121042.541 ops/s
Iteration  18: 118804.691 ops/s
Iteration  19: 124857.930 ops/s
Iteration  20: 120833.062 ops/s
Iteration  21: 124654.798 ops/s
Iteration  22: 118632.500 ops/s
Iteration  23: 120445.333 ops/s
Iteration  24: 123323.010 ops/s
Iteration  25: 118335.986 ops/s
Iteration  26: 120380.585 ops/s
Iteration  27: 124573.413 ops/s
Iteration  28: 115246.337 ops/s
Iteration  29: 118920.451 ops/s
Iteration  30: 120707.804 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_269._Benchmark.benchmark_Cluster_269":
  121058.505 ±(99.9%) 2036.063 ops/s [Average]
  (min, avg, max) = (115246.337, 121058.505, 127179.651), stdev = 3047.484
  CI (99.9%): [119022.442, 123094.569] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_269._Benchmark.benchmark_Cluster_269  thrpt   30  121058.505 ± 2036.063  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_27._Benchmark.benchmark_Cluster_27$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_27._Benchmark.benchmark_Cluster_27

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2274.410 ops/s
# Warmup Iteration   2: 16212.968 ops/s
# Warmup Iteration   3: 20901.317 ops/s
# Warmup Iteration   4: 27796.676 ops/s
# Warmup Iteration   5: 23114.570 ops/s
# Warmup Iteration   6: 24873.823 ops/s
# Warmup Iteration   7: 59101.942 ops/s
# Warmup Iteration   8: 75712.365 ops/s
# Warmup Iteration   9: 81301.357 ops/s
# Warmup Iteration  10: 78279.010 ops/s
# Warmup Iteration  11: 79667.596 ops/s
# Warmup Iteration  12: 82827.463 ops/s
# Warmup Iteration  13: 77730.432 ops/s
# Warmup Iteration  14: 82212.875 ops/s
# Warmup Iteration  15: 78697.394 ops/s
# Warmup Iteration  16: 78840.214 ops/s
# Warmup Iteration  17: 84725.411 ops/s
# Warmup Iteration  18: 78006.453 ops/s
# Warmup Iteration  19: 81448.081 ops/s
# Warmup Iteration  20: 79127.347 ops/s
# Warmup Iteration  21: 83240.026 ops/s
# Warmup Iteration  22: 81216.475 ops/s
# Warmup Iteration  23: 83532.943 ops/s
# Warmup Iteration  24: 79727.586 ops/s
# Warmup Iteration  25: 78447.033 ops/s
# Warmup Iteration  26: 85518.040 ops/s
# Warmup Iteration  27: 79448.118 ops/s
# Warmup Iteration  28: 81378.779 ops/s
# Warmup Iteration  29: 84169.360 ops/s
# Warmup Iteration  30: 80883.322 ops/s
Iteration   1: 82315.781 ops/s
Iteration   2: 79452.130 ops/s
Iteration   3: 80976.997 ops/s
Iteration   4: 77083.956 ops/s
Iteration   5: 71931.427 ops/s
Iteration   6: 77405.782 ops/s
Iteration   7: 79617.596 ops/s
Iteration   8: 83050.279 ops/s
Iteration   9: 78907.094 ops/s
Iteration  10: 83958.934 ops/s
Iteration  11: 84033.537 ops/s
Iteration  12: 81101.033 ops/s
Iteration  13: 84694.041 ops/s
Iteration  14: 79976.749 ops/s
Iteration  15: 80268.778 ops/s
Iteration  16: 82906.625 ops/s
Iteration  17: 81746.437 ops/s
Iteration  18: 81678.292 ops/s
Iteration  19: 81993.555 ops/s
Iteration  20: 80291.490 ops/s
Iteration  21: 82979.696 ops/s
Iteration  22: 79829.580 ops/s
Iteration  23: 85829.724 ops/s
Iteration  24: 81448.309 ops/s
Iteration  25: 83510.649 ops/s
Iteration  26: 81829.447 ops/s
Iteration  27: 85091.526 ops/s
Iteration  28: 78993.344 ops/s
Iteration  29: 82416.217 ops/s
Iteration  30: 80725.279 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_27._Benchmark.benchmark_Cluster_27":
  81201.476 ±(99.9%) 1848.079 ops/s [Average]
  (min, avg, max) = (71931.427, 81201.476, 85829.724), stdev = 2766.118
  CI (99.9%): [79353.397, 83049.555] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_27._Benchmark.benchmark_Cluster_27  thrpt   30  81201.476 ± 1848.079  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_270._Benchmark.benchmark_Cluster_270$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_270._Benchmark.benchmark_Cluster_270

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15571.672 ops/s
# Warmup Iteration   2: 32634.006 ops/s
# Warmup Iteration   3: 43701.995 ops/s
# Warmup Iteration   4: 41467.434 ops/s
# Warmup Iteration   5: 57463.523 ops/s
# Warmup Iteration   6: 105202.030 ops/s
# Warmup Iteration   7: 117042.227 ops/s
# Warmup Iteration   8: 118561.217 ops/s
# Warmup Iteration   9: 122871.213 ops/s
# Warmup Iteration  10: 114943.487 ops/s
# Warmup Iteration  11: 122047.658 ops/s
# Warmup Iteration  12: 117639.130 ops/s
# Warmup Iteration  13: 117131.644 ops/s
# Warmup Iteration  14: 120806.137 ops/s
# Warmup Iteration  15: 113946.832 ops/s
# Warmup Iteration  16: 117159.117 ops/s
# Warmup Iteration  17: 130098.438 ops/s
# Warmup Iteration  18: 119709.614 ops/s
# Warmup Iteration  19: 122581.094 ops/s
# Warmup Iteration  20: 126117.256 ops/s
# Warmup Iteration  21: 119914.228 ops/s
# Warmup Iteration  22: 127542.561 ops/s
# Warmup Iteration  23: 122475.779 ops/s
# Warmup Iteration  24: 118416.979 ops/s
# Warmup Iteration  25: 125959.626 ops/s
# Warmup Iteration  26: 120171.223 ops/s
# Warmup Iteration  27: 126781.451 ops/s
# Warmup Iteration  28: 120146.689 ops/s
# Warmup Iteration  29: 118467.483 ops/s
# Warmup Iteration  30: 122593.263 ops/s
Iteration   1: 123090.146 ops/s
Iteration   2: 127570.909 ops/s
Iteration   3: 128285.437 ops/s
Iteration   4: 116037.731 ops/s
Iteration   5: 128375.202 ops/s
Iteration   6: 115374.537 ops/s
Iteration   7: 128245.902 ops/s
Iteration   8: 121209.881 ops/s
Iteration   9: 123338.250 ops/s
Iteration  10: 122802.605 ops/s
Iteration  11: 123008.051 ops/s
Iteration  12: 126981.356 ops/s
Iteration  13: 123709.216 ops/s
Iteration  14: 126350.875 ops/s
Iteration  15: 124144.309 ops/s
Iteration  16: 121692.598 ops/s
Iteration  17: 124091.187 ops/s
Iteration  18: 121295.590 ops/s
Iteration  19: 121812.744 ops/s
Iteration  20: 123529.912 ops/s
Iteration  21: 126846.347 ops/s
Iteration  22: 123328.403 ops/s
Iteration  23: 123294.738 ops/s
Iteration  24: 128278.338 ops/s
Iteration  25: 122145.591 ops/s
Iteration  26: 128855.551 ops/s
Iteration  27: 128124.370 ops/s
Iteration  28: 120451.289 ops/s
Iteration  29: 129008.729 ops/s
Iteration  30: 120994.511 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_270._Benchmark.benchmark_Cluster_270":
  124075.810 ±(99.9%) 2378.837 ops/s [Average]
  (min, avg, max) = (115374.537, 124075.810, 129008.729), stdev = 3560.531
  CI (99.9%): [121696.974, 126454.647] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_270._Benchmark.benchmark_Cluster_270  thrpt   30  124075.810 ± 2378.837  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_271._Benchmark.benchmark_Cluster_271$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_271._Benchmark.benchmark_Cluster_271

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1933.621 ops/s
# Warmup Iteration   2: 24097.881 ops/s
# Warmup Iteration   3: 30493.372 ops/s
# Warmup Iteration   4: 34669.481 ops/s
# Warmup Iteration   5: 40891.069 ops/s
# Warmup Iteration   6: 66639.232 ops/s
# Warmup Iteration   7: 80871.041 ops/s
# Warmup Iteration   8: 75811.768 ops/s
# Warmup Iteration   9: 78985.637 ops/s
# Warmup Iteration  10: 75008.138 ops/s
# Warmup Iteration  11: 76230.383 ops/s
# Warmup Iteration  12: 78034.200 ops/s
# Warmup Iteration  13: 75312.797 ops/s
# Warmup Iteration  14: 79568.612 ops/s
# Warmup Iteration  15: 75233.916 ops/s
# Warmup Iteration  16: 78097.129 ops/s
# Warmup Iteration  17: 78625.646 ops/s
# Warmup Iteration  18: 80424.301 ops/s
# Warmup Iteration  19: 81888.320 ops/s
# Warmup Iteration  20: 79963.296 ops/s
# Warmup Iteration  21: 76027.029 ops/s
# Warmup Iteration  22: 79351.187 ops/s
# Warmup Iteration  23: 76713.562 ops/s
# Warmup Iteration  24: 80612.319 ops/s
# Warmup Iteration  25: 76790.178 ops/s
# Warmup Iteration  26: 80561.282 ops/s
# Warmup Iteration  27: 77897.083 ops/s
# Warmup Iteration  28: 79241.718 ops/s
# Warmup Iteration  29: 62024.708 ops/s
# Warmup Iteration  30: 79826.687 ops/s
Iteration   1: 80722.218 ops/s
Iteration   2: 76203.458 ops/s
Iteration   3: 81520.650 ops/s
Iteration   4: 78918.375 ops/s
Iteration   5: 77018.136 ops/s
Iteration   6: 78861.149 ops/s
Iteration   7: 81217.695 ops/s
Iteration   8: 76647.054 ops/s
Iteration   9: 80844.311 ops/s
Iteration  10: 78135.905 ops/s
Iteration  11: 78401.954 ops/s
Iteration  12: 80826.910 ops/s
Iteration  13: 75880.903 ops/s
Iteration  14: 80467.911 ops/s
Iteration  15: 76709.964 ops/s
Iteration  16: 79055.642 ops/s
Iteration  17: 81394.033 ops/s
Iteration  18: 78318.148 ops/s
Iteration  19: 82360.524 ops/s
Iteration  20: 77063.536 ops/s
Iteration  21: 81206.078 ops/s
Iteration  22: 76495.724 ops/s
Iteration  23: 77485.933 ops/s
Iteration  24: 81586.002 ops/s
Iteration  25: 78966.913 ops/s
Iteration  26: 81933.973 ops/s
Iteration  27: 78238.345 ops/s
Iteration  28: 79660.717 ops/s
Iteration  29: 80129.609 ops/s
Iteration  30: 78733.537 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_271._Benchmark.benchmark_Cluster_271":
  79166.844 ±(99.9%) 1289.434 ops/s [Average]
  (min, avg, max) = (75880.903, 79166.844, 82360.524), stdev = 1929.964
  CI (99.9%): [77877.410, 80456.278] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_271._Benchmark.benchmark_Cluster_271  thrpt   30  79166.844 ± 1289.434  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_272._Benchmark.benchmark_Cluster_272$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_272._Benchmark.benchmark_Cluster_272

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11039.384 ops/s
# Warmup Iteration   2: 34955.434 ops/s
# Warmup Iteration   3: 61824.089 ops/s
# Warmup Iteration   4: 96019.073 ops/s
# Warmup Iteration   5: 101703.321 ops/s
# Warmup Iteration   6: 100138.966 ops/s
# Warmup Iteration   7: 115970.788 ops/s
# Warmup Iteration   8: 114979.845 ops/s
# Warmup Iteration   9: 117999.326 ops/s
# Warmup Iteration  10: 113304.118 ops/s
# Warmup Iteration  11: 116922.037 ops/s
# Warmup Iteration  12: 113727.443 ops/s
# Warmup Iteration  13: 118471.519 ops/s
# Warmup Iteration  14: 114912.682 ops/s
# Warmup Iteration  15: 116575.666 ops/s
# Warmup Iteration  16: 119261.539 ops/s
# Warmup Iteration  17: 115204.511 ops/s
# Warmup Iteration  18: 124529.069 ops/s
# Warmup Iteration  19: 120235.023 ops/s
# Warmup Iteration  20: 122734.267 ops/s
# Warmup Iteration  21: 117190.105 ops/s
# Warmup Iteration  22: 122509.378 ops/s
# Warmup Iteration  23: 119245.133 ops/s
# Warmup Iteration  24: 117686.391 ops/s
# Warmup Iteration  25: 122486.176 ops/s
# Warmup Iteration  26: 117790.637 ops/s
# Warmup Iteration  27: 122278.276 ops/s
# Warmup Iteration  28: 119993.565 ops/s
# Warmup Iteration  29: 117526.985 ops/s
# Warmup Iteration  30: 122412.864 ops/s
Iteration   1: 119875.274 ops/s
Iteration   2: 123313.329 ops/s
Iteration   3: 116959.406 ops/s
Iteration   4: 114663.332 ops/s
Iteration   5: 124642.145 ops/s
Iteration   6: 120814.717 ops/s
Iteration   7: 116000.357 ops/s
Iteration   8: 120055.634 ops/s
Iteration   9: 116359.101 ops/s
Iteration  10: 119190.538 ops/s
Iteration  11: 114411.473 ops/s
Iteration  12: 121217.373 ops/s
Iteration  13: 121694.158 ops/s
Iteration  14: 117817.248 ops/s
Iteration  15: 122747.049 ops/s
Iteration  16: 118527.955 ops/s
Iteration  17: 120994.930 ops/s
Iteration  18: 122492.071 ops/s
Iteration  19: 111956.210 ops/s
Iteration  20: 121580.688 ops/s
Iteration  21: 119691.060 ops/s
Iteration  22: 121991.620 ops/s
Iteration  23: 123697.931 ops/s
Iteration  24: 116127.065 ops/s
Iteration  25: 123351.891 ops/s
Iteration  26: 119599.466 ops/s
Iteration  27: 123755.421 ops/s
Iteration  28: 122124.597 ops/s
Iteration  29: 125283.795 ops/s
Iteration  30: 116985.770 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_272._Benchmark.benchmark_Cluster_272":
  119930.720 ±(99.9%) 2236.332 ops/s [Average]
  (min, avg, max) = (111956.210, 119930.720, 125283.795), stdev = 3347.236
  CI (99.9%): [117694.388, 122167.052] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_272._Benchmark.benchmark_Cluster_272  thrpt   30  119930.720 ± 2236.332  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_273._Benchmark.benchmark_Cluster_273$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_273._Benchmark.benchmark_Cluster_273

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4600.567 ops/s
# Warmup Iteration   2: 27624.289 ops/s
# Warmup Iteration   3: 25678.118 ops/s
# Warmup Iteration   4: 51729.768 ops/s
# Warmup Iteration   5: 82673.963 ops/s
# Warmup Iteration   6: 92045.655 ops/s
# Warmup Iteration   7: 90661.894 ops/s
# Warmup Iteration   8: 97243.921 ops/s
# Warmup Iteration   9: 100049.833 ops/s
# Warmup Iteration  10: 97368.087 ops/s
# Warmup Iteration  11: 99240.439 ops/s
# Warmup Iteration  12: 100100.124 ops/s
# Warmup Iteration  13: 96520.086 ops/s
# Warmup Iteration  14: 101500.318 ops/s
# Warmup Iteration  15: 95927.118 ops/s
# Warmup Iteration  16: 99474.255 ops/s
# Warmup Iteration  17: 105611.633 ops/s
# Warmup Iteration  18: 102210.069 ops/s
# Warmup Iteration  19: 96830.148 ops/s
# Warmup Iteration  20: 106112.323 ops/s
# Warmup Iteration  21: 97678.620 ops/s
# Warmup Iteration  22: 102735.692 ops/s
# Warmup Iteration  23: 83473.724 ops/s
# Warmup Iteration  24: 97669.292 ops/s
# Warmup Iteration  25: 104097.470 ops/s
# Warmup Iteration  26: 102026.221 ops/s
# Warmup Iteration  27: 99713.766 ops/s
# Warmup Iteration  28: 104099.896 ops/s
# Warmup Iteration  29: 99599.795 ops/s
# Warmup Iteration  30: 102842.706 ops/s
Iteration   1: 104034.253 ops/s
Iteration   2: 105830.257 ops/s
Iteration   3: 102671.246 ops/s
Iteration   4: 102210.718 ops/s
Iteration   5: 103172.726 ops/s
Iteration   6: 101490.439 ops/s
Iteration   7: 99088.589 ops/s
Iteration   8: 106500.320 ops/s
Iteration   9: 98583.387 ops/s
Iteration  10: 106294.629 ops/s
Iteration  11: 104373.957 ops/s
Iteration  12: 100444.199 ops/s
Iteration  13: 99459.467 ops/s
Iteration  14: 101915.247 ops/s
Iteration  15: 105486.361 ops/s
Iteration  16: 101798.798 ops/s
Iteration  17: 99864.818 ops/s
Iteration  18: 103529.095 ops/s
Iteration  19: 102605.477 ops/s
Iteration  20: 104768.966 ops/s
Iteration  21: 100162.657 ops/s
Iteration  22: 101923.775 ops/s
Iteration  23: 102677.456 ops/s
Iteration  24: 100520.653 ops/s
Iteration  25: 102625.113 ops/s
Iteration  26: 102484.562 ops/s
Iteration  27: 98524.140 ops/s
Iteration  28: 102406.352 ops/s
Iteration  29: 97189.652 ops/s
Iteration  30: 102001.843 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_273._Benchmark.benchmark_Cluster_273":
  102154.638 ±(99.9%) 1582.758 ops/s [Average]
  (min, avg, max) = (97189.652, 102154.638, 106500.320), stdev = 2368.998
  CI (99.9%): [100571.880, 103737.397] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_273._Benchmark.benchmark_Cluster_273  thrpt   30  102154.638 ± 1582.758  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_274._Benchmark.benchmark_Cluster_274$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_274._Benchmark.benchmark_Cluster_274

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6536.726 ops/s
# Warmup Iteration   2: 33730.552 ops/s
# Warmup Iteration   3: 86372.118 ops/s
# Warmup Iteration   4: 99993.731 ops/s
# Warmup Iteration   5: 111610.363 ops/s
# Warmup Iteration   6: 109571.644 ops/s
# Warmup Iteration   7: 117751.196 ops/s
# Warmup Iteration   8: 124974.863 ops/s
# Warmup Iteration   9: 124118.125 ops/s
# Warmup Iteration  10: 117791.828 ops/s
# Warmup Iteration  11: 117718.455 ops/s
# Warmup Iteration  12: 126539.426 ops/s
# Warmup Iteration  13: 114233.994 ops/s
# Warmup Iteration  14: 124289.906 ops/s
# Warmup Iteration  15: 118515.536 ops/s
# Warmup Iteration  16: 119587.508 ops/s
# Warmup Iteration  17: 130423.007 ops/s
# Warmup Iteration  18: 122016.895 ops/s
# Warmup Iteration  19: 130891.048 ops/s
# Warmup Iteration  20: 123573.957 ops/s
# Warmup Iteration  21: 126641.091 ops/s
# Warmup Iteration  22: 130036.614 ops/s
# Warmup Iteration  23: 124523.713 ops/s
# Warmup Iteration  24: 130803.784 ops/s
# Warmup Iteration  25: 124997.474 ops/s
# Warmup Iteration  26: 129424.791 ops/s
# Warmup Iteration  27: 124453.938 ops/s
# Warmup Iteration  28: 128530.293 ops/s
# Warmup Iteration  29: 125029.100 ops/s
# Warmup Iteration  30: 124161.058 ops/s
Iteration   1: 129291.144 ops/s
Iteration   2: 129336.265 ops/s
Iteration   3: 122342.050 ops/s
Iteration   4: 127632.846 ops/s
Iteration   5: 130297.104 ops/s
Iteration   6: 124387.094 ops/s
Iteration   7: 129855.622 ops/s
Iteration   8: 121904.869 ops/s
Iteration   9: 126296.462 ops/s
Iteration  10: 128251.867 ops/s
Iteration  11: 122291.923 ops/s
Iteration  12: 128062.520 ops/s
Iteration  13: 102343.465 ops/s
Iteration  14: 125743.893 ops/s
Iteration  15: 128223.690 ops/s
Iteration  16: 125782.239 ops/s
Iteration  17: 125487.438 ops/s
Iteration  18: 128405.461 ops/s
Iteration  19: 123004.209 ops/s
Iteration  20: 130532.746 ops/s
Iteration  21: 124407.070 ops/s
Iteration  22: 124633.052 ops/s
Iteration  23: 127919.139 ops/s
Iteration  24: 129133.174 ops/s
Iteration  25: 130233.237 ops/s
Iteration  26: 131922.696 ops/s
Iteration  27: 124667.497 ops/s
Iteration  28: 130554.442 ops/s
Iteration  29: 127377.763 ops/s
Iteration  30: 125963.054 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_274._Benchmark.benchmark_Cluster_274":
  126209.468 ±(99.9%) 3526.907 ops/s [Average]
  (min, avg, max) = (102343.465, 126209.468, 131922.696), stdev = 5278.909
  CI (99.9%): [122682.561, 129736.375] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_274._Benchmark.benchmark_Cluster_274  thrpt   30  126209.468 ± 3526.907  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_275._Benchmark.benchmark_Cluster_275$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_275._Benchmark.benchmark_Cluster_275

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2082.278 ops/s
# Warmup Iteration   2: 23432.508 ops/s
# Warmup Iteration   3: 26049.958 ops/s
# Warmup Iteration   4: 29766.670 ops/s
# Warmup Iteration   5: 40801.712 ops/s
# Warmup Iteration   6: 37082.288 ops/s
# Warmup Iteration   7: 49395.506 ops/s
# Warmup Iteration   8: 38807.518 ops/s
# Warmup Iteration   9: 93995.465 ops/s
# Warmup Iteration  10: 105527.315 ops/s
# Warmup Iteration  11: 97773.881 ops/s
# Warmup Iteration  12: 101559.588 ops/s
# Warmup Iteration  13: 98235.476 ops/s
# Warmup Iteration  14: 101895.005 ops/s
# Warmup Iteration  15: 100887.397 ops/s
# Warmup Iteration  16: 100354.438 ops/s
# Warmup Iteration  17: 106006.710 ops/s
# Warmup Iteration  18: 103701.121 ops/s
# Warmup Iteration  19: 95970.810 ops/s
# Warmup Iteration  20: 100466.571 ops/s
# Warmup Iteration  21: 100791.882 ops/s
# Warmup Iteration  22: 103922.714 ops/s
# Warmup Iteration  23: 106062.231 ops/s
# Warmup Iteration  24: 104715.481 ops/s
# Warmup Iteration  25: 108274.745 ops/s
# Warmup Iteration  26: 101802.167 ops/s
# Warmup Iteration  27: 105409.086 ops/s
# Warmup Iteration  28: 106393.651 ops/s
# Warmup Iteration  29: 102347.365 ops/s
# Warmup Iteration  30: 106702.780 ops/s
Iteration   1: 103228.556 ops/s
Iteration   2: 102887.328 ops/s
Iteration   3: 108706.850 ops/s
Iteration   4: 102763.520 ops/s
Iteration   5: 105321.241 ops/s
Iteration   6: 109711.040 ops/s
Iteration   7: 101326.220 ops/s
Iteration   8: 107155.434 ops/s
Iteration   9: 104137.134 ops/s
Iteration  10: 99205.043 ops/s
Iteration  11: 106153.117 ops/s
Iteration  12: 103238.645 ops/s
Iteration  13: 108085.938 ops/s
Iteration  14: 105190.820 ops/s
Iteration  15: 106230.405 ops/s
Iteration  16: 107590.064 ops/s
Iteration  17: 100216.456 ops/s
Iteration  18: 106045.720 ops/s
Iteration  19: 104036.231 ops/s
Iteration  20: 107909.329 ops/s
Iteration  21: 106941.348 ops/s
Iteration  22: 102416.553 ops/s
Iteration  23: 105369.987 ops/s
Iteration  24: 103417.841 ops/s
Iteration  25: 105219.953 ops/s
Iteration  26: 107605.011 ops/s
Iteration  27: 98743.113 ops/s
Iteration  28: 105304.509 ops/s
Iteration  29: 101560.516 ops/s
Iteration  30: 102171.645 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_275._Benchmark.benchmark_Cluster_275":
  104596.319 ±(99.9%) 1884.783 ops/s [Average]
  (min, avg, max) = (98743.113, 104596.319, 109711.040), stdev = 2821.055
  CI (99.9%): [102711.536, 106481.102] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_275._Benchmark.benchmark_Cluster_275  thrpt   30  104596.319 ± 1884.783  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_276._Benchmark.benchmark_Cluster_276$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_276._Benchmark.benchmark_Cluster_276

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8532.752 ops/s
# Warmup Iteration   2: 38526.719 ops/s
# Warmup Iteration   3: 84811.882 ops/s
# Warmup Iteration   4: 78811.311 ops/s
# Warmup Iteration   5: 98080.711 ops/s
# Warmup Iteration   6: 97082.080 ops/s
# Warmup Iteration   7: 93546.894 ops/s
# Warmup Iteration   8: 100026.844 ops/s
# Warmup Iteration   9: 96679.719 ops/s
# Warmup Iteration  10: 97559.604 ops/s
# Warmup Iteration  11: 98161.657 ops/s
# Warmup Iteration  12: 87449.265 ops/s
# Warmup Iteration  13: 100168.292 ops/s
# Warmup Iteration  14: 83024.385 ops/s
# Warmup Iteration  15: 101242.063 ops/s
# Warmup Iteration  16: 100938.568 ops/s
# Warmup Iteration  17: 95002.269 ops/s
# Warmup Iteration  18: 99521.947 ops/s
# Warmup Iteration  19: 102760.294 ops/s
# Warmup Iteration  20: 96268.595 ops/s
# Warmup Iteration  21: 99398.269 ops/s
# Warmup Iteration  22: 102593.685 ops/s
# Warmup Iteration  23: 96618.355 ops/s
# Warmup Iteration  24: 96698.256 ops/s
# Warmup Iteration  25: 100710.799 ops/s
# Warmup Iteration  26: 94099.920 ops/s
# Warmup Iteration  27: 96385.614 ops/s
# Warmup Iteration  28: 101483.582 ops/s
# Warmup Iteration  29: 98040.613 ops/s
# Warmup Iteration  30: 99602.671 ops/s
Iteration   1: 97866.226 ops/s
Iteration   2: 96106.310 ops/s
Iteration   3: 102840.600 ops/s
Iteration   4: 99134.126 ops/s
Iteration   5: 95586.696 ops/s
Iteration   6: 101039.602 ops/s
Iteration   7: 96240.413 ops/s
Iteration   8: 98462.460 ops/s
Iteration   9: 98864.137 ops/s
Iteration  10: 100005.401 ops/s
Iteration  11: 99329.504 ops/s
Iteration  12: 98230.002 ops/s
Iteration  13: 102357.707 ops/s
Iteration  14: 95748.491 ops/s
Iteration  15: 98393.018 ops/s
Iteration  16: 99512.960 ops/s
Iteration  17: 96030.444 ops/s
Iteration  18: 103157.416 ops/s
Iteration  19: 102979.727 ops/s
Iteration  20: 96720.919 ops/s
Iteration  21: 101624.587 ops/s
Iteration  22: 97662.033 ops/s
Iteration  23: 101556.914 ops/s
Iteration  24: 98415.834 ops/s
Iteration  25: 101464.061 ops/s
Iteration  26: 95434.348 ops/s
Iteration  27: 98094.773 ops/s
Iteration  28: 102858.967 ops/s
Iteration  29: 95624.751 ops/s
Iteration  30: 101948.511 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_276._Benchmark.benchmark_Cluster_276":
  99109.698 ±(99.9%) 1706.812 ops/s [Average]
  (min, avg, max) = (95434.348, 99109.698, 103157.416), stdev = 2554.677
  CI (99.9%): [97402.886, 100816.511] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_276._Benchmark.benchmark_Cluster_276  thrpt   30  99109.698 ± 1706.812  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_277._Benchmark.benchmark_Cluster_277$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_277._Benchmark.benchmark_Cluster_277

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2922.743 ops/s
# Warmup Iteration   2: 17149.185 ops/s
# Warmup Iteration   3: 23176.889 ops/s
# Warmup Iteration   4: 28787.041 ops/s
# Warmup Iteration   5: 38507.349 ops/s
# Warmup Iteration   6: 45034.736 ops/s
# Warmup Iteration   7: 84383.180 ops/s
# Warmup Iteration   8: 100202.415 ops/s
# Warmup Iteration   9: 103900.811 ops/s
# Warmup Iteration  10: 99191.855 ops/s
# Warmup Iteration  11: 98437.934 ops/s
# Warmup Iteration  12: 106728.770 ops/s
# Warmup Iteration  13: 97549.486 ops/s
# Warmup Iteration  14: 104477.428 ops/s
# Warmup Iteration  15: 99479.057 ops/s
# Warmup Iteration  16: 100870.385 ops/s
# Warmup Iteration  17: 99433.393 ops/s
# Warmup Iteration  18: 98981.571 ops/s
# Warmup Iteration  19: 102800.172 ops/s
# Warmup Iteration  20: 101212.274 ops/s
# Warmup Iteration  21: 104839.097 ops/s
# Warmup Iteration  22: 96708.237 ops/s
# Warmup Iteration  23: 105501.159 ops/s
# Warmup Iteration  24: 99872.269 ops/s
# Warmup Iteration  25: 97414.428 ops/s
# Warmup Iteration  26: 104140.882 ops/s
# Warmup Iteration  27: 100730.817 ops/s
# Warmup Iteration  28: 106022.243 ops/s
# Warmup Iteration  29: 100741.414 ops/s
# Warmup Iteration  30: 103773.332 ops/s
Iteration   1: 103745.689 ops/s
Iteration   2: 100185.157 ops/s
Iteration   3: 106611.955 ops/s
Iteration   4: 105044.899 ops/s
Iteration   5: 98619.337 ops/s
Iteration   6: 104611.905 ops/s
Iteration   7: 100172.487 ops/s
Iteration   8: 101331.612 ops/s
Iteration   9: 100247.827 ops/s
Iteration  10: 99330.278 ops/s
Iteration  11: 104248.572 ops/s
Iteration  12: 100086.699 ops/s
Iteration  13: 105746.485 ops/s
Iteration  14: 100202.417 ops/s
Iteration  15: 98632.925 ops/s
Iteration  16: 105166.659 ops/s
Iteration  17: 101918.508 ops/s
Iteration  18: 105057.020 ops/s
Iteration  19: 100176.660 ops/s
Iteration  20: 103609.460 ops/s
Iteration  21: 102955.258 ops/s
Iteration  22: 104001.483 ops/s
Iteration  23: 100952.502 ops/s
Iteration  24: 101538.005 ops/s
Iteration  25: 105871.881 ops/s
Iteration  26: 101672.229 ops/s
Iteration  27: 102151.012 ops/s
Iteration  28: 101433.376 ops/s
Iteration  29: 104501.252 ops/s
Iteration  30: 100864.983 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_277._Benchmark.benchmark_Cluster_277":
  102356.285 ±(99.9%) 1555.239 ops/s [Average]
  (min, avg, max) = (98619.337, 102356.285, 106611.955), stdev = 2327.808
  CI (99.9%): [100801.046, 103911.523] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_277._Benchmark.benchmark_Cluster_277  thrpt   30  102356.285 ± 1555.239  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_278._Benchmark.benchmark_Cluster_278$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_278._Benchmark.benchmark_Cluster_278

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2117.307 ops/s
# Warmup Iteration   2: 15285.709 ops/s
# Warmup Iteration   3: 22484.236 ops/s
# Warmup Iteration   4: 20451.596 ops/s
# Warmup Iteration   5: 30919.676 ops/s
# Warmup Iteration   6: 32338.249 ops/s
# Warmup Iteration   7: 36717.067 ops/s
# Warmup Iteration   8: 44869.522 ops/s
# Warmup Iteration   9: 89255.726 ops/s
# Warmup Iteration  10: 81021.498 ops/s
# Warmup Iteration  11: 81036.871 ops/s
# Warmup Iteration  12: 91176.639 ops/s
# Warmup Iteration  13: 89947.931 ops/s
# Warmup Iteration  14: 91942.886 ops/s
# Warmup Iteration  15: 89850.445 ops/s
# Warmup Iteration  16: 89845.554 ops/s
# Warmup Iteration  17: 89864.009 ops/s
# Warmup Iteration  18: 93277.777 ops/s
# Warmup Iteration  19: 92324.807 ops/s
# Warmup Iteration  20: 90045.305 ops/s
# Warmup Iteration  21: 93279.960 ops/s
# Warmup Iteration  22: 88690.040 ops/s
# Warmup Iteration  23: 93099.380 ops/s
# Warmup Iteration  24: 93964.092 ops/s
# Warmup Iteration  25: 88226.552 ops/s
# Warmup Iteration  26: 93085.409 ops/s
# Warmup Iteration  27: 92203.463 ops/s
# Warmup Iteration  28: 91499.866 ops/s
# Warmup Iteration  29: 95264.463 ops/s
# Warmup Iteration  30: 88264.319 ops/s
Iteration   1: 90969.478 ops/s
Iteration   2: 92400.012 ops/s
Iteration   3: 89830.862 ops/s
Iteration   4: 92166.010 ops/s
Iteration   5: 88575.463 ops/s
Iteration   6: 94758.336 ops/s
Iteration   7: 94238.020 ops/s
Iteration   8: 89289.815 ops/s
Iteration   9: 95902.400 ops/s
Iteration  10: 88564.300 ops/s
Iteration  11: 94838.774 ops/s
Iteration  12: 94049.117 ops/s
Iteration  13: 89350.663 ops/s
Iteration  14: 90310.871 ops/s
Iteration  15: 93255.856 ops/s
Iteration  16: 93389.270 ops/s
Iteration  17: 83970.669 ops/s
Iteration  18: 95269.056 ops/s
Iteration  19: 86626.610 ops/s
Iteration  20: 93841.121 ops/s
Iteration  21: 91079.811 ops/s
Iteration  22: 92462.653 ops/s
Iteration  23: 94474.110 ops/s
Iteration  24: 93534.162 ops/s
Iteration  25: 89275.065 ops/s
Iteration  26: 91547.817 ops/s
Iteration  27: 95174.748 ops/s
Iteration  28: 96353.096 ops/s
Iteration  29: 92919.278 ops/s
Iteration  30: 89450.327 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_278._Benchmark.benchmark_Cluster_278":
  91928.926 ±(99.9%) 1966.045 ops/s [Average]
  (min, avg, max) = (83970.669, 91928.926, 96353.096), stdev = 2942.684
  CI (99.9%): [89962.881, 93894.971] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_278._Benchmark.benchmark_Cluster_278  thrpt   30  91928.926 ± 1966.045  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_279._Benchmark.benchmark_Cluster_279$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_279._Benchmark.benchmark_Cluster_279

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3115.144 ops/s
# Warmup Iteration   2: 18508.162 ops/s
# Warmup Iteration   3: 27286.261 ops/s
# Warmup Iteration   4: 20720.107 ops/s
# Warmup Iteration   5: 32992.736 ops/s
# Warmup Iteration   6: 37134.071 ops/s
# Warmup Iteration   7: 69365.918 ops/s
# Warmup Iteration   8: 87483.456 ops/s
# Warmup Iteration   9: 89322.308 ops/s
# Warmup Iteration  10: 88723.479 ops/s
# Warmup Iteration  11: 84041.011 ops/s
# Warmup Iteration  12: 88985.252 ops/s
# Warmup Iteration  13: 90263.756 ops/s
# Warmup Iteration  14: 86154.435 ops/s
# Warmup Iteration  15: 90196.493 ops/s
# Warmup Iteration  16: 85946.568 ops/s
# Warmup Iteration  17: 91908.038 ops/s
# Warmup Iteration  18: 93154.664 ops/s
# Warmup Iteration  19: 86899.496 ops/s
# Warmup Iteration  20: 93282.687 ops/s
# Warmup Iteration  21: 90511.799 ops/s
# Warmup Iteration  22: 91309.539 ops/s
# Warmup Iteration  23: 91585.737 ops/s
# Warmup Iteration  24: 91697.883 ops/s
# Warmup Iteration  25: 86266.254 ops/s
# Warmup Iteration  26: 92100.636 ops/s
# Warmup Iteration  27: 90035.745 ops/s
# Warmup Iteration  28: 90441.466 ops/s
# Warmup Iteration  29: 93904.228 ops/s
# Warmup Iteration  30: 91580.612 ops/s
Iteration   1: 87487.125 ops/s
Iteration   2: 93145.022 ops/s
Iteration   3: 90214.069 ops/s
Iteration   4: 90767.043 ops/s
Iteration   5: 91635.493 ops/s
Iteration   6: 87815.088 ops/s
Iteration   7: 91821.481 ops/s
Iteration   8: 93048.057 ops/s
Iteration   9: 90716.854 ops/s
Iteration  10: 92178.608 ops/s
Iteration  11: 89111.202 ops/s
Iteration  12: 92262.784 ops/s
Iteration  13: 89053.988 ops/s
Iteration  14: 89600.116 ops/s
Iteration  15: 89601.170 ops/s
Iteration  16: 91080.332 ops/s
Iteration  17: 92658.551 ops/s
Iteration  18: 90461.085 ops/s
Iteration  19: 89868.683 ops/s
Iteration  20: 90527.248 ops/s
Iteration  21: 92679.262 ops/s
Iteration  22: 88575.937 ops/s
Iteration  23: 93724.199 ops/s
Iteration  24: 86585.384 ops/s
Iteration  25: 89710.739 ops/s
Iteration  26: 89851.495 ops/s
Iteration  27: 89124.421 ops/s
Iteration  28: 92065.235 ops/s
Iteration  29: 87578.839 ops/s
Iteration  30: 95119.227 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_279._Benchmark.benchmark_Cluster_279":
  90602.291 ±(99.9%) 1353.867 ops/s [Average]
  (min, avg, max) = (86585.384, 90602.291, 95119.227), stdev = 2026.405
  CI (99.9%): [89248.424, 91956.159] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_279._Benchmark.benchmark_Cluster_279  thrpt   30  90602.291 ± 1353.867  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_28._Benchmark.benchmark_Cluster_28$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_28._Benchmark.benchmark_Cluster_28

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.563 ops/s
# Warmup Iteration   2: 2880.797 ops/s
# Warmup Iteration   3: 24011.081 ops/s
# Warmup Iteration   4: 28972.960 ops/s
# Warmup Iteration   5: 33795.730 ops/s
# Warmup Iteration   6: 42852.657 ops/s
# Warmup Iteration   7: 44292.405 ops/s
# Warmup Iteration   8: 100363.636 ops/s
# Warmup Iteration   9: 98749.928 ops/s
# Warmup Iteration  10: 109424.329 ops/s
# Warmup Iteration  11: 105356.760 ops/s
# Warmup Iteration  12: 109226.721 ops/s
# Warmup Iteration  13: 110415.562 ops/s
# Warmup Iteration  14: 98492.827 ops/s
# Warmup Iteration  15: 105169.545 ops/s
# Warmup Iteration  16: 108897.147 ops/s
# Warmup Iteration  17: 105117.157 ops/s
# Warmup Iteration  18: 112651.370 ops/s
# Warmup Iteration  19: 108436.841 ops/s
# Warmup Iteration  20: 108838.724 ops/s
# Warmup Iteration  21: 110101.931 ops/s
# Warmup Iteration  22: 109198.141 ops/s
# Warmup Iteration  23: 108314.251 ops/s
# Warmup Iteration  24: 103134.046 ops/s
# Warmup Iteration  25: 110830.878 ops/s
# Warmup Iteration  26: 107347.025 ops/s
# Warmup Iteration  27: 111337.147 ops/s
# Warmup Iteration  28: 108288.410 ops/s
# Warmup Iteration  29: 108692.801 ops/s
# Warmup Iteration  30: 112823.177 ops/s
Iteration   1: 105080.322 ops/s
Iteration   2: 111195.359 ops/s
Iteration   3: 109279.770 ops/s
Iteration   4: 109620.753 ops/s
Iteration   5: 113432.942 ops/s
Iteration   6: 105669.560 ops/s
Iteration   7: 112875.742 ops/s
Iteration   8: 108657.430 ops/s
Iteration   9: 110643.163 ops/s
Iteration  10: 107229.460 ops/s
Iteration  11: 109669.302 ops/s
Iteration  12: 111708.095 ops/s
Iteration  13: 103583.870 ops/s
Iteration  14: 108530.046 ops/s
Iteration  15: 111360.847 ops/s
Iteration  16: 107643.706 ops/s
Iteration  17: 109382.420 ops/s
Iteration  18: 114918.539 ops/s
Iteration  19: 107671.105 ops/s
Iteration  20: 110816.258 ops/s
Iteration  21: 109458.326 ops/s
Iteration  22: 108292.607 ops/s
Iteration  23: 110715.187 ops/s
Iteration  24: 106798.185 ops/s
Iteration  25: 113348.437 ops/s
Iteration  26: 105756.386 ops/s
Iteration  27: 112905.192 ops/s
Iteration  28: 109709.325 ops/s
Iteration  29: 107762.826 ops/s
Iteration  30: 112838.696 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_28._Benchmark.benchmark_Cluster_28":
  109551.795 ±(99.9%) 1832.516 ops/s [Average]
  (min, avg, max) = (103583.870, 109551.795, 114918.539), stdev = 2742.824
  CI (99.9%): [107719.279, 111384.312] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_28._Benchmark.benchmark_Cluster_28  thrpt   30  109551.795 ± 1832.516  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_280._Benchmark.benchmark_Cluster_280$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_280._Benchmark.benchmark_Cluster_280

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 831.396 ops/s
# Warmup Iteration   2: 7886.283 ops/s
# Warmup Iteration   3: 20427.033 ops/s
# Warmup Iteration   4: 25937.642 ops/s
# Warmup Iteration   5: 27537.508 ops/s
# Warmup Iteration   6: 26804.355 ops/s
# Warmup Iteration   7: 22475.597 ops/s
# Warmup Iteration   8: 38431.758 ops/s
# Warmup Iteration   9: 31501.890 ops/s
# Warmup Iteration  10: 76549.648 ops/s
# Warmup Iteration  11: 82250.676 ops/s
# Warmup Iteration  12: 84022.268 ops/s
# Warmup Iteration  13: 79526.969 ops/s
# Warmup Iteration  14: 82617.306 ops/s
# Warmup Iteration  15: 78225.306 ops/s
# Warmup Iteration  16: 82175.219 ops/s
# Warmup Iteration  17: 83746.309 ops/s
# Warmup Iteration  18: 82133.075 ops/s
# Warmup Iteration  19: 83252.735 ops/s
# Warmup Iteration  20: 80672.740 ops/s
# Warmup Iteration  21: 82708.499 ops/s
# Warmup Iteration  22: 85878.534 ops/s
# Warmup Iteration  23: 79170.662 ops/s
# Warmup Iteration  24: 83286.851 ops/s
# Warmup Iteration  25: 82109.270 ops/s
# Warmup Iteration  26: 85235.043 ops/s
# Warmup Iteration  27: 82454.941 ops/s
# Warmup Iteration  28: 81623.744 ops/s
# Warmup Iteration  29: 86067.054 ops/s
# Warmup Iteration  30: 79321.705 ops/s
Iteration   1: 86445.899 ops/s
Iteration   2: 81428.810 ops/s
Iteration   3: 81713.808 ops/s
Iteration   4: 85750.393 ops/s
Iteration   5: 81189.461 ops/s
Iteration   6: 82873.211 ops/s
Iteration   7: 86254.165 ops/s
Iteration   8: 79920.097 ops/s
Iteration   9: 86221.382 ops/s
Iteration  10: 80666.572 ops/s
Iteration  11: 83051.236 ops/s
Iteration  12: 84857.473 ops/s
Iteration  13: 83759.502 ops/s
Iteration  14: 81899.459 ops/s
Iteration  15: 81042.020 ops/s
Iteration  16: 85555.695 ops/s
Iteration  17: 80116.297 ops/s
Iteration  18: 84306.922 ops/s
Iteration  19: 80481.772 ops/s
Iteration  20: 81354.515 ops/s
Iteration  21: 79737.458 ops/s
Iteration  22: 80247.881 ops/s
Iteration  23: 84420.443 ops/s
Iteration  24: 81161.333 ops/s
Iteration  25: 81677.491 ops/s
Iteration  26: 82505.244 ops/s
Iteration  27: 69797.328 ops/s
Iteration  28: 83300.092 ops/s
Iteration  29: 80345.250 ops/s
Iteration  30: 84099.475 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_280._Benchmark.benchmark_Cluster_280":
  82206.023 ±(99.9%) 2101.026 ops/s [Average]
  (min, avg, max) = (69797.328, 82206.023, 86445.899), stdev = 3144.717
  CI (99.9%): [80104.997, 84307.049] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_280._Benchmark.benchmark_Cluster_280  thrpt   30  82206.023 ± 2101.026  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_281._Benchmark.benchmark_Cluster_281$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_281._Benchmark.benchmark_Cluster_281

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9191.777 ops/s
# Warmup Iteration   2: 44779.228 ops/s
# Warmup Iteration   3: 82604.567 ops/s
# Warmup Iteration   4: 142045.392 ops/s
# Warmup Iteration   5: 166438.827 ops/s
# Warmup Iteration   6: 157330.276 ops/s
# Warmup Iteration   7: 155343.844 ops/s
# Warmup Iteration   8: 168431.169 ops/s
# Warmup Iteration   9: 156996.853 ops/s
# Warmup Iteration  10: 161695.635 ops/s
# Warmup Iteration  11: 162381.125 ops/s
# Warmup Iteration  12: 162579.469 ops/s
# Warmup Iteration  13: 161673.782 ops/s
# Warmup Iteration  14: 160835.529 ops/s
# Warmup Iteration  15: 161801.386 ops/s
# Warmup Iteration  16: 156320.281 ops/s
# Warmup Iteration  17: 162803.226 ops/s
# Warmup Iteration  18: 169003.377 ops/s
# Warmup Iteration  19: 162326.575 ops/s
# Warmup Iteration  20: 169589.480 ops/s
# Warmup Iteration  21: 165450.578 ops/s
# Warmup Iteration  22: 161149.135 ops/s
# Warmup Iteration  23: 170823.743 ops/s
# Warmup Iteration  24: 157912.293 ops/s
# Warmup Iteration  25: 165723.052 ops/s
# Warmup Iteration  26: 174928.859 ops/s
# Warmup Iteration  27: 163097.001 ops/s
# Warmup Iteration  28: 165561.027 ops/s
# Warmup Iteration  29: 165708.064 ops/s
# Warmup Iteration  30: 166283.465 ops/s
Iteration   1: 163423.881 ops/s
Iteration   2: 162987.925 ops/s
Iteration   3: 162695.973 ops/s
Iteration   4: 157827.402 ops/s
Iteration   5: 173054.556 ops/s
Iteration   6: 164661.090 ops/s
Iteration   7: 168059.742 ops/s
Iteration   8: 165151.997 ops/s
Iteration   9: 166706.011 ops/s
Iteration  10: 160514.100 ops/s
Iteration  11: 167647.329 ops/s
Iteration  12: 170244.528 ops/s
Iteration  13: 164802.899 ops/s
Iteration  14: 168868.449 ops/s
Iteration  15: 168279.712 ops/s
Iteration  16: 166908.453 ops/s
Iteration  17: 167258.991 ops/s
Iteration  18: 171068.045 ops/s
Iteration  19: 162616.883 ops/s
Iteration  20: 175001.516 ops/s
Iteration  21: 160905.745 ops/s
Iteration  22: 172613.951 ops/s
Iteration  23: 166968.772 ops/s
Iteration  24: 163656.605 ops/s
Iteration  25: 173033.615 ops/s
Iteration  26: 162049.400 ops/s
Iteration  27: 174167.943 ops/s
Iteration  28: 164056.855 ops/s
Iteration  29: 161430.601 ops/s
Iteration  30: 173189.648 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_281._Benchmark.benchmark_Cluster_281":
  166661.754 ±(99.9%) 3058.701 ops/s [Average]
  (min, avg, max) = (157827.402, 166661.754, 175001.516), stdev = 4578.120
  CI (99.9%): [163603.053, 169720.455] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_281._Benchmark.benchmark_Cluster_281  thrpt   30  166661.754 ± 3058.701  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_282._Benchmark.benchmark_Cluster_282$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_282._Benchmark.benchmark_Cluster_282

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2149.357 ops/s
# Warmup Iteration   2: 17409.437 ops/s
# Warmup Iteration   3: 32732.223 ops/s
# Warmup Iteration   4: 33838.863 ops/s
# Warmup Iteration   5: 22778.676 ops/s
# Warmup Iteration   6: 25565.291 ops/s
# Warmup Iteration   7: 36256.901 ops/s
# Warmup Iteration   8: 28159.471 ops/s
# Warmup Iteration   9: 44171.743 ops/s
# Warmup Iteration  10: 78458.387 ops/s
# Warmup Iteration  11: 70919.527 ops/s
# Warmup Iteration  12: 98377.279 ops/s
# Warmup Iteration  13: 91882.594 ops/s
# Warmup Iteration  14: 93955.110 ops/s
# Warmup Iteration  15: 99953.192 ops/s
# Warmup Iteration  16: 97734.931 ops/s
# Warmup Iteration  17: 104469.045 ops/s
# Warmup Iteration  18: 97976.871 ops/s
# Warmup Iteration  19: 101649.937 ops/s
# Warmup Iteration  20: 103079.088 ops/s
# Warmup Iteration  21: 98427.731 ops/s
# Warmup Iteration  22: 103458.483 ops/s
# Warmup Iteration  23: 97780.795 ops/s
# Warmup Iteration  24: 97655.315 ops/s
# Warmup Iteration  25: 102220.362 ops/s
# Warmup Iteration  26: 98836.720 ops/s
# Warmup Iteration  27: 103568.590 ops/s
# Warmup Iteration  28: 96099.630 ops/s
# Warmup Iteration  29: 101490.465 ops/s
# Warmup Iteration  30: 103769.013 ops/s
Iteration   1: 100129.142 ops/s
Iteration   2: 102177.262 ops/s
Iteration   3: 101356.758 ops/s
Iteration   4: 96532.435 ops/s
Iteration   5: 104632.449 ops/s
Iteration   6: 97833.170 ops/s
Iteration   7: 106240.445 ops/s
Iteration   8: 101750.863 ops/s
Iteration   9: 100040.019 ops/s
Iteration  10: 104747.658 ops/s
Iteration  11: 104530.655 ops/s
Iteration  12: 97766.516 ops/s
Iteration  13: 106454.478 ops/s
Iteration  14: 98767.812 ops/s
Iteration  15: 99322.427 ops/s
Iteration  16: 102995.110 ops/s
Iteration  17: 100567.785 ops/s
Iteration  18: 98575.283 ops/s
Iteration  19: 103436.580 ops/s
Iteration  20: 100627.480 ops/s
Iteration  21: 77614.523 ops/s
Iteration  22: 103244.382 ops/s
Iteration  23: 97117.468 ops/s
Iteration  24: 105676.470 ops/s
Iteration  25: 102869.887 ops/s
Iteration  26: 97776.020 ops/s
Iteration  27: 103309.339 ops/s
Iteration  28: 99431.477 ops/s
Iteration  29: 101488.495 ops/s
Iteration  30: 101612.686 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_282._Benchmark.benchmark_Cluster_282":
  100620.836 ±(99.9%) 3446.886 ops/s [Average]
  (min, avg, max) = (77614.523, 100620.836, 106454.478), stdev = 5159.138
  CI (99.9%): [97173.949, 104067.722] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_282._Benchmark.benchmark_Cluster_282  thrpt   30  100620.836 ± 3446.886  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_283._Benchmark.benchmark_Cluster_283$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_283._Benchmark.benchmark_Cluster_283

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7019.520 ops/s
# Warmup Iteration   2: 34080.350 ops/s
# Warmup Iteration   3: 74472.169 ops/s
# Warmup Iteration   4: 92902.308 ops/s
# Warmup Iteration   5: 107971.680 ops/s
# Warmup Iteration   6: 102284.602 ops/s
# Warmup Iteration   7: 102785.167 ops/s
# Warmup Iteration   8: 106157.060 ops/s
# Warmup Iteration   9: 105800.809 ops/s
# Warmup Iteration  10: 105979.219 ops/s
# Warmup Iteration  11: 102189.123 ops/s
# Warmup Iteration  12: 103829.436 ops/s
# Warmup Iteration  13: 107241.487 ops/s
# Warmup Iteration  14: 99664.845 ops/s
# Warmup Iteration  15: 107608.168 ops/s
# Warmup Iteration  16: 104222.911 ops/s
# Warmup Iteration  17: 110369.281 ops/s
# Warmup Iteration  18: 114471.702 ops/s
# Warmup Iteration  19: 108603.776 ops/s
# Warmup Iteration  20: 110234.412 ops/s
# Warmup Iteration  21: 106313.960 ops/s
# Warmup Iteration  22: 111793.139 ops/s
# Warmup Iteration  23: 109751.756 ops/s
# Warmup Iteration  24: 108086.221 ops/s
# Warmup Iteration  25: 112829.949 ops/s
# Warmup Iteration  26: 101976.135 ops/s
# Warmup Iteration  27: 111945.884 ops/s
# Warmup Iteration  28: 109063.075 ops/s
# Warmup Iteration  29: 111244.658 ops/s
# Warmup Iteration  30: 110566.134 ops/s
Iteration   1: 110735.956 ops/s
Iteration   2: 109547.177 ops/s
Iteration   3: 114956.420 ops/s
Iteration   4: 108960.641 ops/s
Iteration   5: 110693.979 ops/s
Iteration   6: 106122.295 ops/s
Iteration   7: 115111.972 ops/s
Iteration   8: 106640.289 ops/s
Iteration   9: 111985.716 ops/s
Iteration  10: 109114.966 ops/s
Iteration  11: 107713.143 ops/s
Iteration  12: 115671.679 ops/s
Iteration  13: 107954.443 ops/s
Iteration  14: 113949.488 ops/s
Iteration  15: 111829.081 ops/s
Iteration  16: 109196.677 ops/s
Iteration  17: 106490.147 ops/s
Iteration  18: 107692.370 ops/s
Iteration  19: 111224.202 ops/s
Iteration  20: 112421.373 ops/s
Iteration  21: 106382.221 ops/s
Iteration  22: 110862.550 ops/s
Iteration  23: 106352.450 ops/s
Iteration  24: 112861.186 ops/s
Iteration  25: 112295.618 ops/s
Iteration  26: 110932.381 ops/s
Iteration  27: 111856.870 ops/s
Iteration  28: 111267.583 ops/s
Iteration  29: 108200.597 ops/s
Iteration  30: 111732.397 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_283._Benchmark.benchmark_Cluster_283":
  110358.529 ±(99.9%) 1836.566 ops/s [Average]
  (min, avg, max) = (106122.295, 110358.529, 115671.679), stdev = 2748.885
  CI (99.9%): [108521.963, 112195.095] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_283._Benchmark.benchmark_Cluster_283  thrpt   30  110358.529 ± 1836.566  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_284._Benchmark.benchmark_Cluster_284$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_284._Benchmark.benchmark_Cluster_284

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1513.621 ops/s
# Warmup Iteration   2: 7888.327 ops/s
# Warmup Iteration   3: 22869.136 ops/s
# Warmup Iteration   4: 28228.097 ops/s
# Warmup Iteration   5: 30957.104 ops/s
# Warmup Iteration   6: 29452.971 ops/s
# Warmup Iteration   7: 29192.296 ops/s
# Warmup Iteration   8: 20590.727 ops/s
# Warmup Iteration   9: 40889.665 ops/s
# Warmup Iteration  10: 63129.354 ops/s
# Warmup Iteration  11: 81086.816 ops/s
# Warmup Iteration  12: 83018.786 ops/s
# Warmup Iteration  13: 82474.404 ops/s
# Warmup Iteration  14: 85060.722 ops/s
# Warmup Iteration  15: 81101.494 ops/s
# Warmup Iteration  16: 86085.759 ops/s
# Warmup Iteration  17: 85082.782 ops/s
# Warmup Iteration  18: 83525.978 ops/s
# Warmup Iteration  19: 84920.020 ops/s
# Warmup Iteration  20: 85350.291 ops/s
# Warmup Iteration  21: 84113.447 ops/s
# Warmup Iteration  22: 88368.955 ops/s
# Warmup Iteration  23: 83187.731 ops/s
# Warmup Iteration  24: 80720.601 ops/s
# Warmup Iteration  25: 88608.106 ops/s
# Warmup Iteration  26: 82733.182 ops/s
# Warmup Iteration  27: 83787.769 ops/s
# Warmup Iteration  28: 87764.315 ops/s
# Warmup Iteration  29: 85790.076 ops/s
# Warmup Iteration  30: 85607.784 ops/s
Iteration   1: 88515.873 ops/s
Iteration   2: 84285.293 ops/s
Iteration   3: 86969.934 ops/s
Iteration   4: 86915.634 ops/s
Iteration   5: 85881.941 ops/s
Iteration   6: 83313.768 ops/s
Iteration   7: 88008.187 ops/s
Iteration   8: 89327.285 ops/s
Iteration   9: 84355.581 ops/s
Iteration  10: 87243.090 ops/s
Iteration  11: 85154.803 ops/s
Iteration  12: 88489.549 ops/s
Iteration  13: 89438.434 ops/s
Iteration  14: 81711.300 ops/s
Iteration  15: 69288.818 ops/s
Iteration  16: 88033.504 ops/s
Iteration  17: 83794.453 ops/s
Iteration  18: 87121.759 ops/s
Iteration  19: 82932.024 ops/s
Iteration  20: 89906.600 ops/s
Iteration  21: 83642.118 ops/s
Iteration  22: 85873.972 ops/s
Iteration  23: 86057.465 ops/s
Iteration  24: 89647.663 ops/s
Iteration  25: 85199.225 ops/s
Iteration  26: 84127.481 ops/s
Iteration  27: 87939.934 ops/s
Iteration  28: 85651.056 ops/s
Iteration  29: 84492.865 ops/s
Iteration  30: 90313.770 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_284._Benchmark.benchmark_Cluster_284":
  85787.779 ±(99.9%) 2588.783 ops/s [Average]
  (min, avg, max) = (69288.818, 85787.779, 90313.770), stdev = 3874.769
  CI (99.9%): [83198.996, 88376.562] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_284._Benchmark.benchmark_Cluster_284  thrpt   30  85787.779 ± 2588.783  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_285._Benchmark.benchmark_Cluster_285$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_285._Benchmark.benchmark_Cluster_285

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1887.562 ops/s
# Warmup Iteration   2: 11592.057 ops/s
# Warmup Iteration   3: 33033.070 ops/s
# Warmup Iteration   4: 25178.637 ops/s
# Warmup Iteration   5: 33597.074 ops/s
# Warmup Iteration   6: 33152.084 ops/s
# Warmup Iteration   7: 80333.778 ops/s
# Warmup Iteration   8: 90536.618 ops/s
# Warmup Iteration   9: 91728.487 ops/s
# Warmup Iteration  10: 95171.118 ops/s
# Warmup Iteration  11: 90758.304 ops/s
# Warmup Iteration  12: 95587.793 ops/s
# Warmup Iteration  13: 93773.961 ops/s
# Warmup Iteration  14: 99119.700 ops/s
# Warmup Iteration  15: 96217.549 ops/s
# Warmup Iteration  16: 96322.528 ops/s
# Warmup Iteration  17: 99202.672 ops/s
# Warmup Iteration  18: 98860.369 ops/s
# Warmup Iteration  19: 102669.772 ops/s
# Warmup Iteration  20: 100143.685 ops/s
# Warmup Iteration  21: 103847.160 ops/s
# Warmup Iteration  22: 97716.973 ops/s
# Warmup Iteration  23: 99689.322 ops/s
# Warmup Iteration  24: 96532.129 ops/s
# Warmup Iteration  25: 96451.645 ops/s
# Warmup Iteration  26: 103012.707 ops/s
# Warmup Iteration  27: 102223.373 ops/s
# Warmup Iteration  28: 97945.489 ops/s
# Warmup Iteration  29: 100388.349 ops/s
# Warmup Iteration  30: 100089.232 ops/s
Iteration   1: 105177.409 ops/s
Iteration   2: 96749.434 ops/s
Iteration   3: 101803.898 ops/s
Iteration   4: 101397.353 ops/s
Iteration   5: 97532.347 ops/s
Iteration   6: 103103.504 ops/s
Iteration   7: 98156.289 ops/s
Iteration   8: 103577.039 ops/s
Iteration   9: 97977.711 ops/s
Iteration  10: 99881.447 ops/s
Iteration  11: 102087.039 ops/s
Iteration  12: 99136.035 ops/s
Iteration  13: 103389.870 ops/s
Iteration  14: 100695.616 ops/s
Iteration  15: 98876.904 ops/s
Iteration  16: 100543.531 ops/s
Iteration  17: 100908.799 ops/s
Iteration  18: 98591.165 ops/s
Iteration  19: 100990.291 ops/s
Iteration  20: 98215.340 ops/s
Iteration  21: 101138.282 ops/s
Iteration  22: 101345.309 ops/s
Iteration  23: 99727.083 ops/s
Iteration  24: 102897.788 ops/s
Iteration  25: 98984.208 ops/s
Iteration  26: 106220.263 ops/s
Iteration  27: 97365.463 ops/s
Iteration  28: 100709.036 ops/s
Iteration  29: 101000.170 ops/s
Iteration  30: 101195.759 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_285._Benchmark.benchmark_Cluster_285":
  100645.813 ±(99.9%) 1533.954 ops/s [Average]
  (min, avg, max) = (96749.434, 100645.813, 106220.263), stdev = 2295.950
  CI (99.9%): [99111.859, 102179.767] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_285._Benchmark.benchmark_Cluster_285  thrpt   30  100645.813 ± 1533.954  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_286._Benchmark.benchmark_Cluster_286$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_286._Benchmark.benchmark_Cluster_286

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12745.590 ops/s
# Warmup Iteration   2: 33952.968 ops/s
# Warmup Iteration   3: 37842.464 ops/s
# Warmup Iteration   4: 30378.124 ops/s
# Warmup Iteration   5: 81065.399 ops/s
# Warmup Iteration   6: 99542.076 ops/s
# Warmup Iteration   7: 91864.598 ops/s
# Warmup Iteration   8: 110070.642 ops/s
# Warmup Iteration   9: 110824.532 ops/s
# Warmup Iteration  10: 105608.637 ops/s
# Warmup Iteration  11: 110012.711 ops/s
# Warmup Iteration  12: 114745.423 ops/s
# Warmup Iteration  13: 105131.347 ops/s
# Warmup Iteration  14: 112399.887 ops/s
# Warmup Iteration  15: 109051.032 ops/s
# Warmup Iteration  16: 109896.250 ops/s
# Warmup Iteration  17: 113504.933 ops/s
# Warmup Iteration  18: 114327.404 ops/s
# Warmup Iteration  19: 117943.135 ops/s
# Warmup Iteration  20: 110758.940 ops/s
# Warmup Iteration  21: 112334.202 ops/s
# Warmup Iteration  22: 116788.972 ops/s
# Warmup Iteration  23: 113937.082 ops/s
# Warmup Iteration  24: 113371.960 ops/s
# Warmup Iteration  25: 111905.133 ops/s
# Warmup Iteration  26: 116796.221 ops/s
# Warmup Iteration  27: 117013.265 ops/s
# Warmup Iteration  28: 111734.026 ops/s
# Warmup Iteration  29: 117471.528 ops/s
# Warmup Iteration  30: 113720.467 ops/s
Iteration   1: 111811.006 ops/s
Iteration   2: 116449.702 ops/s
Iteration   3: 116731.077 ops/s
Iteration   4: 111992.027 ops/s
Iteration   5: 115325.363 ops/s
Iteration   6: 113246.225 ops/s
Iteration   7: 112907.669 ops/s
Iteration   8: 116907.877 ops/s
Iteration   9: 91842.668 ops/s
Iteration  10: 117983.721 ops/s
Iteration  11: 110460.619 ops/s
Iteration  12: 117001.514 ops/s
Iteration  13: 114342.913 ops/s
Iteration  14: 111919.827 ops/s
Iteration  15: 112785.286 ops/s
Iteration  16: 118001.346 ops/s
Iteration  17: 109755.261 ops/s
Iteration  18: 118474.953 ops/s
Iteration  19: 118770.592 ops/s
Iteration  20: 110067.293 ops/s
Iteration  21: 118418.020 ops/s
Iteration  22: 114974.386 ops/s
Iteration  23: 111991.163 ops/s
Iteration  24: 116322.162 ops/s
Iteration  25: 110123.313 ops/s
Iteration  26: 116751.498 ops/s
Iteration  27: 108876.772 ops/s
Iteration  28: 111981.418 ops/s
Iteration  29: 111479.993 ops/s
Iteration  30: 113077.425 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_286._Benchmark.benchmark_Cluster_286":
  113359.103 ±(99.9%) 3371.538 ops/s [Average]
  (min, avg, max) = (91842.668, 113359.103, 118770.592), stdev = 5046.359
  CI (99.9%): [109987.565, 116730.641] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_286._Benchmark.benchmark_Cluster_286  thrpt   30  113359.103 ± 3371.538  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_287._Benchmark.benchmark_Cluster_287$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_287._Benchmark.benchmark_Cluster_287

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3406.842 ops/s
# Warmup Iteration   2: 32472.487 ops/s
# Warmup Iteration   3: 63868.432 ops/s
# Warmup Iteration   4: 111714.228 ops/s
# Warmup Iteration   5: 113313.200 ops/s
# Warmup Iteration   6: 119273.427 ops/s
# Warmup Iteration   7: 117571.121 ops/s
# Warmup Iteration   8: 110485.454 ops/s
# Warmup Iteration   9: 116854.306 ops/s
# Warmup Iteration  10: 114806.156 ops/s
# Warmup Iteration  11: 114304.171 ops/s
# Warmup Iteration  12: 114658.885 ops/s
# Warmup Iteration  13: 116471.617 ops/s
# Warmup Iteration  14: 118403.289 ops/s
# Warmup Iteration  15: 114882.180 ops/s
# Warmup Iteration  16: 114979.443 ops/s
# Warmup Iteration  17: 114052.792 ops/s
# Warmup Iteration  18: 122629.940 ops/s
# Warmup Iteration  19: 121402.631 ops/s
# Warmup Iteration  20: 128805.421 ops/s
# Warmup Iteration  21: 119833.482 ops/s
# Warmup Iteration  22: 120894.062 ops/s
# Warmup Iteration  23: 123707.384 ops/s
# Warmup Iteration  24: 118376.151 ops/s
# Warmup Iteration  25: 127909.061 ops/s
# Warmup Iteration  26: 120817.390 ops/s
# Warmup Iteration  27: 120371.970 ops/s
# Warmup Iteration  28: 126123.504 ops/s
# Warmup Iteration  29: 118670.269 ops/s
# Warmup Iteration  30: 126053.882 ops/s
Iteration   1: 119946.755 ops/s
Iteration   2: 122703.161 ops/s
Iteration   3: 120132.708 ops/s
Iteration   4: 122006.791 ops/s
Iteration   5: 124443.746 ops/s
Iteration   6: 117676.633 ops/s
Iteration   7: 128067.244 ops/s
Iteration   8: 120824.897 ops/s
Iteration   9: 123206.599 ops/s
Iteration  10: 120823.811 ops/s
Iteration  11: 122932.828 ops/s
Iteration  12: 127337.882 ops/s
Iteration  13: 124787.462 ops/s
Iteration  14: 120967.654 ops/s
Iteration  15: 121729.895 ops/s
Iteration  16: 126764.042 ops/s
Iteration  17: 119491.772 ops/s
Iteration  18: 126194.936 ops/s
Iteration  19: 121157.197 ops/s
Iteration  20: 121225.537 ops/s
Iteration  21: 122203.187 ops/s
Iteration  22: 123531.285 ops/s
Iteration  23: 126447.513 ops/s
Iteration  24: 124761.336 ops/s
Iteration  25: 119846.904 ops/s
Iteration  26: 121250.988 ops/s
Iteration  27: 126967.581 ops/s
Iteration  28: 118923.834 ops/s
Iteration  29: 127180.217 ops/s
Iteration  30: 122744.849 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_287._Benchmark.benchmark_Cluster_287":
  122875.975 ±(99.9%) 1896.036 ops/s [Average]
  (min, avg, max) = (117676.633, 122875.975, 128067.244), stdev = 2837.898
  CI (99.9%): [120979.939, 124772.011] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_287._Benchmark.benchmark_Cluster_287  thrpt   30  122875.975 ± 1896.036  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_288._Benchmark.benchmark_Cluster_288$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_288._Benchmark.benchmark_Cluster_288

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1305.993 ops/s
# Warmup Iteration   2: 19317.911 ops/s
# Warmup Iteration   3: 29896.671 ops/s
# Warmup Iteration   4: 27921.191 ops/s
# Warmup Iteration   5: 36408.900 ops/s
# Warmup Iteration   6: 44010.695 ops/s
# Warmup Iteration   7: 28284.543 ops/s
# Warmup Iteration   8: 38940.743 ops/s
# Warmup Iteration   9: 78973.992 ops/s
# Warmup Iteration  10: 72188.875 ops/s
# Warmup Iteration  11: 92520.949 ops/s
# Warmup Iteration  12: 103012.383 ops/s
# Warmup Iteration  13: 97044.389 ops/s
# Warmup Iteration  14: 84973.997 ops/s
# Warmup Iteration  15: 81140.963 ops/s
# Warmup Iteration  16: 88757.003 ops/s
# Warmup Iteration  17: 97122.710 ops/s
# Warmup Iteration  18: 90558.739 ops/s
# Warmup Iteration  19: 98146.836 ops/s
# Warmup Iteration  20: 105119.774 ops/s
# Warmup Iteration  21: 85549.684 ops/s
# Warmup Iteration  22: 95074.080 ops/s
# Warmup Iteration  23: 104905.423 ops/s
# Warmup Iteration  24: 89841.468 ops/s
# Warmup Iteration  25: 99740.006 ops/s
# Warmup Iteration  26: 95127.848 ops/s
# Warmup Iteration  27: 98935.434 ops/s
# Warmup Iteration  28: 82557.309 ops/s
# Warmup Iteration  29: 98879.782 ops/s
# Warmup Iteration  30: 95952.223 ops/s
Iteration   1: 105097.920 ops/s
Iteration   2: 79862.249 ops/s
Iteration   3: 76261.928 ops/s
Iteration   4: 101940.899 ops/s
Iteration   5: 95163.077 ops/s
Iteration   6: 97902.369 ops/s
Iteration   7: 85612.688 ops/s
Iteration   8: 94629.068 ops/s
Iteration   9: 96062.280 ops/s
Iteration  10: 95474.734 ops/s
Iteration  11: 89830.611 ops/s
Iteration  12: 86706.079 ops/s
Iteration  13: 105253.369 ops/s
Iteration  14: 101839.460 ops/s
Iteration  15: 87053.881 ops/s
Iteration  16: 95394.590 ops/s
Iteration  17: 103001.083 ops/s
Iteration  18: 93460.675 ops/s
Iteration  19: 88823.349 ops/s
Iteration  20: 92625.979 ops/s
Iteration  21: 102754.052 ops/s
Iteration  22: 94066.928 ops/s
Iteration  23: 102428.207 ops/s
Iteration  24: 82964.450 ops/s
Iteration  25: 92034.322 ops/s
Iteration  26: 96172.567 ops/s
Iteration  27: 92321.855 ops/s
Iteration  28: 101905.781 ops/s
Iteration  29: 81867.521 ops/s
Iteration  30: 91084.866 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_288._Benchmark.benchmark_Cluster_288":
  93653.228 ±(99.9%) 5128.578 ops/s [Average]
  (min, avg, max) = (76261.928, 93653.228, 105253.369), stdev = 7676.214
  CI (99.9%): [88524.650, 98781.806] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_288._Benchmark.benchmark_Cluster_288  thrpt   30  93653.228 ± 5128.578  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_289._Benchmark.benchmark_Cluster_289$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_289._Benchmark.benchmark_Cluster_289

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7638.875 ops/s
# Warmup Iteration   2: 35457.508 ops/s
# Warmup Iteration   3: 77941.546 ops/s
# Warmup Iteration   4: 84800.198 ops/s
# Warmup Iteration   5: 106053.520 ops/s
# Warmup Iteration   6: 103255.514 ops/s
# Warmup Iteration   7: 109334.068 ops/s
# Warmup Iteration   8: 108581.809 ops/s
# Warmup Iteration   9: 100662.590 ops/s
# Warmup Iteration  10: 105222.585 ops/s
# Warmup Iteration  11: 107097.234 ops/s
# Warmup Iteration  12: 105304.434 ops/s
# Warmup Iteration  13: 109396.152 ops/s
# Warmup Iteration  14: 104469.174 ops/s
# Warmup Iteration  15: 109353.302 ops/s
# Warmup Iteration  16: 104263.558 ops/s
# Warmup Iteration  17: 110837.877 ops/s
# Warmup Iteration  18: 112837.685 ops/s
# Warmup Iteration  19: 112940.272 ops/s
# Warmup Iteration  20: 109779.620 ops/s
# Warmup Iteration  21: 110527.004 ops/s
# Warmup Iteration  22: 112475.932 ops/s
# Warmup Iteration  23: 105571.123 ops/s
# Warmup Iteration  24: 107258.461 ops/s
# Warmup Iteration  25: 109133.326 ops/s
# Warmup Iteration  26: 114078.897 ops/s
# Warmup Iteration  27: 105879.370 ops/s
# Warmup Iteration  28: 112528.827 ops/s
# Warmup Iteration  29: 110282.790 ops/s
# Warmup Iteration  30: 111970.218 ops/s
Iteration   1: 106027.539 ops/s
Iteration   2: 112314.789 ops/s
Iteration   3: 105459.520 ops/s
Iteration   4: 110529.076 ops/s
Iteration   5: 112241.904 ops/s
Iteration   6: 107101.159 ops/s
Iteration   7: 112072.504 ops/s
Iteration   8: 109354.086 ops/s
Iteration   9: 112226.999 ops/s
Iteration  10: 105484.211 ops/s
Iteration  11: 113120.417 ops/s
Iteration  12: 107743.518 ops/s
Iteration  13: 112768.679 ops/s
Iteration  14: 114308.592 ops/s
Iteration  15: 106953.930 ops/s
Iteration  16: 111370.598 ops/s
Iteration  17: 111388.216 ops/s
Iteration  18: 105185.523 ops/s
Iteration  19: 107499.195 ops/s
Iteration  20: 110373.904 ops/s
Iteration  21: 116738.988 ops/s
Iteration  22: 112820.032 ops/s
Iteration  23: 110335.833 ops/s
Iteration  24: 110736.728 ops/s
Iteration  25: 109231.581 ops/s
Iteration  26: 110012.131 ops/s
Iteration  27: 114152.713 ops/s
Iteration  28: 105857.459 ops/s
Iteration  29: 113193.548 ops/s
Iteration  30: 113639.914 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_289._Benchmark.benchmark_Cluster_289":
  110341.443 ±(99.9%) 2069.375 ops/s [Average]
  (min, avg, max) = (105185.523, 110341.443, 116738.988), stdev = 3097.343
  CI (99.9%): [108272.068, 112410.817] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_289._Benchmark.benchmark_Cluster_289  thrpt   30  110341.443 ± 2069.375  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_29._Benchmark.benchmark_Cluster_29$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_29._Benchmark.benchmark_Cluster_29

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2198.604 ops/s
# Warmup Iteration   2: 19135.343 ops/s
# Warmup Iteration   3: 37101.133 ops/s
# Warmup Iteration   4: 66479.840 ops/s
# Warmup Iteration   5: 104251.132 ops/s
# Warmup Iteration   6: 113883.223 ops/s
# Warmup Iteration   7: 105591.090 ops/s
# Warmup Iteration   8: 108738.850 ops/s
# Warmup Iteration   9: 115813.677 ops/s
# Warmup Iteration  10: 112772.867 ops/s
# Warmup Iteration  11: 109826.491 ops/s
# Warmup Iteration  12: 118784.554 ops/s
# Warmup Iteration  13: 104089.241 ops/s
# Warmup Iteration  14: 118768.157 ops/s
# Warmup Iteration  15: 110637.440 ops/s
# Warmup Iteration  16: 116805.700 ops/s
# Warmup Iteration  17: 112194.602 ops/s
# Warmup Iteration  18: 111083.372 ops/s
# Warmup Iteration  19: 118528.258 ops/s
# Warmup Iteration  20: 106983.328 ops/s
# Warmup Iteration  21: 116590.754 ops/s
# Warmup Iteration  22: 120439.614 ops/s
# Warmup Iteration  23: 117467.028 ops/s
# Warmup Iteration  24: 115423.390 ops/s
# Warmup Iteration  25: 110883.168 ops/s
# Warmup Iteration  26: 103657.571 ops/s
# Warmup Iteration  27: 91562.008 ops/s
# Warmup Iteration  28: 112321.142 ops/s
# Warmup Iteration  29: 112890.051 ops/s
# Warmup Iteration  30: 117879.688 ops/s
Iteration   1: 111483.713 ops/s
Iteration   2: 116968.352 ops/s
Iteration   3: 112246.536 ops/s
Iteration   4: 115223.120 ops/s
Iteration   5: 121031.794 ops/s
Iteration   6: 109240.938 ops/s
Iteration   7: 118206.208 ops/s
Iteration   8: 113025.814 ops/s
Iteration   9: 113853.612 ops/s
Iteration  10: 117539.167 ops/s
Iteration  11: 113659.811 ops/s
Iteration  12: 118279.364 ops/s
Iteration  13: 110169.015 ops/s
Iteration  14: 118139.187 ops/s
Iteration  15: 118296.091 ops/s
Iteration  16: 111149.377 ops/s
Iteration  17: 116228.356 ops/s
Iteration  18: 116982.266 ops/s
Iteration  19: 118887.004 ops/s
Iteration  20: 111166.269 ops/s
Iteration  21: 115179.162 ops/s
Iteration  22: 112635.561 ops/s
Iteration  23: 116633.276 ops/s
Iteration  24: 113378.695 ops/s
Iteration  25: 114891.898 ops/s
Iteration  26: 118387.650 ops/s
Iteration  27: 113229.048 ops/s
Iteration  28: 116892.548 ops/s
Iteration  29: 115917.933 ops/s
Iteration  30: 113924.952 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_29._Benchmark.benchmark_Cluster_29":
  115094.891 ±(99.9%) 1972.954 ops/s [Average]
  (min, avg, max) = (109240.938, 115094.891, 121031.794), stdev = 2953.025
  CI (99.9%): [113121.936, 117067.845] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_29._Benchmark.benchmark_Cluster_29  thrpt   30  115094.891 ± 1972.954  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_290._Benchmark.benchmark_Cluster_290$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_290._Benchmark.benchmark_Cluster_290

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20172.455 ops/s
# Warmup Iteration   2: 77631.547 ops/s
# Warmup Iteration   3: 151428.544 ops/s
# Warmup Iteration   4: 180531.470 ops/s
# Warmup Iteration   5: 186258.766 ops/s
# Warmup Iteration   6: 185753.404 ops/s
# Warmup Iteration   7: 187909.773 ops/s
# Warmup Iteration   8: 165926.376 ops/s
# Warmup Iteration   9: 190775.504 ops/s
# Warmup Iteration  10: 176367.279 ops/s
# Warmup Iteration  11: 173821.288 ops/s
# Warmup Iteration  12: 190338.497 ops/s
# Warmup Iteration  13: 185030.666 ops/s
# Warmup Iteration  14: 194736.838 ops/s
# Warmup Iteration  15: 182792.476 ops/s
# Warmup Iteration  16: 191738.007 ops/s
# Warmup Iteration  17: 187391.586 ops/s
# Warmup Iteration  18: 187233.447 ops/s
# Warmup Iteration  19: 192063.176 ops/s
# Warmup Iteration  20: 188271.499 ops/s
# Warmup Iteration  21: 192204.804 ops/s
# Warmup Iteration  22: 188635.913 ops/s
# Warmup Iteration  23: 186257.712 ops/s
# Warmup Iteration  24: 190723.749 ops/s
# Warmup Iteration  25: 187354.103 ops/s
# Warmup Iteration  26: 187283.874 ops/s
# Warmup Iteration  27: 193868.511 ops/s
# Warmup Iteration  28: 191873.879 ops/s
# Warmup Iteration  29: 181068.027 ops/s
# Warmup Iteration  30: 192160.398 ops/s
Iteration   1: 188234.354 ops/s
Iteration   2: 191556.552 ops/s
Iteration   3: 184561.864 ops/s
Iteration   4: 196925.607 ops/s
Iteration   5: 192109.154 ops/s
Iteration   6: 195202.028 ops/s
Iteration   7: 185726.719 ops/s
Iteration   8: 195032.886 ops/s
Iteration   9: 181651.518 ops/s
Iteration  10: 193550.123 ops/s
Iteration  11: 186339.116 ops/s
Iteration  12: 190875.591 ops/s
Iteration  13: 185398.480 ops/s
Iteration  14: 187323.119 ops/s
Iteration  15: 191809.689 ops/s
Iteration  16: 185443.966 ops/s
Iteration  17: 190065.648 ops/s
Iteration  18: 187353.995 ops/s
Iteration  19: 192023.997 ops/s
Iteration  20: 189754.855 ops/s
Iteration  21: 189989.082 ops/s
Iteration  22: 184687.711 ops/s
Iteration  23: 192039.364 ops/s
Iteration  24: 187622.967 ops/s
Iteration  25: 189183.995 ops/s
Iteration  26: 195698.248 ops/s
Iteration  27: 183946.751 ops/s
Iteration  28: 189014.799 ops/s
Iteration  29: 186476.442 ops/s
Iteration  30: 193180.175 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_290._Benchmark.benchmark_Cluster_290":
  189425.960 ±(99.9%) 2601.246 ops/s [Average]
  (min, avg, max) = (181651.518, 189425.960, 196925.607), stdev = 3893.422
  CI (99.9%): [186824.714, 192027.205] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_290._Benchmark.benchmark_Cluster_290  thrpt   30  189425.960 ± 2601.246  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_291._Benchmark.benchmark_Cluster_291$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_291._Benchmark.benchmark_Cluster_291

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18111.377 ops/s
# Warmup Iteration   2: 78593.352 ops/s
# Warmup Iteration   3: 91739.959 ops/s
# Warmup Iteration   4: 104709.085 ops/s
# Warmup Iteration   5: 105958.621 ops/s
# Warmup Iteration   6: 101349.316 ops/s
# Warmup Iteration   7: 103555.497 ops/s
# Warmup Iteration   8: 105674.574 ops/s
# Warmup Iteration   9: 98645.779 ops/s
# Warmup Iteration  10: 105649.304 ops/s
# Warmup Iteration  11: 103467.786 ops/s
# Warmup Iteration  12: 101625.920 ops/s
# Warmup Iteration  13: 101918.650 ops/s
# Warmup Iteration  14: 101005.944 ops/s
# Warmup Iteration  15: 102580.494 ops/s
# Warmup Iteration  16: 100937.614 ops/s
# Warmup Iteration  17: 103973.761 ops/s
# Warmup Iteration  18: 111034.415 ops/s
# Warmup Iteration  19: 98926.828 ops/s
# Warmup Iteration  20: 106894.619 ops/s
# Warmup Iteration  21: 75939.266 ops/s
# Warmup Iteration  22: 102635.497 ops/s
# Warmup Iteration  23: 110967.008 ops/s
# Warmup Iteration  24: 106683.323 ops/s
# Warmup Iteration  25: 107492.030 ops/s
# Warmup Iteration  26: 103628.966 ops/s
# Warmup Iteration  27: 104257.723 ops/s
# Warmup Iteration  28: 105245.189 ops/s
# Warmup Iteration  29: 113545.590 ops/s
# Warmup Iteration  30: 103382.209 ops/s
Iteration   1: 109283.706 ops/s
Iteration   2: 106714.611 ops/s
Iteration   3: 104141.045 ops/s
Iteration   4: 107982.204 ops/s
Iteration   5: 109856.354 ops/s
Iteration   6: 104493.366 ops/s
Iteration   7: 110257.881 ops/s
Iteration   8: 106924.905 ops/s
Iteration   9: 111580.825 ops/s
Iteration  10: 104775.008 ops/s
Iteration  11: 111277.595 ops/s
Iteration  12: 108921.643 ops/s
Iteration  13: 107217.576 ops/s
Iteration  14: 110216.966 ops/s
Iteration  15: 103187.048 ops/s
Iteration  16: 108799.558 ops/s
Iteration  17: 105756.655 ops/s
Iteration  18: 108029.635 ops/s
Iteration  19: 111723.062 ops/s
Iteration  20: 103490.228 ops/s
Iteration  21: 108911.234 ops/s
Iteration  22: 109666.448 ops/s
Iteration  23: 103668.077 ops/s
Iteration  24: 112272.216 ops/s
Iteration  25: 103929.693 ops/s
Iteration  26: 108378.031 ops/s
Iteration  27: 106327.864 ops/s
Iteration  28: 105895.516 ops/s
Iteration  29: 108623.918 ops/s
Iteration  30: 106729.091 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_291._Benchmark.benchmark_Cluster_291":
  107634.399 ±(99.9%) 1781.199 ops/s [Average]
  (min, avg, max) = (103187.048, 107634.399, 112272.216), stdev = 2666.015
  CI (99.9%): [105853.200, 109415.598] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_291._Benchmark.benchmark_Cluster_291  thrpt   30  107634.399 ± 1781.199  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_292._Benchmark.benchmark_Cluster_292$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_292._Benchmark.benchmark_Cluster_292

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9590.123 ops/s
# Warmup Iteration   2: 50723.846 ops/s
# Warmup Iteration   3: 83969.012 ops/s
# Warmup Iteration   4: 97888.652 ops/s
# Warmup Iteration   5: 103158.890 ops/s
# Warmup Iteration   6: 103391.867 ops/s
# Warmup Iteration   7: 105989.065 ops/s
# Warmup Iteration   8: 112801.299 ops/s
# Warmup Iteration   9: 104750.454 ops/s
# Warmup Iteration  10: 109189.503 ops/s
# Warmup Iteration  11: 111025.216 ops/s
# Warmup Iteration  12: 106113.195 ops/s
# Warmup Iteration  13: 111914.209 ops/s
# Warmup Iteration  14: 113346.632 ops/s
# Warmup Iteration  15: 104742.963 ops/s
# Warmup Iteration  16: 111478.190 ops/s
# Warmup Iteration  17: 112988.494 ops/s
# Warmup Iteration  18: 114366.624 ops/s
# Warmup Iteration  19: 115436.475 ops/s
# Warmup Iteration  20: 105869.620 ops/s
# Warmup Iteration  21: 112372.218 ops/s
# Warmup Iteration  22: 112328.603 ops/s
# Warmup Iteration  23: 111687.946 ops/s
# Warmup Iteration  24: 111963.760 ops/s
# Warmup Iteration  25: 110936.426 ops/s
# Warmup Iteration  26: 110608.534 ops/s
# Warmup Iteration  27: 114898.249 ops/s
# Warmup Iteration  28: 106983.671 ops/s
# Warmup Iteration  29: 113603.271 ops/s
# Warmup Iteration  30: 111596.006 ops/s
Iteration   1: 112388.191 ops/s
Iteration   2: 111239.600 ops/s
Iteration   3: 114173.914 ops/s
Iteration   4: 114620.018 ops/s
Iteration   5: 110751.273 ops/s
Iteration   6: 114724.064 ops/s
Iteration   7: 113998.409 ops/s
Iteration   8: 113230.256 ops/s
Iteration   9: 112217.047 ops/s
Iteration  10: 111950.274 ops/s
Iteration  11: 110534.056 ops/s
Iteration  12: 118098.534 ops/s
Iteration  13: 109759.543 ops/s
Iteration  14: 109989.499 ops/s
Iteration  15: 115579.373 ops/s
Iteration  16: 109642.584 ops/s
Iteration  17: 115870.463 ops/s
Iteration  18: 114827.901 ops/s
Iteration  19: 108292.357 ops/s
Iteration  20: 114053.443 ops/s
Iteration  21: 110348.752 ops/s
Iteration  22: 115386.579 ops/s
Iteration  23: 108444.332 ops/s
Iteration  24: 112515.146 ops/s
Iteration  25: 117025.811 ops/s
Iteration  26: 106914.433 ops/s
Iteration  27: 114549.881 ops/s
Iteration  28: 111703.618 ops/s
Iteration  29: 113424.749 ops/s
Iteration  30: 112976.988 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_292._Benchmark.benchmark_Cluster_292":
  112641.036 ±(99.9%) 1798.053 ops/s [Average]
  (min, avg, max) = (106914.433, 112641.036, 118098.534), stdev = 2691.241
  CI (99.9%): [110842.983, 114439.089] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_292._Benchmark.benchmark_Cluster_292  thrpt   30  112641.036 ± 1798.053  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_293._Benchmark.benchmark_Cluster_293$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_293._Benchmark.benchmark_Cluster_293

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3501.427 ops/s
# Warmup Iteration   2: 15501.490 ops/s
# Warmup Iteration   3: 31288.857 ops/s
# Warmup Iteration   4: 28747.224 ops/s
# Warmup Iteration   5: 43911.771 ops/s
# Warmup Iteration   6: 41853.398 ops/s
# Warmup Iteration   7: 31403.517 ops/s
# Warmup Iteration   8: 81075.750 ops/s
# Warmup Iteration   9: 110814.128 ops/s
# Warmup Iteration  10: 115707.461 ops/s
# Warmup Iteration  11: 113102.423 ops/s
# Warmup Iteration  12: 111357.875 ops/s
# Warmup Iteration  13: 109393.887 ops/s
# Warmup Iteration  14: 114260.359 ops/s
# Warmup Iteration  15: 96213.132 ops/s
# Warmup Iteration  16: 102624.287 ops/s
# Warmup Iteration  17: 120580.403 ops/s
# Warmup Iteration  18: 121435.816 ops/s
# Warmup Iteration  19: 108449.072 ops/s
# Warmup Iteration  20: 118435.947 ops/s
# Warmup Iteration  21: 114921.495 ops/s
# Warmup Iteration  22: 118339.655 ops/s
# Warmup Iteration  23: 111986.160 ops/s
# Warmup Iteration  24: 113757.198 ops/s
# Warmup Iteration  25: 120589.980 ops/s
# Warmup Iteration  26: 115715.372 ops/s
# Warmup Iteration  27: 118002.898 ops/s
# Warmup Iteration  28: 118638.905 ops/s
# Warmup Iteration  29: 115887.271 ops/s
# Warmup Iteration  30: 122084.350 ops/s
Iteration   1: 116057.869 ops/s
Iteration   2: 111979.722 ops/s
Iteration   3: 123521.052 ops/s
Iteration   4: 112065.354 ops/s
Iteration   5: 113855.095 ops/s
Iteration   6: 119344.833 ops/s
Iteration   7: 118730.780 ops/s
Iteration   8: 113692.886 ops/s
Iteration   9: 118436.988 ops/s
Iteration  10: 114806.172 ops/s
Iteration  11: 120032.479 ops/s
Iteration  12: 116128.060 ops/s
Iteration  13: 114673.586 ops/s
Iteration  14: 121976.169 ops/s
Iteration  15: 117678.473 ops/s
Iteration  16: 115484.271 ops/s
Iteration  17: 118945.867 ops/s
Iteration  18: 116279.430 ops/s
Iteration  19: 116685.705 ops/s
Iteration  20: 120931.493 ops/s
Iteration  21: 110770.274 ops/s
Iteration  22: 122751.568 ops/s
Iteration  23: 113503.762 ops/s
Iteration  24: 113433.566 ops/s
Iteration  25: 118052.125 ops/s
Iteration  26: 113733.611 ops/s
Iteration  27: 119907.697 ops/s
Iteration  28: 113167.296 ops/s
Iteration  29: 115198.191 ops/s
Iteration  30: 112288.855 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_293._Benchmark.benchmark_Cluster_293":
  116470.441 ±(99.9%) 2289.995 ops/s [Average]
  (min, avg, max) = (110770.274, 116470.441, 123521.052), stdev = 3427.558
  CI (99.9%): [114180.446, 118760.436] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_293._Benchmark.benchmark_Cluster_293  thrpt   30  116470.441 ± 2289.995  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_294._Benchmark.benchmark_Cluster_294$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_294._Benchmark.benchmark_Cluster_294

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1228.889 ops/s
# Warmup Iteration   2: 4247.633 ops/s
# Warmup Iteration   3: 21949.909 ops/s
# Warmup Iteration   4: 22551.932 ops/s
# Warmup Iteration   5: 29082.557 ops/s
# Warmup Iteration   6: 30086.449 ops/s
# Warmup Iteration   7: 28877.874 ops/s
# Warmup Iteration   8: 28588.097 ops/s
# Warmup Iteration   9: 47991.286 ops/s
# Warmup Iteration  10: 69112.923 ops/s
# Warmup Iteration  11: 82370.489 ops/s
# Warmup Iteration  12: 79330.539 ops/s
# Warmup Iteration  13: 81938.400 ops/s
# Warmup Iteration  14: 73933.787 ops/s
# Warmup Iteration  15: 75048.332 ops/s
# Warmup Iteration  16: 80800.417 ops/s
# Warmup Iteration  17: 87673.447 ops/s
# Warmup Iteration  18: 81336.068 ops/s
# Warmup Iteration  19: 84176.233 ops/s
# Warmup Iteration  20: 82971.542 ops/s
# Warmup Iteration  21: 83453.157 ops/s
# Warmup Iteration  22: 84578.805 ops/s
# Warmup Iteration  23: 80319.969 ops/s
# Warmup Iteration  24: 82550.725 ops/s
# Warmup Iteration  25: 85317.866 ops/s
# Warmup Iteration  26: 81278.789 ops/s
# Warmup Iteration  27: 85076.185 ops/s
# Warmup Iteration  28: 81773.246 ops/s
# Warmup Iteration  29: 84406.296 ops/s
# Warmup Iteration  30: 83068.549 ops/s
Iteration   1: 81715.120 ops/s
Iteration   2: 83624.621 ops/s
Iteration   3: 82343.161 ops/s
Iteration   4: 80383.613 ops/s
Iteration   5: 82629.656 ops/s
Iteration   6: 80650.154 ops/s
Iteration   7: 83318.554 ops/s
Iteration   8: 79803.571 ops/s
Iteration   9: 86098.659 ops/s
Iteration  10: 81131.120 ops/s
Iteration  11: 83046.037 ops/s
Iteration  12: 83470.128 ops/s
Iteration  13: 81285.500 ops/s
Iteration  14: 83419.464 ops/s
Iteration  15: 85127.002 ops/s
Iteration  16: 81302.440 ops/s
Iteration  17: 84130.081 ops/s
Iteration  18: 82074.555 ops/s
Iteration  19: 82347.531 ops/s
Iteration  20: 84984.399 ops/s
Iteration  21: 82394.491 ops/s
Iteration  22: 84845.606 ops/s
Iteration  23: 80955.652 ops/s
Iteration  24: 83148.188 ops/s
Iteration  25: 84936.097 ops/s
Iteration  26: 81188.299 ops/s
Iteration  27: 84226.260 ops/s
Iteration  28: 82617.876 ops/s
Iteration  29: 85434.436 ops/s
Iteration  30: 81385.668 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_294._Benchmark.benchmark_Cluster_294":
  82800.598 ±(99.9%) 1107.077 ops/s [Average]
  (min, avg, max) = (79803.571, 82800.598, 86098.659), stdev = 1657.021
  CI (99.9%): [81693.521, 83907.675] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_294._Benchmark.benchmark_Cluster_294  thrpt   30  82800.598 ± 1107.077  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_295._Benchmark.benchmark_Cluster_295$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_295._Benchmark.benchmark_Cluster_295

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3045.064 ops/s
# Warmup Iteration   2: 19518.480 ops/s
# Warmup Iteration   3: 25102.391 ops/s
# Warmup Iteration   4: 34554.636 ops/s
# Warmup Iteration   5: 38442.212 ops/s
# Warmup Iteration   6: 44977.085 ops/s
# Warmup Iteration   7: 51630.257 ops/s
# Warmup Iteration   8: 86236.317 ops/s
# Warmup Iteration   9: 87045.232 ops/s
# Warmup Iteration  10: 105641.529 ops/s
# Warmup Iteration  11: 102801.712 ops/s
# Warmup Iteration  12: 99340.113 ops/s
# Warmup Iteration  13: 110388.395 ops/s
# Warmup Iteration  14: 106320.641 ops/s
# Warmup Iteration  15: 105746.546 ops/s
# Warmup Iteration  16: 107633.020 ops/s
# Warmup Iteration  17: 107322.922 ops/s
# Warmup Iteration  18: 109554.276 ops/s
# Warmup Iteration  19: 112487.342 ops/s
# Warmup Iteration  20: 109012.838 ops/s
# Warmup Iteration  21: 105552.901 ops/s
# Warmup Iteration  22: 103267.702 ops/s
# Warmup Iteration  23: 113864.631 ops/s
# Warmup Iteration  24: 108735.466 ops/s
# Warmup Iteration  25: 113980.114 ops/s
# Warmup Iteration  26: 108914.038 ops/s
# Warmup Iteration  27: 114877.455 ops/s
# Warmup Iteration  28: 109370.968 ops/s
# Warmup Iteration  29: 109130.402 ops/s
# Warmup Iteration  30: 112512.479 ops/s
Iteration   1: 106819.625 ops/s
Iteration   2: 109891.012 ops/s
Iteration   3: 110243.810 ops/s
Iteration   4: 111170.254 ops/s
Iteration   5: 109715.800 ops/s
Iteration   6: 117255.360 ops/s
Iteration   7: 113245.151 ops/s
Iteration   8: 108224.675 ops/s
Iteration   9: 115457.772 ops/s
Iteration  10: 108598.270 ops/s
Iteration  11: 113434.449 ops/s
Iteration  12: 111697.919 ops/s
Iteration  13: 109293.608 ops/s
Iteration  14: 112288.164 ops/s
Iteration  15: 111208.916 ops/s
Iteration  16: 110582.234 ops/s
Iteration  17: 114196.588 ops/s
Iteration  18: 109356.901 ops/s
Iteration  19: 112240.075 ops/s
Iteration  20: 110940.325 ops/s
Iteration  21: 110672.854 ops/s
Iteration  22: 113355.018 ops/s
Iteration  23: 108689.220 ops/s
Iteration  24: 115279.132 ops/s
Iteration  25: 108473.969 ops/s
Iteration  26: 105971.351 ops/s
Iteration  27: 110610.315 ops/s
Iteration  28: 110407.333 ops/s
Iteration  29: 114234.466 ops/s
Iteration  30: 107706.169 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_295._Benchmark.benchmark_Cluster_295":
  111042.024 ±(99.9%) 1784.402 ops/s [Average]
  (min, avg, max) = (105971.351, 111042.024, 117255.360), stdev = 2670.810
  CI (99.9%): [109257.622, 112826.427] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_295._Benchmark.benchmark_Cluster_295  thrpt   30  111042.024 ± 1784.402  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_296._Benchmark.benchmark_Cluster_296$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_296._Benchmark.benchmark_Cluster_296

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3080.567 ops/s
# Warmup Iteration   2: 23889.397 ops/s
# Warmup Iteration   3: 27277.387 ops/s
# Warmup Iteration   4: 51553.871 ops/s
# Warmup Iteration   5: 77832.377 ops/s
# Warmup Iteration   6: 84703.829 ops/s
# Warmup Iteration   7: 90125.384 ops/s
# Warmup Iteration   8: 94879.772 ops/s
# Warmup Iteration   9: 91149.177 ops/s
# Warmup Iteration  10: 89542.588 ops/s
# Warmup Iteration  11: 92904.508 ops/s
# Warmup Iteration  12: 88182.765 ops/s
# Warmup Iteration  13: 91308.145 ops/s
# Warmup Iteration  14: 95682.956 ops/s
# Warmup Iteration  15: 87918.371 ops/s
# Warmup Iteration  16: 91512.217 ops/s
# Warmup Iteration  17: 95099.782 ops/s
# Warmup Iteration  18: 92036.538 ops/s
# Warmup Iteration  19: 97560.128 ops/s
# Warmup Iteration  20: 87495.666 ops/s
# Warmup Iteration  21: 95257.551 ops/s
# Warmup Iteration  22: 98848.435 ops/s
# Warmup Iteration  23: 92536.430 ops/s
# Warmup Iteration  24: 96617.107 ops/s
# Warmup Iteration  25: 97602.609 ops/s
# Warmup Iteration  26: 92150.489 ops/s
# Warmup Iteration  27: 98205.838 ops/s
# Warmup Iteration  28: 91765.465 ops/s
# Warmup Iteration  29: 97802.690 ops/s
# Warmup Iteration  30: 95367.623 ops/s
Iteration   1: 95084.307 ops/s
Iteration   2: 91213.296 ops/s
Iteration   3: 98676.282 ops/s
Iteration   4: 93439.562 ops/s
Iteration   5: 95995.086 ops/s
Iteration   6: 93943.895 ops/s
Iteration   7: 95757.050 ops/s
Iteration   8: 93984.462 ops/s
Iteration   9: 95979.371 ops/s
Iteration  10: 94465.521 ops/s
Iteration  11: 91816.456 ops/s
Iteration  12: 97142.964 ops/s
Iteration  13: 97959.271 ops/s
Iteration  14: 93171.764 ops/s
Iteration  15: 94939.943 ops/s
Iteration  16: 93593.409 ops/s
Iteration  17: 97237.804 ops/s
Iteration  18: 92588.230 ops/s
Iteration  19: 97681.325 ops/s
Iteration  20: 98754.974 ops/s
Iteration  21: 93637.739 ops/s
Iteration  22: 98668.302 ops/s
Iteration  23: 92629.583 ops/s
Iteration  24: 96401.672 ops/s
Iteration  25: 96395.755 ops/s
Iteration  26: 95209.477 ops/s
Iteration  27: 93415.786 ops/s
Iteration  28: 98582.894 ops/s
Iteration  29: 96667.330 ops/s
Iteration  30: 93046.151 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_296._Benchmark.benchmark_Cluster_296":
  95269.322 ±(99.9%) 1472.307 ops/s [Average]
  (min, avg, max) = (91213.296, 95269.322, 98754.974), stdev = 2203.680
  CI (99.9%): [93797.015, 96741.629] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_296._Benchmark.benchmark_Cluster_296  thrpt   30  95269.322 ± 1472.307  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_297._Benchmark.benchmark_Cluster_297$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_297._Benchmark.benchmark_Cluster_297

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6249.599 ops/s
# Warmup Iteration   2: 29236.206 ops/s
# Warmup Iteration   3: 30931.936 ops/s
# Warmup Iteration   4: 31399.331 ops/s
# Warmup Iteration   5: 80625.879 ops/s
# Warmup Iteration   6: 87206.220 ops/s
# Warmup Iteration   7: 97836.432 ops/s
# Warmup Iteration   8: 100649.202 ops/s
# Warmup Iteration   9: 95647.376 ops/s
# Warmup Iteration  10: 100208.668 ops/s
# Warmup Iteration  11: 96411.042 ops/s
# Warmup Iteration  12: 96927.632 ops/s
# Warmup Iteration  13: 100544.657 ops/s
# Warmup Iteration  14: 103196.721 ops/s
# Warmup Iteration  15: 92204.776 ops/s
# Warmup Iteration  16: 100991.027 ops/s
# Warmup Iteration  17: 97155.847 ops/s
# Warmup Iteration  18: 99063.910 ops/s
# Warmup Iteration  19: 104158.249 ops/s
# Warmup Iteration  20: 98936.292 ops/s
# Warmup Iteration  21: 103238.418 ops/s
# Warmup Iteration  22: 99596.809 ops/s
# Warmup Iteration  23: 102329.972 ops/s
# Warmup Iteration  24: 101560.026 ops/s
# Warmup Iteration  25: 96362.693 ops/s
# Warmup Iteration  26: 103501.982 ops/s
# Warmup Iteration  27: 98362.755 ops/s
# Warmup Iteration  28: 101645.494 ops/s
# Warmup Iteration  29: 101801.685 ops/s
# Warmup Iteration  30: 100519.352 ops/s
Iteration   1: 102678.822 ops/s
Iteration   2: 100661.859 ops/s
Iteration   3: 101000.731 ops/s
Iteration   4: 99320.054 ops/s
Iteration   5: 102999.421 ops/s
Iteration   6: 93326.892 ops/s
Iteration   7: 103574.856 ops/s
Iteration   8: 98610.273 ops/s
Iteration   9: 101760.235 ops/s
Iteration  10: 104520.178 ops/s
Iteration  11: 102688.441 ops/s
Iteration  12: 100289.983 ops/s
Iteration  13: 100859.039 ops/s
Iteration  14: 100795.416 ops/s
Iteration  15: 100618.231 ops/s
Iteration  16: 104966.638 ops/s
Iteration  17: 98336.536 ops/s
Iteration  18: 103910.397 ops/s
Iteration  19: 100357.354 ops/s
Iteration  20: 98930.039 ops/s
Iteration  21: 104879.683 ops/s
Iteration  22: 100288.284 ops/s
Iteration  23: 103322.145 ops/s
Iteration  24: 101543.427 ops/s
Iteration  25: 100888.808 ops/s
Iteration  26: 104564.379 ops/s
Iteration  27: 96657.071 ops/s
Iteration  28: 105656.454 ops/s
Iteration  29: 99127.152 ops/s
Iteration  30: 104945.784 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_297._Benchmark.benchmark_Cluster_297":
  101402.619 ±(99.9%) 1849.445 ops/s [Average]
  (min, avg, max) = (93326.892, 101402.619, 105656.454), stdev = 2768.163
  CI (99.9%): [99553.174, 103252.065] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_297._Benchmark.benchmark_Cluster_297  thrpt   30  101402.619 ± 1849.445  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_298._Benchmark.benchmark_Cluster_298$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_298._Benchmark.benchmark_Cluster_298

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7337.641 ops/s
# Warmup Iteration   2: 36915.379 ops/s
# Warmup Iteration   3: 99643.690 ops/s
# Warmup Iteration   4: 107527.224 ops/s
# Warmup Iteration   5: 110835.385 ops/s
# Warmup Iteration   6: 118425.068 ops/s
# Warmup Iteration   7: 117813.623 ops/s
# Warmup Iteration   8: 113890.228 ops/s
# Warmup Iteration   9: 120039.635 ops/s
# Warmup Iteration  10: 115261.300 ops/s
# Warmup Iteration  11: 114132.601 ops/s
# Warmup Iteration  12: 117762.834 ops/s
# Warmup Iteration  13: 114158.962 ops/s
# Warmup Iteration  14: 121438.661 ops/s
# Warmup Iteration  15: 112274.044 ops/s
# Warmup Iteration  16: 106906.317 ops/s
# Warmup Iteration  17: 116149.545 ops/s
# Warmup Iteration  18: 112117.221 ops/s
# Warmup Iteration  19: 124970.306 ops/s
# Warmup Iteration  20: 123991.883 ops/s
# Warmup Iteration  21: 113725.150 ops/s
# Warmup Iteration  22: 121455.869 ops/s
# Warmup Iteration  23: 117835.738 ops/s
# Warmup Iteration  24: 121278.522 ops/s
# Warmup Iteration  25: 117372.409 ops/s
# Warmup Iteration  26: 119544.394 ops/s
# Warmup Iteration  27: 119648.723 ops/s
# Warmup Iteration  28: 117345.744 ops/s
# Warmup Iteration  29: 119467.035 ops/s
# Warmup Iteration  30: 117226.727 ops/s
Iteration   1: 118096.222 ops/s
Iteration   2: 122537.434 ops/s
Iteration   3: 121405.928 ops/s
Iteration   4: 114649.902 ops/s
Iteration   5: 120172.618 ops/s
Iteration   6: 118945.815 ops/s
Iteration   7: 122767.519 ops/s
Iteration   8: 117934.619 ops/s
Iteration   9: 115904.270 ops/s
Iteration  10: 121284.276 ops/s
Iteration  11: 114861.182 ops/s
Iteration  12: 123595.768 ops/s
Iteration  13: 116559.161 ops/s
Iteration  14: 116575.064 ops/s
Iteration  15: 119394.585 ops/s
Iteration  16: 116058.616 ops/s
Iteration  17: 121725.862 ops/s
Iteration  18: 115831.513 ops/s
Iteration  19: 119177.301 ops/s
Iteration  20: 120967.023 ops/s
Iteration  21: 116459.093 ops/s
Iteration  22: 118609.889 ops/s
Iteration  23: 114270.421 ops/s
Iteration  24: 126088.525 ops/s
Iteration  25: 119261.242 ops/s
Iteration  26: 119649.589 ops/s
Iteration  27: 122581.963 ops/s
Iteration  28: 120495.404 ops/s
Iteration  29: 113966.591 ops/s
Iteration  30: 107073.757 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_298._Benchmark.benchmark_Cluster_298":
  118563.372 ±(99.9%) 2501.234 ops/s [Average]
  (min, avg, max) = (107073.757, 118563.372, 126088.525), stdev = 3743.730
  CI (99.9%): [116062.137, 121064.606] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_298._Benchmark.benchmark_Cluster_298  thrpt   30  118563.372 ± 2501.234  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_299._Benchmark.benchmark_Cluster_299$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_299._Benchmark.benchmark_Cluster_299

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 697.369 ops/s
# Warmup Iteration   2: 9246.139 ops/s
# Warmup Iteration   3: 17380.906 ops/s
# Warmup Iteration   4: 20854.304 ops/s
# Warmup Iteration   5: 26466.391 ops/s
# Warmup Iteration   6: 39619.119 ops/s
# Warmup Iteration   7: 48875.012 ops/s
# Warmup Iteration   8: 53020.906 ops/s
# Warmup Iteration   9: 60917.145 ops/s
# Warmup Iteration  10: 49789.210 ops/s
# Warmup Iteration  11: 52312.269 ops/s
# Warmup Iteration  12: 52327.412 ops/s
# Warmup Iteration  13: 55483.695 ops/s
# Warmup Iteration  14: 56855.721 ops/s
# Warmup Iteration  15: 61882.900 ops/s
# Warmup Iteration  16: 62330.672 ops/s
# Warmup Iteration  17: 47868.558 ops/s
# Warmup Iteration  18: 58708.912 ops/s
# Warmup Iteration  19: 51753.229 ops/s
# Warmup Iteration  20: 54658.979 ops/s
# Warmup Iteration  21: 57501.643 ops/s
# Warmup Iteration  22: 55240.242 ops/s
# Warmup Iteration  23: 58960.763 ops/s
# Warmup Iteration  24: 62553.381 ops/s
# Warmup Iteration  25: 53231.348 ops/s
# Warmup Iteration  26: 61324.336 ops/s
# Warmup Iteration  27: 56809.212 ops/s
# Warmup Iteration  28: 60392.605 ops/s
# Warmup Iteration  29: 57614.881 ops/s
# Warmup Iteration  30: 64450.385 ops/s
Iteration   1: 61363.608 ops/s
Iteration   2: 53053.568 ops/s
Iteration   3: 63357.746 ops/s
Iteration   4: 54122.581 ops/s
Iteration   5: 57514.285 ops/s
Iteration   6: 56542.333 ops/s
Iteration   7: 61265.521 ops/s
Iteration   8: 60249.631 ops/s
Iteration   9: 52809.320 ops/s
Iteration  10: 52131.351 ops/s
Iteration  11: 60845.678 ops/s
Iteration  12: 50364.897 ops/s
Iteration  13: 59726.563 ops/s
Iteration  14: 50300.997 ops/s
Iteration  15: 54594.177 ops/s
Iteration  16: 47896.314 ops/s
Iteration  17: 54499.901 ops/s
Iteration  18: 62347.908 ops/s
Iteration  19: 59161.787 ops/s
Iteration  20: 57807.449 ops/s
Iteration  21: 61982.953 ops/s
Iteration  22: 55205.984 ops/s
Iteration  23: 56201.897 ops/s
Iteration  24: 46963.116 ops/s
Iteration  25: 51177.498 ops/s
Iteration  26: 56848.789 ops/s
Iteration  27: 56938.705 ops/s
Iteration  28: 57990.263 ops/s
Iteration  29: 55282.615 ops/s
Iteration  30: 57629.798 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_299._Benchmark.benchmark_Cluster_299":
  56205.908 ±(99.9%) 2889.786 ops/s [Average]
  (min, avg, max) = (46963.116, 56205.908, 63357.746), stdev = 4325.296
  CI (99.9%): [53316.122, 59095.694] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_299._Benchmark.benchmark_Cluster_299  thrpt   30  56205.908 ± 2889.786  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_3._Benchmark.benchmark_Cluster_3$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_3._Benchmark.benchmark_Cluster_3

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2741.640 ops/s
# Warmup Iteration   2: 35330.547 ops/s
# Warmup Iteration   3: 47453.540 ops/s
# Warmup Iteration   4: 76708.560 ops/s
# Warmup Iteration   5: 107653.512 ops/s
# Warmup Iteration   6: 114982.085 ops/s
# Warmup Iteration   7: 107590.195 ops/s
# Warmup Iteration   8: 122557.897 ops/s
# Warmup Iteration   9: 125057.618 ops/s
# Warmup Iteration  10: 117385.290 ops/s
# Warmup Iteration  11: 122172.782 ops/s
# Warmup Iteration  12: 120632.420 ops/s
# Warmup Iteration  13: 124950.972 ops/s
# Warmup Iteration  14: 121171.066 ops/s
# Warmup Iteration  15: 122827.574 ops/s
# Warmup Iteration  16: 121391.700 ops/s
# Warmup Iteration  17: 125669.968 ops/s
# Warmup Iteration  18: 125174.123 ops/s
# Warmup Iteration  19: 127149.119 ops/s
# Warmup Iteration  20: 123947.408 ops/s
# Warmup Iteration  21: 125547.439 ops/s
# Warmup Iteration  22: 124433.611 ops/s
# Warmup Iteration  23: 127593.842 ops/s
# Warmup Iteration  24: 119370.004 ops/s
# Warmup Iteration  25: 125176.105 ops/s
# Warmup Iteration  26: 123851.612 ops/s
# Warmup Iteration  27: 125745.120 ops/s
# Warmup Iteration  28: 123492.013 ops/s
# Warmup Iteration  29: 120946.376 ops/s
# Warmup Iteration  30: 130253.934 ops/s
Iteration   1: 125966.443 ops/s
Iteration   2: 125631.555 ops/s
Iteration   3: 125728.612 ops/s
Iteration   4: 129012.789 ops/s
Iteration   5: 125929.555 ops/s
Iteration   6: 130326.738 ops/s
Iteration   7: 126441.447 ops/s
Iteration   8: 128152.424 ops/s
Iteration   9: 123060.421 ops/s
Iteration  10: 128846.081 ops/s
Iteration  11: 128505.454 ops/s
Iteration  12: 123954.331 ops/s
Iteration  13: 130519.361 ops/s
Iteration  14: 129209.323 ops/s
Iteration  15: 123790.634 ops/s
Iteration  16: 129834.799 ops/s
Iteration  17: 124067.329 ops/s
Iteration  18: 128866.564 ops/s
Iteration  19: 123963.133 ops/s
Iteration  20: 123514.643 ops/s
Iteration  21: 127165.565 ops/s
Iteration  22: 123978.606 ops/s
Iteration  23: 103766.598 ops/s
Iteration  24: 122612.489 ops/s
Iteration  25: 129463.487 ops/s
Iteration  26: 132213.834 ops/s
Iteration  27: 122513.492 ops/s
Iteration  28: 129662.243 ops/s
Iteration  29: 123352.973 ops/s
Iteration  30: 125398.349 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_3._Benchmark.benchmark_Cluster_3":
  125848.309 ±(99.9%) 3344.551 ops/s [Average]
  (min, avg, max) = (103766.598, 125848.309, 132213.834), stdev = 5005.967
  CI (99.9%): [122503.758, 129192.860] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score      Error  Units
Cluster_3._Benchmark.benchmark_Cluster_3  thrpt   30  125848.309 ± 3344.551  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_30._Benchmark.benchmark_Cluster_30$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_30._Benchmark.benchmark_Cluster_30

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1320.725 ops/s
# Warmup Iteration   2: 11920.366 ops/s
# Warmup Iteration   3: 27480.260 ops/s
# Warmup Iteration   4: 35214.916 ops/s
# Warmup Iteration   5: 39001.889 ops/s
# Warmup Iteration   6: 43814.862 ops/s
# Warmup Iteration   7: 46808.078 ops/s
# Warmup Iteration   8: 89078.285 ops/s
# Warmup Iteration   9: 88211.877 ops/s
# Warmup Iteration  10: 95209.357 ops/s
# Warmup Iteration  11: 88687.764 ops/s
# Warmup Iteration  12: 95519.917 ops/s
# Warmup Iteration  13: 100200.111 ops/s
# Warmup Iteration  14: 94486.797 ops/s
# Warmup Iteration  15: 100058.459 ops/s
# Warmup Iteration  16: 99486.031 ops/s
# Warmup Iteration  17: 99132.316 ops/s
# Warmup Iteration  18: 97876.569 ops/s
# Warmup Iteration  19: 99810.556 ops/s
# Warmup Iteration  20: 98721.319 ops/s
# Warmup Iteration  21: 99495.260 ops/s
# Warmup Iteration  22: 101566.804 ops/s
# Warmup Iteration  23: 100033.060 ops/s
# Warmup Iteration  24: 100512.601 ops/s
# Warmup Iteration  25: 97823.691 ops/s
# Warmup Iteration  26: 99122.894 ops/s
# Warmup Iteration  27: 101176.770 ops/s
# Warmup Iteration  28: 97702.228 ops/s
# Warmup Iteration  29: 99269.761 ops/s
# Warmup Iteration  30: 101548.414 ops/s
Iteration   1: 102950.769 ops/s
Iteration   2: 95763.638 ops/s
Iteration   3: 99738.981 ops/s
Iteration   4: 102934.125 ops/s
Iteration   5: 98220.085 ops/s
Iteration   6: 102702.779 ops/s
Iteration   7: 99172.406 ops/s
Iteration   8: 99634.034 ops/s
Iteration   9: 103767.031 ops/s
Iteration  10: 99369.270 ops/s
Iteration  11: 100716.817 ops/s
Iteration  12: 98896.375 ops/s
Iteration  13: 102683.429 ops/s
Iteration  14: 97389.117 ops/s
Iteration  15: 99744.258 ops/s
Iteration  16: 102783.141 ops/s
Iteration  17: 97862.401 ops/s
Iteration  18: 99421.800 ops/s
Iteration  19: 100343.341 ops/s
Iteration  20: 97006.463 ops/s
Iteration  21: 101642.808 ops/s
Iteration  22: 99172.902 ops/s
Iteration  23: 103226.996 ops/s
Iteration  24: 104212.412 ops/s
Iteration  25: 92890.518 ops/s
Iteration  26: 103879.038 ops/s
Iteration  27: 103392.145 ops/s
Iteration  28: 97155.207 ops/s
Iteration  29: 103421.784 ops/s
Iteration  30: 100528.781 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_30._Benchmark.benchmark_Cluster_30":
  100354.095 ±(99.9%) 1855.653 ops/s [Average]
  (min, avg, max) = (92890.518, 100354.095, 104212.412), stdev = 2777.455
  CI (99.9%): [98498.442, 102209.748] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_30._Benchmark.benchmark_Cluster_30  thrpt   30  100354.095 ± 1855.653  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_300._Benchmark.benchmark_Cluster_300$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_300._Benchmark.benchmark_Cluster_300

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6023.582 ops/s
# Warmup Iteration   2: 33165.362 ops/s
# Warmup Iteration   3: 58904.899 ops/s
# Warmup Iteration   4: 104397.380 ops/s
# Warmup Iteration   5: 98254.310 ops/s
# Warmup Iteration   6: 92836.703 ops/s
# Warmup Iteration   7: 110904.481 ops/s
# Warmup Iteration   8: 107033.990 ops/s
# Warmup Iteration   9: 107004.836 ops/s
# Warmup Iteration  10: 105189.825 ops/s
# Warmup Iteration  11: 104923.980 ops/s
# Warmup Iteration  12: 110862.190 ops/s
# Warmup Iteration  13: 107798.365 ops/s
# Warmup Iteration  14: 103604.176 ops/s
# Warmup Iteration  15: 110660.327 ops/s
# Warmup Iteration  16: 105709.914 ops/s
# Warmup Iteration  17: 108818.022 ops/s
# Warmup Iteration  18: 112423.249 ops/s
# Warmup Iteration  19: 109784.914 ops/s
# Warmup Iteration  20: 115218.547 ops/s
# Warmup Iteration  21: 111826.331 ops/s
# Warmup Iteration  22: 108265.908 ops/s
# Warmup Iteration  23: 111515.326 ops/s
# Warmup Iteration  24: 108842.298 ops/s
# Warmup Iteration  25: 106939.839 ops/s
# Warmup Iteration  26: 110733.754 ops/s
# Warmup Iteration  27: 109812.190 ops/s
# Warmup Iteration  28: 110082.588 ops/s
# Warmup Iteration  29: 113858.350 ops/s
# Warmup Iteration  30: 112249.013 ops/s
Iteration   1: 113065.627 ops/s
Iteration   2: 110581.025 ops/s
Iteration   3: 111512.718 ops/s
Iteration   4: 113016.398 ops/s
Iteration   5: 111400.683 ops/s
Iteration   6: 113710.425 ops/s
Iteration   7: 109935.838 ops/s
Iteration   8: 114685.477 ops/s
Iteration   9: 110375.614 ops/s
Iteration  10: 110293.304 ops/s
Iteration  11: 115641.211 ops/s
Iteration  12: 108667.345 ops/s
Iteration  13: 108554.417 ops/s
Iteration  14: 101975.653 ops/s
Iteration  15: 113186.996 ops/s
Iteration  16: 118407.809 ops/s
Iteration  17: 77742.372 ops/s
Iteration  18: 111075.994 ops/s
Iteration  19: 115569.565 ops/s
Iteration  20: 111027.550 ops/s
Iteration  21: 114440.732 ops/s
Iteration  22: 110510.864 ops/s
Iteration  23: 114468.955 ops/s
Iteration  24: 114649.343 ops/s
Iteration  25: 108590.064 ops/s
Iteration  26: 111822.344 ops/s
Iteration  27: 114860.728 ops/s
Iteration  28: 110379.580 ops/s
Iteration  29: 112929.300 ops/s
Iteration  30: 114227.716 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_300._Benchmark.benchmark_Cluster_300":
  110910.188 ±(99.9%) 4652.044 ops/s [Average]
  (min, avg, max) = (77742.372, 110910.188, 118407.809), stdev = 6962.961
  CI (99.9%): [106258.144, 115562.232] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_300._Benchmark.benchmark_Cluster_300  thrpt   30  110910.188 ± 4652.044  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_301._Benchmark.benchmark_Cluster_301$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_301._Benchmark.benchmark_Cluster_301

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2381.478 ops/s
# Warmup Iteration   2: 16694.643 ops/s
# Warmup Iteration   3: 31116.902 ops/s
# Warmup Iteration   4: 40476.175 ops/s
# Warmup Iteration   5: 31269.131 ops/s
# Warmup Iteration   6: 48043.039 ops/s
# Warmup Iteration   7: 99031.543 ops/s
# Warmup Iteration   8: 103229.833 ops/s
# Warmup Iteration   9: 100856.662 ops/s
# Warmup Iteration  10: 98090.614 ops/s
# Warmup Iteration  11: 98953.326 ops/s
# Warmup Iteration  12: 101365.088 ops/s
# Warmup Iteration  13: 102148.977 ops/s
# Warmup Iteration  14: 103550.458 ops/s
# Warmup Iteration  15: 99054.105 ops/s
# Warmup Iteration  16: 103369.356 ops/s
# Warmup Iteration  17: 113420.905 ops/s
# Warmup Iteration  18: 105642.423 ops/s
# Warmup Iteration  19: 112486.769 ops/s
# Warmup Iteration  20: 110135.294 ops/s
# Warmup Iteration  21: 112050.041 ops/s
# Warmup Iteration  22: 106847.509 ops/s
# Warmup Iteration  23: 109206.123 ops/s
# Warmup Iteration  24: 110108.077 ops/s
# Warmup Iteration  25: 108716.379 ops/s
# Warmup Iteration  26: 112919.696 ops/s
# Warmup Iteration  27: 110412.391 ops/s
# Warmup Iteration  28: 107502.472 ops/s
# Warmup Iteration  29: 115583.340 ops/s
# Warmup Iteration  30: 104904.151 ops/s
Iteration   1: 111603.823 ops/s
Iteration   2: 110699.491 ops/s
Iteration   3: 109582.646 ops/s
Iteration   4: 112113.824 ops/s
Iteration   5: 103697.197 ops/s
Iteration   6: 112510.661 ops/s
Iteration   7: 107431.325 ops/s
Iteration   8: 108710.469 ops/s
Iteration   9: 108133.088 ops/s
Iteration  10: 110409.653 ops/s
Iteration  11: 112556.680 ops/s
Iteration  12: 108535.185 ops/s
Iteration  13: 110917.029 ops/s
Iteration  14: 113450.558 ops/s
Iteration  15: 111495.634 ops/s
Iteration  16: 105762.417 ops/s
Iteration  17: 112850.841 ops/s
Iteration  18: 110733.585 ops/s
Iteration  19: 107911.122 ops/s
Iteration  20: 112554.148 ops/s
Iteration  21: 107433.717 ops/s
Iteration  22: 114652.215 ops/s
Iteration  23: 111982.657 ops/s
Iteration  24: 108077.435 ops/s
Iteration  25: 112525.222 ops/s
Iteration  26: 116178.703 ops/s
Iteration  27: 106068.122 ops/s
Iteration  28: 111189.576 ops/s
Iteration  29: 109074.616 ops/s
Iteration  30: 111487.249 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_301._Benchmark.benchmark_Cluster_301":
  110344.296 ±(99.9%) 1855.262 ops/s [Average]
  (min, avg, max) = (103697.197, 110344.296, 116178.703), stdev = 2776.869
  CI (99.9%): [108489.034, 112199.558] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_301._Benchmark.benchmark_Cluster_301  thrpt   30  110344.296 ± 1855.262  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_302._Benchmark.benchmark_Cluster_302$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_302._Benchmark.benchmark_Cluster_302

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9934.471 ops/s
# Warmup Iteration   2: 21466.151 ops/s
# Warmup Iteration   3: 25191.921 ops/s
# Warmup Iteration   4: 18602.809 ops/s
# Warmup Iteration   5: 20725.934 ops/s
# Warmup Iteration   6: 23769.659 ops/s
# Warmup Iteration   7: 22174.199 ops/s
# Warmup Iteration   8: 20703.917 ops/s
# Warmup Iteration   9: 21126.224 ops/s
# Warmup Iteration  10: 25301.496 ops/s
# Warmup Iteration  11: 20998.760 ops/s
# Warmup Iteration  12: 20378.457 ops/s
# Warmup Iteration  13: 20860.977 ops/s
# Warmup Iteration  14: 21335.974 ops/s
# Warmup Iteration  15: 20706.067 ops/s
# Warmup Iteration  16: 21469.215 ops/s
# Warmup Iteration  17: 20862.210 ops/s
# Warmup Iteration  18: 21421.157 ops/s
# Warmup Iteration  19: 21117.844 ops/s
# Warmup Iteration  20: 21775.690 ops/s
# Warmup Iteration  21: 20637.858 ops/s
# Warmup Iteration  22: 20803.623 ops/s
# Warmup Iteration  23: 20835.383 ops/s
# Warmup Iteration  24: 21558.198 ops/s
# Warmup Iteration  25: 21355.897 ops/s
# Warmup Iteration  26: 21143.337 ops/s
# Warmup Iteration  27: 21281.377 ops/s
# Warmup Iteration  28: 21341.227 ops/s
# Warmup Iteration  29: 20585.817 ops/s
# Warmup Iteration  30: 20533.475 ops/s
Iteration   1: 21563.164 ops/s
Iteration   2: 21554.384 ops/s
Iteration   3: 20949.508 ops/s
Iteration   4: 20639.334 ops/s
Iteration   5: 21118.727 ops/s
Iteration   6: 21306.482 ops/s
Iteration   7: 20947.179 ops/s
Iteration   8: 20988.370 ops/s
Iteration   9: 21150.102 ops/s
Iteration  10: 21208.993 ops/s
Iteration  11: 24226.021 ops/s
Iteration  12: 25997.157 ops/s
Iteration  13: 20969.893 ops/s
Iteration  14: 20966.727 ops/s
Iteration  15: 21312.125 ops/s
Iteration  16: 21842.573 ops/s
Iteration  17: 21239.247 ops/s
Iteration  18: 20960.750 ops/s
Iteration  19: 22119.318 ops/s
Iteration  20: 20918.336 ops/s
Iteration  21: 20831.932 ops/s
Iteration  22: 20723.044 ops/s
Iteration  23: 21698.073 ops/s
Iteration  24: 20647.718 ops/s
Iteration  25: 21032.683 ops/s
Iteration  26: 21606.766 ops/s
Iteration  27: 20986.582 ops/s
Iteration  28: 21566.805 ops/s
Iteration  29: 21399.804 ops/s
Iteration  30: 21532.717 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_302._Benchmark.benchmark_Cluster_302":
  21466.817 ±(99.9%) 720.797 ops/s [Average]
  (min, avg, max) = (20639.334, 21466.817, 25997.157), stdev = 1078.855
  CI (99.9%): [20746.020, 22187.614] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_302._Benchmark.benchmark_Cluster_302  thrpt   30  21466.817 ± 720.797  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_303._Benchmark.benchmark_Cluster_303$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_303._Benchmark.benchmark_Cluster_303

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.739 ops/s
# Warmup Iteration   2: 9903.981 ops/s
# Warmup Iteration   3: 25332.792 ops/s
# Warmup Iteration   4: 43863.131 ops/s
# Warmup Iteration   5: 40391.329 ops/s
# Warmup Iteration   6: 51609.770 ops/s
# Warmup Iteration   7: 63028.593 ops/s
# Warmup Iteration   8: 154201.585 ops/s
# Warmup Iteration   9: 143896.890 ops/s
# Warmup Iteration  10: 146996.428 ops/s
# Warmup Iteration  11: 151067.541 ops/s
# Warmup Iteration  12: 147681.781 ops/s
# Warmup Iteration  13: 144154.818 ops/s
# Warmup Iteration  14: 153011.934 ops/s
# Warmup Iteration  15: 144960.755 ops/s
# Warmup Iteration  16: 157535.923 ops/s
# Warmup Iteration  17: 151488.212 ops/s
# Warmup Iteration  18: 146750.672 ops/s
# Warmup Iteration  19: 143347.365 ops/s
# Warmup Iteration  20: 156324.366 ops/s
# Warmup Iteration  21: 148706.833 ops/s
# Warmup Iteration  22: 151897.259 ops/s
# Warmup Iteration  23: 148902.075 ops/s
# Warmup Iteration  24: 149184.434 ops/s
# Warmup Iteration  25: 157232.229 ops/s
# Warmup Iteration  26: 150913.088 ops/s
# Warmup Iteration  27: 144665.007 ops/s
# Warmup Iteration  28: 157547.013 ops/s
# Warmup Iteration  29: 150140.755 ops/s
# Warmup Iteration  30: 148241.086 ops/s
Iteration   1: 153943.413 ops/s
Iteration   2: 145470.659 ops/s
Iteration   3: 157314.154 ops/s
Iteration   4: 146449.343 ops/s
Iteration   5: 150061.600 ops/s
Iteration   6: 155674.948 ops/s
Iteration   7: 146818.978 ops/s
Iteration   8: 152964.644 ops/s
Iteration   9: 150696.501 ops/s
Iteration  10: 150012.099 ops/s
Iteration  11: 151276.693 ops/s
Iteration  12: 152609.569 ops/s
Iteration  13: 153855.680 ops/s
Iteration  14: 154153.264 ops/s
Iteration  15: 152452.719 ops/s
Iteration  16: 145335.067 ops/s
Iteration  17: 157467.162 ops/s
Iteration  18: 144779.554 ops/s
Iteration  19: 149748.218 ops/s
Iteration  20: 150502.564 ops/s
Iteration  21: 158363.604 ops/s
Iteration  22: 144737.960 ops/s
Iteration  23: 150597.680 ops/s
Iteration  24: 156591.612 ops/s
Iteration  25: 152603.308 ops/s
Iteration  26: 149594.863 ops/s
Iteration  27: 152297.194 ops/s
Iteration  28: 148968.065 ops/s
Iteration  29: 151114.378 ops/s
Iteration  30: 155505.646 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_303._Benchmark.benchmark_Cluster_303":
  151398.705 ±(99.9%) 2581.706 ops/s [Average]
  (min, avg, max) = (144737.960, 151398.705, 158363.604), stdev = 3864.176
  CI (99.9%): [148816.999, 153980.410] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_303._Benchmark.benchmark_Cluster_303  thrpt   30  151398.705 ± 2581.706  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_304._Benchmark.benchmark_Cluster_304$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_304._Benchmark.benchmark_Cluster_304

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2057.373 ops/s
# Warmup Iteration   2: 11533.231 ops/s
# Warmup Iteration   3: 16334.941 ops/s
# Warmup Iteration   4: 19185.790 ops/s
# Warmup Iteration   5: 19161.859 ops/s
# Warmup Iteration   6: 17488.202 ops/s
# Warmup Iteration   7: 29375.074 ops/s
# Warmup Iteration   8: 34724.548 ops/s
# Warmup Iteration   9: 32899.898 ops/s
# Warmup Iteration  10: 34815.149 ops/s
# Warmup Iteration  11: 35616.328 ops/s
# Warmup Iteration  12: 35580.613 ops/s
# Warmup Iteration  13: 36536.356 ops/s
# Warmup Iteration  14: 36783.458 ops/s
# Warmup Iteration  15: 35881.325 ops/s
# Warmup Iteration  16: 34689.336 ops/s
# Warmup Iteration  17: 35472.367 ops/s
# Warmup Iteration  18: 31472.953 ops/s
# Warmup Iteration  19: 39727.383 ops/s
# Warmup Iteration  20: 33562.784 ops/s
# Warmup Iteration  21: 37328.087 ops/s
# Warmup Iteration  22: 35564.932 ops/s
# Warmup Iteration  23: 34607.788 ops/s
# Warmup Iteration  24: 37005.101 ops/s
# Warmup Iteration  25: 33168.134 ops/s
# Warmup Iteration  26: 34187.891 ops/s
# Warmup Iteration  27: 37085.711 ops/s
# Warmup Iteration  28: 38184.241 ops/s
# Warmup Iteration  29: 36113.159 ops/s
# Warmup Iteration  30: 32822.926 ops/s
Iteration   1: 34843.234 ops/s
Iteration   2: 35072.531 ops/s
Iteration   3: 35863.475 ops/s
Iteration   4: 36033.415 ops/s
Iteration   5: 31445.600 ops/s
Iteration   6: 34027.163 ops/s
Iteration   7: 35739.504 ops/s
Iteration   8: 35044.635 ops/s
Iteration   9: 34123.258 ops/s
Iteration  10: 36566.787 ops/s
Iteration  11: 35017.043 ops/s
Iteration  12: 36825.625 ops/s
Iteration  13: 34868.553 ops/s
Iteration  14: 33728.412 ops/s
Iteration  15: 36953.948 ops/s
Iteration  16: 34990.114 ops/s
Iteration  17: 35873.242 ops/s
Iteration  18: 34873.487 ops/s
Iteration  19: 32831.349 ops/s
Iteration  20: 36557.731 ops/s
Iteration  21: 37379.444 ops/s
Iteration  22: 35805.723 ops/s
Iteration  23: 37206.788 ops/s
Iteration  24: 36604.574 ops/s
Iteration  25: 36906.008 ops/s
Iteration  26: 33910.124 ops/s
Iteration  27: 36583.569 ops/s
Iteration  28: 34763.944 ops/s
Iteration  29: 33944.897 ops/s
Iteration  30: 35150.308 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_304._Benchmark.benchmark_Cluster_304":
  35317.816 ±(99.9%) 921.220 ops/s [Average]
  (min, avg, max) = (31445.600, 35317.816, 37379.444), stdev = 1378.839
  CI (99.9%): [34396.596, 36239.036] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_304._Benchmark.benchmark_Cluster_304  thrpt   30  35317.816 ± 921.220  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_305._Benchmark.benchmark_Cluster_305$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_305._Benchmark.benchmark_Cluster_305

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9192.418 ops/s
# Warmup Iteration   2: 34252.115 ops/s
# Warmup Iteration   3: 40684.486 ops/s
# Warmup Iteration   4: 57901.791 ops/s
# Warmup Iteration   5: 95737.002 ops/s
# Warmup Iteration   6: 119508.670 ops/s
# Warmup Iteration   7: 115666.990 ops/s
# Warmup Iteration   8: 123459.972 ops/s
# Warmup Iteration   9: 119266.796 ops/s
# Warmup Iteration  10: 122568.976 ops/s
# Warmup Iteration  11: 120078.653 ops/s
# Warmup Iteration  12: 121454.326 ops/s
# Warmup Iteration  13: 123129.018 ops/s
# Warmup Iteration  14: 116232.869 ops/s
# Warmup Iteration  15: 123878.778 ops/s
# Warmup Iteration  16: 114748.133 ops/s
# Warmup Iteration  17: 131152.982 ops/s
# Warmup Iteration  18: 127199.350 ops/s
# Warmup Iteration  19: 127608.480 ops/s
# Warmup Iteration  20: 132186.480 ops/s
# Warmup Iteration  21: 127640.866 ops/s
# Warmup Iteration  22: 127441.743 ops/s
# Warmup Iteration  23: 132851.579 ops/s
# Warmup Iteration  24: 122767.305 ops/s
# Warmup Iteration  25: 127884.674 ops/s
# Warmup Iteration  26: 129118.878 ops/s
# Warmup Iteration  27: 125373.988 ops/s
# Warmup Iteration  28: 133717.066 ops/s
# Warmup Iteration  29: 127200.500 ops/s
# Warmup Iteration  30: 133041.698 ops/s
Iteration   1: 130868.456 ops/s
Iteration   2: 124817.339 ops/s
Iteration   3: 130577.079 ops/s
Iteration   4: 127751.693 ops/s
Iteration   5: 128486.185 ops/s
Iteration   6: 129912.123 ops/s
Iteration   7: 127725.091 ops/s
Iteration   8: 125694.544 ops/s
Iteration   9: 131527.556 ops/s
Iteration  10: 125562.326 ops/s
Iteration  11: 127576.045 ops/s
Iteration  12: 134752.662 ops/s
Iteration  13: 131970.472 ops/s
Iteration  14: 122461.564 ops/s
Iteration  15: 131479.990 ops/s
Iteration  16: 124772.422 ops/s
Iteration  17: 130188.992 ops/s
Iteration  18: 132309.075 ops/s
Iteration  19: 124623.080 ops/s
Iteration  20: 133587.018 ops/s
Iteration  21: 134324.724 ops/s
Iteration  22: 125871.310 ops/s
Iteration  23: 126547.567 ops/s
Iteration  24: 132763.644 ops/s
Iteration  25: 124527.463 ops/s
Iteration  26: 129294.337 ops/s
Iteration  27: 121108.861 ops/s
Iteration  28: 126107.393 ops/s
Iteration  29: 127802.140 ops/s
Iteration  30: 133230.248 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_305._Benchmark.benchmark_Cluster_305":
  128607.380 ±(99.9%) 2430.919 ops/s [Average]
  (min, avg, max) = (121108.861, 128607.380, 134752.662), stdev = 3638.485
  CI (99.9%): [126176.461, 131038.299] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_305._Benchmark.benchmark_Cluster_305  thrpt   30  128607.380 ± 2430.919  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_306._Benchmark.benchmark_Cluster_306$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_306._Benchmark.benchmark_Cluster_306

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13007.516 ops/s
# Warmup Iteration   2: 50070.457 ops/s
# Warmup Iteration   3: 74729.279 ops/s
# Warmup Iteration   4: 162165.652 ops/s
# Warmup Iteration   5: 162813.004 ops/s
# Warmup Iteration   6: 166678.856 ops/s
# Warmup Iteration   7: 162276.708 ops/s
# Warmup Iteration   8: 178210.726 ops/s
# Warmup Iteration   9: 177135.931 ops/s
# Warmup Iteration  10: 160775.074 ops/s
# Warmup Iteration  11: 165864.507 ops/s
# Warmup Iteration  12: 175727.345 ops/s
# Warmup Iteration  13: 170983.615 ops/s
# Warmup Iteration  14: 178771.189 ops/s
# Warmup Iteration  15: 178610.996 ops/s
# Warmup Iteration  16: 158152.683 ops/s
# Warmup Iteration  17: 181300.846 ops/s
# Warmup Iteration  18: 181043.335 ops/s
# Warmup Iteration  19: 173989.846 ops/s
# Warmup Iteration  20: 187695.916 ops/s
# Warmup Iteration  21: 186096.104 ops/s
# Warmup Iteration  22: 177130.045 ops/s
# Warmup Iteration  23: 174620.905 ops/s
# Warmup Iteration  24: 181153.962 ops/s
# Warmup Iteration  25: 175589.319 ops/s
# Warmup Iteration  26: 185052.540 ops/s
# Warmup Iteration  27: 175601.167 ops/s
# Warmup Iteration  28: 177733.752 ops/s
# Warmup Iteration  29: 143676.198 ops/s
# Warmup Iteration  30: 171761.346 ops/s
Iteration   1: 180781.873 ops/s
Iteration   2: 185145.421 ops/s
Iteration   3: 176558.204 ops/s
Iteration   4: 184077.631 ops/s
Iteration   5: 169674.491 ops/s
Iteration   6: 183839.050 ops/s
Iteration   7: 169040.343 ops/s
Iteration   8: 176779.401 ops/s
Iteration   9: 181722.932 ops/s
Iteration  10: 175258.910 ops/s
Iteration  11: 181640.852 ops/s
Iteration  12: 176253.872 ops/s
Iteration  13: 179513.912 ops/s
Iteration  14: 179165.152 ops/s
Iteration  15: 178582.287 ops/s
Iteration  16: 177898.321 ops/s
Iteration  17: 178895.728 ops/s
Iteration  18: 184661.479 ops/s
Iteration  19: 180258.518 ops/s
Iteration  20: 181911.246 ops/s
Iteration  21: 178254.608 ops/s
Iteration  22: 175606.039 ops/s
Iteration  23: 184810.736 ops/s
Iteration  24: 173563.056 ops/s
Iteration  25: 180304.062 ops/s
Iteration  26: 179982.875 ops/s
Iteration  27: 180518.886 ops/s
Iteration  28: 178408.310 ops/s
Iteration  29: 178488.305 ops/s
Iteration  30: 180353.746 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_306._Benchmark.benchmark_Cluster_306":
  179065.008 ±(99.9%) 2630.690 ops/s [Average]
  (min, avg, max) = (169040.343, 179065.008, 185145.421), stdev = 3937.493
  CI (99.9%): [176434.318, 181695.698] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_306._Benchmark.benchmark_Cluster_306  thrpt   30  179065.008 ± 2630.690  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_307._Benchmark.benchmark_Cluster_307$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_307._Benchmark.benchmark_Cluster_307

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15045.944 ops/s
# Warmup Iteration   2: 49918.518 ops/s
# Warmup Iteration   3: 64937.640 ops/s
# Warmup Iteration   4: 125531.333 ops/s
# Warmup Iteration   5: 122343.462 ops/s
# Warmup Iteration   6: 126287.549 ops/s
# Warmup Iteration   7: 126415.298 ops/s
# Warmup Iteration   8: 122150.969 ops/s
# Warmup Iteration   9: 127795.355 ops/s
# Warmup Iteration  10: 127069.082 ops/s
# Warmup Iteration  11: 123275.765 ops/s
# Warmup Iteration  12: 127526.388 ops/s
# Warmup Iteration  13: 121082.323 ops/s
# Warmup Iteration  14: 128093.530 ops/s
# Warmup Iteration  15: 122765.581 ops/s
# Warmup Iteration  16: 127232.847 ops/s
# Warmup Iteration  17: 135939.209 ops/s
# Warmup Iteration  18: 129695.520 ops/s
# Warmup Iteration  19: 135859.536 ops/s
# Warmup Iteration  20: 129853.737 ops/s
# Warmup Iteration  21: 131850.401 ops/s
# Warmup Iteration  22: 131604.899 ops/s
# Warmup Iteration  23: 128298.889 ops/s
# Warmup Iteration  24: 134406.358 ops/s
# Warmup Iteration  25: 133482.012 ops/s
# Warmup Iteration  26: 134047.622 ops/s
# Warmup Iteration  27: 130915.043 ops/s
# Warmup Iteration  28: 130912.163 ops/s
# Warmup Iteration  29: 135009.079 ops/s
# Warmup Iteration  30: 126987.828 ops/s
Iteration   1: 135333.888 ops/s
Iteration   2: 126933.161 ops/s
Iteration   3: 128615.612 ops/s
Iteration   4: 136923.739 ops/s
Iteration   5: 132881.640 ops/s
Iteration   6: 132155.139 ops/s
Iteration   7: 136489.157 ops/s
Iteration   8: 134331.661 ops/s
Iteration   9: 138443.727 ops/s
Iteration  10: 136803.530 ops/s
Iteration  11: 129232.436 ops/s
Iteration  12: 136281.068 ops/s
Iteration  13: 130465.971 ops/s
Iteration  14: 133013.368 ops/s
Iteration  15: 135034.503 ops/s
Iteration  16: 133352.276 ops/s
Iteration  17: 129906.970 ops/s
Iteration  18: 136485.247 ops/s
Iteration  19: 134299.086 ops/s
Iteration  20: 132469.300 ops/s
Iteration  21: 136278.642 ops/s
Iteration  22: 130922.596 ops/s
Iteration  23: 138139.945 ops/s
Iteration  24: 130375.291 ops/s
Iteration  25: 136327.651 ops/s
Iteration  26: 130399.028 ops/s
Iteration  27: 133505.919 ops/s
Iteration  28: 137538.408 ops/s
Iteration  29: 130925.829 ops/s
Iteration  30: 137988.128 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_307._Benchmark.benchmark_Cluster_307":
  133728.430 ±(99.9%) 2132.000 ops/s [Average]
  (min, avg, max) = (126933.161, 133728.430, 138443.727), stdev = 3191.077
  CI (99.9%): [131596.431, 135860.430] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_307._Benchmark.benchmark_Cluster_307  thrpt   30  133728.430 ± 2132.000  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_308._Benchmark.benchmark_Cluster_308$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_308._Benchmark.benchmark_Cluster_308

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14642.059 ops/s
# Warmup Iteration   2: 58714.146 ops/s
# Warmup Iteration   3: 111754.766 ops/s
# Warmup Iteration   4: 119544.999 ops/s
# Warmup Iteration   5: 125885.206 ops/s
# Warmup Iteration   6: 119775.318 ops/s
# Warmup Iteration   7: 119165.553 ops/s
# Warmup Iteration   8: 121620.219 ops/s
# Warmup Iteration   9: 121161.614 ops/s
# Warmup Iteration  10: 126931.234 ops/s
# Warmup Iteration  11: 127854.885 ops/s
# Warmup Iteration  12: 115796.149 ops/s
# Warmup Iteration  13: 123996.432 ops/s
# Warmup Iteration  14: 125084.578 ops/s
# Warmup Iteration  15: 118950.272 ops/s
# Warmup Iteration  16: 124469.006 ops/s
# Warmup Iteration  17: 129092.829 ops/s
# Warmup Iteration  18: 134303.618 ops/s
# Warmup Iteration  19: 129201.503 ops/s
# Warmup Iteration  20: 129202.878 ops/s
# Warmup Iteration  21: 131429.044 ops/s
# Warmup Iteration  22: 128858.561 ops/s
# Warmup Iteration  23: 120667.114 ops/s
# Warmup Iteration  24: 109962.209 ops/s
# Warmup Iteration  25: 131754.736 ops/s
# Warmup Iteration  26: 134189.500 ops/s
# Warmup Iteration  27: 130065.373 ops/s
# Warmup Iteration  28: 129913.651 ops/s
# Warmup Iteration  29: 133510.109 ops/s
# Warmup Iteration  30: 126967.725 ops/s
Iteration   1: 131005.796 ops/s
Iteration   2: 127460.917 ops/s
Iteration   3: 131355.270 ops/s
Iteration   4: 128917.712 ops/s
Iteration   5: 129105.998 ops/s
Iteration   6: 132109.193 ops/s
Iteration   7: 129012.690 ops/s
Iteration   8: 130390.186 ops/s
Iteration   9: 134814.487 ops/s
Iteration  10: 125872.755 ops/s
Iteration  11: 131585.632 ops/s
Iteration  12: 128266.112 ops/s
Iteration  13: 123944.432 ops/s
Iteration  14: 131186.243 ops/s
Iteration  15: 126766.806 ops/s
Iteration  16: 129632.245 ops/s
Iteration  17: 125302.846 ops/s
Iteration  18: 132347.919 ops/s
Iteration  19: 122298.910 ops/s
Iteration  20: 129889.931 ops/s
Iteration  21: 125078.770 ops/s
Iteration  22: 125036.971 ops/s
Iteration  23: 133029.324 ops/s
Iteration  24: 124098.108 ops/s
Iteration  25: 126301.936 ops/s
Iteration  26: 133451.389 ops/s
Iteration  27: 127606.785 ops/s
Iteration  28: 131879.264 ops/s
Iteration  29: 118881.868 ops/s
Iteration  30: 132073.230 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_308._Benchmark.benchmark_Cluster_308":
  128623.457 ±(99.9%) 2471.699 ops/s [Average]
  (min, avg, max) = (118881.868, 128623.457, 134814.487), stdev = 3699.523
  CI (99.9%): [126151.758, 131095.156] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_308._Benchmark.benchmark_Cluster_308  thrpt   30  128623.457 ± 2471.699  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_309._Benchmark.benchmark_Cluster_309$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_309._Benchmark.benchmark_Cluster_309

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2566.197 ops/s
# Warmup Iteration   2: 18876.285 ops/s
# Warmup Iteration   3: 34802.712 ops/s
# Warmup Iteration   4: 33628.961 ops/s
# Warmup Iteration   5: 76008.551 ops/s
# Warmup Iteration   6: 109371.706 ops/s
# Warmup Iteration   7: 100629.721 ops/s
# Warmup Iteration   8: 112118.978 ops/s
# Warmup Iteration   9: 120892.870 ops/s
# Warmup Iteration  10: 118295.261 ops/s
# Warmup Iteration  11: 112348.968 ops/s
# Warmup Iteration  12: 120797.600 ops/s
# Warmup Iteration  13: 114592.908 ops/s
# Warmup Iteration  14: 115849.507 ops/s
# Warmup Iteration  15: 122590.007 ops/s
# Warmup Iteration  16: 110757.442 ops/s
# Warmup Iteration  17: 123136.210 ops/s
# Warmup Iteration  18: 119794.219 ops/s
# Warmup Iteration  19: 116255.619 ops/s
# Warmup Iteration  20: 123811.802 ops/s
# Warmup Iteration  21: 114294.735 ops/s
# Warmup Iteration  22: 121075.228 ops/s
# Warmup Iteration  23: 115950.308 ops/s
# Warmup Iteration  24: 118870.803 ops/s
# Warmup Iteration  25: 118629.964 ops/s
# Warmup Iteration  26: 117561.008 ops/s
# Warmup Iteration  27: 115985.616 ops/s
# Warmup Iteration  28: 119243.738 ops/s
# Warmup Iteration  29: 115919.885 ops/s
# Warmup Iteration  30: 121987.972 ops/s
Iteration   1: 115631.802 ops/s
Iteration   2: 118872.619 ops/s
Iteration   3: 124740.057 ops/s
Iteration   4: 117617.068 ops/s
Iteration   5: 121821.088 ops/s
Iteration   6: 117059.325 ops/s
Iteration   7: 124160.301 ops/s
Iteration   8: 115952.958 ops/s
Iteration   9: 121223.623 ops/s
Iteration  10: 121005.152 ops/s
Iteration  11: 116374.211 ops/s
Iteration  12: 123495.966 ops/s
Iteration  13: 116310.662 ops/s
Iteration  14: 119774.328 ops/s
Iteration  15: 118795.787 ops/s
Iteration  16: 117608.250 ops/s
Iteration  17: 119449.180 ops/s
Iteration  18: 117056.661 ops/s
Iteration  19: 124774.619 ops/s
Iteration  20: 116124.184 ops/s
Iteration  21: 122103.584 ops/s
Iteration  22: 118376.837 ops/s
Iteration  23: 115921.835 ops/s
Iteration  24: 122275.026 ops/s
Iteration  25: 117131.180 ops/s
Iteration  26: 124393.389 ops/s
Iteration  27: 115972.186 ops/s
Iteration  28: 120622.919 ops/s
Iteration  29: 121326.302 ops/s
Iteration  30: 116072.879 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_309._Benchmark.benchmark_Cluster_309":
  119401.466 ±(99.9%) 2035.156 ops/s [Average]
  (min, avg, max) = (115631.802, 119401.466, 124774.619), stdev = 3046.126
  CI (99.9%): [117366.310, 121436.622] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_309._Benchmark.benchmark_Cluster_309  thrpt   30  119401.466 ± 2035.156  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_31._Benchmark.benchmark_Cluster_31$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_31._Benchmark.benchmark_Cluster_31

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9649.726 ops/s
# Warmup Iteration   2: 25918.517 ops/s
# Warmup Iteration   3: 36930.420 ops/s
# Warmup Iteration   4: 45939.547 ops/s
# Warmup Iteration   5: 96490.158 ops/s
# Warmup Iteration   6: 105052.863 ops/s
# Warmup Iteration   7: 100065.152 ops/s
# Warmup Iteration   8: 104604.252 ops/s
# Warmup Iteration   9: 104472.358 ops/s
# Warmup Iteration  10: 96688.269 ops/s
# Warmup Iteration  11: 105717.161 ops/s
# Warmup Iteration  12: 102658.800 ops/s
# Warmup Iteration  13: 97252.198 ops/s
# Warmup Iteration  14: 109597.513 ops/s
# Warmup Iteration  15: 102382.727 ops/s
# Warmup Iteration  16: 106128.017 ops/s
# Warmup Iteration  17: 108948.390 ops/s
# Warmup Iteration  18: 95089.263 ops/s
# Warmup Iteration  19: 111465.229 ops/s
# Warmup Iteration  20: 107974.948 ops/s
# Warmup Iteration  21: 114663.138 ops/s
# Warmup Iteration  22: 107674.383 ops/s
# Warmup Iteration  23: 108260.498 ops/s
# Warmup Iteration  24: 111030.136 ops/s
# Warmup Iteration  25: 112713.888 ops/s
# Warmup Iteration  26: 105532.803 ops/s
# Warmup Iteration  27: 112295.872 ops/s
# Warmup Iteration  28: 108395.917 ops/s
# Warmup Iteration  29: 110460.535 ops/s
# Warmup Iteration  30: 110075.813 ops/s
Iteration   1: 110965.127 ops/s
Iteration   2: 111529.521 ops/s
Iteration   3: 105102.857 ops/s
Iteration   4: 111719.446 ops/s
Iteration   5: 109995.297 ops/s
Iteration   6: 109561.047 ops/s
Iteration   7: 110926.654 ops/s
Iteration   8: 110076.747 ops/s
Iteration   9: 111428.860 ops/s
Iteration  10: 106007.313 ops/s
Iteration  11: 109698.506 ops/s
Iteration  12: 109562.855 ops/s
Iteration  13: 110332.276 ops/s
Iteration  14: 108216.379 ops/s
Iteration  15: 108296.435 ops/s
Iteration  16: 114928.750 ops/s
Iteration  17: 107644.856 ops/s
Iteration  18: 108984.805 ops/s
Iteration  19: 109650.495 ops/s
Iteration  20: 113485.109 ops/s
Iteration  21: 109284.880 ops/s
Iteration  22: 111104.805 ops/s
Iteration  23: 105449.011 ops/s
Iteration  24: 110053.796 ops/s
Iteration  25: 111450.201 ops/s
Iteration  26: 108949.092 ops/s
Iteration  27: 108388.805 ops/s
Iteration  28: 111897.884 ops/s
Iteration  29: 110448.414 ops/s
Iteration  30: 111240.078 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_31._Benchmark.benchmark_Cluster_31":
  109879.343 ±(99.9%) 1425.499 ops/s [Average]
  (min, avg, max) = (105102.857, 109879.343, 114928.750), stdev = 2133.620
  CI (99.9%): [108453.844, 111304.842] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_31._Benchmark.benchmark_Cluster_31  thrpt   30  109879.343 ± 1425.499  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_310._Benchmark.benchmark_Cluster_310$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_310._Benchmark.benchmark_Cluster_310

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5087.759 ops/s
# Warmup Iteration   2: 46858.147 ops/s
# Warmup Iteration   3: 66284.824 ops/s
# Warmup Iteration   4: 186134.582 ops/s
# Warmup Iteration   5: 184993.755 ops/s
# Warmup Iteration   6: 187379.865 ops/s
# Warmup Iteration   7: 195837.454 ops/s
# Warmup Iteration   8: 201892.550 ops/s
# Warmup Iteration   9: 200086.835 ops/s
# Warmup Iteration  10: 193353.703 ops/s
# Warmup Iteration  11: 194896.224 ops/s
# Warmup Iteration  12: 204950.390 ops/s
# Warmup Iteration  13: 192395.146 ops/s
# Warmup Iteration  14: 203255.815 ops/s
# Warmup Iteration  15: 186898.129 ops/s
# Warmup Iteration  16: 200804.228 ops/s
# Warmup Iteration  17: 197247.746 ops/s
# Warmup Iteration  18: 204695.381 ops/s
# Warmup Iteration  19: 207271.370 ops/s
# Warmup Iteration  20: 200438.257 ops/s
# Warmup Iteration  21: 201798.280 ops/s
# Warmup Iteration  22: 207357.571 ops/s
# Warmup Iteration  23: 201354.222 ops/s
# Warmup Iteration  24: 198303.251 ops/s
# Warmup Iteration  25: 204879.701 ops/s
# Warmup Iteration  26: 202201.420 ops/s
# Warmup Iteration  27: 204210.278 ops/s
# Warmup Iteration  28: 197825.945 ops/s
# Warmup Iteration  29: 209403.811 ops/s
# Warmup Iteration  30: 200324.220 ops/s
Iteration   1: 204108.243 ops/s
Iteration   2: 198921.813 ops/s
Iteration   3: 204660.556 ops/s
Iteration   4: 198646.328 ops/s
Iteration   5: 206275.307 ops/s
Iteration   6: 211331.521 ops/s
Iteration   7: 195838.173 ops/s
Iteration   8: 212170.398 ops/s
Iteration   9: 209061.537 ops/s
Iteration  10: 200932.446 ops/s
Iteration  11: 208422.507 ops/s
Iteration  12: 202199.927 ops/s
Iteration  13: 201445.498 ops/s
Iteration  14: 207369.468 ops/s
Iteration  15: 206786.796 ops/s
Iteration  16: 193973.141 ops/s
Iteration  17: 217838.885 ops/s
Iteration  18: 205106.539 ops/s
Iteration  19: 201555.385 ops/s
Iteration  20: 212258.969 ops/s
Iteration  21: 193156.791 ops/s
Iteration  22: 209069.056 ops/s
Iteration  23: 199510.151 ops/s
Iteration  24: 206905.264 ops/s
Iteration  25: 204270.676 ops/s
Iteration  26: 204744.229 ops/s
Iteration  27: 200167.335 ops/s
Iteration  28: 207786.576 ops/s
Iteration  29: 202521.030 ops/s
Iteration  30: 201810.376 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_310._Benchmark.benchmark_Cluster_310":
  204294.831 ±(99.9%) 3730.291 ops/s [Average]
  (min, avg, max) = (193156.791, 204294.831, 217838.885), stdev = 5583.325
  CI (99.9%): [200564.539, 208025.122] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_310._Benchmark.benchmark_Cluster_310  thrpt   30  204294.831 ± 3730.291  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_311._Benchmark.benchmark_Cluster_311$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_311._Benchmark.benchmark_Cluster_311

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 21123.875 ops/s
# Warmup Iteration   2: 87288.218 ops/s
# Warmup Iteration   3: 178327.297 ops/s
# Warmup Iteration   4: 181094.379 ops/s
# Warmup Iteration   5: 193221.802 ops/s
# Warmup Iteration   6: 190024.040 ops/s
# Warmup Iteration   7: 197539.076 ops/s
# Warmup Iteration   8: 196425.132 ops/s
# Warmup Iteration   9: 191591.171 ops/s
# Warmup Iteration  10: 201909.577 ops/s
# Warmup Iteration  11: 189932.029 ops/s
# Warmup Iteration  12: 202236.596 ops/s
# Warmup Iteration  13: 148695.397 ops/s
# Warmup Iteration  14: 197387.736 ops/s
# Warmup Iteration  15: 189041.674 ops/s
# Warmup Iteration  16: 197231.477 ops/s
# Warmup Iteration  17: 192418.940 ops/s
# Warmup Iteration  18: 185021.047 ops/s
# Warmup Iteration  19: 195313.503 ops/s
# Warmup Iteration  20: 189402.416 ops/s
# Warmup Iteration  21: 192864.548 ops/s
# Warmup Iteration  22: 203738.574 ops/s
# Warmup Iteration  23: 191501.826 ops/s
# Warmup Iteration  24: 192733.971 ops/s
# Warmup Iteration  25: 198014.520 ops/s
# Warmup Iteration  26: 189782.065 ops/s
# Warmup Iteration  27: 200766.385 ops/s
# Warmup Iteration  28: 192320.966 ops/s
# Warmup Iteration  29: 197359.579 ops/s
# Warmup Iteration  30: 193237.789 ops/s
Iteration   1: 201411.287 ops/s
Iteration   2: 194972.974 ops/s
Iteration   3: 199657.059 ops/s
Iteration   4: 183643.194 ops/s
Iteration   5: 198294.129 ops/s
Iteration   6: 196242.044 ops/s
Iteration   7: 196486.810 ops/s
Iteration   8: 199582.317 ops/s
Iteration   9: 192503.295 ops/s
Iteration  10: 198666.749 ops/s
Iteration  11: 203708.364 ops/s
Iteration  12: 190134.715 ops/s
Iteration  13: 195219.248 ops/s
Iteration  14: 200815.156 ops/s
Iteration  15: 196171.302 ops/s
Iteration  16: 186684.707 ops/s
Iteration  17: 205326.533 ops/s
Iteration  18: 191552.441 ops/s
Iteration  19: 203146.593 ops/s
Iteration  20: 194475.653 ops/s
Iteration  21: 197303.037 ops/s
Iteration  22: 193403.225 ops/s
Iteration  23: 194652.456 ops/s
Iteration  24: 205249.985 ops/s
Iteration  25: 193519.556 ops/s
Iteration  26: 200831.286 ops/s
Iteration  27: 202156.398 ops/s
Iteration  28: 193819.118 ops/s
Iteration  29: 190944.349 ops/s
Iteration  30: 199244.951 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_311._Benchmark.benchmark_Cluster_311":
  196660.631 ±(99.9%) 3486.395 ops/s [Average]
  (min, avg, max) = (183643.194, 196660.631, 205326.533), stdev = 5218.273
  CI (99.9%): [193174.236, 200147.026] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_311._Benchmark.benchmark_Cluster_311  thrpt   30  196660.631 ± 3486.395  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_312._Benchmark.benchmark_Cluster_312$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_312._Benchmark.benchmark_Cluster_312

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.697 ops/s
# Warmup Iteration   2: 3381.749 ops/s
# Warmup Iteration   3: 19472.439 ops/s
# Warmup Iteration   4: 26423.537 ops/s
# Warmup Iteration   5: 29812.315 ops/s
# Warmup Iteration   6: 25363.739 ops/s
# Warmup Iteration   7: 39529.377 ops/s
# Warmup Iteration   8: 34668.284 ops/s
# Warmup Iteration   9: 37476.108 ops/s
# Warmup Iteration  10: 40446.927 ops/s
# Warmup Iteration  11: 50100.478 ops/s
# Warmup Iteration  12: 43561.894 ops/s
# Warmup Iteration  13: 38050.061 ops/s
# Warmup Iteration  14: 116097.558 ops/s
# Warmup Iteration  15: 114720.535 ops/s
# Warmup Iteration  16: 121398.452 ops/s
# Warmup Iteration  17: 112880.914 ops/s
# Warmup Iteration  18: 120494.363 ops/s
# Warmup Iteration  19: 116105.997 ops/s
# Warmup Iteration  20: 121916.876 ops/s
# Warmup Iteration  21: 115044.127 ops/s
# Warmup Iteration  22: 116683.063 ops/s
# Warmup Iteration  23: 117985.089 ops/s
# Warmup Iteration  24: 121315.000 ops/s
# Warmup Iteration  25: 119151.953 ops/s
# Warmup Iteration  26: 115503.701 ops/s
# Warmup Iteration  27: 115216.072 ops/s
# Warmup Iteration  28: 119582.024 ops/s
# Warmup Iteration  29: 113455.792 ops/s
# Warmup Iteration  30: 116078.301 ops/s
Iteration   1: 114487.263 ops/s
Iteration   2: 118044.212 ops/s
Iteration   3: 114962.549 ops/s
Iteration   4: 111506.184 ops/s
Iteration   5: 117189.841 ops/s
Iteration   6: 118086.952 ops/s
Iteration   7: 120356.976 ops/s
Iteration   8: 114494.609 ops/s
Iteration   9: 119876.145 ops/s
Iteration  10: 118030.142 ops/s
Iteration  11: 117158.007 ops/s
Iteration  12: 120307.341 ops/s
Iteration  13: 113830.485 ops/s
Iteration  14: 118660.728 ops/s
Iteration  15: 113673.806 ops/s
Iteration  16: 116436.499 ops/s
Iteration  17: 118208.482 ops/s
Iteration  18: 114834.726 ops/s
Iteration  19: 122514.510 ops/s
Iteration  20: 113105.944 ops/s
Iteration  21: 119742.176 ops/s
Iteration  22: 119102.111 ops/s
Iteration  23: 117846.487 ops/s
Iteration  24: 120110.826 ops/s
Iteration  25: 112715.589 ops/s
Iteration  26: 121290.470 ops/s
Iteration  27: 116348.434 ops/s
Iteration  28: 113889.878 ops/s
Iteration  29: 120252.679 ops/s
Iteration  30: 113339.243 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_312._Benchmark.benchmark_Cluster_312":
  117013.443 ±(99.9%) 1961.156 ops/s [Average]
  (min, avg, max) = (111506.184, 117013.443, 122514.510), stdev = 2935.366
  CI (99.9%): [115052.287, 118974.599] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_312._Benchmark.benchmark_Cluster_312  thrpt   30  117013.443 ± 1961.156  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_313._Benchmark.benchmark_Cluster_313$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_313._Benchmark.benchmark_Cluster_313

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2703.109 ops/s
# Warmup Iteration   2: 23532.828 ops/s
# Warmup Iteration   3: 36767.031 ops/s
# Warmup Iteration   4: 47467.991 ops/s
# Warmup Iteration   5: 83467.473 ops/s
# Warmup Iteration   6: 119808.289 ops/s
# Warmup Iteration   7: 86026.983 ops/s
# Warmup Iteration   8: 128940.889 ops/s
# Warmup Iteration   9: 126023.056 ops/s
# Warmup Iteration  10: 125497.026 ops/s
# Warmup Iteration  11: 131446.184 ops/s
# Warmup Iteration  12: 125725.991 ops/s
# Warmup Iteration  13: 125966.444 ops/s
# Warmup Iteration  14: 126538.921 ops/s
# Warmup Iteration  15: 131311.752 ops/s
# Warmup Iteration  16: 125102.945 ops/s
# Warmup Iteration  17: 126737.461 ops/s
# Warmup Iteration  18: 135206.462 ops/s
# Warmup Iteration  19: 127684.128 ops/s
# Warmup Iteration  20: 130283.643 ops/s
# Warmup Iteration  21: 135654.931 ops/s
# Warmup Iteration  22: 128042.468 ops/s
# Warmup Iteration  23: 127272.472 ops/s
# Warmup Iteration  24: 129401.454 ops/s
# Warmup Iteration  25: 131674.028 ops/s
# Warmup Iteration  26: 130824.163 ops/s
# Warmup Iteration  27: 129672.328 ops/s
# Warmup Iteration  28: 128776.309 ops/s
# Warmup Iteration  29: 127645.950 ops/s
# Warmup Iteration  30: 134471.752 ops/s
Iteration   1: 124945.049 ops/s
Iteration   2: 137235.639 ops/s
Iteration   3: 128018.343 ops/s
Iteration   4: 129011.873 ops/s
Iteration   5: 133453.216 ops/s
Iteration   6: 126511.984 ops/s
Iteration   7: 134872.875 ops/s
Iteration   8: 128574.732 ops/s
Iteration   9: 129142.036 ops/s
Iteration  10: 131200.164 ops/s
Iteration  11: 131752.993 ops/s
Iteration  12: 134613.507 ops/s
Iteration  13: 133642.111 ops/s
Iteration  14: 130123.516 ops/s
Iteration  15: 128375.534 ops/s
Iteration  16: 132824.415 ops/s
Iteration  17: 128218.561 ops/s
Iteration  18: 136460.732 ops/s
Iteration  19: 133723.943 ops/s
Iteration  20: 126690.232 ops/s
Iteration  21: 132437.043 ops/s
Iteration  22: 126326.654 ops/s
Iteration  23: 136293.047 ops/s
Iteration  24: 127231.713 ops/s
Iteration  25: 130569.447 ops/s
Iteration  26: 128913.269 ops/s
Iteration  27: 127040.727 ops/s
Iteration  28: 129627.690 ops/s
Iteration  29: 128029.385 ops/s
Iteration  30: 128278.224 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_313._Benchmark.benchmark_Cluster_313":
  130471.288 ±(99.9%) 2254.201 ops/s [Average]
  (min, avg, max) = (124945.049, 130471.288, 137235.639), stdev = 3373.983
  CI (99.9%): [128217.087, 132725.490] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_313._Benchmark.benchmark_Cluster_313  thrpt   30  130471.288 ± 2254.201  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_314._Benchmark.benchmark_Cluster_314$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_314._Benchmark.benchmark_Cluster_314

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1061.644 ops/s
# Warmup Iteration   2: 14732.564 ops/s
# Warmup Iteration   3: 31090.289 ops/s
# Warmup Iteration   4: 30295.369 ops/s
# Warmup Iteration   5: 36707.931 ops/s
# Warmup Iteration   6: 36328.694 ops/s
# Warmup Iteration   7: 39779.452 ops/s
# Warmup Iteration   8: 87999.078 ops/s
# Warmup Iteration   9: 95551.969 ops/s
# Warmup Iteration  10: 97814.039 ops/s
# Warmup Iteration  11: 90615.128 ops/s
# Warmup Iteration  12: 93987.804 ops/s
# Warmup Iteration  13: 97643.141 ops/s
# Warmup Iteration  14: 97277.740 ops/s
# Warmup Iteration  15: 96131.826 ops/s
# Warmup Iteration  16: 89442.275 ops/s
# Warmup Iteration  17: 95751.974 ops/s
# Warmup Iteration  18: 95661.824 ops/s
# Warmup Iteration  19: 99670.374 ops/s
# Warmup Iteration  20: 100023.216 ops/s
# Warmup Iteration  21: 96360.765 ops/s
# Warmup Iteration  22: 98365.247 ops/s
# Warmup Iteration  23: 94468.266 ops/s
# Warmup Iteration  24: 96338.158 ops/s
# Warmup Iteration  25: 98749.098 ops/s
# Warmup Iteration  26: 92193.460 ops/s
# Warmup Iteration  27: 98124.655 ops/s
# Warmup Iteration  28: 93609.852 ops/s
# Warmup Iteration  29: 95112.270 ops/s
# Warmup Iteration  30: 95500.897 ops/s
Iteration   1: 99333.765 ops/s
Iteration   2: 95839.805 ops/s
Iteration   3: 98124.226 ops/s
Iteration   4: 90017.662 ops/s
Iteration   5: 96740.364 ops/s
Iteration   6: 98735.867 ops/s
Iteration   7: 95412.898 ops/s
Iteration   8: 98196.846 ops/s
Iteration   9: 100679.656 ops/s
Iteration  10: 95593.271 ops/s
Iteration  11: 99091.541 ops/s
Iteration  12: 94151.494 ops/s
Iteration  13: 97980.220 ops/s
Iteration  14: 99129.280 ops/s
Iteration  15: 90823.987 ops/s
Iteration  16: 99420.779 ops/s
Iteration  17: 98055.558 ops/s
Iteration  18: 93524.442 ops/s
Iteration  19: 97149.059 ops/s
Iteration  20: 97651.166 ops/s
Iteration  21: 99228.791 ops/s
Iteration  22: 95935.948 ops/s
Iteration  23: 95500.807 ops/s
Iteration  24: 99269.076 ops/s
Iteration  25: 96072.172 ops/s
Iteration  26: 102648.617 ops/s
Iteration  27: 96421.721 ops/s
Iteration  28: 97237.603 ops/s
Iteration  29: 97488.482 ops/s
Iteration  30: 95072.524 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_314._Benchmark.benchmark_Cluster_314":
  97017.588 ±(99.9%) 1778.883 ops/s [Average]
  (min, avg, max) = (90017.662, 97017.588, 102648.617), stdev = 2662.548
  CI (99.9%): [95238.705, 98796.470] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_314._Benchmark.benchmark_Cluster_314  thrpt   30  97017.588 ± 1778.883  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_315._Benchmark.benchmark_Cluster_315$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_315._Benchmark.benchmark_Cluster_315

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2485.810 ops/s
# Warmup Iteration   2: 16978.052 ops/s
# Warmup Iteration   3: 20847.133 ops/s
# Warmup Iteration   4: 30997.543 ops/s
# Warmup Iteration   5: 27410.485 ops/s
# Warmup Iteration   6: 22906.727 ops/s
# Warmup Iteration   7: 32902.673 ops/s
# Warmup Iteration   8: 77539.502 ops/s
# Warmup Iteration   9: 93542.237 ops/s
# Warmup Iteration  10: 88173.657 ops/s
# Warmup Iteration  11: 97673.403 ops/s
# Warmup Iteration  12: 87398.549 ops/s
# Warmup Iteration  13: 91409.734 ops/s
# Warmup Iteration  14: 83826.806 ops/s
# Warmup Iteration  15: 87857.741 ops/s
# Warmup Iteration  16: 84226.830 ops/s
# Warmup Iteration  17: 82962.816 ops/s
# Warmup Iteration  18: 90487.600 ops/s
# Warmup Iteration  19: 89067.112 ops/s
# Warmup Iteration  20: 88773.231 ops/s
# Warmup Iteration  21: 92273.553 ops/s
# Warmup Iteration  22: 83478.207 ops/s
# Warmup Iteration  23: 91015.972 ops/s
# Warmup Iteration  24: 95087.797 ops/s
# Warmup Iteration  25: 89724.602 ops/s
# Warmup Iteration  26: 86660.418 ops/s
# Warmup Iteration  27: 91282.122 ops/s
# Warmup Iteration  28: 81704.088 ops/s
# Warmup Iteration  29: 97263.679 ops/s
# Warmup Iteration  30: 91277.890 ops/s
Iteration   1: 84683.316 ops/s
Iteration   2: 88955.242 ops/s
Iteration   3: 93767.217 ops/s
Iteration   4: 89098.328 ops/s
Iteration   5: 94851.413 ops/s
Iteration   6: 93225.137 ops/s
Iteration   7: 99342.044 ops/s
Iteration   8: 89163.279 ops/s
Iteration   9: 83741.351 ops/s
Iteration  10: 87812.920 ops/s
Iteration  11: 91819.598 ops/s
Iteration  12: 77637.778 ops/s
Iteration  13: 93257.817 ops/s
Iteration  14: 95401.559 ops/s
Iteration  15: 94749.950 ops/s
Iteration  16: 87560.543 ops/s
Iteration  17: 93685.695 ops/s
Iteration  18: 81591.914 ops/s
Iteration  19: 84539.591 ops/s
Iteration  20: 85617.149 ops/s
Iteration  21: 98467.941 ops/s
Iteration  22: 92168.458 ops/s
Iteration  23: 88154.086 ops/s
Iteration  24: 92577.610 ops/s
Iteration  25: 91835.887 ops/s
Iteration  26: 91292.750 ops/s
Iteration  27: 87333.941 ops/s
Iteration  28: 92781.715 ops/s
Iteration  29: 88910.979 ops/s
Iteration  30: 91933.493 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_315._Benchmark.benchmark_Cluster_315":
  90198.623 ±(99.9%) 3230.617 ops/s [Average]
  (min, avg, max) = (77637.778, 90198.623, 99342.044), stdev = 4835.435
  CI (99.9%): [86968.007, 93429.240] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_315._Benchmark.benchmark_Cluster_315  thrpt   30  90198.623 ± 3230.617  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_316._Benchmark.benchmark_Cluster_316$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_316._Benchmark.benchmark_Cluster_316

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 25834.722 ops/s
# Warmup Iteration   2: 86809.032 ops/s
# Warmup Iteration   3: 157714.264 ops/s
# Warmup Iteration   4: 230380.443 ops/s
# Warmup Iteration   5: 235806.621 ops/s
# Warmup Iteration   6: 237984.214 ops/s
# Warmup Iteration   7: 235663.853 ops/s
# Warmup Iteration   8: 240374.355 ops/s
# Warmup Iteration   9: 227034.254 ops/s
# Warmup Iteration  10: 237963.611 ops/s
# Warmup Iteration  11: 229390.448 ops/s
# Warmup Iteration  12: 227227.166 ops/s
# Warmup Iteration  13: 245484.068 ops/s
# Warmup Iteration  14: 235332.453 ops/s
# Warmup Iteration  15: 242381.607 ops/s
# Warmup Iteration  16: 237849.153 ops/s
# Warmup Iteration  17: 240914.949 ops/s
# Warmup Iteration  18: 254971.681 ops/s
# Warmup Iteration  19: 246736.583 ops/s
# Warmup Iteration  20: 251456.161 ops/s
# Warmup Iteration  21: 234363.739 ops/s
# Warmup Iteration  22: 246097.204 ops/s
# Warmup Iteration  23: 259426.779 ops/s
# Warmup Iteration  24: 241058.338 ops/s
# Warmup Iteration  25: 252744.710 ops/s
# Warmup Iteration  26: 243933.485 ops/s
# Warmup Iteration  27: 245327.824 ops/s
# Warmup Iteration  28: 256030.291 ops/s
# Warmup Iteration  29: 241156.133 ops/s
# Warmup Iteration  30: 249384.712 ops/s
Iteration   1: 244395.196 ops/s
Iteration   2: 235140.532 ops/s
Iteration   3: 254816.497 ops/s
Iteration   4: 246432.507 ops/s
Iteration   5: 245558.282 ops/s
Iteration   6: 264456.916 ops/s
Iteration   7: 232310.889 ops/s
Iteration   8: 248305.576 ops/s
Iteration   9: 262508.973 ops/s
Iteration  10: 246186.206 ops/s
Iteration  11: 260717.040 ops/s
Iteration  12: 245384.187 ops/s
Iteration  13: 256178.833 ops/s
Iteration  14: 245781.235 ops/s
Iteration  15: 258847.395 ops/s
Iteration  16: 247672.291 ops/s
Iteration  17: 254243.156 ops/s
Iteration  18: 250714.188 ops/s
Iteration  19: 261420.717 ops/s
Iteration  20: 247173.409 ops/s
Iteration  21: 256893.934 ops/s
Iteration  22: 259132.137 ops/s
Iteration  23: 249679.084 ops/s
Iteration  24: 246079.439 ops/s
Iteration  25: 252641.157 ops/s
Iteration  26: 229705.074 ops/s
Iteration  27: 229363.469 ops/s
Iteration  28: 253027.885 ops/s
Iteration  29: 249105.262 ops/s
Iteration  30: 253133.188 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_316._Benchmark.benchmark_Cluster_316":
  249566.822 ±(99.9%) 6130.536 ops/s [Average]
  (min, avg, max) = (229363.469, 249566.822, 264456.916), stdev = 9175.898
  CI (99.9%): [243436.286, 255697.358] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_316._Benchmark.benchmark_Cluster_316  thrpt   30  249566.822 ± 6130.536  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_317._Benchmark.benchmark_Cluster_317$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_317._Benchmark.benchmark_Cluster_317

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.822 ops/s
# Warmup Iteration   2: 2131.086 ops/s
# Warmup Iteration   3: 20128.315 ops/s
# Warmup Iteration   4: 27450.962 ops/s
# Warmup Iteration   5: 25233.156 ops/s
# Warmup Iteration   6: 41493.588 ops/s
# Warmup Iteration   7: 35680.573 ops/s
# Warmup Iteration   8: 38779.573 ops/s
# Warmup Iteration   9: 45093.491 ops/s
# Warmup Iteration  10: 41174.705 ops/s
# Warmup Iteration  11: 42835.222 ops/s
# Warmup Iteration  12: 42860.226 ops/s
# Warmup Iteration  13: 36428.438 ops/s
# Warmup Iteration  14: 60055.127 ops/s
# Warmup Iteration  15: 95159.189 ops/s
# Warmup Iteration  16: 97175.245 ops/s
# Warmup Iteration  17: 86875.545 ops/s
# Warmup Iteration  18: 92844.586 ops/s
# Warmup Iteration  19: 100254.900 ops/s
# Warmup Iteration  20: 98643.507 ops/s
# Warmup Iteration  21: 97390.271 ops/s
# Warmup Iteration  22: 98592.024 ops/s
# Warmup Iteration  23: 102213.579 ops/s
# Warmup Iteration  24: 100554.657 ops/s
# Warmup Iteration  25: 98068.549 ops/s
# Warmup Iteration  26: 104731.703 ops/s
# Warmup Iteration  27: 95501.337 ops/s
# Warmup Iteration  28: 98822.120 ops/s
# Warmup Iteration  29: 103134.650 ops/s
# Warmup Iteration  30: 97687.887 ops/s
Iteration   1: 104897.743 ops/s
Iteration   2: 96075.129 ops/s
Iteration   3: 98080.410 ops/s
Iteration   4: 102738.283 ops/s
Iteration   5: 98284.572 ops/s
Iteration   6: 102760.432 ops/s
Iteration   7: 97709.759 ops/s
Iteration   8: 99408.303 ops/s
Iteration   9: 99951.832 ops/s
Iteration  10: 97428.590 ops/s
Iteration  11: 102661.417 ops/s
Iteration  12: 99569.035 ops/s
Iteration  13: 101848.891 ops/s
Iteration  14: 98613.684 ops/s
Iteration  15: 98181.503 ops/s
Iteration  16: 102836.558 ops/s
Iteration  17: 99704.119 ops/s
Iteration  18: 102348.159 ops/s
Iteration  19: 97599.372 ops/s
Iteration  20: 103101.216 ops/s
Iteration  21: 99232.645 ops/s
Iteration  22: 97971.813 ops/s
Iteration  23: 105475.735 ops/s
Iteration  24: 96555.624 ops/s
Iteration  25: 101540.797 ops/s
Iteration  26: 99774.580 ops/s
Iteration  27: 99436.374 ops/s
Iteration  28: 101963.284 ops/s
Iteration  29: 100900.754 ops/s
Iteration  30: 101505.886 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_317._Benchmark.benchmark_Cluster_317":
  100271.883 ±(99.9%) 1628.523 ops/s [Average]
  (min, avg, max) = (96075.129, 100271.883, 105475.735), stdev = 2437.497
  CI (99.9%): [98643.361, 101900.406] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_317._Benchmark.benchmark_Cluster_317  thrpt   30  100271.883 ± 1628.523  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_318._Benchmark.benchmark_Cluster_318$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_318._Benchmark.benchmark_Cluster_318

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17448.252 ops/s
# Warmup Iteration   2: 47138.660 ops/s
# Warmup Iteration   3: 80821.196 ops/s
# Warmup Iteration   4: 101005.628 ops/s
# Warmup Iteration   5: 106082.015 ops/s
# Warmup Iteration   6: 103722.580 ops/s
# Warmup Iteration   7: 106183.329 ops/s
# Warmup Iteration   8: 97674.729 ops/s
# Warmup Iteration   9: 106268.587 ops/s
# Warmup Iteration  10: 100702.288 ops/s
# Warmup Iteration  11: 99704.829 ops/s
# Warmup Iteration  12: 109072.343 ops/s
# Warmup Iteration  13: 101916.709 ops/s
# Warmup Iteration  14: 106690.740 ops/s
# Warmup Iteration  15: 103075.823 ops/s
# Warmup Iteration  16: 108386.040 ops/s
# Warmup Iteration  17: 107193.379 ops/s
# Warmup Iteration  18: 108358.197 ops/s
# Warmup Iteration  19: 112687.786 ops/s
# Warmup Iteration  20: 104991.976 ops/s
# Warmup Iteration  21: 109233.536 ops/s
# Warmup Iteration  22: 106463.404 ops/s
# Warmup Iteration  23: 111434.122 ops/s
# Warmup Iteration  24: 107408.708 ops/s
# Warmup Iteration  25: 104197.714 ops/s
# Warmup Iteration  26: 111456.495 ops/s
# Warmup Iteration  27: 109087.477 ops/s
# Warmup Iteration  28: 110073.604 ops/s
# Warmup Iteration  29: 112127.245 ops/s
# Warmup Iteration  30: 105588.225 ops/s
Iteration   1: 110350.726 ops/s
Iteration   2: 108168.711 ops/s
Iteration   3: 107346.471 ops/s
Iteration   4: 106014.252 ops/s
Iteration   5: 108530.940 ops/s
Iteration   6: 104534.333 ops/s
Iteration   7: 109518.728 ops/s
Iteration   8: 111550.308 ops/s
Iteration   9: 108729.018 ops/s
Iteration  10: 113080.528 ops/s
Iteration  11: 108415.400 ops/s
Iteration  12: 108735.638 ops/s
Iteration  13: 114796.048 ops/s
Iteration  14: 109203.241 ops/s
Iteration  15: 106872.106 ops/s
Iteration  16: 111757.061 ops/s
Iteration  17: 112368.153 ops/s
Iteration  18: 105213.753 ops/s
Iteration  19: 112117.350 ops/s
Iteration  20: 89691.975 ops/s
Iteration  21: 105999.685 ops/s
Iteration  22: 106433.910 ops/s
Iteration  23: 111683.288 ops/s
Iteration  24: 108535.930 ops/s
Iteration  25: 105968.204 ops/s
Iteration  26: 109537.922 ops/s
Iteration  27: 113838.424 ops/s
Iteration  28: 108454.520 ops/s
Iteration  29: 114244.390 ops/s
Iteration  30: 108105.458 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_318._Benchmark.benchmark_Cluster_318":
  108659.882 ±(99.9%) 3021.758 ops/s [Average]
  (min, avg, max) = (89691.975, 108659.882, 114796.048), stdev = 4522.826
  CI (99.9%): [105638.124, 111681.641] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_318._Benchmark.benchmark_Cluster_318  thrpt   30  108659.882 ± 3021.758  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_319._Benchmark.benchmark_Cluster_319$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_319._Benchmark.benchmark_Cluster_319

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8164.140 ops/s
# Warmup Iteration   2: 33410.658 ops/s
# Warmup Iteration   3: 55576.324 ops/s
# Warmup Iteration   4: 88664.839 ops/s
# Warmup Iteration   5: 105802.113 ops/s
# Warmup Iteration   6: 98862.573 ops/s
# Warmup Iteration   7: 101745.281 ops/s
# Warmup Iteration   8: 104698.045 ops/s
# Warmup Iteration   9: 104908.127 ops/s
# Warmup Iteration  10: 103761.327 ops/s
# Warmup Iteration  11: 105687.550 ops/s
# Warmup Iteration  12: 105653.990 ops/s
# Warmup Iteration  13: 111637.928 ops/s
# Warmup Iteration  14: 102663.441 ops/s
# Warmup Iteration  15: 110239.436 ops/s
# Warmup Iteration  16: 111518.546 ops/s
# Warmup Iteration  17: 110236.242 ops/s
# Warmup Iteration  18: 107376.470 ops/s
# Warmup Iteration  19: 113299.010 ops/s
# Warmup Iteration  20: 107828.307 ops/s
# Warmup Iteration  21: 111887.544 ops/s
# Warmup Iteration  22: 108405.963 ops/s
# Warmup Iteration  23: 112079.735 ops/s
# Warmup Iteration  24: 113456.335 ops/s
# Warmup Iteration  25: 111747.631 ops/s
# Warmup Iteration  26: 106620.537 ops/s
# Warmup Iteration  27: 111867.599 ops/s
# Warmup Iteration  28: 112887.122 ops/s
# Warmup Iteration  29: 108141.308 ops/s
# Warmup Iteration  30: 114372.712 ops/s
Iteration   1: 108880.088 ops/s
Iteration   2: 109908.441 ops/s
Iteration   3: 114124.703 ops/s
Iteration   4: 110093.258 ops/s
Iteration   5: 109389.523 ops/s
Iteration   6: 107836.083 ops/s
Iteration   7: 116577.621 ops/s
Iteration   8: 113342.562 ops/s
Iteration   9: 110203.594 ops/s
Iteration  10: 113473.127 ops/s
Iteration  11: 108795.985 ops/s
Iteration  12: 110175.885 ops/s
Iteration  13: 115249.278 ops/s
Iteration  14: 111043.730 ops/s
Iteration  15: 107000.617 ops/s
Iteration  16: 113734.744 ops/s
Iteration  17: 106732.454 ops/s
Iteration  18: 113013.432 ops/s
Iteration  19: 111359.438 ops/s
Iteration  20: 111197.022 ops/s
Iteration  21: 108426.071 ops/s
Iteration  22: 109353.993 ops/s
Iteration  23: 115509.106 ops/s
Iteration  24: 109698.619 ops/s
Iteration  25: 115470.482 ops/s
Iteration  26: 107687.698 ops/s
Iteration  27: 113430.475 ops/s
Iteration  28: 111431.600 ops/s
Iteration  29: 108770.255 ops/s
Iteration  30: 113075.289 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_319._Benchmark.benchmark_Cluster_319":
  111166.172 ±(99.9%) 1834.268 ops/s [Average]
  (min, avg, max) = (106732.454, 111166.172, 116577.621), stdev = 2745.446
  CI (99.9%): [109331.905, 113000.440] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_319._Benchmark.benchmark_Cluster_319  thrpt   30  111166.172 ± 1834.268  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_32._Benchmark.benchmark_Cluster_32$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_32._Benchmark.benchmark_Cluster_32

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8597.450 ops/s
# Warmup Iteration   2: 28952.921 ops/s
# Warmup Iteration   3: 38075.114 ops/s
# Warmup Iteration   4: 63518.972 ops/s
# Warmup Iteration   5: 81760.162 ops/s
# Warmup Iteration   6: 91905.004 ops/s
# Warmup Iteration   7: 91892.499 ops/s
# Warmup Iteration   8: 95224.165 ops/s
# Warmup Iteration   9: 89698.399 ops/s
# Warmup Iteration  10: 95724.486 ops/s
# Warmup Iteration  11: 91073.304 ops/s
# Warmup Iteration  12: 88869.043 ops/s
# Warmup Iteration  13: 90323.179 ops/s
# Warmup Iteration  14: 92432.204 ops/s
# Warmup Iteration  15: 92828.760 ops/s
# Warmup Iteration  16: 94898.755 ops/s
# Warmup Iteration  17: 95095.306 ops/s
# Warmup Iteration  18: 95504.165 ops/s
# Warmup Iteration  19: 95383.974 ops/s
# Warmup Iteration  20: 95477.240 ops/s
# Warmup Iteration  21: 93408.234 ops/s
# Warmup Iteration  22: 96300.270 ops/s
# Warmup Iteration  23: 93977.641 ops/s
# Warmup Iteration  24: 92101.439 ops/s
# Warmup Iteration  25: 96737.658 ops/s
# Warmup Iteration  26: 94065.088 ops/s
# Warmup Iteration  27: 90539.365 ops/s
# Warmup Iteration  28: 98651.416 ops/s
# Warmup Iteration  29: 92544.780 ops/s
# Warmup Iteration  30: 96550.842 ops/s
Iteration   1: 94596.559 ops/s
Iteration   2: 94363.751 ops/s
Iteration   3: 96904.734 ops/s
Iteration   4: 90425.259 ops/s
Iteration   5: 94172.966 ops/s
Iteration   6: 95362.840 ops/s
Iteration   7: 95148.999 ops/s
Iteration   8: 95162.137 ops/s
Iteration   9: 92259.873 ops/s
Iteration  10: 96192.562 ops/s
Iteration  11: 99501.623 ops/s
Iteration  12: 94196.904 ops/s
Iteration  13: 97385.543 ops/s
Iteration  14: 92924.711 ops/s
Iteration  15: 76357.958 ops/s
Iteration  16: 98082.627 ops/s
Iteration  17: 91824.029 ops/s
Iteration  18: 98395.699 ops/s
Iteration  19: 95272.797 ops/s
Iteration  20: 93047.517 ops/s
Iteration  21: 98074.246 ops/s
Iteration  22: 92245.866 ops/s
Iteration  23: 96254.102 ops/s
Iteration  24: 98175.748 ops/s
Iteration  25: 90508.250 ops/s
Iteration  26: 98673.434 ops/s
Iteration  27: 93243.060 ops/s
Iteration  28: 91289.783 ops/s
Iteration  29: 95586.462 ops/s
Iteration  30: 96678.036 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_32._Benchmark.benchmark_Cluster_32":
  94410.269 ±(99.9%) 2829.947 ops/s [Average]
  (min, avg, max) = (76357.958, 94410.269, 99501.623), stdev = 4235.732
  CI (99.9%): [91580.322, 97240.216] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_32._Benchmark.benchmark_Cluster_32  thrpt   30  94410.269 ± 2829.947  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_320._Benchmark.benchmark_Cluster_320$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_320._Benchmark.benchmark_Cluster_320

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8865.358 ops/s
# Warmup Iteration   2: 35929.656 ops/s
# Warmup Iteration   3: 117426.936 ops/s
# Warmup Iteration   4: 115930.134 ops/s
# Warmup Iteration   5: 116432.167 ops/s
# Warmup Iteration   6: 129253.241 ops/s
# Warmup Iteration   7: 128395.521 ops/s
# Warmup Iteration   8: 133283.422 ops/s
# Warmup Iteration   9: 128377.152 ops/s
# Warmup Iteration  10: 131477.028 ops/s
# Warmup Iteration  11: 126203.449 ops/s
# Warmup Iteration  12: 136053.345 ops/s
# Warmup Iteration  13: 125847.621 ops/s
# Warmup Iteration  14: 131438.675 ops/s
# Warmup Iteration  15: 129340.103 ops/s
# Warmup Iteration  16: 127231.197 ops/s
# Warmup Iteration  17: 136839.332 ops/s
# Warmup Iteration  18: 139217.660 ops/s
# Warmup Iteration  19: 130389.099 ops/s
# Warmup Iteration  20: 136257.433 ops/s
# Warmup Iteration  21: 134465.515 ops/s
# Warmup Iteration  22: 135098.646 ops/s
# Warmup Iteration  23: 136238.847 ops/s
# Warmup Iteration  24: 129466.881 ops/s
# Warmup Iteration  25: 140921.185 ops/s
# Warmup Iteration  26: 134130.455 ops/s
# Warmup Iteration  27: 139301.405 ops/s
# Warmup Iteration  28: 140530.029 ops/s
# Warmup Iteration  29: 130127.750 ops/s
# Warmup Iteration  30: 137373.956 ops/s
Iteration   1: 128641.990 ops/s
Iteration   2: 139897.185 ops/s
Iteration   3: 136236.844 ops/s
Iteration   4: 131895.709 ops/s
Iteration   5: 138246.169 ops/s
Iteration   6: 135420.336 ops/s
Iteration   7: 140179.650 ops/s
Iteration   8: 133956.891 ops/s
Iteration   9: 136165.248 ops/s
Iteration  10: 135900.651 ops/s
Iteration  11: 136320.978 ops/s
Iteration  12: 139950.670 ops/s
Iteration  13: 131291.891 ops/s
Iteration  14: 135310.933 ops/s
Iteration  15: 135439.002 ops/s
Iteration  16: 138970.394 ops/s
Iteration  17: 133008.452 ops/s
Iteration  18: 143613.614 ops/s
Iteration  19: 138558.597 ops/s
Iteration  20: 137516.882 ops/s
Iteration  21: 140999.734 ops/s
Iteration  22: 130756.433 ops/s
Iteration  23: 136705.250 ops/s
Iteration  24: 135874.589 ops/s
Iteration  25: 135969.523 ops/s
Iteration  26: 140537.557 ops/s
Iteration  27: 132959.938 ops/s
Iteration  28: 137184.037 ops/s
Iteration  29: 134199.951 ops/s
Iteration  30: 135856.652 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_320._Benchmark.benchmark_Cluster_320":
  136252.192 ±(99.9%) 2226.752 ops/s [Average]
  (min, avg, max) = (128641.990, 136252.192, 143613.614), stdev = 3332.898
  CI (99.9%): [134025.440, 138478.944] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_320._Benchmark.benchmark_Cluster_320  thrpt   30  136252.192 ± 2226.752  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_321._Benchmark.benchmark_Cluster_321$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_321._Benchmark.benchmark_Cluster_321

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6160.772 ops/s
# Warmup Iteration   2: 20100.642 ops/s
# Warmup Iteration   3: 14299.735 ops/s
# Warmup Iteration   4: 15611.596 ops/s
# Warmup Iteration   5: 15140.159 ops/s
# Warmup Iteration   6: 15048.197 ops/s
# Warmup Iteration   7: 16814.305 ops/s
# Warmup Iteration   8: 14631.318 ops/s
# Warmup Iteration   9: 15867.164 ops/s
# Warmup Iteration  10: 15131.733 ops/s
# Warmup Iteration  11: 15755.538 ops/s
# Warmup Iteration  12: 15358.852 ops/s
# Warmup Iteration  13: 15631.099 ops/s
# Warmup Iteration  14: 16006.116 ops/s
# Warmup Iteration  15: 15707.258 ops/s
# Warmup Iteration  16: 15015.565 ops/s
# Warmup Iteration  17: 15609.673 ops/s
# Warmup Iteration  18: 16106.704 ops/s
# Warmup Iteration  19: 14964.117 ops/s
# Warmup Iteration  20: 15886.626 ops/s
# Warmup Iteration  21: 15290.848 ops/s
# Warmup Iteration  22: 15756.828 ops/s
# Warmup Iteration  23: 15095.267 ops/s
# Warmup Iteration  24: 15140.696 ops/s
# Warmup Iteration  25: 15539.187 ops/s
# Warmup Iteration  26: 17247.586 ops/s
# Warmup Iteration  27: 15642.202 ops/s
# Warmup Iteration  28: 15259.223 ops/s
# Warmup Iteration  29: 15056.673 ops/s
# Warmup Iteration  30: 15523.137 ops/s
Iteration   1: 15288.458 ops/s
Iteration   2: 14228.783 ops/s
Iteration   3: 15433.423 ops/s
Iteration   4: 15266.149 ops/s
Iteration   5: 14911.135 ops/s
Iteration   6: 15691.030 ops/s
Iteration   7: 15563.765 ops/s
Iteration   8: 15332.883 ops/s
Iteration   9: 15481.410 ops/s
Iteration  10: 17344.615 ops/s
Iteration  11: 15284.066 ops/s
Iteration  12: 15639.848 ops/s
Iteration  13: 15131.335 ops/s
Iteration  14: 15529.781 ops/s
Iteration  15: 15470.543 ops/s
Iteration  16: 16062.455 ops/s
Iteration  17: 16065.028 ops/s
Iteration  18: 15895.315 ops/s
Iteration  19: 15299.882 ops/s
Iteration  20: 15799.083 ops/s
Iteration  21: 15880.915 ops/s
Iteration  22: 15945.458 ops/s
Iteration  23: 16212.650 ops/s
Iteration  24: 15229.138 ops/s
Iteration  25: 15727.042 ops/s
Iteration  26: 15122.498 ops/s
Iteration  27: 15170.640 ops/s
Iteration  28: 15719.652 ops/s
Iteration  29: 16059.580 ops/s
Iteration  30: 15414.755 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_321._Benchmark.benchmark_Cluster_321":
  15573.377 ±(99.9%) 353.047 ops/s [Average]
  (min, avg, max) = (14228.783, 15573.377, 17344.615), stdev = 528.424
  CI (99.9%): [15220.330, 15926.424] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_321._Benchmark.benchmark_Cluster_321  thrpt   30  15573.377 ± 353.047  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_322._Benchmark.benchmark_Cluster_322$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_322._Benchmark.benchmark_Cluster_322

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.594 ops/s
# Warmup Iteration   2: 5176.100 ops/s
# Warmup Iteration   3: 18530.583 ops/s
# Warmup Iteration   4: 20964.333 ops/s
# Warmup Iteration   5: 25609.118 ops/s
# Warmup Iteration   6: 32947.400 ops/s
# Warmup Iteration   7: 25452.039 ops/s
# Warmup Iteration   8: 32020.300 ops/s
# Warmup Iteration   9: 56441.127 ops/s
# Warmup Iteration  10: 78985.786 ops/s
# Warmup Iteration  11: 80307.719 ops/s
# Warmup Iteration  12: 74616.607 ops/s
# Warmup Iteration  13: 72514.969 ops/s
# Warmup Iteration  14: 80392.305 ops/s
# Warmup Iteration  15: 84130.147 ops/s
# Warmup Iteration  16: 68869.617 ops/s
# Warmup Iteration  17: 73937.103 ops/s
# Warmup Iteration  18: 79956.741 ops/s
# Warmup Iteration  19: 73073.970 ops/s
# Warmup Iteration  20: 86620.165 ops/s
# Warmup Iteration  21: 73098.079 ops/s
# Warmup Iteration  22: 75816.524 ops/s
# Warmup Iteration  23: 75902.002 ops/s
# Warmup Iteration  24: 80127.555 ops/s
# Warmup Iteration  25: 77211.246 ops/s
# Warmup Iteration  26: 85237.877 ops/s
# Warmup Iteration  27: 87102.975 ops/s
# Warmup Iteration  28: 88398.596 ops/s
# Warmup Iteration  29: 81323.535 ops/s
# Warmup Iteration  30: 74694.690 ops/s
Iteration   1: 85086.689 ops/s
Iteration   2: 84875.593 ops/s
Iteration   3: 78424.848 ops/s
Iteration   4: 76550.376 ops/s
Iteration   5: 75391.299 ops/s
Iteration   6: 75442.360 ops/s
Iteration   7: 72635.711 ops/s
Iteration   8: 74945.787 ops/s
Iteration   9: 68796.555 ops/s
Iteration  10: 75545.736 ops/s
Iteration  11: 75058.960 ops/s
Iteration  12: 85318.954 ops/s
Iteration  13: 79389.061 ops/s
Iteration  14: 82484.508 ops/s
Iteration  15: 78912.694 ops/s
Iteration  16: 71152.721 ops/s
Iteration  17: 78691.761 ops/s
Iteration  18: 80767.957 ops/s
Iteration  19: 80756.735 ops/s
Iteration  20: 76439.640 ops/s
Iteration  21: 75367.499 ops/s
Iteration  22: 82757.564 ops/s
Iteration  23: 84545.817 ops/s
Iteration  24: 81133.085 ops/s
Iteration  25: 66685.958 ops/s
Iteration  26: 81880.026 ops/s
Iteration  27: 77579.641 ops/s
Iteration  28: 80807.895 ops/s
Iteration  29: 85168.559 ops/s
Iteration  30: 84165.736 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_322._Benchmark.benchmark_Cluster_322":
  78558.657 ±(99.9%) 3295.327 ops/s [Average]
  (min, avg, max) = (66685.958, 78558.657, 85318.954), stdev = 4932.291
  CI (99.9%): [75263.330, 81853.984] (assumes normal distribution)


# Run complete. Total time: 00:01:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_322._Benchmark.benchmark_Cluster_322  thrpt   30  78558.657 ± 3295.327  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_323._Benchmark.benchmark_Cluster_323$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_323._Benchmark.benchmark_Cluster_323

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.780 ops/s
# Warmup Iteration   2: 3192.504 ops/s
# Warmup Iteration   3: 11290.356 ops/s
# Warmup Iteration   4: 15284.033 ops/s
# Warmup Iteration   5: 19813.423 ops/s
# Warmup Iteration   6: 23540.460 ops/s
# Warmup Iteration   7: 30787.240 ops/s
# Warmup Iteration   8: 24477.529 ops/s
# Warmup Iteration   9: 27734.327 ops/s
# Warmup Iteration  10: 27699.183 ops/s
# Warmup Iteration  11: 34358.034 ops/s
# Warmup Iteration  12: 52702.235 ops/s
# Warmup Iteration  13: 56606.946 ops/s
# Warmup Iteration  14: 54307.424 ops/s
# Warmup Iteration  15: 53430.315 ops/s
# Warmup Iteration  16: 56194.689 ops/s
# Warmup Iteration  17: 53197.142 ops/s
# Warmup Iteration  18: 49557.102 ops/s
# Warmup Iteration  19: 56790.215 ops/s
# Warmup Iteration  20: 57153.237 ops/s
# Warmup Iteration  21: 49153.277 ops/s
# Warmup Iteration  22: 51390.799 ops/s
# Warmup Iteration  23: 51622.380 ops/s
# Warmup Iteration  24: 56356.276 ops/s
# Warmup Iteration  25: 58385.063 ops/s
# Warmup Iteration  26: 55083.825 ops/s
# Warmup Iteration  27: 56371.825 ops/s
# Warmup Iteration  28: 52651.925 ops/s
# Warmup Iteration  29: 59783.339 ops/s
# Warmup Iteration  30: 59187.178 ops/s
Iteration   1: 47773.548 ops/s
Iteration   2: 53700.451 ops/s
Iteration   3: 50312.115 ops/s
Iteration   4: 59254.073 ops/s
Iteration   5: 57768.933 ops/s
Iteration   6: 56991.750 ops/s
Iteration   7: 60200.292 ops/s
Iteration   8: 54285.424 ops/s
Iteration   9: 53283.061 ops/s
Iteration  10: 57283.284 ops/s
Iteration  11: 56111.969 ops/s
Iteration  12: 51777.961 ops/s
Iteration  13: 57770.396 ops/s
Iteration  14: 58466.825 ops/s
Iteration  15: 57471.290 ops/s
Iteration  16: 55092.943 ops/s
Iteration  17: 51088.671 ops/s
Iteration  18: 56336.211 ops/s
Iteration  19: 56076.859 ops/s
Iteration  20: 54738.790 ops/s
Iteration  21: 53937.769 ops/s
Iteration  22: 60327.236 ops/s
Iteration  23: 56276.364 ops/s
Iteration  24: 54678.942 ops/s
Iteration  25: 59100.423 ops/s
Iteration  26: 55946.776 ops/s
Iteration  27: 53601.169 ops/s
Iteration  28: 53380.215 ops/s
Iteration  29: 56875.173 ops/s
Iteration  30: 56123.039 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_323._Benchmark.benchmark_Cluster_323":
  55534.398 ±(99.9%) 1949.103 ops/s [Average]
  (min, avg, max) = (47773.548, 55534.398, 60327.236), stdev = 2917.325
  CI (99.9%): [53585.296, 57483.501] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_323._Benchmark.benchmark_Cluster_323  thrpt   30  55534.398 ± 1949.103  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_324._Benchmark.benchmark_Cluster_324$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_324._Benchmark.benchmark_Cluster_324

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15592.735 ops/s
# Warmup Iteration   2: 60084.774 ops/s
# Warmup Iteration   3: 91273.308 ops/s
# Warmup Iteration   4: 92136.360 ops/s
# Warmup Iteration   5: 105712.925 ops/s
# Warmup Iteration   6: 83526.823 ops/s
# Warmup Iteration   7: 107035.198 ops/s
# Warmup Iteration   8: 102352.504 ops/s
# Warmup Iteration   9: 102865.515 ops/s
# Warmup Iteration  10: 107341.141 ops/s
# Warmup Iteration  11: 103255.608 ops/s
# Warmup Iteration  12: 100824.131 ops/s
# Warmup Iteration  13: 109377.473 ops/s
# Warmup Iteration  14: 97104.424 ops/s
# Warmup Iteration  15: 106618.329 ops/s
# Warmup Iteration  16: 100922.460 ops/s
# Warmup Iteration  17: 107110.380 ops/s
# Warmup Iteration  18: 110416.547 ops/s
# Warmup Iteration  19: 106283.436 ops/s
# Warmup Iteration  20: 108606.771 ops/s
# Warmup Iteration  21: 106145.405 ops/s
# Warmup Iteration  22: 105221.947 ops/s
# Warmup Iteration  23: 110169.541 ops/s
# Warmup Iteration  24: 106204.802 ops/s
# Warmup Iteration  25: 108116.313 ops/s
# Warmup Iteration  26: 110501.580 ops/s
# Warmup Iteration  27: 102263.634 ops/s
# Warmup Iteration  28: 111762.612 ops/s
# Warmup Iteration  29: 101861.122 ops/s
# Warmup Iteration  30: 108208.171 ops/s
Iteration   1: 107971.569 ops/s
Iteration   2: 102984.032 ops/s
Iteration   3: 108810.453 ops/s
Iteration   4: 105889.035 ops/s
Iteration   5: 111776.948 ops/s
Iteration   6: 104302.327 ops/s
Iteration   7: 105808.375 ops/s
Iteration   8: 109942.254 ops/s
Iteration   9: 106327.086 ops/s
Iteration  10: 107999.001 ops/s
Iteration  11: 108093.040 ops/s
Iteration  12: 105398.069 ops/s
Iteration  13: 104367.078 ops/s
Iteration  14: 110842.545 ops/s
Iteration  15: 104300.210 ops/s
Iteration  16: 106049.680 ops/s
Iteration  17: 109113.397 ops/s
Iteration  18: 105971.715 ops/s
Iteration  19: 109208.629 ops/s
Iteration  20: 106103.978 ops/s
Iteration  21: 110526.567 ops/s
Iteration  22: 112055.307 ops/s
Iteration  23: 104243.028 ops/s
Iteration  24: 109940.892 ops/s
Iteration  25: 105010.164 ops/s
Iteration  26: 108721.140 ops/s
Iteration  27: 109982.768 ops/s
Iteration  28: 103791.545 ops/s
Iteration  29: 110274.354 ops/s
Iteration  30: 103958.544 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_324._Benchmark.benchmark_Cluster_324":
  107325.458 ±(99.9%) 1777.269 ops/s [Average]
  (min, avg, max) = (102984.032, 107325.458, 112055.307), stdev = 2660.133
  CI (99.9%): [105548.189, 109102.727] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_324._Benchmark.benchmark_Cluster_324  thrpt   30  107325.458 ± 1777.269  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_325._Benchmark.benchmark_Cluster_325$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_325._Benchmark.benchmark_Cluster_325

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 24765.943 ops/s
# Warmup Iteration   2: 59692.597 ops/s
# Warmup Iteration   3: 110742.061 ops/s
# Warmup Iteration   4: 104047.428 ops/s
# Warmup Iteration   5: 110218.551 ops/s
# Warmup Iteration   6: 114799.176 ops/s
# Warmup Iteration   7: 105278.528 ops/s
# Warmup Iteration   8: 121226.324 ops/s
# Warmup Iteration   9: 117225.594 ops/s
# Warmup Iteration  10: 117178.443 ops/s
# Warmup Iteration  11: 119604.737 ops/s
# Warmup Iteration  12: 115159.247 ops/s
# Warmup Iteration  13: 118544.087 ops/s
# Warmup Iteration  14: 117801.734 ops/s
# Warmup Iteration  15: 115949.124 ops/s
# Warmup Iteration  16: 121096.912 ops/s
# Warmup Iteration  17: 122643.827 ops/s
# Warmup Iteration  18: 126560.598 ops/s
# Warmup Iteration  19: 121509.735 ops/s
# Warmup Iteration  20: 125123.643 ops/s
# Warmup Iteration  21: 125738.233 ops/s
# Warmup Iteration  22: 122019.603 ops/s
# Warmup Iteration  23: 123520.101 ops/s
# Warmup Iteration  24: 124127.048 ops/s
# Warmup Iteration  25: 118970.372 ops/s
# Warmup Iteration  26: 106985.921 ops/s
# Warmup Iteration  27: 122020.924 ops/s
# Warmup Iteration  28: 124582.057 ops/s
# Warmup Iteration  29: 126848.163 ops/s
# Warmup Iteration  30: 120418.448 ops/s
Iteration   1: 123426.885 ops/s
Iteration   2: 123186.421 ops/s
Iteration   3: 124925.498 ops/s
Iteration   4: 125146.475 ops/s
Iteration   5: 122489.868 ops/s
Iteration   6: 123292.929 ops/s
Iteration   7: 125480.415 ops/s
Iteration   8: 124875.597 ops/s
Iteration   9: 126769.211 ops/s
Iteration  10: 122078.756 ops/s
Iteration  11: 122430.222 ops/s
Iteration  12: 125444.307 ops/s
Iteration  13: 122496.206 ops/s
Iteration  14: 124874.763 ops/s
Iteration  15: 124262.716 ops/s
Iteration  16: 122520.721 ops/s
Iteration  17: 123158.976 ops/s
Iteration  18: 127702.224 ops/s
Iteration  19: 119819.583 ops/s
Iteration  20: 124456.836 ops/s
Iteration  21: 126779.345 ops/s
Iteration  22: 122366.716 ops/s
Iteration  23: 124797.245 ops/s
Iteration  24: 124702.535 ops/s
Iteration  25: 120447.501 ops/s
Iteration  26: 127339.854 ops/s
Iteration  27: 126021.294 ops/s
Iteration  28: 126575.048 ops/s
Iteration  29: 122720.782 ops/s
Iteration  30: 125313.775 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_325._Benchmark.benchmark_Cluster_325":
  124196.757 ±(99.9%) 1303.610 ops/s [Average]
  (min, avg, max) = (119819.583, 124196.757, 127702.224), stdev = 1951.182
  CI (99.9%): [122893.147, 125500.366] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_325._Benchmark.benchmark_Cluster_325  thrpt   30  124196.757 ± 1303.610  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_326._Benchmark.benchmark_Cluster_326$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_326._Benchmark.benchmark_Cluster_326

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15077.623 ops/s
# Warmup Iteration   2: 33831.095 ops/s
# Warmup Iteration   3: 93697.678 ops/s
# Warmup Iteration   4: 102088.712 ops/s
# Warmup Iteration   5: 114632.180 ops/s
# Warmup Iteration   6: 112671.509 ops/s
# Warmup Iteration   7: 121241.896 ops/s
# Warmup Iteration   8: 111948.897 ops/s
# Warmup Iteration   9: 120363.366 ops/s
# Warmup Iteration  10: 114135.681 ops/s
# Warmup Iteration  11: 119033.828 ops/s
# Warmup Iteration  12: 115859.875 ops/s
# Warmup Iteration  13: 116598.083 ops/s
# Warmup Iteration  14: 115038.567 ops/s
# Warmup Iteration  15: 115187.833 ops/s
# Warmup Iteration  16: 121023.883 ops/s
# Warmup Iteration  17: 120202.302 ops/s
# Warmup Iteration  18: 123797.177 ops/s
# Warmup Iteration  19: 124316.656 ops/s
# Warmup Iteration  20: 118386.759 ops/s
# Warmup Iteration  21: 125087.143 ops/s
# Warmup Iteration  22: 116095.076 ops/s
# Warmup Iteration  23: 123899.227 ops/s
# Warmup Iteration  24: 122926.936 ops/s
# Warmup Iteration  25: 120050.462 ops/s
# Warmup Iteration  26: 125223.942 ops/s
# Warmup Iteration  27: 117251.606 ops/s
# Warmup Iteration  28: 121979.005 ops/s
# Warmup Iteration  29: 124379.725 ops/s
# Warmup Iteration  30: 118808.446 ops/s
Iteration   1: 120482.493 ops/s
Iteration   2: 125420.320 ops/s
Iteration   3: 117305.855 ops/s
Iteration   4: 124521.150 ops/s
Iteration   5: 118924.619 ops/s
Iteration   6: 122735.286 ops/s
Iteration   7: 117136.631 ops/s
Iteration   8: 119837.822 ops/s
Iteration   9: 120730.043 ops/s
Iteration  10: 123069.254 ops/s
Iteration  11: 125611.239 ops/s
Iteration  12: 119080.116 ops/s
Iteration  13: 123812.238 ops/s
Iteration  14: 121093.509 ops/s
Iteration  15: 118857.126 ops/s
Iteration  16: 122507.205 ops/s
Iteration  17: 118988.279 ops/s
Iteration  18: 124001.532 ops/s
Iteration  19: 126222.539 ops/s
Iteration  20: 117869.727 ops/s
Iteration  21: 125093.242 ops/s
Iteration  22: 118115.033 ops/s
Iteration  23: 123154.402 ops/s
Iteration  24: 119281.271 ops/s
Iteration  25: 123323.271 ops/s
Iteration  26: 123378.525 ops/s
Iteration  27: 118427.270 ops/s
Iteration  28: 121210.224 ops/s
Iteration  29: 122770.936 ops/s
Iteration  30: 117030.890 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_326._Benchmark.benchmark_Cluster_326":
  121333.068 ±(99.9%) 1879.971 ops/s [Average]
  (min, avg, max) = (117030.890, 121333.068, 126222.539), stdev = 2813.852
  CI (99.9%): [119453.097, 123213.039] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_326._Benchmark.benchmark_Cluster_326  thrpt   30  121333.068 ± 1879.971  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_327._Benchmark.benchmark_Cluster_327$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_327._Benchmark.benchmark_Cluster_327

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13620.885 ops/s
# Warmup Iteration   2: 29795.247 ops/s
# Warmup Iteration   3: 55939.462 ops/s
# Warmup Iteration   4: 67709.799 ops/s
# Warmup Iteration   5: 112956.829 ops/s
# Warmup Iteration   6: 128172.526 ops/s
# Warmup Iteration   7: 127173.555 ops/s
# Warmup Iteration   8: 130027.487 ops/s
# Warmup Iteration   9: 130187.214 ops/s
# Warmup Iteration  10: 131247.696 ops/s
# Warmup Iteration  11: 125088.729 ops/s
# Warmup Iteration  12: 126456.153 ops/s
# Warmup Iteration  13: 123524.614 ops/s
# Warmup Iteration  14: 130682.125 ops/s
# Warmup Iteration  15: 127095.503 ops/s
# Warmup Iteration  16: 119292.960 ops/s
# Warmup Iteration  17: 132215.747 ops/s
# Warmup Iteration  18: 128531.979 ops/s
# Warmup Iteration  19: 129368.757 ops/s
# Warmup Iteration  20: 109529.103 ops/s
# Warmup Iteration  21: 125306.888 ops/s
# Warmup Iteration  22: 133624.159 ops/s
# Warmup Iteration  23: 131169.745 ops/s
# Warmup Iteration  24: 127828.639 ops/s
# Warmup Iteration  25: 134079.534 ops/s
# Warmup Iteration  26: 127196.134 ops/s
# Warmup Iteration  27: 134839.735 ops/s
# Warmup Iteration  28: 130790.730 ops/s
# Warmup Iteration  29: 128401.578 ops/s
# Warmup Iteration  30: 132847.914 ops/s
Iteration   1: 136525.595 ops/s
Iteration   2: 126998.429 ops/s
Iteration   3: 133164.416 ops/s
Iteration   4: 130884.857 ops/s
Iteration   5: 131192.119 ops/s
Iteration   6: 129383.806 ops/s
Iteration   7: 130115.783 ops/s
Iteration   8: 136999.187 ops/s
Iteration   9: 129458.566 ops/s
Iteration  10: 131292.435 ops/s
Iteration  11: 132339.866 ops/s
Iteration  12: 133762.070 ops/s
Iteration  13: 134179.079 ops/s
Iteration  14: 132833.138 ops/s
Iteration  15: 128164.113 ops/s
Iteration  16: 131953.983 ops/s
Iteration  17: 132498.891 ops/s
Iteration  18: 129266.053 ops/s
Iteration  19: 131848.131 ops/s
Iteration  20: 129356.785 ops/s
Iteration  21: 130549.762 ops/s
Iteration  22: 136751.352 ops/s
Iteration  23: 126132.504 ops/s
Iteration  24: 133230.133 ops/s
Iteration  25: 126212.972 ops/s
Iteration  26: 134656.680 ops/s
Iteration  27: 127083.681 ops/s
Iteration  28: 128222.903 ops/s
Iteration  29: 129015.340 ops/s
Iteration  30: 132250.451 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_327._Benchmark.benchmark_Cluster_327":
  131210.769 ±(99.9%) 1997.010 ops/s [Average]
  (min, avg, max) = (126132.504, 131210.769, 136999.187), stdev = 2989.031
  CI (99.9%): [129213.759, 133207.780] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_327._Benchmark.benchmark_Cluster_327  thrpt   30  131210.769 ± 1997.010  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_328._Benchmark.benchmark_Cluster_328$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_328._Benchmark.benchmark_Cluster_328

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19132.487 ops/s
# Warmup Iteration   2: 49295.437 ops/s
# Warmup Iteration   3: 89343.129 ops/s
# Warmup Iteration   4: 111738.682 ops/s
# Warmup Iteration   5: 126565.253 ops/s
# Warmup Iteration   6: 119849.571 ops/s
# Warmup Iteration   7: 121204.756 ops/s
# Warmup Iteration   8: 123956.660 ops/s
# Warmup Iteration   9: 127144.864 ops/s
# Warmup Iteration  10: 119957.613 ops/s
# Warmup Iteration  11: 124655.671 ops/s
# Warmup Iteration  12: 121263.483 ops/s
# Warmup Iteration  13: 127131.104 ops/s
# Warmup Iteration  14: 121539.262 ops/s
# Warmup Iteration  15: 123726.998 ops/s
# Warmup Iteration  16: 124298.294 ops/s
# Warmup Iteration  17: 125961.727 ops/s
# Warmup Iteration  18: 133469.920 ops/s
# Warmup Iteration  19: 127292.337 ops/s
# Warmup Iteration  20: 118877.630 ops/s
# Warmup Iteration  21: 131055.731 ops/s
# Warmup Iteration  22: 122952.415 ops/s
# Warmup Iteration  23: 131186.957 ops/s
# Warmup Iteration  24: 128136.789 ops/s
# Warmup Iteration  25: 126533.319 ops/s
# Warmup Iteration  26: 133737.990 ops/s
# Warmup Iteration  27: 123498.501 ops/s
# Warmup Iteration  28: 130749.271 ops/s
# Warmup Iteration  29: 128447.808 ops/s
# Warmup Iteration  30: 126124.813 ops/s
Iteration   1: 132700.006 ops/s
Iteration   2: 127008.694 ops/s
Iteration   3: 128232.432 ops/s
Iteration   4: 131081.928 ops/s
Iteration   5: 123759.004 ops/s
Iteration   6: 132295.846 ops/s
Iteration   7: 127766.721 ops/s
Iteration   8: 130800.066 ops/s
Iteration   9: 132185.760 ops/s
Iteration  10: 124580.429 ops/s
Iteration  11: 133858.781 ops/s
Iteration  12: 127787.987 ops/s
Iteration  13: 128414.173 ops/s
Iteration  14: 129439.228 ops/s
Iteration  15: 126669.235 ops/s
Iteration  16: 130641.844 ops/s
Iteration  17: 130096.222 ops/s
Iteration  18: 130823.272 ops/s
Iteration  19: 126972.673 ops/s
Iteration  20: 130787.341 ops/s
Iteration  21: 128451.205 ops/s
Iteration  22: 127044.325 ops/s
Iteration  23: 129002.029 ops/s
Iteration  24: 132525.050 ops/s
Iteration  25: 127575.227 ops/s
Iteration  26: 132545.610 ops/s
Iteration  27: 127102.388 ops/s
Iteration  28: 129259.464 ops/s
Iteration  29: 127622.589 ops/s
Iteration  30: 129779.863 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_328._Benchmark.benchmark_Cluster_328":
  129226.980 ±(99.9%) 1649.209 ops/s [Average]
  (min, avg, max) = (123759.004, 129226.980, 133858.781), stdev = 2468.459
  CI (99.9%): [127577.771, 130876.189] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_328._Benchmark.benchmark_Cluster_328  thrpt   30  129226.980 ± 1649.209  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_329._Benchmark.benchmark_Cluster_329$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_329._Benchmark.benchmark_Cluster_329

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9305.865 ops/s
# Warmup Iteration   2: 48749.002 ops/s
# Warmup Iteration   3: 127282.905 ops/s
# Warmup Iteration   4: 138658.732 ops/s
# Warmup Iteration   5: 147306.519 ops/s
# Warmup Iteration   6: 147120.384 ops/s
# Warmup Iteration   7: 141946.118 ops/s
# Warmup Iteration   8: 145253.208 ops/s
# Warmup Iteration   9: 139260.947 ops/s
# Warmup Iteration  10: 140607.295 ops/s
# Warmup Iteration  11: 152569.902 ops/s
# Warmup Iteration  12: 145606.468 ops/s
# Warmup Iteration  13: 153746.099 ops/s
# Warmup Iteration  14: 112355.412 ops/s
# Warmup Iteration  15: 155523.501 ops/s
# Warmup Iteration  16: 148904.844 ops/s
# Warmup Iteration  17: 150887.588 ops/s
# Warmup Iteration  18: 155062.607 ops/s
# Warmup Iteration  19: 153206.602 ops/s
# Warmup Iteration  20: 146743.533 ops/s
# Warmup Iteration  21: 156232.373 ops/s
# Warmup Iteration  22: 140487.120 ops/s
# Warmup Iteration  23: 159613.332 ops/s
# Warmup Iteration  24: 159498.393 ops/s
# Warmup Iteration  25: 159605.782 ops/s
# Warmup Iteration  26: 147041.556 ops/s
# Warmup Iteration  27: 155636.098 ops/s
# Warmup Iteration  28: 153032.292 ops/s
# Warmup Iteration  29: 151115.119 ops/s
# Warmup Iteration  30: 156809.129 ops/s
Iteration   1: 152329.839 ops/s
Iteration   2: 157536.769 ops/s
Iteration   3: 153362.823 ops/s
Iteration   4: 153355.924 ops/s
Iteration   5: 156396.878 ops/s
Iteration   6: 157357.262 ops/s
Iteration   7: 149050.015 ops/s
Iteration   8: 152323.564 ops/s
Iteration   9: 148639.990 ops/s
Iteration  10: 150535.295 ops/s
Iteration  11: 159649.384 ops/s
Iteration  12: 145141.377 ops/s
Iteration  13: 155368.433 ops/s
Iteration  14: 149401.599 ops/s
Iteration  15: 150881.094 ops/s
Iteration  16: 162022.558 ops/s
Iteration  17: 147954.079 ops/s
Iteration  18: 158357.436 ops/s
Iteration  19: 150908.233 ops/s
Iteration  20: 157545.092 ops/s
Iteration  21: 162404.728 ops/s
Iteration  22: 147945.696 ops/s
Iteration  23: 159099.735 ops/s
Iteration  24: 149335.097 ops/s
Iteration  25: 154640.060 ops/s
Iteration  26: 149825.128 ops/s
Iteration  27: 151409.538 ops/s
Iteration  28: 154782.212 ops/s
Iteration  29: 149062.372 ops/s
Iteration  30: 154902.843 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_329._Benchmark.benchmark_Cluster_329":
  153384.169 ±(99.9%) 2988.893 ops/s [Average]
  (min, avg, max) = (145141.377, 153384.169, 162404.728), stdev = 4473.635
  CI (99.9%): [150395.276, 156373.061] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_329._Benchmark.benchmark_Cluster_329  thrpt   30  153384.169 ± 2988.893  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_33._Benchmark.benchmark_Cluster_33$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_33._Benchmark.benchmark_Cluster_33

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2317.753 ops/s
# Warmup Iteration   2: 19685.036 ops/s
# Warmup Iteration   3: 25115.540 ops/s
# Warmup Iteration   4: 52128.445 ops/s
# Warmup Iteration   5: 47995.722 ops/s
# Warmup Iteration   6: 77273.060 ops/s
# Warmup Iteration   7: 69111.972 ops/s
# Warmup Iteration   8: 74980.726 ops/s
# Warmup Iteration   9: 78652.627 ops/s
# Warmup Iteration  10: 75669.773 ops/s
# Warmup Iteration  11: 77536.758 ops/s
# Warmup Iteration  12: 78992.878 ops/s
# Warmup Iteration  13: 77278.840 ops/s
# Warmup Iteration  14: 79293.412 ops/s
# Warmup Iteration  15: 76304.362 ops/s
# Warmup Iteration  16: 80454.896 ops/s
# Warmup Iteration  17: 80716.786 ops/s
# Warmup Iteration  18: 82512.309 ops/s
# Warmup Iteration  19: 75052.478 ops/s
# Warmup Iteration  20: 82242.950 ops/s
# Warmup Iteration  21: 77286.196 ops/s
# Warmup Iteration  22: 81453.201 ops/s
# Warmup Iteration  23: 82070.298 ops/s
# Warmup Iteration  24: 79564.425 ops/s
# Warmup Iteration  25: 77821.566 ops/s
# Warmup Iteration  26: 82658.365 ops/s
# Warmup Iteration  27: 77278.840 ops/s
# Warmup Iteration  28: 77895.844 ops/s
# Warmup Iteration  29: 82408.629 ops/s
# Warmup Iteration  30: 78358.883 ops/s
Iteration   1: 83953.601 ops/s
Iteration   2: 80266.054 ops/s
Iteration   3: 78232.347 ops/s
Iteration   4: 82455.817 ops/s
Iteration   5: 80395.894 ops/s
Iteration   6: 82470.455 ops/s
Iteration   7: 78311.445 ops/s
Iteration   8: 83691.902 ops/s
Iteration   9: 77390.038 ops/s
Iteration  10: 77889.976 ops/s
Iteration  11: 80715.300 ops/s
Iteration  12: 78499.574 ops/s
Iteration  13: 78746.115 ops/s
Iteration  14: 81765.688 ops/s
Iteration  15: 78144.080 ops/s
Iteration  16: 81608.045 ops/s
Iteration  17: 78815.773 ops/s
Iteration  18: 81198.890 ops/s
Iteration  19: 78433.522 ops/s
Iteration  20: 79626.053 ops/s
Iteration  21: 81500.353 ops/s
Iteration  22: 79240.696 ops/s
Iteration  23: 80305.336 ops/s
Iteration  24: 79638.623 ops/s
Iteration  25: 80499.596 ops/s
Iteration  26: 79421.606 ops/s
Iteration  27: 82435.711 ops/s
Iteration  28: 79283.280 ops/s
Iteration  29: 77615.697 ops/s
Iteration  30: 82924.566 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_33._Benchmark.benchmark_Cluster_33":
  80182.534 ±(99.9%) 1247.457 ops/s [Average]
  (min, avg, max) = (77390.038, 80182.534, 83953.601), stdev = 1867.135
  CI (99.9%): [78935.078, 81429.991] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_33._Benchmark.benchmark_Cluster_33  thrpt   30  80182.534 ± 1247.457  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_330._Benchmark.benchmark_Cluster_330$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_330._Benchmark.benchmark_Cluster_330

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1170.568 ops/s
# Warmup Iteration   2: 10012.335 ops/s
# Warmup Iteration   3: 23312.063 ops/s
# Warmup Iteration   4: 19058.098 ops/s
# Warmup Iteration   5: 31227.948 ops/s
# Warmup Iteration   6: 44268.066 ops/s
# Warmup Iteration   7: 52383.474 ops/s
# Warmup Iteration   8: 82038.289 ops/s
# Warmup Iteration   9: 79299.739 ops/s
# Warmup Iteration  10: 86626.836 ops/s
# Warmup Iteration  11: 89640.653 ops/s
# Warmup Iteration  12: 93102.528 ops/s
# Warmup Iteration  13: 86465.429 ops/s
# Warmup Iteration  14: 94535.834 ops/s
# Warmup Iteration  15: 95155.182 ops/s
# Warmup Iteration  16: 93779.091 ops/s
# Warmup Iteration  17: 90438.356 ops/s
# Warmup Iteration  18: 96086.537 ops/s
# Warmup Iteration  19: 95387.615 ops/s
# Warmup Iteration  20: 90319.282 ops/s
# Warmup Iteration  21: 94465.823 ops/s
# Warmup Iteration  22: 94489.527 ops/s
# Warmup Iteration  23: 94478.450 ops/s
# Warmup Iteration  24: 96322.834 ops/s
# Warmup Iteration  25: 92435.429 ops/s
# Warmup Iteration  26: 98890.150 ops/s
# Warmup Iteration  27: 94032.544 ops/s
# Warmup Iteration  28: 94364.759 ops/s
# Warmup Iteration  29: 94408.238 ops/s
# Warmup Iteration  30: 95005.400 ops/s
Iteration   1: 97523.197 ops/s
Iteration   2: 91151.119 ops/s
Iteration   3: 96430.827 ops/s
Iteration   4: 91255.296 ops/s
Iteration   5: 94679.731 ops/s
Iteration   6: 93769.249 ops/s
Iteration   7: 93413.386 ops/s
Iteration   8: 93569.919 ops/s
Iteration   9: 91788.903 ops/s
Iteration  10: 94715.190 ops/s
Iteration  11: 92921.070 ops/s
Iteration  12: 94154.041 ops/s
Iteration  13: 95345.602 ops/s
Iteration  14: 94212.538 ops/s
Iteration  15: 94149.846 ops/s
Iteration  16: 99239.005 ops/s
Iteration  17: 92682.648 ops/s
Iteration  18: 92341.804 ops/s
Iteration  19: 98559.238 ops/s
Iteration  20: 91859.914 ops/s
Iteration  21: 97757.062 ops/s
Iteration  22: 95124.113 ops/s
Iteration  23: 95768.018 ops/s
Iteration  24: 96541.564 ops/s
Iteration  25: 93186.261 ops/s
Iteration  26: 96767.791 ops/s
Iteration  27: 93647.762 ops/s
Iteration  28: 96951.680 ops/s
Iteration  29: 93687.175 ops/s
Iteration  30: 96203.095 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_330._Benchmark.benchmark_Cluster_330":
  94646.568 ±(99.9%) 1443.191 ops/s [Average]
  (min, avg, max) = (91151.119, 94646.568, 99239.005), stdev = 2160.100
  CI (99.9%): [93203.377, 96089.759] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_330._Benchmark.benchmark_Cluster_330  thrpt   30  94646.568 ± 1443.191  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_331._Benchmark.benchmark_Cluster_331$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_331._Benchmark.benchmark_Cluster_331

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 941.385 ops/s
# Warmup Iteration   2: 14514.235 ops/s
# Warmup Iteration   3: 20785.284 ops/s
# Warmup Iteration   4: 22004.974 ops/s
# Warmup Iteration   5: 31076.217 ops/s
# Warmup Iteration   6: 39309.471 ops/s
# Warmup Iteration   7: 43881.068 ops/s
# Warmup Iteration   8: 68445.130 ops/s
# Warmup Iteration   9: 60935.119 ops/s
# Warmup Iteration  10: 67293.831 ops/s
# Warmup Iteration  11: 67716.019 ops/s
# Warmup Iteration  12: 72453.718 ops/s
# Warmup Iteration  13: 71047.336 ops/s
# Warmup Iteration  14: 76022.732 ops/s
# Warmup Iteration  15: 69210.692 ops/s
# Warmup Iteration  16: 79138.037 ops/s
# Warmup Iteration  17: 78757.571 ops/s
# Warmup Iteration  18: 70620.770 ops/s
# Warmup Iteration  19: 73959.272 ops/s
# Warmup Iteration  20: 78858.586 ops/s
# Warmup Iteration  21: 78891.036 ops/s
# Warmup Iteration  22: 72902.665 ops/s
# Warmup Iteration  23: 80210.459 ops/s
# Warmup Iteration  24: 78146.883 ops/s
# Warmup Iteration  25: 78319.729 ops/s
# Warmup Iteration  26: 79065.859 ops/s
# Warmup Iteration  27: 70519.161 ops/s
# Warmup Iteration  28: 74236.802 ops/s
# Warmup Iteration  29: 75751.770 ops/s
# Warmup Iteration  30: 75474.143 ops/s
Iteration   1: 74693.167 ops/s
Iteration   2: 69970.870 ops/s
Iteration   3: 73613.599 ops/s
Iteration   4: 69955.522 ops/s
Iteration   5: 72127.352 ops/s
Iteration   6: 79584.834 ops/s
Iteration   7: 79404.118 ops/s
Iteration   8: 76678.852 ops/s
Iteration   9: 75004.811 ops/s
Iteration  10: 78350.325 ops/s
Iteration  11: 68825.441 ops/s
Iteration  12: 73634.776 ops/s
Iteration  13: 76047.581 ops/s
Iteration  14: 69805.502 ops/s
Iteration  15: 74024.723 ops/s
Iteration  16: 73881.793 ops/s
Iteration  17: 65871.859 ops/s
Iteration  18: 73975.591 ops/s
Iteration  19: 67704.799 ops/s
Iteration  20: 74730.231 ops/s
Iteration  21: 70430.993 ops/s
Iteration  22: 68865.369 ops/s
Iteration  23: 76647.906 ops/s
Iteration  24: 65390.138 ops/s
Iteration  25: 69147.459 ops/s
Iteration  26: 74371.250 ops/s
Iteration  27: 68250.667 ops/s
Iteration  28: 74888.429 ops/s
Iteration  29: 76066.229 ops/s
Iteration  30: 64478.653 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_331._Benchmark.benchmark_Cluster_331":
  72547.428 ±(99.9%) 2742.306 ops/s [Average]
  (min, avg, max) = (64478.653, 72547.428, 79584.834), stdev = 4104.555
  CI (99.9%): [69805.122, 75289.734] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_331._Benchmark.benchmark_Cluster_331  thrpt   30  72547.428 ± 2742.306  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_332._Benchmark.benchmark_Cluster_332$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_332._Benchmark.benchmark_Cluster_332

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 33120.351 ops/s
# Warmup Iteration   2: 105350.421 ops/s
# Warmup Iteration   3: 208348.188 ops/s
# Warmup Iteration   4: 449205.760 ops/s
# Warmup Iteration   5: 486204.055 ops/s
# Warmup Iteration   6: 467939.640 ops/s
# Warmup Iteration   7: 479128.589 ops/s
# Warmup Iteration   8: 426645.598 ops/s
# Warmup Iteration   9: 451742.537 ops/s
# Warmup Iteration  10: 449988.279 ops/s
# Warmup Iteration  11: 438171.799 ops/s
# Warmup Iteration  12: 467471.262 ops/s
# Warmup Iteration  13: 466020.560 ops/s
# Warmup Iteration  14: 488683.541 ops/s
# Warmup Iteration  15: 464130.013 ops/s
# Warmup Iteration  16: 491143.482 ops/s
# Warmup Iteration  17: 489754.728 ops/s
# Warmup Iteration  18: 459201.313 ops/s
# Warmup Iteration  19: 469408.043 ops/s
# Warmup Iteration  20: 466770.509 ops/s
# Warmup Iteration  21: 480406.211 ops/s
# Warmup Iteration  22: 481312.967 ops/s
# Warmup Iteration  23: 470982.920 ops/s
# Warmup Iteration  24: 469742.589 ops/s
# Warmup Iteration  25: 468143.982 ops/s
# Warmup Iteration  26: 475401.889 ops/s
# Warmup Iteration  27: 490360.398 ops/s
# Warmup Iteration  28: 474759.785 ops/s
# Warmup Iteration  29: 453414.045 ops/s
# Warmup Iteration  30: 496013.815 ops/s
Iteration   1: 451102.534 ops/s
Iteration   2: 467276.150 ops/s
Iteration   3: 480269.422 ops/s
Iteration   4: 475425.396 ops/s
Iteration   5: 463613.536 ops/s
Iteration   6: 495798.562 ops/s
Iteration   7: 465130.105 ops/s
Iteration   8: 482300.078 ops/s
Iteration   9: 462973.428 ops/s
Iteration  10: 484670.704 ops/s
Iteration  11: 484040.188 ops/s
Iteration  12: 444347.445 ops/s
Iteration  13: 478953.165 ops/s
Iteration  14: 468556.834 ops/s
Iteration  15: 445086.110 ops/s
Iteration  16: 453685.248 ops/s
Iteration  17: 480205.848 ops/s
Iteration  18: 459621.896 ops/s
Iteration  19: 475163.522 ops/s
Iteration  20: 493594.515 ops/s
Iteration  21: 470343.109 ops/s
Iteration  22: 473025.048 ops/s
Iteration  23: 458514.449 ops/s
Iteration  24: 478595.672 ops/s
Iteration  25: 470971.278 ops/s
Iteration  26: 470429.439 ops/s
Iteration  27: 482494.039 ops/s
Iteration  28: 464412.910 ops/s
Iteration  29: 483126.779 ops/s
Iteration  30: 456655.544 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_332._Benchmark.benchmark_Cluster_332":
  470679.432 ±(99.9%) 8777.111 ops/s [Average]
  (min, avg, max) = (444347.445, 470679.432, 495798.562), stdev = 13137.167
  CI (99.9%): [461902.321, 479456.543] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_332._Benchmark.benchmark_Cluster_332  thrpt   30  470679.432 ± 8777.111  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_333._Benchmark.benchmark_Cluster_333$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_333._Benchmark.benchmark_Cluster_333

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5145.413 ops/s
# Warmup Iteration   2: 40931.716 ops/s
# Warmup Iteration   3: 57242.160 ops/s
# Warmup Iteration   4: 79230.816 ops/s
# Warmup Iteration   5: 137193.026 ops/s
# Warmup Iteration   6: 135044.277 ops/s
# Warmup Iteration   7: 153135.376 ops/s
# Warmup Iteration   8: 152547.724 ops/s
# Warmup Iteration   9: 154764.403 ops/s
# Warmup Iteration  10: 155249.862 ops/s
# Warmup Iteration  11: 147427.826 ops/s
# Warmup Iteration  12: 157691.026 ops/s
# Warmup Iteration  13: 154771.276 ops/s
# Warmup Iteration  14: 150063.678 ops/s
# Warmup Iteration  15: 151769.083 ops/s
# Warmup Iteration  16: 155317.108 ops/s
# Warmup Iteration  17: 156688.464 ops/s
# Warmup Iteration  18: 163954.229 ops/s
# Warmup Iteration  19: 166082.898 ops/s
# Warmup Iteration  20: 155363.695 ops/s
# Warmup Iteration  21: 159403.317 ops/s
# Warmup Iteration  22: 157421.196 ops/s
# Warmup Iteration  23: 161541.478 ops/s
# Warmup Iteration  24: 164697.869 ops/s
# Warmup Iteration  25: 153998.751 ops/s
# Warmup Iteration  26: 161069.575 ops/s
# Warmup Iteration  27: 153419.263 ops/s
# Warmup Iteration  28: 158587.207 ops/s
# Warmup Iteration  29: 163820.083 ops/s
# Warmup Iteration  30: 154360.455 ops/s
Iteration   1: 163702.798 ops/s
Iteration   2: 159312.666 ops/s
Iteration   3: 160385.157 ops/s
Iteration   4: 159216.464 ops/s
Iteration   5: 155308.049 ops/s
Iteration   6: 159598.908 ops/s
Iteration   7: 163892.529 ops/s
Iteration   8: 157121.686 ops/s
Iteration   9: 162439.274 ops/s
Iteration  10: 154448.019 ops/s
Iteration  11: 162814.931 ops/s
Iteration  12: 160920.244 ops/s
Iteration  13: 156373.868 ops/s
Iteration  14: 155922.842 ops/s
Iteration  15: 161122.901 ops/s
Iteration  16: 154420.561 ops/s
Iteration  17: 160417.862 ops/s
Iteration  18: 154411.740 ops/s
Iteration  19: 161883.662 ops/s
Iteration  20: 157002.157 ops/s
Iteration  21: 155501.149 ops/s
Iteration  22: 162817.541 ops/s
Iteration  23: 164750.294 ops/s
Iteration  24: 150113.162 ops/s
Iteration  25: 158573.614 ops/s
Iteration  26: 157242.453 ops/s
Iteration  27: 154173.830 ops/s
Iteration  28: 126048.654 ops/s
Iteration  29: 162596.059 ops/s
Iteration  30: 153964.689 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_333._Benchmark.benchmark_Cluster_333":
  157549.926 ±(99.9%) 4675.231 ops/s [Average]
  (min, avg, max) = (126048.654, 157549.926, 164750.294), stdev = 6997.666
  CI (99.9%): [152874.695, 162225.156] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_333._Benchmark.benchmark_Cluster_333  thrpt   30  157549.926 ± 4675.231  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_334._Benchmark.benchmark_Cluster_334$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_334._Benchmark.benchmark_Cluster_334

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 22458.093 ops/s
# Warmup Iteration   2: 108410.800 ops/s
# Warmup Iteration   3: 237795.878 ops/s
# Warmup Iteration   4: 238880.571 ops/s
# Warmup Iteration   5: 249666.999 ops/s
# Warmup Iteration   6: 251436.802 ops/s
# Warmup Iteration   7: 237892.080 ops/s
# Warmup Iteration   8: 254222.985 ops/s
# Warmup Iteration   9: 239663.383 ops/s
# Warmup Iteration  10: 248294.109 ops/s
# Warmup Iteration  11: 251604.415 ops/s
# Warmup Iteration  12: 247738.925 ops/s
# Warmup Iteration  13: 243148.300 ops/s
# Warmup Iteration  14: 248153.621 ops/s
# Warmup Iteration  15: 253606.596 ops/s
# Warmup Iteration  16: 246965.811 ops/s
# Warmup Iteration  17: 257528.232 ops/s
# Warmup Iteration  18: 241606.054 ops/s
# Warmup Iteration  19: 271176.591 ops/s
# Warmup Iteration  20: 257820.414 ops/s
# Warmup Iteration  21: 261619.675 ops/s
# Warmup Iteration  22: 255675.838 ops/s
# Warmup Iteration  23: 249307.078 ops/s
# Warmup Iteration  24: 256419.773 ops/s
# Warmup Iteration  25: 263430.195 ops/s
# Warmup Iteration  26: 244426.358 ops/s
# Warmup Iteration  27: 259892.805 ops/s
# Warmup Iteration  28: 262090.490 ops/s
# Warmup Iteration  29: 260370.876 ops/s
# Warmup Iteration  30: 254785.921 ops/s
Iteration   1: 271706.173 ops/s
Iteration   2: 254878.285 ops/s
Iteration   3: 266569.330 ops/s
Iteration   4: 261980.709 ops/s
Iteration   5: 261466.294 ops/s
Iteration   6: 265407.048 ops/s
Iteration   7: 260559.198 ops/s
Iteration   8: 261902.947 ops/s
Iteration   9: 265427.496 ops/s
Iteration  10: 260598.366 ops/s
Iteration  11: 268011.419 ops/s
Iteration  12: 257682.769 ops/s
Iteration  13: 269084.838 ops/s
Iteration  14: 259652.849 ops/s
Iteration  15: 260506.342 ops/s
Iteration  16: 265084.597 ops/s
Iteration  17: 259318.460 ops/s
Iteration  18: 278817.896 ops/s
Iteration  19: 258883.029 ops/s
Iteration  20: 267195.796 ops/s
Iteration  21: 254570.530 ops/s
Iteration  22: 269498.902 ops/s
Iteration  23: 259679.184 ops/s
Iteration  24: 265212.186 ops/s
Iteration  25: 258690.789 ops/s
Iteration  26: 258752.873 ops/s
Iteration  27: 270045.587 ops/s
Iteration  28: 250119.878 ops/s
Iteration  29: 268241.231 ops/s
Iteration  30: 251834.071 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_334._Benchmark.benchmark_Cluster_334":
  262712.636 ±(99.9%) 4159.487 ops/s [Average]
  (min, avg, max) = (250119.878, 262712.636, 278817.896), stdev = 6225.724
  CI (99.9%): [258553.149, 266872.123] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_334._Benchmark.benchmark_Cluster_334  thrpt   30  262712.636 ± 4159.487  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_335._Benchmark.benchmark_Cluster_335$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_335._Benchmark.benchmark_Cluster_335

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.725 ops/s
# Warmup Iteration   2: 1576.246 ops/s
# Warmup Iteration   3: 3171.180 ops/s
# Warmup Iteration   4: 7920.353 ops/s
# Warmup Iteration   5: 10519.707 ops/s
# Warmup Iteration   6: 9200.392 ops/s
# Warmup Iteration   7: 12057.493 ops/s
# Warmup Iteration   8: 12279.072 ops/s
# Warmup Iteration   9: 13526.054 ops/s
# Warmup Iteration  10: 15227.837 ops/s
# Warmup Iteration  11: 20769.814 ops/s
# Warmup Iteration  12: 27434.322 ops/s
# Warmup Iteration  13: 38044.660 ops/s
# Warmup Iteration  14: 30913.434 ops/s
# Warmup Iteration  15: 35184.558 ops/s
# Warmup Iteration  16: 27803.998 ops/s
# Warmup Iteration  17: 36074.684 ops/s
# Warmup Iteration  18: 50687.555 ops/s
# Warmup Iteration  19: 81519.131 ops/s
# Warmup Iteration  20: 91141.934 ops/s
# Warmup Iteration  21: 85985.147 ops/s
# Warmup Iteration  22: 89278.430 ops/s
# Warmup Iteration  23: 87982.353 ops/s
# Warmup Iteration  24: 85326.028 ops/s
# Warmup Iteration  25: 91028.507 ops/s
# Warmup Iteration  26: 81527.716 ops/s
# Warmup Iteration  27: 86965.348 ops/s
# Warmup Iteration  28: 83377.499 ops/s
# Warmup Iteration  29: 85979.497 ops/s
# Warmup Iteration  30: 90886.924 ops/s
Iteration   1: 87785.246 ops/s
Iteration   2: 87865.623 ops/s
Iteration   3: 90034.969 ops/s
Iteration   4: 88638.122 ops/s
Iteration   5: 91003.240 ops/s
Iteration   6: 88818.343 ops/s
Iteration   7: 88751.548 ops/s
Iteration   8: 92332.532 ops/s
Iteration   9: 87170.855 ops/s
Iteration  10: 91247.851 ops/s
Iteration  11: 85178.658 ops/s
Iteration  12: 93292.825 ops/s
Iteration  13: 86843.766 ops/s
Iteration  14: 89030.158 ops/s
Iteration  15: 88582.825 ops/s
Iteration  16: 88443.600 ops/s
Iteration  17: 93568.345 ops/s
Iteration  18: 87107.972 ops/s
Iteration  19: 90015.227 ops/s
Iteration  20: 87619.757 ops/s
Iteration  21: 92546.625 ops/s
Iteration  22: 69513.143 ops/s
Iteration  23: 88343.429 ops/s
Iteration  24: 91331.632 ops/s
Iteration  25: 86717.528 ops/s
Iteration  26: 88941.360 ops/s
Iteration  27: 89965.167 ops/s
Iteration  28: 86506.770 ops/s
Iteration  29: 91089.126 ops/s
Iteration  30: 87549.080 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_335._Benchmark.benchmark_Cluster_335":
  88527.844 ±(99.9%) 2783.751 ops/s [Average]
  (min, avg, max) = (69513.143, 88527.844, 93568.345), stdev = 4166.587
  CI (99.9%): [85744.093, 91311.595] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_335._Benchmark.benchmark_Cluster_335  thrpt   30  88527.844 ± 2783.751  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_336._Benchmark.benchmark_Cluster_336$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_336._Benchmark.benchmark_Cluster_336

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.783 ops/s
# Warmup Iteration   2: 3431.239 ops/s
# Warmup Iteration   3: 18789.311 ops/s
# Warmup Iteration   4: 32663.600 ops/s
# Warmup Iteration   5: 45634.026 ops/s
# Warmup Iteration   6: 57645.331 ops/s
# Warmup Iteration   7: 108308.939 ops/s
# Warmup Iteration   8: 117177.582 ops/s
# Warmup Iteration   9: 122549.862 ops/s
# Warmup Iteration  10: 117831.922 ops/s
# Warmup Iteration  11: 115714.252 ops/s
# Warmup Iteration  12: 121397.535 ops/s
# Warmup Iteration  13: 119346.567 ops/s
# Warmup Iteration  14: 120073.991 ops/s
# Warmup Iteration  15: 116377.602 ops/s
# Warmup Iteration  16: 121656.438 ops/s
# Warmup Iteration  17: 117951.427 ops/s
# Warmup Iteration  18: 118961.520 ops/s
# Warmup Iteration  19: 122129.298 ops/s
# Warmup Iteration  20: 118794.626 ops/s
# Warmup Iteration  21: 119295.809 ops/s
# Warmup Iteration  22: 119894.400 ops/s
# Warmup Iteration  23: 118609.388 ops/s
# Warmup Iteration  24: 118621.680 ops/s
# Warmup Iteration  25: 119979.497 ops/s
# Warmup Iteration  26: 123479.320 ops/s
# Warmup Iteration  27: 118133.858 ops/s
# Warmup Iteration  28: 117850.913 ops/s
# Warmup Iteration  29: 123751.399 ops/s
# Warmup Iteration  30: 117903.886 ops/s
Iteration   1: 119489.972 ops/s
Iteration   2: 116125.542 ops/s
Iteration   3: 123267.244 ops/s
Iteration   4: 120060.949 ops/s
Iteration   5: 118312.416 ops/s
Iteration   6: 122494.343 ops/s
Iteration   7: 120228.771 ops/s
Iteration   8: 114408.107 ops/s
Iteration   9: 124868.188 ops/s
Iteration  10: 115728.238 ops/s
Iteration  11: 120173.520 ops/s
Iteration  12: 120215.720 ops/s
Iteration  13: 116071.947 ops/s
Iteration  14: 119673.505 ops/s
Iteration  15: 118076.292 ops/s
Iteration  16: 120869.636 ops/s
Iteration  17: 120632.357 ops/s
Iteration  18: 122101.065 ops/s
Iteration  19: 120943.529 ops/s
Iteration  20: 116612.928 ops/s
Iteration  21: 123102.177 ops/s
Iteration  22: 120095.816 ops/s
Iteration  23: 120240.140 ops/s
Iteration  24: 120650.486 ops/s
Iteration  25: 118713.839 ops/s
Iteration  26: 122714.019 ops/s
Iteration  27: 116985.530 ops/s
Iteration  28: 119767.725 ops/s
Iteration  29: 118207.622 ops/s
Iteration  30: 116201.303 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_336._Benchmark.benchmark_Cluster_336":
  119567.764 ±(99.9%) 1691.334 ops/s [Average]
  (min, avg, max) = (114408.107, 119567.764, 124868.188), stdev = 2531.510
  CI (99.9%): [117876.430, 121259.099] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_336._Benchmark.benchmark_Cluster_336  thrpt   30  119567.764 ± 1691.334  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_337._Benchmark.benchmark_Cluster_337$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_337._Benchmark.benchmark_Cluster_337

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2731.586 ops/s
# Warmup Iteration   2: 19233.924 ops/s
# Warmup Iteration   3: 31310.064 ops/s
# Warmup Iteration   4: 49678.645 ops/s
# Warmup Iteration   5: 56491.205 ops/s
# Warmup Iteration   6: 57253.799 ops/s
# Warmup Iteration   7: 108221.287 ops/s
# Warmup Iteration   8: 121751.499 ops/s
# Warmup Iteration   9: 125969.749 ops/s
# Warmup Iteration  10: 124833.804 ops/s
# Warmup Iteration  11: 123877.129 ops/s
# Warmup Iteration  12: 118013.267 ops/s
# Warmup Iteration  13: 125989.324 ops/s
# Warmup Iteration  14: 119167.998 ops/s
# Warmup Iteration  15: 125920.309 ops/s
# Warmup Iteration  16: 122691.057 ops/s
# Warmup Iteration  17: 125975.896 ops/s
# Warmup Iteration  18: 125369.049 ops/s
# Warmup Iteration  19: 123688.410 ops/s
# Warmup Iteration  20: 125434.177 ops/s
# Warmup Iteration  21: 122029.243 ops/s
# Warmup Iteration  22: 126956.197 ops/s
# Warmup Iteration  23: 130422.941 ops/s
# Warmup Iteration  24: 123710.054 ops/s
# Warmup Iteration  25: 120204.809 ops/s
# Warmup Iteration  26: 131332.357 ops/s
# Warmup Iteration  27: 129374.617 ops/s
# Warmup Iteration  28: 122077.080 ops/s
# Warmup Iteration  29: 124473.118 ops/s
# Warmup Iteration  30: 126965.064 ops/s
Iteration   1: 121607.785 ops/s
Iteration   2: 125870.543 ops/s
Iteration   3: 123719.105 ops/s
Iteration   4: 128672.957 ops/s
Iteration   5: 120590.155 ops/s
Iteration   6: 124864.204 ops/s
Iteration   7: 125902.238 ops/s
Iteration   8: 123466.250 ops/s
Iteration   9: 126970.633 ops/s
Iteration  10: 125770.451 ops/s
Iteration  11: 121537.686 ops/s
Iteration  12: 125281.945 ops/s
Iteration  13: 121895.355 ops/s
Iteration  14: 125818.624 ops/s
Iteration  15: 119919.182 ops/s
Iteration  16: 97584.808 ops/s
Iteration  17: 128889.805 ops/s
Iteration  18: 123806.558 ops/s
Iteration  19: 125796.607 ops/s
Iteration  20: 123724.426 ops/s
Iteration  21: 125046.388 ops/s
Iteration  22: 128715.011 ops/s
Iteration  23: 120232.967 ops/s
Iteration  24: 128867.723 ops/s
Iteration  25: 123383.017 ops/s
Iteration  26: 128239.476 ops/s
Iteration  27: 122335.991 ops/s
Iteration  28: 125204.504 ops/s
Iteration  29: 125719.039 ops/s
Iteration  30: 123920.103 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_337._Benchmark.benchmark_Cluster_337":
  123778.451 ±(99.9%) 3725.596 ops/s [Average]
  (min, avg, max) = (97584.808, 123778.451, 128889.805), stdev = 5576.297
  CI (99.9%): [120052.855, 127504.047] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_337._Benchmark.benchmark_Cluster_337  thrpt   30  123778.451 ± 3725.596  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_338._Benchmark.benchmark_Cluster_338$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_338._Benchmark.benchmark_Cluster_338

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.691 ops/s
# Warmup Iteration   2: 1840.615 ops/s
# Warmup Iteration   3: 5078.320 ops/s
# Warmup Iteration   4: 16996.672 ops/s
# Warmup Iteration   5: 23527.654 ops/s
# Warmup Iteration   6: 28966.992 ops/s
# Warmup Iteration   7: 30545.585 ops/s
# Warmup Iteration   8: 27763.236 ops/s
# Warmup Iteration   9: 30418.690 ops/s
# Warmup Iteration  10: 53377.793 ops/s
# Warmup Iteration  11: 95480.272 ops/s
# Warmup Iteration  12: 93347.838 ops/s
# Warmup Iteration  13: 95325.792 ops/s
# Warmup Iteration  14: 97935.161 ops/s
# Warmup Iteration  15: 94243.377 ops/s
# Warmup Iteration  16: 92436.398 ops/s
# Warmup Iteration  17: 96321.922 ops/s
# Warmup Iteration  18: 96199.688 ops/s
# Warmup Iteration  19: 89646.409 ops/s
# Warmup Iteration  20: 100642.760 ops/s
# Warmup Iteration  21: 94214.863 ops/s
# Warmup Iteration  22: 99430.009 ops/s
# Warmup Iteration  23: 93974.710 ops/s
# Warmup Iteration  24: 94736.575 ops/s
# Warmup Iteration  25: 97528.645 ops/s
# Warmup Iteration  26: 96053.847 ops/s
# Warmup Iteration  27: 95683.412 ops/s
# Warmup Iteration  28: 97905.897 ops/s
# Warmup Iteration  29: 94810.268 ops/s
# Warmup Iteration  30: 98049.112 ops/s
Iteration   1: 101510.955 ops/s
Iteration   2: 95159.558 ops/s
Iteration   3: 100549.344 ops/s
Iteration   4: 100246.105 ops/s
Iteration   5: 94894.547 ops/s
Iteration   6: 100688.223 ops/s
Iteration   7: 100873.484 ops/s
Iteration   8: 94425.556 ops/s
Iteration   9: 101270.299 ops/s
Iteration  10: 93171.102 ops/s
Iteration  11: 98871.794 ops/s
Iteration  12: 98750.430 ops/s
Iteration  13: 97292.414 ops/s
Iteration  14: 100096.556 ops/s
Iteration  15: 93856.260 ops/s
Iteration  16: 97455.805 ops/s
Iteration  17: 100468.726 ops/s
Iteration  18: 95977.877 ops/s
Iteration  19: 100402.347 ops/s
Iteration  20: 95312.831 ops/s
Iteration  21: 98817.970 ops/s
Iteration  22: 99269.791 ops/s
Iteration  23: 93108.756 ops/s
Iteration  24: 100181.121 ops/s
Iteration  25: 97156.809 ops/s
Iteration  26: 95187.338 ops/s
Iteration  27: 100604.609 ops/s
Iteration  28: 97092.022 ops/s
Iteration  29: 96726.041 ops/s
Iteration  30: 94666.574 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_338._Benchmark.benchmark_Cluster_338":
  97802.841 ±(99.9%) 1795.652 ops/s [Average]
  (min, avg, max) = (93108.756, 97802.841, 101510.955), stdev = 2687.647
  CI (99.9%): [96007.190, 99598.493] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_338._Benchmark.benchmark_Cluster_338  thrpt   30  97802.841 ± 1795.652  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_339._Benchmark.benchmark_Cluster_339$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_339._Benchmark.benchmark_Cluster_339

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.664 ops/s
# Warmup Iteration   2: 7024.625 ops/s
# Warmup Iteration   3: 34456.120 ops/s
# Warmup Iteration   4: 41371.718 ops/s
# Warmup Iteration   5: 59508.910 ops/s
# Warmup Iteration   6: 64889.543 ops/s
# Warmup Iteration   7: 57687.551 ops/s
# Warmup Iteration   8: 70531.001 ops/s
# Warmup Iteration   9: 148061.155 ops/s
# Warmup Iteration  10: 154171.492 ops/s
# Warmup Iteration  11: 158523.934 ops/s
# Warmup Iteration  12: 163641.576 ops/s
# Warmup Iteration  13: 158395.601 ops/s
# Warmup Iteration  14: 161265.952 ops/s
# Warmup Iteration  15: 158705.702 ops/s
# Warmup Iteration  16: 158527.081 ops/s
# Warmup Iteration  17: 159786.036 ops/s
# Warmup Iteration  18: 162358.533 ops/s
# Warmup Iteration  19: 155226.510 ops/s
# Warmup Iteration  20: 164844.452 ops/s
# Warmup Iteration  21: 156504.957 ops/s
# Warmup Iteration  22: 158157.425 ops/s
# Warmup Iteration  23: 160759.331 ops/s
# Warmup Iteration  24: 158364.177 ops/s
# Warmup Iteration  25: 160698.978 ops/s
# Warmup Iteration  26: 155953.436 ops/s
# Warmup Iteration  27: 158256.211 ops/s
# Warmup Iteration  28: 157702.378 ops/s
# Warmup Iteration  29: 157991.631 ops/s
# Warmup Iteration  30: 164271.457 ops/s
Iteration   1: 166027.390 ops/s
Iteration   2: 158055.596 ops/s
Iteration   3: 157436.362 ops/s
Iteration   4: 163412.850 ops/s
Iteration   5: 152368.498 ops/s
Iteration   6: 158598.611 ops/s
Iteration   7: 164217.159 ops/s
Iteration   8: 154098.758 ops/s
Iteration   9: 111519.574 ops/s
Iteration  10: 162367.221 ops/s
Iteration  11: 154863.023 ops/s
Iteration  12: 163603.262 ops/s
Iteration  13: 158050.288 ops/s
Iteration  14: 157114.464 ops/s
Iteration  15: 157236.951 ops/s
Iteration  16: 168112.778 ops/s
Iteration  17: 156549.838 ops/s
Iteration  18: 162204.594 ops/s
Iteration  19: 157458.612 ops/s
Iteration  20: 160445.984 ops/s
Iteration  21: 161291.187 ops/s
Iteration  22: 155884.915 ops/s
Iteration  23: 161925.690 ops/s
Iteration  24: 159861.271 ops/s
Iteration  25: 164566.152 ops/s
Iteration  26: 158679.342 ops/s
Iteration  27: 159178.665 ops/s
Iteration  28: 160543.220 ops/s
Iteration  29: 156478.832 ops/s
Iteration  30: 161128.207 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_339._Benchmark.benchmark_Cluster_339":
  158109.310 ±(99.9%) 6359.844 ops/s [Average]
  (min, avg, max) = (111519.574, 158109.310, 168112.778), stdev = 9519.116
  CI (99.9%): [151749.466, 164469.154] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_339._Benchmark.benchmark_Cluster_339  thrpt   30  158109.310 ± 6359.844  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_34._Benchmark.benchmark_Cluster_34$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_34._Benchmark.benchmark_Cluster_34

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9916.028 ops/s
# Warmup Iteration   2: 52485.795 ops/s
# Warmup Iteration   3: 134725.710 ops/s
# Warmup Iteration   4: 134790.655 ops/s
# Warmup Iteration   5: 171782.264 ops/s
# Warmup Iteration   6: 157182.064 ops/s
# Warmup Iteration   7: 162983.515 ops/s
# Warmup Iteration   8: 166509.815 ops/s
# Warmup Iteration   9: 171618.901 ops/s
# Warmup Iteration  10: 166479.735 ops/s
# Warmup Iteration  11: 165977.116 ops/s
# Warmup Iteration  12: 164313.607 ops/s
# Warmup Iteration  13: 166726.290 ops/s
# Warmup Iteration  14: 172904.782 ops/s
# Warmup Iteration  15: 165287.209 ops/s
# Warmup Iteration  16: 166831.376 ops/s
# Warmup Iteration  17: 170621.628 ops/s
# Warmup Iteration  18: 177757.726 ops/s
# Warmup Iteration  19: 170674.936 ops/s
# Warmup Iteration  20: 173089.933 ops/s
# Warmup Iteration  21: 180421.904 ops/s
# Warmup Iteration  22: 168573.953 ops/s
# Warmup Iteration  23: 180697.649 ops/s
# Warmup Iteration  24: 169833.576 ops/s
# Warmup Iteration  25: 172914.005 ops/s
# Warmup Iteration  26: 175268.048 ops/s
# Warmup Iteration  27: 175946.212 ops/s
# Warmup Iteration  28: 168612.545 ops/s
# Warmup Iteration  29: 176756.053 ops/s
# Warmup Iteration  30: 169574.613 ops/s
Iteration   1: 175956.950 ops/s
Iteration   2: 172542.719 ops/s
Iteration   3: 171080.400 ops/s
Iteration   4: 174928.816 ops/s
Iteration   5: 166418.083 ops/s
Iteration   6: 182042.861 ops/s
Iteration   7: 167794.339 ops/s
Iteration   8: 176665.682 ops/s
Iteration   9: 173283.134 ops/s
Iteration  10: 175113.082 ops/s
Iteration  11: 178663.800 ops/s
Iteration  12: 173302.426 ops/s
Iteration  13: 179061.017 ops/s
Iteration  14: 175165.582 ops/s
Iteration  15: 168465.348 ops/s
Iteration  16: 178764.296 ops/s
Iteration  17: 170940.256 ops/s
Iteration  18: 172700.474 ops/s
Iteration  19: 179572.228 ops/s
Iteration  20: 170142.158 ops/s
Iteration  21: 176350.373 ops/s
Iteration  22: 168778.890 ops/s
Iteration  23: 175801.284 ops/s
Iteration  24: 169176.541 ops/s
Iteration  25: 175517.306 ops/s
Iteration  26: 171331.024 ops/s
Iteration  27: 167863.643 ops/s
Iteration  28: 180404.941 ops/s
Iteration  29: 171843.201 ops/s
Iteration  30: 175709.615 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_34._Benchmark.benchmark_Cluster_34":
  173846.016 ±(99.9%) 2770.491 ops/s [Average]
  (min, avg, max) = (166418.083, 173846.016, 182042.861), stdev = 4146.740
  CI (99.9%): [171075.525, 176616.506] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_34._Benchmark.benchmark_Cluster_34  thrpt   30  173846.016 ± 2770.491  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_340._Benchmark.benchmark_Cluster_340$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_340._Benchmark.benchmark_Cluster_340

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8847.229 ops/s
# Warmup Iteration   2: 46087.074 ops/s
# Warmup Iteration   3: 78477.888 ops/s
# Warmup Iteration   4: 92761.163 ops/s
# Warmup Iteration   5: 87989.794 ops/s
# Warmup Iteration   6: 92050.829 ops/s
# Warmup Iteration   7: 95464.490 ops/s
# Warmup Iteration   8: 94010.439 ops/s
# Warmup Iteration   9: 93285.061 ops/s
# Warmup Iteration  10: 94249.097 ops/s
# Warmup Iteration  11: 89187.931 ops/s
# Warmup Iteration  12: 92247.404 ops/s
# Warmup Iteration  13: 91049.264 ops/s
# Warmup Iteration  14: 91958.379 ops/s
# Warmup Iteration  15: 92153.752 ops/s
# Warmup Iteration  16: 90861.226 ops/s
# Warmup Iteration  17: 92575.660 ops/s
# Warmup Iteration  18: 94472.921 ops/s
# Warmup Iteration  19: 91027.949 ops/s
# Warmup Iteration  20: 90767.500 ops/s
# Warmup Iteration  21: 92951.243 ops/s
# Warmup Iteration  22: 94828.405 ops/s
# Warmup Iteration  23: 93838.615 ops/s
# Warmup Iteration  24: 90696.244 ops/s
# Warmup Iteration  25: 89551.670 ops/s
# Warmup Iteration  26: 95335.397 ops/s
# Warmup Iteration  27: 88613.320 ops/s
# Warmup Iteration  28: 93006.501 ops/s
# Warmup Iteration  29: 97923.697 ops/s
# Warmup Iteration  30: 88716.248 ops/s
Iteration   1: 95969.443 ops/s
Iteration   2: 93447.175 ops/s
Iteration   3: 85116.921 ops/s
Iteration   4: 81269.562 ops/s
Iteration   5: 94595.979 ops/s
Iteration   6: 89963.084 ops/s
Iteration   7: 96290.646 ops/s
Iteration   8: 94511.516 ops/s
Iteration   9: 89168.666 ops/s
Iteration  10: 94938.059 ops/s
Iteration  11: 89734.005 ops/s
Iteration  12: 91232.022 ops/s
Iteration  13: 92448.760 ops/s
Iteration  14: 90921.368 ops/s
Iteration  15: 88998.048 ops/s
Iteration  16: 95253.821 ops/s
Iteration  17: 95918.976 ops/s
Iteration  18: 91326.626 ops/s
Iteration  19: 93306.241 ops/s
Iteration  20: 90340.421 ops/s
Iteration  21: 95039.589 ops/s
Iteration  22: 95768.298 ops/s
Iteration  23: 89300.655 ops/s
Iteration  24: 93672.766 ops/s
Iteration  25: 88766.903 ops/s
Iteration  26: 93948.016 ops/s
Iteration  27: 93628.450 ops/s
Iteration  28: 91761.524 ops/s
Iteration  29: 97165.253 ops/s
Iteration  30: 90019.765 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_340._Benchmark.benchmark_Cluster_340":
  92127.419 ±(99.9%) 2354.561 ops/s [Average]
  (min, avg, max) = (81269.562, 92127.419, 97165.253), stdev = 3524.197
  CI (99.9%): [89772.857, 94481.980] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_340._Benchmark.benchmark_Cluster_340  thrpt   30  92127.419 ± 2354.561  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_341._Benchmark.benchmark_Cluster_341$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_341._Benchmark.benchmark_Cluster_341

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2717.656 ops/s
# Warmup Iteration   2: 21210.437 ops/s
# Warmup Iteration   3: 35271.628 ops/s
# Warmup Iteration   4: 67717.578 ops/s
# Warmup Iteration   5: 79989.301 ops/s
# Warmup Iteration   6: 66646.394 ops/s
# Warmup Iteration   7: 92909.950 ops/s
# Warmup Iteration   8: 78941.805 ops/s
# Warmup Iteration   9: 91941.823 ops/s
# Warmup Iteration  10: 88627.451 ops/s
# Warmup Iteration  11: 89766.977 ops/s
# Warmup Iteration  12: 89942.376 ops/s
# Warmup Iteration  13: 89487.783 ops/s
# Warmup Iteration  14: 90776.755 ops/s
# Warmup Iteration  15: 93318.582 ops/s
# Warmup Iteration  16: 90234.308 ops/s
# Warmup Iteration  17: 95204.212 ops/s
# Warmup Iteration  18: 95133.316 ops/s
# Warmup Iteration  19: 89800.494 ops/s
# Warmup Iteration  20: 96233.850 ops/s
# Warmup Iteration  21: 91789.977 ops/s
# Warmup Iteration  22: 94365.330 ops/s
# Warmup Iteration  23: 92501.690 ops/s
# Warmup Iteration  24: 89806.997 ops/s
# Warmup Iteration  25: 96298.894 ops/s
# Warmup Iteration  26: 90544.942 ops/s
# Warmup Iteration  27: 90752.068 ops/s
# Warmup Iteration  28: 92770.803 ops/s
# Warmup Iteration  29: 89792.403 ops/s
# Warmup Iteration  30: 98379.853 ops/s
Iteration   1: 91340.914 ops/s
Iteration   2: 91013.711 ops/s
Iteration   3: 93412.125 ops/s
Iteration   4: 92668.848 ops/s
Iteration   5: 90260.125 ops/s
Iteration   6: 93158.830 ops/s
Iteration   7: 90153.373 ops/s
Iteration   8: 93905.144 ops/s
Iteration   9: 88153.046 ops/s
Iteration  10: 92387.848 ops/s
Iteration  11: 90785.752 ops/s
Iteration  12: 92923.025 ops/s
Iteration  13: 91767.342 ops/s
Iteration  14: 90492.018 ops/s
Iteration  15: 95069.471 ops/s
Iteration  16: 89512.535 ops/s
Iteration  17: 96364.270 ops/s
Iteration  18: 90804.188 ops/s
Iteration  19: 90236.445 ops/s
Iteration  20: 93436.215 ops/s
Iteration  21: 87440.777 ops/s
Iteration  22: 93456.302 ops/s
Iteration  23: 91835.648 ops/s
Iteration  24: 92259.524 ops/s
Iteration  25: 93368.404 ops/s
Iteration  26: 91484.336 ops/s
Iteration  27: 93183.837 ops/s
Iteration  28: 93372.856 ops/s
Iteration  29: 92999.253 ops/s
Iteration  30: 93697.789 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_341._Benchmark.benchmark_Cluster_341":
  92031.465 ±(99.9%) 1291.704 ops/s [Average]
  (min, avg, max) = (87440.777, 92031.465, 96364.270), stdev = 1933.361
  CI (99.9%): [90739.761, 93323.169] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_341._Benchmark.benchmark_Cluster_341  thrpt   30  92031.465 ± 1291.704  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_342._Benchmark.benchmark_Cluster_342$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_342._Benchmark.benchmark_Cluster_342

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.659 ops/s
# Warmup Iteration   2: 1627.942 ops/s
# Warmup Iteration   3: 13471.602 ops/s
# Warmup Iteration   4: 23566.775 ops/s
# Warmup Iteration   5: 19207.822 ops/s
# Warmup Iteration   6: 32321.411 ops/s
# Warmup Iteration   7: 29249.762 ops/s
# Warmup Iteration   8: 38594.069 ops/s
# Warmup Iteration   9: 52977.733 ops/s
# Warmup Iteration  10: 85140.596 ops/s
# Warmup Iteration  11: 85708.353 ops/s
# Warmup Iteration  12: 85974.362 ops/s
# Warmup Iteration  13: 90793.196 ops/s
# Warmup Iteration  14: 86116.942 ops/s
# Warmup Iteration  15: 87467.767 ops/s
# Warmup Iteration  16: 91738.669 ops/s
# Warmup Iteration  17: 92261.712 ops/s
# Warmup Iteration  18: 88863.649 ops/s
# Warmup Iteration  19: 85811.990 ops/s
# Warmup Iteration  20: 88789.063 ops/s
# Warmup Iteration  21: 86364.001 ops/s
# Warmup Iteration  22: 86879.464 ops/s
# Warmup Iteration  23: 92053.047 ops/s
# Warmup Iteration  24: 89606.249 ops/s
# Warmup Iteration  25: 87999.042 ops/s
# Warmup Iteration  26: 80777.167 ops/s
# Warmup Iteration  27: 77514.653 ops/s
# Warmup Iteration  28: 86485.008 ops/s
# Warmup Iteration  29: 89302.459 ops/s
# Warmup Iteration  30: 87820.472 ops/s
Iteration   1: 87300.288 ops/s
Iteration   2: 90316.219 ops/s
Iteration   3: 87637.759 ops/s
Iteration   4: 88804.723 ops/s
Iteration   5: 87647.828 ops/s
Iteration   6: 90575.020 ops/s
Iteration   7: 86978.142 ops/s
Iteration   8: 91855.121 ops/s
Iteration   9: 87425.323 ops/s
Iteration  10: 87752.019 ops/s
Iteration  11: 90141.331 ops/s
Iteration  12: 88750.934 ops/s
Iteration  13: 90122.171 ops/s
Iteration  14: 86636.234 ops/s
Iteration  15: 84548.743 ops/s
Iteration  16: 93407.225 ops/s
Iteration  17: 85595.572 ops/s
Iteration  18: 85594.140 ops/s
Iteration  19: 93573.694 ops/s
Iteration  20: 90536.202 ops/s
Iteration  21: 86719.343 ops/s
Iteration  22: 89652.691 ops/s
Iteration  23: 87244.232 ops/s
Iteration  24: 90858.003 ops/s
Iteration  25: 89464.802 ops/s
Iteration  26: 85591.183 ops/s
Iteration  27: 89387.399 ops/s
Iteration  28: 86460.468 ops/s
Iteration  29: 90390.506 ops/s
Iteration  30: 85439.963 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_342._Benchmark.benchmark_Cluster_342":
  88546.909 ±(99.9%) 1569.634 ops/s [Average]
  (min, avg, max) = (84548.743, 88546.909, 93573.694), stdev = 2349.355
  CI (99.9%): [86977.275, 90116.544] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_342._Benchmark.benchmark_Cluster_342  thrpt   30  88546.909 ± 1569.634  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_343._Benchmark.benchmark_Cluster_343$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_343._Benchmark.benchmark_Cluster_343

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2659.777 ops/s
# Warmup Iteration   2: 21620.718 ops/s
# Warmup Iteration   3: 27018.916 ops/s
# Warmup Iteration   4: 23632.565 ops/s
# Warmup Iteration   5: 26615.743 ops/s
# Warmup Iteration   6: 92304.210 ops/s
# Warmup Iteration   7: 100372.315 ops/s
# Warmup Iteration   8: 99457.573 ops/s
# Warmup Iteration   9: 97533.198 ops/s
# Warmup Iteration  10: 97669.693 ops/s
# Warmup Iteration  11: 99577.131 ops/s
# Warmup Iteration  12: 96226.583 ops/s
# Warmup Iteration  13: 101495.285 ops/s
# Warmup Iteration  14: 99014.583 ops/s
# Warmup Iteration  15: 98919.237 ops/s
# Warmup Iteration  16: 102580.861 ops/s
# Warmup Iteration  17: 101560.356 ops/s
# Warmup Iteration  18: 97405.524 ops/s
# Warmup Iteration  19: 102470.278 ops/s
# Warmup Iteration  20: 106960.972 ops/s
# Warmup Iteration  21: 99364.657 ops/s
# Warmup Iteration  22: 103066.800 ops/s
# Warmup Iteration  23: 107029.174 ops/s
# Warmup Iteration  24: 98961.972 ops/s
# Warmup Iteration  25: 105199.062 ops/s
# Warmup Iteration  26: 102126.564 ops/s
# Warmup Iteration  27: 103198.049 ops/s
# Warmup Iteration  28: 105599.518 ops/s
# Warmup Iteration  29: 101120.097 ops/s
# Warmup Iteration  30: 100091.466 ops/s
Iteration   1: 102482.949 ops/s
Iteration   2: 99989.868 ops/s
Iteration   3: 107625.593 ops/s
Iteration   4: 102231.325 ops/s
Iteration   5: 100269.156 ops/s
Iteration   6: 100039.058 ops/s
Iteration   7: 103187.709 ops/s
Iteration   8: 105890.172 ops/s
Iteration   9: 102308.827 ops/s
Iteration  10: 106060.738 ops/s
Iteration  11: 98366.827 ops/s
Iteration  12: 106805.468 ops/s
Iteration  13: 104828.139 ops/s
Iteration  14: 101247.434 ops/s
Iteration  15: 98934.408 ops/s
Iteration  16: 105200.114 ops/s
Iteration  17: 101233.441 ops/s
Iteration  18: 100961.231 ops/s
Iteration  19: 104464.752 ops/s
Iteration  20: 101260.471 ops/s
Iteration  21: 103415.668 ops/s
Iteration  22: 100099.223 ops/s
Iteration  23: 105548.478 ops/s
Iteration  24: 100106.153 ops/s
Iteration  25: 105271.063 ops/s
Iteration  26: 107313.927 ops/s
Iteration  27: 106803.153 ops/s
Iteration  28: 100275.738 ops/s
Iteration  29: 108007.229 ops/s
Iteration  30: 98853.378 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_343._Benchmark.benchmark_Cluster_343":
  102969.390 ±(99.9%) 1974.560 ops/s [Average]
  (min, avg, max) = (98366.827, 102969.390, 108007.229), stdev = 2955.429
  CI (99.9%): [100994.830, 104943.949] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_343._Benchmark.benchmark_Cluster_343  thrpt   30  102969.390 ± 1974.560  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_344._Benchmark.benchmark_Cluster_344$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_344._Benchmark.benchmark_Cluster_344

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14545.324 ops/s
# Warmup Iteration   2: 44025.931 ops/s
# Warmup Iteration   3: 39112.005 ops/s
# Warmup Iteration   4: 36764.170 ops/s
# Warmup Iteration   5: 29778.350 ops/s
# Warmup Iteration   6: 29564.537 ops/s
# Warmup Iteration   7: 40937.093 ops/s
# Warmup Iteration   8: 36497.085 ops/s
# Warmup Iteration   9: 37058.099 ops/s
# Warmup Iteration  10: 38208.928 ops/s
# Warmup Iteration  11: 45292.959 ops/s
# Warmup Iteration  12: 48897.632 ops/s
# Warmup Iteration  13: 66546.966 ops/s
# Warmup Iteration  14: 67154.675 ops/s
# Warmup Iteration  15: 153087.944 ops/s
# Warmup Iteration  16: 158544.752 ops/s
# Warmup Iteration  17: 160632.620 ops/s
# Warmup Iteration  18: 163688.433 ops/s
# Warmup Iteration  19: 160205.322 ops/s
# Warmup Iteration  20: 159989.343 ops/s
# Warmup Iteration  21: 137354.875 ops/s
# Warmup Iteration  22: 159341.616 ops/s
# Warmup Iteration  23: 158441.200 ops/s
# Warmup Iteration  24: 167483.468 ops/s
# Warmup Iteration  25: 160112.473 ops/s
# Warmup Iteration  26: 157702.481 ops/s
# Warmup Iteration  27: 160600.746 ops/s
# Warmup Iteration  28: 164455.823 ops/s
# Warmup Iteration  29: 156584.538 ops/s
# Warmup Iteration  30: 162937.210 ops/s
Iteration   1: 156011.215 ops/s
Iteration   2: 153421.492 ops/s
Iteration   3: 174010.743 ops/s
Iteration   4: 162486.181 ops/s
Iteration   5: 151417.528 ops/s
Iteration   6: 169665.764 ops/s
Iteration   7: 159111.880 ops/s
Iteration   8: 161786.674 ops/s
Iteration   9: 167265.130 ops/s
Iteration  10: 160880.567 ops/s
Iteration  11: 167360.677 ops/s
Iteration  12: 169393.825 ops/s
Iteration  13: 159797.966 ops/s
Iteration  14: 167286.296 ops/s
Iteration  15: 165204.363 ops/s
Iteration  16: 167939.593 ops/s
Iteration  17: 167784.293 ops/s
Iteration  18: 162049.914 ops/s
Iteration  19: 168125.803 ops/s
Iteration  20: 163192.045 ops/s
Iteration  21: 170858.270 ops/s
Iteration  22: 162360.494 ops/s
Iteration  23: 164330.533 ops/s
Iteration  24: 162232.305 ops/s
Iteration  25: 169189.809 ops/s
Iteration  26: 168129.176 ops/s
Iteration  27: 163368.330 ops/s
Iteration  28: 164486.860 ops/s
Iteration  29: 164550.030 ops/s
Iteration  30: 165083.665 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_344._Benchmark.benchmark_Cluster_344":
  164292.714 ±(99.9%) 3365.662 ops/s [Average]
  (min, avg, max) = (151417.528, 164292.714, 174010.743), stdev = 5037.564
  CI (99.9%): [160927.052, 167658.376] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_344._Benchmark.benchmark_Cluster_344  thrpt   30  164292.714 ± 3365.662  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_345._Benchmark.benchmark_Cluster_345$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_345._Benchmark.benchmark_Cluster_345

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.706 ops/s
# Warmup Iteration   2: 4660.345 ops/s
# Warmup Iteration   3: 19181.617 ops/s
# Warmup Iteration   4: 28912.147 ops/s
# Warmup Iteration   5: 36400.309 ops/s
# Warmup Iteration   6: 34814.441 ops/s
# Warmup Iteration   7: 41693.773 ops/s
# Warmup Iteration   8: 53223.843 ops/s
# Warmup Iteration   9: 48334.402 ops/s
# Warmup Iteration  10: 64504.748 ops/s
# Warmup Iteration  11: 113014.906 ops/s
# Warmup Iteration  12: 111215.417 ops/s
# Warmup Iteration  13: 112252.895 ops/s
# Warmup Iteration  14: 106615.171 ops/s
# Warmup Iteration  15: 110355.931 ops/s
# Warmup Iteration  16: 118272.464 ops/s
# Warmup Iteration  17: 113135.181 ops/s
# Warmup Iteration  18: 109694.656 ops/s
# Warmup Iteration  19: 116995.654 ops/s
# Warmup Iteration  20: 112739.878 ops/s
# Warmup Iteration  21: 113652.236 ops/s
# Warmup Iteration  22: 111777.993 ops/s
# Warmup Iteration  23: 109870.176 ops/s
# Warmup Iteration  24: 113968.929 ops/s
# Warmup Iteration  25: 112207.169 ops/s
# Warmup Iteration  26: 115741.696 ops/s
# Warmup Iteration  27: 115538.611 ops/s
# Warmup Iteration  28: 114353.068 ops/s
# Warmup Iteration  29: 116432.247 ops/s
# Warmup Iteration  30: 118507.825 ops/s
Iteration   1: 112644.649 ops/s
Iteration   2: 111688.605 ops/s
Iteration   3: 106749.037 ops/s
Iteration   4: 115380.124 ops/s
Iteration   5: 113121.246 ops/s
Iteration   6: 115036.668 ops/s
Iteration   7: 115668.683 ops/s
Iteration   8: 113501.745 ops/s
Iteration   9: 117562.013 ops/s
Iteration  10: 114171.488 ops/s
Iteration  11: 112826.276 ops/s
Iteration  12: 116990.622 ops/s
Iteration  13: 115265.409 ops/s
Iteration  14: 118226.727 ops/s
Iteration  15: 111820.065 ops/s
Iteration  16: 111699.561 ops/s
Iteration  17: 119287.808 ops/s
Iteration  18: 112860.278 ops/s
Iteration  19: 117066.708 ops/s
Iteration  20: 115295.302 ops/s
Iteration  21: 112649.275 ops/s
Iteration  22: 114333.357 ops/s
Iteration  23: 113965.019 ops/s
Iteration  24: 116401.265 ops/s
Iteration  25: 113946.726 ops/s
Iteration  26: 114760.464 ops/s
Iteration  27: 112324.088 ops/s
Iteration  28: 117433.326 ops/s
Iteration  29: 117251.865 ops/s
Iteration  30: 113434.988 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_345._Benchmark.benchmark_Cluster_345":
  114445.446 ±(99.9%) 1697.720 ops/s [Average]
  (min, avg, max) = (106749.037, 114445.446, 119287.808), stdev = 2541.068
  CI (99.9%): [112747.726, 116143.166] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_345._Benchmark.benchmark_Cluster_345  thrpt   30  114445.446 ± 1697.720  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_346._Benchmark.benchmark_Cluster_346$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_346._Benchmark.benchmark_Cluster_346

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 21690.035 ops/s
# Warmup Iteration   2: 95180.020 ops/s
# Warmup Iteration   3: 121923.777 ops/s
# Warmup Iteration   4: 123228.529 ops/s
# Warmup Iteration   5: 125901.026 ops/s
# Warmup Iteration   6: 113976.490 ops/s
# Warmup Iteration   7: 124988.287 ops/s
# Warmup Iteration   8: 130312.143 ops/s
# Warmup Iteration   9: 123675.355 ops/s
# Warmup Iteration  10: 124006.212 ops/s
# Warmup Iteration  11: 126028.129 ops/s
# Warmup Iteration  12: 125712.477 ops/s
# Warmup Iteration  13: 128673.911 ops/s
# Warmup Iteration  14: 91030.944 ops/s
# Warmup Iteration  15: 127310.920 ops/s
# Warmup Iteration  16: 121748.995 ops/s
# Warmup Iteration  17: 130489.431 ops/s
# Warmup Iteration  18: 135985.510 ops/s
# Warmup Iteration  19: 125118.494 ops/s
# Warmup Iteration  20: 135276.776 ops/s
# Warmup Iteration  21: 133740.577 ops/s
# Warmup Iteration  22: 131877.034 ops/s
# Warmup Iteration  23: 135398.061 ops/s
# Warmup Iteration  24: 125261.965 ops/s
# Warmup Iteration  25: 135147.370 ops/s
# Warmup Iteration  26: 137285.018 ops/s
# Warmup Iteration  27: 128594.865 ops/s
# Warmup Iteration  28: 131982.554 ops/s
# Warmup Iteration  29: 127369.990 ops/s
# Warmup Iteration  30: 139934.283 ops/s
Iteration   1: 128059.549 ops/s
Iteration   2: 134458.941 ops/s
Iteration   3: 128866.148 ops/s
Iteration   4: 132657.992 ops/s
Iteration   5: 136407.641 ops/s
Iteration   6: 128901.314 ops/s
Iteration   7: 136788.528 ops/s
Iteration   8: 133621.002 ops/s
Iteration   9: 127930.835 ops/s
Iteration  10: 139312.999 ops/s
Iteration  11: 128912.701 ops/s
Iteration  12: 133824.260 ops/s
Iteration  13: 131865.274 ops/s
Iteration  14: 132789.596 ops/s
Iteration  15: 134353.774 ops/s
Iteration  16: 135021.266 ops/s
Iteration  17: 130100.131 ops/s
Iteration  18: 136304.859 ops/s
Iteration  19: 130461.290 ops/s
Iteration  20: 130059.184 ops/s
Iteration  21: 136599.490 ops/s
Iteration  22: 128702.564 ops/s
Iteration  23: 137856.637 ops/s
Iteration  24: 125555.393 ops/s
Iteration  25: 132294.044 ops/s
Iteration  26: 131289.675 ops/s
Iteration  27: 133999.590 ops/s
Iteration  28: 124788.187 ops/s
Iteration  29: 131709.818 ops/s
Iteration  30: 132839.453 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_346._Benchmark.benchmark_Cluster_346":
  132211.071 ±(99.9%) 2408.311 ops/s [Average]
  (min, avg, max) = (124788.187, 132211.071, 139312.999), stdev = 3604.647
  CI (99.9%): [129802.760, 134619.382] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_346._Benchmark.benchmark_Cluster_346  thrpt   30  132211.071 ± 2408.311  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_347._Benchmark.benchmark_Cluster_347$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_347._Benchmark.benchmark_Cluster_347

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10496.789 ops/s
# Warmup Iteration   2: 19824.544 ops/s
# Warmup Iteration   3: 25154.365 ops/s
# Warmup Iteration   4: 25451.014 ops/s
# Warmup Iteration   5: 37266.474 ops/s
# Warmup Iteration   6: 56546.689 ops/s
# Warmup Iteration   7: 114250.379 ops/s
# Warmup Iteration   8: 122543.941 ops/s
# Warmup Iteration   9: 124592.017 ops/s
# Warmup Iteration  10: 119657.418 ops/s
# Warmup Iteration  11: 114971.759 ops/s
# Warmup Iteration  12: 125371.107 ops/s
# Warmup Iteration  13: 120920.758 ops/s
# Warmup Iteration  14: 121778.919 ops/s
# Warmup Iteration  15: 126418.532 ops/s
# Warmup Iteration  16: 122466.495 ops/s
# Warmup Iteration  17: 132325.860 ops/s
# Warmup Iteration  18: 127764.951 ops/s
# Warmup Iteration  19: 130653.547 ops/s
# Warmup Iteration  20: 124063.732 ops/s
# Warmup Iteration  21: 135487.199 ops/s
# Warmup Iteration  22: 129614.495 ops/s
# Warmup Iteration  23: 127081.350 ops/s
# Warmup Iteration  24: 131293.892 ops/s
# Warmup Iteration  25: 131407.908 ops/s
# Warmup Iteration  26: 120932.815 ops/s
# Warmup Iteration  27: 128136.503 ops/s
# Warmup Iteration  28: 128683.139 ops/s
# Warmup Iteration  29: 135460.076 ops/s
# Warmup Iteration  30: 117007.865 ops/s
Iteration   1: 131329.535 ops/s
Iteration   2: 126836.437 ops/s
Iteration   3: 132058.356 ops/s
Iteration   4: 132001.529 ops/s
Iteration   5: 128294.366 ops/s
Iteration   6: 133557.604 ops/s
Iteration   7: 131886.574 ops/s
Iteration   8: 133121.727 ops/s
Iteration   9: 129526.515 ops/s
Iteration  10: 127968.275 ops/s
Iteration  11: 129510.206 ops/s
Iteration  12: 131171.597 ops/s
Iteration  13: 127372.972 ops/s
Iteration  14: 131475.981 ops/s
Iteration  15: 123629.074 ops/s
Iteration  16: 130327.097 ops/s
Iteration  17: 131951.962 ops/s
Iteration  18: 128361.756 ops/s
Iteration  19: 131563.419 ops/s
Iteration  20: 127571.152 ops/s
Iteration  21: 132588.501 ops/s
Iteration  22: 128000.185 ops/s
Iteration  23: 130271.076 ops/s
Iteration  24: 131815.251 ops/s
Iteration  25: 125099.250 ops/s
Iteration  26: 134718.047 ops/s
Iteration  27: 127791.121 ops/s
Iteration  28: 129750.442 ops/s
Iteration  29: 133895.839 ops/s
Iteration  30: 126675.347 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_347._Benchmark.benchmark_Cluster_347":
  130004.040 ±(99.9%) 1802.086 ops/s [Average]
  (min, avg, max) = (123629.074, 130004.040, 134718.047), stdev = 2697.277
  CI (99.9%): [128201.954, 131806.126] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_347._Benchmark.benchmark_Cluster_347  thrpt   30  130004.040 ± 1802.086  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_348._Benchmark.benchmark_Cluster_348$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_348._Benchmark.benchmark_Cluster_348

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12673.445 ops/s
# Warmup Iteration   2: 26995.819 ops/s
# Warmup Iteration   3: 39844.856 ops/s
# Warmup Iteration   4: 47380.464 ops/s
# Warmup Iteration   5: 45029.212 ops/s
# Warmup Iteration   6: 112980.742 ops/s
# Warmup Iteration   7: 106800.864 ops/s
# Warmup Iteration   8: 107473.031 ops/s
# Warmup Iteration   9: 109491.260 ops/s
# Warmup Iteration  10: 115314.772 ops/s
# Warmup Iteration  11: 117101.845 ops/s
# Warmup Iteration  12: 122921.160 ops/s
# Warmup Iteration  13: 115725.520 ops/s
# Warmup Iteration  14: 120344.183 ops/s
# Warmup Iteration  15: 119708.361 ops/s
# Warmup Iteration  16: 118985.121 ops/s
# Warmup Iteration  17: 128511.692 ops/s
# Warmup Iteration  18: 122382.118 ops/s
# Warmup Iteration  19: 126998.126 ops/s
# Warmup Iteration  20: 121939.491 ops/s
# Warmup Iteration  21: 128295.916 ops/s
# Warmup Iteration  22: 122392.738 ops/s
# Warmup Iteration  23: 123070.480 ops/s
# Warmup Iteration  24: 126054.127 ops/s
# Warmup Iteration  25: 123859.747 ops/s
# Warmup Iteration  26: 120242.867 ops/s
# Warmup Iteration  27: 125590.794 ops/s
# Warmup Iteration  28: 123497.900 ops/s
# Warmup Iteration  29: 125505.461 ops/s
# Warmup Iteration  30: 127110.004 ops/s
Iteration   1: 119923.907 ops/s
Iteration   2: 125331.247 ops/s
Iteration   3: 118834.971 ops/s
Iteration   4: 125659.103 ops/s
Iteration   5: 121016.459 ops/s
Iteration   6: 125162.159 ops/s
Iteration   7: 129293.833 ops/s
Iteration   8: 121306.768 ops/s
Iteration   9: 127363.527 ops/s
Iteration  10: 123302.185 ops/s
Iteration  11: 125750.780 ops/s
Iteration  12: 122673.056 ops/s
Iteration  13: 124095.577 ops/s
Iteration  14: 124954.142 ops/s
Iteration  15: 123257.123 ops/s
Iteration  16: 123662.816 ops/s
Iteration  17: 125444.560 ops/s
Iteration  18: 123093.833 ops/s
Iteration  19: 125389.269 ops/s
Iteration  20: 124080.158 ops/s
Iteration  21: 125298.018 ops/s
Iteration  22: 120964.623 ops/s
Iteration  23: 127759.783 ops/s
Iteration  24: 126144.300 ops/s
Iteration  25: 124664.438 ops/s
Iteration  26: 122687.571 ops/s
Iteration  27: 124158.379 ops/s
Iteration  28: 127203.679 ops/s
Iteration  29: 126862.795 ops/s
Iteration  30: 123300.585 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_348._Benchmark.benchmark_Cluster_348":
  124287.988 ±(99.9%) 1592.125 ops/s [Average]
  (min, avg, max) = (118834.971, 124287.988, 129293.833), stdev = 2383.019
  CI (99.9%): [122695.863, 125880.114] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_348._Benchmark.benchmark_Cluster_348  thrpt   30  124287.988 ± 1592.125  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_349._Benchmark.benchmark_Cluster_349$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_349._Benchmark.benchmark_Cluster_349

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 535.733 ops/s
# Warmup Iteration   2: 2819.748 ops/s
# Warmup Iteration   3: 7684.369 ops/s
# Warmup Iteration   4: 12354.490 ops/s
# Warmup Iteration   5: 20498.108 ops/s
# Warmup Iteration   6: 20530.347 ops/s
# Warmup Iteration   7: 22875.078 ops/s
# Warmup Iteration   8: 24632.441 ops/s
# Warmup Iteration   9: 27064.199 ops/s
# Warmup Iteration  10: 26538.306 ops/s
# Warmup Iteration  11: 40127.587 ops/s
# Warmup Iteration  12: 63423.631 ops/s
# Warmup Iteration  13: 61136.465 ops/s
# Warmup Iteration  14: 64361.116 ops/s
# Warmup Iteration  15: 60708.355 ops/s
# Warmup Iteration  16: 62862.225 ops/s
# Warmup Iteration  17: 63897.621 ops/s
# Warmup Iteration  18: 61564.661 ops/s
# Warmup Iteration  19: 65135.371 ops/s
# Warmup Iteration  20: 60897.628 ops/s
# Warmup Iteration  21: 63194.214 ops/s
# Warmup Iteration  22: 63134.354 ops/s
# Warmup Iteration  23: 62105.145 ops/s
# Warmup Iteration  24: 63422.987 ops/s
# Warmup Iteration  25: 60492.897 ops/s
# Warmup Iteration  26: 62260.320 ops/s
# Warmup Iteration  27: 64692.027 ops/s
# Warmup Iteration  28: 62040.992 ops/s
# Warmup Iteration  29: 66436.479 ops/s
# Warmup Iteration  30: 60381.819 ops/s
Iteration   1: 63804.952 ops/s
Iteration   2: 63925.391 ops/s
Iteration   3: 62224.370 ops/s
Iteration   4: 63499.686 ops/s
Iteration   5: 62563.534 ops/s
Iteration   6: 63538.075 ops/s
Iteration   7: 63388.694 ops/s
Iteration   8: 61609.490 ops/s
Iteration   9: 64237.348 ops/s
Iteration  10: 62646.147 ops/s
Iteration  11: 65104.084 ops/s
Iteration  12: 62616.343 ops/s
Iteration  13: 61574.730 ops/s
Iteration  14: 65022.427 ops/s
Iteration  15: 64924.858 ops/s
Iteration  16: 60656.456 ops/s
Iteration  17: 64144.693 ops/s
Iteration  18: 62560.514 ops/s
Iteration  19: 61490.799 ops/s
Iteration  20: 64873.294 ops/s
Iteration  21: 62059.381 ops/s
Iteration  22: 61856.869 ops/s
Iteration  23: 64959.596 ops/s
Iteration  24: 60714.154 ops/s
Iteration  25: 64821.334 ops/s
Iteration  26: 61540.638 ops/s
Iteration  27: 61441.806 ops/s
Iteration  28: 63208.097 ops/s
Iteration  29: 60740.363 ops/s
Iteration  30: 63056.706 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_349._Benchmark.benchmark_Cluster_349":
  62960.161 ±(99.9%) 944.826 ops/s [Average]
  (min, avg, max) = (60656.456, 62960.161, 65104.084), stdev = 1414.171
  CI (99.9%): [62015.335, 63904.987] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_349._Benchmark.benchmark_Cluster_349  thrpt   30  62960.161 ± 944.826  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_35._Benchmark.benchmark_Cluster_35$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_35._Benchmark.benchmark_Cluster_35

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13159.718 ops/s
# Warmup Iteration   2: 70403.272 ops/s
# Warmup Iteration   3: 91483.387 ops/s
# Warmup Iteration   4: 109161.096 ops/s
# Warmup Iteration   5: 118638.969 ops/s
# Warmup Iteration   6: 107771.499 ops/s
# Warmup Iteration   7: 120844.461 ops/s
# Warmup Iteration   8: 125416.692 ops/s
# Warmup Iteration   9: 117652.566 ops/s
# Warmup Iteration  10: 122744.446 ops/s
# Warmup Iteration  11: 120443.582 ops/s
# Warmup Iteration  12: 119125.915 ops/s
# Warmup Iteration  13: 125602.791 ops/s
# Warmup Iteration  14: 119750.349 ops/s
# Warmup Iteration  15: 119311.214 ops/s
# Warmup Iteration  16: 125275.741 ops/s
# Warmup Iteration  17: 123154.710 ops/s
# Warmup Iteration  18: 129934.458 ops/s
# Warmup Iteration  19: 123990.507 ops/s
# Warmup Iteration  20: 126263.723 ops/s
# Warmup Iteration  21: 126138.632 ops/s
# Warmup Iteration  22: 124440.311 ops/s
# Warmup Iteration  23: 124323.136 ops/s
# Warmup Iteration  24: 128019.694 ops/s
# Warmup Iteration  25: 126641.711 ops/s
# Warmup Iteration  26: 125454.279 ops/s
# Warmup Iteration  27: 125575.289 ops/s
# Warmup Iteration  28: 126392.384 ops/s
# Warmup Iteration  29: 122990.562 ops/s
# Warmup Iteration  30: 129864.528 ops/s
Iteration   1: 122252.333 ops/s
Iteration   2: 128144.076 ops/s
Iteration   3: 123163.526 ops/s
Iteration   4: 126457.519 ops/s
Iteration   5: 129754.573 ops/s
Iteration   6: 121911.968 ops/s
Iteration   7: 125815.014 ops/s
Iteration   8: 123820.574 ops/s
Iteration   9: 124476.768 ops/s
Iteration  10: 128127.173 ops/s
Iteration  11: 124169.606 ops/s
Iteration  12: 125425.838 ops/s
Iteration  13: 127099.667 ops/s
Iteration  14: 125437.357 ops/s
Iteration  15: 121288.595 ops/s
Iteration  16: 128617.384 ops/s
Iteration  17: 123691.309 ops/s
Iteration  18: 125267.731 ops/s
Iteration  19: 131834.130 ops/s
Iteration  20: 120405.941 ops/s
Iteration  21: 128579.313 ops/s
Iteration  22: 124710.849 ops/s
Iteration  23: 124417.759 ops/s
Iteration  24: 125770.100 ops/s
Iteration  25: 126799.083 ops/s
Iteration  26: 124530.579 ops/s
Iteration  27: 120340.016 ops/s
Iteration  28: 126295.755 ops/s
Iteration  29: 119012.618 ops/s
Iteration  30: 122156.264 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_35._Benchmark.benchmark_Cluster_35":
  124992.447 ±(99.9%) 1976.189 ops/s [Average]
  (min, avg, max) = (119012.618, 124992.447, 131834.130), stdev = 2957.867
  CI (99.9%): [123016.258, 126968.637] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_35._Benchmark.benchmark_Cluster_35  thrpt   30  124992.447 ± 1976.189  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_350._Benchmark.benchmark_Cluster_350$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_350._Benchmark.benchmark_Cluster_350

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1298.296 ops/s
# Warmup Iteration   2: 14172.988 ops/s
# Warmup Iteration   3: 23579.660 ops/s
# Warmup Iteration   4: 30174.677 ops/s
# Warmup Iteration   5: 29358.758 ops/s
# Warmup Iteration   6: 48344.282 ops/s
# Warmup Iteration   7: 46435.777 ops/s
# Warmup Iteration   8: 84985.808 ops/s
# Warmup Iteration   9: 104646.522 ops/s
# Warmup Iteration  10: 107628.890 ops/s
# Warmup Iteration  11: 110849.034 ops/s
# Warmup Iteration  12: 105198.343 ops/s
# Warmup Iteration  13: 108220.565 ops/s
# Warmup Iteration  14: 95215.382 ops/s
# Warmup Iteration  15: 109753.753 ops/s
# Warmup Iteration  16: 108180.180 ops/s
# Warmup Iteration  17: 110589.647 ops/s
# Warmup Iteration  18: 111211.931 ops/s
# Warmup Iteration  19: 106846.074 ops/s
# Warmup Iteration  20: 112688.914 ops/s
# Warmup Iteration  21: 108230.410 ops/s
# Warmup Iteration  22: 110917.732 ops/s
# Warmup Iteration  23: 108069.413 ops/s
# Warmup Iteration  24: 108353.150 ops/s
# Warmup Iteration  25: 114853.916 ops/s
# Warmup Iteration  26: 114446.201 ops/s
# Warmup Iteration  27: 106234.543 ops/s
# Warmup Iteration  28: 106986.122 ops/s
# Warmup Iteration  29: 111329.219 ops/s
# Warmup Iteration  30: 107009.625 ops/s
Iteration   1: 114339.888 ops/s
Iteration   2: 107977.551 ops/s
Iteration   3: 108812.749 ops/s
Iteration   4: 113933.553 ops/s
Iteration   5: 111227.573 ops/s
Iteration   6: 103845.803 ops/s
Iteration   7: 112090.865 ops/s
Iteration   8: 106854.452 ops/s
Iteration   9: 113568.691 ops/s
Iteration  10: 110074.306 ops/s
Iteration  11: 104561.924 ops/s
Iteration  12: 112971.673 ops/s
Iteration  13: 111781.667 ops/s
Iteration  14: 105467.658 ops/s
Iteration  15: 113688.143 ops/s
Iteration  16: 113354.791 ops/s
Iteration  17: 108111.218 ops/s
Iteration  18: 113397.748 ops/s
Iteration  19: 107758.470 ops/s
Iteration  20: 112229.853 ops/s
Iteration  21: 109937.542 ops/s
Iteration  22: 110916.936 ops/s
Iteration  23: 109041.893 ops/s
Iteration  24: 111575.277 ops/s
Iteration  25: 110421.530 ops/s
Iteration  26: 108484.932 ops/s
Iteration  27: 111839.946 ops/s
Iteration  28: 108412.566 ops/s
Iteration  29: 88185.055 ops/s
Iteration  30: 115017.459 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_350._Benchmark.benchmark_Cluster_350":
  109662.724 ±(99.9%) 3348.752 ops/s [Average]
  (min, avg, max) = (88185.055, 109662.724, 115017.459), stdev = 5012.255
  CI (99.9%): [106313.972, 113011.476] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_350._Benchmark.benchmark_Cluster_350  thrpt   30  109662.724 ± 3348.752  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_351._Benchmark.benchmark_Cluster_351$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_351._Benchmark.benchmark_Cluster_351

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 904.071 ops/s
# Warmup Iteration   2: 5896.179 ops/s
# Warmup Iteration   3: 21107.548 ops/s
# Warmup Iteration   4: 28742.046 ops/s
# Warmup Iteration   5: 36828.039 ops/s
# Warmup Iteration   6: 21796.595 ops/s
# Warmup Iteration   7: 24918.430 ops/s
# Warmup Iteration   8: 28846.488 ops/s
# Warmup Iteration   9: 34040.160 ops/s
# Warmup Iteration  10: 38928.030 ops/s
# Warmup Iteration  11: 57225.487 ops/s
# Warmup Iteration  12: 71500.100 ops/s
# Warmup Iteration  13: 85089.266 ops/s
# Warmup Iteration  14: 87763.698 ops/s
# Warmup Iteration  15: 84874.468 ops/s
# Warmup Iteration  16: 87980.060 ops/s
# Warmup Iteration  17: 89937.769 ops/s
# Warmup Iteration  18: 84211.213 ops/s
# Warmup Iteration  19: 84756.955 ops/s
# Warmup Iteration  20: 85650.713 ops/s
# Warmup Iteration  21: 89358.474 ops/s
# Warmup Iteration  22: 88171.510 ops/s
# Warmup Iteration  23: 89262.313 ops/s
# Warmup Iteration  24: 89481.680 ops/s
# Warmup Iteration  25: 86793.572 ops/s
# Warmup Iteration  26: 91133.507 ops/s
# Warmup Iteration  27: 89130.925 ops/s
# Warmup Iteration  28: 86137.766 ops/s
# Warmup Iteration  29: 89827.051 ops/s
# Warmup Iteration  30: 88246.305 ops/s
Iteration   1: 88302.173 ops/s
Iteration   2: 88962.060 ops/s
Iteration   3: 87429.459 ops/s
Iteration   4: 90877.799 ops/s
Iteration   5: 87208.083 ops/s
Iteration   6: 88227.168 ops/s
Iteration   7: 86851.707 ops/s
Iteration   8: 87632.607 ops/s
Iteration   9: 92342.555 ops/s
Iteration  10: 85198.849 ops/s
Iteration  11: 92127.581 ops/s
Iteration  12: 91618.121 ops/s
Iteration  13: 85987.755 ops/s
Iteration  14: 89325.866 ops/s
Iteration  15: 86121.291 ops/s
Iteration  16: 89836.225 ops/s
Iteration  17: 88931.030 ops/s
Iteration  18: 87384.480 ops/s
Iteration  19: 91682.869 ops/s
Iteration  20: 87208.548 ops/s
Iteration  21: 88414.653 ops/s
Iteration  22: 90845.043 ops/s
Iteration  23: 85609.684 ops/s
Iteration  24: 90547.226 ops/s
Iteration  25: 89255.941 ops/s
Iteration  26: 89765.636 ops/s
Iteration  27: 90374.001 ops/s
Iteration  28: 85427.613 ops/s
Iteration  29: 91130.737 ops/s
Iteration  30: 87348.837 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_351._Benchmark.benchmark_Cluster_351":
  88732.520 ±(99.9%) 1405.155 ops/s [Average]
  (min, avg, max) = (85198.849, 88732.520, 92342.555), stdev = 2103.170
  CI (99.9%): [87327.365, 90137.675] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_351._Benchmark.benchmark_Cluster_351  thrpt   30  88732.520 ± 1405.155  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_352._Benchmark.benchmark_Cluster_352$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_352._Benchmark.benchmark_Cluster_352

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12306.243 ops/s
# Warmup Iteration   2: 33735.082 ops/s
# Warmup Iteration   3: 45138.238 ops/s
# Warmup Iteration   4: 105854.914 ops/s
# Warmup Iteration   5: 126519.967 ops/s
# Warmup Iteration   6: 123698.791 ops/s
# Warmup Iteration   7: 119378.652 ops/s
# Warmup Iteration   8: 123672.611 ops/s
# Warmup Iteration   9: 127322.069 ops/s
# Warmup Iteration  10: 117703.026 ops/s
# Warmup Iteration  11: 120553.080 ops/s
# Warmup Iteration  12: 126430.759 ops/s
# Warmup Iteration  13: 119683.958 ops/s
# Warmup Iteration  14: 119312.701 ops/s
# Warmup Iteration  15: 127596.694 ops/s
# Warmup Iteration  16: 114034.500 ops/s
# Warmup Iteration  17: 130127.567 ops/s
# Warmup Iteration  18: 128556.492 ops/s
# Warmup Iteration  19: 128315.531 ops/s
# Warmup Iteration  20: 133240.792 ops/s
# Warmup Iteration  21: 125055.598 ops/s
# Warmup Iteration  22: 129997.309 ops/s
# Warmup Iteration  23: 128672.572 ops/s
# Warmup Iteration  24: 128778.445 ops/s
# Warmup Iteration  25: 123272.480 ops/s
# Warmup Iteration  26: 126768.463 ops/s
# Warmup Iteration  27: 130974.457 ops/s
# Warmup Iteration  28: 124850.216 ops/s
# Warmup Iteration  29: 138686.696 ops/s
# Warmup Iteration  30: 125212.369 ops/s
Iteration   1: 133448.442 ops/s
Iteration   2: 127575.917 ops/s
Iteration   3: 125778.429 ops/s
Iteration   4: 141727.335 ops/s
Iteration   5: 125311.149 ops/s
Iteration   6: 134184.802 ops/s
Iteration   7: 124962.596 ops/s
Iteration   8: 130219.150 ops/s
Iteration   9: 145149.066 ops/s
Iteration  10: 137559.064 ops/s
Iteration  11: 126283.627 ops/s
Iteration  12: 143491.840 ops/s
Iteration  13: 132177.420 ops/s
Iteration  14: 132208.899 ops/s
Iteration  15: 130827.604 ops/s
Iteration  16: 120828.351 ops/s
Iteration  17: 125663.940 ops/s
Iteration  18: 133592.717 ops/s
Iteration  19: 131383.479 ops/s
Iteration  20: 135792.503 ops/s
Iteration  21: 137442.635 ops/s
Iteration  22: 130702.697 ops/s
Iteration  23: 120879.632 ops/s
Iteration  24: 137936.783 ops/s
Iteration  25: 149779.466 ops/s
Iteration  26: 131977.164 ops/s
Iteration  27: 128522.066 ops/s
Iteration  28: 134297.099 ops/s
Iteration  29: 126928.183 ops/s
Iteration  30: 130477.157 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_352._Benchmark.benchmark_Cluster_352":
  132236.974 ±(99.9%) 4574.475 ops/s [Average]
  (min, avg, max) = (120828.351, 132236.974, 149779.466), stdev = 6846.859
  CI (99.9%): [127662.499, 136811.449] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_352._Benchmark.benchmark_Cluster_352  thrpt   30  132236.974 ± 4574.475  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_353._Benchmark.benchmark_Cluster_353$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_353._Benchmark.benchmark_Cluster_353

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4916.277 ops/s
# Warmup Iteration   2: 33162.224 ops/s
# Warmup Iteration   3: 36604.597 ops/s
# Warmup Iteration   4: 42999.295 ops/s
# Warmup Iteration   5: 36966.836 ops/s
# Warmup Iteration   6: 48394.150 ops/s
# Warmup Iteration   7: 49620.690 ops/s
# Warmup Iteration   8: 45545.816 ops/s
# Warmup Iteration   9: 112132.512 ops/s
# Warmup Iteration  10: 111031.412 ops/s
# Warmup Iteration  11: 119466.062 ops/s
# Warmup Iteration  12: 116603.298 ops/s
# Warmup Iteration  13: 117803.102 ops/s
# Warmup Iteration  14: 118311.084 ops/s
# Warmup Iteration  15: 118785.804 ops/s
# Warmup Iteration  16: 119631.335 ops/s
# Warmup Iteration  17: 116988.560 ops/s
# Warmup Iteration  18: 118653.306 ops/s
# Warmup Iteration  19: 118091.298 ops/s
# Warmup Iteration  20: 116627.278 ops/s
# Warmup Iteration  21: 120259.325 ops/s
# Warmup Iteration  22: 116649.435 ops/s
# Warmup Iteration  23: 124877.741 ops/s
# Warmup Iteration  24: 117915.485 ops/s
# Warmup Iteration  25: 114510.526 ops/s
# Warmup Iteration  26: 123100.263 ops/s
# Warmup Iteration  27: 115072.482 ops/s
# Warmup Iteration  28: 122464.884 ops/s
# Warmup Iteration  29: 116724.631 ops/s
# Warmup Iteration  30: 122017.502 ops/s
Iteration   1: 120355.429 ops/s
Iteration   2: 118139.476 ops/s
Iteration   3: 117417.524 ops/s
Iteration   4: 120471.183 ops/s
Iteration   5: 116967.725 ops/s
Iteration   6: 121240.173 ops/s
Iteration   7: 124078.608 ops/s
Iteration   8: 113233.064 ops/s
Iteration   9: 121528.676 ops/s
Iteration  10: 114932.802 ops/s
Iteration  11: 122785.452 ops/s
Iteration  12: 117880.044 ops/s
Iteration  13: 119273.962 ops/s
Iteration  14: 121242.367 ops/s
Iteration  15: 117806.704 ops/s
Iteration  16: 116937.501 ops/s
Iteration  17: 121502.429 ops/s
Iteration  18: 115740.615 ops/s
Iteration  19: 118335.239 ops/s
Iteration  20: 116289.946 ops/s
Iteration  21: 114457.474 ops/s
Iteration  22: 118295.380 ops/s
Iteration  23: 117427.584 ops/s
Iteration  24: 123338.824 ops/s
Iteration  25: 120245.631 ops/s
Iteration  26: 117509.989 ops/s
Iteration  27: 123402.422 ops/s
Iteration  28: 118316.898 ops/s
Iteration  29: 123542.130 ops/s
Iteration  30: 115200.354 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_353._Benchmark.benchmark_Cluster_353":
  118929.854 ±(99.9%) 1963.166 ops/s [Average]
  (min, avg, max) = (113233.064, 118929.854, 124078.608), stdev = 2938.374
  CI (99.9%): [116966.688, 120893.019] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_353._Benchmark.benchmark_Cluster_353  thrpt   30  118929.854 ± 1963.166  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_354._Benchmark.benchmark_Cluster_354$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_354._Benchmark.benchmark_Cluster_354

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2442.429 ops/s
# Warmup Iteration   2: 15941.473 ops/s
# Warmup Iteration   3: 20714.116 ops/s
# Warmup Iteration   4: 17906.937 ops/s
# Warmup Iteration   5: 22252.849 ops/s
# Warmup Iteration   6: 18041.517 ops/s
# Warmup Iteration   7: 22902.403 ops/s
# Warmup Iteration   8: 22439.080 ops/s
# Warmup Iteration   9: 18141.310 ops/s
# Warmup Iteration  10: 18609.239 ops/s
# Warmup Iteration  11: 18613.299 ops/s
# Warmup Iteration  12: 18787.706 ops/s
# Warmup Iteration  13: 18291.547 ops/s
# Warmup Iteration  14: 18887.613 ops/s
# Warmup Iteration  15: 18864.267 ops/s
# Warmup Iteration  16: 19034.786 ops/s
# Warmup Iteration  17: 17797.094 ops/s
# Warmup Iteration  18: 18446.438 ops/s
# Warmup Iteration  19: 17722.818 ops/s
# Warmup Iteration  20: 18637.723 ops/s
# Warmup Iteration  21: 17943.915 ops/s
# Warmup Iteration  22: 18743.337 ops/s
# Warmup Iteration  23: 19338.717 ops/s
# Warmup Iteration  24: 18455.316 ops/s
# Warmup Iteration  25: 18989.315 ops/s
# Warmup Iteration  26: 18303.611 ops/s
# Warmup Iteration  27: 18559.344 ops/s
# Warmup Iteration  28: 18633.964 ops/s
# Warmup Iteration  29: 18554.400 ops/s
# Warmup Iteration  30: 18783.815 ops/s
Iteration   1: 18635.488 ops/s
Iteration   2: 17833.118 ops/s
Iteration   3: 18655.904 ops/s
Iteration   4: 18961.252 ops/s
Iteration   5: 18418.687 ops/s
Iteration   6: 18650.165 ops/s
Iteration   7: 17908.619 ops/s
Iteration   8: 19249.348 ops/s
Iteration   9: 18976.880 ops/s
Iteration  10: 18362.377 ops/s
Iteration  11: 17941.295 ops/s
Iteration  12: 18677.613 ops/s
Iteration  13: 18879.052 ops/s
Iteration  14: 18958.212 ops/s
Iteration  15: 18799.843 ops/s
Iteration  16: 19073.779 ops/s
Iteration  17: 21144.505 ops/s
Iteration  18: 20256.923 ops/s
Iteration  19: 19326.052 ops/s
Iteration  20: 18989.987 ops/s
Iteration  21: 18554.524 ops/s
Iteration  22: 18401.627 ops/s
Iteration  23: 18244.362 ops/s
Iteration  24: 18121.180 ops/s
Iteration  25: 18534.173 ops/s
Iteration  26: 18808.772 ops/s
Iteration  27: 18923.068 ops/s
Iteration  28: 18131.124 ops/s
Iteration  29: 18871.466 ops/s
Iteration  30: 18925.722 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_354._Benchmark.benchmark_Cluster_354":
  18773.837 ±(99.9%) 442.284 ops/s [Average]
  (min, avg, max) = (17833.118, 18773.837, 21144.505), stdev = 661.990
  CI (99.9%): [18331.553, 19216.122] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_354._Benchmark.benchmark_Cluster_354  thrpt   30  18773.837 ± 442.284  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_355._Benchmark.benchmark_Cluster_355$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_355._Benchmark.benchmark_Cluster_355

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.823 ops/s
# Warmup Iteration   2: 4265.144 ops/s
# Warmup Iteration   3: 27939.513 ops/s
# Warmup Iteration   4: 49371.663 ops/s
# Warmup Iteration   5: 52381.400 ops/s
# Warmup Iteration   6: 50728.741 ops/s
# Warmup Iteration   7: 75047.757 ops/s
# Warmup Iteration   8: 81921.894 ops/s
# Warmup Iteration   9: 70588.041 ops/s
# Warmup Iteration  10: 123571.164 ops/s
# Warmup Iteration  11: 179264.183 ops/s
# Warmup Iteration  12: 183027.658 ops/s
# Warmup Iteration  13: 181383.299 ops/s
# Warmup Iteration  14: 191341.135 ops/s
# Warmup Iteration  15: 193336.242 ops/s
# Warmup Iteration  16: 187516.127 ops/s
# Warmup Iteration  17: 194476.905 ops/s
# Warmup Iteration  18: 190970.059 ops/s
# Warmup Iteration  19: 195690.420 ops/s
# Warmup Iteration  20: 187714.673 ops/s
# Warmup Iteration  21: 191741.462 ops/s
# Warmup Iteration  22: 186374.947 ops/s
# Warmup Iteration  23: 180190.709 ops/s
# Warmup Iteration  24: 192752.236 ops/s
# Warmup Iteration  25: 194891.637 ops/s
# Warmup Iteration  26: 192829.034 ops/s
# Warmup Iteration  27: 197434.122 ops/s
# Warmup Iteration  28: 187644.420 ops/s
# Warmup Iteration  29: 196811.524 ops/s
# Warmup Iteration  30: 200462.611 ops/s
Iteration   1: 190005.422 ops/s
Iteration   2: 197991.341 ops/s
Iteration   3: 189633.030 ops/s
Iteration   4: 202368.845 ops/s
Iteration   5: 191426.786 ops/s
Iteration   6: 198217.240 ops/s
Iteration   7: 200288.166 ops/s
Iteration   8: 194250.971 ops/s
Iteration   9: 196502.524 ops/s
Iteration  10: 204018.692 ops/s
Iteration  11: 189276.521 ops/s
Iteration  12: 192756.521 ops/s
Iteration  13: 202749.649 ops/s
Iteration  14: 191304.325 ops/s
Iteration  15: 199168.592 ops/s
Iteration  16: 188528.298 ops/s
Iteration  17: 204695.504 ops/s
Iteration  18: 198494.770 ops/s
Iteration  19: 191929.661 ops/s
Iteration  20: 198223.949 ops/s
Iteration  21: 192124.193 ops/s
Iteration  22: 198615.365 ops/s
Iteration  23: 194908.256 ops/s
Iteration  24: 198696.260 ops/s
Iteration  25: 194314.646 ops/s
Iteration  26: 192232.793 ops/s
Iteration  27: 200414.733 ops/s
Iteration  28: 185763.763 ops/s
Iteration  29: 195470.335 ops/s
Iteration  30: 193984.305 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_355._Benchmark.benchmark_Cluster_355":
  195611.849 ±(99.9%) 3275.020 ops/s [Average]
  (min, avg, max) = (185763.763, 195611.849, 204695.504), stdev = 4901.896
  CI (99.9%): [192336.829, 198886.868] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_355._Benchmark.benchmark_Cluster_355  thrpt   30  195611.849 ± 3275.020  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_356._Benchmark.benchmark_Cluster_356$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_356._Benchmark.benchmark_Cluster_356

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2869.408 ops/s
# Warmup Iteration   2: 14748.047 ops/s
# Warmup Iteration   3: 12400.854 ops/s
# Warmup Iteration   4: 29051.543 ops/s
# Warmup Iteration   5: 34532.245 ops/s
# Warmup Iteration   6: 36296.723 ops/s
# Warmup Iteration   7: 46344.609 ops/s
# Warmup Iteration   8: 42584.333 ops/s
# Warmup Iteration   9: 43833.137 ops/s
# Warmup Iteration  10: 44849.539 ops/s
# Warmup Iteration  11: 45127.715 ops/s
# Warmup Iteration  12: 43254.702 ops/s
# Warmup Iteration  13: 45878.412 ops/s
# Warmup Iteration  14: 43326.813 ops/s
# Warmup Iteration  15: 45702.982 ops/s
# Warmup Iteration  16: 42530.911 ops/s
# Warmup Iteration  17: 45619.604 ops/s
# Warmup Iteration  18: 42014.353 ops/s
# Warmup Iteration  19: 44597.101 ops/s
# Warmup Iteration  20: 49178.103 ops/s
# Warmup Iteration  21: 41910.917 ops/s
# Warmup Iteration  22: 39818.876 ops/s
# Warmup Iteration  23: 34512.272 ops/s
# Warmup Iteration  24: 39202.800 ops/s
# Warmup Iteration  25: 39753.059 ops/s
# Warmup Iteration  26: 50617.780 ops/s
# Warmup Iteration  27: 43421.117 ops/s
# Warmup Iteration  28: 45433.426 ops/s
# Warmup Iteration  29: 45273.122 ops/s
# Warmup Iteration  30: 42212.920 ops/s
Iteration   1: 46531.860 ops/s
Iteration   2: 47208.258 ops/s
Iteration   3: 43314.390 ops/s
Iteration   4: 47988.363 ops/s
Iteration   5: 42930.597 ops/s
Iteration   6: 47596.422 ops/s
Iteration   7: 47520.667 ops/s
Iteration   8: 45825.450 ops/s
Iteration   9: 46394.228 ops/s
Iteration  10: 44685.622 ops/s
Iteration  11: 42087.783 ops/s
Iteration  12: 45560.729 ops/s
Iteration  13: 46817.293 ops/s
Iteration  14: 44417.208 ops/s
Iteration  15: 46048.271 ops/s
Iteration  16: 43002.883 ops/s
Iteration  17: 46648.802 ops/s
Iteration  18: 47273.407 ops/s
Iteration  19: 49052.342 ops/s
Iteration  20: 45935.990 ops/s
Iteration  21: 48010.661 ops/s
Iteration  22: 47580.012 ops/s
Iteration  23: 45616.409 ops/s
Iteration  24: 43886.527 ops/s
Iteration  25: 45318.270 ops/s
Iteration  26: 45264.517 ops/s
Iteration  27: 44339.316 ops/s
Iteration  28: 41030.547 ops/s
Iteration  29: 46705.279 ops/s
Iteration  30: 41368.135 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_356._Benchmark.benchmark_Cluster_356":
  45532.008 ±(99.9%) 1376.611 ops/s [Average]
  (min, avg, max) = (41030.547, 45532.008, 49052.342), stdev = 2060.447
  CI (99.9%): [44155.397, 46908.619] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_356._Benchmark.benchmark_Cluster_356  thrpt   30  45532.008 ± 1376.611  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_357._Benchmark.benchmark_Cluster_357$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_357._Benchmark.benchmark_Cluster_357

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1761.236 ops/s
# Warmup Iteration   2: 13830.054 ops/s
# Warmup Iteration   3: 23369.050 ops/s
# Warmup Iteration   4: 34311.112 ops/s
# Warmup Iteration   5: 28430.725 ops/s
# Warmup Iteration   6: 26107.965 ops/s
# Warmup Iteration   7: 36312.665 ops/s
# Warmup Iteration   8: 81180.359 ops/s
# Warmup Iteration   9: 83441.295 ops/s
# Warmup Iteration  10: 90729.462 ops/s
# Warmup Iteration  11: 86744.938 ops/s
# Warmup Iteration  12: 87259.369 ops/s
# Warmup Iteration  13: 85176.939 ops/s
# Warmup Iteration  14: 85003.116 ops/s
# Warmup Iteration  15: 82143.885 ops/s
# Warmup Iteration  16: 82861.350 ops/s
# Warmup Iteration  17: 92365.297 ops/s
# Warmup Iteration  18: 85431.638 ops/s
# Warmup Iteration  19: 89708.209 ops/s
# Warmup Iteration  20: 87593.996 ops/s
# Warmup Iteration  21: 88215.524 ops/s
# Warmup Iteration  22: 87617.606 ops/s
# Warmup Iteration  23: 89310.027 ops/s
# Warmup Iteration  24: 86597.874 ops/s
# Warmup Iteration  25: 90429.559 ops/s
# Warmup Iteration  26: 88697.145 ops/s
# Warmup Iteration  27: 88494.838 ops/s
# Warmup Iteration  28: 81182.146 ops/s
# Warmup Iteration  29: 91009.207 ops/s
# Warmup Iteration  30: 89687.832 ops/s
Iteration   1: 85958.896 ops/s
Iteration   2: 90642.705 ops/s
Iteration   3: 88310.123 ops/s
Iteration   4: 88634.875 ops/s
Iteration   5: 88941.143 ops/s
Iteration   6: 87099.912 ops/s
Iteration   7: 89053.263 ops/s
Iteration   8: 87980.319 ops/s
Iteration   9: 91377.147 ops/s
Iteration  10: 87319.993 ops/s
Iteration  11: 89559.840 ops/s
Iteration  12: 94125.529 ops/s
Iteration  13: 86541.452 ops/s
Iteration  14: 90083.795 ops/s
Iteration  15: 89266.401 ops/s
Iteration  16: 90221.744 ops/s
Iteration  17: 86385.881 ops/s
Iteration  18: 88246.530 ops/s
Iteration  19: 92314.197 ops/s
Iteration  20: 87020.568 ops/s
Iteration  21: 90314.971 ops/s
Iteration  22: 86478.531 ops/s
Iteration  23: 90249.794 ops/s
Iteration  24: 89214.778 ops/s
Iteration  25: 88057.869 ops/s
Iteration  26: 91890.160 ops/s
Iteration  27: 85722.715 ops/s
Iteration  28: 88137.760 ops/s
Iteration  29: 86363.196 ops/s
Iteration  30: 89494.954 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_357._Benchmark.benchmark_Cluster_357":
  88833.635 ±(99.9%) 1359.881 ops/s [Average]
  (min, avg, max) = (85722.715, 88833.635, 94125.529), stdev = 2035.405
  CI (99.9%): [87473.754, 90193.515] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_357._Benchmark.benchmark_Cluster_357  thrpt   30  88833.635 ± 1359.881  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_358._Benchmark.benchmark_Cluster_358$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_358._Benchmark.benchmark_Cluster_358

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6546.361 ops/s
# Warmup Iteration   2: 21094.484 ops/s
# Warmup Iteration   3: 39299.503 ops/s
# Warmup Iteration   4: 78518.843 ops/s
# Warmup Iteration   5: 99996.561 ops/s
# Warmup Iteration   6: 114975.180 ops/s
# Warmup Iteration   7: 108970.848 ops/s
# Warmup Iteration   8: 109574.166 ops/s
# Warmup Iteration   9: 113104.661 ops/s
# Warmup Iteration  10: 102558.629 ops/s
# Warmup Iteration  11: 109128.153 ops/s
# Warmup Iteration  12: 113954.889 ops/s
# Warmup Iteration  13: 110466.599 ops/s
# Warmup Iteration  14: 114047.347 ops/s
# Warmup Iteration  15: 107972.501 ops/s
# Warmup Iteration  16: 112160.799 ops/s
# Warmup Iteration  17: 116136.464 ops/s
# Warmup Iteration  18: 111790.653 ops/s
# Warmup Iteration  19: 116954.142 ops/s
# Warmup Iteration  20: 117661.024 ops/s
# Warmup Iteration  21: 108572.973 ops/s
# Warmup Iteration  22: 117309.379 ops/s
# Warmup Iteration  23: 117243.812 ops/s
# Warmup Iteration  24: 112758.572 ops/s
# Warmup Iteration  25: 107226.292 ops/s
# Warmup Iteration  26: 113444.900 ops/s
# Warmup Iteration  27: 117090.541 ops/s
# Warmup Iteration  28: 112348.658 ops/s
# Warmup Iteration  29: 115721.651 ops/s
# Warmup Iteration  30: 115970.276 ops/s
Iteration   1: 113702.518 ops/s
Iteration   2: 117959.675 ops/s
Iteration   3: 117892.329 ops/s
Iteration   4: 113790.582 ops/s
Iteration   5: 91218.414 ops/s
Iteration   6: 116799.820 ops/s
Iteration   7: 112997.866 ops/s
Iteration   8: 116916.004 ops/s
Iteration   9: 112805.350 ops/s
Iteration  10: 117548.531 ops/s
Iteration  11: 115967.136 ops/s
Iteration  12: 109977.075 ops/s
Iteration  13: 118188.844 ops/s
Iteration  14: 114929.365 ops/s
Iteration  15: 114878.854 ops/s
Iteration  16: 113422.188 ops/s
Iteration  17: 116759.443 ops/s
Iteration  18: 114454.545 ops/s
Iteration  19: 110458.242 ops/s
Iteration  20: 112883.952 ops/s
Iteration  21: 114358.218 ops/s
Iteration  22: 118225.985 ops/s
Iteration  23: 112450.459 ops/s
Iteration  24: 116567.476 ops/s
Iteration  25: 112744.903 ops/s
Iteration  26: 113865.493 ops/s
Iteration  27: 115995.476 ops/s
Iteration  28: 114136.101 ops/s
Iteration  29: 116832.492 ops/s
Iteration  30: 114138.959 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_358._Benchmark.benchmark_Cluster_358":
  114095.543 ±(99.9%) 3242.006 ops/s [Average]
  (min, avg, max) = (91218.414, 114095.543, 118225.985), stdev = 4852.483
  CI (99.9%): [110853.537, 117337.549] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_358._Benchmark.benchmark_Cluster_358  thrpt   30  114095.543 ± 3242.006  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_359._Benchmark.benchmark_Cluster_359$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_359._Benchmark.benchmark_Cluster_359

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8486.735 ops/s
# Warmup Iteration   2: 20717.549 ops/s
# Warmup Iteration   3: 25064.081 ops/s
# Warmup Iteration   4: 36609.802 ops/s
# Warmup Iteration   5: 35199.252 ops/s
# Warmup Iteration   6: 42825.779 ops/s
# Warmup Iteration   7: 38487.143 ops/s
# Warmup Iteration   8: 43173.047 ops/s
# Warmup Iteration   9: 63663.824 ops/s
# Warmup Iteration  10: 83244.645 ops/s
# Warmup Iteration  11: 88517.924 ops/s
# Warmup Iteration  12: 91395.546 ops/s
# Warmup Iteration  13: 87859.115 ops/s
# Warmup Iteration  14: 89356.666 ops/s
# Warmup Iteration  15: 89711.433 ops/s
# Warmup Iteration  16: 87610.609 ops/s
# Warmup Iteration  17: 91246.520 ops/s
# Warmup Iteration  18: 94041.787 ops/s
# Warmup Iteration  19: 86808.047 ops/s
# Warmup Iteration  20: 95066.710 ops/s
# Warmup Iteration  21: 92150.128 ops/s
# Warmup Iteration  22: 86531.386 ops/s
# Warmup Iteration  23: 93472.765 ops/s
# Warmup Iteration  24: 89010.553 ops/s
# Warmup Iteration  25: 94811.857 ops/s
# Warmup Iteration  26: 93358.472 ops/s
# Warmup Iteration  27: 90556.454 ops/s
# Warmup Iteration  28: 87302.643 ops/s
# Warmup Iteration  29: 91350.654 ops/s
# Warmup Iteration  30: 95144.390 ops/s
Iteration   1: 91982.807 ops/s
Iteration   2: 91443.280 ops/s
Iteration   3: 93295.588 ops/s
Iteration   4: 93546.269 ops/s
Iteration   5: 94679.146 ops/s
Iteration   6: 93932.751 ops/s
Iteration   7: 94090.323 ops/s
Iteration   8: 94269.910 ops/s
Iteration   9: 91110.549 ops/s
Iteration  10: 94650.670 ops/s
Iteration  11: 92363.878 ops/s
Iteration  12: 92573.534 ops/s
Iteration  13: 93976.416 ops/s
Iteration  14: 93511.260 ops/s
Iteration  15: 91655.346 ops/s
Iteration  16: 93523.881 ops/s
Iteration  17: 88863.803 ops/s
Iteration  18: 95134.532 ops/s
Iteration  19: 91355.187 ops/s
Iteration  20: 94433.761 ops/s
Iteration  21: 90853.502 ops/s
Iteration  22: 90382.925 ops/s
Iteration  23: 96183.645 ops/s
Iteration  24: 90292.319 ops/s
Iteration  25: 95588.261 ops/s
Iteration  26: 90986.523 ops/s
Iteration  27: 93336.219 ops/s
Iteration  28: 91566.007 ops/s
Iteration  29: 92244.885 ops/s
Iteration  30: 95473.626 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_359._Benchmark.benchmark_Cluster_359":
  92910.027 ±(99.9%) 1210.712 ops/s [Average]
  (min, avg, max) = (88863.803, 92910.027, 96183.645), stdev = 1812.136
  CI (99.9%): [91699.315, 94120.738] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_359._Benchmark.benchmark_Cluster_359  thrpt   30  92910.027 ± 1210.712  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_36._Benchmark.benchmark_Cluster_36$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_36._Benchmark.benchmark_Cluster_36

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3993.895 ops/s
# Warmup Iteration   2: 33195.691 ops/s
# Warmup Iteration   3: 48968.689 ops/s
# Warmup Iteration   4: 66289.080 ops/s
# Warmup Iteration   5: 41862.053 ops/s
# Warmup Iteration   6: 117201.896 ops/s
# Warmup Iteration   7: 130286.656 ops/s
# Warmup Iteration   8: 122243.583 ops/s
# Warmup Iteration   9: 135867.645 ops/s
# Warmup Iteration  10: 131354.726 ops/s
# Warmup Iteration  11: 128358.524 ops/s
# Warmup Iteration  12: 133161.282 ops/s
# Warmup Iteration  13: 132916.111 ops/s
# Warmup Iteration  14: 132412.742 ops/s
# Warmup Iteration  15: 132608.713 ops/s
# Warmup Iteration  16: 119211.443 ops/s
# Warmup Iteration  17: 134479.849 ops/s
# Warmup Iteration  18: 134947.792 ops/s
# Warmup Iteration  19: 131694.886 ops/s
# Warmup Iteration  20: 141486.497 ops/s
# Warmup Iteration  21: 132970.871 ops/s
# Warmup Iteration  22: 137395.572 ops/s
# Warmup Iteration  23: 132960.032 ops/s
# Warmup Iteration  24: 137709.185 ops/s
# Warmup Iteration  25: 137030.772 ops/s
# Warmup Iteration  26: 138276.489 ops/s
# Warmup Iteration  27: 140974.972 ops/s
# Warmup Iteration  28: 133603.957 ops/s
# Warmup Iteration  29: 105711.097 ops/s
# Warmup Iteration  30: 134087.898 ops/s
Iteration   1: 137969.098 ops/s
Iteration   2: 136426.462 ops/s
Iteration   3: 136834.947 ops/s
Iteration   4: 137374.991 ops/s
Iteration   5: 135598.221 ops/s
Iteration   6: 141654.805 ops/s
Iteration   7: 132981.273 ops/s
Iteration   8: 136893.673 ops/s
Iteration   9: 135629.839 ops/s
Iteration  10: 137219.043 ops/s
Iteration  11: 139253.880 ops/s
Iteration  12: 136077.109 ops/s
Iteration  13: 140923.743 ops/s
Iteration  14: 139681.408 ops/s
Iteration  15: 126006.404 ops/s
Iteration  16: 138051.313 ops/s
Iteration  17: 134734.839 ops/s
Iteration  18: 135321.578 ops/s
Iteration  19: 137868.584 ops/s
Iteration  20: 134413.885 ops/s
Iteration  21: 142797.851 ops/s
Iteration  22: 141370.988 ops/s
Iteration  23: 132736.390 ops/s
Iteration  24: 141573.994 ops/s
Iteration  25: 134606.050 ops/s
Iteration  26: 141849.394 ops/s
Iteration  27: 137114.171 ops/s
Iteration  28: 134274.974 ops/s
Iteration  29: 138772.441 ops/s
Iteration  30: 134893.268 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_36._Benchmark.benchmark_Cluster_36":
  137030.154 ±(99.9%) 2304.703 ops/s [Average]
  (min, avg, max) = (126006.404, 137030.154, 142797.851), stdev = 3449.571
  CI (99.9%): [134725.451, 139334.857] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_36._Benchmark.benchmark_Cluster_36  thrpt   30  137030.154 ± 2304.703  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_360._Benchmark.benchmark_Cluster_360$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_360._Benchmark.benchmark_Cluster_360

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 34895.955 ops/s
# Warmup Iteration   2: 143768.009 ops/s
# Warmup Iteration   3: 226059.821 ops/s
# Warmup Iteration   4: 218706.323 ops/s
# Warmup Iteration   5: 232844.357 ops/s
# Warmup Iteration   6: 221116.932 ops/s
# Warmup Iteration   7: 211649.408 ops/s
# Warmup Iteration   8: 221185.286 ops/s
# Warmup Iteration   9: 232006.538 ops/s
# Warmup Iteration  10: 219992.324 ops/s
# Warmup Iteration  11: 226699.702 ops/s
# Warmup Iteration  12: 235199.511 ops/s
# Warmup Iteration  13: 220789.826 ops/s
# Warmup Iteration  14: 226280.306 ops/s
# Warmup Iteration  15: 218030.157 ops/s
# Warmup Iteration  16: 223057.589 ops/s
# Warmup Iteration  17: 238515.802 ops/s
# Warmup Iteration  18: 226253.366 ops/s
# Warmup Iteration  19: 235333.416 ops/s
# Warmup Iteration  20: 225232.598 ops/s
# Warmup Iteration  21: 231554.981 ops/s
# Warmup Iteration  22: 227407.013 ops/s
# Warmup Iteration  23: 232914.609 ops/s
# Warmup Iteration  24: 235012.409 ops/s
# Warmup Iteration  25: 227716.313 ops/s
# Warmup Iteration  26: 235083.624 ops/s
# Warmup Iteration  27: 234213.996 ops/s
# Warmup Iteration  28: 224361.842 ops/s
# Warmup Iteration  29: 238131.577 ops/s
# Warmup Iteration  30: 218327.555 ops/s
Iteration   1: 240605.572 ops/s
Iteration   2: 225005.373 ops/s
Iteration   3: 228410.551 ops/s
Iteration   4: 239205.274 ops/s
Iteration   5: 226683.473 ops/s
Iteration   6: 230156.333 ops/s
Iteration   7: 225078.437 ops/s
Iteration   8: 222628.468 ops/s
Iteration   9: 238832.408 ops/s
Iteration  10: 232631.397 ops/s
Iteration  11: 231508.545 ops/s
Iteration  12: 231206.046 ops/s
Iteration  13: 234517.248 ops/s
Iteration  14: 232883.685 ops/s
Iteration  15: 225390.317 ops/s
Iteration  16: 228910.586 ops/s
Iteration  17: 237845.325 ops/s
Iteration  18: 231080.220 ops/s
Iteration  19: 234401.712 ops/s
Iteration  20: 231355.141 ops/s
Iteration  21: 232368.298 ops/s
Iteration  22: 236766.208 ops/s
Iteration  23: 232384.937 ops/s
Iteration  24: 230838.005 ops/s
Iteration  25: 230978.180 ops/s
Iteration  26: 231395.523 ops/s
Iteration  27: 236334.736 ops/s
Iteration  28: 233085.604 ops/s
Iteration  29: 223695.046 ops/s
Iteration  30: 236165.139 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_360._Benchmark.benchmark_Cluster_360":
  231744.926 ±(99.9%) 3125.801 ops/s [Average]
  (min, avg, max) = (222628.468, 231744.926, 240605.572), stdev = 4678.552
  CI (99.9%): [228619.125, 234870.727] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_360._Benchmark.benchmark_Cluster_360  thrpt   30  231744.926 ± 3125.801  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_361._Benchmark.benchmark_Cluster_361$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_361._Benchmark.benchmark_Cluster_361

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6835.602 ops/s
# Warmup Iteration   2: 26443.786 ops/s
# Warmup Iteration   3: 33386.321 ops/s
# Warmup Iteration   4: 42661.740 ops/s
# Warmup Iteration   5: 70910.902 ops/s
# Warmup Iteration   6: 67765.220 ops/s
# Warmup Iteration   7: 72985.984 ops/s
# Warmup Iteration   8: 80001.026 ops/s
# Warmup Iteration   9: 76564.066 ops/s
# Warmup Iteration  10: 70487.907 ops/s
# Warmup Iteration  11: 71708.626 ops/s
# Warmup Iteration  12: 84565.557 ops/s
# Warmup Iteration  13: 82713.515 ops/s
# Warmup Iteration  14: 60632.870 ops/s
# Warmup Iteration  15: 89583.510 ops/s
# Warmup Iteration  16: 82199.080 ops/s
# Warmup Iteration  17: 84282.945 ops/s
# Warmup Iteration  18: 86752.745 ops/s
# Warmup Iteration  19: 88226.958 ops/s
# Warmup Iteration  20: 87586.238 ops/s
# Warmup Iteration  21: 78721.503 ops/s
# Warmup Iteration  22: 73635.613 ops/s
# Warmup Iteration  23: 57909.700 ops/s
# Warmup Iteration  24: 79125.828 ops/s
# Warmup Iteration  25: 77667.807 ops/s
# Warmup Iteration  26: 83861.622 ops/s
# Warmup Iteration  27: 79983.242 ops/s
# Warmup Iteration  28: 75259.002 ops/s
# Warmup Iteration  29: 82860.044 ops/s
# Warmup Iteration  30: 83132.163 ops/s
Iteration   1: 72218.812 ops/s
Iteration   2: 81647.979 ops/s
Iteration   3: 67800.119 ops/s
Iteration   4: 76832.805 ops/s
Iteration   5: 82377.817 ops/s
Iteration   6: 82646.973 ops/s
Iteration   7: 90291.827 ops/s
Iteration   8: 86229.073 ops/s
Iteration   9: 84963.683 ops/s
Iteration  10: 84454.462 ops/s
Iteration  11: 79873.734 ops/s
Iteration  12: 85851.371 ops/s
Iteration  13: 77138.333 ops/s
Iteration  14: 82510.526 ops/s
Iteration  15: 84307.688 ops/s
Iteration  16: 86538.414 ops/s
Iteration  17: 81326.798 ops/s
Iteration  18: 81631.648 ops/s
Iteration  19: 81818.206 ops/s
Iteration  20: 85254.904 ops/s
Iteration  21: 75708.130 ops/s
Iteration  22: 75025.574 ops/s
Iteration  23: 76119.773 ops/s
Iteration  24: 82912.665 ops/s
Iteration  25: 83646.712 ops/s
Iteration  26: 87900.151 ops/s
Iteration  27: 83707.330 ops/s
Iteration  28: 80667.702 ops/s
Iteration  29: 78491.674 ops/s
Iteration  30: 86376.396 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_361._Benchmark.benchmark_Cluster_361":
  81542.376 ±(99.9%) 3276.743 ops/s [Average]
  (min, avg, max) = (67800.119, 81542.376, 90291.827), stdev = 4904.475
  CI (99.9%): [78265.633, 84819.119] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_361._Benchmark.benchmark_Cluster_361  thrpt   30  81542.376 ± 3276.743  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_362._Benchmark.benchmark_Cluster_362$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_362._Benchmark.benchmark_Cluster_362

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8037.758 ops/s
# Warmup Iteration   2: 57261.847 ops/s
# Warmup Iteration   3: 70694.670 ops/s
# Warmup Iteration   4: 74323.562 ops/s
# Warmup Iteration   5: 149390.503 ops/s
# Warmup Iteration   6: 181314.846 ops/s
# Warmup Iteration   7: 194678.522 ops/s
# Warmup Iteration   8: 189774.001 ops/s
# Warmup Iteration   9: 193886.057 ops/s
# Warmup Iteration  10: 194598.475 ops/s
# Warmup Iteration  11: 191295.837 ops/s
# Warmup Iteration  12: 196962.862 ops/s
# Warmup Iteration  13: 191273.281 ops/s
# Warmup Iteration  14: 193365.782 ops/s
# Warmup Iteration  15: 194997.608 ops/s
# Warmup Iteration  16: 187614.877 ops/s
# Warmup Iteration  17: 202435.610 ops/s
# Warmup Iteration  18: 191164.792 ops/s
# Warmup Iteration  19: 195061.442 ops/s
# Warmup Iteration  20: 196211.115 ops/s
# Warmup Iteration  21: 194255.208 ops/s
# Warmup Iteration  22: 198384.033 ops/s
# Warmup Iteration  23: 203386.999 ops/s
# Warmup Iteration  24: 190434.927 ops/s
# Warmup Iteration  25: 204542.680 ops/s
# Warmup Iteration  26: 196125.007 ops/s
# Warmup Iteration  27: 191712.009 ops/s
# Warmup Iteration  28: 200952.131 ops/s
# Warmup Iteration  29: 194955.692 ops/s
# Warmup Iteration  30: 199939.058 ops/s
Iteration   1: 194549.040 ops/s
Iteration   2: 200247.170 ops/s
Iteration   3: 195399.100 ops/s
Iteration   4: 197822.010 ops/s
Iteration   5: 199171.277 ops/s
Iteration   6: 194786.011 ops/s
Iteration   7: 197605.158 ops/s
Iteration   8: 201457.123 ops/s
Iteration   9: 192939.855 ops/s
Iteration  10: 207268.049 ops/s
Iteration  11: 199102.790 ops/s
Iteration  12: 191317.540 ops/s
Iteration  13: 198891.024 ops/s
Iteration  14: 193566.265 ops/s
Iteration  15: 188532.424 ops/s
Iteration  16: 188712.999 ops/s
Iteration  17: 194935.844 ops/s
Iteration  18: 178892.881 ops/s
Iteration  19: 204278.388 ops/s
Iteration  20: 193266.861 ops/s
Iteration  21: 196042.468 ops/s
Iteration  22: 199134.306 ops/s
Iteration  23: 197858.587 ops/s
Iteration  24: 201270.383 ops/s
Iteration  25: 196139.680 ops/s
Iteration  26: 201518.136 ops/s
Iteration  27: 196758.734 ops/s
Iteration  28: 194941.796 ops/s
Iteration  29: 202096.187 ops/s
Iteration  30: 192596.782 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_362._Benchmark.benchmark_Cluster_362":
  196369.962 ±(99.9%) 3609.416 ops/s [Average]
  (min, avg, max) = (178892.881, 196369.962, 207268.049), stdev = 5402.404
  CI (99.9%): [192760.547, 199979.378] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_362._Benchmark.benchmark_Cluster_362  thrpt   30  196369.962 ± 3609.416  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_363._Benchmark.benchmark_Cluster_363$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_363._Benchmark.benchmark_Cluster_363

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1473.324 ops/s
# Warmup Iteration   2: 11903.576 ops/s
# Warmup Iteration   3: 25827.674 ops/s
# Warmup Iteration   4: 33604.194 ops/s
# Warmup Iteration   5: 39039.255 ops/s
# Warmup Iteration   6: 64198.149 ops/s
# Warmup Iteration   7: 99385.583 ops/s
# Warmup Iteration   8: 95110.573 ops/s
# Warmup Iteration   9: 97472.510 ops/s
# Warmup Iteration  10: 96118.990 ops/s
# Warmup Iteration  11: 100950.994 ops/s
# Warmup Iteration  12: 96047.747 ops/s
# Warmup Iteration  13: 99852.306 ops/s
# Warmup Iteration  14: 95900.022 ops/s
# Warmup Iteration  15: 98041.971 ops/s
# Warmup Iteration  16: 80201.727 ops/s
# Warmup Iteration  17: 99258.323 ops/s
# Warmup Iteration  18: 95565.631 ops/s
# Warmup Iteration  19: 100923.910 ops/s
# Warmup Iteration  20: 94085.706 ops/s
# Warmup Iteration  21: 98407.292 ops/s
# Warmup Iteration  22: 99896.396 ops/s
# Warmup Iteration  23: 98081.699 ops/s
# Warmup Iteration  24: 95514.701 ops/s
# Warmup Iteration  25: 99206.053 ops/s
# Warmup Iteration  26: 93577.830 ops/s
# Warmup Iteration  27: 99130.802 ops/s
# Warmup Iteration  28: 94818.087 ops/s
# Warmup Iteration  29: 97676.823 ops/s
# Warmup Iteration  30: 98903.696 ops/s
Iteration   1: 98342.486 ops/s
Iteration   2: 99544.228 ops/s
Iteration   3: 97610.082 ops/s
Iteration   4: 97130.475 ops/s
Iteration   5: 99420.290 ops/s
Iteration   6: 99114.326 ops/s
Iteration   7: 97904.830 ops/s
Iteration   8: 100661.997 ops/s
Iteration   9: 96198.010 ops/s
Iteration  10: 100550.207 ops/s
Iteration  11: 97069.228 ops/s
Iteration  12: 97542.936 ops/s
Iteration  13: 97966.447 ops/s
Iteration  14: 99614.055 ops/s
Iteration  15: 99227.271 ops/s
Iteration  16: 96619.041 ops/s
Iteration  17: 97009.222 ops/s
Iteration  18: 101270.982 ops/s
Iteration  19: 96837.338 ops/s
Iteration  20: 96500.557 ops/s
Iteration  21: 98085.749 ops/s
Iteration  22: 94567.888 ops/s
Iteration  23: 101664.145 ops/s
Iteration  24: 94573.829 ops/s
Iteration  25: 100788.210 ops/s
Iteration  26: 95883.050 ops/s
Iteration  27: 100277.377 ops/s
Iteration  28: 99922.463 ops/s
Iteration  29: 100819.795 ops/s
Iteration  30: 96048.383 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_363._Benchmark.benchmark_Cluster_363":
  98292.163 ±(99.9%) 1319.880 ops/s [Average]
  (min, avg, max) = (94567.888, 98292.163, 101664.145), stdev = 1975.535
  CI (99.9%): [96972.283, 99612.043] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_363._Benchmark.benchmark_Cluster_363  thrpt   30  98292.163 ± 1319.880  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_364._Benchmark.benchmark_Cluster_364$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_364._Benchmark.benchmark_Cluster_364

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2158.929 ops/s
# Warmup Iteration   2: 26701.895 ops/s
# Warmup Iteration   3: 31287.784 ops/s
# Warmup Iteration   4: 34384.127 ops/s
# Warmup Iteration   5: 27348.359 ops/s
# Warmup Iteration   6: 30134.019 ops/s
# Warmup Iteration   7: 29364.222 ops/s
# Warmup Iteration   8: 30788.270 ops/s
# Warmup Iteration   9: 30943.369 ops/s
# Warmup Iteration  10: 24908.402 ops/s
# Warmup Iteration  11: 32028.384 ops/s
# Warmup Iteration  12: 35046.666 ops/s
# Warmup Iteration  13: 26199.621 ops/s
# Warmup Iteration  14: 34048.336 ops/s
# Warmup Iteration  15: 25362.310 ops/s
# Warmup Iteration  16: 34731.725 ops/s
# Warmup Iteration  17: 54239.142 ops/s
# Warmup Iteration  18: 85389.796 ops/s
# Warmup Iteration  19: 100667.440 ops/s
# Warmup Iteration  20: 102096.927 ops/s
# Warmup Iteration  21: 97703.436 ops/s
# Warmup Iteration  22: 93563.424 ops/s
# Warmup Iteration  23: 102711.217 ops/s
# Warmup Iteration  24: 95637.742 ops/s
# Warmup Iteration  25: 100885.917 ops/s
# Warmup Iteration  26: 102226.688 ops/s
# Warmup Iteration  27: 101706.142 ops/s
# Warmup Iteration  28: 102760.993 ops/s
# Warmup Iteration  29: 99946.031 ops/s
# Warmup Iteration  30: 99868.097 ops/s
Iteration   1: 103459.484 ops/s
Iteration   2: 98456.426 ops/s
Iteration   3: 104857.218 ops/s
Iteration   4: 101799.002 ops/s
Iteration   5: 96719.962 ops/s
Iteration   6: 103013.476 ops/s
Iteration   7: 98406.040 ops/s
Iteration   8: 104653.671 ops/s
Iteration   9: 105118.514 ops/s
Iteration  10: 95255.785 ops/s
Iteration  11: 96816.777 ops/s
Iteration  12: 105224.647 ops/s
Iteration  13: 99900.929 ops/s
Iteration  14: 99795.603 ops/s
Iteration  15: 102281.819 ops/s
Iteration  16: 103692.784 ops/s
Iteration  17: 99723.820 ops/s
Iteration  18: 102597.675 ops/s
Iteration  19: 98342.429 ops/s
Iteration  20: 104078.575 ops/s
Iteration  21: 104907.138 ops/s
Iteration  22: 98142.727 ops/s
Iteration  23: 99150.483 ops/s
Iteration  24: 102630.424 ops/s
Iteration  25: 99288.270 ops/s
Iteration  26: 102514.168 ops/s
Iteration  27: 96110.231 ops/s
Iteration  28: 103843.376 ops/s
Iteration  29: 99229.884 ops/s
Iteration  30: 97736.880 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_364._Benchmark.benchmark_Cluster_364":
  100924.941 ±(99.9%) 2032.568 ops/s [Average]
  (min, avg, max) = (95255.785, 100924.941, 105224.647), stdev = 3042.253
  CI (99.9%): [98892.372, 102957.509] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_364._Benchmark.benchmark_Cluster_364  thrpt   30  100924.941 ± 2032.568  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_365._Benchmark.benchmark_Cluster_365$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_365._Benchmark.benchmark_Cluster_365

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9309.460 ops/s
# Warmup Iteration   2: 44095.984 ops/s
# Warmup Iteration   3: 66911.418 ops/s
# Warmup Iteration   4: 77653.885 ops/s
# Warmup Iteration   5: 101289.777 ops/s
# Warmup Iteration   6: 98575.071 ops/s
# Warmup Iteration   7: 101499.949 ops/s
# Warmup Iteration   8: 100239.978 ops/s
# Warmup Iteration   9: 101192.934 ops/s
# Warmup Iteration  10: 74959.699 ops/s
# Warmup Iteration  11: 94878.921 ops/s
# Warmup Iteration  12: 101402.626 ops/s
# Warmup Iteration  13: 95101.949 ops/s
# Warmup Iteration  14: 99609.946 ops/s
# Warmup Iteration  15: 100988.578 ops/s
# Warmup Iteration  16: 96923.506 ops/s
# Warmup Iteration  17: 103555.996 ops/s
# Warmup Iteration  18: 101041.235 ops/s
# Warmup Iteration  19: 101488.461 ops/s
# Warmup Iteration  20: 101479.152 ops/s
# Warmup Iteration  21: 103557.230 ops/s
# Warmup Iteration  22: 97076.389 ops/s
# Warmup Iteration  23: 106115.149 ops/s
# Warmup Iteration  24: 104146.706 ops/s
# Warmup Iteration  25: 99857.485 ops/s
# Warmup Iteration  26: 105174.830 ops/s
# Warmup Iteration  27: 105352.868 ops/s
# Warmup Iteration  28: 101365.638 ops/s
# Warmup Iteration  29: 107654.284 ops/s
# Warmup Iteration  30: 100918.411 ops/s
Iteration   1: 96231.094 ops/s
Iteration   2: 103409.854 ops/s
Iteration   3: 102111.783 ops/s
Iteration   4: 102873.207 ops/s
Iteration   5: 103807.518 ops/s
Iteration   6: 100537.500 ops/s
Iteration   7: 105767.902 ops/s
Iteration   8: 104156.885 ops/s
Iteration   9: 100784.705 ops/s
Iteration  10: 103055.433 ops/s
Iteration  11: 103950.382 ops/s
Iteration  12: 103880.697 ops/s
Iteration  13: 103640.318 ops/s
Iteration  14: 103644.919 ops/s
Iteration  15: 104481.706 ops/s
Iteration  16: 109135.382 ops/s
Iteration  17: 99912.986 ops/s
Iteration  18: 106221.535 ops/s
Iteration  19: 102712.415 ops/s
Iteration  20: 105561.232 ops/s
Iteration  21: 104353.370 ops/s
Iteration  22: 101460.645 ops/s
Iteration  23: 106711.095 ops/s
Iteration  24: 102425.477 ops/s
Iteration  25: 101576.665 ops/s
Iteration  26: 104845.476 ops/s
Iteration  27: 100809.663 ops/s
Iteration  28: 105616.055 ops/s
Iteration  29: 99822.297 ops/s
Iteration  30: 101480.468 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_365._Benchmark.benchmark_Cluster_365":
  103165.955 ±(99.9%) 1679.555 ops/s [Average]
  (min, avg, max) = (96231.094, 103165.955, 109135.382), stdev = 2513.879
  CI (99.9%): [101486.400, 104845.511] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_365._Benchmark.benchmark_Cluster_365  thrpt   30  103165.955 ± 1679.555  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_366._Benchmark.benchmark_Cluster_366$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_366._Benchmark.benchmark_Cluster_366

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 929.531 ops/s
# Warmup Iteration   2: 8494.289 ops/s
# Warmup Iteration   3: 24189.594 ops/s
# Warmup Iteration   4: 22881.955 ops/s
# Warmup Iteration   5: 22327.563 ops/s
# Warmup Iteration   6: 22880.514 ops/s
# Warmup Iteration   7: 31549.674 ops/s
# Warmup Iteration   8: 62749.950 ops/s
# Warmup Iteration   9: 74219.455 ops/s
# Warmup Iteration  10: 76041.537 ops/s
# Warmup Iteration  11: 76870.138 ops/s
# Warmup Iteration  12: 74917.901 ops/s
# Warmup Iteration  13: 85047.536 ops/s
# Warmup Iteration  14: 80367.082 ops/s
# Warmup Iteration  15: 82896.662 ops/s
# Warmup Iteration  16: 80900.806 ops/s
# Warmup Iteration  17: 84323.809 ops/s
# Warmup Iteration  18: 85547.475 ops/s
# Warmup Iteration  19: 83428.316 ops/s
# Warmup Iteration  20: 87296.363 ops/s
# Warmup Iteration  21: 81798.718 ops/s
# Warmup Iteration  22: 86304.176 ops/s
# Warmup Iteration  23: 82477.628 ops/s
# Warmup Iteration  24: 83929.351 ops/s
# Warmup Iteration  25: 86607.307 ops/s
# Warmup Iteration  26: 80898.087 ops/s
# Warmup Iteration  27: 86482.279 ops/s
# Warmup Iteration  28: 83567.902 ops/s
# Warmup Iteration  29: 85188.447 ops/s
# Warmup Iteration  30: 86691.296 ops/s
Iteration   1: 83122.354 ops/s
Iteration   2: 84475.944 ops/s
Iteration   3: 85060.186 ops/s
Iteration   4: 82907.866 ops/s
Iteration   5: 85665.941 ops/s
Iteration   6: 83059.471 ops/s
Iteration   7: 84532.669 ops/s
Iteration   8: 83147.536 ops/s
Iteration   9: 84094.199 ops/s
Iteration  10: 83784.128 ops/s
Iteration  11: 82641.638 ops/s
Iteration  12: 86767.562 ops/s
Iteration  13: 82732.795 ops/s
Iteration  14: 84502.734 ops/s
Iteration  15: 86286.321 ops/s
Iteration  16: 83997.443 ops/s
Iteration  17: 85039.832 ops/s
Iteration  18: 87484.633 ops/s
Iteration  19: 87070.988 ops/s
Iteration  20: 82419.398 ops/s
Iteration  21: 89051.962 ops/s
Iteration  22: 86745.245 ops/s
Iteration  23: 84739.405 ops/s
Iteration  24: 83973.580 ops/s
Iteration  25: 86338.846 ops/s
Iteration  26: 81618.385 ops/s
Iteration  27: 87370.929 ops/s
Iteration  28: 88087.502 ops/s
Iteration  29: 80417.037 ops/s
Iteration  30: 86166.496 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_366._Benchmark.benchmark_Cluster_366":
  84776.767 ±(99.9%) 1370.530 ops/s [Average]
  (min, avg, max) = (80417.037, 84776.767, 89051.962), stdev = 2051.345
  CI (99.9%): [83406.237, 86147.297] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_366._Benchmark.benchmark_Cluster_366  thrpt   30  84776.767 ± 1370.530  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_367._Benchmark.benchmark_Cluster_367$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_367._Benchmark.benchmark_Cluster_367

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3844.421 ops/s
# Warmup Iteration   2: 27260.856 ops/s
# Warmup Iteration   3: 33275.885 ops/s
# Warmup Iteration   4: 21790.054 ops/s
# Warmup Iteration   5: 42801.101 ops/s
# Warmup Iteration   6: 51692.315 ops/s
# Warmup Iteration   7: 107802.702 ops/s
# Warmup Iteration   8: 118390.197 ops/s
# Warmup Iteration   9: 117947.522 ops/s
# Warmup Iteration  10: 123183.926 ops/s
# Warmup Iteration  11: 121297.750 ops/s
# Warmup Iteration  12: 118206.845 ops/s
# Warmup Iteration  13: 119105.164 ops/s
# Warmup Iteration  14: 115625.664 ops/s
# Warmup Iteration  15: 123924.725 ops/s
# Warmup Iteration  16: 116852.520 ops/s
# Warmup Iteration  17: 125418.842 ops/s
# Warmup Iteration  18: 130025.768 ops/s
# Warmup Iteration  19: 124468.885 ops/s
# Warmup Iteration  20: 124472.983 ops/s
# Warmup Iteration  21: 121560.635 ops/s
# Warmup Iteration  22: 128441.012 ops/s
# Warmup Iteration  23: 132962.271 ops/s
# Warmup Iteration  24: 124339.774 ops/s
# Warmup Iteration  25: 126729.985 ops/s
# Warmup Iteration  26: 129939.209 ops/s
# Warmup Iteration  27: 122307.608 ops/s
# Warmup Iteration  28: 126736.790 ops/s
# Warmup Iteration  29: 130210.894 ops/s
# Warmup Iteration  30: 125001.002 ops/s
Iteration   1: 129397.979 ops/s
Iteration   2: 127426.755 ops/s
Iteration   3: 123482.537 ops/s
Iteration   4: 132814.210 ops/s
Iteration   5: 128635.868 ops/s
Iteration   6: 120397.499 ops/s
Iteration   7: 130321.710 ops/s
Iteration   8: 128274.048 ops/s
Iteration   9: 127916.141 ops/s
Iteration  10: 130661.170 ops/s
Iteration  11: 124784.209 ops/s
Iteration  12: 129648.807 ops/s
Iteration  13: 122692.119 ops/s
Iteration  14: 129752.519 ops/s
Iteration  15: 127422.588 ops/s
Iteration  16: 124400.327 ops/s
Iteration  17: 126430.270 ops/s
Iteration  18: 133099.793 ops/s
Iteration  19: 123735.093 ops/s
Iteration  20: 129514.260 ops/s
Iteration  21: 124608.730 ops/s
Iteration  22: 130300.409 ops/s
Iteration  23: 127570.872 ops/s
Iteration  24: 122984.209 ops/s
Iteration  25: 131608.403 ops/s
Iteration  26: 126801.582 ops/s
Iteration  27: 129884.255 ops/s
Iteration  28: 131060.476 ops/s
Iteration  29: 124296.415 ops/s
Iteration  30: 130982.969 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_367._Benchmark.benchmark_Cluster_367":
  127696.874 ±(99.9%) 2193.330 ops/s [Average]
  (min, avg, max) = (120397.499, 127696.874, 133099.793), stdev = 3282.874
  CI (99.9%): [125503.544, 129890.204] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_367._Benchmark.benchmark_Cluster_367  thrpt   30  127696.874 ± 2193.330  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_368._Benchmark.benchmark_Cluster_368$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_368._Benchmark.benchmark_Cluster_368

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1818.050 ops/s
# Warmup Iteration   2: 17638.777 ops/s
# Warmup Iteration   3: 18658.474 ops/s
# Warmup Iteration   4: 29124.766 ops/s
# Warmup Iteration   5: 41144.130 ops/s
# Warmup Iteration   6: 70688.360 ops/s
# Warmup Iteration   7: 80251.876 ops/s
# Warmup Iteration   8: 82649.721 ops/s
# Warmup Iteration   9: 79032.971 ops/s
# Warmup Iteration  10: 81893.337 ops/s
# Warmup Iteration  11: 79848.753 ops/s
# Warmup Iteration  12: 81265.973 ops/s
# Warmup Iteration  13: 82263.379 ops/s
# Warmup Iteration  14: 80572.844 ops/s
# Warmup Iteration  15: 82962.383 ops/s
# Warmup Iteration  16: 78599.549 ops/s
# Warmup Iteration  17: 83826.604 ops/s
# Warmup Iteration  18: 82877.063 ops/s
# Warmup Iteration  19: 81497.137 ops/s
# Warmup Iteration  20: 84014.325 ops/s
# Warmup Iteration  21: 82399.582 ops/s
# Warmup Iteration  22: 82177.964 ops/s
# Warmup Iteration  23: 81220.508 ops/s
# Warmup Iteration  24: 81076.698 ops/s
# Warmup Iteration  25: 85379.996 ops/s
# Warmup Iteration  26: 79383.447 ops/s
# Warmup Iteration  27: 82683.156 ops/s
# Warmup Iteration  28: 82812.897 ops/s
# Warmup Iteration  29: 82093.486 ops/s
# Warmup Iteration  30: 85661.048 ops/s
Iteration   1: 81575.086 ops/s
Iteration   2: 82054.997 ops/s
Iteration   3: 83063.286 ops/s
Iteration   4: 82111.223 ops/s
Iteration   5: 83292.601 ops/s
Iteration   6: 80583.587 ops/s
Iteration   7: 83815.788 ops/s
Iteration   8: 85472.696 ops/s
Iteration   9: 79794.025 ops/s
Iteration  10: 83662.463 ops/s
Iteration  11: 80331.086 ops/s
Iteration  12: 86310.587 ops/s
Iteration  13: 84711.470 ops/s
Iteration  14: 79958.810 ops/s
Iteration  15: 83103.808 ops/s
Iteration  16: 78935.955 ops/s
Iteration  17: 85339.868 ops/s
Iteration  18: 83882.068 ops/s
Iteration  19: 79915.908 ops/s
Iteration  20: 84883.933 ops/s
Iteration  21: 84114.489 ops/s
Iteration  22: 81451.404 ops/s
Iteration  23: 85334.734 ops/s
Iteration  24: 80125.197 ops/s
Iteration  25: 82984.149 ops/s
Iteration  26: 81677.543 ops/s
Iteration  27: 81757.578 ops/s
Iteration  28: 80638.459 ops/s
Iteration  29: 80577.108 ops/s
Iteration  30: 69911.078 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_368._Benchmark.benchmark_Cluster_368":
  82045.700 ±(99.9%) 2036.095 ops/s [Average]
  (min, avg, max) = (69911.078, 82045.700, 86310.587), stdev = 3047.531
  CI (99.9%): [80009.605, 84081.795] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_368._Benchmark.benchmark_Cluster_368  thrpt   30  82045.700 ± 2036.095  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_369._Benchmark.benchmark_Cluster_369$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_369._Benchmark.benchmark_Cluster_369

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11072.155 ops/s
# Warmup Iteration   2: 27250.544 ops/s
# Warmup Iteration   3: 38914.742 ops/s
# Warmup Iteration   4: 38241.441 ops/s
# Warmup Iteration   5: 54131.886 ops/s
# Warmup Iteration   6: 101830.535 ops/s
# Warmup Iteration   7: 104871.072 ops/s
# Warmup Iteration   8: 112810.725 ops/s
# Warmup Iteration   9: 118193.201 ops/s
# Warmup Iteration  10: 114973.957 ops/s
# Warmup Iteration  11: 113750.139 ops/s
# Warmup Iteration  12: 111475.524 ops/s
# Warmup Iteration  13: 118182.609 ops/s
# Warmup Iteration  14: 112032.650 ops/s
# Warmup Iteration  15: 113561.821 ops/s
# Warmup Iteration  16: 113160.815 ops/s
# Warmup Iteration  17: 120323.307 ops/s
# Warmup Iteration  18: 120820.085 ops/s
# Warmup Iteration  19: 124378.295 ops/s
# Warmup Iteration  20: 122328.559 ops/s
# Warmup Iteration  21: 114919.139 ops/s
# Warmup Iteration  22: 122917.456 ops/s
# Warmup Iteration  23: 119048.121 ops/s
# Warmup Iteration  24: 120238.029 ops/s
# Warmup Iteration  25: 119027.142 ops/s
# Warmup Iteration  26: 118353.010 ops/s
# Warmup Iteration  27: 128455.695 ops/s
# Warmup Iteration  28: 123841.355 ops/s
# Warmup Iteration  29: 117388.009 ops/s
# Warmup Iteration  30: 119830.964 ops/s
Iteration   1: 119705.293 ops/s
Iteration   2: 121028.162 ops/s
Iteration   3: 121406.175 ops/s
Iteration   4: 116674.153 ops/s
Iteration   5: 124107.192 ops/s
Iteration   6: 116094.007 ops/s
Iteration   7: 125062.207 ops/s
Iteration   8: 119744.759 ops/s
Iteration   9: 119426.995 ops/s
Iteration  10: 125792.414 ops/s
Iteration  11: 116515.902 ops/s
Iteration  12: 119347.891 ops/s
Iteration  13: 124740.941 ops/s
Iteration  14: 117859.391 ops/s
Iteration  15: 116027.907 ops/s
Iteration  16: 120812.590 ops/s
Iteration  17: 125040.191 ops/s
Iteration  18: 117696.426 ops/s
Iteration  19: 125945.040 ops/s
Iteration  20: 122211.398 ops/s
Iteration  21: 119992.142 ops/s
Iteration  22: 124591.916 ops/s
Iteration  23: 112588.775 ops/s
Iteration  24: 124442.898 ops/s
Iteration  25: 119293.564 ops/s
Iteration  26: 121972.467 ops/s
Iteration  27: 119085.535 ops/s
Iteration  28: 121992.774 ops/s
Iteration  29: 124264.766 ops/s
Iteration  30: 116635.397 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_369._Benchmark.benchmark_Cluster_369":
  120669.976 ±(99.9%) 2333.867 ops/s [Average]
  (min, avg, max) = (112588.775, 120669.976, 125945.040), stdev = 3493.223
  CI (99.9%): [118336.108, 123003.843] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_369._Benchmark.benchmark_Cluster_369  thrpt   30  120669.976 ± 2333.867  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_37._Benchmark.benchmark_Cluster_37$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_37._Benchmark.benchmark_Cluster_37

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.695 ops/s
# Warmup Iteration   2: 4311.655 ops/s
# Warmup Iteration   3: 16240.420 ops/s
# Warmup Iteration   4: 27317.691 ops/s
# Warmup Iteration   5: 40907.339 ops/s
# Warmup Iteration   6: 85020.325 ops/s
# Warmup Iteration   7: 122578.724 ops/s
# Warmup Iteration   8: 126598.049 ops/s
# Warmup Iteration   9: 127986.745 ops/s
# Warmup Iteration  10: 122658.174 ops/s
# Warmup Iteration  11: 124161.421 ops/s
# Warmup Iteration  12: 129808.416 ops/s
# Warmup Iteration  13: 122270.647 ops/s
# Warmup Iteration  14: 128897.690 ops/s
# Warmup Iteration  15: 124298.426 ops/s
# Warmup Iteration  16: 127484.911 ops/s
# Warmup Iteration  17: 126574.192 ops/s
# Warmup Iteration  18: 126918.786 ops/s
# Warmup Iteration  19: 120679.447 ops/s
# Warmup Iteration  20: 124597.095 ops/s
# Warmup Iteration  21: 128815.920 ops/s
# Warmup Iteration  22: 124699.006 ops/s
# Warmup Iteration  23: 126967.463 ops/s
# Warmup Iteration  24: 122811.757 ops/s
# Warmup Iteration  25: 124342.019 ops/s
# Warmup Iteration  26: 128948.084 ops/s
# Warmup Iteration  27: 123752.918 ops/s
# Warmup Iteration  28: 127032.371 ops/s
# Warmup Iteration  29: 120473.687 ops/s
# Warmup Iteration  30: 125185.766 ops/s
Iteration   1: 131346.110 ops/s
Iteration   2: 123024.161 ops/s
Iteration   3: 129752.690 ops/s
Iteration   4: 128398.596 ops/s
Iteration   5: 124590.155 ops/s
Iteration   6: 128573.719 ops/s
Iteration   7: 124829.662 ops/s
Iteration   8: 123643.504 ops/s
Iteration   9: 129779.869 ops/s
Iteration  10: 124390.918 ops/s
Iteration  11: 124870.631 ops/s
Iteration  12: 128479.104 ops/s
Iteration  13: 122479.102 ops/s
Iteration  14: 128874.296 ops/s
Iteration  15: 126633.620 ops/s
Iteration  16: 126243.930 ops/s
Iteration  17: 124780.085 ops/s
Iteration  18: 126528.109 ops/s
Iteration  19: 124553.378 ops/s
Iteration  20: 129518.826 ops/s
Iteration  21: 129603.453 ops/s
Iteration  22: 122655.574 ops/s
Iteration  23: 120501.025 ops/s
Iteration  24: 108801.548 ops/s
Iteration  25: 122611.761 ops/s
Iteration  26: 125823.482 ops/s
Iteration  27: 122147.879 ops/s
Iteration  28: 126030.448 ops/s
Iteration  29: 123682.482 ops/s
Iteration  30: 123267.469 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_37._Benchmark.benchmark_Cluster_37":
  125213.853 ±(99.9%) 2788.879 ops/s [Average]
  (min, avg, max) = (108801.548, 125213.853, 131346.110), stdev = 4174.262
  CI (99.9%): [122424.974, 128002.731] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_37._Benchmark.benchmark_Cluster_37  thrpt   30  125213.853 ± 2788.879  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_370._Benchmark.benchmark_Cluster_370$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_370._Benchmark.benchmark_Cluster_370

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13900.532 ops/s
# Warmup Iteration   2: 50943.494 ops/s
# Warmup Iteration   3: 92015.649 ops/s
# Warmup Iteration   4: 111218.211 ops/s
# Warmup Iteration   5: 113438.173 ops/s
# Warmup Iteration   6: 113050.887 ops/s
# Warmup Iteration   7: 116740.471 ops/s
# Warmup Iteration   8: 121438.289 ops/s
# Warmup Iteration   9: 121182.038 ops/s
# Warmup Iteration  10: 117890.104 ops/s
# Warmup Iteration  11: 121086.532 ops/s
# Warmup Iteration  12: 120245.412 ops/s
# Warmup Iteration  13: 121149.797 ops/s
# Warmup Iteration  14: 118518.559 ops/s
# Warmup Iteration  15: 112421.780 ops/s
# Warmup Iteration  16: 122869.976 ops/s
# Warmup Iteration  17: 120020.043 ops/s
# Warmup Iteration  18: 122833.671 ops/s
# Warmup Iteration  19: 128303.020 ops/s
# Warmup Iteration  20: 120777.456 ops/s
# Warmup Iteration  21: 127027.750 ops/s
# Warmup Iteration  22: 123168.088 ops/s
# Warmup Iteration  23: 128713.642 ops/s
# Warmup Iteration  24: 120422.979 ops/s
# Warmup Iteration  25: 127320.932 ops/s
# Warmup Iteration  26: 116740.926 ops/s
# Warmup Iteration  27: 130441.330 ops/s
# Warmup Iteration  28: 126333.002 ops/s
# Warmup Iteration  29: 119710.595 ops/s
# Warmup Iteration  30: 125264.691 ops/s
Iteration   1: 121695.732 ops/s
Iteration   2: 125110.761 ops/s
Iteration   3: 124318.866 ops/s
Iteration   4: 123239.425 ops/s
Iteration   5: 121724.178 ops/s
Iteration   6: 124212.109 ops/s
Iteration   7: 126139.667 ops/s
Iteration   8: 122014.420 ops/s
Iteration   9: 128589.776 ops/s
Iteration  10: 122741.138 ops/s
Iteration  11: 123371.447 ops/s
Iteration  12: 128000.304 ops/s
Iteration  13: 120000.584 ops/s
Iteration  14: 121172.868 ops/s
Iteration  15: 124228.336 ops/s
Iteration  16: 119745.160 ops/s
Iteration  17: 129695.587 ops/s
Iteration  18: 122631.734 ops/s
Iteration  19: 121056.372 ops/s
Iteration  20: 129142.718 ops/s
Iteration  21: 119929.452 ops/s
Iteration  22: 128492.776 ops/s
Iteration  23: 123255.102 ops/s
Iteration  24: 121799.243 ops/s
Iteration  25: 123398.838 ops/s
Iteration  26: 124413.912 ops/s
Iteration  27: 123959.224 ops/s
Iteration  28: 125674.073 ops/s
Iteration  29: 121842.520 ops/s
Iteration  30: 121634.045 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_370._Benchmark.benchmark_Cluster_370":
  123774.346 ±(99.9%) 1864.285 ops/s [Average]
  (min, avg, max) = (119745.160, 123774.346, 129695.587), stdev = 2790.374
  CI (99.9%): [121910.060, 125638.631] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_370._Benchmark.benchmark_Cluster_370  thrpt   30  123774.346 ± 1864.285  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_371._Benchmark.benchmark_Cluster_371$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_371._Benchmark.benchmark_Cluster_371

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5923.925 ops/s
# Warmup Iteration   2: 29387.280 ops/s
# Warmup Iteration   3: 62917.417 ops/s
# Warmup Iteration   4: 61800.281 ops/s
# Warmup Iteration   5: 93974.091 ops/s
# Warmup Iteration   6: 87314.012 ops/s
# Warmup Iteration   7: 93715.951 ops/s
# Warmup Iteration   8: 99726.077 ops/s
# Warmup Iteration   9: 94684.706 ops/s
# Warmup Iteration  10: 97071.313 ops/s
# Warmup Iteration  11: 97630.786 ops/s
# Warmup Iteration  12: 94825.934 ops/s
# Warmup Iteration  13: 96557.937 ops/s
# Warmup Iteration  14: 100485.248 ops/s
# Warmup Iteration  15: 94940.495 ops/s
# Warmup Iteration  16: 96664.851 ops/s
# Warmup Iteration  17: 98464.251 ops/s
# Warmup Iteration  18: 100124.771 ops/s
# Warmup Iteration  19: 101568.980 ops/s
# Warmup Iteration  20: 97787.045 ops/s
# Warmup Iteration  21: 101238.312 ops/s
# Warmup Iteration  22: 98901.092 ops/s
# Warmup Iteration  23: 98004.516 ops/s
# Warmup Iteration  24: 96088.600 ops/s
# Warmup Iteration  25: 103451.461 ops/s
# Warmup Iteration  26: 101425.679 ops/s
# Warmup Iteration  27: 97277.652 ops/s
# Warmup Iteration  28: 100405.585 ops/s
# Warmup Iteration  29: 98947.029 ops/s
# Warmup Iteration  30: 102285.624 ops/s
Iteration   1: 99541.231 ops/s
Iteration   2: 97467.356 ops/s
Iteration   3: 102944.412 ops/s
Iteration   4: 97064.794 ops/s
Iteration   5: 100950.603 ops/s
Iteration   6: 98236.472 ops/s
Iteration   7: 96449.951 ops/s
Iteration   8: 102914.520 ops/s
Iteration   9: 95830.008 ops/s
Iteration  10: 101839.713 ops/s
Iteration  11: 99136.487 ops/s
Iteration  12: 103144.189 ops/s
Iteration  13: 100492.797 ops/s
Iteration  14: 97536.587 ops/s
Iteration  15: 103526.134 ops/s
Iteration  16: 98864.024 ops/s
Iteration  17: 98555.636 ops/s
Iteration  18: 74961.643 ops/s
Iteration  19: 101633.469 ops/s
Iteration  20: 97523.976 ops/s
Iteration  21: 99074.848 ops/s
Iteration  22: 102538.204 ops/s
Iteration  23: 95655.529 ops/s
Iteration  24: 100746.927 ops/s
Iteration  25: 97722.454 ops/s
Iteration  26: 101572.181 ops/s
Iteration  27: 97056.955 ops/s
Iteration  28: 100038.307 ops/s
Iteration  29: 101804.656 ops/s
Iteration  30: 100393.774 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_371._Benchmark.benchmark_Cluster_371":
  98840.594 ±(99.9%) 3384.971 ops/s [Average]
  (min, avg, max) = (74961.643, 98840.594, 103526.134), stdev = 5066.466
  CI (99.9%): [95455.623, 102225.566] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_371._Benchmark.benchmark_Cluster_371  thrpt   30  98840.594 ± 3384.971  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_372._Benchmark.benchmark_Cluster_372$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_372._Benchmark.benchmark_Cluster_372

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6516.966 ops/s
# Warmup Iteration   2: 17181.876 ops/s
# Warmup Iteration   3: 30710.047 ops/s
# Warmup Iteration   4: 42972.918 ops/s
# Warmup Iteration   5: 44250.713 ops/s
# Warmup Iteration   6: 72002.134 ops/s
# Warmup Iteration   7: 70705.551 ops/s
# Warmup Iteration   8: 72818.675 ops/s
# Warmup Iteration   9: 73259.870 ops/s
# Warmup Iteration  10: 73849.371 ops/s
# Warmup Iteration  11: 72303.259 ops/s
# Warmup Iteration  12: 71426.130 ops/s
# Warmup Iteration  13: 71912.610 ops/s
# Warmup Iteration  14: 74666.941 ops/s
# Warmup Iteration  15: 69670.629 ops/s
# Warmup Iteration  16: 70039.828 ops/s
# Warmup Iteration  17: 76564.954 ops/s
# Warmup Iteration  18: 73371.977 ops/s
# Warmup Iteration  19: 73189.789 ops/s
# Warmup Iteration  20: 76328.551 ops/s
# Warmup Iteration  21: 75561.675 ops/s
# Warmup Iteration  22: 71674.183 ops/s
# Warmup Iteration  23: 72891.936 ops/s
# Warmup Iteration  24: 73106.132 ops/s
# Warmup Iteration  25: 74288.293 ops/s
# Warmup Iteration  26: 73679.015 ops/s
# Warmup Iteration  27: 74830.649 ops/s
# Warmup Iteration  28: 73840.784 ops/s
# Warmup Iteration  29: 72155.499 ops/s
# Warmup Iteration  30: 76249.265 ops/s
Iteration   1: 74529.174 ops/s
Iteration   2: 74483.626 ops/s
Iteration   3: 71571.946 ops/s
Iteration   4: 73567.278 ops/s
Iteration   5: 74943.592 ops/s
Iteration   6: 72267.580 ops/s
Iteration   7: 72601.747 ops/s
Iteration   8: 75489.639 ops/s
Iteration   9: 71226.056 ops/s
Iteration  10: 73321.038 ops/s
Iteration  11: 75706.699 ops/s
Iteration  12: 73626.462 ops/s
Iteration  13: 72637.999 ops/s
Iteration  14: 75348.911 ops/s
Iteration  15: 71416.888 ops/s
Iteration  16: 76678.345 ops/s
Iteration  17: 70690.252 ops/s
Iteration  18: 75971.167 ops/s
Iteration  19: 75338.068 ops/s
Iteration  20: 74115.795 ops/s
Iteration  21: 74432.635 ops/s
Iteration  22: 73562.204 ops/s
Iteration  23: 74865.013 ops/s
Iteration  24: 74418.380 ops/s
Iteration  25: 73221.013 ops/s
Iteration  26: 74343.323 ops/s
Iteration  27: 73540.603 ops/s
Iteration  28: 74838.229 ops/s
Iteration  29: 72580.917 ops/s
Iteration  30: 74694.587 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_372._Benchmark.benchmark_Cluster_372":
  73867.639 ±(99.9%) 999.832 ops/s [Average]
  (min, avg, max) = (70690.252, 73867.639, 76678.345), stdev = 1496.502
  CI (99.9%): [72867.807, 74867.471] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_372._Benchmark.benchmark_Cluster_372  thrpt   30  73867.639 ± 999.832  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_373._Benchmark.benchmark_Cluster_373$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_373._Benchmark.benchmark_Cluster_373

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 36779.941 ops/s
# Warmup Iteration   2: 136607.829 ops/s
# Warmup Iteration   3: 396183.526 ops/s
# Warmup Iteration   4: 470633.238 ops/s
# Warmup Iteration   5: 541195.241 ops/s
# Warmup Iteration   6: 528220.281 ops/s
# Warmup Iteration   7: 540476.739 ops/s
# Warmup Iteration   8: 540864.251 ops/s
# Warmup Iteration   9: 506461.313 ops/s
# Warmup Iteration  10: 561334.855 ops/s
# Warmup Iteration  11: 545638.595 ops/s
# Warmup Iteration  12: 518256.313 ops/s
# Warmup Iteration  13: 518384.820 ops/s
# Warmup Iteration  14: 536764.900 ops/s
# Warmup Iteration  15: 542972.939 ops/s
# Warmup Iteration  16: 473766.158 ops/s
# Warmup Iteration  17: 547450.075 ops/s
# Warmup Iteration  18: 573207.993 ops/s
# Warmup Iteration  19: 541465.600 ops/s
# Warmup Iteration  20: 587722.952 ops/s
# Warmup Iteration  21: 556263.988 ops/s
# Warmup Iteration  22: 564555.327 ops/s
# Warmup Iteration  23: 558931.898 ops/s
# Warmup Iteration  24: 550910.790 ops/s
# Warmup Iteration  25: 547665.142 ops/s
# Warmup Iteration  26: 569143.822 ops/s
# Warmup Iteration  27: 552241.061 ops/s
# Warmup Iteration  28: 549191.260 ops/s
# Warmup Iteration  29: 566498.927 ops/s
# Warmup Iteration  30: 544341.942 ops/s
Iteration   1: 564167.683 ops/s
Iteration   2: 565330.983 ops/s
Iteration   3: 538796.927 ops/s
Iteration   4: 539559.533 ops/s
Iteration   5: 578591.272 ops/s
Iteration   6: 551411.579 ops/s
Iteration   7: 570117.692 ops/s
Iteration   8: 528681.009 ops/s
Iteration   9: 560478.486 ops/s
Iteration  10: 553639.032 ops/s
Iteration  11: 546566.277 ops/s
Iteration  12: 456991.926 ops/s
Iteration  13: 557675.453 ops/s
Iteration  14: 576915.401 ops/s
Iteration  15: 555855.564 ops/s
Iteration  16: 545121.150 ops/s
Iteration  17: 566879.521 ops/s
Iteration  18: 540424.263 ops/s
Iteration  19: 583052.436 ops/s
Iteration  20: 545407.722 ops/s
Iteration  21: 541481.977 ops/s
Iteration  22: 589222.148 ops/s
Iteration  23: 543167.890 ops/s
Iteration  24: 571886.591 ops/s
Iteration  25: 546109.488 ops/s
Iteration  26: 565529.873 ops/s
Iteration  27: 564717.446 ops/s
Iteration  28: 542075.719 ops/s
Iteration  29: 566212.568 ops/s
Iteration  30: 556534.363 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_373._Benchmark.benchmark_Cluster_373":
  553753.399 ±(99.9%) 15703.540 ops/s [Average]
  (min, avg, max) = (456991.926, 553753.399, 589222.148), stdev = 23504.321
  CI (99.9%): [538049.859, 569456.939] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score       Error  Units
Cluster_373._Benchmark.benchmark_Cluster_373  thrpt   30  553753.399 ± 15703.540  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_374._Benchmark.benchmark_Cluster_374$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_374._Benchmark.benchmark_Cluster_374

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2512.823 ops/s
# Warmup Iteration   2: 19223.351 ops/s
# Warmup Iteration   3: 35432.030 ops/s
# Warmup Iteration   4: 35629.071 ops/s
# Warmup Iteration   5: 61066.513 ops/s
# Warmup Iteration   6: 84661.977 ops/s
# Warmup Iteration   7: 102502.204 ops/s
# Warmup Iteration   8: 95229.904 ops/s
# Warmup Iteration   9: 99648.441 ops/s
# Warmup Iteration  10: 99108.692 ops/s
# Warmup Iteration  11: 97595.331 ops/s
# Warmup Iteration  12: 97577.460 ops/s
# Warmup Iteration  13: 98376.108 ops/s
# Warmup Iteration  14: 98749.318 ops/s
# Warmup Iteration  15: 97821.821 ops/s
# Warmup Iteration  16: 99329.138 ops/s
# Warmup Iteration  17: 98898.292 ops/s
# Warmup Iteration  18: 100192.700 ops/s
# Warmup Iteration  19: 105365.286 ops/s
# Warmup Iteration  20: 101165.429 ops/s
# Warmup Iteration  21: 106284.744 ops/s
# Warmup Iteration  22: 98144.924 ops/s
# Warmup Iteration  23: 104194.695 ops/s
# Warmup Iteration  24: 102454.129 ops/s
# Warmup Iteration  25: 101107.184 ops/s
# Warmup Iteration  26: 105482.838 ops/s
# Warmup Iteration  27: 98933.742 ops/s
# Warmup Iteration  28: 103453.092 ops/s
# Warmup Iteration  29: 102951.120 ops/s
# Warmup Iteration  30: 101501.037 ops/s
Iteration   1: 103448.761 ops/s
Iteration   2: 100697.484 ops/s
Iteration   3: 105334.022 ops/s
Iteration   4: 101907.174 ops/s
Iteration   5: 100608.854 ops/s
Iteration   6: 105690.011 ops/s
Iteration   7: 105077.761 ops/s
Iteration   8: 100397.500 ops/s
Iteration   9: 104681.658 ops/s
Iteration  10: 101583.203 ops/s
Iteration  11: 103314.148 ops/s
Iteration  12: 100938.751 ops/s
Iteration  13: 101959.126 ops/s
Iteration  14: 103884.191 ops/s
Iteration  15: 97471.102 ops/s
Iteration  16: 105541.512 ops/s
Iteration  17: 102086.077 ops/s
Iteration  18: 101072.341 ops/s
Iteration  19: 105460.418 ops/s
Iteration  20: 99843.078 ops/s
Iteration  21: 105610.253 ops/s
Iteration  22: 100650.067 ops/s
Iteration  23: 104164.655 ops/s
Iteration  24: 99745.667 ops/s
Iteration  25: 102779.498 ops/s
Iteration  26: 106558.988 ops/s
Iteration  27: 102311.382 ops/s
Iteration  28: 100399.882 ops/s
Iteration  29: 102200.863 ops/s
Iteration  30: 99676.906 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_374._Benchmark.benchmark_Cluster_374":
  102503.178 ±(99.9%) 1536.333 ops/s [Average]
  (min, avg, max) = (97471.102, 102503.178, 106558.988), stdev = 2299.511
  CI (99.9%): [100966.845, 104039.510] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_374._Benchmark.benchmark_Cluster_374  thrpt   30  102503.178 ± 1536.333  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_375._Benchmark.benchmark_Cluster_375$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_375._Benchmark.benchmark_Cluster_375

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5085.449 ops/s
# Warmup Iteration   2: 20688.644 ops/s
# Warmup Iteration   3: 27559.550 ops/s
# Warmup Iteration   4: 26597.493 ops/s
# Warmup Iteration   5: 20213.381 ops/s
# Warmup Iteration   6: 23732.849 ops/s
# Warmup Iteration   7: 20431.678 ops/s
# Warmup Iteration   8: 26033.581 ops/s
# Warmup Iteration   9: 20307.177 ops/s
# Warmup Iteration  10: 20288.074 ops/s
# Warmup Iteration  11: 28660.631 ops/s
# Warmup Iteration  12: 19929.718 ops/s
# Warmup Iteration  13: 19582.327 ops/s
# Warmup Iteration  14: 20536.084 ops/s
# Warmup Iteration  15: 20599.715 ops/s
# Warmup Iteration  16: 20527.873 ops/s
# Warmup Iteration  17: 20239.786 ops/s
# Warmup Iteration  18: 20710.581 ops/s
# Warmup Iteration  19: 19493.631 ops/s
# Warmup Iteration  20: 20257.437 ops/s
# Warmup Iteration  21: 19688.089 ops/s
# Warmup Iteration  22: 20402.149 ops/s
# Warmup Iteration  23: 20319.254 ops/s
# Warmup Iteration  24: 20348.452 ops/s
# Warmup Iteration  25: 20170.537 ops/s
# Warmup Iteration  26: 20484.270 ops/s
# Warmup Iteration  27: 20136.682 ops/s
# Warmup Iteration  28: 19347.281 ops/s
# Warmup Iteration  29: 20674.344 ops/s
# Warmup Iteration  30: 19524.993 ops/s
Iteration   1: 19860.925 ops/s
Iteration   2: 19849.460 ops/s
Iteration   3: 20512.468 ops/s
Iteration   4: 20088.228 ops/s
Iteration   5: 20331.742 ops/s
Iteration   6: 31362.291 ops/s
Iteration   7: 18521.502 ops/s
Iteration   8: 19646.160 ops/s
Iteration   9: 19428.270 ops/s
Iteration  10: 19805.561 ops/s
Iteration  11: 19374.421 ops/s
Iteration  12: 19512.490 ops/s
Iteration  13: 20547.757 ops/s
Iteration  14: 20141.915 ops/s
Iteration  15: 19851.034 ops/s
Iteration  16: 20205.970 ops/s
Iteration  17: 20361.207 ops/s
Iteration  18: 20139.005 ops/s
Iteration  19: 20598.937 ops/s
Iteration  20: 20228.321 ops/s
Iteration  21: 19579.076 ops/s
Iteration  22: 20347.009 ops/s
Iteration  23: 19998.229 ops/s
Iteration  24: 19959.807 ops/s
Iteration  25: 19660.529 ops/s
Iteration  26: 19780.692 ops/s
Iteration  27: 20494.825 ops/s
Iteration  28: 19911.414 ops/s
Iteration  29: 19645.046 ops/s
Iteration  30: 19958.035 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_375._Benchmark.benchmark_Cluster_375":
  20323.411 ±(99.9%) 1422.591 ops/s [Average]
  (min, avg, max) = (18521.502, 20323.411, 31362.291), stdev = 2129.267
  CI (99.9%): [18900.820, 21746.002] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_375._Benchmark.benchmark_Cluster_375  thrpt   30  20323.411 ± 1422.591  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_376._Benchmark.benchmark_Cluster_376$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_376._Benchmark.benchmark_Cluster_376

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4421.990 ops/s
# Warmup Iteration   2: 19320.570 ops/s
# Warmup Iteration   3: 37282.923 ops/s
# Warmup Iteration   4: 41564.317 ops/s
# Warmup Iteration   5: 60785.077 ops/s
# Warmup Iteration   6: 11154.458 ops/s
# Warmup Iteration   7: 57709.343 ops/s
# Warmup Iteration   8: 73010.837 ops/s
# Warmup Iteration   9: 1693.467 ops/s
# Warmup Iteration  10: 81496.187 ops/s
# Warmup Iteration  11: 38693.028 ops/s
# Warmup Iteration  12: 15915.685 ops/s
# Warmup Iteration  13: 67266.174 ops/s
# Warmup Iteration  14: 48008.316 ops/s
# Warmup Iteration  15: 76458.351 ops/s
# Warmup Iteration  16: 33362.865 ops/s
# Warmup Iteration  17: 12387.852 ops/s
# Warmup Iteration  18: 78561.652 ops/s
# Warmup Iteration  19: 39450.199 ops/s
# Warmup Iteration  20: 55152.497 ops/s
# Warmup Iteration  21: 74385.110 ops/s
# Warmup Iteration  22: 43602.262 ops/s
# Warmup Iteration  23: 36607.136 ops/s
# Warmup Iteration  24: 45079.113 ops/s
# Warmup Iteration  25: 7424.274 ops/s
# Warmup Iteration  26: 36832.119 ops/s
# Warmup Iteration  27: 56191.798 ops/s
# Warmup Iteration  28: 57432.337 ops/s
# Warmup Iteration  29: 60202.214 ops/s
# Warmup Iteration  30: 56977.045 ops/s
Iteration   1: 6804.970 ops/s
Iteration   2: 42167.965 ops/s
Iteration   3: 55531.685 ops/s
Iteration   4: 41531.627 ops/s
Iteration   5: 39692.944 ops/s
Iteration   6: 45902.067 ops/s
Iteration   7: 41639.879 ops/s
Iteration   8: 37627.278 ops/s
Iteration   9: 50838.732 ops/s
Iteration  10: 10971.453 ops/s
Iteration  11: 5781.101 ops/s
Iteration  12: 7280.436 ops/s
Iteration  13: 31201.863 ops/s
Iteration  14: 29480.414 ops/s
Iteration  15: 49456.437 ops/s
Iteration  16: 56739.657 ops/s
Iteration  17: 58900.543 ops/s
Iteration  18: 49730.097 ops/s
Iteration  19: 59508.857 ops/s
Iteration  20: 164.441 ops/s
Iteration  21: 7368.890 ops/s
Iteration  22: 29397.275 ops/s
Iteration  23: 54087.139 ops/s
Iteration  24: 51103.927 ops/s
Iteration  25: 56675.940 ops/s
Iteration  26: 50431.046 ops/s
Iteration  27: 61650.147 ops/s
Iteration  28: 26386.967 ops/s
Iteration  29: 36245.404 ops/s
Iteration  30: 49857.312 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_376._Benchmark.benchmark_Cluster_376":
  38138.550 ±(99.9%) 12480.367 ops/s [Average]
  (min, avg, max) = (164.441, 38138.550, 61650.147), stdev = 18680.027
  CI (99.9%): [25658.183, 50618.917] (assumes normal distribution)


# Run complete. Total time: 00:01:49

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score       Error  Units
Cluster_376._Benchmark.benchmark_Cluster_376  thrpt   30  38138.550 ± 12480.367  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_377._Benchmark.benchmark_Cluster_377$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_377._Benchmark.benchmark_Cluster_377

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.592 ops/s
# Warmup Iteration   2: 2338.307 ops/s
# Warmup Iteration   3: 15761.574 ops/s
# Warmup Iteration   4: 22764.456 ops/s
# Warmup Iteration   5: 22790.231 ops/s
# Warmup Iteration   6: 14574.483 ops/s
# Warmup Iteration   7: 21834.258 ops/s
# Warmup Iteration   8: 3153.070 ops/s
# Warmup Iteration   9: 6021.086 ops/s
# Warmup Iteration  10: 11672.803 ops/s
# Warmup Iteration  11: 18090.140 ops/s
# Warmup Iteration  12: 27963.621 ops/s
# Warmup Iteration  13: 10541.586 ops/s
# Warmup Iteration  14: 7976.378 ops/s
# Warmup Iteration  15: 7893.643 ops/s
# Warmup Iteration  16: 21896.905 ops/s
# Warmup Iteration  17: 18496.416 ops/s
# Warmup Iteration  18: 18032.438 ops/s
# Warmup Iteration  19: 34488.995 ops/s
# Warmup Iteration  20: 12766.657 ops/s
# Warmup Iteration  21: 7983.213 ops/s
# Warmup Iteration  22: 8096.457 ops/s
# Warmup Iteration  23: 9509.314 ops/s
# Warmup Iteration  24: 12775.334 ops/s
# Warmup Iteration  25: 1130.454 ops/s
# Warmup Iteration  26: 9010.278 ops/s
# Warmup Iteration  27: 9282.223 ops/s
# Warmup Iteration  28: 9319.183 ops/s
# Warmup Iteration  29: 1571.739 ops/s
# Warmup Iteration  30: 11613.770 ops/s
Iteration   1: 7209.703 ops/s
Iteration   2: 8697.687 ops/s
Iteration   3: 4567.096 ops/s
Iteration   4: 8692.772 ops/s
Iteration   5: 7092.720 ops/s
Iteration   6: 5833.417 ops/s
Iteration   7: 9849.315 ops/s
Iteration   8: 8051.040 ops/s
Iteration   9: 12193.955 ops/s
Iteration  10: 3671.882 ops/s
Iteration  11: 7911.462 ops/s
Iteration  12: 8527.702 ops/s
Iteration  13: 3377.294 ops/s
Iteration  14: 8463.383 ops/s
Iteration  15: 7986.415 ops/s
Iteration  16: 1483.371 ops/s
Iteration  17: 10105.416 ops/s
Iteration  18: 8727.839 ops/s
Iteration  19: 8330.093 ops/s
Iteration  20: 8768.608 ops/s
Iteration  21: 10499.723 ops/s
Iteration  22: 4944.728 ops/s
Iteration  23: 7714.287 ops/s
Iteration  24: 11048.901 ops/s
Iteration  25: 5043.720 ops/s
Iteration  26: 9317.571 ops/s
Iteration  27: 9122.589 ops/s
Iteration  28: 4277.555 ops/s
Iteration  29: 6597.502 ops/s
Iteration  30: 8123.617 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_377._Benchmark.benchmark_Cluster_377":
  7541.045 ±(99.9%) 1640.544 ops/s [Average]
  (min, avg, max) = (1483.371, 7541.045, 12193.955), stdev = 2455.489
  CI (99.9%): [5900.502, 9181.589] (assumes normal distribution)


# Run complete. Total time: 00:01:19

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt     Score      Error  Units
Cluster_377._Benchmark.benchmark_Cluster_377  thrpt   30  7541.045 ± 1640.544  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_378._Benchmark.benchmark_Cluster_378$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_378._Benchmark.benchmark_Cluster_378

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4950.835 ops/s
# Warmup Iteration   2: 30499.143 ops/s
# Warmup Iteration   3: 54607.354 ops/s
# Warmup Iteration   4: 104806.583 ops/s
# Warmup Iteration   5: 139307.976 ops/s
# Warmup Iteration   6: 139511.824 ops/s
# Warmup Iteration   7: 141055.845 ops/s
# Warmup Iteration   8: 139761.914 ops/s
# Warmup Iteration   9: 141656.605 ops/s
# Warmup Iteration  10: 142984.942 ops/s
# Warmup Iteration  11: 146710.870 ops/s
# Warmup Iteration  12: 140710.769 ops/s
# Warmup Iteration  13: 136547.786 ops/s
# Warmup Iteration  14: 141234.689 ops/s
# Warmup Iteration  15: 133717.696 ops/s
# Warmup Iteration  16: 144714.345 ops/s
# Warmup Iteration  17: 156975.474 ops/s
# Warmup Iteration  18: 145054.068 ops/s
# Warmup Iteration  19: 153056.410 ops/s
# Warmup Iteration  20: 148569.801 ops/s
# Warmup Iteration  21: 147146.269 ops/s
# Warmup Iteration  22: 154700.444 ops/s
# Warmup Iteration  23: 124890.448 ops/s
# Warmup Iteration  24: 143711.467 ops/s
# Warmup Iteration  25: 153419.218 ops/s
# Warmup Iteration  26: 154430.578 ops/s
# Warmup Iteration  27: 148381.760 ops/s
# Warmup Iteration  28: 150313.979 ops/s
# Warmup Iteration  29: 155956.623 ops/s
# Warmup Iteration  30: 145121.317 ops/s
Iteration   1: 151980.345 ops/s
Iteration   2: 148274.924 ops/s
Iteration   3: 146455.640 ops/s
Iteration   4: 148605.193 ops/s
Iteration   5: 154554.743 ops/s
Iteration   6: 145800.579 ops/s
Iteration   7: 149888.674 ops/s
Iteration   8: 152206.361 ops/s
Iteration   9: 148513.204 ops/s
Iteration  10: 150814.036 ops/s
Iteration  11: 156397.110 ops/s
Iteration  12: 157362.006 ops/s
Iteration  13: 143062.259 ops/s
Iteration  14: 151967.813 ops/s
Iteration  15: 147102.900 ops/s
Iteration  16: 144684.587 ops/s
Iteration  17: 152257.415 ops/s
Iteration  18: 149625.792 ops/s
Iteration  19: 145374.456 ops/s
Iteration  20: 156021.749 ops/s
Iteration  21: 152714.020 ops/s
Iteration  22: 145930.639 ops/s
Iteration  23: 151288.923 ops/s
Iteration  24: 144553.368 ops/s
Iteration  25: 152730.461 ops/s
Iteration  26: 150799.503 ops/s
Iteration  27: 146578.877 ops/s
Iteration  28: 152577.826 ops/s
Iteration  29: 150670.304 ops/s
Iteration  30: 150145.079 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_378._Benchmark.benchmark_Cluster_378":
  149964.626 ±(99.9%) 2469.919 ops/s [Average]
  (min, avg, max) = (143062.259, 149964.626, 157362.006), stdev = 3696.858
  CI (99.9%): [147494.707, 152434.545] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_378._Benchmark.benchmark_Cluster_378  thrpt   30  149964.626 ± 2469.919  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_379._Benchmark.benchmark_Cluster_379$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_379._Benchmark.benchmark_Cluster_379

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6075.677 ops/s
# Warmup Iteration   2: 25897.395 ops/s
# Warmup Iteration   3: 45172.046 ops/s
# Warmup Iteration   4: 92977.878 ops/s
# Warmup Iteration   5: 110464.813 ops/s
# Warmup Iteration   6: 104411.989 ops/s
# Warmup Iteration   7: 101239.995 ops/s
# Warmup Iteration   8: 110564.354 ops/s
# Warmup Iteration   9: 111418.599 ops/s
# Warmup Iteration  10: 110647.023 ops/s
# Warmup Iteration  11: 108459.303 ops/s
# Warmup Iteration  12: 111929.219 ops/s
# Warmup Iteration  13: 110553.255 ops/s
# Warmup Iteration  14: 113385.583 ops/s
# Warmup Iteration  15: 107992.129 ops/s
# Warmup Iteration  16: 117202.552 ops/s
# Warmup Iteration  17: 109657.559 ops/s
# Warmup Iteration  18: 112109.216 ops/s
# Warmup Iteration  19: 117384.710 ops/s
# Warmup Iteration  20: 113900.400 ops/s
# Warmup Iteration  21: 115307.525 ops/s
# Warmup Iteration  22: 119416.676 ops/s
# Warmup Iteration  23: 115969.256 ops/s
# Warmup Iteration  24: 112433.833 ops/s
# Warmup Iteration  25: 115581.377 ops/s
# Warmup Iteration  26: 112468.452 ops/s
# Warmup Iteration  27: 115165.156 ops/s
# Warmup Iteration  28: 110538.217 ops/s
# Warmup Iteration  29: 107413.009 ops/s
# Warmup Iteration  30: 115557.049 ops/s
Iteration   1: 111890.804 ops/s
Iteration   2: 118176.202 ops/s
Iteration   3: 112006.045 ops/s
Iteration   4: 115856.410 ops/s
Iteration   5: 112928.880 ops/s
Iteration   6: 115994.150 ops/s
Iteration   7: 115183.300 ops/s
Iteration   8: 113789.378 ops/s
Iteration   9: 118851.772 ops/s
Iteration  10: 112313.757 ops/s
Iteration  11: 117948.158 ops/s
Iteration  12: 111519.899 ops/s
Iteration  13: 116598.128 ops/s
Iteration  14: 120234.373 ops/s
Iteration  15: 117828.614 ops/s
Iteration  16: 109952.616 ops/s
Iteration  17: 113398.757 ops/s
Iteration  18: 116671.113 ops/s
Iteration  19: 111615.772 ops/s
Iteration  20: 118730.498 ops/s
Iteration  21: 111314.874 ops/s
Iteration  22: 113817.820 ops/s
Iteration  23: 118915.557 ops/s
Iteration  24: 112470.648 ops/s
Iteration  25: 118015.599 ops/s
Iteration  26: 112932.066 ops/s
Iteration  27: 117364.652 ops/s
Iteration  28: 118142.900 ops/s
Iteration  29: 109690.773 ops/s
Iteration  30: 116992.207 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_379._Benchmark.benchmark_Cluster_379":
  115038.191 ±(99.9%) 2041.998 ops/s [Average]
  (min, avg, max) = (109690.773, 115038.191, 120234.373), stdev = 3056.367
  CI (99.9%): [112996.193, 117080.189] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_379._Benchmark.benchmark_Cluster_379  thrpt   30  115038.191 ± 2041.998  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_38._Benchmark.benchmark_Cluster_38$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_38._Benchmark.benchmark_Cluster_38

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.777 ops/s
# Warmup Iteration   2: 14188.904 ops/s
# Warmup Iteration   3: 44270.031 ops/s
# Warmup Iteration   4: 43639.967 ops/s
# Warmup Iteration   5: 52546.684 ops/s
# Warmup Iteration   6: 55351.472 ops/s
# Warmup Iteration   7: 53687.627 ops/s
# Warmup Iteration   8: 71176.620 ops/s
# Warmup Iteration   9: 76023.515 ops/s
# Warmup Iteration  10: 110303.801 ops/s
# Warmup Iteration  11: 159196.937 ops/s
# Warmup Iteration  12: 160929.465 ops/s
# Warmup Iteration  13: 156523.644 ops/s
# Warmup Iteration  14: 155595.138 ops/s
# Warmup Iteration  15: 166782.904 ops/s
# Warmup Iteration  16: 146326.157 ops/s
# Warmup Iteration  17: 142041.759 ops/s
# Warmup Iteration  18: 164101.166 ops/s
# Warmup Iteration  19: 156720.841 ops/s
# Warmup Iteration  20: 159348.215 ops/s
# Warmup Iteration  21: 159006.114 ops/s
# Warmup Iteration  22: 154975.096 ops/s
# Warmup Iteration  23: 156472.939 ops/s
# Warmup Iteration  24: 161735.987 ops/s
# Warmup Iteration  25: 166097.997 ops/s
# Warmup Iteration  26: 155802.337 ops/s
# Warmup Iteration  27: 163430.862 ops/s
# Warmup Iteration  28: 159443.499 ops/s
# Warmup Iteration  29: 161053.100 ops/s
# Warmup Iteration  30: 162619.174 ops/s
Iteration   1: 162086.829 ops/s
Iteration   2: 164758.475 ops/s
Iteration   3: 155969.501 ops/s
Iteration   4: 161565.744 ops/s
Iteration   5: 168584.739 ops/s
Iteration   6: 157352.063 ops/s
Iteration   7: 165625.351 ops/s
Iteration   8: 163820.744 ops/s
Iteration   9: 160473.100 ops/s
Iteration  10: 163904.838 ops/s
Iteration  11: 156705.770 ops/s
Iteration  12: 166936.528 ops/s
Iteration  13: 167716.774 ops/s
Iteration  14: 156860.812 ops/s
Iteration  15: 159093.028 ops/s
Iteration  16: 158758.009 ops/s
Iteration  17: 165446.919 ops/s
Iteration  18: 164883.182 ops/s
Iteration  19: 159061.795 ops/s
Iteration  20: 163321.371 ops/s
Iteration  21: 158754.776 ops/s
Iteration  22: 158036.461 ops/s
Iteration  23: 167575.741 ops/s
Iteration  24: 157519.841 ops/s
Iteration  25: 159314.067 ops/s
Iteration  26: 167602.892 ops/s
Iteration  27: 158320.271 ops/s
Iteration  28: 163572.298 ops/s
Iteration  29: 161705.469 ops/s
Iteration  30: 161130.287 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_38._Benchmark.benchmark_Cluster_38":
  161881.922 ±(99.9%) 2557.745 ops/s [Average]
  (min, avg, max) = (155969.501, 161881.922, 168584.739), stdev = 3828.312
  CI (99.9%): [159324.178, 164439.667] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_38._Benchmark.benchmark_Cluster_38  thrpt   30  161881.922 ± 2557.745  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_380._Benchmark.benchmark_Cluster_380$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_380._Benchmark.benchmark_Cluster_380

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.703 ops/s
# Warmup Iteration   2: 3031.036 ops/s
# Warmup Iteration   3: 14609.859 ops/s
# Warmup Iteration   4: 27947.075 ops/s
# Warmup Iteration   5: 29810.849 ops/s
# Warmup Iteration   6: 47169.015 ops/s
# Warmup Iteration   7: 44656.856 ops/s
# Warmup Iteration   8: 41463.484 ops/s
# Warmup Iteration   9: 82624.549 ops/s
# Warmup Iteration  10: 107553.790 ops/s
# Warmup Iteration  11: 105559.947 ops/s
# Warmup Iteration  12: 104975.841 ops/s
# Warmup Iteration  13: 105304.222 ops/s
# Warmup Iteration  14: 110627.637 ops/s
# Warmup Iteration  15: 104039.109 ops/s
# Warmup Iteration  16: 107678.779 ops/s
# Warmup Iteration  17: 112455.399 ops/s
# Warmup Iteration  18: 107146.225 ops/s
# Warmup Iteration  19: 112025.506 ops/s
# Warmup Iteration  20: 107846.874 ops/s
# Warmup Iteration  21: 105758.302 ops/s
# Warmup Iteration  22: 112113.665 ops/s
# Warmup Iteration  23: 106622.052 ops/s
# Warmup Iteration  24: 113270.789 ops/s
# Warmup Iteration  25: 111781.460 ops/s
# Warmup Iteration  26: 106914.163 ops/s
# Warmup Iteration  27: 114010.223 ops/s
# Warmup Iteration  28: 110050.633 ops/s
# Warmup Iteration  29: 107551.900 ops/s
# Warmup Iteration  30: 114011.340 ops/s
Iteration   1: 107314.774 ops/s
Iteration   2: 112372.963 ops/s
Iteration   3: 107398.054 ops/s
Iteration   4: 109316.162 ops/s
Iteration   5: 110769.342 ops/s
Iteration   6: 108519.091 ops/s
Iteration   7: 102280.523 ops/s
Iteration   8: 110717.680 ops/s
Iteration   9: 110469.273 ops/s
Iteration  10: 114335.543 ops/s
Iteration  11: 108493.944 ops/s
Iteration  12: 109903.453 ops/s
Iteration  13: 111834.898 ops/s
Iteration  14: 109393.763 ops/s
Iteration  15: 106994.809 ops/s
Iteration  16: 116208.044 ops/s
Iteration  17: 106082.770 ops/s
Iteration  18: 116384.378 ops/s
Iteration  19: 105528.341 ops/s
Iteration  20: 113999.638 ops/s
Iteration  21: 109732.385 ops/s
Iteration  22: 111268.722 ops/s
Iteration  23: 111874.674 ops/s
Iteration  24: 106572.126 ops/s
Iteration  25: 115313.581 ops/s
Iteration  26: 108760.156 ops/s
Iteration  27: 111976.495 ops/s
Iteration  28: 109760.299 ops/s
Iteration  29: 110946.414 ops/s
Iteration  30: 113979.481 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_380._Benchmark.benchmark_Cluster_380":
  110283.393 ±(99.9%) 2193.789 ops/s [Average]
  (min, avg, max) = (102280.523, 110283.393, 116384.378), stdev = 3283.561
  CI (99.9%): [108089.603, 112477.182] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_380._Benchmark.benchmark_Cluster_380  thrpt   30  110283.393 ± 2193.789  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_381._Benchmark.benchmark_Cluster_381$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_381._Benchmark.benchmark_Cluster_381

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.740 ops/s
# Warmup Iteration   2: 4948.698 ops/s
# Warmup Iteration   3: 30940.937 ops/s
# Warmup Iteration   4: 33747.322 ops/s
# Warmup Iteration   5: 40889.721 ops/s
# Warmup Iteration   6: 54529.741 ops/s
# Warmup Iteration   7: 106073.145 ops/s
# Warmup Iteration   8: 107180.139 ops/s
# Warmup Iteration   9: 127708.071 ops/s
# Warmup Iteration  10: 91496.480 ops/s
# Warmup Iteration  11: 131270.826 ops/s
# Warmup Iteration  12: 125981.618 ops/s
# Warmup Iteration  13: 131870.238 ops/s
# Warmup Iteration  14: 132867.256 ops/s
# Warmup Iteration  15: 124978.412 ops/s
# Warmup Iteration  16: 132293.924 ops/s
# Warmup Iteration  17: 128794.517 ops/s
# Warmup Iteration  18: 132521.700 ops/s
# Warmup Iteration  19: 126629.833 ops/s
# Warmup Iteration  20: 130022.819 ops/s
# Warmup Iteration  21: 129533.146 ops/s
# Warmup Iteration  22: 130859.406 ops/s
# Warmup Iteration  23: 132549.093 ops/s
# Warmup Iteration  24: 126519.239 ops/s
# Warmup Iteration  25: 129459.405 ops/s
# Warmup Iteration  26: 127647.477 ops/s
# Warmup Iteration  27: 125612.584 ops/s
# Warmup Iteration  28: 132047.880 ops/s
# Warmup Iteration  29: 126760.092 ops/s
# Warmup Iteration  30: 129510.592 ops/s
Iteration   1: 128218.460 ops/s
Iteration   2: 128133.711 ops/s
Iteration   3: 131530.371 ops/s
Iteration   4: 126785.635 ops/s
Iteration   5: 132260.125 ops/s
Iteration   6: 126183.580 ops/s
Iteration   7: 130976.322 ops/s
Iteration   8: 132655.416 ops/s
Iteration   9: 123795.843 ops/s
Iteration  10: 134982.758 ops/s
Iteration  11: 121738.331 ops/s
Iteration  12: 133578.894 ops/s
Iteration  13: 128683.263 ops/s
Iteration  14: 129670.546 ops/s
Iteration  15: 129779.637 ops/s
Iteration  16: 128175.490 ops/s
Iteration  17: 131976.148 ops/s
Iteration  18: 129261.764 ops/s
Iteration  19: 132756.082 ops/s
Iteration  20: 126510.164 ops/s
Iteration  21: 129698.655 ops/s
Iteration  22: 135007.700 ops/s
Iteration  23: 127100.831 ops/s
Iteration  24: 130862.984 ops/s
Iteration  25: 124659.199 ops/s
Iteration  26: 134670.228 ops/s
Iteration  27: 125619.359 ops/s
Iteration  28: 127377.318 ops/s
Iteration  29: 133075.713 ops/s
Iteration  30: 127543.553 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_381._Benchmark.benchmark_Cluster_381":
  129442.269 ±(99.9%) 2279.972 ops/s [Average]
  (min, avg, max) = (121738.331, 129442.269, 135007.700), stdev = 3412.555
  CI (99.9%): [127162.297, 131722.241] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_381._Benchmark.benchmark_Cluster_381  thrpt   30  129442.269 ± 2279.972  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_382._Benchmark.benchmark_Cluster_382$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_382._Benchmark.benchmark_Cluster_382

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.820 ops/s
# Warmup Iteration   2: 7111.106 ops/s
# Warmup Iteration   3: 33355.998 ops/s
# Warmup Iteration   4: 46723.009 ops/s
# Warmup Iteration   5: 36076.752 ops/s
# Warmup Iteration   6: 51311.256 ops/s
# Warmup Iteration   7: 45229.698 ops/s
# Warmup Iteration   8: 117847.880 ops/s
# Warmup Iteration   9: 117640.249 ops/s
# Warmup Iteration  10: 120257.165 ops/s
# Warmup Iteration  11: 115325.005 ops/s
# Warmup Iteration  12: 127858.261 ops/s
# Warmup Iteration  13: 123513.212 ops/s
# Warmup Iteration  14: 116861.417 ops/s
# Warmup Iteration  15: 127832.396 ops/s
# Warmup Iteration  16: 122869.415 ops/s
# Warmup Iteration  17: 127230.099 ops/s
# Warmup Iteration  18: 126787.988 ops/s
# Warmup Iteration  19: 126093.711 ops/s
# Warmup Iteration  20: 128958.708 ops/s
# Warmup Iteration  21: 120640.782 ops/s
# Warmup Iteration  22: 123814.922 ops/s
# Warmup Iteration  23: 124981.386 ops/s
# Warmup Iteration  24: 121594.190 ops/s
# Warmup Iteration  25: 125778.703 ops/s
# Warmup Iteration  26: 123349.915 ops/s
# Warmup Iteration  27: 131363.951 ops/s
# Warmup Iteration  28: 120260.381 ops/s
# Warmup Iteration  29: 117460.918 ops/s
# Warmup Iteration  30: 126284.751 ops/s
Iteration   1: 132341.009 ops/s
Iteration   2: 122100.472 ops/s
Iteration   3: 127357.027 ops/s
Iteration   4: 125655.789 ops/s
Iteration   5: 122654.624 ops/s
Iteration   6: 129879.278 ops/s
Iteration   7: 123268.259 ops/s
Iteration   8: 125019.308 ops/s
Iteration   9: 127204.197 ops/s
Iteration  10: 130539.349 ops/s
Iteration  11: 128895.473 ops/s
Iteration  12: 116783.001 ops/s
Iteration  13: 128109.137 ops/s
Iteration  14: 125479.666 ops/s
Iteration  15: 123751.549 ops/s
Iteration  16: 130574.951 ops/s
Iteration  17: 121619.985 ops/s
Iteration  18: 128298.313 ops/s
Iteration  19: 127206.559 ops/s
Iteration  20: 128867.856 ops/s
Iteration  21: 123154.250 ops/s
Iteration  22: 124758.301 ops/s
Iteration  23: 126397.718 ops/s
Iteration  24: 124193.508 ops/s
Iteration  25: 127962.705 ops/s
Iteration  26: 123595.123 ops/s
Iteration  27: 131953.405 ops/s
Iteration  28: 119222.173 ops/s
Iteration  29: 128219.849 ops/s
Iteration  30: 128895.587 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_382._Benchmark.benchmark_Cluster_382":
  126131.947 ±(99.9%) 2447.435 ops/s [Average]
  (min, avg, max) = (116783.001, 126131.947, 132341.009), stdev = 3663.205
  CI (99.9%): [123684.513, 128579.382] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_382._Benchmark.benchmark_Cluster_382  thrpt   30  126131.947 ± 2447.435  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_383._Benchmark.benchmark_Cluster_383$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_383._Benchmark.benchmark_Cluster_383

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.738 ops/s
# Warmup Iteration   2: 3310.975 ops/s
# Warmup Iteration   3: 24222.921 ops/s
# Warmup Iteration   4: 25778.445 ops/s
# Warmup Iteration   5: 34087.042 ops/s
# Warmup Iteration   6: 33165.172 ops/s
# Warmup Iteration   7: 25729.807 ops/s
# Warmup Iteration   8: 37393.403 ops/s
# Warmup Iteration   9: 51625.846 ops/s
# Warmup Iteration  10: 67733.019 ops/s
# Warmup Iteration  11: 100123.144 ops/s
# Warmup Iteration  12: 106574.955 ops/s
# Warmup Iteration  13: 101758.809 ops/s
# Warmup Iteration  14: 101009.960 ops/s
# Warmup Iteration  15: 101789.501 ops/s
# Warmup Iteration  16: 107615.112 ops/s
# Warmup Iteration  17: 103727.786 ops/s
# Warmup Iteration  18: 106081.605 ops/s
# Warmup Iteration  19: 101808.111 ops/s
# Warmup Iteration  20: 110980.589 ops/s
# Warmup Iteration  21: 109124.408 ops/s
# Warmup Iteration  22: 105287.578 ops/s
# Warmup Iteration  23: 110696.506 ops/s
# Warmup Iteration  24: 107880.336 ops/s
# Warmup Iteration  25: 108847.219 ops/s
# Warmup Iteration  26: 107961.175 ops/s
# Warmup Iteration  27: 109471.828 ops/s
# Warmup Iteration  28: 108946.511 ops/s
# Warmup Iteration  29: 112565.349 ops/s
# Warmup Iteration  30: 105575.345 ops/s
Iteration   1: 111126.012 ops/s
Iteration   2: 106410.049 ops/s
Iteration   3: 109504.393 ops/s
Iteration   4: 112328.142 ops/s
Iteration   5: 107056.903 ops/s
Iteration   6: 113074.595 ops/s
Iteration   7: 110593.563 ops/s
Iteration   8: 110077.619 ops/s
Iteration   9: 110896.319 ops/s
Iteration  10: 106779.407 ops/s
Iteration  11: 111925.777 ops/s
Iteration  12: 107323.924 ops/s
Iteration  13: 108646.115 ops/s
Iteration  14: 110628.114 ops/s
Iteration  15: 107109.309 ops/s
Iteration  16: 108867.073 ops/s
Iteration  17: 110743.950 ops/s
Iteration  18: 112266.874 ops/s
Iteration  19: 106704.972 ops/s
Iteration  20: 114217.377 ops/s
Iteration  21: 112646.035 ops/s
Iteration  22: 105619.218 ops/s
Iteration  23: 113382.339 ops/s
Iteration  24: 109320.042 ops/s
Iteration  25: 110733.857 ops/s
Iteration  26: 107734.704 ops/s
Iteration  27: 110771.452 ops/s
Iteration  28: 109542.700 ops/s
Iteration  29: 106897.928 ops/s
Iteration  30: 112223.042 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_383._Benchmark.benchmark_Cluster_383":
  109838.393 ±(99.9%) 1593.138 ops/s [Average]
  (min, avg, max) = (105619.218, 109838.393, 114217.377), stdev = 2384.535
  CI (99.9%): [108245.255, 111431.532] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_383._Benchmark.benchmark_Cluster_383  thrpt   30  109838.393 ± 1593.138  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_384._Benchmark.benchmark_Cluster_384$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_384._Benchmark.benchmark_Cluster_384

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.721 ops/s
# Warmup Iteration   2: 2344.188 ops/s
# Warmup Iteration   3: 15050.024 ops/s
# Warmup Iteration   4: 22583.331 ops/s
# Warmup Iteration   5: 28758.149 ops/s
# Warmup Iteration   6: 30942.322 ops/s
# Warmup Iteration   7: 37671.580 ops/s
# Warmup Iteration   8: 28413.085 ops/s
# Warmup Iteration   9: 67482.169 ops/s
# Warmup Iteration  10: 91713.542 ops/s
# Warmup Iteration  11: 99396.393 ops/s
# Warmup Iteration  12: 94098.359 ops/s
# Warmup Iteration  13: 101800.785 ops/s
# Warmup Iteration  14: 96231.752 ops/s
# Warmup Iteration  15: 98072.768 ops/s
# Warmup Iteration  16: 96260.698 ops/s
# Warmup Iteration  17: 98110.492 ops/s
# Warmup Iteration  18: 97916.654 ops/s
# Warmup Iteration  19: 96767.817 ops/s
# Warmup Iteration  20: 99370.878 ops/s
# Warmup Iteration  21: 97601.750 ops/s
# Warmup Iteration  22: 100506.764 ops/s
# Warmup Iteration  23: 91982.193 ops/s
# Warmup Iteration  24: 94406.934 ops/s
# Warmup Iteration  25: 101236.702 ops/s
# Warmup Iteration  26: 98428.961 ops/s
# Warmup Iteration  27: 93442.061 ops/s
# Warmup Iteration  28: 97131.047 ops/s
# Warmup Iteration  29: 99504.406 ops/s
# Warmup Iteration  30: 96871.275 ops/s
Iteration   1: 97840.735 ops/s
Iteration   2: 97128.975 ops/s
Iteration   3: 98191.756 ops/s
Iteration   4: 95090.847 ops/s
Iteration   5: 102246.080 ops/s
Iteration   6: 93271.051 ops/s
Iteration   7: 97192.509 ops/s
Iteration   8: 99675.376 ops/s
Iteration   9: 92538.308 ops/s
Iteration  10: 96822.578 ops/s
Iteration  11: 93609.664 ops/s
Iteration  12: 98136.532 ops/s
Iteration  13: 96156.515 ops/s
Iteration  14: 96023.800 ops/s
Iteration  15: 98846.302 ops/s
Iteration  16: 95344.900 ops/s
Iteration  17: 98424.840 ops/s
Iteration  18: 98140.492 ops/s
Iteration  19: 97997.009 ops/s
Iteration  20: 101280.961 ops/s
Iteration  21: 94229.524 ops/s
Iteration  22: 98311.583 ops/s
Iteration  23: 96825.741 ops/s
Iteration  24: 98410.281 ops/s
Iteration  25: 98274.005 ops/s
Iteration  26: 94901.558 ops/s
Iteration  27: 99418.924 ops/s
Iteration  28: 92406.070 ops/s
Iteration  29: 94289.053 ops/s
Iteration  30: 81478.260 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_384._Benchmark.benchmark_Cluster_384":
  96416.808 ±(99.9%) 2481.512 ops/s [Average]
  (min, avg, max) = (81478.260, 96416.808, 102246.080), stdev = 3714.210
  CI (99.9%): [93935.296, 98898.319] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_384._Benchmark.benchmark_Cluster_384  thrpt   30  96416.808 ± 2481.512  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_385._Benchmark.benchmark_Cluster_385$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_385._Benchmark.benchmark_Cluster_385

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2281.753 ops/s
# Warmup Iteration   2: 26897.314 ops/s
# Warmup Iteration   3: 32545.781 ops/s
# Warmup Iteration   4: 39721.175 ops/s
# Warmup Iteration   5: 46811.087 ops/s
# Warmup Iteration   6: 63260.183 ops/s
# Warmup Iteration   7: 102948.064 ops/s
# Warmup Iteration   8: 107791.332 ops/s
# Warmup Iteration   9: 103318.360 ops/s
# Warmup Iteration  10: 109434.787 ops/s
# Warmup Iteration  11: 104776.320 ops/s
# Warmup Iteration  12: 99788.562 ops/s
# Warmup Iteration  13: 109977.581 ops/s
# Warmup Iteration  14: 106143.091 ops/s
# Warmup Iteration  15: 101829.924 ops/s
# Warmup Iteration  16: 108534.069 ops/s
# Warmup Iteration  17: 106874.951 ops/s
# Warmup Iteration  18: 111734.941 ops/s
# Warmup Iteration  19: 103650.441 ops/s
# Warmup Iteration  20: 104980.601 ops/s
# Warmup Iteration  21: 111948.948 ops/s
# Warmup Iteration  22: 101175.025 ops/s
# Warmup Iteration  23: 107983.631 ops/s
# Warmup Iteration  24: 110706.996 ops/s
# Warmup Iteration  25: 108990.842 ops/s
# Warmup Iteration  26: 111448.324 ops/s
# Warmup Iteration  27: 110390.380 ops/s
# Warmup Iteration  28: 108731.522 ops/s
# Warmup Iteration  29: 107542.990 ops/s
# Warmup Iteration  30: 109485.804 ops/s
Iteration   1: 111397.820 ops/s
Iteration   2: 107072.907 ops/s
Iteration   3: 112502.304 ops/s
Iteration   4: 108153.113 ops/s
Iteration   5: 110419.499 ops/s
Iteration   6: 107313.979 ops/s
Iteration   7: 111810.495 ops/s
Iteration   8: 110707.588 ops/s
Iteration   9: 107918.917 ops/s
Iteration  10: 113417.735 ops/s
Iteration  11: 108918.223 ops/s
Iteration  12: 111675.102 ops/s
Iteration  13: 109003.813 ops/s
Iteration  14: 110297.640 ops/s
Iteration  15: 112357.345 ops/s
Iteration  16: 107640.955 ops/s
Iteration  17: 111388.938 ops/s
Iteration  18: 109297.571 ops/s
Iteration  19: 111132.027 ops/s
Iteration  20: 113735.988 ops/s
Iteration  21: 104208.357 ops/s
Iteration  22: 111589.530 ops/s
Iteration  23: 110181.053 ops/s
Iteration  24: 111570.264 ops/s
Iteration  25: 106996.998 ops/s
Iteration  26: 112086.850 ops/s
Iteration  27: 108511.394 ops/s
Iteration  28: 110176.760 ops/s
Iteration  29: 112333.350 ops/s
Iteration  30: 106519.264 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_385._Benchmark.benchmark_Cluster_385":
  110011.193 ±(99.9%) 1534.410 ops/s [Average]
  (min, avg, max) = (104208.357, 110011.193, 113735.988), stdev = 2296.632
  CI (99.9%): [108476.783, 111545.602] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_385._Benchmark.benchmark_Cluster_385  thrpt   30  110011.193 ± 1534.410  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_386._Benchmark.benchmark_Cluster_386$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_386._Benchmark.benchmark_Cluster_386

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3163.989 ops/s
# Warmup Iteration   2: 19263.278 ops/s
# Warmup Iteration   3: 30062.983 ops/s
# Warmup Iteration   4: 27380.977 ops/s
# Warmup Iteration   5: 85464.552 ops/s
# Warmup Iteration   6: 95288.518 ops/s
# Warmup Iteration   7: 99118.552 ops/s
# Warmup Iteration   8: 90836.510 ops/s
# Warmup Iteration   9: 97552.237 ops/s
# Warmup Iteration  10: 97071.573 ops/s
# Warmup Iteration  11: 99133.956 ops/s
# Warmup Iteration  12: 96794.665 ops/s
# Warmup Iteration  13: 93418.458 ops/s
# Warmup Iteration  14: 101307.009 ops/s
# Warmup Iteration  15: 101941.401 ops/s
# Warmup Iteration  16: 95824.185 ops/s
# Warmup Iteration  17: 101352.826 ops/s
# Warmup Iteration  18: 100042.558 ops/s
# Warmup Iteration  19: 96256.047 ops/s
# Warmup Iteration  20: 103824.416 ops/s
# Warmup Iteration  21: 94967.860 ops/s
# Warmup Iteration  22: 97367.066 ops/s
# Warmup Iteration  23: 101346.069 ops/s
# Warmup Iteration  24: 102667.387 ops/s
# Warmup Iteration  25: 100896.213 ops/s
# Warmup Iteration  26: 102091.791 ops/s
# Warmup Iteration  27: 104059.575 ops/s
# Warmup Iteration  28: 101535.025 ops/s
# Warmup Iteration  29: 97685.096 ops/s
# Warmup Iteration  30: 101819.331 ops/s
Iteration   1: 100932.825 ops/s
Iteration   2: 100421.741 ops/s
Iteration   3: 101687.002 ops/s
Iteration   4: 98662.442 ops/s
Iteration   5: 100567.791 ops/s
Iteration   6: 100515.066 ops/s
Iteration   7: 100981.301 ops/s
Iteration   8: 100693.433 ops/s
Iteration   9: 95448.499 ops/s
Iteration  10: 103627.605 ops/s
Iteration  11: 99545.773 ops/s
Iteration  12: 102638.391 ops/s
Iteration  13: 98453.017 ops/s
Iteration  14: 98746.276 ops/s
Iteration  15: 101697.846 ops/s
Iteration  16: 100765.047 ops/s
Iteration  17: 99267.227 ops/s
Iteration  18: 102892.377 ops/s
Iteration  19: 104085.607 ops/s
Iteration  20: 97796.437 ops/s
Iteration  21: 101984.893 ops/s
Iteration  22: 103815.543 ops/s
Iteration  23: 97005.264 ops/s
Iteration  24: 85118.049 ops/s
Iteration  25: 103657.308 ops/s
Iteration  26: 99167.564 ops/s
Iteration  27: 105160.080 ops/s
Iteration  28: 99256.276 ops/s
Iteration  29: 102620.849 ops/s
Iteration  30: 98826.505 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_386._Benchmark.benchmark_Cluster_386":
  100201.268 ±(99.9%) 2430.731 ops/s [Average]
  (min, avg, max) = (85118.049, 100201.268, 105160.080), stdev = 3638.204
  CI (99.9%): [97770.537, 102631.999] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_386._Benchmark.benchmark_Cluster_386  thrpt   30  100201.268 ± 2430.731  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_387._Benchmark.benchmark_Cluster_387$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_387._Benchmark.benchmark_Cluster_387

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4037.293 ops/s
# Warmup Iteration   2: 42809.228 ops/s
# Warmup Iteration   3: 60009.948 ops/s
# Warmup Iteration   4: 111450.693 ops/s
# Warmup Iteration   5: 106196.720 ops/s
# Warmup Iteration   6: 108945.353 ops/s
# Warmup Iteration   7: 104670.186 ops/s
# Warmup Iteration   8: 102703.810 ops/s
# Warmup Iteration   9: 114411.953 ops/s
# Warmup Iteration  10: 110110.300 ops/s
# Warmup Iteration  11: 112957.307 ops/s
# Warmup Iteration  12: 115709.255 ops/s
# Warmup Iteration  13: 107725.021 ops/s
# Warmup Iteration  14: 116017.044 ops/s
# Warmup Iteration  15: 111240.016 ops/s
# Warmup Iteration  16: 113702.552 ops/s
# Warmup Iteration  17: 111541.031 ops/s
# Warmup Iteration  18: 119753.942 ops/s
# Warmup Iteration  19: 115535.094 ops/s
# Warmup Iteration  20: 117456.211 ops/s
# Warmup Iteration  21: 116241.646 ops/s
# Warmup Iteration  22: 117580.812 ops/s
# Warmup Iteration  23: 116000.366 ops/s
# Warmup Iteration  24: 117411.154 ops/s
# Warmup Iteration  25: 114901.688 ops/s
# Warmup Iteration  26: 118305.800 ops/s
# Warmup Iteration  27: 116343.673 ops/s
# Warmup Iteration  28: 117531.259 ops/s
# Warmup Iteration  29: 116799.750 ops/s
# Warmup Iteration  30: 116188.013 ops/s
Iteration   1: 117480.090 ops/s
Iteration   2: 114813.497 ops/s
Iteration   3: 114444.895 ops/s
Iteration   4: 118392.940 ops/s
Iteration   5: 115561.386 ops/s
Iteration   6: 111385.085 ops/s
Iteration   7: 117551.683 ops/s
Iteration   8: 115037.715 ops/s
Iteration   9: 119440.524 ops/s
Iteration  10: 116997.816 ops/s
Iteration  11: 115179.157 ops/s
Iteration  12: 120348.558 ops/s
Iteration  13: 112851.986 ops/s
Iteration  14: 119007.288 ops/s
Iteration  15: 118593.582 ops/s
Iteration  16: 115108.173 ops/s
Iteration  17: 120363.297 ops/s
Iteration  18: 114472.193 ops/s
Iteration  19: 118090.631 ops/s
Iteration  20: 119208.311 ops/s
Iteration  21: 113127.706 ops/s
Iteration  22: 120347.867 ops/s
Iteration  23: 112896.843 ops/s
Iteration  24: 116722.447 ops/s
Iteration  25: 120118.387 ops/s
Iteration  26: 115462.287 ops/s
Iteration  27: 119805.561 ops/s
Iteration  28: 116669.212 ops/s
Iteration  29: 117292.623 ops/s
Iteration  30: 116385.732 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_387._Benchmark.benchmark_Cluster_387":
  116771.916 ±(99.9%) 1687.132 ops/s [Average]
  (min, avg, max) = (111385.085, 116771.916, 120363.297), stdev = 2525.220
  CI (99.9%): [115084.784, 118459.048] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_387._Benchmark.benchmark_Cluster_387  thrpt   30  116771.916 ± 1687.132  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_388._Benchmark.benchmark_Cluster_388$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_388._Benchmark.benchmark_Cluster_388

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 686.784 ops/s
# Warmup Iteration   2: 4115.032 ops/s
# Warmup Iteration   3: 17558.397 ops/s
# Warmup Iteration   4: 17466.700 ops/s
# Warmup Iteration   5: 23665.083 ops/s
# Warmup Iteration   6: 18414.701 ops/s
# Warmup Iteration   7: 21175.945 ops/s
# Warmup Iteration   8: 28112.562 ops/s
# Warmup Iteration   9: 32671.680 ops/s
# Warmup Iteration  10: 33277.354 ops/s
# Warmup Iteration  11: 27226.867 ops/s
# Warmup Iteration  12: 34428.816 ops/s
# Warmup Iteration  13: 54697.529 ops/s
# Warmup Iteration  14: 66859.626 ops/s
# Warmup Iteration  15: 68552.350 ops/s
# Warmup Iteration  16: 65511.333 ops/s
# Warmup Iteration  17: 68192.087 ops/s
# Warmup Iteration  18: 69913.908 ops/s
# Warmup Iteration  19: 70523.168 ops/s
# Warmup Iteration  20: 71868.113 ops/s
# Warmup Iteration  21: 68458.598 ops/s
# Warmup Iteration  22: 71861.736 ops/s
# Warmup Iteration  23: 67033.784 ops/s
# Warmup Iteration  24: 69479.405 ops/s
# Warmup Iteration  25: 73961.844 ops/s
# Warmup Iteration  26: 69407.448 ops/s
# Warmup Iteration  27: 69630.093 ops/s
# Warmup Iteration  28: 73455.466 ops/s
# Warmup Iteration  29: 67493.298 ops/s
# Warmup Iteration  30: 71096.512 ops/s
Iteration   1: 71398.027 ops/s
Iteration   2: 70510.173 ops/s
Iteration   3: 73351.415 ops/s
Iteration   4: 67051.008 ops/s
Iteration   5: 72490.477 ops/s
Iteration   6: 72903.999 ops/s
Iteration   7: 67441.346 ops/s
Iteration   8: 69212.595 ops/s
Iteration   9: 72337.337 ops/s
Iteration  10: 68773.126 ops/s
Iteration  11: 69790.974 ops/s
Iteration  12: 72723.004 ops/s
Iteration  13: 68343.938 ops/s
Iteration  14: 69065.316 ops/s
Iteration  15: 74338.399 ops/s
Iteration  16: 69475.887 ops/s
Iteration  17: 70656.800 ops/s
Iteration  18: 60667.710 ops/s
Iteration  19: 69077.479 ops/s
Iteration  20: 71579.972 ops/s
Iteration  21: 69399.521 ops/s
Iteration  22: 71413.845 ops/s
Iteration  23: 70447.479 ops/s
Iteration  24: 66248.808 ops/s
Iteration  25: 69395.865 ops/s
Iteration  26: 69064.336 ops/s
Iteration  27: 71754.301 ops/s
Iteration  28: 71966.719 ops/s
Iteration  29: 69956.496 ops/s
Iteration  30: 72953.625 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_388._Benchmark.benchmark_Cluster_388":
  70126.333 ±(99.9%) 1776.432 ops/s [Average]
  (min, avg, max) = (60667.710, 70126.333, 74338.399), stdev = 2658.880
  CI (99.9%): [68349.900, 71902.765] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_388._Benchmark.benchmark_Cluster_388  thrpt   30  70126.333 ± 1776.432  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_389._Benchmark.benchmark_Cluster_389$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_389._Benchmark.benchmark_Cluster_389

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6798.635 ops/s
# Warmup Iteration   2: 27283.906 ops/s
# Warmup Iteration   3: 29461.727 ops/s
# Warmup Iteration   4: 63651.772 ops/s
# Warmup Iteration   5: 65066.399 ops/s
# Warmup Iteration   6: 74694.319 ops/s
# Warmup Iteration   7: 107969.418 ops/s
# Warmup Iteration   8: 102379.079 ops/s
# Warmup Iteration   9: 107291.102 ops/s
# Warmup Iteration  10: 101750.939 ops/s
# Warmup Iteration  11: 101386.031 ops/s
# Warmup Iteration  12: 106822.952 ops/s
# Warmup Iteration  13: 98620.909 ops/s
# Warmup Iteration  14: 108151.602 ops/s
# Warmup Iteration  15: 107546.727 ops/s
# Warmup Iteration  16: 100301.618 ops/s
# Warmup Iteration  17: 101700.357 ops/s
# Warmup Iteration  18: 109380.178 ops/s
# Warmup Iteration  19: 104392.879 ops/s
# Warmup Iteration  20: 110085.400 ops/s
# Warmup Iteration  21: 104147.289 ops/s
# Warmup Iteration  22: 108714.033 ops/s
# Warmup Iteration  23: 104379.689 ops/s
# Warmup Iteration  24: 108265.742 ops/s
# Warmup Iteration  25: 108420.648 ops/s
# Warmup Iteration  26: 104618.792 ops/s
# Warmup Iteration  27: 105022.508 ops/s
# Warmup Iteration  28: 109634.338 ops/s
# Warmup Iteration  29: 104680.231 ops/s
# Warmup Iteration  30: 105554.328 ops/s
Iteration   1: 106434.778 ops/s
Iteration   2: 104693.914 ops/s
Iteration   3: 105051.062 ops/s
Iteration   4: 104760.391 ops/s
Iteration   5: 106387.349 ops/s
Iteration   6: 105519.303 ops/s
Iteration   7: 107124.117 ops/s
Iteration   8: 105907.957 ops/s
Iteration   9: 106291.555 ops/s
Iteration  10: 109409.183 ops/s
Iteration  11: 104842.792 ops/s
Iteration  12: 108030.908 ops/s
Iteration  13: 104567.605 ops/s
Iteration  14: 105758.059 ops/s
Iteration  15: 107317.287 ops/s
Iteration  16: 103949.393 ops/s
Iteration  17: 110343.649 ops/s
Iteration  18: 106018.043 ops/s
Iteration  19: 105218.017 ops/s
Iteration  20: 110653.931 ops/s
Iteration  21: 105404.700 ops/s
Iteration  22: 107108.165 ops/s
Iteration  23: 108356.530 ops/s
Iteration  24: 102704.678 ops/s
Iteration  25: 107984.058 ops/s
Iteration  26: 105214.970 ops/s
Iteration  27: 109518.978 ops/s
Iteration  28: 103987.787 ops/s
Iteration  29: 104810.700 ops/s
Iteration  30: 109754.911 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_389._Benchmark.benchmark_Cluster_389":
  106437.492 ±(99.9%) 1365.265 ops/s [Average]
  (min, avg, max) = (102704.678, 106437.492, 110653.931), stdev = 2043.465
  CI (99.9%): [105072.227, 107802.758] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_389._Benchmark.benchmark_Cluster_389  thrpt   30  106437.492 ± 1365.265  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_39._Benchmark.benchmark_Cluster_39$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_39._Benchmark.benchmark_Cluster_39

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5496.628 ops/s
# Warmup Iteration   2: 27736.480 ops/s
# Warmup Iteration   3: 31846.918 ops/s
# Warmup Iteration   4: 29721.150 ops/s
# Warmup Iteration   5: 44513.493 ops/s
# Warmup Iteration   6: 40436.184 ops/s
# Warmup Iteration   7: 83702.335 ops/s
# Warmup Iteration   8: 100799.796 ops/s
# Warmup Iteration   9: 99291.407 ops/s
# Warmup Iteration  10: 100625.723 ops/s
# Warmup Iteration  11: 100949.891 ops/s
# Warmup Iteration  12: 96945.510 ops/s
# Warmup Iteration  13: 103658.119 ops/s
# Warmup Iteration  14: 97319.973 ops/s
# Warmup Iteration  15: 102596.854 ops/s
# Warmup Iteration  16: 93687.982 ops/s
# Warmup Iteration  17: 98011.800 ops/s
# Warmup Iteration  18: 103031.979 ops/s
# Warmup Iteration  19: 102944.105 ops/s
# Warmup Iteration  20: 105559.923 ops/s
# Warmup Iteration  21: 101759.548 ops/s
# Warmup Iteration  22: 106606.792 ops/s
# Warmup Iteration  23: 100369.703 ops/s
# Warmup Iteration  24: 102568.554 ops/s
# Warmup Iteration  25: 105652.064 ops/s
# Warmup Iteration  26: 105284.946 ops/s
# Warmup Iteration  27: 100371.224 ops/s
# Warmup Iteration  28: 101501.448 ops/s
# Warmup Iteration  29: 106197.356 ops/s
# Warmup Iteration  30: 103827.525 ops/s
Iteration   1: 101591.740 ops/s
Iteration   2: 102299.277 ops/s
Iteration   3: 105272.923 ops/s
Iteration   4: 102361.174 ops/s
Iteration   5: 103669.482 ops/s
Iteration   6: 106313.469 ops/s
Iteration   7: 102597.488 ops/s
Iteration   8: 106779.009 ops/s
Iteration   9: 99250.316 ops/s
Iteration  10: 106071.573 ops/s
Iteration  11: 102300.481 ops/s
Iteration  12: 78177.625 ops/s
Iteration  13: 106580.998 ops/s
Iteration  14: 100673.578 ops/s
Iteration  15: 106219.670 ops/s
Iteration  16: 99435.363 ops/s
Iteration  17: 100890.383 ops/s
Iteration  18: 103453.542 ops/s
Iteration  19: 103373.264 ops/s
Iteration  20: 106990.637 ops/s
Iteration  21: 99930.037 ops/s
Iteration  22: 106744.445 ops/s
Iteration  23: 101626.304 ops/s
Iteration  24: 102893.584 ops/s
Iteration  25: 104358.832 ops/s
Iteration  26: 101497.990 ops/s
Iteration  27: 105176.176 ops/s
Iteration  28: 102154.795 ops/s
Iteration  29: 101609.565 ops/s
Iteration  30: 105487.476 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_39._Benchmark.benchmark_Cluster_39":
  102526.040 ±(99.9%) 3447.950 ops/s [Average]
  (min, avg, max) = (78177.625, 102526.040, 106990.637), stdev = 5160.729
  CI (99.9%): [99078.090, 105973.989] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_39._Benchmark.benchmark_Cluster_39  thrpt   30  102526.040 ± 3447.950  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_390._Benchmark.benchmark_Cluster_390$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_390._Benchmark.benchmark_Cluster_390

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8617.391 ops/s
# Warmup Iteration   2: 37718.055 ops/s
# Warmup Iteration   3: 49760.784 ops/s
# Warmup Iteration   4: 83194.089 ops/s
# Warmup Iteration   5: 94161.612 ops/s
# Warmup Iteration   6: 89320.298 ops/s
# Warmup Iteration   7: 103062.176 ops/s
# Warmup Iteration   8: 98424.435 ops/s
# Warmup Iteration   9: 103444.283 ops/s
# Warmup Iteration  10: 99650.623 ops/s
# Warmup Iteration  11: 100164.844 ops/s
# Warmup Iteration  12: 104244.116 ops/s
# Warmup Iteration  13: 99629.708 ops/s
# Warmup Iteration  14: 101568.128 ops/s
# Warmup Iteration  15: 99104.143 ops/s
# Warmup Iteration  16: 103920.633 ops/s
# Warmup Iteration  17: 105664.953 ops/s
# Warmup Iteration  18: 108247.495 ops/s
# Warmup Iteration  19: 110205.270 ops/s
# Warmup Iteration  20: 104798.382 ops/s
# Warmup Iteration  21: 109789.150 ops/s
# Warmup Iteration  22: 106386.748 ops/s
# Warmup Iteration  23: 105388.866 ops/s
# Warmup Iteration  24: 107560.990 ops/s
# Warmup Iteration  25: 108418.192 ops/s
# Warmup Iteration  26: 104997.724 ops/s
# Warmup Iteration  27: 105994.996 ops/s
# Warmup Iteration  28: 106329.657 ops/s
# Warmup Iteration  29: 110964.666 ops/s
# Warmup Iteration  30: 105542.127 ops/s
Iteration   1: 111678.173 ops/s
Iteration   2: 108984.307 ops/s
Iteration   3: 104287.676 ops/s
Iteration   4: 111014.968 ops/s
Iteration   5: 108052.927 ops/s
Iteration   6: 108470.167 ops/s
Iteration   7: 107012.169 ops/s
Iteration   8: 106697.852 ops/s
Iteration   9: 110218.462 ops/s
Iteration  10: 107208.314 ops/s
Iteration  11: 110777.447 ops/s
Iteration  12: 103945.550 ops/s
Iteration  13: 108218.192 ops/s
Iteration  14: 108652.312 ops/s
Iteration  15: 107603.793 ops/s
Iteration  16: 106201.692 ops/s
Iteration  17: 111563.961 ops/s
Iteration  18: 105700.868 ops/s
Iteration  19: 110644.882 ops/s
Iteration  20: 107461.689 ops/s
Iteration  21: 108059.323 ops/s
Iteration  22: 110324.319 ops/s
Iteration  23: 106848.052 ops/s
Iteration  24: 108122.922 ops/s
Iteration  25: 108989.630 ops/s
Iteration  26: 107427.910 ops/s
Iteration  27: 112800.937 ops/s
Iteration  28: 113498.742 ops/s
Iteration  29: 105261.859 ops/s
Iteration  30: 109616.318 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_390._Benchmark.benchmark_Cluster_390":
  108511.514 ±(99.9%) 1582.518 ops/s [Average]
  (min, avg, max) = (103945.550, 108511.514, 113498.742), stdev = 2368.638
  CI (99.9%): [106928.996, 110094.032] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_390._Benchmark.benchmark_Cluster_390  thrpt   30  108511.514 ± 1582.518  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_391._Benchmark.benchmark_Cluster_391$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_391._Benchmark.benchmark_Cluster_391

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9556.185 ops/s
# Warmup Iteration   2: 52856.701 ops/s
# Warmup Iteration   3: 73293.451 ops/s
# Warmup Iteration   4: 89229.012 ops/s
# Warmup Iteration   5: 94988.961 ops/s
# Warmup Iteration   6: 93344.882 ops/s
# Warmup Iteration   7: 97090.916 ops/s
# Warmup Iteration   8: 100090.396 ops/s
# Warmup Iteration   9: 97231.171 ops/s
# Warmup Iteration  10: 96747.321 ops/s
# Warmup Iteration  11: 98707.692 ops/s
# Warmup Iteration  12: 97216.543 ops/s
# Warmup Iteration  13: 98724.863 ops/s
# Warmup Iteration  14: 101846.855 ops/s
# Warmup Iteration  15: 94828.794 ops/s
# Warmup Iteration  16: 98357.365 ops/s
# Warmup Iteration  17: 105212.067 ops/s
# Warmup Iteration  18: 98999.620 ops/s
# Warmup Iteration  19: 104397.943 ops/s
# Warmup Iteration  20: 105780.774 ops/s
# Warmup Iteration  21: 99731.261 ops/s
# Warmup Iteration  22: 104769.333 ops/s
# Warmup Iteration  23: 102171.884 ops/s
# Warmup Iteration  24: 101107.317 ops/s
# Warmup Iteration  25: 97262.357 ops/s
# Warmup Iteration  26: 99858.785 ops/s
# Warmup Iteration  27: 103280.916 ops/s
# Warmup Iteration  28: 99828.915 ops/s
# Warmup Iteration  29: 104893.027 ops/s
# Warmup Iteration  30: 104630.551 ops/s
Iteration   1: 101158.855 ops/s
Iteration   2: 101054.730 ops/s
Iteration   3: 107057.204 ops/s
Iteration   4: 99746.037 ops/s
Iteration   5: 105725.852 ops/s
Iteration   6: 84955.512 ops/s
Iteration   7: 94934.636 ops/s
Iteration   8: 99866.449 ops/s
Iteration   9: 105808.136 ops/s
Iteration  10: 103484.611 ops/s
Iteration  11: 99409.632 ops/s
Iteration  12: 105422.824 ops/s
Iteration  13: 99366.396 ops/s
Iteration  14: 105228.015 ops/s
Iteration  15: 101483.201 ops/s
Iteration  16: 102229.299 ops/s
Iteration  17: 104110.163 ops/s
Iteration  18: 97454.150 ops/s
Iteration  19: 105139.080 ops/s
Iteration  20: 101838.432 ops/s
Iteration  21: 102493.997 ops/s
Iteration  22: 99978.093 ops/s
Iteration  23: 102162.585 ops/s
Iteration  24: 106180.823 ops/s
Iteration  25: 99009.853 ops/s
Iteration  26: 102532.852 ops/s
Iteration  27: 104792.435 ops/s
Iteration  28: 101866.171 ops/s
Iteration  29: 105504.861 ops/s
Iteration  30: 105194.866 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_391._Benchmark.benchmark_Cluster_391":
  101839.658 ±(99.9%) 2881.760 ops/s [Average]
  (min, avg, max) = (84955.512, 101839.658, 107057.204), stdev = 4313.282
  CI (99.9%): [98957.899, 104721.418] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_391._Benchmark.benchmark_Cluster_391  thrpt   30  101839.658 ± 2881.760  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_392._Benchmark.benchmark_Cluster_392$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_392._Benchmark.benchmark_Cluster_392

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.779 ops/s
# Warmup Iteration   2: 3868.933 ops/s
# Warmup Iteration   3: 20006.165 ops/s
# Warmup Iteration   4: 32514.739 ops/s
# Warmup Iteration   5: 49240.357 ops/s
# Warmup Iteration   6: 39799.761 ops/s
# Warmup Iteration   7: 48294.014 ops/s
# Warmup Iteration   8: 43796.223 ops/s
# Warmup Iteration   9: 61456.755 ops/s
# Warmup Iteration  10: 89722.553 ops/s
# Warmup Iteration  11: 129129.141 ops/s
# Warmup Iteration  12: 129773.003 ops/s
# Warmup Iteration  13: 131804.685 ops/s
# Warmup Iteration  14: 119478.098 ops/s
# Warmup Iteration  15: 127274.685 ops/s
# Warmup Iteration  16: 133507.433 ops/s
# Warmup Iteration  17: 125254.367 ops/s
# Warmup Iteration  18: 136316.880 ops/s
# Warmup Iteration  19: 126519.883 ops/s
# Warmup Iteration  20: 129404.581 ops/s
# Warmup Iteration  21: 136505.977 ops/s
# Warmup Iteration  22: 136557.076 ops/s
# Warmup Iteration  23: 135442.521 ops/s
# Warmup Iteration  24: 118771.169 ops/s
# Warmup Iteration  25: 128092.410 ops/s
# Warmup Iteration  26: 135696.353 ops/s
# Warmup Iteration  27: 127244.108 ops/s
# Warmup Iteration  28: 134838.587 ops/s
# Warmup Iteration  29: 132009.291 ops/s
# Warmup Iteration  30: 130735.362 ops/s
Iteration   1: 134414.774 ops/s
Iteration   2: 129184.245 ops/s
Iteration   3: 131542.130 ops/s
Iteration   4: 134297.131 ops/s
Iteration   5: 134476.706 ops/s
Iteration   6: 128869.820 ops/s
Iteration   7: 127425.957 ops/s
Iteration   8: 136089.864 ops/s
Iteration   9: 126556.259 ops/s
Iteration  10: 132485.825 ops/s
Iteration  11: 130065.481 ops/s
Iteration  12: 133035.923 ops/s
Iteration  13: 132037.979 ops/s
Iteration  14: 128433.628 ops/s
Iteration  15: 132300.977 ops/s
Iteration  16: 129548.372 ops/s
Iteration  17: 134282.739 ops/s
Iteration  18: 130697.143 ops/s
Iteration  19: 132890.464 ops/s
Iteration  20: 130035.865 ops/s
Iteration  21: 129493.328 ops/s
Iteration  22: 131419.044 ops/s
Iteration  23: 132393.570 ops/s
Iteration  24: 131484.744 ops/s
Iteration  25: 135849.519 ops/s
Iteration  26: 128959.685 ops/s
Iteration  27: 132761.324 ops/s
Iteration  28: 128342.505 ops/s
Iteration  29: 131955.311 ops/s
Iteration  30: 132680.751 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_392._Benchmark.benchmark_Cluster_392":
  131467.035 ±(99.9%) 1640.753 ops/s [Average]
  (min, avg, max) = (126556.259, 131467.035, 136089.864), stdev = 2455.801
  CI (99.9%): [129826.283, 133107.788] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_392._Benchmark.benchmark_Cluster_392  thrpt   30  131467.035 ± 1640.753  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_393._Benchmark.benchmark_Cluster_393$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_393._Benchmark.benchmark_Cluster_393

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.787 ops/s
# Warmup Iteration   2: 2640.984 ops/s
# Warmup Iteration   3: 13075.316 ops/s
# Warmup Iteration   4: 24692.034 ops/s
# Warmup Iteration   5: 27623.231 ops/s
# Warmup Iteration   6: 34531.800 ops/s
# Warmup Iteration   7: 33154.254 ops/s
# Warmup Iteration   8: 35276.664 ops/s
# Warmup Iteration   9: 32743.470 ops/s
# Warmup Iteration  10: 28885.951 ops/s
# Warmup Iteration  11: 34532.140 ops/s
# Warmup Iteration  12: 30543.856 ops/s
# Warmup Iteration  13: 23644.131 ops/s
# Warmup Iteration  14: 44403.663 ops/s
# Warmup Iteration  15: 35235.554 ops/s
# Warmup Iteration  16: 84939.478 ops/s
# Warmup Iteration  17: 102281.116 ops/s
# Warmup Iteration  18: 105099.642 ops/s
# Warmup Iteration  19: 101206.314 ops/s
# Warmup Iteration  20: 97495.056 ops/s
# Warmup Iteration  21: 99845.339 ops/s
# Warmup Iteration  22: 95380.855 ops/s
# Warmup Iteration  23: 105256.101 ops/s
# Warmup Iteration  24: 104250.690 ops/s
# Warmup Iteration  25: 104779.767 ops/s
# Warmup Iteration  26: 105947.102 ops/s
# Warmup Iteration  27: 101707.321 ops/s
# Warmup Iteration  28: 105920.313 ops/s
# Warmup Iteration  29: 90799.391 ops/s
# Warmup Iteration  30: 90874.295 ops/s
Iteration   1: 105342.069 ops/s
Iteration   2: 103091.408 ops/s
Iteration   3: 105501.201 ops/s
Iteration   4: 101927.841 ops/s
Iteration   5: 106224.553 ops/s
Iteration   6: 107486.742 ops/s
Iteration   7: 99715.774 ops/s
Iteration   8: 105281.075 ops/s
Iteration   9: 109157.610 ops/s
Iteration  10: 103605.017 ops/s
Iteration  11: 106052.334 ops/s
Iteration  12: 104071.289 ops/s
Iteration  13: 105420.177 ops/s
Iteration  14: 106618.984 ops/s
Iteration  15: 105440.398 ops/s
Iteration  16: 99911.368 ops/s
Iteration  17: 107511.905 ops/s
Iteration  18: 103642.806 ops/s
Iteration  19: 103958.037 ops/s
Iteration  20: 106738.760 ops/s
Iteration  21: 100305.488 ops/s
Iteration  22: 108379.582 ops/s
Iteration  23: 100395.116 ops/s
Iteration  24: 107815.940 ops/s
Iteration  25: 100660.685 ops/s
Iteration  26: 107269.840 ops/s
Iteration  27: 107191.685 ops/s
Iteration  28: 102038.289 ops/s
Iteration  29: 104828.581 ops/s
Iteration  30: 106200.567 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_393._Benchmark.benchmark_Cluster_393":
  104726.171 ±(99.9%) 1801.537 ops/s [Average]
  (min, avg, max) = (99715.774, 104726.171, 109157.610), stdev = 2696.456
  CI (99.9%): [102924.634, 106527.708] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_393._Benchmark.benchmark_Cluster_393  thrpt   30  104726.171 ± 1801.537  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_394._Benchmark.benchmark_Cluster_394$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_394._Benchmark.benchmark_Cluster_394

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7697.969 ops/s
# Warmup Iteration   2: 25126.989 ops/s
# Warmup Iteration   3: 27759.181 ops/s
# Warmup Iteration   4: 42717.505 ops/s
# Warmup Iteration   5: 65512.910 ops/s
# Warmup Iteration   6: 121090.183 ops/s
# Warmup Iteration   7: 137020.700 ops/s
# Warmup Iteration   8: 140902.209 ops/s
# Warmup Iteration   9: 135688.225 ops/s
# Warmup Iteration  10: 135505.943 ops/s
# Warmup Iteration  11: 138164.918 ops/s
# Warmup Iteration  12: 140427.866 ops/s
# Warmup Iteration  13: 137286.482 ops/s
# Warmup Iteration  14: 141071.673 ops/s
# Warmup Iteration  15: 143798.552 ops/s
# Warmup Iteration  16: 140830.144 ops/s
# Warmup Iteration  17: 135265.610 ops/s
# Warmup Iteration  18: 138259.288 ops/s
# Warmup Iteration  19: 145422.929 ops/s
# Warmup Iteration  20: 132272.213 ops/s
# Warmup Iteration  21: 145254.525 ops/s
# Warmup Iteration  22: 137547.541 ops/s
# Warmup Iteration  23: 135472.475 ops/s
# Warmup Iteration  24: 140042.510 ops/s
# Warmup Iteration  25: 142845.815 ops/s
# Warmup Iteration  26: 137862.056 ops/s
# Warmup Iteration  27: 137384.230 ops/s
# Warmup Iteration  28: 143213.878 ops/s
# Warmup Iteration  29: 135296.964 ops/s
# Warmup Iteration  30: 138780.414 ops/s
Iteration   1: 135197.804 ops/s
Iteration   2: 134839.233 ops/s
Iteration   3: 142540.157 ops/s
Iteration   4: 133011.091 ops/s
Iteration   5: 140748.464 ops/s
Iteration   6: 134719.981 ops/s
Iteration   7: 138198.899 ops/s
Iteration   8: 137647.931 ops/s
Iteration   9: 136962.228 ops/s
Iteration  10: 140710.828 ops/s
Iteration  11: 136286.523 ops/s
Iteration  12: 143084.379 ops/s
Iteration  13: 136402.422 ops/s
Iteration  14: 136466.514 ops/s
Iteration  15: 142688.171 ops/s
Iteration  16: 136096.197 ops/s
Iteration  17: 140555.678 ops/s
Iteration  18: 136024.174 ops/s
Iteration  19: 144819.191 ops/s
Iteration  20: 140784.213 ops/s
Iteration  21: 135082.365 ops/s
Iteration  22: 143210.247 ops/s
Iteration  23: 134950.710 ops/s
Iteration  24: 137074.833 ops/s
Iteration  25: 139597.558 ops/s
Iteration  26: 132560.888 ops/s
Iteration  27: 139182.830 ops/s
Iteration  28: 131872.668 ops/s
Iteration  29: 137104.343 ops/s
Iteration  30: 142268.363 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_394._Benchmark.benchmark_Cluster_394":
  138022.963 ±(99.9%) 2321.475 ops/s [Average]
  (min, avg, max) = (131872.668, 138022.963, 144819.191), stdev = 3474.674
  CI (99.9%): [135701.488, 140344.437] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_394._Benchmark.benchmark_Cluster_394  thrpt   30  138022.963 ± 2321.475  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_395._Benchmark.benchmark_Cluster_395$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_395._Benchmark.benchmark_Cluster_395

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2330.055 ops/s
# Warmup Iteration   2: 19148.980 ops/s
# Warmup Iteration   3: 33194.741 ops/s
# Warmup Iteration   4: 53276.455 ops/s
# Warmup Iteration   5: 44477.812 ops/s
# Warmup Iteration   6: 82704.156 ops/s
# Warmup Iteration   7: 86006.938 ops/s
# Warmup Iteration   8: 80647.260 ops/s
# Warmup Iteration   9: 76215.423 ops/s
# Warmup Iteration  10: 79680.102 ops/s
# Warmup Iteration  11: 83549.283 ops/s
# Warmup Iteration  12: 84761.126 ops/s
# Warmup Iteration  13: 82367.724 ops/s
# Warmup Iteration  14: 86573.800 ops/s
# Warmup Iteration  15: 83487.923 ops/s
# Warmup Iteration  16: 86283.456 ops/s
# Warmup Iteration  17: 87397.705 ops/s
# Warmup Iteration  18: 84987.908 ops/s
# Warmup Iteration  19: 90122.118 ops/s
# Warmup Iteration  20: 84729.874 ops/s
# Warmup Iteration  21: 88767.042 ops/s
# Warmup Iteration  22: 85962.137 ops/s
# Warmup Iteration  23: 88702.631 ops/s
# Warmup Iteration  24: 69713.071 ops/s
# Warmup Iteration  25: 85598.954 ops/s
# Warmup Iteration  26: 84499.546 ops/s
# Warmup Iteration  27: 86292.059 ops/s
# Warmup Iteration  28: 89785.353 ops/s
# Warmup Iteration  29: 84155.844 ops/s
# Warmup Iteration  30: 87801.760 ops/s
Iteration   1: 85984.819 ops/s
Iteration   2: 85959.654 ops/s
Iteration   3: 88590.713 ops/s
Iteration   4: 84961.978 ops/s
Iteration   5: 89557.177 ops/s
Iteration   6: 88547.568 ops/s
Iteration   7: 85183.533 ops/s
Iteration   8: 89448.411 ops/s
Iteration   9: 85320.185 ops/s
Iteration  10: 87960.541 ops/s
Iteration  11: 84333.668 ops/s
Iteration  12: 86489.574 ops/s
Iteration  13: 87293.022 ops/s
Iteration  14: 85502.679 ops/s
Iteration  15: 88422.094 ops/s
Iteration  16: 82063.892 ops/s
Iteration  17: 89617.690 ops/s
Iteration  18: 90594.138 ops/s
Iteration  19: 85456.978 ops/s
Iteration  20: 90016.665 ops/s
Iteration  21: 85853.113 ops/s
Iteration  22: 88114.708 ops/s
Iteration  23: 89193.640 ops/s
Iteration  24: 85146.864 ops/s
Iteration  25: 85608.448 ops/s
Iteration  26: 90878.910 ops/s
Iteration  27: 84062.992 ops/s
Iteration  28: 88223.360 ops/s
Iteration  29: 85454.622 ops/s
Iteration  30: 86770.510 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_395._Benchmark.benchmark_Cluster_395":
  87020.405 ±(99.9%) 1459.780 ops/s [Average]
  (min, avg, max) = (82063.892, 87020.405, 90878.910), stdev = 2184.929
  CI (99.9%): [85560.625, 88480.184] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_395._Benchmark.benchmark_Cluster_395  thrpt   30  87020.405 ± 1459.780  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_396._Benchmark.benchmark_Cluster_396$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_396._Benchmark.benchmark_Cluster_396

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3632.770 ops/s
# Warmup Iteration   2: 43958.925 ops/s
# Warmup Iteration   3: 55889.299 ops/s
# Warmup Iteration   4: 114299.577 ops/s
# Warmup Iteration   5: 122125.615 ops/s
# Warmup Iteration   6: 126302.731 ops/s
# Warmup Iteration   7: 120458.899 ops/s
# Warmup Iteration   8: 122408.880 ops/s
# Warmup Iteration   9: 130438.846 ops/s
# Warmup Iteration  10: 123392.872 ops/s
# Warmup Iteration  11: 129581.593 ops/s
# Warmup Iteration  12: 124380.153 ops/s
# Warmup Iteration  13: 125763.863 ops/s
# Warmup Iteration  14: 127300.709 ops/s
# Warmup Iteration  15: 124920.537 ops/s
# Warmup Iteration  16: 133889.741 ops/s
# Warmup Iteration  17: 131101.021 ops/s
# Warmup Iteration  18: 131131.327 ops/s
# Warmup Iteration  19: 132140.348 ops/s
# Warmup Iteration  20: 131804.045 ops/s
# Warmup Iteration  21: 137631.842 ops/s
# Warmup Iteration  22: 137259.257 ops/s
# Warmup Iteration  23: 127495.121 ops/s
# Warmup Iteration  24: 129399.399 ops/s
# Warmup Iteration  25: 137370.645 ops/s
# Warmup Iteration  26: 132930.234 ops/s
# Warmup Iteration  27: 134057.136 ops/s
# Warmup Iteration  28: 130450.262 ops/s
# Warmup Iteration  29: 137377.346 ops/s
# Warmup Iteration  30: 126953.475 ops/s
Iteration   1: 124474.793 ops/s
Iteration   2: 135865.964 ops/s
Iteration   3: 130733.552 ops/s
Iteration   4: 135675.037 ops/s
Iteration   5: 136508.524 ops/s
Iteration   6: 128642.935 ops/s
Iteration   7: 137273.628 ops/s
Iteration   8: 131512.664 ops/s
Iteration   9: 137885.695 ops/s
Iteration  10: 130404.474 ops/s
Iteration  11: 134564.663 ops/s
Iteration  12: 137441.122 ops/s
Iteration  13: 129323.638 ops/s
Iteration  14: 135375.059 ops/s
Iteration  15: 130297.254 ops/s
Iteration  16: 139432.190 ops/s
Iteration  17: 130547.132 ops/s
Iteration  18: 133359.370 ops/s
Iteration  19: 131747.978 ops/s
Iteration  20: 138522.889 ops/s
Iteration  21: 129365.868 ops/s
Iteration  22: 132795.645 ops/s
Iteration  23: 136148.819 ops/s
Iteration  24: 131784.995 ops/s
Iteration  25: 136638.973 ops/s
Iteration  26: 126298.920 ops/s
Iteration  27: 136115.644 ops/s
Iteration  28: 132816.149 ops/s
Iteration  29: 132506.938 ops/s
Iteration  30: 135121.028 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_396._Benchmark.benchmark_Cluster_396":
  133306.051 ±(99.9%) 2475.854 ops/s [Average]
  (min, avg, max) = (124474.793, 133306.051, 139432.190), stdev = 3705.743
  CI (99.9%): [130830.197, 135781.906] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_396._Benchmark.benchmark_Cluster_396  thrpt   30  133306.051 ± 2475.854  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_397._Benchmark.benchmark_Cluster_397$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_397._Benchmark.benchmark_Cluster_397

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14604.628 ops/s
# Warmup Iteration   2: 32214.620 ops/s
# Warmup Iteration   3: 68003.051 ops/s
# Warmup Iteration   4: 107205.935 ops/s
# Warmup Iteration   5: 120589.191 ops/s
# Warmup Iteration   6: 102252.566 ops/s
# Warmup Iteration   7: 119613.184 ops/s
# Warmup Iteration   8: 125990.168 ops/s
# Warmup Iteration   9: 114228.916 ops/s
# Warmup Iteration  10: 121890.243 ops/s
# Warmup Iteration  11: 118969.065 ops/s
# Warmup Iteration  12: 121820.638 ops/s
# Warmup Iteration  13: 125445.967 ops/s
# Warmup Iteration  14: 119830.764 ops/s
# Warmup Iteration  15: 123935.696 ops/s
# Warmup Iteration  16: 117484.599 ops/s
# Warmup Iteration  17: 126887.482 ops/s
# Warmup Iteration  18: 103683.872 ops/s
# Warmup Iteration  19: 124439.794 ops/s
# Warmup Iteration  20: 133360.458 ops/s
# Warmup Iteration  21: 122119.945 ops/s
# Warmup Iteration  22: 123876.377 ops/s
# Warmup Iteration  23: 131324.171 ops/s
# Warmup Iteration  24: 122394.069 ops/s
# Warmup Iteration  25: 121906.228 ops/s
# Warmup Iteration  26: 130188.208 ops/s
# Warmup Iteration  27: 128257.311 ops/s
# Warmup Iteration  28: 123153.601 ops/s
# Warmup Iteration  29: 128767.820 ops/s
# Warmup Iteration  30: 124777.335 ops/s
Iteration   1: 129087.721 ops/s
Iteration   2: 130753.338 ops/s
Iteration   3: 124166.355 ops/s
Iteration   4: 125958.956 ops/s
Iteration   5: 122919.011 ops/s
Iteration   6: 126690.166 ops/s
Iteration   7: 130771.471 ops/s
Iteration   8: 120985.225 ops/s
Iteration   9: 127965.148 ops/s
Iteration  10: 124902.885 ops/s
Iteration  11: 127868.191 ops/s
Iteration  12: 124029.650 ops/s
Iteration  13: 127023.762 ops/s
Iteration  14: 128098.747 ops/s
Iteration  15: 124775.080 ops/s
Iteration  16: 125724.729 ops/s
Iteration  17: 129125.741 ops/s
Iteration  18: 122509.458 ops/s
Iteration  19: 127592.439 ops/s
Iteration  20: 124173.594 ops/s
Iteration  21: 130743.547 ops/s
Iteration  22: 121602.541 ops/s
Iteration  23: 130806.193 ops/s
Iteration  24: 122345.640 ops/s
Iteration  25: 124007.982 ops/s
Iteration  26: 127741.426 ops/s
Iteration  27: 123647.011 ops/s
Iteration  28: 122502.790 ops/s
Iteration  29: 120606.140 ops/s
Iteration  30: 126093.071 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_397._Benchmark.benchmark_Cluster_397":
  125840.600 ±(99.9%) 2046.400 ops/s [Average]
  (min, avg, max) = (120606.140, 125840.600, 130806.193), stdev = 3062.955
  CI (99.9%): [123794.200, 127887.000] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_397._Benchmark.benchmark_Cluster_397  thrpt   30  125840.600 ± 2046.400  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_398._Benchmark.benchmark_Cluster_398$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_398._Benchmark.benchmark_Cluster_398

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10042.570 ops/s
# Warmup Iteration   2: 61174.430 ops/s
# Warmup Iteration   3: 117891.335 ops/s
# Warmup Iteration   4: 121454.633 ops/s
# Warmup Iteration   5: 133766.831 ops/s
# Warmup Iteration   6: 125524.395 ops/s
# Warmup Iteration   7: 118195.378 ops/s
# Warmup Iteration   8: 132023.554 ops/s
# Warmup Iteration   9: 124630.471 ops/s
# Warmup Iteration  10: 120450.786 ops/s
# Warmup Iteration  11: 119914.129 ops/s
# Warmup Iteration  12: 122735.516 ops/s
# Warmup Iteration  13: 130180.819 ops/s
# Warmup Iteration  14: 131504.739 ops/s
# Warmup Iteration  15: 126856.060 ops/s
# Warmup Iteration  16: 129418.894 ops/s
# Warmup Iteration  17: 132042.773 ops/s
# Warmup Iteration  18: 134449.073 ops/s
# Warmup Iteration  19: 134142.880 ops/s
# Warmup Iteration  20: 139349.637 ops/s
# Warmup Iteration  21: 132368.029 ops/s
# Warmup Iteration  22: 141275.166 ops/s
# Warmup Iteration  23: 135632.884 ops/s
# Warmup Iteration  24: 132967.604 ops/s
# Warmup Iteration  25: 135260.062 ops/s
# Warmup Iteration  26: 130789.523 ops/s
# Warmup Iteration  27: 135730.899 ops/s
# Warmup Iteration  28: 137615.079 ops/s
# Warmup Iteration  29: 130316.806 ops/s
# Warmup Iteration  30: 134634.480 ops/s
Iteration   1: 132569.519 ops/s
Iteration   2: 135181.010 ops/s
Iteration   3: 131771.448 ops/s
Iteration   4: 134102.253 ops/s
Iteration   5: 136557.068 ops/s
Iteration   6: 129757.153 ops/s
Iteration   7: 138780.867 ops/s
Iteration   8: 131823.916 ops/s
Iteration   9: 130721.626 ops/s
Iteration  10: 141443.282 ops/s
Iteration  11: 129672.305 ops/s
Iteration  12: 136321.544 ops/s
Iteration  13: 133596.449 ops/s
Iteration  14: 136670.099 ops/s
Iteration  15: 137963.994 ops/s
Iteration  16: 128661.628 ops/s
Iteration  17: 132982.482 ops/s
Iteration  18: 138354.690 ops/s
Iteration  19: 129443.286 ops/s
Iteration  20: 136631.006 ops/s
Iteration  21: 135793.118 ops/s
Iteration  22: 137269.454 ops/s
Iteration  23: 134919.790 ops/s
Iteration  24: 134110.253 ops/s
Iteration  25: 135384.413 ops/s
Iteration  26: 129111.329 ops/s
Iteration  27: 139041.774 ops/s
Iteration  28: 130017.935 ops/s
Iteration  29: 133881.741 ops/s
Iteration  30: 133921.107 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_398._Benchmark.benchmark_Cluster_398":
  134215.218 ±(99.9%) 2255.443 ops/s [Average]
  (min, avg, max) = (128661.628, 134215.218, 141443.282), stdev = 3375.841
  CI (99.9%): [131959.775, 136470.661] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_398._Benchmark.benchmark_Cluster_398  thrpt   30  134215.218 ± 2255.443  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_399._Benchmark.benchmark_Cluster_399$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_399._Benchmark.benchmark_Cluster_399

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6259.864 ops/s
# Warmup Iteration   2: 22471.869 ops/s
# Warmup Iteration   3: 64703.367 ops/s
# Warmup Iteration   4: 87447.170 ops/s
# Warmup Iteration   5: 95053.877 ops/s
# Warmup Iteration   6: 87931.161 ops/s
# Warmup Iteration   7: 84726.121 ops/s
# Warmup Iteration   8: 100765.286 ops/s
# Warmup Iteration   9: 90726.126 ops/s
# Warmup Iteration  10: 97846.979 ops/s
# Warmup Iteration  11: 98406.274 ops/s
# Warmup Iteration  12: 97022.674 ops/s
# Warmup Iteration  13: 75937.225 ops/s
# Warmup Iteration  14: 97696.091 ops/s
# Warmup Iteration  15: 95971.544 ops/s
# Warmup Iteration  16: 97770.973 ops/s
# Warmup Iteration  17: 102780.926 ops/s
# Warmup Iteration  18: 104649.191 ops/s
# Warmup Iteration  19: 101603.806 ops/s
# Warmup Iteration  20: 104536.060 ops/s
# Warmup Iteration  21: 105441.251 ops/s
# Warmup Iteration  22: 102186.372 ops/s
# Warmup Iteration  23: 105956.500 ops/s
# Warmup Iteration  24: 98005.876 ops/s
# Warmup Iteration  25: 102611.285 ops/s
# Warmup Iteration  26: 102465.609 ops/s
# Warmup Iteration  27: 104849.988 ops/s
# Warmup Iteration  28: 105403.493 ops/s
# Warmup Iteration  29: 98855.974 ops/s
# Warmup Iteration  30: 104425.888 ops/s
Iteration   1: 107218.279 ops/s
Iteration   2: 100912.483 ops/s
Iteration   3: 105721.885 ops/s
Iteration   4: 103466.639 ops/s
Iteration   5: 106706.398 ops/s
Iteration   6: 102148.093 ops/s
Iteration   7: 103717.723 ops/s
Iteration   8: 107885.275 ops/s
Iteration   9: 105824.821 ops/s
Iteration  10: 102038.674 ops/s
Iteration  11: 106488.338 ops/s
Iteration  12: 102881.332 ops/s
Iteration  13: 102829.685 ops/s
Iteration  14: 103339.054 ops/s
Iteration  15: 106163.969 ops/s
Iteration  16: 98271.876 ops/s
Iteration  17: 105961.531 ops/s
Iteration  18: 102303.261 ops/s
Iteration  19: 103594.024 ops/s
Iteration  20: 102602.844 ops/s
Iteration  21: 101888.022 ops/s
Iteration  22: 105993.533 ops/s
Iteration  23: 102481.620 ops/s
Iteration  24: 106102.807 ops/s
Iteration  25: 104533.265 ops/s
Iteration  26: 104184.619 ops/s
Iteration  27: 105903.407 ops/s
Iteration  28: 105137.442 ops/s
Iteration  29: 104723.829 ops/s
Iteration  30: 103283.163 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_399._Benchmark.benchmark_Cluster_399":
  104143.596 ±(99.9%) 1428.903 ops/s [Average]
  (min, avg, max) = (98271.876, 104143.596, 107885.275), stdev = 2138.715
  CI (99.9%): [102714.693, 105572.500] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_399._Benchmark.benchmark_Cluster_399  thrpt   30  104143.596 ± 1428.903  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_4._Benchmark.benchmark_Cluster_4$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_4._Benchmark.benchmark_Cluster_4

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14391.443 ops/s
# Warmup Iteration   2: 43089.379 ops/s
# Warmup Iteration   3: 67968.803 ops/s
# Warmup Iteration   4: 134339.381 ops/s
# Warmup Iteration   5: 144834.540 ops/s
# Warmup Iteration   6: 139367.622 ops/s
# Warmup Iteration   7: 158369.313 ops/s
# Warmup Iteration   8: 148815.917 ops/s
# Warmup Iteration   9: 155029.230 ops/s
# Warmup Iteration  10: 150800.802 ops/s
# Warmup Iteration  11: 153427.012 ops/s
# Warmup Iteration  12: 148818.295 ops/s
# Warmup Iteration  13: 153639.433 ops/s
# Warmup Iteration  14: 156476.342 ops/s
# Warmup Iteration  15: 154349.255 ops/s
# Warmup Iteration  16: 153424.041 ops/s
# Warmup Iteration  17: 160279.535 ops/s
# Warmup Iteration  18: 166116.357 ops/s
# Warmup Iteration  19: 164770.213 ops/s
# Warmup Iteration  20: 166918.748 ops/s
# Warmup Iteration  21: 165560.696 ops/s
# Warmup Iteration  22: 161707.976 ops/s
# Warmup Iteration  23: 166364.285 ops/s
# Warmup Iteration  24: 162266.984 ops/s
# Warmup Iteration  25: 163440.629 ops/s
# Warmup Iteration  26: 166247.595 ops/s
# Warmup Iteration  27: 169195.828 ops/s
# Warmup Iteration  28: 158966.625 ops/s
# Warmup Iteration  29: 162944.108 ops/s
# Warmup Iteration  30: 165984.711 ops/s
Iteration   1: 162943.337 ops/s
Iteration   2: 165196.301 ops/s
Iteration   3: 171027.633 ops/s
Iteration   4: 159484.122 ops/s
Iteration   5: 169932.469 ops/s
Iteration   6: 161451.128 ops/s
Iteration   7: 169371.020 ops/s
Iteration   8: 161797.928 ops/s
Iteration   9: 163021.649 ops/s
Iteration  10: 166031.252 ops/s
Iteration  11: 168617.492 ops/s
Iteration  12: 164419.632 ops/s
Iteration  13: 167879.097 ops/s
Iteration  14: 167924.236 ops/s
Iteration  15: 157247.025 ops/s
Iteration  16: 167830.424 ops/s
Iteration  17: 164778.796 ops/s
Iteration  18: 170738.487 ops/s
Iteration  19: 161558.600 ops/s
Iteration  20: 166025.781 ops/s
Iteration  21: 163388.803 ops/s
Iteration  22: 161461.906 ops/s
Iteration  23: 165325.750 ops/s
Iteration  24: 162850.857 ops/s
Iteration  25: 162494.739 ops/s
Iteration  26: 169986.096 ops/s
Iteration  27: 165101.197 ops/s
Iteration  28: 159831.043 ops/s
Iteration  29: 167770.298 ops/s
Iteration  30: 164180.117 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_4._Benchmark.benchmark_Cluster_4":
  164988.907 ±(99.9%) 2394.790 ops/s [Average]
  (min, avg, max) = (157247.025, 164988.907, 171027.633), stdev = 3584.409
  CI (99.9%): [162594.117, 167383.697] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score      Error  Units
Cluster_4._Benchmark.benchmark_Cluster_4  thrpt   30  164988.907 ± 2394.790  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_40._Benchmark.benchmark_Cluster_40$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_40._Benchmark.benchmark_Cluster_40

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1149.801 ops/s
# Warmup Iteration   2: 11259.210 ops/s
# Warmup Iteration   3: 20307.843 ops/s
# Warmup Iteration   4: 25747.286 ops/s
# Warmup Iteration   5: 35637.850 ops/s
# Warmup Iteration   6: 37552.443 ops/s
# Warmup Iteration   7: 38655.265 ops/s
# Warmup Iteration   8: 86879.399 ops/s
# Warmup Iteration   9: 84348.843 ops/s
# Warmup Iteration  10: 85146.789 ops/s
# Warmup Iteration  11: 85763.004 ops/s
# Warmup Iteration  12: 79878.911 ops/s
# Warmup Iteration  13: 82132.579 ops/s
# Warmup Iteration  14: 88920.943 ops/s
# Warmup Iteration  15: 84173.496 ops/s
# Warmup Iteration  16: 88536.152 ops/s
# Warmup Iteration  17: 86434.108 ops/s
# Warmup Iteration  18: 85217.766 ops/s
# Warmup Iteration  19: 89681.744 ops/s
# Warmup Iteration  20: 83788.565 ops/s
# Warmup Iteration  21: 90813.202 ops/s
# Warmup Iteration  22: 88777.326 ops/s
# Warmup Iteration  23: 88948.949 ops/s
# Warmup Iteration  24: 87471.044 ops/s
# Warmup Iteration  25: 90646.672 ops/s
# Warmup Iteration  26: 84351.749 ops/s
# Warmup Iteration  27: 88305.853 ops/s
# Warmup Iteration  28: 87718.802 ops/s
# Warmup Iteration  29: 87150.764 ops/s
# Warmup Iteration  30: 88853.188 ops/s
Iteration   1: 86181.339 ops/s
Iteration   2: 87782.131 ops/s
Iteration   3: 87885.515 ops/s
Iteration   4: 84920.627 ops/s
Iteration   5: 84935.895 ops/s
Iteration   6: 83983.504 ops/s
Iteration   7: 91066.283 ops/s
Iteration   8: 85196.365 ops/s
Iteration   9: 90446.266 ops/s
Iteration  10: 86740.889 ops/s
Iteration  11: 89527.837 ops/s
Iteration  12: 87312.373 ops/s
Iteration  13: 87999.306 ops/s
Iteration  14: 88849.448 ops/s
Iteration  15: 85530.309 ops/s
Iteration  16: 90728.884 ops/s
Iteration  17: 90177.283 ops/s
Iteration  18: 83951.364 ops/s
Iteration  19: 90696.395 ops/s
Iteration  20: 87340.699 ops/s
Iteration  21: 89052.006 ops/s
Iteration  22: 85829.209 ops/s
Iteration  23: 90873.701 ops/s
Iteration  24: 85569.426 ops/s
Iteration  25: 88543.581 ops/s
Iteration  26: 91917.339 ops/s
Iteration  27: 85851.582 ops/s
Iteration  28: 88546.069 ops/s
Iteration  29: 85801.217 ops/s
Iteration  30: 91324.741 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_40._Benchmark.benchmark_Cluster_40":
  87818.719 ±(99.9%) 1591.515 ops/s [Average]
  (min, avg, max) = (83951.364, 87818.719, 91917.339), stdev = 2382.105
  CI (99.9%): [86227.205, 89410.234] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_40._Benchmark.benchmark_Cluster_40  thrpt   30  87818.719 ± 1591.515  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_400._Benchmark.benchmark_Cluster_400$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_400._Benchmark.benchmark_Cluster_400

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4050.952 ops/s
# Warmup Iteration   2: 19219.012 ops/s
# Warmup Iteration   3: 26119.180 ops/s
# Warmup Iteration   4: 39851.281 ops/s
# Warmup Iteration   5: 41693.997 ops/s
# Warmup Iteration   6: 48560.408 ops/s
# Warmup Iteration   7: 46999.615 ops/s
# Warmup Iteration   8: 50357.401 ops/s
# Warmup Iteration   9: 54207.258 ops/s
# Warmup Iteration  10: 45466.673 ops/s
# Warmup Iteration  11: 44009.046 ops/s
# Warmup Iteration  12: 47719.119 ops/s
# Warmup Iteration  13: 50449.066 ops/s
# Warmup Iteration  14: 45896.665 ops/s
# Warmup Iteration  15: 50735.294 ops/s
# Warmup Iteration  16: 50842.016 ops/s
# Warmup Iteration  17: 50557.751 ops/s
# Warmup Iteration  18: 50421.002 ops/s
# Warmup Iteration  19: 50142.777 ops/s
# Warmup Iteration  20: 53445.911 ops/s
# Warmup Iteration  21: 53085.306 ops/s
# Warmup Iteration  22: 50198.386 ops/s
# Warmup Iteration  23: 55490.093 ops/s
# Warmup Iteration  24: 57257.386 ops/s
# Warmup Iteration  25: 52870.698 ops/s
# Warmup Iteration  26: 49834.892 ops/s
# Warmup Iteration  27: 53328.150 ops/s
# Warmup Iteration  28: 55304.557 ops/s
# Warmup Iteration  29: 52650.961 ops/s
# Warmup Iteration  30: 54863.400 ops/s
Iteration   1: 51263.318 ops/s
Iteration   2: 51784.784 ops/s
Iteration   3: 54090.657 ops/s
Iteration   4: 55760.048 ops/s
Iteration   5: 53372.805 ops/s
Iteration   6: 54295.773 ops/s
Iteration   7: 55813.256 ops/s
Iteration   8: 53023.286 ops/s
Iteration   9: 54693.219 ops/s
Iteration  10: 57585.484 ops/s
Iteration  11: 50370.538 ops/s
Iteration  12: 53962.176 ops/s
Iteration  13: 49974.455 ops/s
Iteration  14: 44840.877 ops/s
Iteration  15: 53450.548 ops/s
Iteration  16: 56867.773 ops/s
Iteration  17: 50576.637 ops/s
Iteration  18: 55178.809 ops/s
Iteration  19: 55511.040 ops/s
Iteration  20: 49237.286 ops/s
Iteration  21: 53929.262 ops/s
Iteration  22: 52326.664 ops/s
Iteration  23: 55497.064 ops/s
Iteration  24: 50253.347 ops/s
Iteration  25: 49614.054 ops/s
Iteration  26: 51414.869 ops/s
Iteration  27: 52294.709 ops/s
Iteration  28: 48440.181 ops/s
Iteration  29: 46040.081 ops/s
Iteration  30: 51561.047 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_400._Benchmark.benchmark_Cluster_400":
  52434.135 ±(99.9%) 2031.061 ops/s [Average]
  (min, avg, max) = (44840.877, 52434.135, 57585.484), stdev = 3039.996
  CI (99.9%): [50403.074, 54465.196] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_400._Benchmark.benchmark_Cluster_400  thrpt   30  52434.135 ± 2031.061  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_401._Benchmark.benchmark_Cluster_401$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_401._Benchmark.benchmark_Cluster_401

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.693 ops/s
# Warmup Iteration   2: 15115.288 ops/s
# Warmup Iteration   3: 25617.165 ops/s
# Warmup Iteration   4: 33750.412 ops/s
# Warmup Iteration   5: 26019.980 ops/s
# Warmup Iteration   6: 39984.684 ops/s
# Warmup Iteration   7: 48347.730 ops/s
# Warmup Iteration   8: 26010.167 ops/s
# Warmup Iteration   9: 15865.195 ops/s
# Warmup Iteration  10: 15528.738 ops/s
# Warmup Iteration  11: 12507.311 ops/s
# Warmup Iteration  12: 15022.744 ops/s
# Warmup Iteration  13: 9085.627 ops/s
# Warmup Iteration  14: 6433.982 ops/s
# Warmup Iteration  15: 6026.854 ops/s
# Warmup Iteration  16: 6350.704 ops/s
# Warmup Iteration  17: 5804.036 ops/s
# Warmup Iteration  18: 8203.684 ops/s
# Warmup Iteration  19: 7466.300 ops/s
# Warmup Iteration  20: 5918.298 ops/s
# Warmup Iteration  21: 5651.828 ops/s
# Warmup Iteration  22: 6069.441 ops/s
# Warmup Iteration  23: 6454.050 ops/s
# Warmup Iteration  24: 5934.778 ops/s
# Warmup Iteration  25: 6358.868 ops/s
# Warmup Iteration  26: 5740.723 ops/s
# Warmup Iteration  27: 6528.018 ops/s
# Warmup Iteration  28: 6192.649 ops/s
# Warmup Iteration  29: 5300.813 ops/s
# Warmup Iteration  30: 889.629 ops/s
Iteration   1: 5209.386 ops/s
Iteration   2: 5707.031 ops/s
Iteration   3: 5073.087 ops/s
Iteration   4: 5398.137 ops/s
Iteration   5: 5276.801 ops/s
Iteration   6: 5342.797 ops/s
Iteration   7: 5675.472 ops/s
Iteration   8: 5452.310 ops/s
Iteration   9: 5294.142 ops/s
Iteration  10: 6415.727 ops/s
Iteration  11: 4447.042 ops/s
Iteration  12: 5480.608 ops/s
Iteration  13: 4686.389 ops/s
Iteration  14: 5549.835 ops/s
Iteration  15: 4641.401 ops/s
Iteration  16: 4419.078 ops/s
Iteration  17: 4656.524 ops/s
Iteration  18: 3973.765 ops/s
Iteration  19: 5123.828 ops/s
Iteration  20: 5816.975 ops/s
Iteration  21: 5683.315 ops/s
Iteration  22: 4504.056 ops/s
Iteration  23: 5010.639 ops/s
Iteration  24: 5376.992 ops/s
Iteration  25: 5427.239 ops/s
Iteration  26: 5094.568 ops/s
Iteration  27: 6096.617 ops/s
Iteration  28: 4939.997 ops/s
Iteration  29: 4893.462 ops/s
Iteration  30: 5102.784 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_401._Benchmark.benchmark_Cluster_401":
  5192.333 ±(99.9%) 352.566 ops/s [Average]
  (min, avg, max) = (3973.765, 5192.333, 6415.727), stdev = 527.704
  CI (99.9%): [4839.768, 5544.899] (assumes normal distribution)


# Run complete. Total time: 00:01:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt     Score     Error  Units
Cluster_401._Benchmark.benchmark_Cluster_401  thrpt   30  5192.333 ± 352.566  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_402._Benchmark.benchmark_Cluster_402$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_402._Benchmark.benchmark_Cluster_402

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 263749.432 ops/s
# Warmup Iteration   2: 315200.764 ops/s
# Warmup Iteration   3: 380396.141 ops/s
# Warmup Iteration   4: 368494.903 ops/s
# Warmup Iteration   5: 387106.976 ops/s
# Warmup Iteration   6: 360170.796 ops/s
# Warmup Iteration   7: 371013.960 ops/s
# Warmup Iteration   8: 372480.695 ops/s
# Warmup Iteration   9: 364089.908 ops/s
# Warmup Iteration  10: 380683.413 ops/s
# Warmup Iteration  11: 365371.438 ops/s
# Warmup Iteration  12: 346857.525 ops/s
# Warmup Iteration  13: 382861.717 ops/s
# Warmup Iteration  14: 382634.056 ops/s
# Warmup Iteration  15: 358837.732 ops/s
# Warmup Iteration  16: 377435.781 ops/s
# Warmup Iteration  17: 395203.008 ops/s
# Warmup Iteration  18: 405386.952 ops/s
# Warmup Iteration  19: 393335.996 ops/s
# Warmup Iteration  20: 400302.692 ops/s
# Warmup Iteration  21: 398911.585 ops/s
# Warmup Iteration  22: 394889.565 ops/s
# Warmup Iteration  23: 406810.156 ops/s
# Warmup Iteration  24: 395923.564 ops/s
# Warmup Iteration  25: 383564.330 ops/s
# Warmup Iteration  26: 400873.916 ops/s
# Warmup Iteration  27: 395383.710 ops/s
# Warmup Iteration  28: 400653.404 ops/s
# Warmup Iteration  29: 393646.356 ops/s
# Warmup Iteration  30: 386896.946 ops/s
Iteration   1: 406898.485 ops/s
Iteration   2: 405569.133 ops/s
Iteration   3: 370275.406 ops/s
Iteration   4: 400805.367 ops/s
Iteration   5: 406698.040 ops/s
Iteration   6: 379226.304 ops/s
Iteration   7: 404746.214 ops/s
Iteration   8: 385521.266 ops/s
Iteration   9: 409912.412 ops/s
Iteration  10: 386651.096 ops/s
Iteration  11: 409471.510 ops/s
Iteration  12: 389384.335 ops/s
Iteration  13: 393987.092 ops/s
Iteration  14: 408212.508 ops/s
Iteration  15: 411917.827 ops/s
Iteration  16: 378602.164 ops/s
Iteration  17: 413536.255 ops/s
Iteration  18: 390086.444 ops/s
Iteration  19: 399493.769 ops/s
Iteration  20: 389993.062 ops/s
Iteration  21: 406029.114 ops/s
Iteration  22: 403639.796 ops/s
Iteration  23: 395841.270 ops/s
Iteration  24: 334044.427 ops/s
Iteration  25: 393857.386 ops/s
Iteration  26: 414541.468 ops/s
Iteration  27: 385527.117 ops/s
Iteration  28: 411496.863 ops/s
Iteration  29: 382967.084 ops/s
Iteration  30: 419207.954 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_402._Benchmark.benchmark_Cluster_402":
  396271.372 ±(99.9%) 11428.493 ops/s [Average]
  (min, avg, max) = (334044.427, 396271.372, 419207.954), stdev = 17105.632
  CI (99.9%): [384842.879, 407699.866] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score       Error  Units
Cluster_402._Benchmark.benchmark_Cluster_402  thrpt   30  396271.372 ± 11428.493  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_403._Benchmark.benchmark_Cluster_403$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_403._Benchmark.benchmark_Cluster_403

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9157.292 ops/s
# Warmup Iteration   2: 38269.889 ops/s
# Warmup Iteration   3: 56264.767 ops/s
# Warmup Iteration   4: 99846.907 ops/s
# Warmup Iteration   5: 96076.204 ops/s
# Warmup Iteration   6: 98201.417 ops/s
# Warmup Iteration   7: 110399.619 ops/s
# Warmup Iteration   8: 106623.337 ops/s
# Warmup Iteration   9: 105467.323 ops/s
# Warmup Iteration  10: 107078.990 ops/s
# Warmup Iteration  11: 102941.524 ops/s
# Warmup Iteration  12: 105923.091 ops/s
# Warmup Iteration  13: 107497.585 ops/s
# Warmup Iteration  14: 103987.339 ops/s
# Warmup Iteration  15: 104643.288 ops/s
# Warmup Iteration  16: 105226.929 ops/s
# Warmup Iteration  17: 114129.597 ops/s
# Warmup Iteration  18: 106025.292 ops/s
# Warmup Iteration  19: 103994.756 ops/s
# Warmup Iteration  20: 114762.609 ops/s
# Warmup Iteration  21: 108641.707 ops/s
# Warmup Iteration  22: 109552.685 ops/s
# Warmup Iteration  23: 113444.545 ops/s
# Warmup Iteration  24: 106288.563 ops/s
# Warmup Iteration  25: 112412.164 ops/s
# Warmup Iteration  26: 109838.257 ops/s
# Warmup Iteration  27: 109457.942 ops/s
# Warmup Iteration  28: 107619.259 ops/s
# Warmup Iteration  29: 111315.386 ops/s
# Warmup Iteration  30: 108697.746 ops/s
Iteration   1: 109767.583 ops/s
Iteration   2: 108457.595 ops/s
Iteration   3: 110229.694 ops/s
Iteration   4: 112238.195 ops/s
Iteration   5: 107432.741 ops/s
Iteration   6: 113605.138 ops/s
Iteration   7: 113132.475 ops/s
Iteration   8: 105790.856 ops/s
Iteration   9: 112916.634 ops/s
Iteration  10: 108639.919 ops/s
Iteration  11: 108780.883 ops/s
Iteration  12: 112252.015 ops/s
Iteration  13: 109134.001 ops/s
Iteration  14: 108120.471 ops/s
Iteration  15: 111675.334 ops/s
Iteration  16: 107988.253 ops/s
Iteration  17: 111353.006 ops/s
Iteration  18: 105223.721 ops/s
Iteration  19: 110612.813 ops/s
Iteration  20: 111251.191 ops/s
Iteration  21: 107661.031 ops/s
Iteration  22: 113198.669 ops/s
Iteration  23: 106470.961 ops/s
Iteration  24: 108862.173 ops/s
Iteration  25: 105546.456 ops/s
Iteration  26: 110851.619 ops/s
Iteration  27: 111740.192 ops/s
Iteration  28: 107001.390 ops/s
Iteration  29: 116601.830 ops/s
Iteration  30: 104019.118 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_403._Benchmark.benchmark_Cluster_403":
  109685.199 ±(99.9%) 1952.445 ops/s [Average]
  (min, avg, max) = (104019.118, 109685.199, 116601.830), stdev = 2922.329
  CI (99.9%): [107732.753, 111637.644] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_403._Benchmark.benchmark_Cluster_403  thrpt   30  109685.199 ± 1952.445  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_404._Benchmark.benchmark_Cluster_404$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_404._Benchmark.benchmark_Cluster_404

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 30789.079 ops/s
# Warmup Iteration   2: 133424.853 ops/s
# Warmup Iteration   3: 148834.888 ops/s
# Warmup Iteration   4: 152180.190 ops/s
# Warmup Iteration   5: 140392.858 ops/s
# Warmup Iteration   6: 166252.456 ops/s
# Warmup Iteration   7: 167317.421 ops/s
# Warmup Iteration   8: 154857.196 ops/s
# Warmup Iteration   9: 167062.539 ops/s
# Warmup Iteration  10: 167801.862 ops/s
# Warmup Iteration  11: 156220.933 ops/s
# Warmup Iteration  12: 168221.833 ops/s
# Warmup Iteration  13: 159304.561 ops/s
# Warmup Iteration  14: 162957.899 ops/s
# Warmup Iteration  15: 157261.529 ops/s
# Warmup Iteration  16: 163565.346 ops/s
# Warmup Iteration  17: 170074.548 ops/s
# Warmup Iteration  18: 167388.048 ops/s
# Warmup Iteration  19: 173236.254 ops/s
# Warmup Iteration  20: 164470.127 ops/s
# Warmup Iteration  21: 168607.016 ops/s
# Warmup Iteration  22: 173029.992 ops/s
# Warmup Iteration  23: 164249.328 ops/s
# Warmup Iteration  24: 167709.217 ops/s
# Warmup Iteration  25: 174834.930 ops/s
# Warmup Iteration  26: 164619.379 ops/s
# Warmup Iteration  27: 172216.973 ops/s
# Warmup Iteration  28: 165150.760 ops/s
# Warmup Iteration  29: 170862.760 ops/s
# Warmup Iteration  30: 171515.959 ops/s
Iteration   1: 163243.897 ops/s
Iteration   2: 173740.419 ops/s
Iteration   3: 168455.413 ops/s
Iteration   4: 166865.787 ops/s
Iteration   5: 172473.298 ops/s
Iteration   6: 164387.820 ops/s
Iteration   7: 171454.590 ops/s
Iteration   8: 173369.340 ops/s
Iteration   9: 166109.533 ops/s
Iteration  10: 173024.265 ops/s
Iteration  11: 167382.385 ops/s
Iteration  12: 173008.794 ops/s
Iteration  13: 162661.891 ops/s
Iteration  14: 168129.341 ops/s
Iteration  15: 170785.213 ops/s
Iteration  16: 166674.634 ops/s
Iteration  17: 169534.004 ops/s
Iteration  18: 128434.595 ops/s
Iteration  19: 168920.699 ops/s
Iteration  20: 173830.108 ops/s
Iteration  21: 168882.802 ops/s
Iteration  22: 163802.255 ops/s
Iteration  23: 172765.671 ops/s
Iteration  24: 167205.474 ops/s
Iteration  25: 168420.679 ops/s
Iteration  26: 167715.308 ops/s
Iteration  27: 173901.494 ops/s
Iteration  28: 175223.263 ops/s
Iteration  29: 164307.637 ops/s
Iteration  30: 169315.549 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_404._Benchmark.benchmark_Cluster_404":
  167800.872 ±(99.9%) 5505.198 ops/s [Average]
  (min, avg, max) = (128434.595, 167800.872, 175223.263), stdev = 8239.922
  CI (99.9%): [162295.674, 173306.070] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_404._Benchmark.benchmark_Cluster_404  thrpt   30  167800.872 ± 5505.198  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_405._Benchmark.benchmark_Cluster_405$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_405._Benchmark.benchmark_Cluster_405

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18655.808 ops/s
# Warmup Iteration   2: 53518.046 ops/s
# Warmup Iteration   3: 79124.868 ops/s
# Warmup Iteration   4: 107173.829 ops/s
# Warmup Iteration   5: 115878.903 ops/s
# Warmup Iteration   6: 108463.406 ops/s
# Warmup Iteration   7: 126959.353 ops/s
# Warmup Iteration   8: 112039.436 ops/s
# Warmup Iteration   9: 117148.346 ops/s
# Warmup Iteration  10: 122944.411 ops/s
# Warmup Iteration  11: 120172.460 ops/s
# Warmup Iteration  12: 124623.188 ops/s
# Warmup Iteration  13: 120545.357 ops/s
# Warmup Iteration  14: 125485.250 ops/s
# Warmup Iteration  15: 123872.056 ops/s
# Warmup Iteration  16: 122936.639 ops/s
# Warmup Iteration  17: 128489.783 ops/s
# Warmup Iteration  18: 126443.409 ops/s
# Warmup Iteration  19: 127602.698 ops/s
# Warmup Iteration  20: 129718.251 ops/s
# Warmup Iteration  21: 126036.743 ops/s
# Warmup Iteration  22: 131099.616 ops/s
# Warmup Iteration  23: 125334.756 ops/s
# Warmup Iteration  24: 122703.421 ops/s
# Warmup Iteration  25: 130648.043 ops/s
# Warmup Iteration  26: 127190.254 ops/s
# Warmup Iteration  27: 124863.285 ops/s
# Warmup Iteration  28: 123546.827 ops/s
# Warmup Iteration  29: 131563.832 ops/s
# Warmup Iteration  30: 123574.218 ops/s
Iteration   1: 132759.974 ops/s
Iteration   2: 128596.455 ops/s
Iteration   3: 124369.381 ops/s
Iteration   4: 125949.739 ops/s
Iteration   5: 126488.925 ops/s
Iteration   6: 126828.005 ops/s
Iteration   7: 125620.702 ops/s
Iteration   8: 127630.660 ops/s
Iteration   9: 128453.799 ops/s
Iteration  10: 125449.510 ops/s
Iteration  11: 129546.276 ops/s
Iteration  12: 126085.371 ops/s
Iteration  13: 127364.260 ops/s
Iteration  14: 126438.303 ops/s
Iteration  15: 122556.020 ops/s
Iteration  16: 130945.584 ops/s
Iteration  17: 130771.593 ops/s
Iteration  18: 126360.874 ops/s
Iteration  19: 130076.909 ops/s
Iteration  20: 124299.235 ops/s
Iteration  21: 125569.951 ops/s
Iteration  22: 129006.633 ops/s
Iteration  23: 125732.443 ops/s
Iteration  24: 125290.395 ops/s
Iteration  25: 128255.100 ops/s
Iteration  26: 124015.654 ops/s
Iteration  27: 129884.448 ops/s
Iteration  28: 125969.902 ops/s
Iteration  29: 129706.498 ops/s
Iteration  30: 123557.475 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_405._Benchmark.benchmark_Cluster_405":
  127119.336 ±(99.9%) 1639.121 ops/s [Average]
  (min, avg, max) = (122556.020, 127119.336, 132759.974), stdev = 2453.359
  CI (99.9%): [125480.215, 128758.457] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_405._Benchmark.benchmark_Cluster_405  thrpt   30  127119.336 ± 1639.121  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_406._Benchmark.benchmark_Cluster_406$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_406._Benchmark.benchmark_Cluster_406

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17771.869 ops/s
# Warmup Iteration   2: 51227.014 ops/s
# Warmup Iteration   3: 94186.373 ops/s
# Warmup Iteration   4: 109621.735 ops/s
# Warmup Iteration   5: 113729.557 ops/s
# Warmup Iteration   6: 111794.050 ops/s
# Warmup Iteration   7: 109179.249 ops/s
# Warmup Iteration   8: 121789.255 ops/s
# Warmup Iteration   9: 118883.891 ops/s
# Warmup Iteration  10: 117912.682 ops/s
# Warmup Iteration  11: 120688.771 ops/s
# Warmup Iteration  12: 117813.110 ops/s
# Warmup Iteration  13: 123849.621 ops/s
# Warmup Iteration  14: 116260.273 ops/s
# Warmup Iteration  15: 120587.453 ops/s
# Warmup Iteration  16: 121999.098 ops/s
# Warmup Iteration  17: 122937.953 ops/s
# Warmup Iteration  18: 124776.273 ops/s
# Warmup Iteration  19: 118873.968 ops/s
# Warmup Iteration  20: 125949.603 ops/s
# Warmup Iteration  21: 120647.408 ops/s
# Warmup Iteration  22: 120441.681 ops/s
# Warmup Iteration  23: 127241.368 ops/s
# Warmup Iteration  24: 120288.975 ops/s
# Warmup Iteration  25: 122918.224 ops/s
# Warmup Iteration  26: 123002.526 ops/s
# Warmup Iteration  27: 126717.210 ops/s
# Warmup Iteration  28: 123532.637 ops/s
# Warmup Iteration  29: 118637.634 ops/s
# Warmup Iteration  30: 127956.797 ops/s
Iteration   1: 119615.742 ops/s
Iteration   2: 120940.083 ops/s
Iteration   3: 125366.803 ops/s
Iteration   4: 120197.318 ops/s
Iteration   5: 122656.972 ops/s
Iteration   6: 125250.637 ops/s
Iteration   7: 120776.608 ops/s
Iteration   8: 127318.903 ops/s
Iteration   9: 121209.781 ops/s
Iteration  10: 126148.578 ops/s
Iteration  11: 123484.049 ops/s
Iteration  12: 125671.407 ops/s
Iteration  13: 98047.309 ops/s
Iteration  14: 123833.094 ops/s
Iteration  15: 121396.232 ops/s
Iteration  16: 121689.884 ops/s
Iteration  17: 120878.344 ops/s
Iteration  18: 120295.835 ops/s
Iteration  19: 122249.977 ops/s
Iteration  20: 127925.397 ops/s
Iteration  21: 120235.390 ops/s
Iteration  22: 124722.062 ops/s
Iteration  23: 117208.920 ops/s
Iteration  24: 129454.833 ops/s
Iteration  25: 127306.836 ops/s
Iteration  26: 122458.832 ops/s
Iteration  27: 125718.937 ops/s
Iteration  28: 119885.316 ops/s
Iteration  29: 122893.027 ops/s
Iteration  30: 128691.699 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_406._Benchmark.benchmark_Cluster_406":
  122450.960 ±(99.9%) 3696.622 ops/s [Average]
  (min, avg, max) = (98047.309, 122450.960, 129454.833), stdev = 5532.931
  CI (99.9%): [118754.338, 126147.582] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_406._Benchmark.benchmark_Cluster_406  thrpt   30  122450.960 ± 3696.622  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_407._Benchmark.benchmark_Cluster_407$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_407._Benchmark.benchmark_Cluster_407

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19049.038 ops/s
# Warmup Iteration   2: 65382.445 ops/s
# Warmup Iteration   3: 94366.995 ops/s
# Warmup Iteration   4: 116146.117 ops/s
# Warmup Iteration   5: 122281.340 ops/s
# Warmup Iteration   6: 116024.189 ops/s
# Warmup Iteration   7: 123329.689 ops/s
# Warmup Iteration   8: 122307.283 ops/s
# Warmup Iteration   9: 122257.361 ops/s
# Warmup Iteration  10: 121856.807 ops/s
# Warmup Iteration  11: 116317.201 ops/s
# Warmup Iteration  12: 121547.072 ops/s
# Warmup Iteration  13: 119959.280 ops/s
# Warmup Iteration  14: 120036.835 ops/s
# Warmup Iteration  15: 121879.737 ops/s
# Warmup Iteration  16: 118385.539 ops/s
# Warmup Iteration  17: 129013.324 ops/s
# Warmup Iteration  18: 124179.702 ops/s
# Warmup Iteration  19: 125070.949 ops/s
# Warmup Iteration  20: 129735.117 ops/s
# Warmup Iteration  21: 123080.783 ops/s
# Warmup Iteration  22: 130565.525 ops/s
# Warmup Iteration  23: 124108.309 ops/s
# Warmup Iteration  24: 124788.233 ops/s
# Warmup Iteration  25: 127187.583 ops/s
# Warmup Iteration  26: 121487.470 ops/s
# Warmup Iteration  27: 127353.323 ops/s
# Warmup Iteration  28: 126295.112 ops/s
# Warmup Iteration  29: 125594.427 ops/s
# Warmup Iteration  30: 128188.364 ops/s
Iteration   1: 125938.049 ops/s
Iteration   2: 127893.123 ops/s
Iteration   3: 124864.691 ops/s
Iteration   4: 125384.191 ops/s
Iteration   5: 128107.896 ops/s
Iteration   6: 120275.402 ops/s
Iteration   7: 130988.573 ops/s
Iteration   8: 124293.096 ops/s
Iteration   9: 126220.804 ops/s
Iteration  10: 131571.601 ops/s
Iteration  11: 120514.806 ops/s
Iteration  12: 124914.746 ops/s
Iteration  13: 131609.153 ops/s
Iteration  14: 122352.324 ops/s
Iteration  15: 125049.987 ops/s
Iteration  16: 130928.334 ops/s
Iteration  17: 124876.385 ops/s
Iteration  18: 131245.006 ops/s
Iteration  19: 121529.158 ops/s
Iteration  20: 130357.632 ops/s
Iteration  21: 131502.130 ops/s
Iteration  22: 124197.770 ops/s
Iteration  23: 124198.662 ops/s
Iteration  24: 127576.059 ops/s
Iteration  25: 128093.701 ops/s
Iteration  26: 123873.737 ops/s
Iteration  27: 128000.340 ops/s
Iteration  28: 127821.316 ops/s
Iteration  29: 125699.711 ops/s
Iteration  30: 128526.175 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_407._Benchmark.benchmark_Cluster_407":
  126613.485 ±(99.9%) 2222.779 ops/s [Average]
  (min, avg, max) = (120275.402, 126613.485, 131609.153), stdev = 3326.951
  CI (99.9%): [124390.706, 128836.264] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_407._Benchmark.benchmark_Cluster_407  thrpt   30  126613.485 ± 2222.779  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_408._Benchmark.benchmark_Cluster_408$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_408._Benchmark.benchmark_Cluster_408

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 26387.725 ops/s
# Warmup Iteration   2: 88444.619 ops/s
# Warmup Iteration   3: 128686.222 ops/s
# Warmup Iteration   4: 132647.735 ops/s
# Warmup Iteration   5: 131754.616 ops/s
# Warmup Iteration   6: 125595.505 ops/s
# Warmup Iteration   7: 130920.168 ops/s
# Warmup Iteration   8: 133309.488 ops/s
# Warmup Iteration   9: 139195.936 ops/s
# Warmup Iteration  10: 134128.139 ops/s
# Warmup Iteration  11: 135237.017 ops/s
# Warmup Iteration  12: 132937.581 ops/s
# Warmup Iteration  13: 128192.985 ops/s
# Warmup Iteration  14: 144606.361 ops/s
# Warmup Iteration  15: 134991.938 ops/s
# Warmup Iteration  16: 138068.839 ops/s
# Warmup Iteration  17: 137406.365 ops/s
# Warmup Iteration  18: 139076.271 ops/s
# Warmup Iteration  19: 143251.987 ops/s
# Warmup Iteration  20: 138166.088 ops/s
# Warmup Iteration  21: 138724.631 ops/s
# Warmup Iteration  22: 144780.012 ops/s
# Warmup Iteration  23: 134594.565 ops/s
# Warmup Iteration  24: 138220.017 ops/s
# Warmup Iteration  25: 144597.862 ops/s
# Warmup Iteration  26: 140313.369 ops/s
# Warmup Iteration  27: 142419.831 ops/s
# Warmup Iteration  28: 144858.693 ops/s
# Warmup Iteration  29: 135458.738 ops/s
# Warmup Iteration  30: 143964.254 ops/s
Iteration   1: 137328.684 ops/s
Iteration   2: 142494.082 ops/s
Iteration   3: 141119.734 ops/s
Iteration   4: 140525.591 ops/s
Iteration   5: 142024.042 ops/s
Iteration   6: 139134.851 ops/s
Iteration   7: 113714.418 ops/s
Iteration   8: 146929.540 ops/s
Iteration   9: 134557.042 ops/s
Iteration  10: 143289.233 ops/s
Iteration  11: 138143.759 ops/s
Iteration  12: 144306.145 ops/s
Iteration  13: 140465.001 ops/s
Iteration  14: 135644.029 ops/s
Iteration  15: 142423.089 ops/s
Iteration  16: 143327.044 ops/s
Iteration  17: 136736.076 ops/s
Iteration  18: 141882.047 ops/s
Iteration  19: 135965.495 ops/s
Iteration  20: 143090.040 ops/s
Iteration  21: 138553.986 ops/s
Iteration  22: 144848.751 ops/s
Iteration  23: 139818.400 ops/s
Iteration  24: 142229.265 ops/s
Iteration  25: 137770.778 ops/s
Iteration  26: 141905.611 ops/s
Iteration  27: 146052.697 ops/s
Iteration  28: 137668.905 ops/s
Iteration  29: 143271.284 ops/s
Iteration  30: 137691.153 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_408._Benchmark.benchmark_Cluster_408":
  139763.692 ±(99.9%) 3909.338 ops/s [Average]
  (min, avg, max) = (113714.418, 139763.692, 146929.540), stdev = 5851.314
  CI (99.9%): [135854.354, 143673.030] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_408._Benchmark.benchmark_Cluster_408  thrpt   30  139763.692 ± 3909.338  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_409._Benchmark.benchmark_Cluster_409$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_409._Benchmark.benchmark_Cluster_409

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15016.093 ops/s
# Warmup Iteration   2: 67938.169 ops/s
# Warmup Iteration   3: 88343.090 ops/s
# Warmup Iteration   4: 101603.389 ops/s
# Warmup Iteration   5: 88063.192 ops/s
# Warmup Iteration   6: 106573.132 ops/s
# Warmup Iteration   7: 102766.408 ops/s
# Warmup Iteration   8: 100807.097 ops/s
# Warmup Iteration   9: 108969.259 ops/s
# Warmup Iteration  10: 105147.291 ops/s
# Warmup Iteration  11: 110476.279 ops/s
# Warmup Iteration  12: 101550.724 ops/s
# Warmup Iteration  13: 109983.800 ops/s
# Warmup Iteration  14: 101932.104 ops/s
# Warmup Iteration  15: 107919.123 ops/s
# Warmup Iteration  16: 103581.546 ops/s
# Warmup Iteration  17: 110792.280 ops/s
# Warmup Iteration  18: 106843.003 ops/s
# Warmup Iteration  19: 111543.546 ops/s
# Warmup Iteration  20: 107195.976 ops/s
# Warmup Iteration  21: 109775.426 ops/s
# Warmup Iteration  22: 111303.222 ops/s
# Warmup Iteration  23: 106446.210 ops/s
# Warmup Iteration  24: 108875.795 ops/s
# Warmup Iteration  25: 109116.448 ops/s
# Warmup Iteration  26: 106903.133 ops/s
# Warmup Iteration  27: 110126.771 ops/s
# Warmup Iteration  28: 107009.194 ops/s
# Warmup Iteration  29: 111498.644 ops/s
# Warmup Iteration  30: 107102.871 ops/s
Iteration   1: 110396.485 ops/s
Iteration   2: 107719.222 ops/s
Iteration   3: 110792.582 ops/s
Iteration   4: 105769.905 ops/s
Iteration   5: 110260.591 ops/s
Iteration   6: 111132.558 ops/s
Iteration   7: 106108.233 ops/s
Iteration   8: 109745.635 ops/s
Iteration   9: 109048.807 ops/s
Iteration  10: 108483.889 ops/s
Iteration  11: 107148.082 ops/s
Iteration  12: 109905.733 ops/s
Iteration  13: 105597.413 ops/s
Iteration  14: 106411.622 ops/s
Iteration  15: 109654.733 ops/s
Iteration  16: 105013.231 ops/s
Iteration  17: 109845.837 ops/s
Iteration  18: 110680.408 ops/s
Iteration  19: 108172.088 ops/s
Iteration  20: 109823.249 ops/s
Iteration  21: 111767.175 ops/s
Iteration  22: 109919.450 ops/s
Iteration  23: 104971.905 ops/s
Iteration  24: 108277.452 ops/s
Iteration  25: 110964.513 ops/s
Iteration  26: 109175.218 ops/s
Iteration  27: 109557.329 ops/s
Iteration  28: 106217.363 ops/s
Iteration  29: 108657.894 ops/s
Iteration  30: 112948.937 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_409._Benchmark.benchmark_Cluster_409":
  108805.585 ±(99.9%) 1404.107 ops/s [Average]
  (min, avg, max) = (104971.905, 108805.585, 112948.937), stdev = 2101.602
  CI (99.9%): [107401.477, 110209.692] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_409._Benchmark.benchmark_Cluster_409  thrpt   30  108805.585 ± 1404.107  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_41._Benchmark.benchmark_Cluster_41$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_41._Benchmark.benchmark_Cluster_41

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4462.159 ops/s
# Warmup Iteration   2: 24863.137 ops/s
# Warmup Iteration   3: 20509.818 ops/s
# Warmup Iteration   4: 21500.877 ops/s
# Warmup Iteration   5: 46864.558 ops/s
# Warmup Iteration   6: 46391.314 ops/s
# Warmup Iteration   7: 107384.603 ops/s
# Warmup Iteration   8: 98273.452 ops/s
# Warmup Iteration   9: 102616.952 ops/s
# Warmup Iteration  10: 104922.419 ops/s
# Warmup Iteration  11: 102784.552 ops/s
# Warmup Iteration  12: 99711.305 ops/s
# Warmup Iteration  13: 105784.095 ops/s
# Warmup Iteration  14: 99111.475 ops/s
# Warmup Iteration  15: 100287.848 ops/s
# Warmup Iteration  16: 100744.357 ops/s
# Warmup Iteration  17: 103791.601 ops/s
# Warmup Iteration  18: 107833.428 ops/s
# Warmup Iteration  19: 102160.784 ops/s
# Warmup Iteration  20: 105390.363 ops/s
# Warmup Iteration  21: 110492.101 ops/s
# Warmup Iteration  22: 104358.383 ops/s
# Warmup Iteration  23: 106225.492 ops/s
# Warmup Iteration  24: 107319.177 ops/s
# Warmup Iteration  25: 101743.890 ops/s
# Warmup Iteration  26: 105988.018 ops/s
# Warmup Iteration  27: 105190.937 ops/s
# Warmup Iteration  28: 105492.393 ops/s
# Warmup Iteration  29: 102187.598 ops/s
# Warmup Iteration  30: 105807.656 ops/s
Iteration   1: 110529.818 ops/s
Iteration   2: 82195.560 ops/s
Iteration   3: 107313.418 ops/s
Iteration   4: 103915.345 ops/s
Iteration   5: 105511.900 ops/s
Iteration   6: 107620.821 ops/s
Iteration   7: 106076.748 ops/s
Iteration   8: 105630.319 ops/s
Iteration   9: 104915.294 ops/s
Iteration  10: 105997.397 ops/s
Iteration  11: 104498.230 ops/s
Iteration  12: 103016.251 ops/s
Iteration  13: 107837.308 ops/s
Iteration  14: 101778.076 ops/s
Iteration  15: 101492.320 ops/s
Iteration  16: 107435.379 ops/s
Iteration  17: 104236.633 ops/s
Iteration  18: 106179.138 ops/s
Iteration  19: 108825.010 ops/s
Iteration  20: 103875.288 ops/s
Iteration  21: 111411.602 ops/s
Iteration  22: 106535.740 ops/s
Iteration  23: 100742.303 ops/s
Iteration  24: 109003.596 ops/s
Iteration  25: 102108.901 ops/s
Iteration  26: 106189.553 ops/s
Iteration  27: 105508.574 ops/s
Iteration  28: 104772.710 ops/s
Iteration  29: 106775.488 ops/s
Iteration  30: 103427.239 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_41._Benchmark.benchmark_Cluster_41":
  104845.199 ±(99.9%) 3324.805 ops/s [Average]
  (min, avg, max) = (82195.560, 104845.199, 111411.602), stdev = 4976.412
  CI (99.9%): [101520.393, 108170.004] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_41._Benchmark.benchmark_Cluster_41  thrpt   30  104845.199 ± 3324.805  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_410._Benchmark.benchmark_Cluster_410$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_410._Benchmark.benchmark_Cluster_410

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2223.092 ops/s
# Warmup Iteration   2: 28004.909 ops/s
# Warmup Iteration   3: 36861.169 ops/s
# Warmup Iteration   4: 47594.858 ops/s
# Warmup Iteration   5: 52447.483 ops/s
# Warmup Iteration   6: 94590.661 ops/s
# Warmup Iteration   7: 128960.369 ops/s
# Warmup Iteration   8: 131101.130 ops/s
# Warmup Iteration   9: 131045.350 ops/s
# Warmup Iteration  10: 122871.931 ops/s
# Warmup Iteration  11: 126557.389 ops/s
# Warmup Iteration  12: 131571.765 ops/s
# Warmup Iteration  13: 130637.694 ops/s
# Warmup Iteration  14: 122734.307 ops/s
# Warmup Iteration  15: 128885.439 ops/s
# Warmup Iteration  16: 133998.450 ops/s
# Warmup Iteration  17: 137620.281 ops/s
# Warmup Iteration  18: 143507.364 ops/s
# Warmup Iteration  19: 139672.779 ops/s
# Warmup Iteration  20: 139289.195 ops/s
# Warmup Iteration  21: 137850.563 ops/s
# Warmup Iteration  22: 141043.829 ops/s
# Warmup Iteration  23: 139332.105 ops/s
# Warmup Iteration  24: 138910.506 ops/s
# Warmup Iteration  25: 139569.131 ops/s
# Warmup Iteration  26: 137933.516 ops/s
# Warmup Iteration  27: 144814.513 ops/s
# Warmup Iteration  28: 137986.645 ops/s
# Warmup Iteration  29: 146390.513 ops/s
# Warmup Iteration  30: 135707.504 ops/s
Iteration   1: 146211.041 ops/s
Iteration   2: 142382.448 ops/s
Iteration   3: 135929.915 ops/s
Iteration   4: 139778.347 ops/s
Iteration   5: 141104.012 ops/s
Iteration   6: 140059.716 ops/s
Iteration   7: 141389.062 ops/s
Iteration   8: 136443.390 ops/s
Iteration   9: 141784.336 ops/s
Iteration  10: 136573.713 ops/s
Iteration  11: 138676.058 ops/s
Iteration  12: 143931.391 ops/s
Iteration  13: 135603.465 ops/s
Iteration  14: 139751.139 ops/s
Iteration  15: 141839.006 ops/s
Iteration  16: 139664.020 ops/s
Iteration  17: 142547.402 ops/s
Iteration  18: 139815.290 ops/s
Iteration  19: 140984.108 ops/s
Iteration  20: 139424.623 ops/s
Iteration  21: 138490.383 ops/s
Iteration  22: 143640.861 ops/s
Iteration  23: 135350.762 ops/s
Iteration  24: 138162.211 ops/s
Iteration  25: 144546.380 ops/s
Iteration  26: 135095.899 ops/s
Iteration  27: 140437.363 ops/s
Iteration  28: 138296.914 ops/s
Iteration  29: 137396.564 ops/s
Iteration  30: 135919.062 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_410._Benchmark.benchmark_Cluster_410":
  139707.629 ±(99.9%) 1956.607 ops/s [Average]
  (min, avg, max) = (135095.899, 139707.629, 146211.041), stdev = 2928.558
  CI (99.9%): [137751.022, 141664.237] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_410._Benchmark.benchmark_Cluster_410  thrpt   30  139707.629 ± 1956.607  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_411._Benchmark.benchmark_Cluster_411$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_411._Benchmark.benchmark_Cluster_411

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1446.471 ops/s
# Warmup Iteration   2: 16126.641 ops/s
# Warmup Iteration   3: 44175.448 ops/s
# Warmup Iteration   4: 54665.966 ops/s
# Warmup Iteration   5: 105294.693 ops/s
# Warmup Iteration   6: 111895.036 ops/s
# Warmup Iteration   7: 110267.538 ops/s
# Warmup Iteration   8: 110254.400 ops/s
# Warmup Iteration   9: 115650.563 ops/s
# Warmup Iteration  10: 123204.690 ops/s
# Warmup Iteration  11: 117530.855 ops/s
# Warmup Iteration  12: 114667.052 ops/s
# Warmup Iteration  13: 124342.974 ops/s
# Warmup Iteration  14: 116738.700 ops/s
# Warmup Iteration  15: 120376.751 ops/s
# Warmup Iteration  16: 119220.205 ops/s
# Warmup Iteration  17: 117212.662 ops/s
# Warmup Iteration  18: 122387.855 ops/s
# Warmup Iteration  19: 117383.234 ops/s
# Warmup Iteration  20: 123640.025 ops/s
# Warmup Iteration  21: 114844.611 ops/s
# Warmup Iteration  22: 117454.633 ops/s
# Warmup Iteration  23: 123590.688 ops/s
# Warmup Iteration  24: 114612.099 ops/s
# Warmup Iteration  25: 121906.803 ops/s
# Warmup Iteration  26: 116195.933 ops/s
# Warmup Iteration  27: 101842.985 ops/s
# Warmup Iteration  28: 123239.613 ops/s
# Warmup Iteration  29: 116112.942 ops/s
# Warmup Iteration  30: 123566.569 ops/s
Iteration   1: 116735.601 ops/s
Iteration   2: 118886.893 ops/s
Iteration   3: 121654.802 ops/s
Iteration   4: 115612.245 ops/s
Iteration   5: 119533.517 ops/s
Iteration   6: 124277.058 ops/s
Iteration   7: 115434.755 ops/s
Iteration   8: 120620.000 ops/s
Iteration   9: 116985.140 ops/s
Iteration  10: 118961.282 ops/s
Iteration  11: 123265.438 ops/s
Iteration  12: 117188.586 ops/s
Iteration  13: 115350.704 ops/s
Iteration  14: 119273.074 ops/s
Iteration  15: 119228.226 ops/s
Iteration  16: 116247.435 ops/s
Iteration  17: 118126.019 ops/s
Iteration  18: 115235.908 ops/s
Iteration  19: 118546.797 ops/s
Iteration  20: 118123.491 ops/s
Iteration  21: 119437.218 ops/s
Iteration  22: 119854.825 ops/s
Iteration  23: 119573.437 ops/s
Iteration  24: 119390.896 ops/s
Iteration  25: 117695.979 ops/s
Iteration  26: 120179.431 ops/s
Iteration  27: 119648.217 ops/s
Iteration  28: 115970.444 ops/s
Iteration  29: 122807.468 ops/s
Iteration  30: 116667.164 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_411._Benchmark.benchmark_Cluster_411":
  118683.735 ±(99.9%) 1572.390 ops/s [Average]
  (min, avg, max) = (115235.908, 118683.735, 124277.058), stdev = 2353.479
  CI (99.9%): [117111.345, 120256.125] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_411._Benchmark.benchmark_Cluster_411  thrpt   30  118683.735 ± 1572.390  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_412._Benchmark.benchmark_Cluster_412$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_412._Benchmark.benchmark_Cluster_412

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4049.525 ops/s
# Warmup Iteration   2: 31940.896 ops/s
# Warmup Iteration   3: 36556.940 ops/s
# Warmup Iteration   4: 71713.503 ops/s
# Warmup Iteration   5: 121283.249 ops/s
# Warmup Iteration   6: 125654.996 ops/s
# Warmup Iteration   7: 115334.158 ops/s
# Warmup Iteration   8: 131130.755 ops/s
# Warmup Iteration   9: 138024.274 ops/s
# Warmup Iteration  10: 133884.906 ops/s
# Warmup Iteration  11: 130691.661 ops/s
# Warmup Iteration  12: 131047.316 ops/s
# Warmup Iteration  13: 137589.291 ops/s
# Warmup Iteration  14: 127878.316 ops/s
# Warmup Iteration  15: 134154.085 ops/s
# Warmup Iteration  16: 130947.829 ops/s
# Warmup Iteration  17: 140014.617 ops/s
# Warmup Iteration  18: 138303.790 ops/s
# Warmup Iteration  19: 135945.126 ops/s
# Warmup Iteration  20: 141656.264 ops/s
# Warmup Iteration  21: 135272.356 ops/s
# Warmup Iteration  22: 140105.354 ops/s
# Warmup Iteration  23: 139441.762 ops/s
# Warmup Iteration  24: 136182.320 ops/s
# Warmup Iteration  25: 135282.110 ops/s
# Warmup Iteration  26: 141211.079 ops/s
# Warmup Iteration  27: 138611.096 ops/s
# Warmup Iteration  28: 134033.930 ops/s
# Warmup Iteration  29: 138587.491 ops/s
# Warmup Iteration  30: 136144.733 ops/s
Iteration   1: 137658.328 ops/s
Iteration   2: 136703.821 ops/s
Iteration   3: 142931.322 ops/s
Iteration   4: 136448.809 ops/s
Iteration   5: 141637.893 ops/s
Iteration   6: 141389.197 ops/s
Iteration   7: 135263.835 ops/s
Iteration   8: 139965.883 ops/s
Iteration   9: 136478.360 ops/s
Iteration  10: 140697.410 ops/s
Iteration  11: 134476.127 ops/s
Iteration  12: 137950.925 ops/s
Iteration  13: 141143.383 ops/s
Iteration  14: 133481.958 ops/s
Iteration  15: 134593.441 ops/s
Iteration  16: 138390.625 ops/s
Iteration  17: 137002.866 ops/s
Iteration  18: 137491.647 ops/s
Iteration  19: 143620.287 ops/s
Iteration  20: 136836.572 ops/s
Iteration  21: 139464.156 ops/s
Iteration  22: 133193.442 ops/s
Iteration  23: 140515.871 ops/s
Iteration  24: 136820.742 ops/s
Iteration  25: 139478.838 ops/s
Iteration  26: 131888.984 ops/s
Iteration  27: 139377.163 ops/s
Iteration  28: 136526.428 ops/s
Iteration  29: 137467.648 ops/s
Iteration  30: 137657.465 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_412._Benchmark.benchmark_Cluster_412":
  137885.114 ±(99.9%) 1919.692 ops/s [Average]
  (min, avg, max) = (131888.984, 137885.114, 143620.287), stdev = 2873.305
  CI (99.9%): [135965.422, 139804.806] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_412._Benchmark.benchmark_Cluster_412  thrpt   30  137885.114 ± 1919.692  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_413._Benchmark.benchmark_Cluster_413$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_413._Benchmark.benchmark_Cluster_413

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9029.226 ops/s
# Warmup Iteration   2: 26944.921 ops/s
# Warmup Iteration   3: 47728.856 ops/s
# Warmup Iteration   4: 66214.244 ops/s
# Warmup Iteration   5: 97316.312 ops/s
# Warmup Iteration   6: 100437.588 ops/s
# Warmup Iteration   7: 103688.308 ops/s
# Warmup Iteration   8: 99305.081 ops/s
# Warmup Iteration   9: 104432.599 ops/s
# Warmup Iteration  10: 107316.688 ops/s
# Warmup Iteration  11: 103265.809 ops/s
# Warmup Iteration  12: 107092.258 ops/s
# Warmup Iteration  13: 104947.066 ops/s
# Warmup Iteration  14: 107338.766 ops/s
# Warmup Iteration  15: 109070.647 ops/s
# Warmup Iteration  16: 103103.168 ops/s
# Warmup Iteration  17: 112927.305 ops/s
# Warmup Iteration  18: 109505.836 ops/s
# Warmup Iteration  19: 106977.803 ops/s
# Warmup Iteration  20: 111555.729 ops/s
# Warmup Iteration  21: 89319.975 ops/s
# Warmup Iteration  22: 111519.704 ops/s
# Warmup Iteration  23: 106950.793 ops/s
# Warmup Iteration  24: 106775.276 ops/s
# Warmup Iteration  25: 112576.646 ops/s
# Warmup Iteration  26: 107730.175 ops/s
# Warmup Iteration  27: 109406.515 ops/s
# Warmup Iteration  28: 106193.197 ops/s
# Warmup Iteration  29: 111770.997 ops/s
# Warmup Iteration  30: 106364.869 ops/s
Iteration   1: 113790.382 ops/s
Iteration   2: 111137.551 ops/s
Iteration   3: 109158.463 ops/s
Iteration   4: 108547.685 ops/s
Iteration   5: 112496.256 ops/s
Iteration   6: 109972.703 ops/s
Iteration   7: 106734.689 ops/s
Iteration   8: 109560.430 ops/s
Iteration   9: 107505.154 ops/s
Iteration  10: 112571.160 ops/s
Iteration  11: 106302.599 ops/s
Iteration  12: 111465.983 ops/s
Iteration  13: 108582.828 ops/s
Iteration  14: 108366.745 ops/s
Iteration  15: 108551.994 ops/s
Iteration  16: 112028.411 ops/s
Iteration  17: 106677.141 ops/s
Iteration  18: 110863.444 ops/s
Iteration  19: 107660.079 ops/s
Iteration  20: 111534.462 ops/s
Iteration  21: 108530.201 ops/s
Iteration  22: 109484.833 ops/s
Iteration  23: 107717.594 ops/s
Iteration  24: 112159.619 ops/s
Iteration  25: 109072.060 ops/s
Iteration  26: 115385.750 ops/s
Iteration  27: 103548.279 ops/s
Iteration  28: 114622.084 ops/s
Iteration  29: 110197.801 ops/s
Iteration  30: 108649.540 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_413._Benchmark.benchmark_Cluster_413":
  109762.531 ±(99.9%) 1754.773 ops/s [Average]
  (min, avg, max) = (103548.279, 109762.531, 115385.750), stdev = 2626.461
  CI (99.9%): [108007.758, 111517.303] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_413._Benchmark.benchmark_Cluster_413  thrpt   30  109762.531 ± 1754.773  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_414._Benchmark.benchmark_Cluster_414$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_414._Benchmark.benchmark_Cluster_414

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12780.158 ops/s
# Warmup Iteration   2: 25550.880 ops/s
# Warmup Iteration   3: 31913.053 ops/s
# Warmup Iteration   4: 34210.766 ops/s
# Warmup Iteration   5: 36419.189 ops/s
# Warmup Iteration   6: 42109.030 ops/s
# Warmup Iteration   7: 55786.267 ops/s
# Warmup Iteration   8: 118981.773 ops/s
# Warmup Iteration   9: 122168.529 ops/s
# Warmup Iteration  10: 122107.714 ops/s
# Warmup Iteration  11: 126057.024 ops/s
# Warmup Iteration  12: 121248.930 ops/s
# Warmup Iteration  13: 123994.288 ops/s
# Warmup Iteration  14: 125021.673 ops/s
# Warmup Iteration  15: 122816.289 ops/s
# Warmup Iteration  16: 124514.189 ops/s
# Warmup Iteration  17: 126728.967 ops/s
# Warmup Iteration  18: 129116.780 ops/s
# Warmup Iteration  19: 127427.337 ops/s
# Warmup Iteration  20: 124367.352 ops/s
# Warmup Iteration  21: 117707.827 ops/s
# Warmup Iteration  22: 127398.721 ops/s
# Warmup Iteration  23: 127865.610 ops/s
# Warmup Iteration  24: 127873.379 ops/s
# Warmup Iteration  25: 129020.954 ops/s
# Warmup Iteration  26: 128218.769 ops/s
# Warmup Iteration  27: 131245.835 ops/s
# Warmup Iteration  28: 126277.824 ops/s
# Warmup Iteration  29: 133637.825 ops/s
# Warmup Iteration  30: 123557.519 ops/s
Iteration   1: 133537.921 ops/s
Iteration   2: 120921.505 ops/s
Iteration   3: 131173.026 ops/s
Iteration   4: 126679.416 ops/s
Iteration   5: 127583.403 ops/s
Iteration   6: 134038.795 ops/s
Iteration   7: 123639.113 ops/s
Iteration   8: 132239.944 ops/s
Iteration   9: 127133.836 ops/s
Iteration  10: 132707.549 ops/s
Iteration  11: 128244.784 ops/s
Iteration  12: 130376.387 ops/s
Iteration  13: 133160.617 ops/s
Iteration  14: 132812.594 ops/s
Iteration  15: 126325.922 ops/s
Iteration  16: 123226.991 ops/s
Iteration  17: 130658.191 ops/s
Iteration  18: 128967.817 ops/s
Iteration  19: 128386.788 ops/s
Iteration  20: 126635.389 ops/s
Iteration  21: 129616.060 ops/s
Iteration  22: 131886.746 ops/s
Iteration  23: 122842.021 ops/s
Iteration  24: 133909.408 ops/s
Iteration  25: 125506.281 ops/s
Iteration  26: 131036.559 ops/s
Iteration  27: 133389.926 ops/s
Iteration  28: 129279.358 ops/s
Iteration  29: 131924.027 ops/s
Iteration  30: 125362.484 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_414._Benchmark.benchmark_Cluster_414":
  129106.762 ±(99.9%) 2453.892 ops/s [Average]
  (min, avg, max) = (120921.505, 129106.762, 134038.795), stdev = 3672.870
  CI (99.9%): [126652.870, 131560.654] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_414._Benchmark.benchmark_Cluster_414  thrpt   30  129106.762 ± 2453.892  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_415._Benchmark.benchmark_Cluster_415$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_415._Benchmark.benchmark_Cluster_415

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.700 ops/s
# Warmup Iteration   2: 2713.954 ops/s
# Warmup Iteration   3: 20089.276 ops/s
# Warmup Iteration   4: 37361.598 ops/s
# Warmup Iteration   5: 44459.248 ops/s
# Warmup Iteration   6: 39003.614 ops/s
# Warmup Iteration   7: 88572.801 ops/s
# Warmup Iteration   8: 108328.662 ops/s
# Warmup Iteration   9: 114711.722 ops/s
# Warmup Iteration  10: 123955.245 ops/s
# Warmup Iteration  11: 131293.850 ops/s
# Warmup Iteration  12: 126174.804 ops/s
# Warmup Iteration  13: 128101.636 ops/s
# Warmup Iteration  14: 133194.195 ops/s
# Warmup Iteration  15: 101809.373 ops/s
# Warmup Iteration  16: 131368.522 ops/s
# Warmup Iteration  17: 125425.999 ops/s
# Warmup Iteration  18: 132095.517 ops/s
# Warmup Iteration  19: 128015.536 ops/s
# Warmup Iteration  20: 131572.630 ops/s
# Warmup Iteration  21: 127802.307 ops/s
# Warmup Iteration  22: 133248.136 ops/s
# Warmup Iteration  23: 125941.604 ops/s
# Warmup Iteration  24: 127169.293 ops/s
# Warmup Iteration  25: 134574.167 ops/s
# Warmup Iteration  26: 128286.159 ops/s
# Warmup Iteration  27: 125955.369 ops/s
# Warmup Iteration  28: 135001.429 ops/s
# Warmup Iteration  29: 135547.087 ops/s
# Warmup Iteration  30: 125929.480 ops/s
Iteration   1: 128281.462 ops/s
Iteration   2: 131108.937 ops/s
Iteration   3: 128350.135 ops/s
Iteration   4: 129760.518 ops/s
Iteration   5: 132925.614 ops/s
Iteration   6: 129379.173 ops/s
Iteration   7: 133149.374 ops/s
Iteration   8: 132568.510 ops/s
Iteration   9: 126783.769 ops/s
Iteration  10: 134971.036 ops/s
Iteration  11: 126717.171 ops/s
Iteration  12: 133319.954 ops/s
Iteration  13: 131729.444 ops/s
Iteration  14: 128338.514 ops/s
Iteration  15: 124359.517 ops/s
Iteration  16: 131501.875 ops/s
Iteration  17: 127260.960 ops/s
Iteration  18: 134949.641 ops/s
Iteration  19: 125463.549 ops/s
Iteration  20: 129537.985 ops/s
Iteration  21: 135160.744 ops/s
Iteration  22: 136070.624 ops/s
Iteration  23: 123780.354 ops/s
Iteration  24: 133905.108 ops/s
Iteration  25: 125870.569 ops/s
Iteration  26: 134540.192 ops/s
Iteration  27: 124177.189 ops/s
Iteration  28: 133210.917 ops/s
Iteration  29: 128954.935 ops/s
Iteration  30: 128241.514 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_415._Benchmark.benchmark_Cluster_415":
  130145.643 ±(99.9%) 2433.524 ops/s [Average]
  (min, avg, max) = (123780.354, 130145.643, 136070.624), stdev = 3642.385
  CI (99.9%): [127712.119, 132579.167] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_415._Benchmark.benchmark_Cluster_415  thrpt   30  130145.643 ± 2433.524  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_416._Benchmark.benchmark_Cluster_416$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_416._Benchmark.benchmark_Cluster_416

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.778 ops/s
# Warmup Iteration   2: 10479.873 ops/s
# Warmup Iteration   3: 20374.189 ops/s
# Warmup Iteration   4: 44343.968 ops/s
# Warmup Iteration   5: 60171.185 ops/s
# Warmup Iteration   6: 90137.130 ops/s
# Warmup Iteration   7: 131951.763 ops/s
# Warmup Iteration   8: 130835.868 ops/s
# Warmup Iteration   9: 138117.298 ops/s
# Warmup Iteration  10: 137069.287 ops/s
# Warmup Iteration  11: 129281.391 ops/s
# Warmup Iteration  12: 124327.418 ops/s
# Warmup Iteration  13: 136362.724 ops/s
# Warmup Iteration  14: 123710.833 ops/s
# Warmup Iteration  15: 125897.697 ops/s
# Warmup Iteration  16: 136025.879 ops/s
# Warmup Iteration  17: 136319.378 ops/s
# Warmup Iteration  18: 141711.508 ops/s
# Warmup Iteration  19: 134533.450 ops/s
# Warmup Iteration  20: 133321.789 ops/s
# Warmup Iteration  21: 140638.195 ops/s
# Warmup Iteration  22: 110791.599 ops/s
# Warmup Iteration  23: 137184.923 ops/s
# Warmup Iteration  24: 139793.992 ops/s
# Warmup Iteration  25: 136770.056 ops/s
# Warmup Iteration  26: 129032.822 ops/s
# Warmup Iteration  27: 141732.970 ops/s
# Warmup Iteration  28: 142998.999 ops/s
# Warmup Iteration  29: 132037.446 ops/s
# Warmup Iteration  30: 137720.765 ops/s
Iteration   1: 135957.677 ops/s
Iteration   2: 135659.399 ops/s
Iteration   3: 140572.192 ops/s
Iteration   4: 134087.398 ops/s
Iteration   5: 140859.682 ops/s
Iteration   6: 143210.117 ops/s
Iteration   7: 133354.304 ops/s
Iteration   8: 139161.746 ops/s
Iteration   9: 135349.224 ops/s
Iteration  10: 140884.534 ops/s
Iteration  11: 131902.552 ops/s
Iteration  12: 138073.919 ops/s
Iteration  13: 135949.539 ops/s
Iteration  14: 134174.283 ops/s
Iteration  15: 138684.530 ops/s
Iteration  16: 132285.227 ops/s
Iteration  17: 136536.920 ops/s
Iteration  18: 134329.155 ops/s
Iteration  19: 136399.110 ops/s
Iteration  20: 133435.972 ops/s
Iteration  21: 132386.270 ops/s
Iteration  22: 139891.506 ops/s
Iteration  23: 136698.753 ops/s
Iteration  24: 139532.508 ops/s
Iteration  25: 138471.331 ops/s
Iteration  26: 132337.414 ops/s
Iteration  27: 142900.728 ops/s
Iteration  28: 132277.319 ops/s
Iteration  29: 139337.353 ops/s
Iteration  30: 139451.485 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_416._Benchmark.benchmark_Cluster_416":
  136805.072 ±(99.9%) 2228.293 ops/s [Average]
  (min, avg, max) = (131902.552, 136805.072, 143210.117), stdev = 3335.204
  CI (99.9%): [134576.779, 139033.364] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_416._Benchmark.benchmark_Cluster_416  thrpt   30  136805.072 ± 2228.293  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_417._Benchmark.benchmark_Cluster_417$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_417._Benchmark.benchmark_Cluster_417

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10192.293 ops/s
# Warmup Iteration   2: 37992.746 ops/s
# Warmup Iteration   3: 78618.851 ops/s
# Warmup Iteration   4: 75469.784 ops/s
# Warmup Iteration   5: 84978.428 ops/s
# Warmup Iteration   6: 80859.820 ops/s
# Warmup Iteration   7: 80075.238 ops/s
# Warmup Iteration   8: 85113.920 ops/s
# Warmup Iteration   9: 82497.913 ops/s
# Warmup Iteration  10: 83060.589 ops/s
# Warmup Iteration  11: 82293.033 ops/s
# Warmup Iteration  12: 76387.155 ops/s
# Warmup Iteration  13: 85820.949 ops/s
# Warmup Iteration  14: 83053.641 ops/s
# Warmup Iteration  15: 80239.001 ops/s
# Warmup Iteration  16: 86496.674 ops/s
# Warmup Iteration  17: 82706.331 ops/s
# Warmup Iteration  18: 86137.615 ops/s
# Warmup Iteration  19: 84168.164 ops/s
# Warmup Iteration  20: 77347.223 ops/s
# Warmup Iteration  21: 85876.369 ops/s
# Warmup Iteration  22: 85171.949 ops/s
# Warmup Iteration  23: 82869.192 ops/s
# Warmup Iteration  24: 85092.841 ops/s
# Warmup Iteration  25: 81124.930 ops/s
# Warmup Iteration  26: 86277.547 ops/s
# Warmup Iteration  27: 75942.427 ops/s
# Warmup Iteration  28: 84597.298 ops/s
# Warmup Iteration  29: 83948.020 ops/s
# Warmup Iteration  30: 81900.853 ops/s
Iteration   1: 85611.929 ops/s
Iteration   2: 83394.274 ops/s
Iteration   3: 82288.905 ops/s
Iteration   4: 83156.878 ops/s
Iteration   5: 86101.958 ops/s
Iteration   6: 81140.586 ops/s
Iteration   7: 86622.117 ops/s
Iteration   8: 81589.556 ops/s
Iteration   9: 85640.027 ops/s
Iteration  10: 82385.788 ops/s
Iteration  11: 81406.459 ops/s
Iteration  12: 83560.313 ops/s
Iteration  13: 84798.649 ops/s
Iteration  14: 83225.773 ops/s
Iteration  15: 81634.788 ops/s
Iteration  16: 87221.353 ops/s
Iteration  17: 82425.797 ops/s
Iteration  18: 83628.528 ops/s
Iteration  19: 83190.792 ops/s
Iteration  20: 82357.324 ops/s
Iteration  21: 86245.542 ops/s
Iteration  22: 81436.886 ops/s
Iteration  23: 83970.780 ops/s
Iteration  24: 81679.507 ops/s
Iteration  25: 80951.977 ops/s
Iteration  26: 84771.163 ops/s
Iteration  27: 81354.139 ops/s
Iteration  28: 84331.975 ops/s
Iteration  29: 85926.427 ops/s
Iteration  30: 81149.041 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_417._Benchmark.benchmark_Cluster_417":
  83439.974 ±(99.9%) 1263.404 ops/s [Average]
  (min, avg, max) = (80951.977, 83439.974, 87221.353), stdev = 1891.003
  CI (99.9%): [82176.571, 84703.378] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_417._Benchmark.benchmark_Cluster_417  thrpt   30  83439.974 ± 1263.404  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_418._Benchmark.benchmark_Cluster_418$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_418._Benchmark.benchmark_Cluster_418

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8771.690 ops/s
# Warmup Iteration   2: 73771.108 ops/s
# Warmup Iteration   3: 118189.112 ops/s
# Warmup Iteration   4: 130261.599 ops/s
# Warmup Iteration   5: 137255.498 ops/s
# Warmup Iteration   6: 98832.147 ops/s
# Warmup Iteration   7: 137046.591 ops/s
# Warmup Iteration   8: 133455.390 ops/s
# Warmup Iteration   9: 126626.539 ops/s
# Warmup Iteration  10: 135097.592 ops/s
# Warmup Iteration  11: 125202.251 ops/s
# Warmup Iteration  12: 132314.381 ops/s
# Warmup Iteration  13: 127579.387 ops/s
# Warmup Iteration  14: 129406.961 ops/s
# Warmup Iteration  15: 130446.062 ops/s
# Warmup Iteration  16: 130601.708 ops/s
# Warmup Iteration  17: 141737.577 ops/s
# Warmup Iteration  18: 143271.425 ops/s
# Warmup Iteration  19: 133615.840 ops/s
# Warmup Iteration  20: 140344.476 ops/s
# Warmup Iteration  21: 136223.562 ops/s
# Warmup Iteration  22: 137861.798 ops/s
# Warmup Iteration  23: 131559.434 ops/s
# Warmup Iteration  24: 139789.551 ops/s
# Warmup Iteration  25: 140858.215 ops/s
# Warmup Iteration  26: 135346.533 ops/s
# Warmup Iteration  27: 138726.296 ops/s
# Warmup Iteration  28: 138179.824 ops/s
# Warmup Iteration  29: 136564.950 ops/s
# Warmup Iteration  30: 141405.570 ops/s
Iteration   1: 131836.692 ops/s
Iteration   2: 134660.280 ops/s
Iteration   3: 139268.207 ops/s
Iteration   4: 132134.985 ops/s
Iteration   5: 138043.051 ops/s
Iteration   6: 138209.365 ops/s
Iteration   7: 136357.784 ops/s
Iteration   8: 140477.476 ops/s
Iteration   9: 126708.573 ops/s
Iteration  10: 140896.871 ops/s
Iteration  11: 136930.878 ops/s
Iteration  12: 137651.892 ops/s
Iteration  13: 141581.161 ops/s
Iteration  14: 134872.606 ops/s
Iteration  15: 132221.745 ops/s
Iteration  16: 146907.871 ops/s
Iteration  17: 133416.333 ops/s
Iteration  18: 138536.634 ops/s
Iteration  19: 138017.007 ops/s
Iteration  20: 137940.314 ops/s
Iteration  21: 142744.368 ops/s
Iteration  22: 135074.607 ops/s
Iteration  23: 143670.583 ops/s
Iteration  24: 135560.545 ops/s
Iteration  25: 136014.777 ops/s
Iteration  26: 140093.615 ops/s
Iteration  27: 132067.070 ops/s
Iteration  28: 139782.590 ops/s
Iteration  29: 132138.169 ops/s
Iteration  30: 137351.260 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_418._Benchmark.benchmark_Cluster_418":
  137038.910 ±(99.9%) 2803.910 ops/s [Average]
  (min, avg, max) = (126708.573, 137038.910, 146907.871), stdev = 4196.761
  CI (99.9%): [134235.000, 139842.821] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_418._Benchmark.benchmark_Cluster_418  thrpt   30  137038.910 ± 2803.910  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_419._Benchmark.benchmark_Cluster_419$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_419._Benchmark.benchmark_Cluster_419

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 22534.220 ops/s
# Warmup Iteration   2: 89687.818 ops/s
# Warmup Iteration   3: 119283.244 ops/s
# Warmup Iteration   4: 129041.087 ops/s
# Warmup Iteration   5: 145145.901 ops/s
# Warmup Iteration   6: 144704.556 ops/s
# Warmup Iteration   7: 147385.138 ops/s
# Warmup Iteration   8: 143260.861 ops/s
# Warmup Iteration   9: 141204.090 ops/s
# Warmup Iteration  10: 149215.415 ops/s
# Warmup Iteration  11: 149663.289 ops/s
# Warmup Iteration  12: 140384.014 ops/s
# Warmup Iteration  13: 145784.631 ops/s
# Warmup Iteration  14: 141946.813 ops/s
# Warmup Iteration  15: 146719.393 ops/s
# Warmup Iteration  16: 149382.895 ops/s
# Warmup Iteration  17: 148165.978 ops/s
# Warmup Iteration  18: 145269.860 ops/s
# Warmup Iteration  19: 154242.067 ops/s
# Warmup Iteration  20: 144059.128 ops/s
# Warmup Iteration  21: 151824.401 ops/s
# Warmup Iteration  22: 151887.080 ops/s
# Warmup Iteration  23: 151634.794 ops/s
# Warmup Iteration  24: 144296.299 ops/s
# Warmup Iteration  25: 153239.270 ops/s
# Warmup Iteration  26: 114061.414 ops/s
# Warmup Iteration  27: 152907.523 ops/s
# Warmup Iteration  28: 149205.618 ops/s
# Warmup Iteration  29: 152920.457 ops/s
# Warmup Iteration  30: 147619.019 ops/s
Iteration   1: 148189.653 ops/s
Iteration   2: 156638.582 ops/s
Iteration   3: 154153.932 ops/s
Iteration   4: 147688.959 ops/s
Iteration   5: 150481.895 ops/s
Iteration   6: 144613.115 ops/s
Iteration   7: 150540.134 ops/s
Iteration   8: 155875.089 ops/s
Iteration   9: 149801.389 ops/s
Iteration  10: 146149.289 ops/s
Iteration  11: 154983.448 ops/s
Iteration  12: 155790.632 ops/s
Iteration  13: 145459.298 ops/s
Iteration  14: 151835.089 ops/s
Iteration  15: 147106.388 ops/s
Iteration  16: 146962.919 ops/s
Iteration  17: 155273.834 ops/s
Iteration  18: 146235.306 ops/s
Iteration  19: 154567.365 ops/s
Iteration  20: 146471.836 ops/s
Iteration  21: 149350.541 ops/s
Iteration  22: 153035.777 ops/s
Iteration  23: 150655.789 ops/s
Iteration  24: 151034.738 ops/s
Iteration  25: 148826.068 ops/s
Iteration  26: 149052.661 ops/s
Iteration  27: 150834.017 ops/s
Iteration  28: 146428.935 ops/s
Iteration  29: 154629.774 ops/s
Iteration  30: 150136.699 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_419._Benchmark.benchmark_Cluster_419":
  150426.772 ±(99.9%) 2376.642 ops/s [Average]
  (min, avg, max) = (144613.115, 150426.772, 156638.582), stdev = 3557.246
  CI (99.9%): [148050.130, 152803.414] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_419._Benchmark.benchmark_Cluster_419  thrpt   30  150426.772 ± 2376.642  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_42._Benchmark.benchmark_Cluster_42$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_42._Benchmark.benchmark_Cluster_42

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.722 ops/s
# Warmup Iteration   2: 3945.929 ops/s
# Warmup Iteration   3: 15453.879 ops/s
# Warmup Iteration   4: 20835.333 ops/s
# Warmup Iteration   5: 26881.998 ops/s
# Warmup Iteration   6: 29255.246 ops/s
# Warmup Iteration   7: 31544.083 ops/s
# Warmup Iteration   8: 42452.834 ops/s
# Warmup Iteration   9: 38029.667 ops/s
# Warmup Iteration  10: 58644.568 ops/s
# Warmup Iteration  11: 76038.272 ops/s
# Warmup Iteration  12: 94063.165 ops/s
# Warmup Iteration  13: 95934.234 ops/s
# Warmup Iteration  14: 90761.707 ops/s
# Warmup Iteration  15: 93497.204 ops/s
# Warmup Iteration  16: 87528.994 ops/s
# Warmup Iteration  17: 92182.743 ops/s
# Warmup Iteration  18: 95373.411 ops/s
# Warmup Iteration  19: 95225.971 ops/s
# Warmup Iteration  20: 95132.180 ops/s
# Warmup Iteration  21: 90455.869 ops/s
# Warmup Iteration  22: 92346.330 ops/s
# Warmup Iteration  23: 95530.176 ops/s
# Warmup Iteration  24: 92952.959 ops/s
# Warmup Iteration  25: 91003.403 ops/s
# Warmup Iteration  26: 95315.192 ops/s
# Warmup Iteration  27: 98513.742 ops/s
# Warmup Iteration  28: 91390.282 ops/s
# Warmup Iteration  29: 96409.674 ops/s
# Warmup Iteration  30: 91389.424 ops/s
Iteration   1: 97692.653 ops/s
Iteration   2: 95961.073 ops/s
Iteration   3: 93975.796 ops/s
Iteration   4: 94670.399 ops/s
Iteration   5: 91265.236 ops/s
Iteration   6: 95211.864 ops/s
Iteration   7: 89856.002 ops/s
Iteration   8: 91642.966 ops/s
Iteration   9: 96231.385 ops/s
Iteration  10: 93065.176 ops/s
Iteration  11: 97891.157 ops/s
Iteration  12: 91181.251 ops/s
Iteration  13: 96210.050 ops/s
Iteration  14: 94981.115 ops/s
Iteration  15: 97541.628 ops/s
Iteration  16: 91491.659 ops/s
Iteration  17: 97653.429 ops/s
Iteration  18: 90695.244 ops/s
Iteration  19: 95599.367 ops/s
Iteration  20: 90060.018 ops/s
Iteration  21: 94103.730 ops/s
Iteration  22: 98058.015 ops/s
Iteration  23: 92825.555 ops/s
Iteration  24: 94807.582 ops/s
Iteration  25: 92899.216 ops/s
Iteration  26: 93658.791 ops/s
Iteration  27: 93610.461 ops/s
Iteration  28: 95391.206 ops/s
Iteration  29: 79035.782 ops/s
Iteration  30: 93839.306 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_42._Benchmark.benchmark_Cluster_42":
  93703.570 ±(99.9%) 2446.392 ops/s [Average]
  (min, avg, max) = (79035.782, 93703.570, 98058.015), stdev = 3661.645
  CI (99.9%): [91257.178, 96149.962] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_42._Benchmark.benchmark_Cluster_42  thrpt   30  93703.570 ± 2446.392  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_420._Benchmark.benchmark_Cluster_420$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_420._Benchmark.benchmark_Cluster_420

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.692 ops/s
# Warmup Iteration   2: 9222.458 ops/s
# Warmup Iteration   3: 28308.295 ops/s
# Warmup Iteration   4: 36836.241 ops/s
# Warmup Iteration   5: 37086.364 ops/s
# Warmup Iteration   6: 37408.812 ops/s
# Warmup Iteration   7: 60528.778 ops/s
# Warmup Iteration   8: 82297.673 ops/s
# Warmup Iteration   9: 76230.458 ops/s
# Warmup Iteration  10: 76404.978 ops/s
# Warmup Iteration  11: 90525.238 ops/s
# Warmup Iteration  12: 94509.547 ops/s
# Warmup Iteration  13: 91960.006 ops/s
# Warmup Iteration  14: 82117.411 ops/s
# Warmup Iteration  15: 92282.157 ops/s
# Warmup Iteration  16: 94258.183 ops/s
# Warmup Iteration  17: 92505.081 ops/s
# Warmup Iteration  18: 92535.748 ops/s
# Warmup Iteration  19: 92150.245 ops/s
# Warmup Iteration  20: 88277.643 ops/s
# Warmup Iteration  21: 86748.488 ops/s
# Warmup Iteration  22: 84278.680 ops/s
# Warmup Iteration  23: 93428.972 ops/s
# Warmup Iteration  24: 96143.944 ops/s
# Warmup Iteration  25: 93047.484 ops/s
# Warmup Iteration  26: 83775.527 ops/s
# Warmup Iteration  27: 91022.617 ops/s
# Warmup Iteration  28: 86923.364 ops/s
# Warmup Iteration  29: 87173.211 ops/s
# Warmup Iteration  30: 90493.577 ops/s
Iteration   1: 92051.787 ops/s
Iteration   2: 89782.724 ops/s
Iteration   3: 96303.360 ops/s
Iteration   4: 93153.651 ops/s
Iteration   5: 81392.263 ops/s
Iteration   6: 97489.169 ops/s
Iteration   7: 99457.269 ops/s
Iteration   8: 87774.680 ops/s
Iteration   9: 77411.645 ops/s
Iteration  10: 91746.470 ops/s
Iteration  11: 92783.052 ops/s
Iteration  12: 91358.152 ops/s
Iteration  13: 93528.639 ops/s
Iteration  14: 91884.176 ops/s
Iteration  15: 93178.110 ops/s
Iteration  16: 92252.366 ops/s
Iteration  17: 89764.941 ops/s
Iteration  18: 81724.161 ops/s
Iteration  19: 93821.198 ops/s
Iteration  20: 84493.607 ops/s
Iteration  21: 81638.624 ops/s
Iteration  22: 85167.768 ops/s
Iteration  23: 87553.091 ops/s
Iteration  24: 85848.598 ops/s
Iteration  25: 93764.175 ops/s
Iteration  26: 98456.776 ops/s
Iteration  27: 93891.501 ops/s
Iteration  28: 92540.758 ops/s
Iteration  29: 89647.844 ops/s
Iteration  30: 88398.968 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_420._Benchmark.benchmark_Cluster_420":
  90275.317 ±(99.9%) 3549.311 ops/s [Average]
  (min, avg, max) = (77411.645, 90275.317, 99457.269), stdev = 5312.442
  CI (99.9%): [86726.006, 93824.629] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_420._Benchmark.benchmark_Cluster_420  thrpt   30  90275.317 ± 3549.311  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_421._Benchmark.benchmark_Cluster_421$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_421._Benchmark.benchmark_Cluster_421

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5391.774 ops/s
# Warmup Iteration   2: 22294.775 ops/s
# Warmup Iteration   3: 21338.233 ops/s
# Warmup Iteration   4: 27490.970 ops/s
# Warmup Iteration   5: 17949.789 ops/s
# Warmup Iteration   6: 28936.546 ops/s
# Warmup Iteration   7: 19762.968 ops/s
# Warmup Iteration   8: 19010.905 ops/s
# Warmup Iteration   9: 20297.389 ops/s
# Warmup Iteration  10: 19479.933 ops/s
# Warmup Iteration  11: 18877.125 ops/s
# Warmup Iteration  12: 19862.590 ops/s
# Warmup Iteration  13: 19213.709 ops/s
# Warmup Iteration  14: 19435.213 ops/s
# Warmup Iteration  15: 22057.571 ops/s
# Warmup Iteration  16: 23287.018 ops/s
# Warmup Iteration  17: 19107.263 ops/s
# Warmup Iteration  18: 19379.475 ops/s
# Warmup Iteration  19: 19449.071 ops/s
# Warmup Iteration  20: 21923.941 ops/s
# Warmup Iteration  21: 19305.999 ops/s
# Warmup Iteration  22: 19812.326 ops/s
# Warmup Iteration  23: 19190.071 ops/s
# Warmup Iteration  24: 18902.678 ops/s
# Warmup Iteration  25: 19811.124 ops/s
# Warmup Iteration  26: 18898.156 ops/s
# Warmup Iteration  27: 19863.469 ops/s
# Warmup Iteration  28: 19423.457 ops/s
# Warmup Iteration  29: 19898.328 ops/s
# Warmup Iteration  30: 19153.962 ops/s
Iteration   1: 19482.991 ops/s
Iteration   2: 19004.459 ops/s
Iteration   3: 19412.574 ops/s
Iteration   4: 19464.041 ops/s
Iteration   5: 19150.880 ops/s
Iteration   6: 19018.571 ops/s
Iteration   7: 19927.029 ops/s
Iteration   8: 19580.654 ops/s
Iteration   9: 19052.529 ops/s
Iteration  10: 19893.178 ops/s
Iteration  11: 19539.923 ops/s
Iteration  12: 18858.101 ops/s
Iteration  13: 19521.517 ops/s
Iteration  14: 19549.472 ops/s
Iteration  15: 19128.752 ops/s
Iteration  16: 20166.240 ops/s
Iteration  17: 19635.287 ops/s
Iteration  18: 18836.959 ops/s
Iteration  19: 19822.708 ops/s
Iteration  20: 19616.821 ops/s
Iteration  21: 19629.203 ops/s
Iteration  22: 21694.658 ops/s
Iteration  23: 19899.339 ops/s
Iteration  24: 19092.293 ops/s
Iteration  25: 19562.401 ops/s
Iteration  26: 19666.243 ops/s
Iteration  27: 19589.871 ops/s
Iteration  28: 19030.208 ops/s
Iteration  29: 19537.797 ops/s
Iteration  30: 19158.829 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_421._Benchmark.benchmark_Cluster_421":
  19517.451 ±(99.9%) 356.437 ops/s [Average]
  (min, avg, max) = (18836.959, 19517.451, 21694.658), stdev = 533.498
  CI (99.9%): [19161.014, 19873.888] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_421._Benchmark.benchmark_Cluster_421  thrpt   30  19517.451 ± 356.437  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_422._Benchmark.benchmark_Cluster_422$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_422._Benchmark.benchmark_Cluster_422

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.733 ops/s
# Warmup Iteration   2: 2676.487 ops/s
# Warmup Iteration   3: 17583.807 ops/s
# Warmup Iteration   4: 21428.970 ops/s
# Warmup Iteration   5: 23737.367 ops/s
# Warmup Iteration   6: 23018.257 ops/s
# Warmup Iteration   7: 22893.487 ops/s
# Warmup Iteration   8: 24378.518 ops/s
# Warmup Iteration   9: 26773.285 ops/s
# Warmup Iteration  10: 23337.140 ops/s
# Warmup Iteration  11: 28580.965 ops/s
# Warmup Iteration  12: 58993.253 ops/s
# Warmup Iteration  13: 66495.369 ops/s
# Warmup Iteration  14: 73130.772 ops/s
# Warmup Iteration  15: 68304.457 ops/s
# Warmup Iteration  16: 66120.687 ops/s
# Warmup Iteration  17: 61160.287 ops/s
# Warmup Iteration  18: 59844.566 ops/s
# Warmup Iteration  19: 69297.019 ops/s
# Warmup Iteration  20: 61426.993 ops/s
# Warmup Iteration  21: 71228.834 ops/s
# Warmup Iteration  22: 71061.860 ops/s
# Warmup Iteration  23: 71016.094 ops/s
# Warmup Iteration  24: 67530.958 ops/s
# Warmup Iteration  25: 64010.907 ops/s
# Warmup Iteration  26: 66963.413 ops/s
# Warmup Iteration  27: 68176.511 ops/s
# Warmup Iteration  28: 65451.001 ops/s
# Warmup Iteration  29: 70015.036 ops/s
# Warmup Iteration  30: 70157.087 ops/s
Iteration   1: 70974.252 ops/s
Iteration   2: 62804.061 ops/s
Iteration   3: 66036.756 ops/s
Iteration   4: 70066.045 ops/s
Iteration   5: 71286.542 ops/s
Iteration   6: 66611.122 ops/s
Iteration   7: 67071.746 ops/s
Iteration   8: 62676.203 ops/s
Iteration   9: 65884.353 ops/s
Iteration  10: 61021.491 ops/s
Iteration  11: 76068.839 ops/s
Iteration  12: 66802.459 ops/s
Iteration  13: 68153.058 ops/s
Iteration  14: 71624.287 ops/s
Iteration  15: 66895.572 ops/s
Iteration  16: 71858.076 ops/s
Iteration  17: 68074.302 ops/s
Iteration  18: 72002.020 ops/s
Iteration  19: 66626.567 ops/s
Iteration  20: 68010.693 ops/s
Iteration  21: 75043.534 ops/s
Iteration  22: 65055.270 ops/s
Iteration  23: 59466.555 ops/s
Iteration  24: 61736.130 ops/s
Iteration  25: 61006.639 ops/s
Iteration  26: 68348.076 ops/s
Iteration  27: 66522.794 ops/s
Iteration  28: 62558.514 ops/s
Iteration  29: 70358.980 ops/s
Iteration  30: 69872.253 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_422._Benchmark.benchmark_Cluster_422":
  67350.573 ±(99.9%) 2775.201 ops/s [Average]
  (min, avg, max) = (59466.555, 67350.573, 76068.839), stdev = 4153.790
  CI (99.9%): [64575.372, 70125.774] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_422._Benchmark.benchmark_Cluster_422  thrpt   30  67350.573 ± 2775.201  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_423._Benchmark.benchmark_Cluster_423$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_423._Benchmark.benchmark_Cluster_423

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 22514.672 ops/s
# Warmup Iteration   2: 46736.653 ops/s
# Warmup Iteration   3: 92874.839 ops/s
# Warmup Iteration   4: 99215.645 ops/s
# Warmup Iteration   5: 114652.313 ops/s
# Warmup Iteration   6: 104148.803 ops/s
# Warmup Iteration   7: 110857.759 ops/s
# Warmup Iteration   8: 108942.626 ops/s
# Warmup Iteration   9: 116531.807 ops/s
# Warmup Iteration  10: 107498.133 ops/s
# Warmup Iteration  11: 109700.848 ops/s
# Warmup Iteration  12: 115376.310 ops/s
# Warmup Iteration  13: 113703.783 ops/s
# Warmup Iteration  14: 109190.803 ops/s
# Warmup Iteration  15: 113081.719 ops/s
# Warmup Iteration  16: 110098.115 ops/s
# Warmup Iteration  17: 118187.138 ops/s
# Warmup Iteration  18: 115431.166 ops/s
# Warmup Iteration  19: 118025.278 ops/s
# Warmup Iteration  20: 115768.340 ops/s
# Warmup Iteration  21: 118722.379 ops/s
# Warmup Iteration  22: 117593.360 ops/s
# Warmup Iteration  23: 115105.498 ops/s
# Warmup Iteration  24: 113136.614 ops/s
# Warmup Iteration  25: 114871.671 ops/s
# Warmup Iteration  26: 114669.425 ops/s
# Warmup Iteration  27: 118574.819 ops/s
# Warmup Iteration  28: 114866.227 ops/s
# Warmup Iteration  29: 117845.813 ops/s
# Warmup Iteration  30: 117247.485 ops/s
Iteration   1: 115217.874 ops/s
Iteration   2: 120483.620 ops/s
Iteration   3: 116092.860 ops/s
Iteration   4: 119051.251 ops/s
Iteration   5: 119319.857 ops/s
Iteration   6: 114802.891 ops/s
Iteration   7: 122219.111 ops/s
Iteration   8: 115828.992 ops/s
Iteration   9: 116545.791 ops/s
Iteration  10: 119261.486 ops/s
Iteration  11: 116337.915 ops/s
Iteration  12: 124332.975 ops/s
Iteration  13: 118616.994 ops/s
Iteration  14: 116449.480 ops/s
Iteration  15: 117841.980 ops/s
Iteration  16: 120028.766 ops/s
Iteration  17: 115116.504 ops/s
Iteration  18: 117763.189 ops/s
Iteration  19: 115848.654 ops/s
Iteration  20: 119253.859 ops/s
Iteration  21: 116862.122 ops/s
Iteration  22: 118644.049 ops/s
Iteration  23: 117201.315 ops/s
Iteration  24: 119905.954 ops/s
Iteration  25: 113849.834 ops/s
Iteration  26: 119463.306 ops/s
Iteration  27: 116993.167 ops/s
Iteration  28: 113864.529 ops/s
Iteration  29: 117404.498 ops/s
Iteration  30: 119769.723 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_423._Benchmark.benchmark_Cluster_423":
  117812.418 ±(99.9%) 1603.723 ops/s [Average]
  (min, avg, max) = (113849.834, 117812.418, 124332.975), stdev = 2400.377
  CI (99.9%): [116208.695, 119416.141] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_423._Benchmark.benchmark_Cluster_423  thrpt   30  117812.418 ± 1603.723  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_424._Benchmark.benchmark_Cluster_424$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_424._Benchmark.benchmark_Cluster_424

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18164.017 ops/s
# Warmup Iteration   2: 41243.686 ops/s
# Warmup Iteration   3: 34339.225 ops/s
# Warmup Iteration   4: 110167.799 ops/s
# Warmup Iteration   5: 113376.684 ops/s
# Warmup Iteration   6: 109325.932 ops/s
# Warmup Iteration   7: 110857.120 ops/s
# Warmup Iteration   8: 110119.375 ops/s
# Warmup Iteration   9: 117816.330 ops/s
# Warmup Iteration  10: 109835.166 ops/s
# Warmup Iteration  11: 118888.649 ops/s
# Warmup Iteration  12: 121257.074 ops/s
# Warmup Iteration  13: 116846.642 ops/s
# Warmup Iteration  14: 119987.188 ops/s
# Warmup Iteration  15: 119872.884 ops/s
# Warmup Iteration  16: 112073.022 ops/s
# Warmup Iteration  17: 128130.503 ops/s
# Warmup Iteration  18: 125502.845 ops/s
# Warmup Iteration  19: 125115.815 ops/s
# Warmup Iteration  20: 125046.117 ops/s
# Warmup Iteration  21: 124656.150 ops/s
# Warmup Iteration  22: 127448.973 ops/s
# Warmup Iteration  23: 120240.315 ops/s
# Warmup Iteration  24: 125316.199 ops/s
# Warmup Iteration  25: 128942.958 ops/s
# Warmup Iteration  26: 124018.579 ops/s
# Warmup Iteration  27: 121129.507 ops/s
# Warmup Iteration  28: 126266.750 ops/s
# Warmup Iteration  29: 123121.799 ops/s
# Warmup Iteration  30: 126937.968 ops/s
Iteration   1: 120447.776 ops/s
Iteration   2: 124649.157 ops/s
Iteration   3: 129557.389 ops/s
Iteration   4: 121845.253 ops/s
Iteration   5: 122342.712 ops/s
Iteration   6: 129304.231 ops/s
Iteration   7: 120620.254 ops/s
Iteration   8: 124449.841 ops/s
Iteration   9: 130034.209 ops/s
Iteration  10: 121377.667 ops/s
Iteration  11: 127669.708 ops/s
Iteration  12: 100255.696 ops/s
Iteration  13: 126433.607 ops/s
Iteration  14: 123564.290 ops/s
Iteration  15: 128638.121 ops/s
Iteration  16: 122457.624 ops/s
Iteration  17: 127440.536 ops/s
Iteration  18: 120826.400 ops/s
Iteration  19: 124505.598 ops/s
Iteration  20: 123390.671 ops/s
Iteration  21: 123212.747 ops/s
Iteration  22: 129717.246 ops/s
Iteration  23: 122524.206 ops/s
Iteration  24: 125429.570 ops/s
Iteration  25: 125720.866 ops/s
Iteration  26: 124918.089 ops/s
Iteration  27: 123250.457 ops/s
Iteration  28: 123776.918 ops/s
Iteration  29: 127778.996 ops/s
Iteration  30: 127740.213 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_424._Benchmark.benchmark_Cluster_424":
  124129.335 ±(99.9%) 3582.619 ops/s [Average]
  (min, avg, max) = (100255.696, 124129.335, 130034.209), stdev = 5362.296
  CI (99.9%): [120546.716, 127711.954] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_424._Benchmark.benchmark_Cluster_424  thrpt   30  124129.335 ± 3582.619  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_425._Benchmark.benchmark_Cluster_425$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_425._Benchmark.benchmark_Cluster_425

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14535.383 ops/s
# Warmup Iteration   2: 45872.699 ops/s
# Warmup Iteration   3: 72910.514 ops/s
# Warmup Iteration   4: 130984.517 ops/s
# Warmup Iteration   5: 130588.763 ops/s
# Warmup Iteration   6: 130112.343 ops/s
# Warmup Iteration   7: 129351.991 ops/s
# Warmup Iteration   8: 135818.630 ops/s
# Warmup Iteration   9: 134347.433 ops/s
# Warmup Iteration  10: 126339.056 ops/s
# Warmup Iteration  11: 131486.053 ops/s
# Warmup Iteration  12: 125693.612 ops/s
# Warmup Iteration  13: 132956.572 ops/s
# Warmup Iteration  14: 136436.396 ops/s
# Warmup Iteration  15: 129927.217 ops/s
# Warmup Iteration  16: 131887.716 ops/s
# Warmup Iteration  17: 136460.648 ops/s
# Warmup Iteration  18: 137676.552 ops/s
# Warmup Iteration  19: 144863.147 ops/s
# Warmup Iteration  20: 139048.707 ops/s
# Warmup Iteration  21: 137176.176 ops/s
# Warmup Iteration  22: 141275.483 ops/s
# Warmup Iteration  23: 139245.557 ops/s
# Warmup Iteration  24: 144554.421 ops/s
# Warmup Iteration  25: 143711.567 ops/s
# Warmup Iteration  26: 139418.358 ops/s
# Warmup Iteration  27: 141537.568 ops/s
# Warmup Iteration  28: 135052.341 ops/s
# Warmup Iteration  29: 143447.045 ops/s
# Warmup Iteration  30: 142654.992 ops/s
Iteration   1: 147180.632 ops/s
Iteration   2: 143766.934 ops/s
Iteration   3: 140582.631 ops/s
Iteration   4: 144468.115 ops/s
Iteration   5: 144272.903 ops/s
Iteration   6: 138588.001 ops/s
Iteration   7: 142064.411 ops/s
Iteration   8: 145467.852 ops/s
Iteration   9: 140764.212 ops/s
Iteration  10: 137751.498 ops/s
Iteration  11: 143861.819 ops/s
Iteration  12: 138992.479 ops/s
Iteration  13: 141654.461 ops/s
Iteration  14: 143734.709 ops/s
Iteration  15: 138770.751 ops/s
Iteration  16: 138499.345 ops/s
Iteration  17: 145900.272 ops/s
Iteration  18: 136803.544 ops/s
Iteration  19: 142454.980 ops/s
Iteration  20: 140234.840 ops/s
Iteration  21: 141990.743 ops/s
Iteration  22: 141703.502 ops/s
Iteration  23: 143868.195 ops/s
Iteration  24: 145543.517 ops/s
Iteration  25: 135154.714 ops/s
Iteration  26: 139130.297 ops/s
Iteration  27: 143447.857 ops/s
Iteration  28: 140194.049 ops/s
Iteration  29: 142792.762 ops/s
Iteration  30: 142770.850 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_425._Benchmark.benchmark_Cluster_425":
  141747.029 ±(99.9%) 1946.783 ops/s [Average]
  (min, avg, max) = (135154.714, 141747.029, 147180.632), stdev = 2913.854
  CI (99.9%): [139800.246, 143693.812] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_425._Benchmark.benchmark_Cluster_425  thrpt   30  141747.029 ± 1946.783  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_426._Benchmark.benchmark_Cluster_426$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_426._Benchmark.benchmark_Cluster_426

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15584.352 ops/s
# Warmup Iteration   2: 67661.258 ops/s
# Warmup Iteration   3: 101829.396 ops/s
# Warmup Iteration   4: 97146.232 ops/s
# Warmup Iteration   5: 98557.810 ops/s
# Warmup Iteration   6: 109603.254 ops/s
# Warmup Iteration   7: 105047.974 ops/s
# Warmup Iteration   8: 111983.503 ops/s
# Warmup Iteration   9: 102868.110 ops/s
# Warmup Iteration  10: 109994.292 ops/s
# Warmup Iteration  11: 101878.610 ops/s
# Warmup Iteration  12: 108670.506 ops/s
# Warmup Iteration  13: 110250.187 ops/s
# Warmup Iteration  14: 103447.764 ops/s
# Warmup Iteration  15: 108730.463 ops/s
# Warmup Iteration  16: 110883.839 ops/s
# Warmup Iteration  17: 111162.101 ops/s
# Warmup Iteration  18: 108445.466 ops/s
# Warmup Iteration  19: 113497.614 ops/s
# Warmup Iteration  20: 110248.364 ops/s
# Warmup Iteration  21: 109600.652 ops/s
# Warmup Iteration  22: 111634.401 ops/s
# Warmup Iteration  23: 112311.229 ops/s
# Warmup Iteration  24: 113534.891 ops/s
# Warmup Iteration  25: 110125.725 ops/s
# Warmup Iteration  26: 108924.906 ops/s
# Warmup Iteration  27: 112904.341 ops/s
# Warmup Iteration  28: 108531.468 ops/s
# Warmup Iteration  29: 110591.800 ops/s
# Warmup Iteration  30: 113061.086 ops/s
Iteration   1: 109600.803 ops/s
Iteration   2: 107432.667 ops/s
Iteration   3: 114015.212 ops/s
Iteration   4: 107157.547 ops/s
Iteration   5: 114121.549 ops/s
Iteration   6: 97662.226 ops/s
Iteration   7: 101531.953 ops/s
Iteration   8: 116612.762 ops/s
Iteration   9: 107847.584 ops/s
Iteration  10: 115958.991 ops/s
Iteration  11: 106416.302 ops/s
Iteration  12: 113154.560 ops/s
Iteration  13: 112833.737 ops/s
Iteration  14: 113132.273 ops/s
Iteration  15: 110612.908 ops/s
Iteration  16: 114093.572 ops/s
Iteration  17: 108714.792 ops/s
Iteration  18: 110039.759 ops/s
Iteration  19: 114523.285 ops/s
Iteration  20: 106028.395 ops/s
Iteration  21: 114391.996 ops/s
Iteration  22: 108497.334 ops/s
Iteration  23: 112027.106 ops/s
Iteration  24: 117086.809 ops/s
Iteration  25: 107091.426 ops/s
Iteration  26: 114650.274 ops/s
Iteration  27: 109184.490 ops/s
Iteration  28: 111729.157 ops/s
Iteration  29: 113424.641 ops/s
Iteration  30: 108720.398 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_426._Benchmark.benchmark_Cluster_426":
  110609.817 ±(99.9%) 2944.361 ops/s [Average]
  (min, avg, max) = (97662.226, 110609.817, 117086.809), stdev = 4406.981
  CI (99.9%): [107665.456, 113554.178] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_426._Benchmark.benchmark_Cluster_426  thrpt   30  110609.817 ± 2944.361  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_427._Benchmark.benchmark_Cluster_427$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_427._Benchmark.benchmark_Cluster_427

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19225.973 ops/s
# Warmup Iteration   2: 42629.492 ops/s
# Warmup Iteration   3: 63306.076 ops/s
# Warmup Iteration   4: 87403.402 ops/s
# Warmup Iteration   5: 103536.931 ops/s
# Warmup Iteration   6: 91457.076 ops/s
# Warmup Iteration   7: 101800.898 ops/s
# Warmup Iteration   8: 95743.143 ops/s
# Warmup Iteration   9: 107325.997 ops/s
# Warmup Iteration  10: 100182.225 ops/s
# Warmup Iteration  11: 103388.306 ops/s
# Warmup Iteration  12: 104239.076 ops/s
# Warmup Iteration  13: 103185.825 ops/s
# Warmup Iteration  14: 107123.304 ops/s
# Warmup Iteration  15: 101142.005 ops/s
# Warmup Iteration  16: 104026.161 ops/s
# Warmup Iteration  17: 111927.815 ops/s
# Warmup Iteration  18: 106462.733 ops/s
# Warmup Iteration  19: 111964.595 ops/s
# Warmup Iteration  20: 111275.284 ops/s
# Warmup Iteration  21: 106429.598 ops/s
# Warmup Iteration  22: 111424.338 ops/s
# Warmup Iteration  23: 108157.287 ops/s
# Warmup Iteration  24: 107350.096 ops/s
# Warmup Iteration  25: 105232.567 ops/s
# Warmup Iteration  26: 110911.515 ops/s
# Warmup Iteration  27: 112699.385 ops/s
# Warmup Iteration  28: 105381.617 ops/s
# Warmup Iteration  29: 110567.389 ops/s
# Warmup Iteration  30: 107056.569 ops/s
Iteration   1: 107066.817 ops/s
Iteration   2: 111003.976 ops/s
Iteration   3: 106963.131 ops/s
Iteration   4: 109070.764 ops/s
Iteration   5: 108452.687 ops/s
Iteration   6: 104164.432 ops/s
Iteration   7: 109935.924 ops/s
Iteration   8: 106628.924 ops/s
Iteration   9: 108661.751 ops/s
Iteration  10: 111815.560 ops/s
Iteration  11: 104286.799 ops/s
Iteration  12: 110782.787 ops/s
Iteration  13: 107719.185 ops/s
Iteration  14: 107908.927 ops/s
Iteration  15: 109425.793 ops/s
Iteration  16: 109198.393 ops/s
Iteration  17: 107215.459 ops/s
Iteration  18: 107420.805 ops/s
Iteration  19: 111148.138 ops/s
Iteration  20: 108063.544 ops/s
Iteration  21: 108805.517 ops/s
Iteration  22: 104710.646 ops/s
Iteration  23: 108433.819 ops/s
Iteration  24: 109943.764 ops/s
Iteration  25: 107550.357 ops/s
Iteration  26: 78771.234 ops/s
Iteration  27: 111917.250 ops/s
Iteration  28: 106177.987 ops/s
Iteration  29: 106940.894 ops/s
Iteration  30: 107967.937 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_427._Benchmark.benchmark_Cluster_427":
  107271.774 ±(99.9%) 3838.912 ops/s [Average]
  (min, avg, max) = (78771.234, 107271.774, 111917.250), stdev = 5745.903
  CI (99.9%): [103432.862, 111110.685] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_427._Benchmark.benchmark_Cluster_427  thrpt   30  107271.774 ± 3838.912  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_428._Benchmark.benchmark_Cluster_428$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_428._Benchmark.benchmark_Cluster_428

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11591.059 ops/s
# Warmup Iteration   2: 39088.630 ops/s
# Warmup Iteration   3: 96119.895 ops/s
# Warmup Iteration   4: 98667.536 ops/s
# Warmup Iteration   5: 110498.897 ops/s
# Warmup Iteration   6: 116014.480 ops/s
# Warmup Iteration   7: 106582.478 ops/s
# Warmup Iteration   8: 120444.158 ops/s
# Warmup Iteration   9: 116711.662 ops/s
# Warmup Iteration  10: 118541.839 ops/s
# Warmup Iteration  11: 117660.140 ops/s
# Warmup Iteration  12: 118741.103 ops/s
# Warmup Iteration  13: 122401.911 ops/s
# Warmup Iteration  14: 117609.642 ops/s
# Warmup Iteration  15: 120247.039 ops/s
# Warmup Iteration  16: 115799.819 ops/s
# Warmup Iteration  17: 125269.983 ops/s
# Warmup Iteration  18: 119928.156 ops/s
# Warmup Iteration  19: 122605.650 ops/s
# Warmup Iteration  20: 121688.856 ops/s
# Warmup Iteration  21: 120082.323 ops/s
# Warmup Iteration  22: 122987.314 ops/s
# Warmup Iteration  23: 120566.341 ops/s
# Warmup Iteration  24: 118897.141 ops/s
# Warmup Iteration  25: 124602.985 ops/s
# Warmup Iteration  26: 118752.204 ops/s
# Warmup Iteration  27: 122128.444 ops/s
# Warmup Iteration  28: 119266.278 ops/s
# Warmup Iteration  29: 124755.909 ops/s
# Warmup Iteration  30: 125965.216 ops/s
Iteration   1: 120016.286 ops/s
Iteration   2: 125611.424 ops/s
Iteration   3: 123554.756 ops/s
Iteration   4: 120812.770 ops/s
Iteration   5: 125343.502 ops/s
Iteration   6: 122535.288 ops/s
Iteration   7: 121332.012 ops/s
Iteration   8: 123856.739 ops/s
Iteration   9: 119049.439 ops/s
Iteration  10: 123807.168 ops/s
Iteration  11: 125045.140 ops/s
Iteration  12: 121677.253 ops/s
Iteration  13: 125545.106 ops/s
Iteration  14: 118373.077 ops/s
Iteration  15: 119927.390 ops/s
Iteration  16: 123898.094 ops/s
Iteration  17: 121740.985 ops/s
Iteration  18: 120618.681 ops/s
Iteration  19: 118776.939 ops/s
Iteration  20: 120012.412 ops/s
Iteration  21: 122789.548 ops/s
Iteration  22: 126993.119 ops/s
Iteration  23: 118692.512 ops/s
Iteration  24: 125863.364 ops/s
Iteration  25: 118394.116 ops/s
Iteration  26: 121222.826 ops/s
Iteration  27: 125727.012 ops/s
Iteration  28: 119842.779 ops/s
Iteration  29: 123689.386 ops/s
Iteration  30: 127363.212 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_428._Benchmark.benchmark_Cluster_428":
  122403.744 ±(99.9%) 1830.732 ops/s [Average]
  (min, avg, max) = (118373.077, 122403.744, 127363.212), stdev = 2740.154
  CI (99.9%): [120573.012, 124234.477] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_428._Benchmark.benchmark_Cluster_428  thrpt   30  122403.744 ± 1830.732  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_429._Benchmark.benchmark_Cluster_429$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_429._Benchmark.benchmark_Cluster_429

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 991.941 ops/s
# Warmup Iteration   2: 13513.156 ops/s
# Warmup Iteration   3: 23120.661 ops/s
# Warmup Iteration   4: 43157.135 ops/s
# Warmup Iteration   5: 51308.353 ops/s
# Warmup Iteration   6: 90694.118 ops/s
# Warmup Iteration   7: 107573.459 ops/s
# Warmup Iteration   8: 98903.769 ops/s
# Warmup Iteration   9: 107484.758 ops/s
# Warmup Iteration  10: 103076.442 ops/s
# Warmup Iteration  11: 99677.996 ops/s
# Warmup Iteration  12: 107352.868 ops/s
# Warmup Iteration  13: 101178.021 ops/s
# Warmup Iteration  14: 104776.745 ops/s
# Warmup Iteration  15: 102532.698 ops/s
# Warmup Iteration  16: 104008.069 ops/s
# Warmup Iteration  17: 102609.976 ops/s
# Warmup Iteration  18: 104461.288 ops/s
# Warmup Iteration  19: 109441.557 ops/s
# Warmup Iteration  20: 106792.801 ops/s
# Warmup Iteration  21: 102360.572 ops/s
# Warmup Iteration  22: 107576.650 ops/s
# Warmup Iteration  23: 104263.107 ops/s
# Warmup Iteration  24: 100713.660 ops/s
# Warmup Iteration  25: 108305.012 ops/s
# Warmup Iteration  26: 104095.098 ops/s
# Warmup Iteration  27: 106399.219 ops/s
# Warmup Iteration  28: 82487.841 ops/s
# Warmup Iteration  29: 104114.093 ops/s
# Warmup Iteration  30: 106798.097 ops/s
Iteration   1: 96572.078 ops/s
Iteration   2: 104606.627 ops/s
Iteration   3: 103103.983 ops/s
Iteration   4: 109862.777 ops/s
Iteration   5: 107978.682 ops/s
Iteration   6: 104631.328 ops/s
Iteration   7: 108367.183 ops/s
Iteration   8: 106985.801 ops/s
Iteration   9: 109026.483 ops/s
Iteration  10: 109304.428 ops/s
Iteration  11: 104561.356 ops/s
Iteration  12: 109161.085 ops/s
Iteration  13: 105407.077 ops/s
Iteration  14: 108789.772 ops/s
Iteration  15: 106281.878 ops/s
Iteration  16: 107306.589 ops/s
Iteration  17: 105598.635 ops/s
Iteration  18: 109640.093 ops/s
Iteration  19: 104511.048 ops/s
Iteration  20: 107232.071 ops/s
Iteration  21: 106015.603 ops/s
Iteration  22: 106179.489 ops/s
Iteration  23: 106874.702 ops/s
Iteration  24: 105096.892 ops/s
Iteration  25: 111039.184 ops/s
Iteration  26: 104713.738 ops/s
Iteration  27: 107993.757 ops/s
Iteration  28: 110540.536 ops/s
Iteration  29: 111083.480 ops/s
Iteration  30: 103759.764 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_429._Benchmark.benchmark_Cluster_429":
  106740.871 ±(99.9%) 1974.760 ops/s [Average]
  (min, avg, max) = (96572.078, 106740.871, 111083.480), stdev = 2955.729
  CI (99.9%): [104766.110, 108715.631] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_429._Benchmark.benchmark_Cluster_429  thrpt   30  106740.871 ± 1974.760  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_43._Benchmark.benchmark_Cluster_43$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_43._Benchmark.benchmark_Cluster_43

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.688 ops/s
# Warmup Iteration   2: 5495.638 ops/s
# Warmup Iteration   3: 21657.061 ops/s
# Warmup Iteration   4: 35701.139 ops/s
# Warmup Iteration   5: 35849.097 ops/s
# Warmup Iteration   6: 50174.922 ops/s
# Warmup Iteration   7: 61297.656 ops/s
# Warmup Iteration   8: 109901.250 ops/s
# Warmup Iteration   9: 118079.182 ops/s
# Warmup Iteration  10: 114210.257 ops/s
# Warmup Iteration  11: 117979.322 ops/s
# Warmup Iteration  12: 114615.325 ops/s
# Warmup Iteration  13: 115031.887 ops/s
# Warmup Iteration  14: 123188.921 ops/s
# Warmup Iteration  15: 114826.754 ops/s
# Warmup Iteration  16: 120684.321 ops/s
# Warmup Iteration  17: 122618.693 ops/s
# Warmup Iteration  18: 116263.648 ops/s
# Warmup Iteration  19: 116681.764 ops/s
# Warmup Iteration  20: 119958.513 ops/s
# Warmup Iteration  21: 113355.740 ops/s
# Warmup Iteration  22: 114456.919 ops/s
# Warmup Iteration  23: 119745.818 ops/s
# Warmup Iteration  24: 115070.378 ops/s
# Warmup Iteration  25: 118338.490 ops/s
# Warmup Iteration  26: 107986.494 ops/s
# Warmup Iteration  27: 112824.847 ops/s
# Warmup Iteration  28: 112948.378 ops/s
# Warmup Iteration  29: 122780.972 ops/s
# Warmup Iteration  30: 117112.889 ops/s
Iteration   1: 118949.802 ops/s
Iteration   2: 122683.993 ops/s
Iteration   3: 118182.392 ops/s
Iteration   4: 121757.939 ops/s
Iteration   5: 118776.119 ops/s
Iteration   6: 116109.997 ops/s
Iteration   7: 121904.587 ops/s
Iteration   8: 119552.488 ops/s
Iteration   9: 120790.636 ops/s
Iteration  10: 117239.097 ops/s
Iteration  11: 119180.782 ops/s
Iteration  12: 122208.690 ops/s
Iteration  13: 118429.124 ops/s
Iteration  14: 120241.479 ops/s
Iteration  15: 119889.461 ops/s
Iteration  16: 118256.894 ops/s
Iteration  17: 123150.441 ops/s
Iteration  18: 119011.198 ops/s
Iteration  19: 119729.804 ops/s
Iteration  20: 120650.791 ops/s
Iteration  21: 117189.071 ops/s
Iteration  22: 118784.933 ops/s
Iteration  23: 123666.135 ops/s
Iteration  24: 117215.260 ops/s
Iteration  25: 123140.974 ops/s
Iteration  26: 120797.899 ops/s
Iteration  27: 118910.324 ops/s
Iteration  28: 122776.906 ops/s
Iteration  29: 118645.402 ops/s
Iteration  30: 118816.083 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_43._Benchmark.benchmark_Cluster_43":
  119887.957 ±(99.9%) 1352.062 ops/s [Average]
  (min, avg, max) = (116109.997, 119887.957, 123666.135), stdev = 2023.702
  CI (99.9%): [118535.895, 121240.018] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_43._Benchmark.benchmark_Cluster_43  thrpt   30  119887.957 ± 1352.062  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_430._Benchmark.benchmark_Cluster_430$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_430._Benchmark.benchmark_Cluster_430

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.703 ops/s
# Warmup Iteration   2: 1691.729 ops/s
# Warmup Iteration   3: 4011.128 ops/s
# Warmup Iteration   4: 6865.614 ops/s
# Warmup Iteration   5: 15542.922 ops/s
# Warmup Iteration   6: 11762.029 ops/s
# Warmup Iteration   7: 14227.861 ops/s
# Warmup Iteration   8: 11148.230 ops/s
# Warmup Iteration   9: 18353.266 ops/s
# Warmup Iteration  10: 24160.994 ops/s
# Warmup Iteration  11: 17139.726 ops/s
# Warmup Iteration  12: 33832.060 ops/s
# Warmup Iteration  13: 29482.033 ops/s
# Warmup Iteration  14: 30006.850 ops/s
# Warmup Iteration  15: 34540.169 ops/s
# Warmup Iteration  16: 31727.408 ops/s
# Warmup Iteration  17: 28298.317 ops/s
# Warmup Iteration  18: 33587.251 ops/s
# Warmup Iteration  19: 33942.896 ops/s
# Warmup Iteration  20: 34957.675 ops/s
# Warmup Iteration  21: 25102.251 ops/s
# Warmup Iteration  22: 32833.084 ops/s
# Warmup Iteration  23: 33130.606 ops/s
# Warmup Iteration  24: 33337.606 ops/s
# Warmup Iteration  25: 34399.897 ops/s
# Warmup Iteration  26: 31947.617 ops/s
# Warmup Iteration  27: 28845.465 ops/s
# Warmup Iteration  28: 31490.051 ops/s
# Warmup Iteration  29: 31388.103 ops/s
# Warmup Iteration  30: 33447.112 ops/s
Iteration   1: 31224.758 ops/s
Iteration   2: 35845.742 ops/s
Iteration   3: 34823.355 ops/s
Iteration   4: 31988.315 ops/s
Iteration   5: 29151.216 ops/s
Iteration   6: 31707.126 ops/s
Iteration   7: 33242.275 ops/s
Iteration   8: 31383.357 ops/s
Iteration   9: 31626.401 ops/s
Iteration  10: 32833.879 ops/s
Iteration  11: 31925.067 ops/s
Iteration  12: 32723.103 ops/s
Iteration  13: 32440.496 ops/s
Iteration  14: 31428.290 ops/s
Iteration  15: 32616.941 ops/s
Iteration  16: 33335.060 ops/s
Iteration  17: 33033.492 ops/s
Iteration  18: 34682.180 ops/s
Iteration  19: 33456.861 ops/s
Iteration  20: 31604.299 ops/s
Iteration  21: 29758.759 ops/s
Iteration  22: 32101.446 ops/s
Iteration  23: 33120.213 ops/s
Iteration  24: 31875.488 ops/s
Iteration  25: 32273.118 ops/s
Iteration  26: 33768.404 ops/s
Iteration  27: 33335.870 ops/s
Iteration  28: 33421.596 ops/s
Iteration  29: 33181.603 ops/s
Iteration  30: 32056.490 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_430._Benchmark.benchmark_Cluster_430":
  32532.173 ±(99.9%) 914.135 ops/s [Average]
  (min, avg, max) = (29151.216, 32532.173, 35845.742), stdev = 1368.234
  CI (99.9%): [31618.039, 33446.308] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_430._Benchmark.benchmark_Cluster_430  thrpt   30  32532.173 ± 914.135  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_431._Benchmark.benchmark_Cluster_431$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_431._Benchmark.benchmark_Cluster_431

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5201.461 ops/s
# Warmup Iteration   2: 37586.136 ops/s
# Warmup Iteration   3: 89636.604 ops/s
# Warmup Iteration   4: 96628.985 ops/s
# Warmup Iteration   5: 109039.084 ops/s
# Warmup Iteration   6: 107441.893 ops/s
# Warmup Iteration   7: 120817.934 ops/s
# Warmup Iteration   8: 117232.410 ops/s
# Warmup Iteration   9: 122218.906 ops/s
# Warmup Iteration  10: 125014.121 ops/s
# Warmup Iteration  11: 118113.951 ops/s
# Warmup Iteration  12: 123115.601 ops/s
# Warmup Iteration  13: 118584.680 ops/s
# Warmup Iteration  14: 123492.083 ops/s
# Warmup Iteration  15: 118875.045 ops/s
# Warmup Iteration  16: 123193.224 ops/s
# Warmup Iteration  17: 129747.468 ops/s
# Warmup Iteration  18: 124082.157 ops/s
# Warmup Iteration  19: 126032.149 ops/s
# Warmup Iteration  20: 124952.867 ops/s
# Warmup Iteration  21: 125594.175 ops/s
# Warmup Iteration  22: 124715.779 ops/s
# Warmup Iteration  23: 126629.936 ops/s
# Warmup Iteration  24: 128056.342 ops/s
# Warmup Iteration  25: 126028.430 ops/s
# Warmup Iteration  26: 124864.002 ops/s
# Warmup Iteration  27: 127457.126 ops/s
# Warmup Iteration  28: 122467.767 ops/s
# Warmup Iteration  29: 129071.620 ops/s
# Warmup Iteration  30: 123522.472 ops/s
Iteration   1: 128357.849 ops/s
Iteration   2: 120485.416 ops/s
Iteration   3: 125336.965 ops/s
Iteration   4: 122924.474 ops/s
Iteration   5: 121370.803 ops/s
Iteration   6: 130840.332 ops/s
Iteration   7: 122584.224 ops/s
Iteration   8: 128523.012 ops/s
Iteration   9: 128023.892 ops/s
Iteration  10: 123648.102 ops/s
Iteration  11: 121967.238 ops/s
Iteration  12: 124313.753 ops/s
Iteration  13: 126386.263 ops/s
Iteration  14: 121936.072 ops/s
Iteration  15: 125045.313 ops/s
Iteration  16: 122956.590 ops/s
Iteration  17: 129765.520 ops/s
Iteration  18: 123007.551 ops/s
Iteration  19: 128451.547 ops/s
Iteration  20: 122615.284 ops/s
Iteration  21: 124637.301 ops/s
Iteration  22: 129043.436 ops/s
Iteration  23: 123580.124 ops/s
Iteration  24: 128735.754 ops/s
Iteration  25: 123326.726 ops/s
Iteration  26: 128399.440 ops/s
Iteration  27: 124161.270 ops/s
Iteration  28: 126172.908 ops/s
Iteration  29: 128215.169 ops/s
Iteration  30: 121468.904 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_431._Benchmark.benchmark_Cluster_431":
  125209.374 ±(99.9%) 1971.010 ops/s [Average]
  (min, avg, max) = (120485.416, 125209.374, 130840.332), stdev = 2950.115
  CI (99.9%): [123238.365, 127180.384] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_431._Benchmark.benchmark_Cluster_431  thrpt   30  125209.374 ± 1971.010  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_432._Benchmark.benchmark_Cluster_432$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_432._Benchmark.benchmark_Cluster_432

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1375.821 ops/s
# Warmup Iteration   2: 12167.152 ops/s
# Warmup Iteration   3: 21715.625 ops/s
# Warmup Iteration   4: 26114.195 ops/s
# Warmup Iteration   5: 31957.465 ops/s
# Warmup Iteration   6: 34662.553 ops/s
# Warmup Iteration   7: 51324.861 ops/s
# Warmup Iteration   8: 79192.928 ops/s
# Warmup Iteration   9: 88137.113 ops/s
# Warmup Iteration  10: 85195.796 ops/s
# Warmup Iteration  11: 82946.138 ops/s
# Warmup Iteration  12: 81068.832 ops/s
# Warmup Iteration  13: 91808.971 ops/s
# Warmup Iteration  14: 67587.822 ops/s
# Warmup Iteration  15: 88348.420 ops/s
# Warmup Iteration  16: 89233.535 ops/s
# Warmup Iteration  17: 92703.220 ops/s
# Warmup Iteration  18: 95894.642 ops/s
# Warmup Iteration  19: 92490.967 ops/s
# Warmup Iteration  20: 91696.039 ops/s
# Warmup Iteration  21: 94745.162 ops/s
# Warmup Iteration  22: 89961.860 ops/s
# Warmup Iteration  23: 91182.510 ops/s
# Warmup Iteration  24: 94504.607 ops/s
# Warmup Iteration  25: 88621.515 ops/s
# Warmup Iteration  26: 93420.849 ops/s
# Warmup Iteration  27: 89437.838 ops/s
# Warmup Iteration  28: 93556.703 ops/s
# Warmup Iteration  29: 91349.922 ops/s
# Warmup Iteration  30: 91655.801 ops/s
Iteration   1: 94426.336 ops/s
Iteration   2: 90469.236 ops/s
Iteration   3: 93032.068 ops/s
Iteration   4: 93976.810 ops/s
Iteration   5: 87558.563 ops/s
Iteration   6: 96323.708 ops/s
Iteration   7: 93225.790 ops/s
Iteration   8: 90612.895 ops/s
Iteration   9: 90747.480 ops/s
Iteration  10: 95445.164 ops/s
Iteration  11: 90309.103 ops/s
Iteration  12: 94569.110 ops/s
Iteration  13: 91240.802 ops/s
Iteration  14: 92000.325 ops/s
Iteration  15: 93935.115 ops/s
Iteration  16: 95166.703 ops/s
Iteration  17: 89430.300 ops/s
Iteration  18: 93472.269 ops/s
Iteration  19: 93952.706 ops/s
Iteration  20: 90550.986 ops/s
Iteration  21: 92834.094 ops/s
Iteration  22: 88201.639 ops/s
Iteration  23: 93660.743 ops/s
Iteration  24: 88454.340 ops/s
Iteration  25: 91931.280 ops/s
Iteration  26: 90690.144 ops/s
Iteration  27: 89798.749 ops/s
Iteration  28: 91804.277 ops/s
Iteration  29: 91794.568 ops/s
Iteration  30: 91868.907 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_432._Benchmark.benchmark_Cluster_432":
  92049.474 ±(99.9%) 1488.910 ops/s [Average]
  (min, avg, max) = (87558.563, 92049.474, 96323.708), stdev = 2228.530
  CI (99.9%): [90560.564, 93538.384] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_432._Benchmark.benchmark_Cluster_432  thrpt   30  92049.474 ± 1488.910  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_433._Benchmark.benchmark_Cluster_433$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_433._Benchmark.benchmark_Cluster_433

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1626.520 ops/s
# Warmup Iteration   2: 14135.659 ops/s
# Warmup Iteration   3: 19378.853 ops/s
# Warmup Iteration   4: 24668.254 ops/s
# Warmup Iteration   5: 32876.526 ops/s
# Warmup Iteration   6: 28855.114 ops/s
# Warmup Iteration   7: 31401.244 ops/s
# Warmup Iteration   8: 22272.400 ops/s
# Warmup Iteration   9: 32657.174 ops/s
# Warmup Iteration  10: 43690.349 ops/s
# Warmup Iteration  11: 42589.625 ops/s
# Warmup Iteration  12: 91594.913 ops/s
# Warmup Iteration  13: 90517.780 ops/s
# Warmup Iteration  14: 92769.667 ops/s
# Warmup Iteration  15: 88024.202 ops/s
# Warmup Iteration  16: 87092.900 ops/s
# Warmup Iteration  17: 94598.795 ops/s
# Warmup Iteration  18: 95443.702 ops/s
# Warmup Iteration  19: 89649.360 ops/s
# Warmup Iteration  20: 95557.598 ops/s
# Warmup Iteration  21: 94618.014 ops/s
# Warmup Iteration  22: 87421.090 ops/s
# Warmup Iteration  23: 96411.183 ops/s
# Warmup Iteration  24: 94648.011 ops/s
# Warmup Iteration  25: 88480.849 ops/s
# Warmup Iteration  26: 91541.316 ops/s
# Warmup Iteration  27: 97022.183 ops/s
# Warmup Iteration  28: 87331.354 ops/s
# Warmup Iteration  29: 94117.363 ops/s
# Warmup Iteration  30: 88427.763 ops/s
Iteration   1: 94186.727 ops/s
Iteration   2: 93290.349 ops/s
Iteration   3: 88672.245 ops/s
Iteration   4: 91004.754 ops/s
Iteration   5: 94007.281 ops/s
Iteration   6: 92045.416 ops/s
Iteration   7: 94465.646 ops/s
Iteration   8: 89960.244 ops/s
Iteration   9: 90265.022 ops/s
Iteration  10: 94970.396 ops/s
Iteration  11: 90648.057 ops/s
Iteration  12: 94124.751 ops/s
Iteration  13: 87888.973 ops/s
Iteration  14: 93008.241 ops/s
Iteration  15: 91730.097 ops/s
Iteration  16: 91960.888 ops/s
Iteration  17: 86932.051 ops/s
Iteration  18: 92875.895 ops/s
Iteration  19: 92386.003 ops/s
Iteration  20: 94127.732 ops/s
Iteration  21: 88901.094 ops/s
Iteration  22: 90451.080 ops/s
Iteration  23: 93580.700 ops/s
Iteration  24: 90226.448 ops/s
Iteration  25: 92625.746 ops/s
Iteration  26: 88422.800 ops/s
Iteration  27: 93905.687 ops/s
Iteration  28: 91292.675 ops/s
Iteration  29: 90271.120 ops/s
Iteration  30: 95258.676 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_433._Benchmark.benchmark_Cluster_433":
  91782.893 ±(99.9%) 1505.428 ops/s [Average]
  (min, avg, max) = (86932.051, 91782.893, 95258.676), stdev = 2253.254
  CI (99.9%): [90277.465, 93288.322] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_433._Benchmark.benchmark_Cluster_433  thrpt   30  91782.893 ± 1505.428  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_434._Benchmark.benchmark_Cluster_434$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_434._Benchmark.benchmark_Cluster_434

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12882.722 ops/s
# Warmup Iteration   2: 37068.239 ops/s
# Warmup Iteration   3: 48801.494 ops/s
# Warmup Iteration   4: 87073.035 ops/s
# Warmup Iteration   5: 96988.952 ops/s
# Warmup Iteration   6: 100817.393 ops/s
# Warmup Iteration   7: 95871.234 ops/s
# Warmup Iteration   8: 91448.557 ops/s
# Warmup Iteration   9: 97431.025 ops/s
# Warmup Iteration  10: 103177.483 ops/s
# Warmup Iteration  11: 106084.512 ops/s
# Warmup Iteration  12: 102440.601 ops/s
# Warmup Iteration  13: 101112.810 ops/s
# Warmup Iteration  14: 106980.861 ops/s
# Warmup Iteration  15: 102361.869 ops/s
# Warmup Iteration  16: 104782.819 ops/s
# Warmup Iteration  17: 106088.616 ops/s
# Warmup Iteration  18: 103311.582 ops/s
# Warmup Iteration  19: 104557.995 ops/s
# Warmup Iteration  20: 101343.253 ops/s
# Warmup Iteration  21: 102229.610 ops/s
# Warmup Iteration  22: 102901.556 ops/s
# Warmup Iteration  23: 104116.959 ops/s
# Warmup Iteration  24: 101340.802 ops/s
# Warmup Iteration  25: 103209.397 ops/s
# Warmup Iteration  26: 100940.131 ops/s
# Warmup Iteration  27: 103841.290 ops/s
# Warmup Iteration  28: 103736.749 ops/s
# Warmup Iteration  29: 101928.370 ops/s
# Warmup Iteration  30: 106291.743 ops/s
Iteration   1: 102013.717 ops/s
Iteration   2: 105214.780 ops/s
Iteration   3: 102822.597 ops/s
Iteration   4: 104092.086 ops/s
Iteration   5: 106028.101 ops/s
Iteration   6: 100729.320 ops/s
Iteration   7: 107878.200 ops/s
Iteration   8: 105718.352 ops/s
Iteration   9: 100011.540 ops/s
Iteration  10: 102976.185 ops/s
Iteration  11: 106189.161 ops/s
Iteration  12: 98877.951 ops/s
Iteration  13: 102727.929 ops/s
Iteration  14: 103099.314 ops/s
Iteration  15: 98833.915 ops/s
Iteration  16: 105214.264 ops/s
Iteration  17: 100366.087 ops/s
Iteration  18: 103852.165 ops/s
Iteration  19: 101140.097 ops/s
Iteration  20: 104474.011 ops/s
Iteration  21: 103139.357 ops/s
Iteration  22: 102180.879 ops/s
Iteration  23: 109328.252 ops/s
Iteration  24: 100974.682 ops/s
Iteration  25: 106206.799 ops/s
Iteration  26: 101119.951 ops/s
Iteration  27: 107575.395 ops/s
Iteration  28: 103087.643 ops/s
Iteration  29: 102675.161 ops/s
Iteration  30: 106642.629 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_434._Benchmark.benchmark_Cluster_434":
  103506.351 ±(99.9%) 1796.285 ops/s [Average]
  (min, avg, max) = (98833.915, 103506.351, 109328.252), stdev = 2688.595
  CI (99.9%): [101710.066, 105302.635] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_434._Benchmark.benchmark_Cluster_434  thrpt   30  103506.351 ± 1796.285  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_435._Benchmark.benchmark_Cluster_435$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_435._Benchmark.benchmark_Cluster_435

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7067.869 ops/s
# Warmup Iteration   2: 37370.330 ops/s
# Warmup Iteration   3: 55208.474 ops/s
# Warmup Iteration   4: 50768.584 ops/s
# Warmup Iteration   5: 111340.363 ops/s
# Warmup Iteration   6: 116067.841 ops/s
# Warmup Iteration   7: 121738.362 ops/s
# Warmup Iteration   8: 114888.037 ops/s
# Warmup Iteration   9: 110475.959 ops/s
# Warmup Iteration  10: 123193.426 ops/s
# Warmup Iteration  11: 111049.305 ops/s
# Warmup Iteration  12: 119606.542 ops/s
# Warmup Iteration  13: 124022.067 ops/s
# Warmup Iteration  14: 116936.562 ops/s
# Warmup Iteration  15: 123271.040 ops/s
# Warmup Iteration  16: 118162.576 ops/s
# Warmup Iteration  17: 124344.594 ops/s
# Warmup Iteration  18: 131331.949 ops/s
# Warmup Iteration  19: 121439.681 ops/s
# Warmup Iteration  20: 130780.537 ops/s
# Warmup Iteration  21: 124785.923 ops/s
# Warmup Iteration  22: 124692.540 ops/s
# Warmup Iteration  23: 122709.177 ops/s
# Warmup Iteration  24: 126715.383 ops/s
# Warmup Iteration  25: 124337.839 ops/s
# Warmup Iteration  26: 127882.874 ops/s
# Warmup Iteration  27: 124207.743 ops/s
# Warmup Iteration  28: 126212.454 ops/s
# Warmup Iteration  29: 122080.233 ops/s
# Warmup Iteration  30: 127045.315 ops/s
Iteration   1: 128016.407 ops/s
Iteration   2: 125205.815 ops/s
Iteration   3: 123558.493 ops/s
Iteration   4: 130033.744 ops/s
Iteration   5: 130473.381 ops/s
Iteration   6: 123329.997 ops/s
Iteration   7: 128605.986 ops/s
Iteration   8: 123013.381 ops/s
Iteration   9: 128050.051 ops/s
Iteration  10: 128718.558 ops/s
Iteration  11: 125378.750 ops/s
Iteration  12: 125733.963 ops/s
Iteration  13: 121796.441 ops/s
Iteration  14: 125145.294 ops/s
Iteration  15: 125360.172 ops/s
Iteration  16: 131414.836 ops/s
Iteration  17: 122895.888 ops/s
Iteration  18: 122869.145 ops/s
Iteration  19: 130761.502 ops/s
Iteration  20: 122207.184 ops/s
Iteration  21: 129363.566 ops/s
Iteration  22: 123200.489 ops/s
Iteration  23: 126742.748 ops/s
Iteration  24: 126577.506 ops/s
Iteration  25: 126475.077 ops/s
Iteration  26: 126834.447 ops/s
Iteration  27: 121227.009 ops/s
Iteration  28: 127725.397 ops/s
Iteration  29: 128513.289 ops/s
Iteration  30: 124019.978 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_435._Benchmark.benchmark_Cluster_435":
  126108.283 ±(99.9%) 1934.216 ops/s [Average]
  (min, avg, max) = (121227.009, 126108.283, 131414.836), stdev = 2895.043
  CI (99.9%): [124174.067, 128042.499] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_435._Benchmark.benchmark_Cluster_435  thrpt   30  126108.283 ± 1934.216  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_436._Benchmark.benchmark_Cluster_436$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_436._Benchmark.benchmark_Cluster_436

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3029.808 ops/s
# Warmup Iteration   2: 15958.914 ops/s
# Warmup Iteration   3: 20913.352 ops/s
# Warmup Iteration   4: 60822.005 ops/s
# Warmup Iteration   5: 72011.999 ops/s
# Warmup Iteration   6: 70898.948 ops/s
# Warmup Iteration   7: 82248.054 ops/s
# Warmup Iteration   8: 85151.538 ops/s
# Warmup Iteration   9: 84752.167 ops/s
# Warmup Iteration  10: 81807.461 ops/s
# Warmup Iteration  11: 84069.642 ops/s
# Warmup Iteration  12: 81244.484 ops/s
# Warmup Iteration  13: 85725.034 ops/s
# Warmup Iteration  14: 79985.459 ops/s
# Warmup Iteration  15: 85400.588 ops/s
# Warmup Iteration  16: 82406.128 ops/s
# Warmup Iteration  17: 81513.498 ops/s
# Warmup Iteration  18: 84911.496 ops/s
# Warmup Iteration  19: 80099.813 ops/s
# Warmup Iteration  20: 84365.093 ops/s
# Warmup Iteration  21: 81375.296 ops/s
# Warmup Iteration  22: 81188.185 ops/s
# Warmup Iteration  23: 84028.422 ops/s
# Warmup Iteration  24: 79212.913 ops/s
# Warmup Iteration  25: 84625.417 ops/s
# Warmup Iteration  26: 86334.366 ops/s
# Warmup Iteration  27: 80995.981 ops/s
# Warmup Iteration  28: 83810.823 ops/s
# Warmup Iteration  29: 79555.514 ops/s
# Warmup Iteration  30: 86092.035 ops/s
Iteration   1: 80773.422 ops/s
Iteration   2: 81247.622 ops/s
Iteration   3: 82103.015 ops/s
Iteration   4: 80648.547 ops/s
Iteration   5: 80648.280 ops/s
Iteration   6: 84218.164 ops/s
Iteration   7: 78647.913 ops/s
Iteration   8: 84635.145 ops/s
Iteration   9: 82654.510 ops/s
Iteration  10: 82124.191 ops/s
Iteration  11: 82341.527 ops/s
Iteration  12: 82149.010 ops/s
Iteration  13: 85350.468 ops/s
Iteration  14: 80369.494 ops/s
Iteration  15: 80293.760 ops/s
Iteration  16: 83408.224 ops/s
Iteration  17: 81738.286 ops/s
Iteration  18: 82002.588 ops/s
Iteration  19: 80785.214 ops/s
Iteration  20: 82674.754 ops/s
Iteration  21: 80160.281 ops/s
Iteration  22: 85283.531 ops/s
Iteration  23: 81540.362 ops/s
Iteration  24: 81059.263 ops/s
Iteration  25: 85410.704 ops/s
Iteration  26: 82814.128 ops/s
Iteration  27: 85752.953 ops/s
Iteration  28: 85468.793 ops/s
Iteration  29: 81880.858 ops/s
Iteration  30: 86153.601 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_436._Benchmark.benchmark_Cluster_436":
  82477.954 ±(99.9%) 1326.311 ops/s [Average]
  (min, avg, max) = (78647.913, 82477.954, 86153.601), stdev = 1985.159
  CI (99.9%): [81151.643, 83804.264] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_436._Benchmark.benchmark_Cluster_436  thrpt   30  82477.954 ± 1326.311  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_437._Benchmark.benchmark_Cluster_437$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_437._Benchmark.benchmark_Cluster_437

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15071.543 ops/s
# Warmup Iteration   2: 39874.206 ops/s
# Warmup Iteration   3: 38371.268 ops/s
# Warmup Iteration   4: 77087.612 ops/s
# Warmup Iteration   5: 127015.321 ops/s
# Warmup Iteration   6: 118996.050 ops/s
# Warmup Iteration   7: 126124.704 ops/s
# Warmup Iteration   8: 120221.456 ops/s
# Warmup Iteration   9: 120026.695 ops/s
# Warmup Iteration  10: 124671.966 ops/s
# Warmup Iteration  11: 123688.116 ops/s
# Warmup Iteration  12: 134991.212 ops/s
# Warmup Iteration  13: 127542.622 ops/s
# Warmup Iteration  14: 127101.933 ops/s
# Warmup Iteration  15: 133324.853 ops/s
# Warmup Iteration  16: 129270.093 ops/s
# Warmup Iteration  17: 134135.254 ops/s
# Warmup Iteration  18: 131284.610 ops/s
# Warmup Iteration  19: 132243.554 ops/s
# Warmup Iteration  20: 131151.991 ops/s
# Warmup Iteration  21: 133609.463 ops/s
# Warmup Iteration  22: 127845.737 ops/s
# Warmup Iteration  23: 130802.592 ops/s
# Warmup Iteration  24: 128572.883 ops/s
# Warmup Iteration  25: 127199.672 ops/s
# Warmup Iteration  26: 132663.483 ops/s
# Warmup Iteration  27: 133344.306 ops/s
# Warmup Iteration  28: 131715.773 ops/s
# Warmup Iteration  29: 135489.535 ops/s
# Warmup Iteration  30: 130284.094 ops/s
Iteration   1: 132852.632 ops/s
Iteration   2: 130219.360 ops/s
Iteration   3: 137550.980 ops/s
Iteration   4: 124353.234 ops/s
Iteration   5: 130057.265 ops/s
Iteration   6: 132474.791 ops/s
Iteration   7: 131834.595 ops/s
Iteration   8: 137205.016 ops/s
Iteration   9: 128919.530 ops/s
Iteration  10: 138783.449 ops/s
Iteration  11: 135396.022 ops/s
Iteration  12: 128755.924 ops/s
Iteration  13: 137615.846 ops/s
Iteration  14: 129912.533 ops/s
Iteration  15: 131593.768 ops/s
Iteration  16: 133330.397 ops/s
Iteration  17: 132867.077 ops/s
Iteration  18: 137477.510 ops/s
Iteration  19: 125952.767 ops/s
Iteration  20: 136289.594 ops/s
Iteration  21: 130389.699 ops/s
Iteration  22: 137521.792 ops/s
Iteration  23: 134034.406 ops/s
Iteration  24: 125772.235 ops/s
Iteration  25: 137256.168 ops/s
Iteration  26: 131125.099 ops/s
Iteration  27: 135076.122 ops/s
Iteration  28: 130653.178 ops/s
Iteration  29: 117065.082 ops/s
Iteration  30: 128082.378 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_437._Benchmark.benchmark_Cluster_437":
  132013.948 ±(99.9%) 3234.017 ops/s [Average]
  (min, avg, max) = (117065.082, 132013.948, 138783.449), stdev = 4840.524
  CI (99.9%): [128779.932, 135247.965] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_437._Benchmark.benchmark_Cluster_437  thrpt   30  132013.948 ± 3234.017  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_438._Benchmark.benchmark_Cluster_438$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_438._Benchmark.benchmark_Cluster_438

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2284.001 ops/s
# Warmup Iteration   2: 19583.055 ops/s
# Warmup Iteration   3: 23933.099 ops/s
# Warmup Iteration   4: 29897.410 ops/s
# Warmup Iteration   5: 38899.829 ops/s
# Warmup Iteration   6: 36451.287 ops/s
# Warmup Iteration   7: 41982.520 ops/s
# Warmup Iteration   8: 90313.482 ops/s
# Warmup Iteration   9: 88490.551 ops/s
# Warmup Iteration  10: 112895.204 ops/s
# Warmup Iteration  11: 111304.480 ops/s
# Warmup Iteration  12: 109248.550 ops/s
# Warmup Iteration  13: 106832.188 ops/s
# Warmup Iteration  14: 110651.587 ops/s
# Warmup Iteration  15: 106322.242 ops/s
# Warmup Iteration  16: 110403.812 ops/s
# Warmup Iteration  17: 111232.107 ops/s
# Warmup Iteration  18: 112718.611 ops/s
# Warmup Iteration  19: 110957.571 ops/s
# Warmup Iteration  20: 113519.147 ops/s
# Warmup Iteration  21: 110425.404 ops/s
# Warmup Iteration  22: 111826.631 ops/s
# Warmup Iteration  23: 115115.137 ops/s
# Warmup Iteration  24: 110242.857 ops/s
# Warmup Iteration  25: 114831.286 ops/s
# Warmup Iteration  26: 112180.774 ops/s
# Warmup Iteration  27: 112381.915 ops/s
# Warmup Iteration  28: 110849.081 ops/s
# Warmup Iteration  29: 111534.759 ops/s
# Warmup Iteration  30: 112104.004 ops/s
Iteration   1: 108669.022 ops/s
Iteration   2: 114518.324 ops/s
Iteration   3: 111180.028 ops/s
Iteration   4: 112141.537 ops/s
Iteration   5: 113086.179 ops/s
Iteration   6: 109693.864 ops/s
Iteration   7: 114135.597 ops/s
Iteration   8: 106612.811 ops/s
Iteration   9: 114394.266 ops/s
Iteration  10: 112928.141 ops/s
Iteration  11: 114710.653 ops/s
Iteration  12: 115183.803 ops/s
Iteration  13: 110049.279 ops/s
Iteration  14: 114440.640 ops/s
Iteration  15: 112209.507 ops/s
Iteration  16: 106861.832 ops/s
Iteration  17: 116181.849 ops/s
Iteration  18: 112336.203 ops/s
Iteration  19: 110241.581 ops/s
Iteration  20: 111026.296 ops/s
Iteration  21: 115557.352 ops/s
Iteration  22: 110053.452 ops/s
Iteration  23: 115208.223 ops/s
Iteration  24: 108372.264 ops/s
Iteration  25: 115343.964 ops/s
Iteration  26: 110752.475 ops/s
Iteration  27: 114755.324 ops/s
Iteration  28: 112545.893 ops/s
Iteration  29: 107065.019 ops/s
Iteration  30: 117972.894 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_438._Benchmark.benchmark_Cluster_438":
  112274.276 ±(99.9%) 1994.462 ops/s [Average]
  (min, avg, max) = (106612.811, 112274.276, 117972.894), stdev = 2985.217
  CI (99.9%): [110279.813, 114268.738] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_438._Benchmark.benchmark_Cluster_438  thrpt   30  112274.276 ± 1994.462  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_439._Benchmark.benchmark_Cluster_439$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_439._Benchmark.benchmark_Cluster_439

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3286.598 ops/s
# Warmup Iteration   2: 22254.561 ops/s
# Warmup Iteration   3: 37706.851 ops/s
# Warmup Iteration   4: 40753.262 ops/s
# Warmup Iteration   5: 46094.012 ops/s
# Warmup Iteration   6: 66375.605 ops/s
# Warmup Iteration   7: 103261.127 ops/s
# Warmup Iteration   8: 102811.408 ops/s
# Warmup Iteration   9: 106755.819 ops/s
# Warmup Iteration  10: 103788.904 ops/s
# Warmup Iteration  11: 109213.095 ops/s
# Warmup Iteration  12: 105476.815 ops/s
# Warmup Iteration  13: 104048.607 ops/s
# Warmup Iteration  14: 108329.759 ops/s
# Warmup Iteration  15: 104652.366 ops/s
# Warmup Iteration  16: 109905.730 ops/s
# Warmup Iteration  17: 108309.498 ops/s
# Warmup Iteration  18: 119895.253 ops/s
# Warmup Iteration  19: 116700.638 ops/s
# Warmup Iteration  20: 114030.300 ops/s
# Warmup Iteration  21: 113015.851 ops/s
# Warmup Iteration  22: 116257.523 ops/s
# Warmup Iteration  23: 113125.106 ops/s
# Warmup Iteration  24: 110376.702 ops/s
# Warmup Iteration  25: 113616.323 ops/s
# Warmup Iteration  26: 113039.761 ops/s
# Warmup Iteration  27: 119747.379 ops/s
# Warmup Iteration  28: 106304.607 ops/s
# Warmup Iteration  29: 115849.212 ops/s
# Warmup Iteration  30: 112699.145 ops/s
Iteration   1: 117347.879 ops/s
Iteration   2: 117377.832 ops/s
Iteration   3: 111765.546 ops/s
Iteration   4: 117113.120 ops/s
Iteration   5: 113803.610 ops/s
Iteration   6: 116122.571 ops/s
Iteration   7: 111708.826 ops/s
Iteration   8: 117669.590 ops/s
Iteration   9: 119156.979 ops/s
Iteration  10: 112598.830 ops/s
Iteration  11: 114524.240 ops/s
Iteration  12: 115419.851 ops/s
Iteration  13: 112324.929 ops/s
Iteration  14: 114735.258 ops/s
Iteration  15: 116250.018 ops/s
Iteration  16: 113440.372 ops/s
Iteration  17: 114156.959 ops/s
Iteration  18: 117183.080 ops/s
Iteration  19: 113318.647 ops/s
Iteration  20: 117263.964 ops/s
Iteration  21: 114293.184 ops/s
Iteration  22: 115676.572 ops/s
Iteration  23: 112040.710 ops/s
Iteration  24: 95634.601 ops/s
Iteration  25: 114337.499 ops/s
Iteration  26: 114026.106 ops/s
Iteration  27: 115368.483 ops/s
Iteration  28: 121514.086 ops/s
Iteration  29: 109352.489 ops/s
Iteration  30: 117145.463 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_439._Benchmark.benchmark_Cluster_439":
  114422.376 ±(99.9%) 2909.646 ops/s [Average]
  (min, avg, max) = (95634.601, 114422.376, 121514.086), stdev = 4355.022
  CI (99.9%): [111512.730, 117332.023] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_439._Benchmark.benchmark_Cluster_439  thrpt   30  114422.376 ± 2909.646  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_44._Benchmark.benchmark_Cluster_44$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_44._Benchmark.benchmark_Cluster_44

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.695 ops/s
# Warmup Iteration   2: 8609.527 ops/s
# Warmup Iteration   3: 26070.909 ops/s
# Warmup Iteration   4: 24095.466 ops/s
# Warmup Iteration   5: 36513.817 ops/s
# Warmup Iteration   6: 33563.746 ops/s
# Warmup Iteration   7: 47341.757 ops/s
# Warmup Iteration   8: 81585.181 ops/s
# Warmup Iteration   9: 114473.963 ops/s
# Warmup Iteration  10: 110772.486 ops/s
# Warmup Iteration  11: 114624.736 ops/s
# Warmup Iteration  12: 117983.248 ops/s
# Warmup Iteration  13: 114491.813 ops/s
# Warmup Iteration  14: 113273.106 ops/s
# Warmup Iteration  15: 115160.295 ops/s
# Warmup Iteration  16: 112184.005 ops/s
# Warmup Iteration  17: 114442.755 ops/s
# Warmup Iteration  18: 117643.555 ops/s
# Warmup Iteration  19: 109720.334 ops/s
# Warmup Iteration  20: 119153.412 ops/s
# Warmup Iteration  21: 111988.188 ops/s
# Warmup Iteration  22: 112528.455 ops/s
# Warmup Iteration  23: 117349.021 ops/s
# Warmup Iteration  24: 114333.918 ops/s
# Warmup Iteration  25: 115890.052 ops/s
# Warmup Iteration  26: 116329.721 ops/s
# Warmup Iteration  27: 110921.498 ops/s
# Warmup Iteration  28: 119214.617 ops/s
# Warmup Iteration  29: 116276.182 ops/s
# Warmup Iteration  30: 114252.556 ops/s
Iteration   1: 111512.622 ops/s
Iteration   2: 116700.169 ops/s
Iteration   3: 123400.848 ops/s
Iteration   4: 112889.783 ops/s
Iteration   5: 111400.556 ops/s
Iteration   6: 118921.056 ops/s
Iteration   7: 112970.395 ops/s
Iteration   8: 117516.055 ops/s
Iteration   9: 112383.370 ops/s
Iteration  10: 116517.577 ops/s
Iteration  11: 116410.469 ops/s
Iteration  12: 114567.708 ops/s
Iteration  13: 117513.373 ops/s
Iteration  14: 111896.799 ops/s
Iteration  15: 113467.181 ops/s
Iteration  16: 117100.339 ops/s
Iteration  17: 113944.155 ops/s
Iteration  18: 113761.548 ops/s
Iteration  19: 115856.298 ops/s
Iteration  20: 114814.245 ops/s
Iteration  21: 117690.495 ops/s
Iteration  22: 110612.242 ops/s
Iteration  23: 110138.438 ops/s
Iteration  24: 121469.551 ops/s
Iteration  25: 113623.064 ops/s
Iteration  26: 115711.173 ops/s
Iteration  27: 117229.261 ops/s
Iteration  28: 111978.583 ops/s
Iteration  29: 117049.201 ops/s
Iteration  30: 116254.783 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_44._Benchmark.benchmark_Cluster_44":
  115176.711 ±(99.9%) 2074.635 ops/s [Average]
  (min, avg, max) = (110138.438, 115176.711, 123400.848), stdev = 3105.216
  CI (99.9%): [113102.076, 117251.346] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_44._Benchmark.benchmark_Cluster_44  thrpt   30  115176.711 ± 2074.635  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_440._Benchmark.benchmark_Cluster_440$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_440._Benchmark.benchmark_Cluster_440

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1496.768 ops/s
# Warmup Iteration   2: 17426.675 ops/s
# Warmup Iteration   3: 24141.867 ops/s
# Warmup Iteration   4: 29642.038 ops/s
# Warmup Iteration   5: 38236.240 ops/s
# Warmup Iteration   6: 36928.034 ops/s
# Warmup Iteration   7: 40751.531 ops/s
# Warmup Iteration   8: 56506.190 ops/s
# Warmup Iteration   9: 50422.811 ops/s
# Warmup Iteration  10: 109444.784 ops/s
# Warmup Iteration  11: 96751.285 ops/s
# Warmup Iteration  12: 100142.352 ops/s
# Warmup Iteration  13: 98051.694 ops/s
# Warmup Iteration  14: 105909.848 ops/s
# Warmup Iteration  15: 109573.069 ops/s
# Warmup Iteration  16: 105325.816 ops/s
# Warmup Iteration  17: 113862.771 ops/s
# Warmup Iteration  18: 113283.885 ops/s
# Warmup Iteration  19: 110129.578 ops/s
# Warmup Iteration  20: 110757.822 ops/s
# Warmup Iteration  21: 110795.958 ops/s
# Warmup Iteration  22: 115268.783 ops/s
# Warmup Iteration  23: 108944.570 ops/s
# Warmup Iteration  24: 107088.873 ops/s
# Warmup Iteration  25: 116828.441 ops/s
# Warmup Iteration  26: 106699.928 ops/s
# Warmup Iteration  27: 110319.387 ops/s
# Warmup Iteration  28: 116552.019 ops/s
# Warmup Iteration  29: 108380.078 ops/s
# Warmup Iteration  30: 110673.417 ops/s
Iteration   1: 114891.748 ops/s
Iteration   2: 108686.541 ops/s
Iteration   3: 111999.223 ops/s
Iteration   4: 109404.770 ops/s
Iteration   5: 110713.925 ops/s
Iteration   6: 111958.107 ops/s
Iteration   7: 103801.507 ops/s
Iteration   8: 111998.503 ops/s
Iteration   9: 107243.224 ops/s
Iteration  10: 112759.516 ops/s
Iteration  11: 105348.883 ops/s
Iteration  12: 107866.731 ops/s
Iteration  13: 112229.088 ops/s
Iteration  14: 110404.606 ops/s
Iteration  15: 110423.083 ops/s
Iteration  16: 113382.038 ops/s
Iteration  17: 105188.493 ops/s
Iteration  18: 98130.411 ops/s
Iteration  19: 113228.132 ops/s
Iteration  20: 107684.970 ops/s
Iteration  21: 116893.433 ops/s
Iteration  22: 107265.351 ops/s
Iteration  23: 112759.634 ops/s
Iteration  24: 109386.530 ops/s
Iteration  25: 115752.815 ops/s
Iteration  26: 116551.207 ops/s
Iteration  27: 113027.133 ops/s
Iteration  28: 110583.556 ops/s
Iteration  29: 108528.761 ops/s
Iteration  30: 113365.004 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_440._Benchmark.benchmark_Cluster_440":
  110381.897 ±(99.9%) 2696.391 ops/s [Average]
  (min, avg, max) = (98130.411, 110381.897, 116893.433), stdev = 4035.832
  CI (99.9%): [107685.506, 113078.289] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_440._Benchmark.benchmark_Cluster_440  thrpt   30  110381.897 ± 2696.391  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_441._Benchmark.benchmark_Cluster_441$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_441._Benchmark.benchmark_Cluster_441

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4349.499 ops/s
# Warmup Iteration   2: 25043.939 ops/s
# Warmup Iteration   3: 28605.948 ops/s
# Warmup Iteration   4: 38294.266 ops/s
# Warmup Iteration   5: 42476.573 ops/s
# Warmup Iteration   6: 77116.560 ops/s
# Warmup Iteration   7: 90691.088 ops/s
# Warmup Iteration   8: 90243.500 ops/s
# Warmup Iteration   9: 88860.969 ops/s
# Warmup Iteration  10: 91805.047 ops/s
# Warmup Iteration  11: 91425.679 ops/s
# Warmup Iteration  12: 88782.261 ops/s
# Warmup Iteration  13: 92118.469 ops/s
# Warmup Iteration  14: 89900.556 ops/s
# Warmup Iteration  15: 87612.606 ops/s
# Warmup Iteration  16: 94779.420 ops/s
# Warmup Iteration  17: 93074.103 ops/s
# Warmup Iteration  18: 89039.537 ops/s
# Warmup Iteration  19: 95850.708 ops/s
# Warmup Iteration  20: 91292.107 ops/s
# Warmup Iteration  21: 88275.986 ops/s
# Warmup Iteration  22: 95851.536 ops/s
# Warmup Iteration  23: 90379.184 ops/s
# Warmup Iteration  24: 88318.935 ops/s
# Warmup Iteration  25: 92668.641 ops/s
# Warmup Iteration  26: 88841.386 ops/s
# Warmup Iteration  27: 90570.087 ops/s
# Warmup Iteration  28: 94147.092 ops/s
# Warmup Iteration  29: 90459.833 ops/s
# Warmup Iteration  30: 95175.024 ops/s
Iteration   1: 94549.300 ops/s
Iteration   2: 90216.267 ops/s
Iteration   3: 93966.588 ops/s
Iteration   4: 90874.232 ops/s
Iteration   5: 91022.621 ops/s
Iteration   6: 94501.011 ops/s
Iteration   7: 91625.070 ops/s
Iteration   8: 94480.127 ops/s
Iteration   9: 91511.489 ops/s
Iteration  10: 91659.746 ops/s
Iteration  11: 95482.042 ops/s
Iteration  12: 89596.452 ops/s
Iteration  13: 89808.562 ops/s
Iteration  14: 93262.421 ops/s
Iteration  15: 94500.512 ops/s
Iteration  16: 90190.511 ops/s
Iteration  17: 94186.217 ops/s
Iteration  18: 88883.609 ops/s
Iteration  19: 94280.980 ops/s
Iteration  20: 90995.637 ops/s
Iteration  21: 91905.632 ops/s
Iteration  22: 91587.642 ops/s
Iteration  23: 90575.609 ops/s
Iteration  24: 91440.279 ops/s
Iteration  25: 88095.242 ops/s
Iteration  26: 94762.816 ops/s
Iteration  27: 87922.795 ops/s
Iteration  28: 89796.983 ops/s
Iteration  29: 92409.924 ops/s
Iteration  30: 89453.869 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_441._Benchmark.benchmark_Cluster_441":
  91784.806 ±(99.9%) 1443.321 ops/s [Average]
  (min, avg, max) = (87922.795, 91784.806, 95482.042), stdev = 2160.294
  CI (99.9%): [90341.486, 93228.127] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_441._Benchmark.benchmark_Cluster_441  thrpt   30  91784.806 ± 1443.321  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_442._Benchmark.benchmark_Cluster_442$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_442._Benchmark.benchmark_Cluster_442

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2451.298 ops/s
# Warmup Iteration   2: 26700.141 ops/s
# Warmup Iteration   3: 35921.274 ops/s
# Warmup Iteration   4: 34823.099 ops/s
# Warmup Iteration   5: 31387.234 ops/s
# Warmup Iteration   6: 87217.066 ops/s
# Warmup Iteration   7: 92606.780 ops/s
# Warmup Iteration   8: 93643.967 ops/s
# Warmup Iteration   9: 100962.004 ops/s
# Warmup Iteration  10: 100087.625 ops/s
# Warmup Iteration  11: 94997.954 ops/s
# Warmup Iteration  12: 96894.661 ops/s
# Warmup Iteration  13: 91623.663 ops/s
# Warmup Iteration  14: 98299.990 ops/s
# Warmup Iteration  15: 99298.252 ops/s
# Warmup Iteration  16: 95695.818 ops/s
# Warmup Iteration  17: 101446.451 ops/s
# Warmup Iteration  18: 102080.299 ops/s
# Warmup Iteration  19: 94885.414 ops/s
# Warmup Iteration  20: 95532.305 ops/s
# Warmup Iteration  21: 103206.370 ops/s
# Warmup Iteration  22: 100322.970 ops/s
# Warmup Iteration  23: 103623.990 ops/s
# Warmup Iteration  24: 99617.168 ops/s
# Warmup Iteration  25: 99278.662 ops/s
# Warmup Iteration  26: 106188.979 ops/s
# Warmup Iteration  27: 95920.121 ops/s
# Warmup Iteration  28: 104030.510 ops/s
# Warmup Iteration  29: 99154.579 ops/s
# Warmup Iteration  30: 100213.847 ops/s
Iteration   1: 105441.600 ops/s
Iteration   2: 100812.723 ops/s
Iteration   3: 103818.964 ops/s
Iteration   4: 104533.575 ops/s
Iteration   5: 97852.885 ops/s
Iteration   6: 101148.528 ops/s
Iteration   7: 104300.941 ops/s
Iteration   8: 103903.606 ops/s
Iteration   9: 98973.728 ops/s
Iteration  10: 104684.249 ops/s
Iteration  11: 80271.173 ops/s
Iteration  12: 101990.721 ops/s
Iteration  13: 100985.006 ops/s
Iteration  14: 95748.078 ops/s
Iteration  15: 107650.493 ops/s
Iteration  16: 103594.076 ops/s
Iteration  17: 99238.534 ops/s
Iteration  18: 104318.581 ops/s
Iteration  19: 108263.723 ops/s
Iteration  20: 95867.870 ops/s
Iteration  21: 106044.600 ops/s
Iteration  22: 101431.301 ops/s
Iteration  23: 103613.559 ops/s
Iteration  24: 99828.527 ops/s
Iteration  25: 101421.473 ops/s
Iteration  26: 100666.461 ops/s
Iteration  27: 101083.007 ops/s
Iteration  28: 100724.740 ops/s
Iteration  29: 103015.466 ops/s
Iteration  30: 100533.043 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_442._Benchmark.benchmark_Cluster_442":
  101392.041 ±(99.9%) 3336.945 ops/s [Average]
  (min, avg, max) = (80271.173, 101392.041, 108263.723), stdev = 4994.582
  CI (99.9%): [98055.096, 104728.986] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_442._Benchmark.benchmark_Cluster_442  thrpt   30  101392.041 ± 3336.945  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_443._Benchmark.benchmark_Cluster_443$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_443._Benchmark.benchmark_Cluster_443

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20752.600 ops/s
# Warmup Iteration   2: 81438.387 ops/s
# Warmup Iteration   3: 226931.746 ops/s
# Warmup Iteration   4: 211626.008 ops/s
# Warmup Iteration   5: 206070.745 ops/s
# Warmup Iteration   6: 251018.062 ops/s
# Warmup Iteration   7: 234204.962 ops/s
# Warmup Iteration   8: 246951.979 ops/s
# Warmup Iteration   9: 239146.714 ops/s
# Warmup Iteration  10: 234323.515 ops/s
# Warmup Iteration  11: 250454.125 ops/s
# Warmup Iteration  12: 229061.073 ops/s
# Warmup Iteration  13: 248414.457 ops/s
# Warmup Iteration  14: 238652.644 ops/s
# Warmup Iteration  15: 240385.535 ops/s
# Warmup Iteration  16: 243445.397 ops/s
# Warmup Iteration  17: 247611.030 ops/s
# Warmup Iteration  18: 256601.893 ops/s
# Warmup Iteration  19: 236958.276 ops/s
# Warmup Iteration  20: 240392.801 ops/s
# Warmup Iteration  21: 260245.078 ops/s
# Warmup Iteration  22: 242357.006 ops/s
# Warmup Iteration  23: 257170.067 ops/s
# Warmup Iteration  24: 240506.414 ops/s
# Warmup Iteration  25: 247468.435 ops/s
# Warmup Iteration  26: 255238.479 ops/s
# Warmup Iteration  27: 259876.666 ops/s
# Warmup Iteration  28: 243541.562 ops/s
# Warmup Iteration  29: 255606.505 ops/s
# Warmup Iteration  30: 242347.167 ops/s
Iteration   1: 256131.785 ops/s
Iteration   2: 251769.482 ops/s
Iteration   3: 238561.354 ops/s
Iteration   4: 253744.841 ops/s
Iteration   5: 251686.811 ops/s
Iteration   6: 240409.890 ops/s
Iteration   7: 250596.733 ops/s
Iteration   8: 248112.701 ops/s
Iteration   9: 252346.500 ops/s
Iteration  10: 245478.099 ops/s
Iteration  11: 243719.811 ops/s
Iteration  12: 258717.147 ops/s
Iteration  13: 245901.367 ops/s
Iteration  14: 245415.636 ops/s
Iteration  15: 252904.666 ops/s
Iteration  16: 261068.469 ops/s
Iteration  17: 249674.083 ops/s
Iteration  18: 240735.972 ops/s
Iteration  19: 254708.814 ops/s
Iteration  20: 254736.848 ops/s
Iteration  21: 245925.067 ops/s
Iteration  22: 252819.231 ops/s
Iteration  23: 241787.503 ops/s
Iteration  24: 250590.929 ops/s
Iteration  25: 244299.251 ops/s
Iteration  26: 249846.612 ops/s
Iteration  27: 252776.151 ops/s
Iteration  28: 248291.342 ops/s
Iteration  29: 251627.116 ops/s
Iteration  30: 261627.204 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_443._Benchmark.benchmark_Cluster_443":
  249867.047 ±(99.9%) 3919.016 ops/s [Average]
  (min, avg, max) = (238561.354, 249867.047, 261627.204), stdev = 5865.799
  CI (99.9%): [245948.031, 253786.063] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_443._Benchmark.benchmark_Cluster_443  thrpt   30  249867.047 ± 3919.016  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_444._Benchmark.benchmark_Cluster_444$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_444._Benchmark.benchmark_Cluster_444

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10980.666 ops/s
# Warmup Iteration   2: 53753.125 ops/s
# Warmup Iteration   3: 59870.107 ops/s
# Warmup Iteration   4: 90515.537 ops/s
# Warmup Iteration   5: 63548.778 ops/s
# Warmup Iteration   6: 157213.211 ops/s
# Warmup Iteration   7: 184260.969 ops/s
# Warmup Iteration   8: 185802.290 ops/s
# Warmup Iteration   9: 189934.373 ops/s
# Warmup Iteration  10: 184984.611 ops/s
# Warmup Iteration  11: 195411.415 ops/s
# Warmup Iteration  12: 175634.415 ops/s
# Warmup Iteration  13: 198638.114 ops/s
# Warmup Iteration  14: 196553.826 ops/s
# Warmup Iteration  15: 197804.180 ops/s
# Warmup Iteration  16: 203718.195 ops/s
# Warmup Iteration  17: 199551.779 ops/s
# Warmup Iteration  18: 206872.335 ops/s
# Warmup Iteration  19: 206187.262 ops/s
# Warmup Iteration  20: 202529.859 ops/s
# Warmup Iteration  21: 210956.013 ops/s
# Warmup Iteration  22: 197413.803 ops/s
# Warmup Iteration  23: 200582.878 ops/s
# Warmup Iteration  24: 203535.322 ops/s
# Warmup Iteration  25: 204851.880 ops/s
# Warmup Iteration  26: 200124.971 ops/s
# Warmup Iteration  27: 212869.120 ops/s
# Warmup Iteration  28: 195812.519 ops/s
# Warmup Iteration  29: 204839.594 ops/s
# Warmup Iteration  30: 207791.604 ops/s
Iteration   1: 202346.367 ops/s
Iteration   2: 202016.582 ops/s
Iteration   3: 200726.562 ops/s
Iteration   4: 202841.098 ops/s
Iteration   5: 210667.410 ops/s
Iteration   6: 158923.053 ops/s
Iteration   7: 196311.693 ops/s
Iteration   8: 210784.038 ops/s
Iteration   9: 197700.942 ops/s
Iteration  10: 204258.556 ops/s
Iteration  11: 211782.234 ops/s
Iteration  12: 198982.332 ops/s
Iteration  13: 209119.384 ops/s
Iteration  14: 201706.934 ops/s
Iteration  15: 204272.271 ops/s
Iteration  16: 199428.812 ops/s
Iteration  17: 200523.574 ops/s
Iteration  18: 210306.838 ops/s
Iteration  19: 203710.149 ops/s
Iteration  20: 205026.445 ops/s
Iteration  21: 208679.762 ops/s
Iteration  22: 203285.607 ops/s
Iteration  23: 199007.848 ops/s
Iteration  24: 195200.064 ops/s
Iteration  25: 213556.522 ops/s
Iteration  26: 196317.629 ops/s
Iteration  27: 205120.467 ops/s
Iteration  28: 207286.106 ops/s
Iteration  29: 203050.343 ops/s
Iteration  30: 205050.356 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_444._Benchmark.benchmark_Cluster_444":
  202266.333 ±(99.9%) 6362.724 ops/s [Average]
  (min, avg, max) = (158923.053, 202266.333, 213556.522), stdev = 9523.427
  CI (99.9%): [195903.608, 208629.057] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_444._Benchmark.benchmark_Cluster_444  thrpt   30  202266.333 ± 6362.724  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_445._Benchmark.benchmark_Cluster_445$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_445._Benchmark.benchmark_Cluster_445

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3933.244 ops/s
# Warmup Iteration   2: 23987.975 ops/s
# Warmup Iteration   3: 42845.732 ops/s
# Warmup Iteration   4: 91958.479 ops/s
# Warmup Iteration   5: 91656.464 ops/s
# Warmup Iteration   6: 95122.339 ops/s
# Warmup Iteration   7: 93586.771 ops/s
# Warmup Iteration   8: 92922.206 ops/s
# Warmup Iteration   9: 102702.723 ops/s
# Warmup Iteration  10: 98171.609 ops/s
# Warmup Iteration  11: 99469.800 ops/s
# Warmup Iteration  12: 102363.173 ops/s
# Warmup Iteration  13: 99751.093 ops/s
# Warmup Iteration  14: 102553.829 ops/s
# Warmup Iteration  15: 97105.594 ops/s
# Warmup Iteration  16: 104942.870 ops/s
# Warmup Iteration  17: 102774.987 ops/s
# Warmup Iteration  18: 103654.153 ops/s
# Warmup Iteration  19: 109202.038 ops/s
# Warmup Iteration  20: 101171.067 ops/s
# Warmup Iteration  21: 107459.180 ops/s
# Warmup Iteration  22: 101776.564 ops/s
# Warmup Iteration  23: 105024.374 ops/s
# Warmup Iteration  24: 104937.265 ops/s
# Warmup Iteration  25: 102961.163 ops/s
# Warmup Iteration  26: 108570.338 ops/s
# Warmup Iteration  27: 105168.667 ops/s
# Warmup Iteration  28: 104187.029 ops/s
# Warmup Iteration  29: 103249.369 ops/s
# Warmup Iteration  30: 103954.223 ops/s
Iteration   1: 104949.547 ops/s
Iteration   2: 106143.032 ops/s
Iteration   3: 100309.368 ops/s
Iteration   4: 103454.189 ops/s
Iteration   5: 102346.100 ops/s
Iteration   6: 102223.620 ops/s
Iteration   7: 102771.519 ops/s
Iteration   8: 102630.809 ops/s
Iteration   9: 103729.785 ops/s
Iteration  10: 107428.552 ops/s
Iteration  11: 102305.456 ops/s
Iteration  12: 103533.976 ops/s
Iteration  13: 102178.109 ops/s
Iteration  14: 106939.941 ops/s
Iteration  15: 107277.088 ops/s
Iteration  16: 101766.150 ops/s
Iteration  17: 105712.052 ops/s
Iteration  18: 104687.466 ops/s
Iteration  19: 103406.653 ops/s
Iteration  20: 108104.123 ops/s
Iteration  21: 101079.433 ops/s
Iteration  22: 108178.810 ops/s
Iteration  23: 101208.068 ops/s
Iteration  24: 108077.039 ops/s
Iteration  25: 106223.570 ops/s
Iteration  26: 102457.114 ops/s
Iteration  27: 106652.098 ops/s
Iteration  28: 104763.888 ops/s
Iteration  29: 104900.700 ops/s
Iteration  30: 101246.062 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_445._Benchmark.benchmark_Cluster_445":
  104222.811 ±(99.9%) 1589.555 ops/s [Average]
  (min, avg, max) = (100309.368, 104222.811, 108178.810), stdev = 2379.171
  CI (99.9%): [102633.256, 105812.365] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_445._Benchmark.benchmark_Cluster_445  thrpt   30  104222.811 ± 1589.555  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_446._Benchmark.benchmark_Cluster_446$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_446._Benchmark.benchmark_Cluster_446

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.768 ops/s
# Warmup Iteration   2: 5996.403 ops/s
# Warmup Iteration   3: 23591.835 ops/s
# Warmup Iteration   4: 30549.762 ops/s
# Warmup Iteration   5: 30648.260 ops/s
# Warmup Iteration   6: 45695.954 ops/s
# Warmup Iteration   7: 43214.923 ops/s
# Warmup Iteration   8: 52689.299 ops/s
# Warmup Iteration   9: 47030.453 ops/s
# Warmup Iteration  10: 59653.390 ops/s
# Warmup Iteration  11: 111256.243 ops/s
# Warmup Iteration  12: 127029.474 ops/s
# Warmup Iteration  13: 123474.622 ops/s
# Warmup Iteration  14: 137808.634 ops/s
# Warmup Iteration  15: 134500.574 ops/s
# Warmup Iteration  16: 138198.223 ops/s
# Warmup Iteration  17: 137764.299 ops/s
# Warmup Iteration  18: 131437.496 ops/s
# Warmup Iteration  19: 134981.307 ops/s
# Warmup Iteration  20: 125591.931 ops/s
# Warmup Iteration  21: 131866.616 ops/s
# Warmup Iteration  22: 133255.546 ops/s
# Warmup Iteration  23: 137405.451 ops/s
# Warmup Iteration  24: 132168.637 ops/s
# Warmup Iteration  25: 138911.474 ops/s
# Warmup Iteration  26: 137426.225 ops/s
# Warmup Iteration  27: 132571.932 ops/s
# Warmup Iteration  28: 135869.700 ops/s
# Warmup Iteration  29: 133366.532 ops/s
# Warmup Iteration  30: 109177.907 ops/s
Iteration   1: 131353.318 ops/s
Iteration   2: 134919.083 ops/s
Iteration   3: 137099.392 ops/s
Iteration   4: 134048.657 ops/s
Iteration   5: 135092.604 ops/s
Iteration   6: 135845.466 ops/s
Iteration   7: 133847.504 ops/s
Iteration   8: 139842.041 ops/s
Iteration   9: 134628.559 ops/s
Iteration  10: 137621.364 ops/s
Iteration  11: 135148.036 ops/s
Iteration  12: 136758.543 ops/s
Iteration  13: 142184.537 ops/s
Iteration  14: 141070.193 ops/s
Iteration  15: 132980.607 ops/s
Iteration  16: 137288.432 ops/s
Iteration  17: 131713.074 ops/s
Iteration  18: 139233.328 ops/s
Iteration  19: 134806.079 ops/s
Iteration  20: 136359.441 ops/s
Iteration  21: 134932.499 ops/s
Iteration  22: 136074.562 ops/s
Iteration  23: 136822.900 ops/s
Iteration  24: 135375.229 ops/s
Iteration  25: 137786.865 ops/s
Iteration  26: 134493.824 ops/s
Iteration  27: 138377.533 ops/s
Iteration  28: 132828.886 ops/s
Iteration  29: 133205.813 ops/s
Iteration  30: 139377.250 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_446._Benchmark.benchmark_Cluster_446":
  136037.187 ±(99.9%) 1761.129 ops/s [Average]
  (min, avg, max) = (131353.318, 136037.187, 142184.537), stdev = 2635.975
  CI (99.9%): [134276.058, 137798.316] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_446._Benchmark.benchmark_Cluster_446  thrpt   30  136037.187 ± 1761.129  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_447._Benchmark.benchmark_Cluster_447$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_447._Benchmark.benchmark_Cluster_447

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.779 ops/s
# Warmup Iteration   2: 8775.468 ops/s
# Warmup Iteration   3: 33946.827 ops/s
# Warmup Iteration   4: 34681.530 ops/s
# Warmup Iteration   5: 42075.341 ops/s
# Warmup Iteration   6: 50334.962 ops/s
# Warmup Iteration   7: 45070.587 ops/s
# Warmup Iteration   8: 51104.153 ops/s
# Warmup Iteration   9: 64645.172 ops/s
# Warmup Iteration  10: 107578.186 ops/s
# Warmup Iteration  11: 128867.022 ops/s
# Warmup Iteration  12: 137037.679 ops/s
# Warmup Iteration  13: 138527.847 ops/s
# Warmup Iteration  14: 139670.538 ops/s
# Warmup Iteration  15: 139395.253 ops/s
# Warmup Iteration  16: 131878.450 ops/s
# Warmup Iteration  17: 143260.675 ops/s
# Warmup Iteration  18: 136598.748 ops/s
# Warmup Iteration  19: 144644.637 ops/s
# Warmup Iteration  20: 138079.663 ops/s
# Warmup Iteration  21: 126173.409 ops/s
# Warmup Iteration  22: 146137.189 ops/s
# Warmup Iteration  23: 135917.457 ops/s
# Warmup Iteration  24: 145601.154 ops/s
# Warmup Iteration  25: 137875.916 ops/s
# Warmup Iteration  26: 139542.853 ops/s
# Warmup Iteration  27: 142573.614 ops/s
# Warmup Iteration  28: 137268.326 ops/s
# Warmup Iteration  29: 140635.586 ops/s
# Warmup Iteration  30: 138575.709 ops/s
Iteration   1: 144567.467 ops/s
Iteration   2: 142927.961 ops/s
Iteration   3: 135217.935 ops/s
Iteration   4: 137072.643 ops/s
Iteration   5: 141360.343 ops/s
Iteration   6: 134903.494 ops/s
Iteration   7: 137915.610 ops/s
Iteration   8: 138028.776 ops/s
Iteration   9: 140117.995 ops/s
Iteration  10: 145710.480 ops/s
Iteration  11: 135146.595 ops/s
Iteration  12: 141326.786 ops/s
Iteration  13: 137494.076 ops/s
Iteration  14: 138233.824 ops/s
Iteration  15: 139159.374 ops/s
Iteration  16: 142147.902 ops/s
Iteration  17: 135307.212 ops/s
Iteration  18: 138747.898 ops/s
Iteration  19: 142301.008 ops/s
Iteration  20: 135732.116 ops/s
Iteration  21: 142640.404 ops/s
Iteration  22: 137981.014 ops/s
Iteration  23: 142999.995 ops/s
Iteration  24: 144434.959 ops/s
Iteration  25: 139504.240 ops/s
Iteration  26: 144689.387 ops/s
Iteration  27: 138646.157 ops/s
Iteration  28: 139278.381 ops/s
Iteration  29: 145664.063 ops/s
Iteration  30: 136213.363 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_447._Benchmark.benchmark_Cluster_447":
  139849.049 ±(99.9%) 2242.563 ops/s [Average]
  (min, avg, max) = (134903.494, 139849.049, 145710.480), stdev = 3356.563
  CI (99.9%): [137606.486, 142091.612] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_447._Benchmark.benchmark_Cluster_447  thrpt   30  139849.049 ± 2242.563  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_448._Benchmark.benchmark_Cluster_448$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_448._Benchmark.benchmark_Cluster_448

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2218.126 ops/s
# Warmup Iteration   2: 19092.449 ops/s
# Warmup Iteration   3: 22660.817 ops/s
# Warmup Iteration   4: 31807.696 ops/s
# Warmup Iteration   5: 35619.568 ops/s
# Warmup Iteration   6: 33751.513 ops/s
# Warmup Iteration   7: 44447.978 ops/s
# Warmup Iteration   8: 33846.426 ops/s
# Warmup Iteration   9: 35959.323 ops/s
# Warmup Iteration  10: 55928.797 ops/s
# Warmup Iteration  11: 95807.634 ops/s
# Warmup Iteration  12: 104553.433 ops/s
# Warmup Iteration  13: 110734.561 ops/s
# Warmup Iteration  14: 101449.358 ops/s
# Warmup Iteration  15: 108854.020 ops/s
# Warmup Iteration  16: 104175.778 ops/s
# Warmup Iteration  17: 112530.533 ops/s
# Warmup Iteration  18: 108552.373 ops/s
# Warmup Iteration  19: 109854.558 ops/s
# Warmup Iteration  20: 110724.249 ops/s
# Warmup Iteration  21: 110403.207 ops/s
# Warmup Iteration  22: 109338.898 ops/s
# Warmup Iteration  23: 103623.362 ops/s
# Warmup Iteration  24: 92418.956 ops/s
# Warmup Iteration  25: 108885.480 ops/s
# Warmup Iteration  26: 109164.956 ops/s
# Warmup Iteration  27: 108741.968 ops/s
# Warmup Iteration  28: 107712.319 ops/s
# Warmup Iteration  29: 111084.085 ops/s
# Warmup Iteration  30: 108558.680 ops/s
Iteration   1: 106200.370 ops/s
Iteration   2: 107666.606 ops/s
Iteration   3: 106602.882 ops/s
Iteration   4: 110388.390 ops/s
Iteration   5: 113358.153 ops/s
Iteration   6: 109695.951 ops/s
Iteration   7: 110399.446 ops/s
Iteration   8: 114069.368 ops/s
Iteration   9: 110495.533 ops/s
Iteration  10: 110229.150 ops/s
Iteration  11: 114485.169 ops/s
Iteration  12: 107222.723 ops/s
Iteration  13: 109350.359 ops/s
Iteration  14: 110079.679 ops/s
Iteration  15: 108616.164 ops/s
Iteration  16: 115398.042 ops/s
Iteration  17: 108400.971 ops/s
Iteration  18: 113458.152 ops/s
Iteration  19: 112104.568 ops/s
Iteration  20: 107584.770 ops/s
Iteration  21: 114075.645 ops/s
Iteration  22: 106261.845 ops/s
Iteration  23: 114053.143 ops/s
Iteration  24: 108950.785 ops/s
Iteration  25: 109332.518 ops/s
Iteration  26: 113677.650 ops/s
Iteration  27: 109206.068 ops/s
Iteration  28: 112009.415 ops/s
Iteration  29: 108564.148 ops/s
Iteration  30: 111814.896 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_448._Benchmark.benchmark_Cluster_448":
  110458.419 ±(99.9%) 1797.254 ops/s [Average]
  (min, avg, max) = (106200.370, 110458.419, 115398.042), stdev = 2690.045
  CI (99.9%): [108661.165, 112255.673] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_448._Benchmark.benchmark_Cluster_448  thrpt   30  110458.419 ± 1797.254  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_449._Benchmark.benchmark_Cluster_449$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_449._Benchmark.benchmark_Cluster_449

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 486.226 ops/s
# Warmup Iteration   2: 4547.485 ops/s
# Warmup Iteration   3: 20946.233 ops/s
# Warmup Iteration   4: 22980.371 ops/s
# Warmup Iteration   5: 24040.702 ops/s
# Warmup Iteration   6: 20859.126 ops/s
# Warmup Iteration   7: 23163.480 ops/s
# Warmup Iteration   8: 28998.643 ops/s
# Warmup Iteration   9: 30771.949 ops/s
# Warmup Iteration  10: 24581.716 ops/s
# Warmup Iteration  11: 27147.562 ops/s
# Warmup Iteration  12: 31035.524 ops/s
# Warmup Iteration  13: 36260.444 ops/s
# Warmup Iteration  14: 70055.293 ops/s
# Warmup Iteration  15: 71766.417 ops/s
# Warmup Iteration  16: 72222.949 ops/s
# Warmup Iteration  17: 75248.444 ops/s
# Warmup Iteration  18: 72891.821 ops/s
# Warmup Iteration  19: 75943.288 ops/s
# Warmup Iteration  20: 76693.885 ops/s
# Warmup Iteration  21: 71709.680 ops/s
# Warmup Iteration  22: 72700.811 ops/s
# Warmup Iteration  23: 73384.275 ops/s
# Warmup Iteration  24: 72891.614 ops/s
# Warmup Iteration  25: 72958.450 ops/s
# Warmup Iteration  26: 76077.482 ops/s
# Warmup Iteration  27: 78833.003 ops/s
# Warmup Iteration  28: 73429.513 ops/s
# Warmup Iteration  29: 75553.519 ops/s
# Warmup Iteration  30: 71177.725 ops/s
Iteration   1: 70631.528 ops/s
Iteration   2: 68525.346 ops/s
Iteration   3: 74146.830 ops/s
Iteration   4: 78212.565 ops/s
Iteration   5: 73729.587 ops/s
Iteration   6: 74720.441 ops/s
Iteration   7: 73929.594 ops/s
Iteration   8: 75967.452 ops/s
Iteration   9: 77314.932 ops/s
Iteration  10: 73256.775 ops/s
Iteration  11: 75109.445 ops/s
Iteration  12: 77386.208 ops/s
Iteration  13: 72587.281 ops/s
Iteration  14: 77191.995 ops/s
Iteration  15: 73875.616 ops/s
Iteration  16: 73984.221 ops/s
Iteration  17: 74681.545 ops/s
Iteration  18: 75731.325 ops/s
Iteration  19: 73785.923 ops/s
Iteration  20: 77318.359 ops/s
Iteration  21: 78988.723 ops/s
Iteration  22: 72712.958 ops/s
Iteration  23: 75377.112 ops/s
Iteration  24: 74233.721 ops/s
Iteration  25: 75823.288 ops/s
Iteration  26: 74414.988 ops/s
Iteration  27: 73430.274 ops/s
Iteration  28: 78066.144 ops/s
Iteration  29: 77746.419 ops/s
Iteration  30: 72283.247 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_449._Benchmark.benchmark_Cluster_449":
  74838.795 ±(99.9%) 1565.571 ops/s [Average]
  (min, avg, max) = (68525.346, 74838.795, 78988.723), stdev = 2343.273
  CI (99.9%): [73273.224, 76404.366] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_449._Benchmark.benchmark_Cluster_449  thrpt   30  74838.795 ± 1565.571  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_45._Benchmark.benchmark_Cluster_45$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_45._Benchmark.benchmark_Cluster_45

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.732 ops/s
# Warmup Iteration   2: 5570.690 ops/s
# Warmup Iteration   3: 25470.412 ops/s
# Warmup Iteration   4: 32103.655 ops/s
# Warmup Iteration   5: 50123.706 ops/s
# Warmup Iteration   6: 42135.187 ops/s
# Warmup Iteration   7: 95870.921 ops/s
# Warmup Iteration   8: 111577.113 ops/s
# Warmup Iteration   9: 107543.464 ops/s
# Warmup Iteration  10: 110516.547 ops/s
# Warmup Iteration  11: 103149.234 ops/s
# Warmup Iteration  12: 114759.855 ops/s
# Warmup Iteration  13: 116896.194 ops/s
# Warmup Iteration  14: 119779.013 ops/s
# Warmup Iteration  15: 114031.500 ops/s
# Warmup Iteration  16: 115640.566 ops/s
# Warmup Iteration  17: 102177.015 ops/s
# Warmup Iteration  18: 113789.453 ops/s
# Warmup Iteration  19: 115253.517 ops/s
# Warmup Iteration  20: 120077.449 ops/s
# Warmup Iteration  21: 117031.807 ops/s
# Warmup Iteration  22: 114574.645 ops/s
# Warmup Iteration  23: 120834.575 ops/s
# Warmup Iteration  24: 117194.353 ops/s
# Warmup Iteration  25: 115641.597 ops/s
# Warmup Iteration  26: 119775.091 ops/s
# Warmup Iteration  27: 115983.039 ops/s
# Warmup Iteration  28: 116592.083 ops/s
# Warmup Iteration  29: 118477.116 ops/s
# Warmup Iteration  30: 116355.360 ops/s
Iteration   1: 121140.854 ops/s
Iteration   2: 123010.353 ops/s
Iteration   3: 114814.242 ops/s
Iteration   4: 120627.138 ops/s
Iteration   5: 118272.006 ops/s
Iteration   6: 111275.744 ops/s
Iteration   7: 118806.544 ops/s
Iteration   8: 114402.669 ops/s
Iteration   9: 119758.186 ops/s
Iteration  10: 122910.333 ops/s
Iteration  11: 115137.269 ops/s
Iteration  12: 119746.807 ops/s
Iteration  13: 114837.886 ops/s
Iteration  14: 117855.786 ops/s
Iteration  15: 121655.341 ops/s
Iteration  16: 113330.896 ops/s
Iteration  17: 123317.866 ops/s
Iteration  18: 114636.968 ops/s
Iteration  19: 117706.023 ops/s
Iteration  20: 118090.080 ops/s
Iteration  21: 115626.106 ops/s
Iteration  22: 120933.291 ops/s
Iteration  23: 116338.885 ops/s
Iteration  24: 120186.566 ops/s
Iteration  25: 123075.292 ops/s
Iteration  26: 115732.214 ops/s
Iteration  27: 114585.250 ops/s
Iteration  28: 121624.332 ops/s
Iteration  29: 121723.064 ops/s
Iteration  30: 114373.974 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_45._Benchmark.benchmark_Cluster_45":
  118184.399 ±(99.9%) 2279.844 ops/s [Average]
  (min, avg, max) = (111275.744, 118184.399, 123317.866), stdev = 3412.363
  CI (99.9%): [115904.555, 120464.243] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_45._Benchmark.benchmark_Cluster_45  thrpt   30  118184.399 ± 2279.844  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_450._Benchmark.benchmark_Cluster_450$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_450._Benchmark.benchmark_Cluster_450

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9826.539 ops/s
# Warmup Iteration   2: 23258.651 ops/s
# Warmup Iteration   3: 51599.377 ops/s
# Warmup Iteration   4: 93055.480 ops/s
# Warmup Iteration   5: 128859.114 ops/s
# Warmup Iteration   6: 128375.841 ops/s
# Warmup Iteration   7: 124340.565 ops/s
# Warmup Iteration   8: 132242.002 ops/s
# Warmup Iteration   9: 136819.542 ops/s
# Warmup Iteration  10: 126324.020 ops/s
# Warmup Iteration  11: 133027.137 ops/s
# Warmup Iteration  12: 127364.341 ops/s
# Warmup Iteration  13: 126222.060 ops/s
# Warmup Iteration  14: 130301.184 ops/s
# Warmup Iteration  15: 129863.653 ops/s
# Warmup Iteration  16: 136326.194 ops/s
# Warmup Iteration  17: 134753.953 ops/s
# Warmup Iteration  18: 132948.706 ops/s
# Warmup Iteration  19: 138779.306 ops/s
# Warmup Iteration  20: 134821.382 ops/s
# Warmup Iteration  21: 131702.294 ops/s
# Warmup Iteration  22: 136494.958 ops/s
# Warmup Iteration  23: 136705.935 ops/s
# Warmup Iteration  24: 136962.937 ops/s
# Warmup Iteration  25: 132337.589 ops/s
# Warmup Iteration  26: 137478.351 ops/s
# Warmup Iteration  27: 135133.018 ops/s
# Warmup Iteration  28: 141906.463 ops/s
# Warmup Iteration  29: 132091.455 ops/s
# Warmup Iteration  30: 136054.552 ops/s
Iteration   1: 138037.348 ops/s
Iteration   2: 130106.040 ops/s
Iteration   3: 140778.104 ops/s
Iteration   4: 135599.875 ops/s
Iteration   5: 136083.680 ops/s
Iteration   6: 140003.379 ops/s
Iteration   7: 134482.519 ops/s
Iteration   8: 138811.260 ops/s
Iteration   9: 133189.766 ops/s
Iteration  10: 138418.016 ops/s
Iteration  11: 135297.596 ops/s
Iteration  12: 136229.027 ops/s
Iteration  13: 132810.330 ops/s
Iteration  14: 143588.705 ops/s
Iteration  15: 136259.885 ops/s
Iteration  16: 133429.998 ops/s
Iteration  17: 141023.623 ops/s
Iteration  18: 137172.838 ops/s
Iteration  19: 133592.304 ops/s
Iteration  20: 132926.954 ops/s
Iteration  21: 135204.687 ops/s
Iteration  22: 138960.336 ops/s
Iteration  23: 135910.802 ops/s
Iteration  24: 135653.307 ops/s
Iteration  25: 139430.032 ops/s
Iteration  26: 135283.031 ops/s
Iteration  27: 137485.899 ops/s
Iteration  28: 135560.214 ops/s
Iteration  29: 135253.123 ops/s
Iteration  30: 140591.391 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_450._Benchmark.benchmark_Cluster_450":
  136572.469 ±(99.9%) 1980.038 ops/s [Average]
  (min, avg, max) = (130106.040, 136572.469, 143588.705), stdev = 2963.628
  CI (99.9%): [134592.431, 138552.507] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_450._Benchmark.benchmark_Cluster_450  thrpt   30  136572.469 ± 1980.038  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_451._Benchmark.benchmark_Cluster_451$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_451._Benchmark.benchmark_Cluster_451

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3502.103 ops/s
# Warmup Iteration   2: 28345.619 ops/s
# Warmup Iteration   3: 21893.360 ops/s
# Warmup Iteration   4: 26905.600 ops/s
# Warmup Iteration   5: 33268.770 ops/s
# Warmup Iteration   6: 76322.795 ops/s
# Warmup Iteration   7: 97234.432 ops/s
# Warmup Iteration   8: 97352.991 ops/s
# Warmup Iteration   9: 96281.390 ops/s
# Warmup Iteration  10: 99222.567 ops/s
# Warmup Iteration  11: 87531.291 ops/s
# Warmup Iteration  12: 85433.626 ops/s
# Warmup Iteration  13: 98193.602 ops/s
# Warmup Iteration  14: 96170.073 ops/s
# Warmup Iteration  15: 96853.082 ops/s
# Warmup Iteration  16: 95577.887 ops/s
# Warmup Iteration  17: 102831.248 ops/s
# Warmup Iteration  18: 102780.085 ops/s
# Warmup Iteration  19: 103167.464 ops/s
# Warmup Iteration  20: 98622.253 ops/s
# Warmup Iteration  21: 103263.788 ops/s
# Warmup Iteration  22: 101477.492 ops/s
# Warmup Iteration  23: 102506.562 ops/s
# Warmup Iteration  24: 105431.116 ops/s
# Warmup Iteration  25: 94208.721 ops/s
# Warmup Iteration  26: 103483.855 ops/s
# Warmup Iteration  27: 105207.151 ops/s
# Warmup Iteration  28: 106099.291 ops/s
# Warmup Iteration  29: 101563.448 ops/s
# Warmup Iteration  30: 105480.060 ops/s
Iteration   1: 104388.960 ops/s
Iteration   2: 102087.971 ops/s
Iteration   3: 103007.898 ops/s
Iteration   4: 102664.051 ops/s
Iteration   5: 101855.086 ops/s
Iteration   6: 103723.068 ops/s
Iteration   7: 101181.340 ops/s
Iteration   8: 106117.118 ops/s
Iteration   9: 103267.685 ops/s
Iteration  10: 97887.556 ops/s
Iteration  11: 105951.711 ops/s
Iteration  12: 101997.418 ops/s
Iteration  13: 103560.714 ops/s
Iteration  14: 105001.402 ops/s
Iteration  15: 99059.513 ops/s
Iteration  16: 102615.473 ops/s
Iteration  17: 104609.815 ops/s
Iteration  18: 104888.977 ops/s
Iteration  19: 101837.539 ops/s
Iteration  20: 106084.119 ops/s
Iteration  21: 98575.219 ops/s
Iteration  22: 102850.316 ops/s
Iteration  23: 106103.263 ops/s
Iteration  24: 98639.595 ops/s
Iteration  25: 103763.582 ops/s
Iteration  26: 102170.448 ops/s
Iteration  27: 103895.141 ops/s
Iteration  28: 106791.996 ops/s
Iteration  29: 98446.261 ops/s
Iteration  30: 103081.410 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_451._Benchmark.benchmark_Cluster_451":
  102870.155 ±(99.9%) 1644.088 ops/s [Average]
  (min, avg, max) = (97887.556, 102870.155, 106791.996), stdev = 2460.794
  CI (99.9%): [101226.066, 104514.243] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_451._Benchmark.benchmark_Cluster_451  thrpt   30  102870.155 ± 1644.088  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_452._Benchmark.benchmark_Cluster_452$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_452._Benchmark.benchmark_Cluster_452

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 22072.139 ops/s
# Warmup Iteration   2: 38252.572 ops/s
# Warmup Iteration   3: 77446.593 ops/s
# Warmup Iteration   4: 133479.524 ops/s
# Warmup Iteration   5: 140775.401 ops/s
# Warmup Iteration   6: 129832.018 ops/s
# Warmup Iteration   7: 123407.983 ops/s
# Warmup Iteration   8: 140185.347 ops/s
# Warmup Iteration   9: 131365.723 ops/s
# Warmup Iteration  10: 141734.512 ops/s
# Warmup Iteration  11: 132568.828 ops/s
# Warmup Iteration  12: 135010.554 ops/s
# Warmup Iteration  13: 138581.961 ops/s
# Warmup Iteration  14: 125116.655 ops/s
# Warmup Iteration  15: 140369.994 ops/s
# Warmup Iteration  16: 134482.706 ops/s
# Warmup Iteration  17: 143358.690 ops/s
# Warmup Iteration  18: 139585.233 ops/s
# Warmup Iteration  19: 146135.615 ops/s
# Warmup Iteration  20: 139671.592 ops/s
# Warmup Iteration  21: 140780.002 ops/s
# Warmup Iteration  22: 144763.281 ops/s
# Warmup Iteration  23: 139130.485 ops/s
# Warmup Iteration  24: 137075.207 ops/s
# Warmup Iteration  25: 148603.046 ops/s
# Warmup Iteration  26: 127266.296 ops/s
# Warmup Iteration  27: 148494.650 ops/s
# Warmup Iteration  28: 139478.897 ops/s
# Warmup Iteration  29: 144849.821 ops/s
# Warmup Iteration  30: 138634.096 ops/s
Iteration   1: 143422.880 ops/s
Iteration   2: 144210.448 ops/s
Iteration   3: 141184.753 ops/s
Iteration   4: 144764.773 ops/s
Iteration   5: 137314.276 ops/s
Iteration   6: 144226.840 ops/s
Iteration   7: 142391.810 ops/s
Iteration   8: 142623.200 ops/s
Iteration   9: 144763.462 ops/s
Iteration  10: 135196.310 ops/s
Iteration  11: 142224.546 ops/s
Iteration  12: 141037.693 ops/s
Iteration  13: 143238.296 ops/s
Iteration  14: 140051.168 ops/s
Iteration  15: 140534.645 ops/s
Iteration  16: 145365.583 ops/s
Iteration  17: 136377.222 ops/s
Iteration  18: 146591.833 ops/s
Iteration  19: 143046.990 ops/s
Iteration  20: 142627.773 ops/s
Iteration  21: 147502.248 ops/s
Iteration  22: 138811.972 ops/s
Iteration  23: 142931.161 ops/s
Iteration  24: 139112.109 ops/s
Iteration  25: 143646.714 ops/s
Iteration  26: 142336.939 ops/s
Iteration  27: 136241.729 ops/s
Iteration  28: 144924.040 ops/s
Iteration  29: 135426.295 ops/s
Iteration  30: 150315.465 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_452._Benchmark.benchmark_Cluster_452":
  142081.439 ±(99.9%) 2408.646 ops/s [Average]
  (min, avg, max) = (135196.310, 142081.439, 150315.465), stdev = 3605.148
  CI (99.9%): [139672.793, 144490.085] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_452._Benchmark.benchmark_Cluster_452  thrpt   30  142081.439 ± 2408.646  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_453._Benchmark.benchmark_Cluster_453$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_453._Benchmark.benchmark_Cluster_453

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12618.533 ops/s
# Warmup Iteration   2: 69765.289 ops/s
# Warmup Iteration   3: 105989.800 ops/s
# Warmup Iteration   4: 128841.207 ops/s
# Warmup Iteration   5: 123243.028 ops/s
# Warmup Iteration   6: 94070.040 ops/s
# Warmup Iteration   7: 129512.040 ops/s
# Warmup Iteration   8: 118915.601 ops/s
# Warmup Iteration   9: 132292.914 ops/s
# Warmup Iteration  10: 127363.690 ops/s
# Warmup Iteration  11: 126765.932 ops/s
# Warmup Iteration  12: 121535.124 ops/s
# Warmup Iteration  13: 129851.143 ops/s
# Warmup Iteration  14: 123815.701 ops/s
# Warmup Iteration  15: 128289.406 ops/s
# Warmup Iteration  16: 124161.101 ops/s
# Warmup Iteration  17: 134293.344 ops/s
# Warmup Iteration  18: 128936.721 ops/s
# Warmup Iteration  19: 133068.799 ops/s
# Warmup Iteration  20: 130611.103 ops/s
# Warmup Iteration  21: 129901.014 ops/s
# Warmup Iteration  22: 131939.553 ops/s
# Warmup Iteration  23: 129749.244 ops/s
# Warmup Iteration  24: 129085.162 ops/s
# Warmup Iteration  25: 134775.331 ops/s
# Warmup Iteration  26: 126994.228 ops/s
# Warmup Iteration  27: 134635.943 ops/s
# Warmup Iteration  28: 124449.129 ops/s
# Warmup Iteration  29: 133265.593 ops/s
# Warmup Iteration  30: 133070.716 ops/s
Iteration   1: 127800.323 ops/s
Iteration   2: 135300.389 ops/s
Iteration   3: 131847.769 ops/s
Iteration   4: 132328.023 ops/s
Iteration   5: 132057.311 ops/s
Iteration   6: 129756.129 ops/s
Iteration   7: 128578.601 ops/s
Iteration   8: 128268.418 ops/s
Iteration   9: 134519.856 ops/s
Iteration  10: 129787.411 ops/s
Iteration  11: 132082.298 ops/s
Iteration  12: 125628.827 ops/s
Iteration  13: 133536.075 ops/s
Iteration  14: 134534.219 ops/s
Iteration  15: 130726.487 ops/s
Iteration  16: 128896.754 ops/s
Iteration  17: 129815.183 ops/s
Iteration  18: 132210.103 ops/s
Iteration  19: 133196.953 ops/s
Iteration  20: 129707.263 ops/s
Iteration  21: 127503.858 ops/s
Iteration  22: 134545.802 ops/s
Iteration  23: 127594.634 ops/s
Iteration  24: 133195.261 ops/s
Iteration  25: 125238.411 ops/s
Iteration  26: 132219.238 ops/s
Iteration  27: 124672.126 ops/s
Iteration  28: 133320.326 ops/s
Iteration  29: 133490.408 ops/s
Iteration  30: 129773.782 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_453._Benchmark.benchmark_Cluster_453":
  130737.741 ±(99.9%) 1964.912 ops/s [Average]
  (min, avg, max) = (124672.126, 130737.741, 135300.389), stdev = 2940.988
  CI (99.9%): [128772.829, 132702.653] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_453._Benchmark.benchmark_Cluster_453  thrpt   30  130737.741 ± 1964.912  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_454._Benchmark.benchmark_Cluster_454$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_454._Benchmark.benchmark_Cluster_454

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8554.723 ops/s
# Warmup Iteration   2: 32487.784 ops/s
# Warmup Iteration   3: 32315.486 ops/s
# Warmup Iteration   4: 51733.568 ops/s
# Warmup Iteration   5: 103119.161 ops/s
# Warmup Iteration   6: 106707.236 ops/s
# Warmup Iteration   7: 112359.981 ops/s
# Warmup Iteration   8: 108667.086 ops/s
# Warmup Iteration   9: 108405.683 ops/s
# Warmup Iteration  10: 116417.216 ops/s
# Warmup Iteration  11: 120369.514 ops/s
# Warmup Iteration  12: 120517.488 ops/s
# Warmup Iteration  13: 114636.382 ops/s
# Warmup Iteration  14: 120508.153 ops/s
# Warmup Iteration  15: 116075.381 ops/s
# Warmup Iteration  16: 123774.192 ops/s
# Warmup Iteration  17: 125433.698 ops/s
# Warmup Iteration  18: 124325.153 ops/s
# Warmup Iteration  19: 128383.998 ops/s
# Warmup Iteration  20: 125040.048 ops/s
# Warmup Iteration  21: 127881.243 ops/s
# Warmup Iteration  22: 122498.855 ops/s
# Warmup Iteration  23: 125370.154 ops/s
# Warmup Iteration  24: 126203.156 ops/s
# Warmup Iteration  25: 127405.704 ops/s
# Warmup Iteration  26: 123557.863 ops/s
# Warmup Iteration  27: 127205.895 ops/s
# Warmup Iteration  28: 126680.599 ops/s
# Warmup Iteration  29: 119528.867 ops/s
# Warmup Iteration  30: 122112.338 ops/s
Iteration   1: 128217.255 ops/s
Iteration   2: 126629.791 ops/s
Iteration   3: 127636.589 ops/s
Iteration   4: 125684.829 ops/s
Iteration   5: 123685.620 ops/s
Iteration   6: 130061.159 ops/s
Iteration   7: 130690.923 ops/s
Iteration   8: 122067.234 ops/s
Iteration   9: 130259.844 ops/s
Iteration  10: 119196.055 ops/s
Iteration  11: 125264.477 ops/s
Iteration  12: 125925.845 ops/s
Iteration  13: 121167.578 ops/s
Iteration  14: 121995.151 ops/s
Iteration  15: 127088.785 ops/s
Iteration  16: 123595.238 ops/s
Iteration  17: 128121.291 ops/s
Iteration  18: 122114.504 ops/s
Iteration  19: 126332.576 ops/s
Iteration  20: 127115.700 ops/s
Iteration  21: 124944.861 ops/s
Iteration  22: 125407.351 ops/s
Iteration  23: 124917.277 ops/s
Iteration  24: 131716.840 ops/s
Iteration  25: 121354.192 ops/s
Iteration  26: 128935.270 ops/s
Iteration  27: 125807.044 ops/s
Iteration  28: 123866.367 ops/s
Iteration  29: 129857.803 ops/s
Iteration  30: 121271.790 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_454._Benchmark.benchmark_Cluster_454":
  125697.641 ±(99.9%) 2164.271 ops/s [Average]
  (min, avg, max) = (119196.055, 125697.641, 131716.840), stdev = 3239.379
  CI (99.9%): [123533.371, 127861.912] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_454._Benchmark.benchmark_Cluster_454  thrpt   30  125697.641 ± 2164.271  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_455._Benchmark.benchmark_Cluster_455$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_455._Benchmark.benchmark_Cluster_455

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1547.628 ops/s
# Warmup Iteration   2: 14935.739 ops/s
# Warmup Iteration   3: 32157.836 ops/s
# Warmup Iteration   4: 38376.423 ops/s
# Warmup Iteration   5: 77767.476 ops/s
# Warmup Iteration   6: 113958.311 ops/s
# Warmup Iteration   7: 112543.166 ops/s
# Warmup Iteration   8: 115010.876 ops/s
# Warmup Iteration   9: 113843.565 ops/s
# Warmup Iteration  10: 117459.769 ops/s
# Warmup Iteration  11: 121246.269 ops/s
# Warmup Iteration  12: 119312.688 ops/s
# Warmup Iteration  13: 124091.683 ops/s
# Warmup Iteration  14: 115588.696 ops/s
# Warmup Iteration  15: 123401.933 ops/s
# Warmup Iteration  16: 119980.534 ops/s
# Warmup Iteration  17: 124270.863 ops/s
# Warmup Iteration  18: 123868.208 ops/s
# Warmup Iteration  19: 120602.452 ops/s
# Warmup Iteration  20: 124502.760 ops/s
# Warmup Iteration  21: 128589.073 ops/s
# Warmup Iteration  22: 122270.381 ops/s
# Warmup Iteration  23: 126350.569 ops/s
# Warmup Iteration  24: 119943.689 ops/s
# Warmup Iteration  25: 126310.694 ops/s
# Warmup Iteration  26: 120996.000 ops/s
# Warmup Iteration  27: 126599.833 ops/s
# Warmup Iteration  28: 120725.874 ops/s
# Warmup Iteration  29: 122601.404 ops/s
# Warmup Iteration  30: 122928.655 ops/s
Iteration   1: 119655.017 ops/s
Iteration   2: 127148.472 ops/s
Iteration   3: 125656.554 ops/s
Iteration   4: 122358.639 ops/s
Iteration   5: 130413.450 ops/s
Iteration   6: 120723.651 ops/s
Iteration   7: 128366.808 ops/s
Iteration   8: 122634.120 ops/s
Iteration   9: 124817.855 ops/s
Iteration  10: 127973.733 ops/s
Iteration  11: 129519.111 ops/s
Iteration  12: 121787.838 ops/s
Iteration  13: 126706.974 ops/s
Iteration  14: 123666.258 ops/s
Iteration  15: 123924.822 ops/s
Iteration  16: 117661.954 ops/s
Iteration  17: 125884.091 ops/s
Iteration  18: 128374.336 ops/s
Iteration  19: 125149.277 ops/s
Iteration  20: 124288.171 ops/s
Iteration  21: 126202.066 ops/s
Iteration  22: 126006.783 ops/s
Iteration  23: 132259.694 ops/s
Iteration  24: 126336.907 ops/s
Iteration  25: 121574.952 ops/s
Iteration  26: 128733.348 ops/s
Iteration  27: 124026.765 ops/s
Iteration  28: 125814.217 ops/s
Iteration  29: 121228.356 ops/s
Iteration  30: 127913.431 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_455._Benchmark.benchmark_Cluster_455":
  125226.922 ±(99.9%) 2228.084 ops/s [Average]
  (min, avg, max) = (117661.954, 125226.922, 132259.694), stdev = 3334.892
  CI (99.9%): [122998.838, 127455.006] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_455._Benchmark.benchmark_Cluster_455  thrpt   30  125226.922 ± 2228.084  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_456._Benchmark.benchmark_Cluster_456$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_456._Benchmark.benchmark_Cluster_456

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6439.344 ops/s
# Warmup Iteration   2: 35404.576 ops/s
# Warmup Iteration   3: 107349.344 ops/s
# Warmup Iteration   4: 124285.748 ops/s
# Warmup Iteration   5: 132051.956 ops/s
# Warmup Iteration   6: 126729.625 ops/s
# Warmup Iteration   7: 132142.037 ops/s
# Warmup Iteration   8: 129098.955 ops/s
# Warmup Iteration   9: 128798.969 ops/s
# Warmup Iteration  10: 133915.307 ops/s
# Warmup Iteration  11: 136277.017 ops/s
# Warmup Iteration  12: 128396.295 ops/s
# Warmup Iteration  13: 137433.788 ops/s
# Warmup Iteration  14: 132242.446 ops/s
# Warmup Iteration  15: 130794.615 ops/s
# Warmup Iteration  16: 134510.850 ops/s
# Warmup Iteration  17: 134602.546 ops/s
# Warmup Iteration  18: 133308.577 ops/s
# Warmup Iteration  19: 133124.829 ops/s
# Warmup Iteration  20: 134424.376 ops/s
# Warmup Iteration  21: 142352.553 ops/s
# Warmup Iteration  22: 132400.753 ops/s
# Warmup Iteration  23: 132670.675 ops/s
# Warmup Iteration  24: 137055.484 ops/s
# Warmup Iteration  25: 136720.762 ops/s
# Warmup Iteration  26: 133591.236 ops/s
# Warmup Iteration  27: 137867.554 ops/s
# Warmup Iteration  28: 134140.189 ops/s
# Warmup Iteration  29: 136124.981 ops/s
# Warmup Iteration  30: 136809.157 ops/s
Iteration   1: 134326.262 ops/s
Iteration   2: 140442.432 ops/s
Iteration   3: 130545.077 ops/s
Iteration   4: 140926.352 ops/s
Iteration   5: 132260.057 ops/s
Iteration   6: 133413.969 ops/s
Iteration   7: 140586.127 ops/s
Iteration   8: 134305.266 ops/s
Iteration   9: 133489.147 ops/s
Iteration  10: 136099.434 ops/s
Iteration  11: 138494.363 ops/s
Iteration  12: 137240.833 ops/s
Iteration  13: 133991.634 ops/s
Iteration  14: 135193.257 ops/s
Iteration  15: 134860.775 ops/s
Iteration  16: 132339.294 ops/s
Iteration  17: 136436.895 ops/s
Iteration  18: 132809.898 ops/s
Iteration  19: 135069.365 ops/s
Iteration  20: 133722.086 ops/s
Iteration  21: 136751.068 ops/s
Iteration  22: 135735.184 ops/s
Iteration  23: 134625.052 ops/s
Iteration  24: 141840.598 ops/s
Iteration  25: 137071.542 ops/s
Iteration  26: 133372.235 ops/s
Iteration  27: 103080.617 ops/s
Iteration  28: 140982.003 ops/s
Iteration  29: 131570.052 ops/s
Iteration  30: 136418.644 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_456._Benchmark.benchmark_Cluster_456":
  134599.984 ±(99.9%) 4447.738 ops/s [Average]
  (min, avg, max) = (103080.617, 134599.984, 141840.598), stdev = 6657.165
  CI (99.9%): [130152.246, 139047.722] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_456._Benchmark.benchmark_Cluster_456  thrpt   30  134599.984 ± 4447.738  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_457._Benchmark.benchmark_Cluster_457$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_457._Benchmark.benchmark_Cluster_457

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8065.986 ops/s
# Warmup Iteration   2: 42772.542 ops/s
# Warmup Iteration   3: 48097.854 ops/s
# Warmup Iteration   4: 61535.905 ops/s
# Warmup Iteration   5: 61738.033 ops/s
# Warmup Iteration   6: 61385.917 ops/s
# Warmup Iteration   7: 56481.741 ops/s
# Warmup Iteration   8: 109540.395 ops/s
# Warmup Iteration   9: 121750.118 ops/s
# Warmup Iteration  10: 126940.699 ops/s
# Warmup Iteration  11: 127979.714 ops/s
# Warmup Iteration  12: 124605.315 ops/s
# Warmup Iteration  13: 124961.301 ops/s
# Warmup Iteration  14: 120805.716 ops/s
# Warmup Iteration  15: 131602.954 ops/s
# Warmup Iteration  16: 127924.499 ops/s
# Warmup Iteration  17: 133254.210 ops/s
# Warmup Iteration  18: 132501.745 ops/s
# Warmup Iteration  19: 129257.850 ops/s
# Warmup Iteration  20: 135462.426 ops/s
# Warmup Iteration  21: 128745.790 ops/s
# Warmup Iteration  22: 136852.691 ops/s
# Warmup Iteration  23: 127873.919 ops/s
# Warmup Iteration  24: 129909.571 ops/s
# Warmup Iteration  25: 136639.250 ops/s
# Warmup Iteration  26: 127436.511 ops/s
# Warmup Iteration  27: 136380.930 ops/s
# Warmup Iteration  28: 126066.604 ops/s
# Warmup Iteration  29: 133014.318 ops/s
# Warmup Iteration  30: 136035.173 ops/s
Iteration   1: 129244.102 ops/s
Iteration   2: 134276.161 ops/s
Iteration   3: 127581.002 ops/s
Iteration   4: 134505.609 ops/s
Iteration   5: 128401.493 ops/s
Iteration   6: 133242.065 ops/s
Iteration   7: 134840.568 ops/s
Iteration   8: 125821.129 ops/s
Iteration   9: 135944.432 ops/s
Iteration  10: 129188.210 ops/s
Iteration  11: 134089.749 ops/s
Iteration  12: 129672.521 ops/s
Iteration  13: 133939.927 ops/s
Iteration  14: 130155.289 ops/s
Iteration  15: 130457.898 ops/s
Iteration  16: 135280.829 ops/s
Iteration  17: 134028.973 ops/s
Iteration  18: 131853.500 ops/s
Iteration  19: 127432.467 ops/s
Iteration  20: 128852.814 ops/s
Iteration  21: 131216.822 ops/s
Iteration  22: 137106.205 ops/s
Iteration  23: 130270.474 ops/s
Iteration  24: 134143.360 ops/s
Iteration  25: 129260.579 ops/s
Iteration  26: 130294.069 ops/s
Iteration  27: 130697.417 ops/s
Iteration  28: 133712.855 ops/s
Iteration  29: 129550.974 ops/s
Iteration  30: 129764.755 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_457._Benchmark.benchmark_Cluster_457":
  131494.208 ±(99.9%) 1923.693 ops/s [Average]
  (min, avg, max) = (125821.129, 131494.208, 137106.205), stdev = 2879.294
  CI (99.9%): [129570.515, 133417.902] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_457._Benchmark.benchmark_Cluster_457  thrpt   30  131494.208 ± 1923.693  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_458._Benchmark.benchmark_Cluster_458$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_458._Benchmark.benchmark_Cluster_458

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5935.666 ops/s
# Warmup Iteration   2: 27346.791 ops/s
# Warmup Iteration   3: 65698.509 ops/s
# Warmup Iteration   4: 70686.765 ops/s
# Warmup Iteration   5: 95916.544 ops/s
# Warmup Iteration   6: 104181.150 ops/s
# Warmup Iteration   7: 108817.463 ops/s
# Warmup Iteration   8: 104372.198 ops/s
# Warmup Iteration   9: 108975.277 ops/s
# Warmup Iteration  10: 103953.937 ops/s
# Warmup Iteration  11: 103405.945 ops/s
# Warmup Iteration  12: 104315.063 ops/s
# Warmup Iteration  13: 101199.490 ops/s
# Warmup Iteration  14: 102724.162 ops/s
# Warmup Iteration  15: 103218.700 ops/s
# Warmup Iteration  16: 104468.214 ops/s
# Warmup Iteration  17: 107410.875 ops/s
# Warmup Iteration  18: 109397.437 ops/s
# Warmup Iteration  19: 109291.551 ops/s
# Warmup Iteration  20: 109697.365 ops/s
# Warmup Iteration  21: 112763.457 ops/s
# Warmup Iteration  22: 105954.588 ops/s
# Warmup Iteration  23: 108228.987 ops/s
# Warmup Iteration  24: 110164.133 ops/s
# Warmup Iteration  25: 106386.047 ops/s
# Warmup Iteration  26: 110213.803 ops/s
# Warmup Iteration  27: 107278.529 ops/s
# Warmup Iteration  28: 108797.599 ops/s
# Warmup Iteration  29: 113347.515 ops/s
# Warmup Iteration  30: 108006.151 ops/s
Iteration   1: 110427.384 ops/s
Iteration   2: 107978.672 ops/s
Iteration   3: 108688.904 ops/s
Iteration   4: 113696.667 ops/s
Iteration   5: 106575.027 ops/s
Iteration   6: 110891.285 ops/s
Iteration   7: 107707.853 ops/s
Iteration   8: 110174.203 ops/s
Iteration   9: 107747.041 ops/s
Iteration  10: 109760.522 ops/s
Iteration  11: 110450.194 ops/s
Iteration  12: 108297.767 ops/s
Iteration  13: 111007.132 ops/s
Iteration  14: 108135.228 ops/s
Iteration  15: 104792.299 ops/s
Iteration  16: 112824.730 ops/s
Iteration  17: 110923.880 ops/s
Iteration  18: 107678.032 ops/s
Iteration  19: 111343.579 ops/s
Iteration  20: 107833.050 ops/s
Iteration  21: 86992.804 ops/s
Iteration  22: 106217.478 ops/s
Iteration  23: 107952.098 ops/s
Iteration  24: 111277.436 ops/s
Iteration  25: 106959.543 ops/s
Iteration  26: 109812.575 ops/s
Iteration  27: 107587.405 ops/s
Iteration  28: 109527.320 ops/s
Iteration  29: 110174.587 ops/s
Iteration  30: 108811.129 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_458._Benchmark.benchmark_Cluster_458":
  108408.194 ±(99.9%) 3009.063 ops/s [Average]
  (min, avg, max) = (86992.804, 108408.194, 113696.667), stdev = 4503.824
  CI (99.9%): [105399.131, 111417.257] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_458._Benchmark.benchmark_Cluster_458  thrpt   30  108408.194 ± 3009.063  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_459._Benchmark.benchmark_Cluster_459$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_459._Benchmark.benchmark_Cluster_459

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.831 ops/s
# Warmup Iteration   2: 1761.096 ops/s
# Warmup Iteration   3: 3574.895 ops/s
# Warmup Iteration   4: 17342.007 ops/s
# Warmup Iteration   5: 15355.383 ops/s
# Warmup Iteration   6: 20198.314 ops/s
# Warmup Iteration   7: 23098.324 ops/s
# Warmup Iteration   8: 27072.448 ops/s
# Warmup Iteration   9: 33951.415 ops/s
# Warmup Iteration  10: 33833.315 ops/s
# Warmup Iteration  11: 27462.167 ops/s
# Warmup Iteration  12: 23043.321 ops/s
# Warmup Iteration  13: 38314.739 ops/s
# Warmup Iteration  14: 35351.492 ops/s
# Warmup Iteration  15: 30864.665 ops/s
# Warmup Iteration  16: 35816.732 ops/s
# Warmup Iteration  17: 39951.330 ops/s
# Warmup Iteration  18: 52312.136 ops/s
# Warmup Iteration  19: 80138.724 ops/s
# Warmup Iteration  20: 80167.479 ops/s
# Warmup Iteration  21: 81684.346 ops/s
# Warmup Iteration  22: 79174.251 ops/s
# Warmup Iteration  23: 79712.228 ops/s
# Warmup Iteration  24: 77159.674 ops/s
# Warmup Iteration  25: 81888.772 ops/s
# Warmup Iteration  26: 80820.540 ops/s
# Warmup Iteration  27: 80845.673 ops/s
# Warmup Iteration  28: 79994.708 ops/s
# Warmup Iteration  29: 82158.037 ops/s
# Warmup Iteration  30: 78698.575 ops/s
Iteration   1: 83976.881 ops/s
Iteration   2: 83822.178 ops/s
Iteration   3: 79374.211 ops/s
Iteration   4: 83458.544 ops/s
Iteration   5: 82725.444 ops/s
Iteration   6: 80659.940 ops/s
Iteration   7: 80299.380 ops/s
Iteration   8: 83698.964 ops/s
Iteration   9: 79268.885 ops/s
Iteration  10: 85007.039 ops/s
Iteration  11: 84221.009 ops/s
Iteration  12: 81150.786 ops/s
Iteration  13: 80644.109 ops/s
Iteration  14: 83316.119 ops/s
Iteration  15: 78415.393 ops/s
Iteration  16: 82435.042 ops/s
Iteration  17: 81133.918 ops/s
Iteration  18: 80976.165 ops/s
Iteration  19: 80211.046 ops/s
Iteration  20: 80511.700 ops/s
Iteration  21: 82226.482 ops/s
Iteration  22: 76326.982 ops/s
Iteration  23: 79014.666 ops/s
Iteration  24: 79221.483 ops/s
Iteration  25: 80207.434 ops/s
Iteration  26: 81133.472 ops/s
Iteration  27: 77497.610 ops/s
Iteration  28: 77716.854 ops/s
Iteration  29: 81111.935 ops/s
Iteration  30: 77066.729 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_459._Benchmark.benchmark_Cluster_459":
  80894.347 ±(99.9%) 1520.645 ops/s [Average]
  (min, avg, max) = (76326.982, 80894.347, 85007.039), stdev = 2276.030
  CI (99.9%): [79373.702, 82414.991] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_459._Benchmark.benchmark_Cluster_459  thrpt   30  80894.347 ± 1520.645  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_46._Benchmark.benchmark_Cluster_46$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_46._Benchmark.benchmark_Cluster_46

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 27982.592 ops/s
# Warmup Iteration   2: 135356.231 ops/s
# Warmup Iteration   3: 150595.904 ops/s
# Warmup Iteration   4: 203527.383 ops/s
# Warmup Iteration   5: 214769.214 ops/s
# Warmup Iteration   6: 224790.519 ops/s
# Warmup Iteration   7: 208201.918 ops/s
# Warmup Iteration   8: 224140.069 ops/s
# Warmup Iteration   9: 209666.964 ops/s
# Warmup Iteration  10: 199905.435 ops/s
# Warmup Iteration  11: 210092.246 ops/s
# Warmup Iteration  12: 217706.965 ops/s
# Warmup Iteration  13: 199027.581 ops/s
# Warmup Iteration  14: 224223.428 ops/s
# Warmup Iteration  15: 207091.470 ops/s
# Warmup Iteration  16: 224488.082 ops/s
# Warmup Iteration  17: 210172.882 ops/s
# Warmup Iteration  18: 217788.269 ops/s
# Warmup Iteration  19: 219567.040 ops/s
# Warmup Iteration  20: 215623.388 ops/s
# Warmup Iteration  21: 211035.454 ops/s
# Warmup Iteration  22: 224457.005 ops/s
# Warmup Iteration  23: 216834.535 ops/s
# Warmup Iteration  24: 213193.554 ops/s
# Warmup Iteration  25: 221503.753 ops/s
# Warmup Iteration  26: 214821.623 ops/s
# Warmup Iteration  27: 219043.382 ops/s
# Warmup Iteration  28: 212389.335 ops/s
# Warmup Iteration  29: 216291.367 ops/s
# Warmup Iteration  30: 227763.234 ops/s
Iteration   1: 210424.102 ops/s
Iteration   2: 220076.725 ops/s
Iteration   3: 212613.411 ops/s
Iteration   4: 215950.701 ops/s
Iteration   5: 220203.742 ops/s
Iteration   6: 223168.224 ops/s
Iteration   7: 216957.144 ops/s
Iteration   8: 221669.690 ops/s
Iteration   9: 212342.575 ops/s
Iteration  10: 216240.435 ops/s
Iteration  11: 222768.107 ops/s
Iteration  12: 215524.091 ops/s
Iteration  13: 223867.315 ops/s
Iteration  14: 211164.552 ops/s
Iteration  15: 175833.600 ops/s
Iteration  16: 225509.187 ops/s
Iteration  17: 212604.713 ops/s
Iteration  18: 224268.627 ops/s
Iteration  19: 210410.197 ops/s
Iteration  20: 224140.428 ops/s
Iteration  21: 218414.681 ops/s
Iteration  22: 216802.408 ops/s
Iteration  23: 218724.714 ops/s
Iteration  24: 214749.459 ops/s
Iteration  25: 215218.673 ops/s
Iteration  26: 219959.169 ops/s
Iteration  27: 213005.300 ops/s
Iteration  28: 223089.386 ops/s
Iteration  29: 212034.157 ops/s
Iteration  30: 217759.886 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_46._Benchmark.benchmark_Cluster_46":
  216183.180 ±(99.9%) 5944.809 ops/s [Average]
  (min, avg, max) = (175833.600, 216183.180, 225509.187), stdev = 8897.911
  CI (99.9%): [210238.371, 222127.989] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_46._Benchmark.benchmark_Cluster_46  thrpt   30  216183.180 ± 5944.809  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_460._Benchmark.benchmark_Cluster_460$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_460._Benchmark.benchmark_Cluster_460

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3371.225 ops/s
# Warmup Iteration   2: 17574.349 ops/s
# Warmup Iteration   3: 36684.214 ops/s
# Warmup Iteration   4: 30748.995 ops/s
# Warmup Iteration   5: 45296.124 ops/s
# Warmup Iteration   6: 44079.806 ops/s
# Warmup Iteration   7: 79422.473 ops/s
# Warmup Iteration   8: 86758.462 ops/s
# Warmup Iteration   9: 90447.529 ops/s
# Warmup Iteration  10: 93934.070 ops/s
# Warmup Iteration  11: 88183.916 ops/s
# Warmup Iteration  12: 93798.358 ops/s
# Warmup Iteration  13: 90075.095 ops/s
# Warmup Iteration  14: 92572.821 ops/s
# Warmup Iteration  15: 93140.908 ops/s
# Warmup Iteration  16: 86510.402 ops/s
# Warmup Iteration  17: 92884.223 ops/s
# Warmup Iteration  18: 84478.897 ops/s
# Warmup Iteration  19: 94468.880 ops/s
# Warmup Iteration  20: 96807.016 ops/s
# Warmup Iteration  21: 87299.891 ops/s
# Warmup Iteration  22: 95892.143 ops/s
# Warmup Iteration  23: 93993.673 ops/s
# Warmup Iteration  24: 93618.534 ops/s
# Warmup Iteration  25: 96837.429 ops/s
# Warmup Iteration  26: 92848.714 ops/s
# Warmup Iteration  27: 93682.124 ops/s
# Warmup Iteration  28: 95227.863 ops/s
# Warmup Iteration  29: 87322.635 ops/s
# Warmup Iteration  30: 99181.196 ops/s
Iteration   1: 91984.534 ops/s
Iteration   2: 94670.339 ops/s
Iteration   3: 97166.573 ops/s
Iteration   4: 92217.341 ops/s
Iteration   5: 98409.029 ops/s
Iteration   6: 97500.283 ops/s
Iteration   7: 93194.119 ops/s
Iteration   8: 95674.325 ops/s
Iteration   9: 93136.276 ops/s
Iteration  10: 95568.008 ops/s
Iteration  11: 93153.111 ops/s
Iteration  12: 93911.886 ops/s
Iteration  13: 99365.646 ops/s
Iteration  14: 93216.501 ops/s
Iteration  15: 91085.710 ops/s
Iteration  16: 92097.170 ops/s
Iteration  17: 99426.923 ops/s
Iteration  18: 90329.648 ops/s
Iteration  19: 94205.220 ops/s
Iteration  20: 92396.398 ops/s
Iteration  21: 99263.822 ops/s
Iteration  22: 91328.531 ops/s
Iteration  23: 98140.902 ops/s
Iteration  24: 93806.811 ops/s
Iteration  25: 93034.946 ops/s
Iteration  26: 95917.782 ops/s
Iteration  27: 92183.894 ops/s
Iteration  28: 95199.829 ops/s
Iteration  29: 96995.265 ops/s
Iteration  30: 92304.687 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_460._Benchmark.benchmark_Cluster_460":
  94562.850 ±(99.9%) 1787.415 ops/s [Average]
  (min, avg, max) = (90329.648, 94562.850, 99426.923), stdev = 2675.319
  CI (99.9%): [92775.435, 96350.266] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_460._Benchmark.benchmark_Cluster_460  thrpt   30  94562.850 ± 1787.415  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_461._Benchmark.benchmark_Cluster_461$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_461._Benchmark.benchmark_Cluster_461

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18569.893 ops/s
# Warmup Iteration   2: 53707.528 ops/s
# Warmup Iteration   3: 87827.358 ops/s
# Warmup Iteration   4: 98398.148 ops/s
# Warmup Iteration   5: 103125.343 ops/s
# Warmup Iteration   6: 99151.785 ops/s
# Warmup Iteration   7: 97422.068 ops/s
# Warmup Iteration   8: 104374.272 ops/s
# Warmup Iteration   9: 97231.075 ops/s
# Warmup Iteration  10: 101877.724 ops/s
# Warmup Iteration  11: 100715.085 ops/s
# Warmup Iteration  12: 101710.171 ops/s
# Warmup Iteration  13: 101725.815 ops/s
# Warmup Iteration  14: 102695.423 ops/s
# Warmup Iteration  15: 102591.262 ops/s
# Warmup Iteration  16: 99353.229 ops/s
# Warmup Iteration  17: 101220.242 ops/s
# Warmup Iteration  18: 110738.351 ops/s
# Warmup Iteration  19: 107673.472 ops/s
# Warmup Iteration  20: 108647.539 ops/s
# Warmup Iteration  21: 104893.520 ops/s
# Warmup Iteration  22: 107705.807 ops/s
# Warmup Iteration  23: 105371.940 ops/s
# Warmup Iteration  24: 105206.440 ops/s
# Warmup Iteration  25: 105402.981 ops/s
# Warmup Iteration  26: 105717.995 ops/s
# Warmup Iteration  27: 104627.505 ops/s
# Warmup Iteration  28: 102912.071 ops/s
# Warmup Iteration  29: 108543.910 ops/s
# Warmup Iteration  30: 105891.953 ops/s
Iteration   1: 102858.794 ops/s
Iteration   2: 106589.413 ops/s
Iteration   3: 104539.042 ops/s
Iteration   4: 107079.430 ops/s
Iteration   5: 102585.522 ops/s
Iteration   6: 107179.528 ops/s
Iteration   7: 105984.529 ops/s
Iteration   8: 108151.265 ops/s
Iteration   9: 93551.537 ops/s
Iteration  10: 104660.234 ops/s
Iteration  11: 103464.651 ops/s
Iteration  12: 111362.908 ops/s
Iteration  13: 111030.733 ops/s
Iteration  14: 107278.071 ops/s
Iteration  15: 102930.475 ops/s
Iteration  16: 109467.001 ops/s
Iteration  17: 105757.198 ops/s
Iteration  18: 107346.679 ops/s
Iteration  19: 107589.903 ops/s
Iteration  20: 108593.572 ops/s
Iteration  21: 103184.366 ops/s
Iteration  22: 108033.485 ops/s
Iteration  23: 106409.470 ops/s
Iteration  24: 104991.796 ops/s
Iteration  25: 108330.040 ops/s
Iteration  26: 105941.926 ops/s
Iteration  27: 106825.067 ops/s
Iteration  28: 107515.526 ops/s
Iteration  29: 104875.266 ops/s
Iteration  30: 108188.730 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_461._Benchmark.benchmark_Cluster_461":
  106076.539 ±(99.9%) 2185.059 ops/s [Average]
  (min, avg, max) = (93551.537, 106076.539, 111362.908), stdev = 3270.494
  CI (99.9%): [103891.479, 108261.598] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_461._Benchmark.benchmark_Cluster_461  thrpt   30  106076.539 ± 2185.059  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_462._Benchmark.benchmark_Cluster_462$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_462._Benchmark.benchmark_Cluster_462

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5513.723 ops/s
# Warmup Iteration   2: 20139.599 ops/s
# Warmup Iteration   3: 28697.431 ops/s
# Warmup Iteration   4: 20256.335 ops/s
# Warmup Iteration   5: 21100.092 ops/s
# Warmup Iteration   6: 19762.649 ops/s
# Warmup Iteration   7: 21258.587 ops/s
# Warmup Iteration   8: 21839.084 ops/s
# Warmup Iteration   9: 20504.920 ops/s
# Warmup Iteration  10: 21374.301 ops/s
# Warmup Iteration  11: 20785.912 ops/s
# Warmup Iteration  12: 21322.361 ops/s
# Warmup Iteration  13: 21317.945 ops/s
# Warmup Iteration  14: 21361.957 ops/s
# Warmup Iteration  15: 20885.121 ops/s
# Warmup Iteration  16: 21427.951 ops/s
# Warmup Iteration  17: 20773.135 ops/s
# Warmup Iteration  18: 20813.562 ops/s
# Warmup Iteration  19: 21731.153 ops/s
# Warmup Iteration  20: 20462.454 ops/s
# Warmup Iteration  21: 21122.169 ops/s
# Warmup Iteration  22: 21602.187 ops/s
# Warmup Iteration  23: 21309.429 ops/s
# Warmup Iteration  24: 21207.404 ops/s
# Warmup Iteration  25: 21350.529 ops/s
# Warmup Iteration  26: 21400.478 ops/s
# Warmup Iteration  27: 20921.597 ops/s
# Warmup Iteration  28: 21673.933 ops/s
# Warmup Iteration  29: 21402.907 ops/s
# Warmup Iteration  30: 21213.619 ops/s
Iteration   1: 21206.684 ops/s
Iteration   2: 21101.411 ops/s
Iteration   3: 20700.135 ops/s
Iteration   4: 21875.270 ops/s
Iteration   5: 20802.845 ops/s
Iteration   6: 21640.062 ops/s
Iteration   7: 21215.211 ops/s
Iteration   8: 21341.871 ops/s
Iteration   9: 21462.217 ops/s
Iteration  10: 20979.264 ops/s
Iteration  11: 20996.738 ops/s
Iteration  12: 21408.785 ops/s
Iteration  13: 20590.880 ops/s
Iteration  14: 20630.001 ops/s
Iteration  15: 21596.500 ops/s
Iteration  16: 20962.247 ops/s
Iteration  17: 21068.285 ops/s
Iteration  18: 20636.015 ops/s
Iteration  19: 21408.322 ops/s
Iteration  20: 20764.382 ops/s
Iteration  21: 21509.568 ops/s
Iteration  22: 21121.921 ops/s
Iteration  23: 21342.406 ops/s
Iteration  24: 21987.040 ops/s
Iteration  25: 21408.456 ops/s
Iteration  26: 21083.567 ops/s
Iteration  27: 21713.504 ops/s
Iteration  28: 21428.270 ops/s
Iteration  29: 21480.232 ops/s
Iteration  30: 22685.992 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_462._Benchmark.benchmark_Cluster_462":
  21271.603 ±(99.9%) 304.285 ops/s [Average]
  (min, avg, max) = (20590.880, 21271.603, 22685.992), stdev = 455.440
  CI (99.9%): [20967.317, 21575.888] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_462._Benchmark.benchmark_Cluster_462  thrpt   30  21271.603 ± 304.285  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_463._Benchmark.benchmark_Cluster_463$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_463._Benchmark.benchmark_Cluster_463

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7245.960 ops/s
# Warmup Iteration   2: 26689.797 ops/s
# Warmup Iteration   3: 19681.101 ops/s
# Warmup Iteration   4: 23315.806 ops/s
# Warmup Iteration   5: 18471.483 ops/s
# Warmup Iteration   6: 19307.305 ops/s
# Warmup Iteration   7: 19258.226 ops/s
# Warmup Iteration   8: 19062.109 ops/s
# Warmup Iteration   9: 19446.532 ops/s
# Warmup Iteration  10: 19079.266 ops/s
# Warmup Iteration  11: 19010.275 ops/s
# Warmup Iteration  12: 19321.371 ops/s
# Warmup Iteration  13: 18804.900 ops/s
# Warmup Iteration  14: 19027.915 ops/s
# Warmup Iteration  15: 19318.612 ops/s
# Warmup Iteration  16: 19313.152 ops/s
# Warmup Iteration  17: 18791.513 ops/s
# Warmup Iteration  18: 19025.772 ops/s
# Warmup Iteration  19: 19948.154 ops/s
# Warmup Iteration  20: 19181.723 ops/s
# Warmup Iteration  21: 19217.368 ops/s
# Warmup Iteration  22: 19241.399 ops/s
# Warmup Iteration  23: 19127.744 ops/s
# Warmup Iteration  24: 18890.140 ops/s
# Warmup Iteration  25: 18548.878 ops/s
# Warmup Iteration  26: 19573.094 ops/s
# Warmup Iteration  27: 18401.340 ops/s
# Warmup Iteration  28: 18705.210 ops/s
# Warmup Iteration  29: 18511.718 ops/s
# Warmup Iteration  30: 19430.764 ops/s
Iteration   1: 18764.496 ops/s
Iteration   2: 18975.797 ops/s
Iteration   3: 18726.862 ops/s
Iteration   4: 23491.687 ops/s
Iteration   5: 18115.527 ops/s
Iteration   6: 18480.313 ops/s
Iteration   7: 19536.527 ops/s
Iteration   8: 18887.792 ops/s
Iteration   9: 19527.941 ops/s
Iteration  10: 18846.983 ops/s
Iteration  11: 19581.487 ops/s
Iteration  12: 18538.223 ops/s
Iteration  13: 19270.692 ops/s
Iteration  14: 18794.335 ops/s
Iteration  15: 18924.299 ops/s
Iteration  16: 18957.662 ops/s
Iteration  17: 18713.301 ops/s
Iteration  18: 19457.411 ops/s
Iteration  19: 19461.673 ops/s
Iteration  20: 18836.468 ops/s
Iteration  21: 19602.031 ops/s
Iteration  22: 19157.509 ops/s
Iteration  23: 18973.064 ops/s
Iteration  24: 19038.525 ops/s
Iteration  25: 19398.272 ops/s
Iteration  26: 19067.288 ops/s
Iteration  27: 18770.403 ops/s
Iteration  28: 19653.476 ops/s
Iteration  29: 19070.791 ops/s
Iteration  30: 19144.985 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_463._Benchmark.benchmark_Cluster_463":
  19192.194 ±(99.9%) 596.507 ops/s [Average]
  (min, avg, max) = (18115.527, 19192.194, 23491.687), stdev = 892.823
  CI (99.9%): [18595.687, 19788.701] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_463._Benchmark.benchmark_Cluster_463  thrpt   30  19192.194 ± 596.507  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_464._Benchmark.benchmark_Cluster_464$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_464._Benchmark.benchmark_Cluster_464

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.694 ops/s
# Warmup Iteration   2: 4505.472 ops/s
# Warmup Iteration   3: 20164.383 ops/s
# Warmup Iteration   4: 16250.664 ops/s
# Warmup Iteration   5: 6985.778 ops/s
# Warmup Iteration   6: 2098.293 ops/s
# Warmup Iteration   7: 16018.125 ops/s
# Warmup Iteration   8: 5869.054 ops/s
# Warmup Iteration   9: 14999.994 ops/s
# Warmup Iteration  10: 1340.081 ops/s
# Warmup Iteration  11: 12207.636 ops/s
# Warmup Iteration  12: 7827.361 ops/s
# Warmup Iteration  13: 4392.263 ops/s
# Warmup Iteration  14: 8989.917 ops/s
# Warmup Iteration  15: 8984.981 ops/s
# Warmup Iteration  16: 4586.631 ops/s
# Warmup Iteration  17: 8958.906 ops/s
# Warmup Iteration  18: 8765.960 ops/s
# Warmup Iteration  19: 1355.179 ops/s
# Warmup Iteration  20: 10308.792 ops/s
# Warmup Iteration  21: 6610.604 ops/s
# Warmup Iteration  22: 5755.932 ops/s
# Warmup Iteration  23: 8306.652 ops/s
# Warmup Iteration  24: 5657.041 ops/s
# Warmup Iteration  25: 7384.102 ops/s
# Warmup Iteration  26: 3936.678 ops/s
# Warmup Iteration  27: 7654.595 ops/s
# Warmup Iteration  28: 8243.168 ops/s
# Warmup Iteration  29: 8655.519 ops/s
# Warmup Iteration  30: 2253.138 ops/s
Iteration   1: 6336.442 ops/s
Iteration   2: 7209.931 ops/s
Iteration   3: 6177.343 ops/s
Iteration   4: 3319.613 ops/s
Iteration   5: 9154.646 ops/s
Iteration   6: 7140.960 ops/s
Iteration   7: 7127.203 ops/s
Iteration   8: 107.064 ops/s
Iteration   9: 8752.030 ops/s
Iteration  10: 8883.387 ops/s
Iteration  11: 4573.981 ops/s
Iteration  12: 1493.538 ops/s
Iteration  13: 6847.076 ops/s
Iteration  14: 8445.344 ops/s
Iteration  15: 5189.743 ops/s
Iteration  16: 979.634 ops/s
Iteration  17: 5223.142 ops/s
Iteration  18: 7671.667 ops/s
Iteration  19: 8755.244 ops/s
Iteration  20: 187.548 ops/s
Iteration  21: 5991.026 ops/s
Iteration  22: 6281.882 ops/s
Iteration  23: 9411.846 ops/s
Iteration  24: 3721.579 ops/s
Iteration  25: 8766.505 ops/s
Iteration  26: 6959.332 ops/s
Iteration  27: 8005.800 ops/s
Iteration  28: 1797.324 ops/s
Iteration  29: 7185.908 ops/s
Iteration  30: 7303.356 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_464._Benchmark.benchmark_Cluster_464":
  5966.670 ±(99.9%) 1847.900 ops/s [Average]
  (min, avg, max) = (107.064, 5966.670, 9411.846), stdev = 2765.850
  CI (99.9%): [4118.770, 7814.570] (assumes normal distribution)


# Run complete. Total time: 00:01:20

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt     Score      Error  Units
Cluster_464._Benchmark.benchmark_Cluster_464  thrpt   30  5966.670 ± 1847.900  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_465._Benchmark.benchmark_Cluster_465$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_465._Benchmark.benchmark_Cluster_465

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13515.645 ops/s
# Warmup Iteration   2: 28269.431 ops/s
# Warmup Iteration   3: 36003.597 ops/s
# Warmup Iteration   4: 48409.513 ops/s
# Warmup Iteration   5: 69068.072 ops/s
# Warmup Iteration   6: 112457.071 ops/s
# Warmup Iteration   7: 111709.910 ops/s
# Warmup Iteration   8: 112270.946 ops/s
# Warmup Iteration   9: 114847.730 ops/s
# Warmup Iteration  10: 97783.608 ops/s
# Warmup Iteration  11: 104470.575 ops/s
# Warmup Iteration  12: 112409.601 ops/s
# Warmup Iteration  13: 117953.792 ops/s
# Warmup Iteration  14: 110434.368 ops/s
# Warmup Iteration  15: 113930.060 ops/s
# Warmup Iteration  16: 116022.621 ops/s
# Warmup Iteration  17: 113022.716 ops/s
# Warmup Iteration  18: 117262.683 ops/s
# Warmup Iteration  19: 117101.437 ops/s
# Warmup Iteration  20: 114511.754 ops/s
# Warmup Iteration  21: 123085.035 ops/s
# Warmup Iteration  22: 116434.848 ops/s
# Warmup Iteration  23: 115578.470 ops/s
# Warmup Iteration  24: 114850.370 ops/s
# Warmup Iteration  25: 120444.655 ops/s
# Warmup Iteration  26: 115891.115 ops/s
# Warmup Iteration  27: 115349.819 ops/s
# Warmup Iteration  28: 121030.369 ops/s
# Warmup Iteration  29: 113335.388 ops/s
# Warmup Iteration  30: 116177.037 ops/s
Iteration   1: 117699.731 ops/s
Iteration   2: 121931.793 ops/s
Iteration   3: 115978.577 ops/s
Iteration   4: 116299.519 ops/s
Iteration   5: 119008.336 ops/s
Iteration   6: 119565.141 ops/s
Iteration   7: 122660.344 ops/s
Iteration   8: 114505.866 ops/s
Iteration   9: 119421.241 ops/s
Iteration  10: 114021.598 ops/s
Iteration  11: 118364.805 ops/s
Iteration  12: 116560.552 ops/s
Iteration  13: 115678.799 ops/s
Iteration  14: 122200.363 ops/s
Iteration  15: 116494.119 ops/s
Iteration  16: 119741.512 ops/s
Iteration  17: 115110.058 ops/s
Iteration  18: 121106.903 ops/s
Iteration  19: 118204.138 ops/s
Iteration  20: 117741.040 ops/s
Iteration  21: 116273.840 ops/s
Iteration  22: 116766.697 ops/s
Iteration  23: 119758.714 ops/s
Iteration  24: 113514.351 ops/s
Iteration  25: 119702.228 ops/s
Iteration  26: 117733.523 ops/s
Iteration  27: 117224.539 ops/s
Iteration  28: 122339.881 ops/s
Iteration  29: 118488.123 ops/s
Iteration  30: 117054.528 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_465._Benchmark.benchmark_Cluster_465":
  118038.362 ±(99.9%) 1653.500 ops/s [Average]
  (min, avg, max) = (113514.351, 118038.362, 122660.344), stdev = 2474.881
  CI (99.9%): [116384.862, 119691.862] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_465._Benchmark.benchmark_Cluster_465  thrpt   30  118038.362 ± 1653.500  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_466._Benchmark.benchmark_Cluster_466$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_466._Benchmark.benchmark_Cluster_466

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18328.912 ops/s
# Warmup Iteration   2: 84112.581 ops/s
# Warmup Iteration   3: 90088.699 ops/s
# Warmup Iteration   4: 108191.396 ops/s
# Warmup Iteration   5: 112206.961 ops/s
# Warmup Iteration   6: 112929.771 ops/s
# Warmup Iteration   7: 104565.280 ops/s
# Warmup Iteration   8: 115425.987 ops/s
# Warmup Iteration   9: 114620.207 ops/s
# Warmup Iteration  10: 110077.972 ops/s
# Warmup Iteration  11: 113854.456 ops/s
# Warmup Iteration  12: 110012.297 ops/s
# Warmup Iteration  13: 111601.893 ops/s
# Warmup Iteration  14: 113405.787 ops/s
# Warmup Iteration  15: 111488.089 ops/s
# Warmup Iteration  16: 111816.558 ops/s
# Warmup Iteration  17: 117815.565 ops/s
# Warmup Iteration  18: 117161.843 ops/s
# Warmup Iteration  19: 122083.372 ops/s
# Warmup Iteration  20: 115566.058 ops/s
# Warmup Iteration  21: 121839.594 ops/s
# Warmup Iteration  22: 110023.105 ops/s
# Warmup Iteration  23: 120415.323 ops/s
# Warmup Iteration  24: 122334.452 ops/s
# Warmup Iteration  25: 119993.537 ops/s
# Warmup Iteration  26: 111564.776 ops/s
# Warmup Iteration  27: 122971.454 ops/s
# Warmup Iteration  28: 118509.547 ops/s
# Warmup Iteration  29: 120197.053 ops/s
# Warmup Iteration  30: 116111.711 ops/s
Iteration   1: 116254.092 ops/s
Iteration   2: 116619.036 ops/s
Iteration   3: 117316.075 ops/s
Iteration   4: 120588.821 ops/s
Iteration   5: 120436.829 ops/s
Iteration   6: 122191.705 ops/s
Iteration   7: 121570.586 ops/s
Iteration   8: 116839.607 ops/s
Iteration   9: 123402.019 ops/s
Iteration  10: 113823.656 ops/s
Iteration  11: 118699.248 ops/s
Iteration  12: 118505.527 ops/s
Iteration  13: 119660.981 ops/s
Iteration  14: 121791.832 ops/s
Iteration  15: 115844.703 ops/s
Iteration  16: 116708.004 ops/s
Iteration  17: 121608.492 ops/s
Iteration  18: 114255.855 ops/s
Iteration  19: 119841.995 ops/s
Iteration  20: 114471.123 ops/s
Iteration  21: 121244.803 ops/s
Iteration  22: 118017.768 ops/s
Iteration  23: 118914.796 ops/s
Iteration  24: 121004.498 ops/s
Iteration  25: 124202.789 ops/s
Iteration  26: 122939.163 ops/s
Iteration  27: 116899.889 ops/s
Iteration  28: 120199.818 ops/s
Iteration  29: 119186.303 ops/s
Iteration  30: 120134.125 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_466._Benchmark.benchmark_Cluster_466":
  119105.805 ±(99.9%) 1848.635 ops/s [Average]
  (min, avg, max) = (113823.656, 119105.805, 124202.789), stdev = 2766.950
  CI (99.9%): [117257.169, 120954.440] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_466._Benchmark.benchmark_Cluster_466  thrpt   30  119105.805 ± 1848.635  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_467._Benchmark.benchmark_Cluster_467$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_467._Benchmark.benchmark_Cluster_467

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 29961.870 ops/s
# Warmup Iteration   2: 134333.013 ops/s
# Warmup Iteration   3: 155169.222 ops/s
# Warmup Iteration   4: 157885.804 ops/s
# Warmup Iteration   5: 136178.708 ops/s
# Warmup Iteration   6: 152460.225 ops/s
# Warmup Iteration   7: 161818.493 ops/s
# Warmup Iteration   8: 164123.902 ops/s
# Warmup Iteration   9: 160309.505 ops/s
# Warmup Iteration  10: 162549.505 ops/s
# Warmup Iteration  11: 156516.328 ops/s
# Warmup Iteration  12: 174002.184 ops/s
# Warmup Iteration  13: 159838.879 ops/s
# Warmup Iteration  14: 160643.926 ops/s
# Warmup Iteration  15: 165851.036 ops/s
# Warmup Iteration  16: 159998.001 ops/s
# Warmup Iteration  17: 173302.196 ops/s
# Warmup Iteration  18: 165013.301 ops/s
# Warmup Iteration  19: 171980.998 ops/s
# Warmup Iteration  20: 170771.490 ops/s
# Warmup Iteration  21: 169799.070 ops/s
# Warmup Iteration  22: 170788.060 ops/s
# Warmup Iteration  23: 164902.478 ops/s
# Warmup Iteration  24: 164580.503 ops/s
# Warmup Iteration  25: 173354.306 ops/s
# Warmup Iteration  26: 166106.266 ops/s
# Warmup Iteration  27: 170801.220 ops/s
# Warmup Iteration  28: 170850.093 ops/s
# Warmup Iteration  29: 168474.171 ops/s
# Warmup Iteration  30: 173262.933 ops/s
Iteration   1: 164662.833 ops/s
Iteration   2: 168741.452 ops/s
Iteration   3: 168045.020 ops/s
Iteration   4: 164976.743 ops/s
Iteration   5: 180547.733 ops/s
Iteration   6: 165771.572 ops/s
Iteration   7: 174853.772 ops/s
Iteration   8: 177567.034 ops/s
Iteration   9: 163647.044 ops/s
Iteration  10: 169794.899 ops/s
Iteration  11: 170868.209 ops/s
Iteration  12: 171531.633 ops/s
Iteration  13: 174223.194 ops/s
Iteration  14: 169561.105 ops/s
Iteration  15: 174004.639 ops/s
Iteration  16: 163397.833 ops/s
Iteration  17: 171312.516 ops/s
Iteration  18: 172743.239 ops/s
Iteration  19: 165015.311 ops/s
Iteration  20: 173851.348 ops/s
Iteration  21: 169836.684 ops/s
Iteration  22: 167620.533 ops/s
Iteration  23: 179792.745 ops/s
Iteration  24: 164473.411 ops/s
Iteration  25: 168526.976 ops/s
Iteration  26: 164772.177 ops/s
Iteration  27: 172793.805 ops/s
Iteration  28: 170730.658 ops/s
Iteration  29: 165935.490 ops/s
Iteration  30: 175207.289 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_467._Benchmark.benchmark_Cluster_467":
  170160.230 ±(99.9%) 3167.913 ops/s [Average]
  (min, avg, max) = (163397.833, 170160.230, 180547.733), stdev = 4741.584
  CI (99.9%): [166992.316, 173328.143] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_467._Benchmark.benchmark_Cluster_467  thrpt   30  170160.230 ± 3167.913  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_468._Benchmark.benchmark_Cluster_468$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_468._Benchmark.benchmark_Cluster_468

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18162.734 ops/s
# Warmup Iteration   2: 86614.482 ops/s
# Warmup Iteration   3: 99314.266 ops/s
# Warmup Iteration   4: 105535.553 ops/s
# Warmup Iteration   5: 106607.873 ops/s
# Warmup Iteration   6: 106809.715 ops/s
# Warmup Iteration   7: 99640.468 ops/s
# Warmup Iteration   8: 111245.042 ops/s
# Warmup Iteration   9: 109119.708 ops/s
# Warmup Iteration  10: 111989.563 ops/s
# Warmup Iteration  11: 109129.440 ops/s
# Warmup Iteration  12: 109555.699 ops/s
# Warmup Iteration  13: 113375.827 ops/s
# Warmup Iteration  14: 106910.358 ops/s
# Warmup Iteration  15: 114953.311 ops/s
# Warmup Iteration  16: 108022.835 ops/s
# Warmup Iteration  17: 112813.551 ops/s
# Warmup Iteration  18: 118758.095 ops/s
# Warmup Iteration  19: 112414.995 ops/s
# Warmup Iteration  20: 109512.562 ops/s
# Warmup Iteration  21: 118042.742 ops/s
# Warmup Iteration  22: 109869.789 ops/s
# Warmup Iteration  23: 113584.446 ops/s
# Warmup Iteration  24: 113029.862 ops/s
# Warmup Iteration  25: 114817.293 ops/s
# Warmup Iteration  26: 110703.446 ops/s
# Warmup Iteration  27: 115726.461 ops/s
# Warmup Iteration  28: 112455.123 ops/s
# Warmup Iteration  29: 111227.233 ops/s
# Warmup Iteration  30: 112157.819 ops/s
Iteration   1: 113058.943 ops/s
Iteration   2: 118635.793 ops/s
Iteration   3: 114240.952 ops/s
Iteration   4: 112339.570 ops/s
Iteration   5: 117206.789 ops/s
Iteration   6: 111615.083 ops/s
Iteration   7: 111610.013 ops/s
Iteration   8: 116466.917 ops/s
Iteration   9: 110887.907 ops/s
Iteration  10: 115198.371 ops/s
Iteration  11: 113341.112 ops/s
Iteration  12: 116200.722 ops/s
Iteration  13: 107047.700 ops/s
Iteration  14: 113229.990 ops/s
Iteration  15: 112649.176 ops/s
Iteration  16: 117815.116 ops/s
Iteration  17: 109585.410 ops/s
Iteration  18: 113267.640 ops/s
Iteration  19: 119280.608 ops/s
Iteration  20: 110779.672 ops/s
Iteration  21: 118382.742 ops/s
Iteration  22: 109108.336 ops/s
Iteration  23: 116274.387 ops/s
Iteration  24: 112425.720 ops/s
Iteration  25: 117920.273 ops/s
Iteration  26: 118479.549 ops/s
Iteration  27: 117727.084 ops/s
Iteration  28: 112568.882 ops/s
Iteration  29: 115719.752 ops/s
Iteration  30: 112742.924 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_468._Benchmark.benchmark_Cluster_468":
  114193.571 ±(99.9%) 2143.577 ops/s [Average]
  (min, avg, max) = (107047.700, 114193.571, 119280.608), stdev = 3208.406
  CI (99.9%): [112049.994, 116337.148] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_468._Benchmark.benchmark_Cluster_468  thrpt   30  114193.571 ± 2143.577  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_469._Benchmark.benchmark_Cluster_469$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_469._Benchmark.benchmark_Cluster_469

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.838 ops/s
# Warmup Iteration   2: 15857.595 ops/s
# Warmup Iteration   3: 36659.758 ops/s
# Warmup Iteration   4: 30134.663 ops/s
# Warmup Iteration   5: 43552.839 ops/s
# Warmup Iteration   6: 50864.861 ops/s
# Warmup Iteration   7: 90975.992 ops/s
# Warmup Iteration   8: 90552.525 ops/s
# Warmup Iteration   9: 97956.680 ops/s
# Warmup Iteration  10: 87157.648 ops/s
# Warmup Iteration  11: 100961.008 ops/s
# Warmup Iteration  12: 99661.856 ops/s
# Warmup Iteration  13: 100778.229 ops/s
# Warmup Iteration  14: 100771.210 ops/s
# Warmup Iteration  15: 98654.398 ops/s
# Warmup Iteration  16: 100150.728 ops/s
# Warmup Iteration  17: 100024.297 ops/s
# Warmup Iteration  18: 100124.644 ops/s
# Warmup Iteration  19: 99530.559 ops/s
# Warmup Iteration  20: 99785.434 ops/s
# Warmup Iteration  21: 101065.216 ops/s
# Warmup Iteration  22: 99542.323 ops/s
# Warmup Iteration  23: 100740.586 ops/s
# Warmup Iteration  24: 100374.204 ops/s
# Warmup Iteration  25: 98616.124 ops/s
# Warmup Iteration  26: 102378.502 ops/s
# Warmup Iteration  27: 97732.239 ops/s
# Warmup Iteration  28: 99509.662 ops/s
# Warmup Iteration  29: 99624.170 ops/s
# Warmup Iteration  30: 98730.554 ops/s
Iteration   1: 103520.332 ops/s
Iteration   2: 99606.446 ops/s
Iteration   3: 98257.261 ops/s
Iteration   4: 103363.964 ops/s
Iteration   5: 96402.422 ops/s
Iteration   6: 101826.156 ops/s
Iteration   7: 100702.376 ops/s
Iteration   8: 98037.127 ops/s
Iteration   9: 102292.257 ops/s
Iteration  10: 98459.472 ops/s
Iteration  11: 103181.289 ops/s
Iteration  12: 99185.017 ops/s
Iteration  13: 99120.253 ops/s
Iteration  14: 94287.738 ops/s
Iteration  15: 104396.748 ops/s
Iteration  16: 97982.141 ops/s
Iteration  17: 103849.780 ops/s
Iteration  18: 96797.052 ops/s
Iteration  19: 101970.400 ops/s
Iteration  20: 98606.750 ops/s
Iteration  21: 102575.975 ops/s
Iteration  22: 102483.418 ops/s
Iteration  23: 100575.405 ops/s
Iteration  24: 97574.548 ops/s
Iteration  25: 102104.451 ops/s
Iteration  26: 98783.555 ops/s
Iteration  27: 104217.334 ops/s
Iteration  28: 102189.242 ops/s
Iteration  29: 98037.973 ops/s
Iteration  30: 102512.319 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_469._Benchmark.benchmark_Cluster_469":
  100429.973 ±(99.9%) 1779.665 ops/s [Average]
  (min, avg, max) = (94287.738, 100429.973, 104396.748), stdev = 2663.718
  CI (99.9%): [98650.309, 102209.638] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_469._Benchmark.benchmark_Cluster_469  thrpt   30  100429.973 ± 1779.665  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_47._Benchmark.benchmark_Cluster_47$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_47._Benchmark.benchmark_Cluster_47

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12103.145 ops/s
# Warmup Iteration   2: 47145.396 ops/s
# Warmup Iteration   3: 122765.373 ops/s
# Warmup Iteration   4: 127255.650 ops/s
# Warmup Iteration   5: 150328.521 ops/s
# Warmup Iteration   6: 146198.399 ops/s
# Warmup Iteration   7: 143345.149 ops/s
# Warmup Iteration   8: 142725.398 ops/s
# Warmup Iteration   9: 139847.021 ops/s
# Warmup Iteration  10: 149591.810 ops/s
# Warmup Iteration  11: 145697.747 ops/s
# Warmup Iteration  12: 144911.648 ops/s
# Warmup Iteration  13: 147178.149 ops/s
# Warmup Iteration  14: 152162.283 ops/s
# Warmup Iteration  15: 142225.911 ops/s
# Warmup Iteration  16: 148709.601 ops/s
# Warmup Iteration  17: 146388.498 ops/s
# Warmup Iteration  18: 155375.761 ops/s
# Warmup Iteration  19: 148949.976 ops/s
# Warmup Iteration  20: 158333.208 ops/s
# Warmup Iteration  21: 152601.361 ops/s
# Warmup Iteration  22: 151213.995 ops/s
# Warmup Iteration  23: 161832.210 ops/s
# Warmup Iteration  24: 145485.831 ops/s
# Warmup Iteration  25: 157637.700 ops/s
# Warmup Iteration  26: 155301.157 ops/s
# Warmup Iteration  27: 144992.802 ops/s
# Warmup Iteration  28: 154643.387 ops/s
# Warmup Iteration  29: 157756.239 ops/s
# Warmup Iteration  30: 145788.855 ops/s
Iteration   1: 150604.357 ops/s
Iteration   2: 146557.959 ops/s
Iteration   3: 158935.388 ops/s
Iteration   4: 154375.730 ops/s
Iteration   5: 150602.162 ops/s
Iteration   6: 155537.848 ops/s
Iteration   7: 153868.936 ops/s
Iteration   8: 156476.274 ops/s
Iteration   9: 153386.429 ops/s
Iteration  10: 151514.808 ops/s
Iteration  11: 154244.375 ops/s
Iteration  12: 150433.065 ops/s
Iteration  13: 157719.647 ops/s
Iteration  14: 150198.763 ops/s
Iteration  15: 151141.808 ops/s
Iteration  16: 155678.550 ops/s
Iteration  17: 151050.330 ops/s
Iteration  18: 157087.010 ops/s
Iteration  19: 144220.296 ops/s
Iteration  20: 155368.446 ops/s
Iteration  21: 160962.553 ops/s
Iteration  22: 150586.097 ops/s
Iteration  23: 158177.779 ops/s
Iteration  24: 151413.441 ops/s
Iteration  25: 154733.361 ops/s
Iteration  26: 118039.387 ops/s
Iteration  27: 150910.421 ops/s
Iteration  28: 153775.644 ops/s
Iteration  29: 155768.475 ops/s
Iteration  30: 153585.588 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_47._Benchmark.benchmark_Cluster_47":
  152231.831 ±(99.9%) 4936.040 ops/s [Average]
  (min, avg, max) = (118039.387, 152231.831, 160962.553), stdev = 7388.033
  CI (99.9%): [147295.791, 157167.871] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_47._Benchmark.benchmark_Cluster_47  thrpt   30  152231.831 ± 4936.040  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_470._Benchmark.benchmark_Cluster_470$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_470._Benchmark.benchmark_Cluster_470

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.790 ops/s
# Warmup Iteration   2: 14598.107 ops/s
# Warmup Iteration   3: 46127.119 ops/s
# Warmup Iteration   4: 47764.800 ops/s
# Warmup Iteration   5: 51916.542 ops/s
# Warmup Iteration   6: 62259.598 ops/s
# Warmup Iteration   7: 53467.857 ops/s
# Warmup Iteration   8: 139529.718 ops/s
# Warmup Iteration   9: 149739.306 ops/s
# Warmup Iteration  10: 169600.168 ops/s
# Warmup Iteration  11: 163724.602 ops/s
# Warmup Iteration  12: 160428.192 ops/s
# Warmup Iteration  13: 170509.643 ops/s
# Warmup Iteration  14: 162708.364 ops/s
# Warmup Iteration  15: 165629.545 ops/s
# Warmup Iteration  16: 161492.685 ops/s
# Warmup Iteration  17: 168737.480 ops/s
# Warmup Iteration  18: 162480.315 ops/s
# Warmup Iteration  19: 167042.815 ops/s
# Warmup Iteration  20: 160641.586 ops/s
# Warmup Iteration  21: 164907.767 ops/s
# Warmup Iteration  22: 169854.265 ops/s
# Warmup Iteration  23: 165186.182 ops/s
# Warmup Iteration  24: 168597.200 ops/s
# Warmup Iteration  25: 169820.223 ops/s
# Warmup Iteration  26: 162493.133 ops/s
# Warmup Iteration  27: 169575.372 ops/s
# Warmup Iteration  28: 168203.099 ops/s
# Warmup Iteration  29: 159022.396 ops/s
# Warmup Iteration  30: 172234.222 ops/s
Iteration   1: 164268.803 ops/s
Iteration   2: 161998.938 ops/s
Iteration   3: 168036.623 ops/s
Iteration   4: 164007.777 ops/s
Iteration   5: 167050.652 ops/s
Iteration   6: 166064.719 ops/s
Iteration   7: 165727.584 ops/s
Iteration   8: 171277.056 ops/s
Iteration   9: 172991.715 ops/s
Iteration  10: 161971.590 ops/s
Iteration  11: 170589.113 ops/s
Iteration  12: 164319.859 ops/s
Iteration  13: 166953.708 ops/s
Iteration  14: 169348.345 ops/s
Iteration  15: 160068.653 ops/s
Iteration  16: 167309.564 ops/s
Iteration  17: 163666.348 ops/s
Iteration  18: 168772.951 ops/s
Iteration  19: 171251.257 ops/s
Iteration  20: 161956.446 ops/s
Iteration  21: 169201.943 ops/s
Iteration  22: 164729.743 ops/s
Iteration  23: 166948.755 ops/s
Iteration  24: 174484.630 ops/s
Iteration  25: 163454.939 ops/s
Iteration  26: 168159.795 ops/s
Iteration  27: 167252.308 ops/s
Iteration  28: 165667.032 ops/s
Iteration  29: 167589.583 ops/s
Iteration  30: 168697.648 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_470._Benchmark.benchmark_Cluster_470":
  166793.936 ±(99.9%) 2286.628 ops/s [Average]
  (min, avg, max) = (160068.653, 166793.936, 174484.630), stdev = 3422.518
  CI (99.9%): [164507.307, 169080.564] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_470._Benchmark.benchmark_Cluster_470  thrpt   30  166793.936 ± 2286.628  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_471._Benchmark.benchmark_Cluster_471$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_471._Benchmark.benchmark_Cluster_471

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.794 ops/s
# Warmup Iteration   2: 11820.327 ops/s
# Warmup Iteration   3: 32519.334 ops/s
# Warmup Iteration   4: 51153.325 ops/s
# Warmup Iteration   5: 53260.691 ops/s
# Warmup Iteration   6: 105894.728 ops/s
# Warmup Iteration   7: 119767.883 ops/s
# Warmup Iteration   8: 121379.437 ops/s
# Warmup Iteration   9: 119492.914 ops/s
# Warmup Iteration  10: 124918.618 ops/s
# Warmup Iteration  11: 119250.942 ops/s
# Warmup Iteration  12: 123051.376 ops/s
# Warmup Iteration  13: 122498.901 ops/s
# Warmup Iteration  14: 119292.476 ops/s
# Warmup Iteration  15: 126902.552 ops/s
# Warmup Iteration  16: 117248.204 ops/s
# Warmup Iteration  17: 127952.089 ops/s
# Warmup Iteration  18: 121608.093 ops/s
# Warmup Iteration  19: 121271.206 ops/s
# Warmup Iteration  20: 123260.325 ops/s
# Warmup Iteration  21: 124914.993 ops/s
# Warmup Iteration  22: 124344.472 ops/s
# Warmup Iteration  23: 119155.801 ops/s
# Warmup Iteration  24: 126518.122 ops/s
# Warmup Iteration  25: 123010.401 ops/s
# Warmup Iteration  26: 121807.722 ops/s
# Warmup Iteration  27: 125171.462 ops/s
# Warmup Iteration  28: 121126.245 ops/s
# Warmup Iteration  29: 120629.264 ops/s
# Warmup Iteration  30: 123917.942 ops/s
Iteration   1: 120191.890 ops/s
Iteration   2: 121575.150 ops/s
Iteration   3: 122299.305 ops/s
Iteration   4: 121375.353 ops/s
Iteration   5: 120380.781 ops/s
Iteration   6: 123820.815 ops/s
Iteration   7: 118876.720 ops/s
Iteration   8: 124051.165 ops/s
Iteration   9: 126444.120 ops/s
Iteration  10: 121071.262 ops/s
Iteration  11: 123884.175 ops/s
Iteration  12: 123348.483 ops/s
Iteration  13: 123187.367 ops/s
Iteration  14: 120116.900 ops/s
Iteration  15: 120520.837 ops/s
Iteration  16: 124694.030 ops/s
Iteration  17: 123534.123 ops/s
Iteration  18: 124224.479 ops/s
Iteration  19: 110746.085 ops/s
Iteration  20: 107910.735 ops/s
Iteration  21: 117486.648 ops/s
Iteration  22: 120491.763 ops/s
Iteration  23: 126686.497 ops/s
Iteration  24: 117004.171 ops/s
Iteration  25: 125286.065 ops/s
Iteration  26: 123361.963 ops/s
Iteration  27: 119576.930 ops/s
Iteration  28: 124568.267 ops/s
Iteration  29: 120965.638 ops/s
Iteration  30: 122361.155 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_471._Benchmark.benchmark_Cluster_471":
  121334.762 ±(99.9%) 2716.107 ops/s [Average]
  (min, avg, max) = (107910.735, 121334.762, 126686.497), stdev = 4065.341
  CI (99.9%): [118618.656, 124050.869] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_471._Benchmark.benchmark_Cluster_471  thrpt   30  121334.762 ± 2716.107  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_472._Benchmark.benchmark_Cluster_472$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_472._Benchmark.benchmark_Cluster_472

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11811.363 ops/s
# Warmup Iteration   2: 40750.039 ops/s
# Warmup Iteration   3: 68866.798 ops/s
# Warmup Iteration   4: 89208.368 ops/s
# Warmup Iteration   5: 97616.767 ops/s
# Warmup Iteration   6: 117117.489 ops/s
# Warmup Iteration   7: 95367.216 ops/s
# Warmup Iteration   8: 115873.934 ops/s
# Warmup Iteration   9: 112914.736 ops/s
# Warmup Iteration  10: 116195.116 ops/s
# Warmup Iteration  11: 116293.966 ops/s
# Warmup Iteration  12: 118337.160 ops/s
# Warmup Iteration  13: 112784.161 ops/s
# Warmup Iteration  14: 115003.317 ops/s
# Warmup Iteration  15: 115483.494 ops/s
# Warmup Iteration  16: 118500.202 ops/s
# Warmup Iteration  17: 117274.402 ops/s
# Warmup Iteration  18: 115312.283 ops/s
# Warmup Iteration  19: 120865.889 ops/s
# Warmup Iteration  20: 116863.085 ops/s
# Warmup Iteration  21: 120540.303 ops/s
# Warmup Iteration  22: 113448.127 ops/s
# Warmup Iteration  23: 119273.053 ops/s
# Warmup Iteration  24: 119497.723 ops/s
# Warmup Iteration  25: 116566.052 ops/s
# Warmup Iteration  26: 120832.704 ops/s
# Warmup Iteration  27: 122549.751 ops/s
# Warmup Iteration  28: 118426.838 ops/s
# Warmup Iteration  29: 118654.303 ops/s
# Warmup Iteration  30: 116059.877 ops/s
Iteration   1: 122683.868 ops/s
Iteration   2: 119398.065 ops/s
Iteration   3: 114231.042 ops/s
Iteration   4: 118904.138 ops/s
Iteration   5: 117030.021 ops/s
Iteration   6: 121643.945 ops/s
Iteration   7: 117600.618 ops/s
Iteration   8: 119478.702 ops/s
Iteration   9: 115473.860 ops/s
Iteration  10: 117298.104 ops/s
Iteration  11: 120737.394 ops/s
Iteration  12: 110968.286 ops/s
Iteration  13: 120059.918 ops/s
Iteration  14: 115622.616 ops/s
Iteration  15: 119641.998 ops/s
Iteration  16: 123271.150 ops/s
Iteration  17: 115187.312 ops/s
Iteration  18: 122180.284 ops/s
Iteration  19: 114636.149 ops/s
Iteration  20: 122368.825 ops/s
Iteration  21: 116172.332 ops/s
Iteration  22: 117818.939 ops/s
Iteration  23: 122816.135 ops/s
Iteration  24: 115870.329 ops/s
Iteration  25: 120028.547 ops/s
Iteration  26: 118751.020 ops/s
Iteration  27: 119323.514 ops/s
Iteration  28: 119057.987 ops/s
Iteration  29: 117448.240 ops/s
Iteration  30: 121767.224 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_472._Benchmark.benchmark_Cluster_472":
  118582.352 ±(99.9%) 1994.462 ops/s [Average]
  (min, avg, max) = (110968.286, 118582.352, 123271.150), stdev = 2985.217
  CI (99.9%): [116587.890, 120576.814] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_472._Benchmark.benchmark_Cluster_472  thrpt   30  118582.352 ± 1994.462  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_473._Benchmark.benchmark_Cluster_473$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_473._Benchmark.benchmark_Cluster_473

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15754.147 ops/s
# Warmup Iteration   2: 47555.402 ops/s
# Warmup Iteration   3: 77094.066 ops/s
# Warmup Iteration   4: 99885.692 ops/s
# Warmup Iteration   5: 103206.173 ops/s
# Warmup Iteration   6: 101231.942 ops/s
# Warmup Iteration   7: 101471.644 ops/s
# Warmup Iteration   8: 107014.334 ops/s
# Warmup Iteration   9: 106516.101 ops/s
# Warmup Iteration  10: 104618.721 ops/s
# Warmup Iteration  11: 102894.262 ops/s
# Warmup Iteration  12: 105199.623 ops/s
# Warmup Iteration  13: 102186.901 ops/s
# Warmup Iteration  14: 103292.441 ops/s
# Warmup Iteration  15: 101196.064 ops/s
# Warmup Iteration  16: 105442.497 ops/s
# Warmup Iteration  17: 106729.737 ops/s
# Warmup Iteration  18: 104195.600 ops/s
# Warmup Iteration  19: 107672.524 ops/s
# Warmup Iteration  20: 105431.383 ops/s
# Warmup Iteration  21: 103885.396 ops/s
# Warmup Iteration  22: 104643.242 ops/s
# Warmup Iteration  23: 108043.520 ops/s
# Warmup Iteration  24: 109775.976 ops/s
# Warmup Iteration  25: 110372.050 ops/s
# Warmup Iteration  26: 109089.528 ops/s
# Warmup Iteration  27: 105177.884 ops/s
# Warmup Iteration  28: 110765.906 ops/s
# Warmup Iteration  29: 112913.116 ops/s
# Warmup Iteration  30: 106721.897 ops/s
Iteration   1: 111318.815 ops/s
Iteration   2: 105645.189 ops/s
Iteration   3: 109550.478 ops/s
Iteration   4: 111594.283 ops/s
Iteration   5: 105476.195 ops/s
Iteration   6: 112118.037 ops/s
Iteration   7: 107216.868 ops/s
Iteration   8: 107798.755 ops/s
Iteration   9: 110800.582 ops/s
Iteration  10: 108519.364 ops/s
Iteration  11: 113796.028 ops/s
Iteration  12: 106844.754 ops/s
Iteration  13: 108664.246 ops/s
Iteration  14: 82630.242 ops/s
Iteration  15: 109623.980 ops/s
Iteration  16: 110509.973 ops/s
Iteration  17: 106648.137 ops/s
Iteration  18: 106123.494 ops/s
Iteration  19: 112635.229 ops/s
Iteration  20: 105041.387 ops/s
Iteration  21: 112509.470 ops/s
Iteration  22: 109255.897 ops/s
Iteration  23: 106321.135 ops/s
Iteration  24: 112595.556 ops/s
Iteration  25: 107079.979 ops/s
Iteration  26: 107483.274 ops/s
Iteration  27: 110452.133 ops/s
Iteration  28: 105881.620 ops/s
Iteration  29: 109570.274 ops/s
Iteration  30: 108182.317 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_473._Benchmark.benchmark_Cluster_473":
  108062.923 ±(99.9%) 3611.436 ops/s [Average]
  (min, avg, max) = (82630.242, 108062.923, 113796.028), stdev = 5405.428
  CI (99.9%): [104451.487, 111674.359] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_473._Benchmark.benchmark_Cluster_473  thrpt   30  108062.923 ± 3611.436  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_474._Benchmark.benchmark_Cluster_474$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_474._Benchmark.benchmark_Cluster_474

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13114.471 ops/s
# Warmup Iteration   2: 32167.778 ops/s
# Warmup Iteration   3: 52217.176 ops/s
# Warmup Iteration   4: 74452.952 ops/s
# Warmup Iteration   5: 85776.568 ops/s
# Warmup Iteration   6: 95653.343 ops/s
# Warmup Iteration   7: 84449.377 ops/s
# Warmup Iteration   8: 101039.718 ops/s
# Warmup Iteration   9: 92148.084 ops/s
# Warmup Iteration  10: 101160.848 ops/s
# Warmup Iteration  11: 96993.084 ops/s
# Warmup Iteration  12: 95945.227 ops/s
# Warmup Iteration  13: 101446.057 ops/s
# Warmup Iteration  14: 96608.528 ops/s
# Warmup Iteration  15: 99049.728 ops/s
# Warmup Iteration  16: 96001.822 ops/s
# Warmup Iteration  17: 100961.224 ops/s
# Warmup Iteration  18: 104607.191 ops/s
# Warmup Iteration  19: 99968.105 ops/s
# Warmup Iteration  20: 104977.898 ops/s
# Warmup Iteration  21: 99065.279 ops/s
# Warmup Iteration  22: 104825.722 ops/s
# Warmup Iteration  23: 103281.488 ops/s
# Warmup Iteration  24: 100357.384 ops/s
# Warmup Iteration  25: 101198.096 ops/s
# Warmup Iteration  26: 104760.993 ops/s
# Warmup Iteration  27: 99394.819 ops/s
# Warmup Iteration  28: 101929.663 ops/s
# Warmup Iteration  29: 103275.465 ops/s
# Warmup Iteration  30: 101431.913 ops/s
Iteration   1: 103768.728 ops/s
Iteration   2: 99692.812 ops/s
Iteration   3: 103768.220 ops/s
Iteration   4: 99009.814 ops/s
Iteration   5: 105743.751 ops/s
Iteration   6: 102678.609 ops/s
Iteration   7: 99931.367 ops/s
Iteration   8: 101499.740 ops/s
Iteration   9: 104395.827 ops/s
Iteration  10: 100303.607 ops/s
Iteration  11: 104728.362 ops/s
Iteration  12: 100255.689 ops/s
Iteration  13: 103673.592 ops/s
Iteration  14: 99935.808 ops/s
Iteration  15: 101612.291 ops/s
Iteration  16: 103085.083 ops/s
Iteration  17: 100804.801 ops/s
Iteration  18: 102679.102 ops/s
Iteration  19: 101875.518 ops/s
Iteration  20: 100762.011 ops/s
Iteration  21: 104767.259 ops/s
Iteration  22: 96461.713 ops/s
Iteration  23: 101123.557 ops/s
Iteration  24: 104210.228 ops/s
Iteration  25: 101839.404 ops/s
Iteration  26: 103639.687 ops/s
Iteration  27: 105679.932 ops/s
Iteration  28: 101332.020 ops/s
Iteration  29: 103174.891 ops/s
Iteration  30: 99812.699 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_474._Benchmark.benchmark_Cluster_474":
  102074.871 ±(99.9%) 1452.886 ops/s [Average]
  (min, avg, max) = (96461.713, 102074.871, 105743.751), stdev = 2174.612
  CI (99.9%): [100621.984, 103527.757] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_474._Benchmark.benchmark_Cluster_474  thrpt   30  102074.871 ± 1452.886  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_475._Benchmark.benchmark_Cluster_475$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_475._Benchmark.benchmark_Cluster_475

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13370.008 ops/s
# Warmup Iteration   2: 29474.059 ops/s
# Warmup Iteration   3: 79194.854 ops/s
# Warmup Iteration   4: 94056.648 ops/s
# Warmup Iteration   5: 104568.552 ops/s
# Warmup Iteration   6: 112559.400 ops/s
# Warmup Iteration   7: 109612.494 ops/s
# Warmup Iteration   8: 108280.181 ops/s
# Warmup Iteration   9: 114160.596 ops/s
# Warmup Iteration  10: 102042.447 ops/s
# Warmup Iteration  11: 105897.161 ops/s
# Warmup Iteration  12: 111343.973 ops/s
# Warmup Iteration  13: 106934.944 ops/s
# Warmup Iteration  14: 117909.402 ops/s
# Warmup Iteration  15: 108807.065 ops/s
# Warmup Iteration  16: 110785.475 ops/s
# Warmup Iteration  17: 114670.300 ops/s
# Warmup Iteration  18: 113631.535 ops/s
# Warmup Iteration  19: 117565.399 ops/s
# Warmup Iteration  20: 113454.974 ops/s
# Warmup Iteration  21: 118018.862 ops/s
# Warmup Iteration  22: 113759.309 ops/s
# Warmup Iteration  23: 114436.378 ops/s
# Warmup Iteration  24: 117109.160 ops/s
# Warmup Iteration  25: 114297.262 ops/s
# Warmup Iteration  26: 119218.559 ops/s
# Warmup Iteration  27: 117540.266 ops/s
# Warmup Iteration  28: 113286.909 ops/s
# Warmup Iteration  29: 118716.015 ops/s
# Warmup Iteration  30: 114140.489 ops/s
Iteration   1: 115925.618 ops/s
Iteration   2: 114256.026 ops/s
Iteration   3: 119707.219 ops/s
Iteration   4: 113317.966 ops/s
Iteration   5: 110485.973 ops/s
Iteration   6: 119398.999 ops/s
Iteration   7: 110297.560 ops/s
Iteration   8: 93416.379 ops/s
Iteration   9: 118609.226 ops/s
Iteration  10: 113061.192 ops/s
Iteration  11: 117389.016 ops/s
Iteration  12: 115900.132 ops/s
Iteration  13: 119551.358 ops/s
Iteration  14: 116060.221 ops/s
Iteration  15: 108289.178 ops/s
Iteration  16: 113289.431 ops/s
Iteration  17: 116944.764 ops/s
Iteration  18: 119572.231 ops/s
Iteration  19: 117596.517 ops/s
Iteration  20: 113170.306 ops/s
Iteration  21: 116918.002 ops/s
Iteration  22: 115159.807 ops/s
Iteration  23: 119911.332 ops/s
Iteration  24: 115475.599 ops/s
Iteration  25: 114818.326 ops/s
Iteration  26: 117381.231 ops/s
Iteration  27: 118306.547 ops/s
Iteration  28: 114034.889 ops/s
Iteration  29: 116359.450 ops/s
Iteration  30: 115095.900 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_475._Benchmark.benchmark_Cluster_475":
  114990.013 ±(99.9%) 3350.789 ops/s [Average]
  (min, avg, max) = (93416.379, 114990.013, 119911.332), stdev = 5015.304
  CI (99.9%): [111639.224, 118340.802] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_475._Benchmark.benchmark_Cluster_475  thrpt   30  114990.013 ± 3350.789  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_476._Benchmark.benchmark_Cluster_476$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_476._Benchmark.benchmark_Cluster_476

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15355.909 ops/s
# Warmup Iteration   2: 48699.769 ops/s
# Warmup Iteration   3: 50716.194 ops/s
# Warmup Iteration   4: 102380.075 ops/s
# Warmup Iteration   5: 99985.962 ops/s
# Warmup Iteration   6: 111923.276 ops/s
# Warmup Iteration   7: 115229.135 ops/s
# Warmup Iteration   8: 111151.819 ops/s
# Warmup Iteration   9: 111962.312 ops/s
# Warmup Iteration  10: 130623.076 ops/s
# Warmup Iteration  11: 101067.181 ops/s
# Warmup Iteration  12: 117221.799 ops/s
# Warmup Iteration  13: 112547.813 ops/s
# Warmup Iteration  14: 107604.201 ops/s
# Warmup Iteration  15: 125204.642 ops/s
# Warmup Iteration  16: 123548.729 ops/s
# Warmup Iteration  17: 104506.109 ops/s
# Warmup Iteration  18: 111922.798 ops/s
# Warmup Iteration  19: 108408.148 ops/s
# Warmup Iteration  20: 108689.514 ops/s
# Warmup Iteration  21: 121787.629 ops/s
# Warmup Iteration  22: 116769.234 ops/s
# Warmup Iteration  23: 114738.895 ops/s
# Warmup Iteration  24: 112243.374 ops/s
# Warmup Iteration  25: 100421.684 ops/s
# Warmup Iteration  26: 104148.604 ops/s
# Warmup Iteration  27: 121900.259 ops/s
# Warmup Iteration  28: 109568.727 ops/s
# Warmup Iteration  29: 107671.318 ops/s
# Warmup Iteration  30: 122988.292 ops/s
Iteration   1: 125457.804 ops/s
Iteration   2: 115019.427 ops/s
Iteration   3: 107844.116 ops/s
Iteration   4: 120284.413 ops/s
Iteration   5: 124226.224 ops/s
Iteration   6: 116782.414 ops/s
Iteration   7: 121450.242 ops/s
Iteration   8: 117760.426 ops/s
Iteration   9: 122193.936 ops/s
Iteration  10: 122603.879 ops/s
Iteration  11: 112551.100 ops/s
Iteration  12: 123877.230 ops/s
Iteration  13: 121732.583 ops/s
Iteration  14: 116765.765 ops/s
Iteration  15: 112314.815 ops/s
Iteration  16: 124608.476 ops/s
Iteration  17: 119715.864 ops/s
Iteration  18: 115059.784 ops/s
Iteration  19: 97039.651 ops/s
Iteration  20: 103751.040 ops/s
Iteration  21: 108856.360 ops/s
Iteration  22: 121248.760 ops/s
Iteration  23: 115452.872 ops/s
Iteration  24: 110148.070 ops/s
Iteration  25: 108048.931 ops/s
Iteration  26: 113107.823 ops/s
Iteration  27: 115713.173 ops/s
Iteration  28: 120439.328 ops/s
Iteration  29: 123250.638 ops/s
Iteration  30: 106475.107 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_476._Benchmark.benchmark_Cluster_476":
  116126.008 ±(99.9%) 4683.323 ops/s [Average]
  (min, avg, max) = (97039.651, 116126.008, 125457.804), stdev = 7009.778
  CI (99.9%): [111442.685, 120809.331] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_476._Benchmark.benchmark_Cluster_476  thrpt   30  116126.008 ± 4683.323  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_477._Benchmark.benchmark_Cluster_477$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_477._Benchmark.benchmark_Cluster_477

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4398.535 ops/s
# Warmup Iteration   2: 19126.398 ops/s
# Warmup Iteration   3: 38384.199 ops/s
# Warmup Iteration   4: 47314.133 ops/s
# Warmup Iteration   5: 42861.418 ops/s
# Warmup Iteration   6: 54586.775 ops/s
# Warmup Iteration   7: 55360.004 ops/s
# Warmup Iteration   8: 59879.825 ops/s
# Warmup Iteration   9: 50347.843 ops/s
# Warmup Iteration  10: 55225.584 ops/s
# Warmup Iteration  11: 51185.768 ops/s
# Warmup Iteration  12: 54778.492 ops/s
# Warmup Iteration  13: 58555.856 ops/s
# Warmup Iteration  14: 58717.905 ops/s
# Warmup Iteration  15: 54550.543 ops/s
# Warmup Iteration  16: 56573.874 ops/s
# Warmup Iteration  17: 54931.249 ops/s
# Warmup Iteration  18: 56652.789 ops/s
# Warmup Iteration  19: 54602.777 ops/s
# Warmup Iteration  20: 56330.532 ops/s
# Warmup Iteration  21: 51434.835 ops/s
# Warmup Iteration  22: 53729.845 ops/s
# Warmup Iteration  23: 56864.228 ops/s
# Warmup Iteration  24: 53371.933 ops/s
# Warmup Iteration  25: 53732.870 ops/s
# Warmup Iteration  26: 56320.100 ops/s
# Warmup Iteration  27: 58114.484 ops/s
# Warmup Iteration  28: 54667.503 ops/s
# Warmup Iteration  29: 52890.074 ops/s
# Warmup Iteration  30: 52398.487 ops/s
Iteration   1: 56415.621 ops/s
Iteration   2: 59677.748 ops/s
Iteration   3: 57601.492 ops/s
Iteration   4: 57719.419 ops/s
Iteration   5: 55626.595 ops/s
Iteration   6: 55954.282 ops/s
Iteration   7: 54359.380 ops/s
Iteration   8: 56588.878 ops/s
Iteration   9: 55855.931 ops/s
Iteration  10: 55624.390 ops/s
Iteration  11: 56403.085 ops/s
Iteration  12: 58190.946 ops/s
Iteration  13: 58210.784 ops/s
Iteration  14: 53286.073 ops/s
Iteration  15: 57121.800 ops/s
Iteration  16: 57345.148 ops/s
Iteration  17: 58543.704 ops/s
Iteration  18: 60538.963 ops/s
Iteration  19: 55988.054 ops/s
Iteration  20: 57791.213 ops/s
Iteration  21: 55798.934 ops/s
Iteration  22: 56243.191 ops/s
Iteration  23: 52513.323 ops/s
Iteration  24: 56205.577 ops/s
Iteration  25: 60006.181 ops/s
Iteration  26: 56517.128 ops/s
Iteration  27: 55836.785 ops/s
Iteration  28: 56767.375 ops/s
Iteration  29: 53151.633 ops/s
Iteration  30: 52525.026 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_477._Benchmark.benchmark_Cluster_477":
  56480.289 ±(99.9%) 1334.069 ops/s [Average]
  (min, avg, max) = (52513.323, 56480.289, 60538.963), stdev = 1996.771
  CI (99.9%): [55146.220, 57814.357] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_477._Benchmark.benchmark_Cluster_477  thrpt   30  56480.289 ± 1334.069  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_478._Benchmark.benchmark_Cluster_478$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_478._Benchmark.benchmark_Cluster_478

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5299.039 ops/s
# Warmup Iteration   2: 15903.232 ops/s
# Warmup Iteration   3: 21351.982 ops/s
# Warmup Iteration   4: 30358.997 ops/s
# Warmup Iteration   5: 25582.880 ops/s
# Warmup Iteration   6: 43881.494 ops/s
# Warmup Iteration   7: 62409.366 ops/s
# Warmup Iteration   8: 61279.739 ops/s
# Warmup Iteration   9: 62266.153 ops/s
# Warmup Iteration  10: 57456.669 ops/s
# Warmup Iteration  11: 66477.607 ops/s
# Warmup Iteration  12: 63291.768 ops/s
# Warmup Iteration  13: 62310.422 ops/s
# Warmup Iteration  14: 57227.262 ops/s
# Warmup Iteration  15: 67886.701 ops/s
# Warmup Iteration  16: 70212.764 ops/s
# Warmup Iteration  17: 64730.735 ops/s
# Warmup Iteration  18: 62355.278 ops/s
# Warmup Iteration  19: 59099.728 ops/s
# Warmup Iteration  20: 63379.538 ops/s
# Warmup Iteration  21: 56156.475 ops/s
# Warmup Iteration  22: 60088.795 ops/s
# Warmup Iteration  23: 53957.113 ops/s
# Warmup Iteration  24: 64817.302 ops/s
# Warmup Iteration  25: 64021.904 ops/s
# Warmup Iteration  26: 57312.721 ops/s
# Warmup Iteration  27: 68407.849 ops/s
# Warmup Iteration  28: 65346.035 ops/s
# Warmup Iteration  29: 62593.388 ops/s
# Warmup Iteration  30: 65943.197 ops/s
Iteration   1: 69004.557 ops/s
Iteration   2: 58612.249 ops/s
Iteration   3: 76146.228 ops/s
Iteration   4: 60334.193 ops/s
Iteration   5: 56068.672 ops/s
Iteration   6: 64478.408 ops/s
Iteration   7: 73522.034 ops/s
Iteration   8: 69323.423 ops/s
Iteration   9: 62686.470 ops/s
Iteration  10: 64263.643 ops/s
Iteration  11: 58662.618 ops/s
Iteration  12: 62937.251 ops/s
Iteration  13: 66992.786 ops/s
Iteration  14: 57112.094 ops/s
Iteration  15: 62840.980 ops/s
Iteration  16: 67244.247 ops/s
Iteration  17: 60199.060 ops/s
Iteration  18: 74031.565 ops/s
Iteration  19: 58285.993 ops/s
Iteration  20: 77247.991 ops/s
Iteration  21: 62116.830 ops/s
Iteration  22: 61577.328 ops/s
Iteration  23: 57609.858 ops/s
Iteration  24: 64485.083 ops/s
Iteration  25: 66972.881 ops/s
Iteration  26: 66890.967 ops/s
Iteration  27: 60857.604 ops/s
Iteration  28: 59396.418 ops/s
Iteration  29: 63643.203 ops/s
Iteration  30: 66959.478 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_478._Benchmark.benchmark_Cluster_478":
  64350.137 ±(99.9%) 3771.387 ops/s [Average]
  (min, avg, max) = (56068.672, 64350.137, 77247.991), stdev = 5644.834
  CI (99.9%): [60578.751, 68121.524] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_478._Benchmark.benchmark_Cluster_478  thrpt   30  64350.137 ± 3771.387  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_479._Benchmark.benchmark_Cluster_479$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_479._Benchmark.benchmark_Cluster_479

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 27661.150 ops/s
# Warmup Iteration   2: 56989.227 ops/s
# Warmup Iteration   3: 114761.550 ops/s
# Warmup Iteration   4: 127174.165 ops/s
# Warmup Iteration   5: 136592.108 ops/s
# Warmup Iteration   6: 125580.629 ops/s
# Warmup Iteration   7: 132250.311 ops/s
# Warmup Iteration   8: 136010.814 ops/s
# Warmup Iteration   9: 120189.798 ops/s
# Warmup Iteration  10: 137839.956 ops/s
# Warmup Iteration  11: 133193.307 ops/s
# Warmup Iteration  12: 130962.390 ops/s
# Warmup Iteration  13: 129133.247 ops/s
# Warmup Iteration  14: 133617.006 ops/s
# Warmup Iteration  15: 128316.732 ops/s
# Warmup Iteration  16: 131765.045 ops/s
# Warmup Iteration  17: 140263.806 ops/s
# Warmup Iteration  18: 137844.543 ops/s
# Warmup Iteration  19: 140932.184 ops/s
# Warmup Iteration  20: 139686.557 ops/s
# Warmup Iteration  21: 136458.943 ops/s
# Warmup Iteration  22: 104325.952 ops/s
# Warmup Iteration  23: 138550.165 ops/s
# Warmup Iteration  24: 139159.644 ops/s
# Warmup Iteration  25: 136124.893 ops/s
# Warmup Iteration  26: 142326.391 ops/s
# Warmup Iteration  27: 133051.816 ops/s
# Warmup Iteration  28: 140520.848 ops/s
# Warmup Iteration  29: 142204.531 ops/s
# Warmup Iteration  30: 138782.943 ops/s
Iteration   1: 140851.294 ops/s
Iteration   2: 144546.172 ops/s
Iteration   3: 135978.494 ops/s
Iteration   4: 141606.469 ops/s
Iteration   5: 139040.519 ops/s
Iteration   6: 139824.115 ops/s
Iteration   7: 141384.671 ops/s
Iteration   8: 137619.498 ops/s
Iteration   9: 140823.351 ops/s
Iteration  10: 140856.959 ops/s
Iteration  11: 138439.690 ops/s
Iteration  12: 146069.753 ops/s
Iteration  13: 136763.007 ops/s
Iteration  14: 137162.953 ops/s
Iteration  15: 135882.015 ops/s
Iteration  16: 136125.055 ops/s
Iteration  17: 139549.733 ops/s
Iteration  18: 133704.768 ops/s
Iteration  19: 141780.900 ops/s
Iteration  20: 140457.891 ops/s
Iteration  21: 143684.033 ops/s
Iteration  22: 134834.707 ops/s
Iteration  23: 139950.988 ops/s
Iteration  24: 140163.980 ops/s
Iteration  25: 136165.366 ops/s
Iteration  26: 143617.075 ops/s
Iteration  27: 135862.384 ops/s
Iteration  28: 140216.865 ops/s
Iteration  29: 139832.983 ops/s
Iteration  30: 141409.644 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_479._Benchmark.benchmark_Cluster_479":
  139473.511 ±(99.9%) 2008.249 ops/s [Average]
  (min, avg, max) = (133704.768, 139473.511, 146069.753), stdev = 3005.853
  CI (99.9%): [137465.262, 141481.760] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_479._Benchmark.benchmark_Cluster_479  thrpt   30  139473.511 ± 2008.249  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_48._Benchmark.benchmark_Cluster_48$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_48._Benchmark.benchmark_Cluster_48

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6189.001 ops/s
# Warmup Iteration   2: 34327.040 ops/s
# Warmup Iteration   3: 60999.001 ops/s
# Warmup Iteration   4: 92038.737 ops/s
# Warmup Iteration   5: 99344.801 ops/s
# Warmup Iteration   6: 108720.800 ops/s
# Warmup Iteration   7: 100074.794 ops/s
# Warmup Iteration   8: 114774.106 ops/s
# Warmup Iteration   9: 109586.893 ops/s
# Warmup Iteration  10: 115969.602 ops/s
# Warmup Iteration  11: 109325.270 ops/s
# Warmup Iteration  12: 113219.308 ops/s
# Warmup Iteration  13: 115407.257 ops/s
# Warmup Iteration  14: 111019.125 ops/s
# Warmup Iteration  15: 115602.927 ops/s
# Warmup Iteration  16: 115602.228 ops/s
# Warmup Iteration  17: 114232.920 ops/s
# Warmup Iteration  18: 112074.692 ops/s
# Warmup Iteration  19: 118191.953 ops/s
# Warmup Iteration  20: 109638.299 ops/s
# Warmup Iteration  21: 115991.825 ops/s
# Warmup Iteration  22: 114654.580 ops/s
# Warmup Iteration  23: 116773.757 ops/s
# Warmup Iteration  24: 117009.726 ops/s
# Warmup Iteration  25: 113526.385 ops/s
# Warmup Iteration  26: 114688.392 ops/s
# Warmup Iteration  27: 116900.928 ops/s
# Warmup Iteration  28: 113346.684 ops/s
# Warmup Iteration  29: 118795.919 ops/s
# Warmup Iteration  30: 111784.807 ops/s
Iteration   1: 118166.611 ops/s
Iteration   2: 119520.792 ops/s
Iteration   3: 110243.836 ops/s
Iteration   4: 117687.569 ops/s
Iteration   5: 112843.588 ops/s
Iteration   6: 117545.431 ops/s
Iteration   7: 115528.934 ops/s
Iteration   8: 115762.956 ops/s
Iteration   9: 111528.147 ops/s
Iteration  10: 118975.978 ops/s
Iteration  11: 114319.373 ops/s
Iteration  12: 113836.244 ops/s
Iteration  13: 115434.737 ops/s
Iteration  14: 111595.140 ops/s
Iteration  15: 119675.968 ops/s
Iteration  16: 116555.583 ops/s
Iteration  17: 111526.216 ops/s
Iteration  18: 119782.454 ops/s
Iteration  19: 116838.975 ops/s
Iteration  20: 113564.368 ops/s
Iteration  21: 118006.440 ops/s
Iteration  22: 112435.647 ops/s
Iteration  23: 115623.671 ops/s
Iteration  24: 115427.295 ops/s
Iteration  25: 112709.241 ops/s
Iteration  26: 118677.225 ops/s
Iteration  27: 111241.310 ops/s
Iteration  28: 119694.859 ops/s
Iteration  29: 114743.314 ops/s
Iteration  30: 114536.899 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_48._Benchmark.benchmark_Cluster_48":
  115467.627 ±(99.9%) 1935.078 ops/s [Average]
  (min, avg, max) = (110243.836, 115467.627, 119782.454), stdev = 2896.334
  CI (99.9%): [113532.548, 117402.705] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_48._Benchmark.benchmark_Cluster_48  thrpt   30  115467.627 ± 1935.078  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_480._Benchmark.benchmark_Cluster_480$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_480._Benchmark.benchmark_Cluster_480

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 23779.143 ops/s
# Warmup Iteration   2: 63901.322 ops/s
# Warmup Iteration   3: 127065.167 ops/s
# Warmup Iteration   4: 134925.915 ops/s
# Warmup Iteration   5: 125363.212 ops/s
# Warmup Iteration   6: 143201.434 ops/s
# Warmup Iteration   7: 136737.857 ops/s
# Warmup Iteration   8: 142022.296 ops/s
# Warmup Iteration   9: 140246.710 ops/s
# Warmup Iteration  10: 129544.190 ops/s
# Warmup Iteration  11: 132655.542 ops/s
# Warmup Iteration  12: 143532.519 ops/s
# Warmup Iteration  13: 134165.462 ops/s
# Warmup Iteration  14: 143160.648 ops/s
# Warmup Iteration  15: 138171.309 ops/s
# Warmup Iteration  16: 139252.810 ops/s
# Warmup Iteration  17: 127176.451 ops/s
# Warmup Iteration  18: 141415.537 ops/s
# Warmup Iteration  19: 149949.804 ops/s
# Warmup Iteration  20: 148710.683 ops/s
# Warmup Iteration  21: 143410.813 ops/s
# Warmup Iteration  22: 150521.974 ops/s
# Warmup Iteration  23: 142307.552 ops/s
# Warmup Iteration  24: 148500.238 ops/s
# Warmup Iteration  25: 150751.732 ops/s
# Warmup Iteration  26: 144537.096 ops/s
# Warmup Iteration  27: 146744.373 ops/s
# Warmup Iteration  28: 144122.120 ops/s
# Warmup Iteration  29: 147018.216 ops/s
# Warmup Iteration  30: 145146.172 ops/s
Iteration   1: 149268.149 ops/s
Iteration   2: 149984.514 ops/s
Iteration   3: 140894.924 ops/s
Iteration   4: 148362.064 ops/s
Iteration   5: 145942.430 ops/s
Iteration   6: 146036.934 ops/s
Iteration   7: 151704.876 ops/s
Iteration   8: 151868.437 ops/s
Iteration   9: 144600.660 ops/s
Iteration  10: 146248.641 ops/s
Iteration  11: 152188.164 ops/s
Iteration  12: 144682.475 ops/s
Iteration  13: 145497.462 ops/s
Iteration  14: 148072.582 ops/s
Iteration  15: 148352.367 ops/s
Iteration  16: 142951.714 ops/s
Iteration  17: 145285.712 ops/s
Iteration  18: 147387.767 ops/s
Iteration  19: 148979.787 ops/s
Iteration  20: 144148.810 ops/s
Iteration  21: 150743.195 ops/s
Iteration  22: 145632.908 ops/s
Iteration  23: 148834.974 ops/s
Iteration  24: 148680.783 ops/s
Iteration  25: 146300.590 ops/s
Iteration  26: 149631.727 ops/s
Iteration  27: 150297.427 ops/s
Iteration  28: 143862.928 ops/s
Iteration  29: 151330.810 ops/s
Iteration  30: 153585.104 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_480._Benchmark.benchmark_Cluster_480":
  147711.964 ±(99.9%) 2051.962 ops/s [Average]
  (min, avg, max) = (140894.924, 147711.964, 153585.104), stdev = 3071.280
  CI (99.9%): [145660.002, 149763.926] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_480._Benchmark.benchmark_Cluster_480  thrpt   30  147711.964 ± 2051.962  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_481._Benchmark.benchmark_Cluster_481$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_481._Benchmark.benchmark_Cluster_481

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16253.823 ops/s
# Warmup Iteration   2: 45972.661 ops/s
# Warmup Iteration   3: 67217.392 ops/s
# Warmup Iteration   4: 117469.150 ops/s
# Warmup Iteration   5: 121653.376 ops/s
# Warmup Iteration   6: 125198.301 ops/s
# Warmup Iteration   7: 119707.595 ops/s
# Warmup Iteration   8: 131400.861 ops/s
# Warmup Iteration   9: 124095.692 ops/s
# Warmup Iteration  10: 124078.405 ops/s
# Warmup Iteration  11: 122160.738 ops/s
# Warmup Iteration  12: 124930.519 ops/s
# Warmup Iteration  13: 129056.498 ops/s
# Warmup Iteration  14: 122201.683 ops/s
# Warmup Iteration  15: 123374.772 ops/s
# Warmup Iteration  16: 130262.582 ops/s
# Warmup Iteration  17: 129265.443 ops/s
# Warmup Iteration  18: 130919.660 ops/s
# Warmup Iteration  19: 131711.919 ops/s
# Warmup Iteration  20: 128627.473 ops/s
# Warmup Iteration  21: 132680.453 ops/s
# Warmup Iteration  22: 128644.958 ops/s
# Warmup Iteration  23: 131568.145 ops/s
# Warmup Iteration  24: 132198.994 ops/s
# Warmup Iteration  25: 127566.117 ops/s
# Warmup Iteration  26: 136178.410 ops/s
# Warmup Iteration  27: 129226.785 ops/s
# Warmup Iteration  28: 128186.011 ops/s
# Warmup Iteration  29: 134011.743 ops/s
# Warmup Iteration  30: 127607.545 ops/s
Iteration   1: 135752.235 ops/s
Iteration   2: 134339.827 ops/s
Iteration   3: 127570.515 ops/s
Iteration   4: 132153.215 ops/s
Iteration   5: 129407.218 ops/s
Iteration   6: 129954.525 ops/s
Iteration   7: 136412.555 ops/s
Iteration   8: 123550.653 ops/s
Iteration   9: 133218.400 ops/s
Iteration  10: 130705.375 ops/s
Iteration  11: 131268.226 ops/s
Iteration  12: 135581.470 ops/s
Iteration  13: 125344.448 ops/s
Iteration  14: 134196.195 ops/s
Iteration  15: 134043.366 ops/s
Iteration  16: 125605.713 ops/s
Iteration  17: 137678.053 ops/s
Iteration  18: 130048.470 ops/s
Iteration  19: 126436.457 ops/s
Iteration  20: 132612.956 ops/s
Iteration  21: 126580.869 ops/s
Iteration  22: 129523.959 ops/s
Iteration  23: 135387.889 ops/s
Iteration  24: 127263.070 ops/s
Iteration  25: 136355.577 ops/s
Iteration  26: 126937.873 ops/s
Iteration  27: 128610.649 ops/s
Iteration  28: 138034.002 ops/s
Iteration  29: 132741.922 ops/s
Iteration  30: 126337.167 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_481._Benchmark.benchmark_Cluster_481":
  131121.762 ±(99.9%) 2747.525 ops/s [Average]
  (min, avg, max) = (123550.653, 131121.762, 138034.002), stdev = 4112.366
  CI (99.9%): [128374.237, 133869.286] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_481._Benchmark.benchmark_Cluster_481  thrpt   30  131121.762 ± 2747.525  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_482._Benchmark.benchmark_Cluster_482$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_482._Benchmark.benchmark_Cluster_482

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 24669.017 ops/s
# Warmup Iteration   2: 118638.547 ops/s
# Warmup Iteration   3: 140506.699 ops/s
# Warmup Iteration   4: 159161.837 ops/s
# Warmup Iteration   5: 158421.608 ops/s
# Warmup Iteration   6: 170554.362 ops/s
# Warmup Iteration   7: 162708.035 ops/s
# Warmup Iteration   8: 167752.670 ops/s
# Warmup Iteration   9: 165770.016 ops/s
# Warmup Iteration  10: 152292.942 ops/s
# Warmup Iteration  11: 146496.808 ops/s
# Warmup Iteration  12: 156885.757 ops/s
# Warmup Iteration  13: 164097.603 ops/s
# Warmup Iteration  14: 168967.875 ops/s
# Warmup Iteration  15: 174712.957 ops/s
# Warmup Iteration  16: 160943.306 ops/s
# Warmup Iteration  17: 178708.022 ops/s
# Warmup Iteration  18: 172564.706 ops/s
# Warmup Iteration  19: 168478.191 ops/s
# Warmup Iteration  20: 179146.388 ops/s
# Warmup Iteration  21: 171412.389 ops/s
# Warmup Iteration  22: 174039.140 ops/s
# Warmup Iteration  23: 171190.860 ops/s
# Warmup Iteration  24: 172839.693 ops/s
# Warmup Iteration  25: 174904.253 ops/s
# Warmup Iteration  26: 169156.208 ops/s
# Warmup Iteration  27: 175436.578 ops/s
# Warmup Iteration  28: 178873.678 ops/s
# Warmup Iteration  29: 169943.324 ops/s
# Warmup Iteration  30: 177539.598 ops/s
Iteration   1: 168346.211 ops/s
Iteration   2: 170518.462 ops/s
Iteration   3: 175434.988 ops/s
Iteration   4: 164822.806 ops/s
Iteration   5: 173133.479 ops/s
Iteration   6: 170182.152 ops/s
Iteration   7: 165682.465 ops/s
Iteration   8: 175273.282 ops/s
Iteration   9: 170099.047 ops/s
Iteration  10: 181421.438 ops/s
Iteration  11: 173144.166 ops/s
Iteration  12: 177884.145 ops/s
Iteration  13: 169750.093 ops/s
Iteration  14: 176432.201 ops/s
Iteration  15: 174244.359 ops/s
Iteration  16: 179666.409 ops/s
Iteration  17: 168922.916 ops/s
Iteration  18: 181221.212 ops/s
Iteration  19: 169828.165 ops/s
Iteration  20: 175054.191 ops/s
Iteration  21: 169515.867 ops/s
Iteration  22: 175549.572 ops/s
Iteration  23: 176881.610 ops/s
Iteration  24: 171303.378 ops/s
Iteration  25: 173475.473 ops/s
Iteration  26: 182629.537 ops/s
Iteration  27: 174275.847 ops/s
Iteration  28: 166290.225 ops/s
Iteration  29: 181259.058 ops/s
Iteration  30: 172180.110 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_482._Benchmark.benchmark_Cluster_482":
  173480.762 ±(99.9%) 3224.404 ops/s [Average]
  (min, avg, max) = (164822.806, 173480.762, 182629.537), stdev = 4826.136
  CI (99.9%): [170256.358, 176705.166] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_482._Benchmark.benchmark_Cluster_482  thrpt   30  173480.762 ± 3224.404  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_483._Benchmark.benchmark_Cluster_483$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_483._Benchmark.benchmark_Cluster_483

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.785 ops/s
# Warmup Iteration   2: 11666.955 ops/s
# Warmup Iteration   3: 42926.039 ops/s
# Warmup Iteration   4: 48003.135 ops/s
# Warmup Iteration   5: 34632.268 ops/s
# Warmup Iteration   6: 56514.751 ops/s
# Warmup Iteration   7: 75922.514 ops/s
# Warmup Iteration   8: 123112.142 ops/s
# Warmup Iteration   9: 142074.511 ops/s
# Warmup Iteration  10: 138254.059 ops/s
# Warmup Iteration  11: 134674.500 ops/s
# Warmup Iteration  12: 142520.054 ops/s
# Warmup Iteration  13: 140722.339 ops/s
# Warmup Iteration  14: 138310.091 ops/s
# Warmup Iteration  15: 138467.464 ops/s
# Warmup Iteration  16: 126905.215 ops/s
# Warmup Iteration  17: 145408.422 ops/s
# Warmup Iteration  18: 144578.623 ops/s
# Warmup Iteration  19: 133092.917 ops/s
# Warmup Iteration  20: 145967.054 ops/s
# Warmup Iteration  21: 137144.195 ops/s
# Warmup Iteration  22: 141705.193 ops/s
# Warmup Iteration  23: 139578.179 ops/s
# Warmup Iteration  24: 133512.672 ops/s
# Warmup Iteration  25: 141741.026 ops/s
# Warmup Iteration  26: 139930.830 ops/s
# Warmup Iteration  27: 142353.004 ops/s
# Warmup Iteration  28: 136348.953 ops/s
# Warmup Iteration  29: 139764.372 ops/s
# Warmup Iteration  30: 143652.853 ops/s
Iteration   1: 135210.225 ops/s
Iteration   2: 141616.502 ops/s
Iteration   3: 136319.653 ops/s
Iteration   4: 139777.323 ops/s
Iteration   5: 143668.173 ops/s
Iteration   6: 136292.070 ops/s
Iteration   7: 144095.750 ops/s
Iteration   8: 134910.839 ops/s
Iteration   9: 140184.864 ops/s
Iteration  10: 141876.771 ops/s
Iteration  11: 135333.949 ops/s
Iteration  12: 145606.574 ops/s
Iteration  13: 142604.911 ops/s
Iteration  14: 136256.480 ops/s
Iteration  15: 136247.398 ops/s
Iteration  16: 139794.580 ops/s
Iteration  17: 135831.772 ops/s
Iteration  18: 141639.276 ops/s
Iteration  19: 134853.392 ops/s
Iteration  20: 144008.373 ops/s
Iteration  21: 139434.456 ops/s
Iteration  22: 141710.820 ops/s
Iteration  23: 145878.389 ops/s
Iteration  24: 136697.132 ops/s
Iteration  25: 141535.150 ops/s
Iteration  26: 138156.594 ops/s
Iteration  27: 145033.721 ops/s
Iteration  28: 135481.226 ops/s
Iteration  29: 141056.410 ops/s
Iteration  30: 139718.483 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_483._Benchmark.benchmark_Cluster_483":
  139694.375 ±(99.9%) 2360.334 ops/s [Average]
  (min, avg, max) = (134853.392, 139694.375, 145878.389), stdev = 3532.836
  CI (99.9%): [137334.042, 142054.709] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_483._Benchmark.benchmark_Cluster_483  thrpt   30  139694.375 ± 2360.334  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_484._Benchmark.benchmark_Cluster_484$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_484._Benchmark.benchmark_Cluster_484

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18123.009 ops/s
# Warmup Iteration   2: 107323.500 ops/s
# Warmup Iteration   3: 145856.965 ops/s
# Warmup Iteration   4: 165538.563 ops/s
# Warmup Iteration   5: 161257.004 ops/s
# Warmup Iteration   6: 120753.064 ops/s
# Warmup Iteration   7: 169242.927 ops/s
# Warmup Iteration   8: 162427.981 ops/s
# Warmup Iteration   9: 163566.672 ops/s
# Warmup Iteration  10: 154778.696 ops/s
# Warmup Iteration  11: 165298.605 ops/s
# Warmup Iteration  12: 163100.174 ops/s
# Warmup Iteration  13: 168126.270 ops/s
# Warmup Iteration  14: 162109.369 ops/s
# Warmup Iteration  15: 162505.428 ops/s
# Warmup Iteration  16: 168466.847 ops/s
# Warmup Iteration  17: 164130.488 ops/s
# Warmup Iteration  18: 172192.055 ops/s
# Warmup Iteration  19: 165339.784 ops/s
# Warmup Iteration  20: 172312.789 ops/s
# Warmup Iteration  21: 176193.253 ops/s
# Warmup Iteration  22: 168924.867 ops/s
# Warmup Iteration  23: 173611.814 ops/s
# Warmup Iteration  24: 169265.490 ops/s
# Warmup Iteration  25: 165371.690 ops/s
# Warmup Iteration  26: 175156.417 ops/s
# Warmup Iteration  27: 173723.197 ops/s
# Warmup Iteration  28: 175432.419 ops/s
# Warmup Iteration  29: 175203.548 ops/s
# Warmup Iteration  30: 166694.908 ops/s
Iteration   1: 178220.673 ops/s
Iteration   2: 165999.676 ops/s
Iteration   3: 175419.106 ops/s
Iteration   4: 166292.711 ops/s
Iteration   5: 169220.726 ops/s
Iteration   6: 175140.947 ops/s
Iteration   7: 165347.563 ops/s
Iteration   8: 178493.949 ops/s
Iteration   9: 172132.632 ops/s
Iteration  10: 169742.275 ops/s
Iteration  11: 177626.639 ops/s
Iteration  12: 167710.439 ops/s
Iteration  13: 167329.232 ops/s
Iteration  14: 173671.600 ops/s
Iteration  15: 171896.636 ops/s
Iteration  16: 171837.386 ops/s
Iteration  17: 175672.578 ops/s
Iteration  18: 170965.038 ops/s
Iteration  19: 175359.376 ops/s
Iteration  20: 172394.128 ops/s
Iteration  21: 170281.172 ops/s
Iteration  22: 176064.056 ops/s
Iteration  23: 173186.260 ops/s
Iteration  24: 171516.946 ops/s
Iteration  25: 172202.784 ops/s
Iteration  26: 173673.883 ops/s
Iteration  27: 168871.642 ops/s
Iteration  28: 169799.460 ops/s
Iteration  29: 168841.426 ops/s
Iteration  30: 171510.773 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_484._Benchmark.benchmark_Cluster_484":
  171880.724 ±(99.9%) 2409.472 ops/s [Average]
  (min, avg, max) = (165347.563, 171880.724, 178493.949), stdev = 3606.385
  CI (99.9%): [169471.251, 174290.196] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_484._Benchmark.benchmark_Cluster_484  thrpt   30  171880.724 ± 2409.472  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_485._Benchmark.benchmark_Cluster_485$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_485._Benchmark.benchmark_Cluster_485

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17304.146 ops/s
# Warmup Iteration   2: 53439.354 ops/s
# Warmup Iteration   3: 83330.378 ops/s
# Warmup Iteration   4: 87682.862 ops/s
# Warmup Iteration   5: 86666.588 ops/s
# Warmup Iteration   6: 99330.283 ops/s
# Warmup Iteration   7: 103069.259 ops/s
# Warmup Iteration   8: 98000.277 ops/s
# Warmup Iteration   9: 99651.845 ops/s
# Warmup Iteration  10: 103565.384 ops/s
# Warmup Iteration  11: 103783.491 ops/s
# Warmup Iteration  12: 97530.059 ops/s
# Warmup Iteration  13: 102924.824 ops/s
# Warmup Iteration  14: 98292.027 ops/s
# Warmup Iteration  15: 103415.898 ops/s
# Warmup Iteration  16: 103993.094 ops/s
# Warmup Iteration  17: 100482.273 ops/s
# Warmup Iteration  18: 100920.842 ops/s
# Warmup Iteration  19: 107044.159 ops/s
# Warmup Iteration  20: 98774.013 ops/s
# Warmup Iteration  21: 103247.155 ops/s
# Warmup Iteration  22: 103586.002 ops/s
# Warmup Iteration  23: 101865.500 ops/s
# Warmup Iteration  24: 104359.912 ops/s
# Warmup Iteration  25: 104449.466 ops/s
# Warmup Iteration  26: 100551.858 ops/s
# Warmup Iteration  27: 104931.531 ops/s
# Warmup Iteration  28: 105894.476 ops/s
# Warmup Iteration  29: 101981.017 ops/s
# Warmup Iteration  30: 103769.699 ops/s
Iteration   1: 107084.701 ops/s
Iteration   2: 103231.599 ops/s
Iteration   3: 103668.310 ops/s
Iteration   4: 104297.713 ops/s
Iteration   5: 99483.987 ops/s
Iteration   6: 103865.506 ops/s
Iteration   7: 103767.321 ops/s
Iteration   8: 104476.332 ops/s
Iteration   9: 102832.206 ops/s
Iteration  10: 100520.020 ops/s
Iteration  11: 103274.728 ops/s
Iteration  12: 104853.579 ops/s
Iteration  13: 103972.747 ops/s
Iteration  14: 101966.213 ops/s
Iteration  15: 102193.912 ops/s
Iteration  16: 105654.517 ops/s
Iteration  17: 100953.153 ops/s
Iteration  18: 102972.673 ops/s
Iteration  19: 109239.186 ops/s
Iteration  20: 99474.807 ops/s
Iteration  21: 105589.979 ops/s
Iteration  22: 102804.006 ops/s
Iteration  23: 106168.706 ops/s
Iteration  24: 103139.127 ops/s
Iteration  25: 104159.480 ops/s
Iteration  26: 101299.138 ops/s
Iteration  27: 101531.740 ops/s
Iteration  28: 103459.798 ops/s
Iteration  29: 102180.302 ops/s
Iteration  30: 103569.584 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_485._Benchmark.benchmark_Cluster_485":
  103389.502 ±(99.9%) 1412.116 ops/s [Average]
  (min, avg, max) = (99474.807, 103389.502, 109239.186), stdev = 2113.589
  CI (99.9%): [101977.386, 104801.618] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_485._Benchmark.benchmark_Cluster_485  thrpt   30  103389.502 ± 1412.116  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_486._Benchmark.benchmark_Cluster_486$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_486._Benchmark.benchmark_Cluster_486

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 495.771 ops/s
# Warmup Iteration   2: 5611.460 ops/s
# Warmup Iteration   3: 15484.494 ops/s
# Warmup Iteration   4: 25530.944 ops/s
# Warmup Iteration   5: 18582.854 ops/s
# Warmup Iteration   6: 23143.689 ops/s
# Warmup Iteration   7: 29017.004 ops/s
# Warmup Iteration   8: 24973.365 ops/s
# Warmup Iteration   9: 28140.426 ops/s
# Warmup Iteration  10: 14311.982 ops/s
# Warmup Iteration  11: 23501.135 ops/s
# Warmup Iteration  12: 22917.177 ops/s
# Warmup Iteration  13: 35451.210 ops/s
# Warmup Iteration  14: 45283.083 ops/s
# Warmup Iteration  15: 55793.079 ops/s
# Warmup Iteration  16: 86645.469 ops/s
# Warmup Iteration  17: 83394.494 ops/s
# Warmup Iteration  18: 84577.730 ops/s
# Warmup Iteration  19: 85796.295 ops/s
# Warmup Iteration  20: 85198.281 ops/s
# Warmup Iteration  21: 85461.535 ops/s
# Warmup Iteration  22: 84964.016 ops/s
# Warmup Iteration  23: 84414.248 ops/s
# Warmup Iteration  24: 83214.844 ops/s
# Warmup Iteration  25: 84273.508 ops/s
# Warmup Iteration  26: 86730.907 ops/s
# Warmup Iteration  27: 84771.484 ops/s
# Warmup Iteration  28: 83951.711 ops/s
# Warmup Iteration  29: 87480.448 ops/s
# Warmup Iteration  30: 83645.376 ops/s
Iteration   1: 88579.467 ops/s
Iteration   2: 86968.977 ops/s
Iteration   3: 82122.231 ops/s
Iteration   4: 85399.868 ops/s
Iteration   5: 87552.796 ops/s
Iteration   6: 84355.178 ops/s
Iteration   7: 83998.020 ops/s
Iteration   8: 86865.123 ops/s
Iteration   9: 84575.865 ops/s
Iteration  10: 87526.183 ops/s
Iteration  11: 82720.538 ops/s
Iteration  12: 86421.048 ops/s
Iteration  13: 88417.613 ops/s
Iteration  14: 84280.800 ops/s
Iteration  15: 80448.630 ops/s
Iteration  16: 89573.664 ops/s
Iteration  17: 86693.304 ops/s
Iteration  18: 83454.582 ops/s
Iteration  19: 87097.884 ops/s
Iteration  20: 83700.121 ops/s
Iteration  21: 86911.440 ops/s
Iteration  22: 85492.000 ops/s
Iteration  23: 84381.499 ops/s
Iteration  24: 89367.015 ops/s
Iteration  25: 83866.200 ops/s
Iteration  26: 86443.555 ops/s
Iteration  27: 88101.919 ops/s
Iteration  28: 83147.897 ops/s
Iteration  29: 87191.574 ops/s
Iteration  30: 87313.389 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_486._Benchmark.benchmark_Cluster_486":
  85765.613 ±(99.9%) 1508.508 ops/s [Average]
  (min, avg, max) = (80448.630, 85765.613, 89573.664), stdev = 2257.863
  CI (99.9%): [84257.105, 87274.120] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_486._Benchmark.benchmark_Cluster_486  thrpt   30  85765.613 ± 1508.508  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_487._Benchmark.benchmark_Cluster_487$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_487._Benchmark.benchmark_Cluster_487

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2599.608 ops/s
# Warmup Iteration   2: 23578.656 ops/s
# Warmup Iteration   3: 33824.009 ops/s
# Warmup Iteration   4: 31913.683 ops/s
# Warmup Iteration   5: 37509.670 ops/s
# Warmup Iteration   6: 71391.005 ops/s
# Warmup Iteration   7: 90101.296 ops/s
# Warmup Iteration   8: 88097.425 ops/s
# Warmup Iteration   9: 80631.964 ops/s
# Warmup Iteration  10: 89627.782 ops/s
# Warmup Iteration  11: 91971.691 ops/s
# Warmup Iteration  12: 92104.201 ops/s
# Warmup Iteration  13: 89736.194 ops/s
# Warmup Iteration  14: 93052.334 ops/s
# Warmup Iteration  15: 89697.080 ops/s
# Warmup Iteration  16: 94504.434 ops/s
# Warmup Iteration  17: 92496.889 ops/s
# Warmup Iteration  18: 92246.097 ops/s
# Warmup Iteration  19: 92836.777 ops/s
# Warmup Iteration  20: 95956.298 ops/s
# Warmup Iteration  21: 93930.156 ops/s
# Warmup Iteration  22: 92337.224 ops/s
# Warmup Iteration  23: 93167.449 ops/s
# Warmup Iteration  24: 94375.229 ops/s
# Warmup Iteration  25: 96695.129 ops/s
# Warmup Iteration  26: 92719.134 ops/s
# Warmup Iteration  27: 92135.891 ops/s
# Warmup Iteration  28: 95119.023 ops/s
# Warmup Iteration  29: 91768.763 ops/s
# Warmup Iteration  30: 91562.714 ops/s
Iteration   1: 97292.300 ops/s
Iteration   2: 92616.716 ops/s
Iteration   3: 91462.193 ops/s
Iteration   4: 94409.377 ops/s
Iteration   5: 91621.907 ops/s
Iteration   6: 93259.053 ops/s
Iteration   7: 95888.042 ops/s
Iteration   8: 90432.284 ops/s
Iteration   9: 93434.951 ops/s
Iteration  10: 98493.887 ops/s
Iteration  11: 89632.530 ops/s
Iteration  12: 98232.382 ops/s
Iteration  13: 93845.480 ops/s
Iteration  14: 91611.373 ops/s
Iteration  15: 93060.877 ops/s
Iteration  16: 95937.969 ops/s
Iteration  17: 90492.860 ops/s
Iteration  18: 94256.626 ops/s
Iteration  19: 95074.895 ops/s
Iteration  20: 93597.057 ops/s
Iteration  21: 96479.901 ops/s
Iteration  22: 89771.598 ops/s
Iteration  23: 99211.112 ops/s
Iteration  24: 91523.995 ops/s
Iteration  25: 93866.227 ops/s
Iteration  26: 77413.889 ops/s
Iteration  27: 92043.201 ops/s
Iteration  28: 94059.765 ops/s
Iteration  29: 92333.898 ops/s
Iteration  30: 95091.237 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_487._Benchmark.benchmark_Cluster_487":
  93214.919 ±(99.9%) 2617.612 ops/s [Average]
  (min, avg, max) = (77413.889, 93214.919, 99211.112), stdev = 3917.919
  CI (99.9%): [90597.307, 95832.532] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_487._Benchmark.benchmark_Cluster_487  thrpt   30  93214.919 ± 2617.612  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_488._Benchmark.benchmark_Cluster_488$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_488._Benchmark.benchmark_Cluster_488

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.743 ops/s
# Warmup Iteration   2: 1691.638 ops/s
# Warmup Iteration   3: 16590.849 ops/s
# Warmup Iteration   4: 24615.091 ops/s
# Warmup Iteration   5: 24888.649 ops/s
# Warmup Iteration   6: 25619.838 ops/s
# Warmup Iteration   7: 25871.909 ops/s
# Warmup Iteration   8: 46854.893 ops/s
# Warmup Iteration   9: 40163.887 ops/s
# Warmup Iteration  10: 34802.244 ops/s
# Warmup Iteration  11: 41573.290 ops/s
# Warmup Iteration  12: 99175.219 ops/s
# Warmup Iteration  13: 93263.585 ops/s
# Warmup Iteration  14: 99869.450 ops/s
# Warmup Iteration  15: 99533.256 ops/s
# Warmup Iteration  16: 99005.855 ops/s
# Warmup Iteration  17: 94760.320 ops/s
# Warmup Iteration  18: 100358.441 ops/s
# Warmup Iteration  19: 100604.884 ops/s
# Warmup Iteration  20: 94275.295 ops/s
# Warmup Iteration  21: 97822.696 ops/s
# Warmup Iteration  22: 94938.614 ops/s
# Warmup Iteration  23: 99580.625 ops/s
# Warmup Iteration  24: 92658.778 ops/s
# Warmup Iteration  25: 96240.725 ops/s
# Warmup Iteration  26: 99542.566 ops/s
# Warmup Iteration  27: 92798.167 ops/s
# Warmup Iteration  28: 95465.564 ops/s
# Warmup Iteration  29: 99148.578 ops/s
# Warmup Iteration  30: 93385.221 ops/s
Iteration   1: 99035.649 ops/s
Iteration   2: 93557.988 ops/s
Iteration   3: 98321.098 ops/s
Iteration   4: 100064.644 ops/s
Iteration   5: 99532.255 ops/s
Iteration   6: 93672.757 ops/s
Iteration   7: 100511.771 ops/s
Iteration   8: 94275.363 ops/s
Iteration   9: 94284.165 ops/s
Iteration  10: 99648.767 ops/s
Iteration  11: 93824.528 ops/s
Iteration  12: 97266.299 ops/s
Iteration  13: 96226.111 ops/s
Iteration  14: 92524.076 ops/s
Iteration  15: 95242.286 ops/s
Iteration  16: 97186.596 ops/s
Iteration  17: 97283.720 ops/s
Iteration  18: 94198.060 ops/s
Iteration  19: 95225.811 ops/s
Iteration  20: 99047.908 ops/s
Iteration  21: 94210.144 ops/s
Iteration  22: 98249.993 ops/s
Iteration  23: 97946.655 ops/s
Iteration  24: 94930.377 ops/s
Iteration  25: 97556.147 ops/s
Iteration  26: 96763.565 ops/s
Iteration  27: 100351.947 ops/s
Iteration  28: 96800.385 ops/s
Iteration  29: 98369.387 ops/s
Iteration  30: 93826.073 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_488._Benchmark.benchmark_Cluster_488":
  96664.484 ±(99.9%) 1582.416 ops/s [Average]
  (min, avg, max) = (92524.076, 96664.484, 100511.771), stdev = 2368.485
  CI (99.9%): [95082.068, 98246.900] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_488._Benchmark.benchmark_Cluster_488  thrpt   30  96664.484 ± 1582.416  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_489._Benchmark.benchmark_Cluster_489$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_489._Benchmark.benchmark_Cluster_489

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17672.973 ops/s
# Warmup Iteration   2: 80057.922 ops/s
# Warmup Iteration   3: 130185.695 ops/s
# Warmup Iteration   4: 130112.315 ops/s
# Warmup Iteration   5: 138062.074 ops/s
# Warmup Iteration   6: 132253.766 ops/s
# Warmup Iteration   7: 130660.177 ops/s
# Warmup Iteration   8: 133252.224 ops/s
# Warmup Iteration   9: 135053.384 ops/s
# Warmup Iteration  10: 129589.034 ops/s
# Warmup Iteration  11: 129909.597 ops/s
# Warmup Iteration  12: 135221.266 ops/s
# Warmup Iteration  13: 130014.464 ops/s
# Warmup Iteration  14: 137720.110 ops/s
# Warmup Iteration  15: 132147.440 ops/s
# Warmup Iteration  16: 129878.193 ops/s
# Warmup Iteration  17: 142909.473 ops/s
# Warmup Iteration  18: 135445.234 ops/s
# Warmup Iteration  19: 140245.731 ops/s
# Warmup Iteration  20: 136428.792 ops/s
# Warmup Iteration  21: 142315.902 ops/s
# Warmup Iteration  22: 139925.802 ops/s
# Warmup Iteration  23: 140310.154 ops/s
# Warmup Iteration  24: 142069.611 ops/s
# Warmup Iteration  25: 143953.174 ops/s
# Warmup Iteration  26: 134754.503 ops/s
# Warmup Iteration  27: 144132.005 ops/s
# Warmup Iteration  28: 138528.805 ops/s
# Warmup Iteration  29: 137466.673 ops/s
# Warmup Iteration  30: 147977.905 ops/s
Iteration   1: 144637.266 ops/s
Iteration   2: 139264.426 ops/s
Iteration   3: 144234.395 ops/s
Iteration   4: 137317.505 ops/s
Iteration   5: 141482.559 ops/s
Iteration   6: 138817.617 ops/s
Iteration   7: 145119.424 ops/s
Iteration   8: 139451.901 ops/s
Iteration   9: 137264.742 ops/s
Iteration  10: 142584.588 ops/s
Iteration  11: 134327.894 ops/s
Iteration  12: 139334.088 ops/s
Iteration  13: 146999.433 ops/s
Iteration  14: 136509.498 ops/s
Iteration  15: 141201.969 ops/s
Iteration  16: 139725.375 ops/s
Iteration  17: 141165.247 ops/s
Iteration  18: 138413.255 ops/s
Iteration  19: 114414.498 ops/s
Iteration  20: 137366.509 ops/s
Iteration  21: 144392.330 ops/s
Iteration  22: 144940.820 ops/s
Iteration  23: 133010.726 ops/s
Iteration  24: 136166.056 ops/s
Iteration  25: 145129.583 ops/s
Iteration  26: 139224.906 ops/s
Iteration  27: 142814.553 ops/s
Iteration  28: 140292.354 ops/s
Iteration  29: 138263.394 ops/s
Iteration  30: 143773.420 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_489._Benchmark.benchmark_Cluster_489":
  139588.011 ±(99.9%) 3936.053 ops/s [Average]
  (min, avg, max) = (114414.498, 139588.011, 146999.433), stdev = 5891.300
  CI (99.9%): [135651.958, 143524.064] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_489._Benchmark.benchmark_Cluster_489  thrpt   30  139588.011 ± 3936.053  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_49._Benchmark.benchmark_Cluster_49$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_49._Benchmark.benchmark_Cluster_49

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11735.262 ops/s
# Warmup Iteration   2: 82493.018 ops/s
# Warmup Iteration   3: 96450.556 ops/s
# Warmup Iteration   4: 103376.873 ops/s
# Warmup Iteration   5: 107717.260 ops/s
# Warmup Iteration   6: 99804.464 ops/s
# Warmup Iteration   7: 101818.660 ops/s
# Warmup Iteration   8: 107938.463 ops/s
# Warmup Iteration   9: 101766.895 ops/s
# Warmup Iteration  10: 97852.177 ops/s
# Warmup Iteration  11: 101803.091 ops/s
# Warmup Iteration  12: 105111.760 ops/s
# Warmup Iteration  13: 105854.201 ops/s
# Warmup Iteration  14: 102942.422 ops/s
# Warmup Iteration  15: 106893.088 ops/s
# Warmup Iteration  16: 106075.877 ops/s
# Warmup Iteration  17: 106630.677 ops/s
# Warmup Iteration  18: 106120.918 ops/s
# Warmup Iteration  19: 106563.646 ops/s
# Warmup Iteration  20: 103523.857 ops/s
# Warmup Iteration  21: 112627.163 ops/s
# Warmup Iteration  22: 107837.695 ops/s
# Warmup Iteration  23: 105317.531 ops/s
# Warmup Iteration  24: 110478.806 ops/s
# Warmup Iteration  25: 112608.602 ops/s
# Warmup Iteration  26: 105281.754 ops/s
# Warmup Iteration  27: 106307.122 ops/s
# Warmup Iteration  28: 112538.275 ops/s
# Warmup Iteration  29: 105924.559 ops/s
# Warmup Iteration  30: 111149.290 ops/s
Iteration   1: 105027.690 ops/s
Iteration   2: 105354.813 ops/s
Iteration   3: 110973.584 ops/s
Iteration   4: 104941.354 ops/s
Iteration   5: 108302.795 ops/s
Iteration   6: 109491.216 ops/s
Iteration   7: 102407.516 ops/s
Iteration   8: 106693.011 ops/s
Iteration   9: 112942.901 ops/s
Iteration  10: 106005.607 ops/s
Iteration  11: 109143.191 ops/s
Iteration  12: 106627.586 ops/s
Iteration  13: 110682.999 ops/s
Iteration  14: 106092.610 ops/s
Iteration  15: 110669.783 ops/s
Iteration  16: 109484.524 ops/s
Iteration  17: 106454.796 ops/s
Iteration  18: 108504.463 ops/s
Iteration  19: 104051.005 ops/s
Iteration  20: 109875.505 ops/s
Iteration  21: 107376.941 ops/s
Iteration  22: 105991.830 ops/s
Iteration  23: 108794.892 ops/s
Iteration  24: 107697.851 ops/s
Iteration  25: 108025.942 ops/s
Iteration  26: 108898.020 ops/s
Iteration  27: 109987.742 ops/s
Iteration  28: 102915.952 ops/s
Iteration  29: 107355.087 ops/s
Iteration  30: 112714.199 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_49._Benchmark.benchmark_Cluster_49":
  107782.847 ±(99.9%) 1753.788 ops/s [Average]
  (min, avg, max) = (102407.516, 107782.847, 112942.901), stdev = 2624.987
  CI (99.9%): [106029.059, 109536.634] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_49._Benchmark.benchmark_Cluster_49  thrpt   30  107782.847 ± 1753.788  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_490._Benchmark.benchmark_Cluster_490$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_490._Benchmark.benchmark_Cluster_490

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14825.446 ops/s
# Warmup Iteration   2: 46879.340 ops/s
# Warmup Iteration   3: 102272.926 ops/s
# Warmup Iteration   4: 135138.482 ops/s
# Warmup Iteration   5: 139803.664 ops/s
# Warmup Iteration   6: 132466.649 ops/s
# Warmup Iteration   7: 135998.905 ops/s
# Warmup Iteration   8: 135055.289 ops/s
# Warmup Iteration   9: 132413.040 ops/s
# Warmup Iteration  10: 136139.584 ops/s
# Warmup Iteration  11: 129615.360 ops/s
# Warmup Iteration  12: 138143.937 ops/s
# Warmup Iteration  13: 128823.804 ops/s
# Warmup Iteration  14: 137897.196 ops/s
# Warmup Iteration  15: 136122.152 ops/s
# Warmup Iteration  16: 132177.522 ops/s
# Warmup Iteration  17: 140907.191 ops/s
# Warmup Iteration  18: 139402.103 ops/s
# Warmup Iteration  19: 138054.836 ops/s
# Warmup Iteration  20: 138876.590 ops/s
# Warmup Iteration  21: 136450.487 ops/s
# Warmup Iteration  22: 135973.933 ops/s
# Warmup Iteration  23: 138937.648 ops/s
# Warmup Iteration  24: 138338.756 ops/s
# Warmup Iteration  25: 144510.315 ops/s
# Warmup Iteration  26: 141548.996 ops/s
# Warmup Iteration  27: 138438.007 ops/s
# Warmup Iteration  28: 137976.345 ops/s
# Warmup Iteration  29: 133598.101 ops/s
# Warmup Iteration  30: 142889.377 ops/s
Iteration   1: 140442.162 ops/s
Iteration   2: 135654.477 ops/s
Iteration   3: 143824.727 ops/s
Iteration   4: 140073.759 ops/s
Iteration   5: 135571.218 ops/s
Iteration   6: 146257.461 ops/s
Iteration   7: 131592.126 ops/s
Iteration   8: 141473.293 ops/s
Iteration   9: 138098.011 ops/s
Iteration  10: 138726.501 ops/s
Iteration  11: 142902.042 ops/s
Iteration  12: 138307.335 ops/s
Iteration  13: 141753.966 ops/s
Iteration  14: 109149.971 ops/s
Iteration  15: 137124.334 ops/s
Iteration  16: 138811.930 ops/s
Iteration  17: 137446.728 ops/s
Iteration  18: 137841.206 ops/s
Iteration  19: 142551.854 ops/s
Iteration  20: 137919.473 ops/s
Iteration  21: 142084.410 ops/s
Iteration  22: 137542.961 ops/s
Iteration  23: 141471.189 ops/s
Iteration  24: 135554.412 ops/s
Iteration  25: 139835.572 ops/s
Iteration  26: 146358.839 ops/s
Iteration  27: 135761.409 ops/s
Iteration  28: 142618.659 ops/s
Iteration  29: 138499.053 ops/s
Iteration  30: 143663.928 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_490._Benchmark.benchmark_Cluster_490":
  138630.434 ±(99.9%) 4342.954 ops/s [Average]
  (min, avg, max) = (109149.971, 138630.434, 146358.839), stdev = 6500.330
  CI (99.9%): [134287.480, 142973.388] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_490._Benchmark.benchmark_Cluster_490  thrpt   30  138630.434 ± 4342.954  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_491._Benchmark.benchmark_Cluster_491$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_491._Benchmark.benchmark_Cluster_491

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17545.141 ops/s
# Warmup Iteration   2: 46567.877 ops/s
# Warmup Iteration   3: 84132.068 ops/s
# Warmup Iteration   4: 153872.999 ops/s
# Warmup Iteration   5: 144801.252 ops/s
# Warmup Iteration   6: 144635.988 ops/s
# Warmup Iteration   7: 152815.282 ops/s
# Warmup Iteration   8: 157869.890 ops/s
# Warmup Iteration   9: 152080.614 ops/s
# Warmup Iteration  10: 156383.553 ops/s
# Warmup Iteration  11: 146609.576 ops/s
# Warmup Iteration  12: 163923.510 ops/s
# Warmup Iteration  13: 153373.342 ops/s
# Warmup Iteration  14: 156664.178 ops/s
# Warmup Iteration  15: 153080.205 ops/s
# Warmup Iteration  16: 160001.634 ops/s
# Warmup Iteration  17: 158891.586 ops/s
# Warmup Iteration  18: 163706.641 ops/s
# Warmup Iteration  19: 161670.698 ops/s
# Warmup Iteration  20: 156321.498 ops/s
# Warmup Iteration  21: 163806.246 ops/s
# Warmup Iteration  22: 153692.645 ops/s
# Warmup Iteration  23: 160606.549 ops/s
# Warmup Iteration  24: 168114.592 ops/s
# Warmup Iteration  25: 158608.695 ops/s
# Warmup Iteration  26: 156812.314 ops/s
# Warmup Iteration  27: 168252.252 ops/s
# Warmup Iteration  28: 158155.850 ops/s
# Warmup Iteration  29: 164042.749 ops/s
# Warmup Iteration  30: 162051.186 ops/s
Iteration   1: 159208.765 ops/s
Iteration   2: 163987.761 ops/s
Iteration   3: 161265.674 ops/s
Iteration   4: 153833.909 ops/s
Iteration   5: 150960.357 ops/s
Iteration   6: 161259.865 ops/s
Iteration   7: 159614.699 ops/s
Iteration   8: 155163.186 ops/s
Iteration   9: 164741.819 ops/s
Iteration  10: 160431.245 ops/s
Iteration  11: 164699.876 ops/s
Iteration  12: 159909.093 ops/s
Iteration  13: 163356.261 ops/s
Iteration  14: 158864.815 ops/s
Iteration  15: 159675.186 ops/s
Iteration  16: 164860.949 ops/s
Iteration  17: 157433.921 ops/s
Iteration  18: 168162.529 ops/s
Iteration  19: 167747.934 ops/s
Iteration  20: 155632.389 ops/s
Iteration  21: 164625.239 ops/s
Iteration  22: 157739.884 ops/s
Iteration  23: 167452.389 ops/s
Iteration  24: 166110.847 ops/s
Iteration  25: 158262.841 ops/s
Iteration  26: 163762.087 ops/s
Iteration  27: 158325.952 ops/s
Iteration  28: 159646.381 ops/s
Iteration  29: 162322.640 ops/s
Iteration  30: 159263.558 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_491._Benchmark.benchmark_Cluster_491":
  160944.068 ±(99.9%) 2815.627 ops/s [Average]
  (min, avg, max) = (150960.357, 160944.068, 168162.529), stdev = 4214.299
  CI (99.9%): [158128.441, 163759.696] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_491._Benchmark.benchmark_Cluster_491  thrpt   30  160944.068 ± 2815.627  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_492._Benchmark.benchmark_Cluster_492$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_492._Benchmark.benchmark_Cluster_492

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7052.598 ops/s
# Warmup Iteration   2: 25112.074 ops/s
# Warmup Iteration   3: 71856.365 ops/s
# Warmup Iteration   4: 102303.329 ops/s
# Warmup Iteration   5: 97254.411 ops/s
# Warmup Iteration   6: 111982.376 ops/s
# Warmup Iteration   7: 109529.592 ops/s
# Warmup Iteration   8: 113329.504 ops/s
# Warmup Iteration   9: 111526.608 ops/s
# Warmup Iteration  10: 109359.390 ops/s
# Warmup Iteration  11: 112660.264 ops/s
# Warmup Iteration  12: 114155.461 ops/s
# Warmup Iteration  13: 103102.020 ops/s
# Warmup Iteration  14: 113156.611 ops/s
# Warmup Iteration  15: 105558.984 ops/s
# Warmup Iteration  16: 110514.038 ops/s
# Warmup Iteration  17: 122163.785 ops/s
# Warmup Iteration  18: 117822.118 ops/s
# Warmup Iteration  19: 119326.515 ops/s
# Warmup Iteration  20: 115826.818 ops/s
# Warmup Iteration  21: 119823.546 ops/s
# Warmup Iteration  22: 117986.660 ops/s
# Warmup Iteration  23: 116167.562 ops/s
# Warmup Iteration  24: 115687.957 ops/s
# Warmup Iteration  25: 116416.277 ops/s
# Warmup Iteration  26: 118886.555 ops/s
# Warmup Iteration  27: 120015.690 ops/s
# Warmup Iteration  28: 115236.138 ops/s
# Warmup Iteration  29: 119300.293 ops/s
# Warmup Iteration  30: 117013.764 ops/s
Iteration   1: 120377.469 ops/s
Iteration   2: 123542.918 ops/s
Iteration   3: 113679.219 ops/s
Iteration   4: 122056.822 ops/s
Iteration   5: 115376.487 ops/s
Iteration   6: 118497.060 ops/s
Iteration   7: 124107.575 ops/s
Iteration   8: 113292.467 ops/s
Iteration   9: 88798.357 ops/s
Iteration  10: 114121.778 ops/s
Iteration  11: 119043.403 ops/s
Iteration  12: 113285.025 ops/s
Iteration  13: 116081.348 ops/s
Iteration  14: 118233.925 ops/s
Iteration  15: 117677.669 ops/s
Iteration  16: 122707.311 ops/s
Iteration  17: 117296.164 ops/s
Iteration  18: 117112.458 ops/s
Iteration  19: 119830.272 ops/s
Iteration  20: 117094.150 ops/s
Iteration  21: 122294.768 ops/s
Iteration  22: 116181.301 ops/s
Iteration  23: 119437.248 ops/s
Iteration  24: 114944.535 ops/s
Iteration  25: 118819.490 ops/s
Iteration  26: 122346.129 ops/s
Iteration  27: 115768.908 ops/s
Iteration  28: 115162.857 ops/s
Iteration  29: 122641.715 ops/s
Iteration  30: 123351.234 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_492._Benchmark.benchmark_Cluster_492":
  117438.669 ±(99.9%) 4238.456 ops/s [Average]
  (min, avg, max) = (88798.357, 117438.669, 124107.575), stdev = 6343.922
  CI (99.9%): [113200.212, 121677.125] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_492._Benchmark.benchmark_Cluster_492  thrpt   30  117438.669 ± 4238.456  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_493._Benchmark.benchmark_Cluster_493$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_493._Benchmark.benchmark_Cluster_493

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7655.732 ops/s
# Warmup Iteration   2: 34201.199 ops/s
# Warmup Iteration   3: 134001.810 ops/s
# Warmup Iteration   4: 114062.045 ops/s
# Warmup Iteration   5: 149187.996 ops/s
# Warmup Iteration   6: 140154.183 ops/s
# Warmup Iteration   7: 144671.776 ops/s
# Warmup Iteration   8: 149810.061 ops/s
# Warmup Iteration   9: 143214.582 ops/s
# Warmup Iteration  10: 154402.668 ops/s
# Warmup Iteration  11: 151487.257 ops/s
# Warmup Iteration  12: 146495.241 ops/s
# Warmup Iteration  13: 145183.379 ops/s
# Warmup Iteration  14: 157616.761 ops/s
# Warmup Iteration  15: 148925.878 ops/s
# Warmup Iteration  16: 156351.600 ops/s
# Warmup Iteration  17: 155132.059 ops/s
# Warmup Iteration  18: 167859.883 ops/s
# Warmup Iteration  19: 164461.449 ops/s
# Warmup Iteration  20: 155096.671 ops/s
# Warmup Iteration  21: 164285.748 ops/s
# Warmup Iteration  22: 152923.851 ops/s
# Warmup Iteration  23: 159800.256 ops/s
# Warmup Iteration  24: 158105.703 ops/s
# Warmup Iteration  25: 156502.309 ops/s
# Warmup Iteration  26: 162464.586 ops/s
# Warmup Iteration  27: 158672.780 ops/s
# Warmup Iteration  28: 163160.095 ops/s
# Warmup Iteration  29: 160532.664 ops/s
# Warmup Iteration  30: 158493.416 ops/s
Iteration   1: 161237.781 ops/s
Iteration   2: 156671.435 ops/s
Iteration   3: 164142.358 ops/s
Iteration   4: 158400.354 ops/s
Iteration   5: 154686.960 ops/s
Iteration   6: 158450.562 ops/s
Iteration   7: 159850.729 ops/s
Iteration   8: 155542.182 ops/s
Iteration   9: 160026.678 ops/s
Iteration  10: 156256.771 ops/s
Iteration  11: 165144.883 ops/s
Iteration  12: 156670.938 ops/s
Iteration  13: 160457.132 ops/s
Iteration  14: 157786.628 ops/s
Iteration  15: 158881.544 ops/s
Iteration  16: 156074.820 ops/s
Iteration  17: 167746.350 ops/s
Iteration  18: 157506.938 ops/s
Iteration  19: 159493.671 ops/s
Iteration  20: 164447.300 ops/s
Iteration  21: 158856.529 ops/s
Iteration  22: 163310.144 ops/s
Iteration  23: 156283.795 ops/s
Iteration  24: 159072.653 ops/s
Iteration  25: 166032.471 ops/s
Iteration  26: 150222.682 ops/s
Iteration  27: 162261.856 ops/s
Iteration  28: 156797.772 ops/s
Iteration  29: 163659.174 ops/s
Iteration  30: 161769.079 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_493._Benchmark.benchmark_Cluster_493":
  159591.406 ±(99.9%) 2567.413 ops/s [Average]
  (min, avg, max) = (150222.682, 159591.406, 167746.350), stdev = 3842.783
  CI (99.9%): [157023.993, 162158.818] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_493._Benchmark.benchmark_Cluster_493  thrpt   30  159591.406 ± 2567.413  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_494._Benchmark.benchmark_Cluster_494$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_494._Benchmark.benchmark_Cluster_494

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17731.747 ops/s
# Warmup Iteration   2: 46796.370 ops/s
# Warmup Iteration   3: 97239.608 ops/s
# Warmup Iteration   4: 140516.681 ops/s
# Warmup Iteration   5: 166533.067 ops/s
# Warmup Iteration   6: 158855.729 ops/s
# Warmup Iteration   7: 161768.869 ops/s
# Warmup Iteration   8: 162104.845 ops/s
# Warmup Iteration   9: 162935.793 ops/s
# Warmup Iteration  10: 164512.387 ops/s
# Warmup Iteration  11: 162496.620 ops/s
# Warmup Iteration  12: 167978.151 ops/s
# Warmup Iteration  13: 152646.874 ops/s
# Warmup Iteration  14: 150959.789 ops/s
# Warmup Iteration  15: 156034.664 ops/s
# Warmup Iteration  16: 162112.877 ops/s
# Warmup Iteration  17: 170016.052 ops/s
# Warmup Iteration  18: 162560.702 ops/s
# Warmup Iteration  19: 168794.309 ops/s
# Warmup Iteration  20: 165433.748 ops/s
# Warmup Iteration  21: 160993.698 ops/s
# Warmup Iteration  22: 172906.149 ops/s
# Warmup Iteration  23: 162839.985 ops/s
# Warmup Iteration  24: 167808.128 ops/s
# Warmup Iteration  25: 161452.839 ops/s
# Warmup Iteration  26: 165880.891 ops/s
# Warmup Iteration  27: 170226.046 ops/s
# Warmup Iteration  28: 176761.829 ops/s
# Warmup Iteration  29: 157682.399 ops/s
# Warmup Iteration  30: 170996.675 ops/s
Iteration   1: 161631.684 ops/s
Iteration   2: 153999.554 ops/s
Iteration   3: 134021.096 ops/s
Iteration   4: 160764.448 ops/s
Iteration   5: 167675.505 ops/s
Iteration   6: 159644.340 ops/s
Iteration   7: 168114.911 ops/s
Iteration   8: 166180.842 ops/s
Iteration   9: 162053.406 ops/s
Iteration  10: 167255.631 ops/s
Iteration  11: 167195.042 ops/s
Iteration  12: 169044.501 ops/s
Iteration  13: 158932.596 ops/s
Iteration  14: 164301.838 ops/s
Iteration  15: 161621.383 ops/s
Iteration  16: 162110.734 ops/s
Iteration  17: 162099.851 ops/s
Iteration  18: 168531.037 ops/s
Iteration  19: 167470.524 ops/s
Iteration  20: 163271.235 ops/s
Iteration  21: 172500.214 ops/s
Iteration  22: 161573.523 ops/s
Iteration  23: 167219.074 ops/s
Iteration  24: 163897.211 ops/s
Iteration  25: 160310.329 ops/s
Iteration  26: 171479.368 ops/s
Iteration  27: 162883.692 ops/s
Iteration  28: 168960.003 ops/s
Iteration  29: 158311.085 ops/s
Iteration  30: 164092.139 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_494._Benchmark.benchmark_Cluster_494":
  163238.226 ±(99.9%) 4624.877 ops/s [Average]
  (min, avg, max) = (134021.096, 163238.226, 172500.214), stdev = 6922.298
  CI (99.9%): [158613.350, 167863.103] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_494._Benchmark.benchmark_Cluster_494  thrpt   30  163238.226 ± 4624.877  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_495._Benchmark.benchmark_Cluster_495$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_495._Benchmark.benchmark_Cluster_495

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5152.721 ops/s
# Warmup Iteration   2: 33734.657 ops/s
# Warmup Iteration   3: 57315.852 ops/s
# Warmup Iteration   4: 94491.401 ops/s
# Warmup Iteration   5: 132450.254 ops/s
# Warmup Iteration   6: 133187.108 ops/s
# Warmup Iteration   7: 136418.575 ops/s
# Warmup Iteration   8: 124248.127 ops/s
# Warmup Iteration   9: 133473.294 ops/s
# Warmup Iteration  10: 126340.985 ops/s
# Warmup Iteration  11: 138475.775 ops/s
# Warmup Iteration  12: 137567.967 ops/s
# Warmup Iteration  13: 132725.712 ops/s
# Warmup Iteration  14: 140510.615 ops/s
# Warmup Iteration  15: 133667.245 ops/s
# Warmup Iteration  16: 135505.845 ops/s
# Warmup Iteration  17: 139152.844 ops/s
# Warmup Iteration  18: 137290.592 ops/s
# Warmup Iteration  19: 144091.040 ops/s
# Warmup Iteration  20: 139147.413 ops/s
# Warmup Iteration  21: 138877.932 ops/s
# Warmup Iteration  22: 139821.871 ops/s
# Warmup Iteration  23: 137711.467 ops/s
# Warmup Iteration  24: 142537.054 ops/s
# Warmup Iteration  25: 136158.894 ops/s
# Warmup Iteration  26: 139582.541 ops/s
# Warmup Iteration  27: 139696.685 ops/s
# Warmup Iteration  28: 138458.625 ops/s
# Warmup Iteration  29: 139814.336 ops/s
# Warmup Iteration  30: 141423.779 ops/s
Iteration   1: 135643.337 ops/s
Iteration   2: 143146.466 ops/s
Iteration   3: 131239.450 ops/s
Iteration   4: 142654.988 ops/s
Iteration   5: 137055.001 ops/s
Iteration   6: 141165.904 ops/s
Iteration   7: 141319.270 ops/s
Iteration   8: 137916.643 ops/s
Iteration   9: 140746.393 ops/s
Iteration  10: 138953.609 ops/s
Iteration  11: 141165.142 ops/s
Iteration  12: 137006.110 ops/s
Iteration  13: 139108.929 ops/s
Iteration  14: 140342.122 ops/s
Iteration  15: 133847.459 ops/s
Iteration  16: 141117.122 ops/s
Iteration  17: 141341.413 ops/s
Iteration  18: 136570.441 ops/s
Iteration  19: 143907.903 ops/s
Iteration  20: 143498.983 ops/s
Iteration  21: 138889.750 ops/s
Iteration  22: 138921.122 ops/s
Iteration  23: 140511.243 ops/s
Iteration  24: 136412.917 ops/s
Iteration  25: 147004.017 ops/s
Iteration  26: 135815.709 ops/s
Iteration  27: 142523.486 ops/s
Iteration  28: 136449.857 ops/s
Iteration  29: 135184.666 ops/s
Iteration  30: 141972.844 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_495._Benchmark.benchmark_Cluster_495":
  139381.077 ±(99.9%) 2282.604 ops/s [Average]
  (min, avg, max) = (131239.450, 139381.077, 147004.017), stdev = 3416.494
  CI (99.9%): [137098.473, 141663.680] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_495._Benchmark.benchmark_Cluster_495  thrpt   30  139381.077 ± 2282.604  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_496._Benchmark.benchmark_Cluster_496$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_496._Benchmark.benchmark_Cluster_496

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14446.089 ops/s
# Warmup Iteration   2: 59339.658 ops/s
# Warmup Iteration   3: 110292.640 ops/s
# Warmup Iteration   4: 176150.526 ops/s
# Warmup Iteration   5: 178190.868 ops/s
# Warmup Iteration   6: 190107.809 ops/s
# Warmup Iteration   7: 168359.257 ops/s
# Warmup Iteration   8: 193505.818 ops/s
# Warmup Iteration   9: 196511.650 ops/s
# Warmup Iteration  10: 198616.780 ops/s
# Warmup Iteration  11: 192809.178 ops/s
# Warmup Iteration  12: 198136.700 ops/s
# Warmup Iteration  13: 199236.796 ops/s
# Warmup Iteration  14: 188634.859 ops/s
# Warmup Iteration  15: 204671.382 ops/s
# Warmup Iteration  16: 189516.982 ops/s
# Warmup Iteration  17: 206711.259 ops/s
# Warmup Iteration  18: 204633.285 ops/s
# Warmup Iteration  19: 196322.436 ops/s
# Warmup Iteration  20: 204539.589 ops/s
# Warmup Iteration  21: 200500.797 ops/s
# Warmup Iteration  22: 200666.166 ops/s
# Warmup Iteration  23: 205502.346 ops/s
# Warmup Iteration  24: 201618.423 ops/s
# Warmup Iteration  25: 193761.779 ops/s
# Warmup Iteration  26: 206083.675 ops/s
# Warmup Iteration  27: 197338.074 ops/s
# Warmup Iteration  28: 146740.845 ops/s
# Warmup Iteration  29: 204255.452 ops/s
# Warmup Iteration  30: 198960.318 ops/s
Iteration   1: 202390.472 ops/s
Iteration   2: 195244.918 ops/s
Iteration   3: 202203.705 ops/s
Iteration   4: 193587.218 ops/s
Iteration   5: 195592.363 ops/s
Iteration   6: 202405.601 ops/s
Iteration   7: 193899.477 ops/s
Iteration   8: 204651.506 ops/s
Iteration   9: 190289.804 ops/s
Iteration  10: 194564.397 ops/s
Iteration  11: 205590.194 ops/s
Iteration  12: 193685.375 ops/s
Iteration  13: 195927.925 ops/s
Iteration  14: 202682.126 ops/s
Iteration  15: 197994.535 ops/s
Iteration  16: 197652.039 ops/s
Iteration  17: 204368.740 ops/s
Iteration  18: 193507.216 ops/s
Iteration  19: 205047.340 ops/s
Iteration  20: 196057.687 ops/s
Iteration  21: 204791.099 ops/s
Iteration  22: 196704.052 ops/s
Iteration  23: 203358.667 ops/s
Iteration  24: 201757.142 ops/s
Iteration  25: 200665.187 ops/s
Iteration  26: 206779.624 ops/s
Iteration  27: 195140.071 ops/s
Iteration  28: 204218.286 ops/s
Iteration  29: 197780.521 ops/s
Iteration  30: 197826.917 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_496._Benchmark.benchmark_Cluster_496":
  199212.140 ±(99.9%) 3079.054 ops/s [Average]
  (min, avg, max) = (190289.804, 199212.140, 206779.624), stdev = 4608.583
  CI (99.9%): [196133.086, 202291.194] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_496._Benchmark.benchmark_Cluster_496  thrpt   30  199212.140 ± 3079.054  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_497._Benchmark.benchmark_Cluster_497$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_497._Benchmark.benchmark_Cluster_497

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11157.057 ops/s
# Warmup Iteration   2: 55164.246 ops/s
# Warmup Iteration   3: 85931.436 ops/s
# Warmup Iteration   4: 94223.308 ops/s
# Warmup Iteration   5: 89064.400 ops/s
# Warmup Iteration   6: 109362.457 ops/s
# Warmup Iteration   7: 103783.979 ops/s
# Warmup Iteration   8: 106941.323 ops/s
# Warmup Iteration   9: 102473.362 ops/s
# Warmup Iteration  10: 103935.637 ops/s
# Warmup Iteration  11: 106252.016 ops/s
# Warmup Iteration  12: 103253.205 ops/s
# Warmup Iteration  13: 101965.778 ops/s
# Warmup Iteration  14: 105892.471 ops/s
# Warmup Iteration  15: 104440.319 ops/s
# Warmup Iteration  16: 103942.037 ops/s
# Warmup Iteration  17: 111537.719 ops/s
# Warmup Iteration  18: 104879.338 ops/s
# Warmup Iteration  19: 111055.860 ops/s
# Warmup Iteration  20: 106365.582 ops/s
# Warmup Iteration  21: 108208.862 ops/s
# Warmup Iteration  22: 112110.346 ops/s
# Warmup Iteration  23: 105713.928 ops/s
# Warmup Iteration  24: 107910.346 ops/s
# Warmup Iteration  25: 107899.993 ops/s
# Warmup Iteration  26: 107099.444 ops/s
# Warmup Iteration  27: 111375.017 ops/s
# Warmup Iteration  28: 105967.559 ops/s
# Warmup Iteration  29: 107084.139 ops/s
# Warmup Iteration  30: 110911.449 ops/s
Iteration   1: 105767.134 ops/s
Iteration   2: 114226.516 ops/s
Iteration   3: 103757.310 ops/s
Iteration   4: 111412.410 ops/s
Iteration   5: 109414.406 ops/s
Iteration   6: 107810.086 ops/s
Iteration   7: 105873.729 ops/s
Iteration   8: 109022.070 ops/s
Iteration   9: 107428.644 ops/s
Iteration  10: 109122.193 ops/s
Iteration  11: 107461.384 ops/s
Iteration  12: 106135.540 ops/s
Iteration  13: 113389.379 ops/s
Iteration  14: 105015.706 ops/s
Iteration  15: 106762.139 ops/s
Iteration  16: 106938.766 ops/s
Iteration  17: 106433.967 ops/s
Iteration  18: 112111.421 ops/s
Iteration  19: 106923.375 ops/s
Iteration  20: 106234.111 ops/s
Iteration  21: 110883.786 ops/s
Iteration  22: 106269.951 ops/s
Iteration  23: 102416.067 ops/s
Iteration  24: 104573.689 ops/s
Iteration  25: 110828.357 ops/s
Iteration  26: 106215.781 ops/s
Iteration  27: 103555.333 ops/s
Iteration  28: 109292.533 ops/s
Iteration  29: 106763.446 ops/s
Iteration  30: 110989.118 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_497._Benchmark.benchmark_Cluster_497":
  107767.612 ±(99.9%) 1946.997 ops/s [Average]
  (min, avg, max) = (102416.067, 107767.612, 114226.516), stdev = 2914.174
  CI (99.9%): [105820.614, 109714.609] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_497._Benchmark.benchmark_Cluster_497  thrpt   30  107767.612 ± 1946.997  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_498._Benchmark.benchmark_Cluster_498$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_498._Benchmark.benchmark_Cluster_498

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1443.684 ops/s
# Warmup Iteration   2: 10183.898 ops/s
# Warmup Iteration   3: 25702.944 ops/s
# Warmup Iteration   4: 30932.328 ops/s
# Warmup Iteration   5: 44860.614 ops/s
# Warmup Iteration   6: 45036.007 ops/s
# Warmup Iteration   7: 37486.330 ops/s
# Warmup Iteration   8: 100556.807 ops/s
# Warmup Iteration   9: 92616.726 ops/s
# Warmup Iteration  10: 99228.852 ops/s
# Warmup Iteration  11: 94980.427 ops/s
# Warmup Iteration  12: 98302.607 ops/s
# Warmup Iteration  13: 92934.282 ops/s
# Warmup Iteration  14: 94444.462 ops/s
# Warmup Iteration  15: 103185.415 ops/s
# Warmup Iteration  16: 96912.441 ops/s
# Warmup Iteration  17: 100003.674 ops/s
# Warmup Iteration  18: 95858.568 ops/s
# Warmup Iteration  19: 103926.000 ops/s
# Warmup Iteration  20: 103940.673 ops/s
# Warmup Iteration  21: 87193.385 ops/s
# Warmup Iteration  22: 95817.584 ops/s
# Warmup Iteration  23: 96800.015 ops/s
# Warmup Iteration  24: 98540.534 ops/s
# Warmup Iteration  25: 97756.912 ops/s
# Warmup Iteration  26: 94214.667 ops/s
# Warmup Iteration  27: 100723.069 ops/s
# Warmup Iteration  28: 98058.447 ops/s
# Warmup Iteration  29: 103984.104 ops/s
# Warmup Iteration  30: 103987.556 ops/s
Iteration   1: 97670.519 ops/s
Iteration   2: 101995.462 ops/s
Iteration   3: 93883.929 ops/s
Iteration   4: 99681.041 ops/s
Iteration   5: 103766.883 ops/s
Iteration   6: 97930.798 ops/s
Iteration   7: 103589.271 ops/s
Iteration   8: 98030.229 ops/s
Iteration   9: 104538.752 ops/s
Iteration  10: 103876.575 ops/s
Iteration  11: 96790.905 ops/s
Iteration  12: 106839.202 ops/s
Iteration  13: 102519.230 ops/s
Iteration  14: 96162.372 ops/s
Iteration  15: 101843.043 ops/s
Iteration  16: 99531.414 ops/s
Iteration  17: 96888.211 ops/s
Iteration  18: 102805.172 ops/s
Iteration  19: 96735.775 ops/s
Iteration  20: 104689.758 ops/s
Iteration  21: 98038.388 ops/s
Iteration  22: 102379.099 ops/s
Iteration  23: 101036.397 ops/s
Iteration  24: 101998.855 ops/s
Iteration  25: 101764.638 ops/s
Iteration  26: 99013.228 ops/s
Iteration  27: 101337.052 ops/s
Iteration  28: 97660.563 ops/s
Iteration  29: 103353.503 ops/s
Iteration  30: 101496.811 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_498._Benchmark.benchmark_Cluster_498":
  100594.902 ±(99.9%) 2070.585 ops/s [Average]
  (min, avg, max) = (93883.929, 100594.902, 106839.202), stdev = 3099.154
  CI (99.9%): [98524.318, 102665.487] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_498._Benchmark.benchmark_Cluster_498  thrpt   30  100594.902 ± 2070.585  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_499._Benchmark.benchmark_Cluster_499$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_499._Benchmark.benchmark_Cluster_499

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2375.772 ops/s
# Warmup Iteration   2: 16598.097 ops/s
# Warmup Iteration   3: 31465.523 ops/s
# Warmup Iteration   4: 42821.088 ops/s
# Warmup Iteration   5: 61019.812 ops/s
# Warmup Iteration   6: 88775.351 ops/s
# Warmup Iteration   7: 92453.077 ops/s
# Warmup Iteration   8: 89849.056 ops/s
# Warmup Iteration   9: 94578.625 ops/s
# Warmup Iteration  10: 90733.156 ops/s
# Warmup Iteration  11: 89238.412 ops/s
# Warmup Iteration  12: 95584.133 ops/s
# Warmup Iteration  13: 89561.883 ops/s
# Warmup Iteration  14: 94593.334 ops/s
# Warmup Iteration  15: 90060.075 ops/s
# Warmup Iteration  16: 94714.045 ops/s
# Warmup Iteration  17: 91768.761 ops/s
# Warmup Iteration  18: 97728.440 ops/s
# Warmup Iteration  19: 98850.798 ops/s
# Warmup Iteration  20: 96360.110 ops/s
# Warmup Iteration  21: 91622.025 ops/s
# Warmup Iteration  22: 94925.497 ops/s
# Warmup Iteration  23: 91175.234 ops/s
# Warmup Iteration  24: 95954.751 ops/s
# Warmup Iteration  25: 100402.137 ops/s
# Warmup Iteration  26: 93487.420 ops/s
# Warmup Iteration  27: 96113.444 ops/s
# Warmup Iteration  28: 95473.326 ops/s
# Warmup Iteration  29: 96831.707 ops/s
# Warmup Iteration  30: 98883.205 ops/s
Iteration   1: 94261.222 ops/s
Iteration   2: 94461.294 ops/s
Iteration   3: 98740.383 ops/s
Iteration   4: 92241.064 ops/s
Iteration   5: 98349.504 ops/s
Iteration   6: 95849.729 ops/s
Iteration   7: 95620.875 ops/s
Iteration   8: 94986.618 ops/s
Iteration   9: 94661.027 ops/s
Iteration  10: 92040.589 ops/s
Iteration  11: 96324.120 ops/s
Iteration  12: 97179.135 ops/s
Iteration  13: 98091.150 ops/s
Iteration  14: 96460.575 ops/s
Iteration  15: 94533.016 ops/s
Iteration  16: 98890.380 ops/s
Iteration  17: 98791.603 ops/s
Iteration  18: 95107.194 ops/s
Iteration  19: 94154.067 ops/s
Iteration  20: 100649.779 ops/s
Iteration  21: 94665.901 ops/s
Iteration  22: 99242.017 ops/s
Iteration  23: 94315.268 ops/s
Iteration  24: 99107.359 ops/s
Iteration  25: 99583.007 ops/s
Iteration  26: 92989.092 ops/s
Iteration  27: 96706.559 ops/s
Iteration  28: 97956.412 ops/s
Iteration  29: 96268.520 ops/s
Iteration  30: 100736.844 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_499._Benchmark.benchmark_Cluster_499":
  96432.143 ±(99.9%) 1614.475 ops/s [Average]
  (min, avg, max) = (92040.589, 96432.143, 100736.844), stdev = 2416.470
  CI (99.9%): [94817.669, 98046.618] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_499._Benchmark.benchmark_Cluster_499  thrpt   30  96432.143 ± 1614.475  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_5._Benchmark.benchmark_Cluster_5$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_5._Benchmark.benchmark_Cluster_5

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8651.895 ops/s
# Warmup Iteration   2: 22842.667 ops/s
# Warmup Iteration   3: 35606.549 ops/s
# Warmup Iteration   4: 37811.205 ops/s
# Warmup Iteration   5: 88855.333 ops/s
# Warmup Iteration   6: 95929.410 ops/s
# Warmup Iteration   7: 105132.199 ops/s
# Warmup Iteration   8: 108282.897 ops/s
# Warmup Iteration   9: 110128.439 ops/s
# Warmup Iteration  10: 111528.117 ops/s
# Warmup Iteration  11: 107729.024 ops/s
# Warmup Iteration  12: 106511.251 ops/s
# Warmup Iteration  13: 112254.971 ops/s
# Warmup Iteration  14: 104470.909 ops/s
# Warmup Iteration  15: 113130.260 ops/s
# Warmup Iteration  16: 91641.450 ops/s
# Warmup Iteration  17: 113469.606 ops/s
# Warmup Iteration  18: 116568.107 ops/s
# Warmup Iteration  19: 118630.606 ops/s
# Warmup Iteration  20: 115642.705 ops/s
# Warmup Iteration  21: 114855.896 ops/s
# Warmup Iteration  22: 113070.863 ops/s
# Warmup Iteration  23: 114319.387 ops/s
# Warmup Iteration  24: 113357.647 ops/s
# Warmup Iteration  25: 119583.596 ops/s
# Warmup Iteration  26: 112541.275 ops/s
# Warmup Iteration  27: 115925.330 ops/s
# Warmup Iteration  28: 116438.485 ops/s
# Warmup Iteration  29: 116989.891 ops/s
# Warmup Iteration  30: 113598.135 ops/s
Iteration   1: 112771.547 ops/s
Iteration   2: 117068.265 ops/s
Iteration   3: 113648.835 ops/s
Iteration   4: 112384.022 ops/s
Iteration   5: 114593.354 ops/s
Iteration   6: 113200.983 ops/s
Iteration   7: 117537.155 ops/s
Iteration   8: 112408.814 ops/s
Iteration   9: 116414.793 ops/s
Iteration  10: 112293.576 ops/s
Iteration  11: 116327.831 ops/s
Iteration  12: 118935.482 ops/s
Iteration  13: 110929.674 ops/s
Iteration  14: 119263.037 ops/s
Iteration  15: 116896.506 ops/s
Iteration  16: 110037.546 ops/s
Iteration  17: 117357.495 ops/s
Iteration  18: 113671.636 ops/s
Iteration  19: 116802.238 ops/s
Iteration  20: 112656.497 ops/s
Iteration  21: 119161.722 ops/s
Iteration  22: 107850.575 ops/s
Iteration  23: 110567.674 ops/s
Iteration  24: 119547.393 ops/s
Iteration  25: 111903.437 ops/s
Iteration  26: 117984.175 ops/s
Iteration  27: 113334.854 ops/s
Iteration  28: 116045.323 ops/s
Iteration  29: 119089.499 ops/s
Iteration  30: 112895.064 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_5._Benchmark.benchmark_Cluster_5":
  114785.967 ±(99.9%) 2116.282 ops/s [Average]
  (min, avg, max) = (107850.575, 114785.967, 119547.393), stdev = 3167.551
  CI (99.9%): [112669.685, 116902.248] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score      Error  Units
Cluster_5._Benchmark.benchmark_Cluster_5  thrpt   30  114785.967 ± 2116.282  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_50._Benchmark.benchmark_Cluster_50$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_50._Benchmark.benchmark_Cluster_50

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8029.690 ops/s
# Warmup Iteration   2: 28525.606 ops/s
# Warmup Iteration   3: 29082.226 ops/s
# Warmup Iteration   4: 34446.677 ops/s
# Warmup Iteration   5: 61984.599 ops/s
# Warmup Iteration   6: 127884.377 ops/s
# Warmup Iteration   7: 122870.095 ops/s
# Warmup Iteration   8: 126701.508 ops/s
# Warmup Iteration   9: 121959.198 ops/s
# Warmup Iteration  10: 120135.725 ops/s
# Warmup Iteration  11: 120643.866 ops/s
# Warmup Iteration  12: 127095.489 ops/s
# Warmup Iteration  13: 127665.661 ops/s
# Warmup Iteration  14: 129746.000 ops/s
# Warmup Iteration  15: 125229.370 ops/s
# Warmup Iteration  16: 129430.030 ops/s
# Warmup Iteration  17: 123775.352 ops/s
# Warmup Iteration  18: 129480.357 ops/s
# Warmup Iteration  19: 136790.195 ops/s
# Warmup Iteration  20: 129044.551 ops/s
# Warmup Iteration  21: 136595.078 ops/s
# Warmup Iteration  22: 135571.132 ops/s
# Warmup Iteration  23: 128158.746 ops/s
# Warmup Iteration  24: 130647.551 ops/s
# Warmup Iteration  25: 126896.032 ops/s
# Warmup Iteration  26: 136613.780 ops/s
# Warmup Iteration  27: 127999.625 ops/s
# Warmup Iteration  28: 128141.447 ops/s
# Warmup Iteration  29: 133627.526 ops/s
# Warmup Iteration  30: 119914.397 ops/s
Iteration   1: 133852.041 ops/s
Iteration   2: 130084.245 ops/s
Iteration   3: 135622.093 ops/s
Iteration   4: 127610.231 ops/s
Iteration   5: 126855.296 ops/s
Iteration   6: 134475.192 ops/s
Iteration   7: 128272.982 ops/s
Iteration   8: 133403.728 ops/s
Iteration   9: 127198.175 ops/s
Iteration  10: 137232.900 ops/s
Iteration  11: 129458.872 ops/s
Iteration  12: 135279.442 ops/s
Iteration  13: 127465.904 ops/s
Iteration  14: 136089.485 ops/s
Iteration  15: 125780.477 ops/s
Iteration  16: 129456.081 ops/s
Iteration  17: 134073.112 ops/s
Iteration  18: 131648.237 ops/s
Iteration  19: 131997.532 ops/s
Iteration  20: 133814.800 ops/s
Iteration  21: 128775.702 ops/s
Iteration  22: 133298.583 ops/s
Iteration  23: 138478.453 ops/s
Iteration  24: 132028.233 ops/s
Iteration  25: 129455.659 ops/s
Iteration  26: 136836.185 ops/s
Iteration  27: 135966.206 ops/s
Iteration  28: 126742.768 ops/s
Iteration  29: 128871.416 ops/s
Iteration  30: 132243.554 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_50._Benchmark.benchmark_Cluster_50":
  131745.586 ±(99.9%) 2421.470 ops/s [Average]
  (min, avg, max) = (125780.477, 131745.586, 138478.453), stdev = 3624.343
  CI (99.9%): [129324.116, 134167.057] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_50._Benchmark.benchmark_Cluster_50  thrpt   30  131745.586 ± 2421.470  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_500._Benchmark.benchmark_Cluster_500$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_500._Benchmark.benchmark_Cluster_500

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12408.229 ops/s
# Warmup Iteration   2: 41959.430 ops/s
# Warmup Iteration   3: 45285.489 ops/s
# Warmup Iteration   4: 49305.963 ops/s
# Warmup Iteration   5: 45976.237 ops/s
# Warmup Iteration   6: 64378.046 ops/s
# Warmup Iteration   7: 60338.398 ops/s
# Warmup Iteration   8: 59901.362 ops/s
# Warmup Iteration   9: 69612.715 ops/s
# Warmup Iteration  10: 50955.510 ops/s
# Warmup Iteration  11: 65461.922 ops/s
# Warmup Iteration  12: 74168.458 ops/s
# Warmup Iteration  13: 75401.354 ops/s
# Warmup Iteration  14: 65460.829 ops/s
# Warmup Iteration  15: 142696.724 ops/s
# Warmup Iteration  16: 147558.269 ops/s
# Warmup Iteration  17: 156814.872 ops/s
# Warmup Iteration  18: 164488.979 ops/s
# Warmup Iteration  19: 160447.417 ops/s
# Warmup Iteration  20: 153690.130 ops/s
# Warmup Iteration  21: 156546.279 ops/s
# Warmup Iteration  22: 151497.461 ops/s
# Warmup Iteration  23: 150313.593 ops/s
# Warmup Iteration  24: 162067.351 ops/s
# Warmup Iteration  25: 154114.612 ops/s
# Warmup Iteration  26: 154063.217 ops/s
# Warmup Iteration  27: 164465.800 ops/s
# Warmup Iteration  28: 143792.730 ops/s
# Warmup Iteration  29: 147836.617 ops/s
# Warmup Iteration  30: 156861.478 ops/s
Iteration   1: 163868.829 ops/s
Iteration   2: 163516.138 ops/s
Iteration   3: 153801.508 ops/s
Iteration   4: 154467.842 ops/s
Iteration   5: 158894.425 ops/s
Iteration   6: 156370.807 ops/s
Iteration   7: 158417.346 ops/s
Iteration   8: 157970.740 ops/s
Iteration   9: 155005.479 ops/s
Iteration  10: 157848.270 ops/s
Iteration  11: 153607.341 ops/s
Iteration  12: 159278.962 ops/s
Iteration  13: 155065.589 ops/s
Iteration  14: 157964.700 ops/s
Iteration  15: 158253.745 ops/s
Iteration  16: 155191.277 ops/s
Iteration  17: 161395.889 ops/s
Iteration  18: 157343.142 ops/s
Iteration  19: 151088.496 ops/s
Iteration  20: 162600.218 ops/s
Iteration  21: 152039.695 ops/s
Iteration  22: 158275.624 ops/s
Iteration  23: 155738.964 ops/s
Iteration  24: 160033.620 ops/s
Iteration  25: 157657.156 ops/s
Iteration  26: 159669.448 ops/s
Iteration  27: 152432.186 ops/s
Iteration  28: 161876.843 ops/s
Iteration  29: 155203.110 ops/s
Iteration  30: 157641.784 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_500._Benchmark.benchmark_Cluster_500":
  157417.306 ±(99.9%) 2210.782 ops/s [Average]
  (min, avg, max) = (151088.496, 157417.306, 163868.829), stdev = 3308.995
  CI (99.9%): [155206.524, 159628.088] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_500._Benchmark.benchmark_Cluster_500  thrpt   30  157417.306 ± 2210.782  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_501._Benchmark.benchmark_Cluster_501$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_501._Benchmark.benchmark_Cluster_501

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5339.485 ops/s
# Warmup Iteration   2: 28813.238 ops/s
# Warmup Iteration   3: 26336.212 ops/s
# Warmup Iteration   4: 36132.409 ops/s
# Warmup Iteration   5: 47145.339 ops/s
# Warmup Iteration   6: 81482.102 ops/s
# Warmup Iteration   7: 111845.339 ops/s
# Warmup Iteration   8: 116593.884 ops/s
# Warmup Iteration   9: 111724.050 ops/s
# Warmup Iteration  10: 113023.258 ops/s
# Warmup Iteration  11: 110337.467 ops/s
# Warmup Iteration  12: 111418.692 ops/s
# Warmup Iteration  13: 113593.456 ops/s
# Warmup Iteration  14: 108477.710 ops/s
# Warmup Iteration  15: 111058.259 ops/s
# Warmup Iteration  16: 109523.233 ops/s
# Warmup Iteration  17: 116202.556 ops/s
# Warmup Iteration  18: 122579.967 ops/s
# Warmup Iteration  19: 118412.483 ops/s
# Warmup Iteration  20: 118331.770 ops/s
# Warmup Iteration  21: 115544.450 ops/s
# Warmup Iteration  22: 119939.307 ops/s
# Warmup Iteration  23: 120582.528 ops/s
# Warmup Iteration  24: 116477.930 ops/s
# Warmup Iteration  25: 116775.890 ops/s
# Warmup Iteration  26: 119829.230 ops/s
# Warmup Iteration  27: 113798.093 ops/s
# Warmup Iteration  28: 120002.905 ops/s
# Warmup Iteration  29: 116109.073 ops/s
# Warmup Iteration  30: 120812.071 ops/s
Iteration   1: 115783.468 ops/s
Iteration   2: 117326.812 ops/s
Iteration   3: 121979.859 ops/s
Iteration   4: 117969.278 ops/s
Iteration   5: 114545.762 ops/s
Iteration   6: 118490.403 ops/s
Iteration   7: 117951.040 ops/s
Iteration   8: 114892.943 ops/s
Iteration   9: 115848.196 ops/s
Iteration  10: 116252.550 ops/s
Iteration  11: 121275.563 ops/s
Iteration  12: 115480.134 ops/s
Iteration  13: 119348.969 ops/s
Iteration  14: 119262.360 ops/s
Iteration  15: 115874.593 ops/s
Iteration  16: 117462.701 ops/s
Iteration  17: 122648.766 ops/s
Iteration  18: 117028.114 ops/s
Iteration  19: 121574.690 ops/s
Iteration  20: 116699.230 ops/s
Iteration  21: 116974.258 ops/s
Iteration  22: 120848.240 ops/s
Iteration  23: 115619.427 ops/s
Iteration  24: 121696.790 ops/s
Iteration  25: 115587.592 ops/s
Iteration  26: 117558.540 ops/s
Iteration  27: 121634.448 ops/s
Iteration  28: 115851.783 ops/s
Iteration  29: 120744.764 ops/s
Iteration  30: 115451.959 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_501._Benchmark.benchmark_Cluster_501":
  117988.774 ±(99.9%) 1661.746 ops/s [Average]
  (min, avg, max) = (114545.762, 117988.774, 122648.766), stdev = 2487.224
  CI (99.9%): [116327.028, 119650.521] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_501._Benchmark.benchmark_Cluster_501  thrpt   30  117988.774 ± 1661.746  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_502._Benchmark.benchmark_Cluster_502$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_502._Benchmark.benchmark_Cluster_502

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.723 ops/s
# Warmup Iteration   2: 4980.013 ops/s
# Warmup Iteration   3: 16122.034 ops/s
# Warmup Iteration   4: 21033.014 ops/s
# Warmup Iteration   5: 34369.310 ops/s
# Warmup Iteration   6: 23705.892 ops/s
# Warmup Iteration   7: 27125.523 ops/s
# Warmup Iteration   8: 28919.084 ops/s
# Warmup Iteration   9: 50457.937 ops/s
# Warmup Iteration  10: 78245.554 ops/s
# Warmup Iteration  11: 84273.047 ops/s
# Warmup Iteration  12: 83110.694 ops/s
# Warmup Iteration  13: 85154.302 ops/s
# Warmup Iteration  14: 82376.210 ops/s
# Warmup Iteration  15: 85856.428 ops/s
# Warmup Iteration  16: 88905.910 ops/s
# Warmup Iteration  17: 85697.422 ops/s
# Warmup Iteration  18: 88431.381 ops/s
# Warmup Iteration  19: 84160.304 ops/s
# Warmup Iteration  20: 85685.871 ops/s
# Warmup Iteration  21: 86941.234 ops/s
# Warmup Iteration  22: 88370.059 ops/s
# Warmup Iteration  23: 86141.943 ops/s
# Warmup Iteration  24: 85946.939 ops/s
# Warmup Iteration  25: 83364.367 ops/s
# Warmup Iteration  26: 87724.024 ops/s
# Warmup Iteration  27: 87458.100 ops/s
# Warmup Iteration  28: 88431.747 ops/s
# Warmup Iteration  29: 85554.986 ops/s
# Warmup Iteration  30: 89174.348 ops/s
Iteration   1: 84721.093 ops/s
Iteration   2: 89581.862 ops/s
Iteration   3: 89533.111 ops/s
Iteration   4: 84981.183 ops/s
Iteration   5: 90809.209 ops/s
Iteration   6: 88796.637 ops/s
Iteration   7: 86240.626 ops/s
Iteration   8: 87973.001 ops/s
Iteration   9: 88168.871 ops/s
Iteration  10: 84933.567 ops/s
Iteration  11: 84732.679 ops/s
Iteration  12: 87915.202 ops/s
Iteration  13: 89096.483 ops/s
Iteration  14: 92924.361 ops/s
Iteration  15: 89589.591 ops/s
Iteration  16: 84964.211 ops/s
Iteration  17: 89115.353 ops/s
Iteration  18: 86603.012 ops/s
Iteration  19: 90861.852 ops/s
Iteration  20: 89541.330 ops/s
Iteration  21: 84975.589 ops/s
Iteration  22: 88673.899 ops/s
Iteration  23: 84475.887 ops/s
Iteration  24: 90960.407 ops/s
Iteration  25: 83887.673 ops/s
Iteration  26: 88402.299 ops/s
Iteration  27: 86891.658 ops/s
Iteration  28: 87153.427 ops/s
Iteration  29: 87973.864 ops/s
Iteration  30: 86191.101 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_502._Benchmark.benchmark_Cluster_502":
  87688.968 ±(99.9%) 1557.419 ops/s [Average]
  (min, avg, max) = (83887.673, 87688.968, 92924.361), stdev = 2331.072
  CI (99.9%): [86131.549, 89246.387] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_502._Benchmark.benchmark_Cluster_502  thrpt   30  87688.968 ± 1557.419  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_503._Benchmark.benchmark_Cluster_503$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_503._Benchmark.benchmark_Cluster_503

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3356.273 ops/s
# Warmup Iteration   2: 29809.488 ops/s
# Warmup Iteration   3: 32529.936 ops/s
# Warmup Iteration   4: 53632.613 ops/s
# Warmup Iteration   5: 105431.178 ops/s
# Warmup Iteration   6: 102663.788 ops/s
# Warmup Iteration   7: 103926.947 ops/s
# Warmup Iteration   8: 101653.682 ops/s
# Warmup Iteration   9: 103547.666 ops/s
# Warmup Iteration  10: 104489.173 ops/s
# Warmup Iteration  11: 98968.090 ops/s
# Warmup Iteration  12: 105170.905 ops/s
# Warmup Iteration  13: 102785.270 ops/s
# Warmup Iteration  14: 101638.037 ops/s
# Warmup Iteration  15: 107226.985 ops/s
# Warmup Iteration  16: 103184.245 ops/s
# Warmup Iteration  17: 102555.039 ops/s
# Warmup Iteration  18: 107082.730 ops/s
# Warmup Iteration  19: 104270.379 ops/s
# Warmup Iteration  20: 108860.159 ops/s
# Warmup Iteration  21: 107352.956 ops/s
# Warmup Iteration  22: 107727.550 ops/s
# Warmup Iteration  23: 109617.996 ops/s
# Warmup Iteration  24: 104419.626 ops/s
# Warmup Iteration  25: 109314.461 ops/s
# Warmup Iteration  26: 106159.830 ops/s
# Warmup Iteration  27: 109708.277 ops/s
# Warmup Iteration  28: 107480.277 ops/s
# Warmup Iteration  29: 105611.002 ops/s
# Warmup Iteration  30: 111257.859 ops/s
Iteration   1: 105280.019 ops/s
Iteration   2: 111670.207 ops/s
Iteration   3: 104348.434 ops/s
Iteration   4: 113282.237 ops/s
Iteration   5: 103602.911 ops/s
Iteration   6: 110676.532 ops/s
Iteration   7: 108773.880 ops/s
Iteration   8: 106932.669 ops/s
Iteration   9: 108959.060 ops/s
Iteration  10: 104799.095 ops/s
Iteration  11: 109831.971 ops/s
Iteration  12: 106093.492 ops/s
Iteration  13: 106272.817 ops/s
Iteration  14: 110048.543 ops/s
Iteration  15: 105322.768 ops/s
Iteration  16: 107197.453 ops/s
Iteration  17: 106927.010 ops/s
Iteration  18: 105998.422 ops/s
Iteration  19: 107768.718 ops/s
Iteration  20: 105324.177 ops/s
Iteration  21: 110419.779 ops/s
Iteration  22: 107297.452 ops/s
Iteration  23: 111778.391 ops/s
Iteration  24: 102580.280 ops/s
Iteration  25: 112516.296 ops/s
Iteration  26: 106908.689 ops/s
Iteration  27: 107905.239 ops/s
Iteration  28: 106378.515 ops/s
Iteration  29: 107770.733 ops/s
Iteration  30: 85582.114 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_503._Benchmark.benchmark_Cluster_503":
  106941.597 ±(99.9%) 3233.071 ops/s [Average]
  (min, avg, max) = (85582.114, 106941.597, 113282.237), stdev = 4839.109
  CI (99.9%): [103708.526, 110174.668] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_503._Benchmark.benchmark_Cluster_503  thrpt   30  106941.597 ± 3233.071  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_504._Benchmark.benchmark_Cluster_504$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_504._Benchmark.benchmark_Cluster_504

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11684.294 ops/s
# Warmup Iteration   2: 57579.701 ops/s
# Warmup Iteration   3: 112265.478 ops/s
# Warmup Iteration   4: 116259.963 ops/s
# Warmup Iteration   5: 115313.603 ops/s
# Warmup Iteration   6: 112750.561 ops/s
# Warmup Iteration   7: 112977.036 ops/s
# Warmup Iteration   8: 122905.600 ops/s
# Warmup Iteration   9: 120997.111 ops/s
# Warmup Iteration  10: 120533.887 ops/s
# Warmup Iteration  11: 121518.533 ops/s
# Warmup Iteration  12: 120200.243 ops/s
# Warmup Iteration  13: 128379.804 ops/s
# Warmup Iteration  14: 118490.405 ops/s
# Warmup Iteration  15: 125063.751 ops/s
# Warmup Iteration  16: 120777.729 ops/s
# Warmup Iteration  17: 132149.241 ops/s
# Warmup Iteration  18: 123157.161 ops/s
# Warmup Iteration  19: 128379.406 ops/s
# Warmup Iteration  20: 129036.644 ops/s
# Warmup Iteration  21: 130190.526 ops/s
# Warmup Iteration  22: 124203.879 ops/s
# Warmup Iteration  23: 126149.209 ops/s
# Warmup Iteration  24: 130559.886 ops/s
# Warmup Iteration  25: 127163.438 ops/s
# Warmup Iteration  26: 126894.456 ops/s
# Warmup Iteration  27: 131391.794 ops/s
# Warmup Iteration  28: 123711.707 ops/s
# Warmup Iteration  29: 132182.248 ops/s
# Warmup Iteration  30: 124648.884 ops/s
Iteration   1: 130669.856 ops/s
Iteration   2: 126916.770 ops/s
Iteration   3: 127119.495 ops/s
Iteration   4: 128566.937 ops/s
Iteration   5: 123500.068 ops/s
Iteration   6: 130538.622 ops/s
Iteration   7: 127288.804 ops/s
Iteration   8: 127623.514 ops/s
Iteration   9: 133403.575 ops/s
Iteration  10: 123876.600 ops/s
Iteration  11: 132380.331 ops/s
Iteration  12: 122399.594 ops/s
Iteration  13: 133025.162 ops/s
Iteration  14: 128197.939 ops/s
Iteration  15: 126429.915 ops/s
Iteration  16: 124106.852 ops/s
Iteration  17: 131687.417 ops/s
Iteration  18: 122969.763 ops/s
Iteration  19: 127992.969 ops/s
Iteration  20: 128178.564 ops/s
Iteration  21: 128252.940 ops/s
Iteration  22: 123478.159 ops/s
Iteration  23: 125480.471 ops/s
Iteration  24: 126516.771 ops/s
Iteration  25: 124905.061 ops/s
Iteration  26: 128162.013 ops/s
Iteration  27: 124518.659 ops/s
Iteration  28: 130100.941 ops/s
Iteration  29: 127067.445 ops/s
Iteration  30: 121815.519 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_504._Benchmark.benchmark_Cluster_504":
  127239.024 ±(99.9%) 2121.050 ops/s [Average]
  (min, avg, max) = (121815.519, 127239.024, 133403.575), stdev = 3174.688
  CI (99.9%): [125117.974, 129360.074] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_504._Benchmark.benchmark_Cluster_504  thrpt   30  127239.024 ± 2121.050  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_505._Benchmark.benchmark_Cluster_505$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_505._Benchmark.benchmark_Cluster_505

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6426.622 ops/s
# Warmup Iteration   2: 29147.183 ops/s
# Warmup Iteration   3: 54331.833 ops/s
# Warmup Iteration   4: 97813.758 ops/s
# Warmup Iteration   5: 101148.555 ops/s
# Warmup Iteration   6: 104833.053 ops/s
# Warmup Iteration   7: 102903.083 ops/s
# Warmup Iteration   8: 101124.417 ops/s
# Warmup Iteration   9: 103125.397 ops/s
# Warmup Iteration  10: 101692.579 ops/s
# Warmup Iteration  11: 102468.292 ops/s
# Warmup Iteration  12: 107303.098 ops/s
# Warmup Iteration  13: 108184.639 ops/s
# Warmup Iteration  14: 104623.938 ops/s
# Warmup Iteration  15: 107828.827 ops/s
# Warmup Iteration  16: 104527.727 ops/s
# Warmup Iteration  17: 111742.147 ops/s
# Warmup Iteration  18: 106237.391 ops/s
# Warmup Iteration  19: 111147.421 ops/s
# Warmup Iteration  20: 109358.297 ops/s
# Warmup Iteration  21: 110209.341 ops/s
# Warmup Iteration  22: 110640.503 ops/s
# Warmup Iteration  23: 106935.273 ops/s
# Warmup Iteration  24: 108457.064 ops/s
# Warmup Iteration  25: 113455.273 ops/s
# Warmup Iteration  26: 107484.886 ops/s
# Warmup Iteration  27: 109186.348 ops/s
# Warmup Iteration  28: 109763.718 ops/s
# Warmup Iteration  29: 111897.990 ops/s
# Warmup Iteration  30: 113002.497 ops/s
Iteration   1: 106099.638 ops/s
Iteration   2: 109640.626 ops/s
Iteration   3: 108277.564 ops/s
Iteration   4: 105487.751 ops/s
Iteration   5: 110187.334 ops/s
Iteration   6: 103888.433 ops/s
Iteration   7: 105684.245 ops/s
Iteration   8: 110428.510 ops/s
Iteration   9: 111252.875 ops/s
Iteration  10: 108386.956 ops/s
Iteration  11: 114227.531 ops/s
Iteration  12: 109105.152 ops/s
Iteration  13: 110770.200 ops/s
Iteration  14: 109768.640 ops/s
Iteration  15: 107626.831 ops/s
Iteration  16: 112940.243 ops/s
Iteration  17: 111795.740 ops/s
Iteration  18: 110161.452 ops/s
Iteration  19: 112279.548 ops/s
Iteration  20: 111798.869 ops/s
Iteration  21: 107398.647 ops/s
Iteration  22: 113524.910 ops/s
Iteration  23: 107684.502 ops/s
Iteration  24: 111544.155 ops/s
Iteration  25: 87223.913 ops/s
Iteration  26: 107153.417 ops/s
Iteration  27: 107185.956 ops/s
Iteration  28: 111004.312 ops/s
Iteration  29: 107629.762 ops/s
Iteration  30: 108563.379 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_505._Benchmark.benchmark_Cluster_505":
  108624.036 ±(99.9%) 3182.268 ops/s [Average]
  (min, avg, max) = (87223.913, 108624.036, 114227.531), stdev = 4763.070
  CI (99.9%): [105441.768, 111806.305] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_505._Benchmark.benchmark_Cluster_505  thrpt   30  108624.036 ± 3182.268  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_506._Benchmark.benchmark_Cluster_506$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_506._Benchmark.benchmark_Cluster_506

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8360.363 ops/s
# Warmup Iteration   2: 32082.334 ops/s
# Warmup Iteration   3: 37646.029 ops/s
# Warmup Iteration   4: 38724.231 ops/s
# Warmup Iteration   5: 101414.275 ops/s
# Warmup Iteration   6: 104939.483 ops/s
# Warmup Iteration   7: 105503.507 ops/s
# Warmup Iteration   8: 106761.966 ops/s
# Warmup Iteration   9: 112425.694 ops/s
# Warmup Iteration  10: 111130.573 ops/s
# Warmup Iteration  11: 112026.721 ops/s
# Warmup Iteration  12: 107194.052 ops/s
# Warmup Iteration  13: 112296.543 ops/s
# Warmup Iteration  14: 105167.233 ops/s
# Warmup Iteration  15: 112774.607 ops/s
# Warmup Iteration  16: 113704.957 ops/s
# Warmup Iteration  17: 112355.825 ops/s
# Warmup Iteration  18: 106811.309 ops/s
# Warmup Iteration  19: 108916.547 ops/s
# Warmup Iteration  20: 115696.713 ops/s
# Warmup Iteration  21: 115792.374 ops/s
# Warmup Iteration  22: 112851.027 ops/s
# Warmup Iteration  23: 116892.740 ops/s
# Warmup Iteration  24: 109512.539 ops/s
# Warmup Iteration  25: 119174.944 ops/s
# Warmup Iteration  26: 113440.734 ops/s
# Warmup Iteration  27: 113816.711 ops/s
# Warmup Iteration  28: 115831.201 ops/s
# Warmup Iteration  29: 113642.379 ops/s
# Warmup Iteration  30: 116208.188 ops/s
Iteration   1: 113520.275 ops/s
Iteration   2: 112404.575 ops/s
Iteration   3: 116480.341 ops/s
Iteration   4: 111015.148 ops/s
Iteration   5: 116557.482 ops/s
Iteration   6: 110344.567 ops/s
Iteration   7: 110397.629 ops/s
Iteration   8: 117988.225 ops/s
Iteration   9: 116052.276 ops/s
Iteration  10: 111966.578 ops/s
Iteration  11: 121132.794 ops/s
Iteration  12: 111285.234 ops/s
Iteration  13: 110669.537 ops/s
Iteration  14: 119605.495 ops/s
Iteration  15: 117697.839 ops/s
Iteration  16: 113906.220 ops/s
Iteration  17: 112916.555 ops/s
Iteration  18: 116682.617 ops/s
Iteration  19: 112012.711 ops/s
Iteration  20: 118799.062 ops/s
Iteration  21: 112626.946 ops/s
Iteration  22: 111129.903 ops/s
Iteration  23: 118325.078 ops/s
Iteration  24: 117719.039 ops/s
Iteration  25: 111651.192 ops/s
Iteration  26: 116525.589 ops/s
Iteration  27: 112671.655 ops/s
Iteration  28: 115913.498 ops/s
Iteration  29: 112085.556 ops/s
Iteration  30: 112418.604 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_506._Benchmark.benchmark_Cluster_506":
  114416.741 ±(99.9%) 2097.039 ops/s [Average]
  (min, avg, max) = (110344.567, 114416.741, 121132.794), stdev = 3138.749
  CI (99.9%): [112319.702, 116513.779] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_506._Benchmark.benchmark_Cluster_506  thrpt   30  114416.741 ± 2097.039  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_507._Benchmark.benchmark_Cluster_507$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_507._Benchmark.benchmark_Cluster_507

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8314.073 ops/s
# Warmup Iteration   2: 40090.588 ops/s
# Warmup Iteration   3: 57943.650 ops/s
# Warmup Iteration   4: 120575.052 ops/s
# Warmup Iteration   5: 119586.209 ops/s
# Warmup Iteration   6: 115835.482 ops/s
# Warmup Iteration   7: 133017.750 ops/s
# Warmup Iteration   8: 127515.887 ops/s
# Warmup Iteration   9: 133412.652 ops/s
# Warmup Iteration  10: 126741.590 ops/s
# Warmup Iteration  11: 127255.086 ops/s
# Warmup Iteration  12: 133562.354 ops/s
# Warmup Iteration  13: 127512.651 ops/s
# Warmup Iteration  14: 128852.282 ops/s
# Warmup Iteration  15: 133315.852 ops/s
# Warmup Iteration  16: 127002.888 ops/s
# Warmup Iteration  17: 136522.011 ops/s
# Warmup Iteration  18: 130784.902 ops/s
# Warmup Iteration  19: 137348.803 ops/s
# Warmup Iteration  20: 138531.333 ops/s
# Warmup Iteration  21: 129886.966 ops/s
# Warmup Iteration  22: 137273.170 ops/s
# Warmup Iteration  23: 135014.137 ops/s
# Warmup Iteration  24: 133207.170 ops/s
# Warmup Iteration  25: 132874.832 ops/s
# Warmup Iteration  26: 138433.777 ops/s
# Warmup Iteration  27: 131285.122 ops/s
# Warmup Iteration  28: 137083.265 ops/s
# Warmup Iteration  29: 134413.044 ops/s
# Warmup Iteration  30: 137664.332 ops/s
Iteration   1: 134153.941 ops/s
Iteration   2: 129502.766 ops/s
Iteration   3: 138107.395 ops/s
Iteration   4: 132338.955 ops/s
Iteration   5: 133956.540 ops/s
Iteration   6: 139108.564 ops/s
Iteration   7: 129903.655 ops/s
Iteration   8: 136423.875 ops/s
Iteration   9: 130164.740 ops/s
Iteration  10: 135059.234 ops/s
Iteration  11: 131662.888 ops/s
Iteration  12: 132871.291 ops/s
Iteration  13: 141478.825 ops/s
Iteration  14: 131167.488 ops/s
Iteration  15: 136607.049 ops/s
Iteration  16: 131861.205 ops/s
Iteration  17: 138415.550 ops/s
Iteration  18: 128575.579 ops/s
Iteration  19: 116593.118 ops/s
Iteration  20: 133405.767 ops/s
Iteration  21: 135622.016 ops/s
Iteration  22: 135017.389 ops/s
Iteration  23: 134322.484 ops/s
Iteration  24: 135082.165 ops/s
Iteration  25: 135001.579 ops/s
Iteration  26: 137529.827 ops/s
Iteration  27: 133825.559 ops/s
Iteration  28: 131994.201 ops/s
Iteration  29: 136843.135 ops/s
Iteration  30: 133387.809 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_507._Benchmark.benchmark_Cluster_507":
  133666.153 ±(99.9%) 2952.585 ops/s [Average]
  (min, avg, max) = (116593.118, 133666.153, 141478.825), stdev = 4419.290
  CI (99.9%): [130713.568, 136618.738] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_507._Benchmark.benchmark_Cluster_507  thrpt   30  133666.153 ± 2952.585  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_508._Benchmark.benchmark_Cluster_508$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_508._Benchmark.benchmark_Cluster_508

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4863.272 ops/s
# Warmup Iteration   2: 18804.113 ops/s
# Warmup Iteration   3: 31089.787 ops/s
# Warmup Iteration   4: 40195.570 ops/s
# Warmup Iteration   5: 42572.305 ops/s
# Warmup Iteration   6: 89856.176 ops/s
# Warmup Iteration   7: 113238.082 ops/s
# Warmup Iteration   8: 104620.420 ops/s
# Warmup Iteration   9: 117585.516 ops/s
# Warmup Iteration  10: 112720.641 ops/s
# Warmup Iteration  11: 111711.841 ops/s
# Warmup Iteration  12: 120316.255 ops/s
# Warmup Iteration  13: 114658.400 ops/s
# Warmup Iteration  14: 114129.645 ops/s
# Warmup Iteration  15: 118527.743 ops/s
# Warmup Iteration  16: 110368.187 ops/s
# Warmup Iteration  17: 124585.021 ops/s
# Warmup Iteration  18: 121950.042 ops/s
# Warmup Iteration  19: 120154.256 ops/s
# Warmup Iteration  20: 120717.566 ops/s
# Warmup Iteration  21: 120890.073 ops/s
# Warmup Iteration  22: 119595.393 ops/s
# Warmup Iteration  23: 119151.710 ops/s
# Warmup Iteration  24: 117103.232 ops/s
# Warmup Iteration  25: 126074.195 ops/s
# Warmup Iteration  26: 119405.457 ops/s
# Warmup Iteration  27: 119603.086 ops/s
# Warmup Iteration  28: 121725.795 ops/s
# Warmup Iteration  29: 119699.308 ops/s
# Warmup Iteration  30: 122649.413 ops/s
Iteration   1: 115607.500 ops/s
Iteration   2: 118779.343 ops/s
Iteration   3: 121590.386 ops/s
Iteration   4: 119680.017 ops/s
Iteration   5: 118139.560 ops/s
Iteration   6: 117497.408 ops/s
Iteration   7: 119579.116 ops/s
Iteration   8: 127958.494 ops/s
Iteration   9: 115140.276 ops/s
Iteration  10: 121326.165 ops/s
Iteration  11: 120859.157 ops/s
Iteration  12: 124525.955 ops/s
Iteration  13: 118973.865 ops/s
Iteration  14: 119329.442 ops/s
Iteration  15: 118911.819 ops/s
Iteration  16: 125402.942 ops/s
Iteration  17: 119272.159 ops/s
Iteration  18: 122212.230 ops/s
Iteration  19: 119329.995 ops/s
Iteration  20: 121409.775 ops/s
Iteration  21: 124021.683 ops/s
Iteration  22: 116856.684 ops/s
Iteration  23: 121644.150 ops/s
Iteration  24: 120484.523 ops/s
Iteration  25: 114663.689 ops/s
Iteration  26: 120180.963 ops/s
Iteration  27: 118271.289 ops/s
Iteration  28: 123409.790 ops/s
Iteration  29: 119593.102 ops/s
Iteration  30: 122411.895 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_508._Benchmark.benchmark_Cluster_508":
  120235.446 ±(99.9%) 1998.292 ops/s [Average]
  (min, avg, max) = (114663.689, 120235.446, 127958.494), stdev = 2990.950
  CI (99.9%): [118237.154, 122233.738] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_508._Benchmark.benchmark_Cluster_508  thrpt   30  120235.446 ± 1998.292  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_509._Benchmark.benchmark_Cluster_509$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_509._Benchmark.benchmark_Cluster_509

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14592.648 ops/s
# Warmup Iteration   2: 41814.259 ops/s
# Warmup Iteration   3: 91599.199 ops/s
# Warmup Iteration   4: 100647.052 ops/s
# Warmup Iteration   5: 103286.103 ops/s
# Warmup Iteration   6: 110734.128 ops/s
# Warmup Iteration   7: 114864.397 ops/s
# Warmup Iteration   8: 113013.325 ops/s
# Warmup Iteration   9: 110461.402 ops/s
# Warmup Iteration  10: 113820.634 ops/s
# Warmup Iteration  11: 114503.094 ops/s
# Warmup Iteration  12: 113322.107 ops/s
# Warmup Iteration  13: 115125.942 ops/s
# Warmup Iteration  14: 111537.598 ops/s
# Warmup Iteration  15: 116004.245 ops/s
# Warmup Iteration  16: 110536.150 ops/s
# Warmup Iteration  17: 118027.979 ops/s
# Warmup Iteration  18: 121343.760 ops/s
# Warmup Iteration  19: 115917.606 ops/s
# Warmup Iteration  20: 117598.147 ops/s
# Warmup Iteration  21: 114543.166 ops/s
# Warmup Iteration  22: 123421.038 ops/s
# Warmup Iteration  23: 114964.402 ops/s
# Warmup Iteration  24: 119491.695 ops/s
# Warmup Iteration  25: 111475.685 ops/s
# Warmup Iteration  26: 123150.554 ops/s
# Warmup Iteration  27: 115038.452 ops/s
# Warmup Iteration  28: 118252.010 ops/s
# Warmup Iteration  29: 121341.291 ops/s
# Warmup Iteration  30: 119432.450 ops/s
Iteration   1: 115770.209 ops/s
Iteration   2: 121096.393 ops/s
Iteration   3: 117289.976 ops/s
Iteration   4: 118635.421 ops/s
Iteration   5: 115799.806 ops/s
Iteration   6: 117533.608 ops/s
Iteration   7: 118394.306 ops/s
Iteration   8: 116471.162 ops/s
Iteration   9: 120605.162 ops/s
Iteration  10: 118276.800 ops/s
Iteration  11: 121861.261 ops/s
Iteration  12: 111620.691 ops/s
Iteration  13: 93889.222 ops/s
Iteration  14: 117544.297 ops/s
Iteration  15: 119699.784 ops/s
Iteration  16: 116030.979 ops/s
Iteration  17: 118688.680 ops/s
Iteration  18: 119336.117 ops/s
Iteration  19: 113640.842 ops/s
Iteration  20: 124789.885 ops/s
Iteration  21: 113265.791 ops/s
Iteration  22: 122513.189 ops/s
Iteration  23: 119265.322 ops/s
Iteration  24: 116675.885 ops/s
Iteration  25: 120498.344 ops/s
Iteration  26: 115289.309 ops/s
Iteration  27: 120918.918 ops/s
Iteration  28: 118621.547 ops/s
Iteration  29: 112567.843 ops/s
Iteration  30: 121693.012 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_509._Benchmark.benchmark_Cluster_509":
  117276.125 ±(99.9%) 3589.790 ops/s [Average]
  (min, avg, max) = (93889.222, 117276.125, 124789.885), stdev = 5373.029
  CI (99.9%): [113686.336, 120865.915] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_509._Benchmark.benchmark_Cluster_509  thrpt   30  117276.125 ± 3589.790  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_51._Benchmark.benchmark_Cluster_51$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_51._Benchmark.benchmark_Cluster_51

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 23895.702 ops/s
# Warmup Iteration   2: 87398.003 ops/s
# Warmup Iteration   3: 111344.785 ops/s
# Warmup Iteration   4: 127134.292 ops/s
# Warmup Iteration   5: 135714.436 ops/s
# Warmup Iteration   6: 126185.000 ops/s
# Warmup Iteration   7: 126020.243 ops/s
# Warmup Iteration   8: 133801.976 ops/s
# Warmup Iteration   9: 127234.699 ops/s
# Warmup Iteration  10: 131050.077 ops/s
# Warmup Iteration  11: 127946.464 ops/s
# Warmup Iteration  12: 127107.416 ops/s
# Warmup Iteration  13: 133251.537 ops/s
# Warmup Iteration  14: 120693.129 ops/s
# Warmup Iteration  15: 126780.200 ops/s
# Warmup Iteration  16: 127750.234 ops/s
# Warmup Iteration  17: 141910.069 ops/s
# Warmup Iteration  18: 131363.127 ops/s
# Warmup Iteration  19: 136940.243 ops/s
# Warmup Iteration  20: 141890.594 ops/s
# Warmup Iteration  21: 133632.827 ops/s
# Warmup Iteration  22: 140388.130 ops/s
# Warmup Iteration  23: 130980.865 ops/s
# Warmup Iteration  24: 137255.106 ops/s
# Warmup Iteration  25: 139049.067 ops/s
# Warmup Iteration  26: 135108.567 ops/s
# Warmup Iteration  27: 135383.850 ops/s
# Warmup Iteration  28: 138059.535 ops/s
# Warmup Iteration  29: 136652.508 ops/s
# Warmup Iteration  30: 139621.606 ops/s
Iteration   1: 135699.714 ops/s
Iteration   2: 139854.485 ops/s
Iteration   3: 138824.732 ops/s
Iteration   4: 133395.645 ops/s
Iteration   5: 135332.382 ops/s
Iteration   6: 132010.695 ops/s
Iteration   7: 138097.388 ops/s
Iteration   8: 133332.427 ops/s
Iteration   9: 131703.177 ops/s
Iteration  10: 140853.430 ops/s
Iteration  11: 132595.128 ops/s
Iteration  12: 136220.297 ops/s
Iteration  13: 138471.382 ops/s
Iteration  14: 132712.510 ops/s
Iteration  15: 135689.519 ops/s
Iteration  16: 138534.325 ops/s
Iteration  17: 135562.984 ops/s
Iteration  18: 139286.677 ops/s
Iteration  19: 140107.789 ops/s
Iteration  20: 130976.314 ops/s
Iteration  21: 134200.502 ops/s
Iteration  22: 136494.111 ops/s
Iteration  23: 134265.752 ops/s
Iteration  24: 135668.878 ops/s
Iteration  25: 138001.221 ops/s
Iteration  26: 137634.501 ops/s
Iteration  27: 140904.128 ops/s
Iteration  28: 136055.210 ops/s
Iteration  29: 130254.780 ops/s
Iteration  30: 135584.805 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_51._Benchmark.benchmark_Cluster_51":
  135944.163 ±(99.9%) 1993.557 ops/s [Average]
  (min, avg, max) = (130254.780, 135944.163, 140904.128), stdev = 2983.862
  CI (99.9%): [133950.606, 137937.719] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_51._Benchmark.benchmark_Cluster_51  thrpt   30  135944.163 ± 1993.557  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_510._Benchmark.benchmark_Cluster_510$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_510._Benchmark.benchmark_Cluster_510

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9097.092 ops/s
# Warmup Iteration   2: 35679.061 ops/s
# Warmup Iteration   3: 47008.863 ops/s
# Warmup Iteration   4: 80683.454 ops/s
# Warmup Iteration   5: 129192.727 ops/s
# Warmup Iteration   6: 125859.477 ops/s
# Warmup Iteration   7: 131877.940 ops/s
# Warmup Iteration   8: 127216.544 ops/s
# Warmup Iteration   9: 128809.200 ops/s
# Warmup Iteration  10: 134104.568 ops/s
# Warmup Iteration  11: 132223.372 ops/s
# Warmup Iteration  12: 125139.065 ops/s
# Warmup Iteration  13: 132686.293 ops/s
# Warmup Iteration  14: 123607.116 ops/s
# Warmup Iteration  15: 133324.743 ops/s
# Warmup Iteration  16: 129112.216 ops/s
# Warmup Iteration  17: 132952.217 ops/s
# Warmup Iteration  18: 140308.610 ops/s
# Warmup Iteration  19: 133390.982 ops/s
# Warmup Iteration  20: 134935.121 ops/s
# Warmup Iteration  21: 133578.510 ops/s
# Warmup Iteration  22: 128518.674 ops/s
# Warmup Iteration  23: 133360.060 ops/s
# Warmup Iteration  24: 138668.909 ops/s
# Warmup Iteration  25: 136106.678 ops/s
# Warmup Iteration  26: 136371.799 ops/s
# Warmup Iteration  27: 137481.795 ops/s
# Warmup Iteration  28: 135468.957 ops/s
# Warmup Iteration  29: 141455.415 ops/s
# Warmup Iteration  30: 135715.638 ops/s
Iteration   1: 137049.119 ops/s
Iteration   2: 139827.067 ops/s
Iteration   3: 135334.014 ops/s
Iteration   4: 140726.001 ops/s
Iteration   5: 142503.442 ops/s
Iteration   6: 136372.890 ops/s
Iteration   7: 124771.746 ops/s
Iteration   8: 118458.147 ops/s
Iteration   9: 132052.921 ops/s
Iteration  10: 139796.004 ops/s
Iteration  11: 137912.294 ops/s
Iteration  12: 140233.721 ops/s
Iteration  13: 130747.586 ops/s
Iteration  14: 136365.443 ops/s
Iteration  15: 137111.396 ops/s
Iteration  16: 130968.543 ops/s
Iteration  17: 136817.961 ops/s
Iteration  18: 141944.299 ops/s
Iteration  19: 135217.312 ops/s
Iteration  20: 142534.719 ops/s
Iteration  21: 135318.259 ops/s
Iteration  22: 138039.600 ops/s
Iteration  23: 138367.034 ops/s
Iteration  24: 130405.426 ops/s
Iteration  25: 141352.589 ops/s
Iteration  26: 135558.124 ops/s
Iteration  27: 142495.948 ops/s
Iteration  28: 141560.970 ops/s
Iteration  29: 133677.536 ops/s
Iteration  30: 138181.916 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_510._Benchmark.benchmark_Cluster_510":
  136390.068 ±(99.9%) 3614.960 ops/s [Average]
  (min, avg, max) = (118458.147, 136390.068, 142534.719), stdev = 5410.702
  CI (99.9%): [132775.108, 140005.028] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_510._Benchmark.benchmark_Cluster_510  thrpt   30  136390.068 ± 3614.960  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_511._Benchmark.benchmark_Cluster_511$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_511._Benchmark.benchmark_Cluster_511

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7900.778 ops/s
# Warmup Iteration   2: 23496.264 ops/s
# Warmup Iteration   3: 19278.766 ops/s
# Warmup Iteration   4: 26124.405 ops/s
# Warmup Iteration   5: 20580.841 ops/s
# Warmup Iteration   6: 20198.017 ops/s
# Warmup Iteration   7: 24770.974 ops/s
# Warmup Iteration   8: 18618.334 ops/s
# Warmup Iteration   9: 20445.856 ops/s
# Warmup Iteration  10: 20454.680 ops/s
# Warmup Iteration  11: 20278.376 ops/s
# Warmup Iteration  12: 20858.604 ops/s
# Warmup Iteration  13: 20565.114 ops/s
# Warmup Iteration  14: 20161.929 ops/s
# Warmup Iteration  15: 20636.504 ops/s
# Warmup Iteration  16: 20925.744 ops/s
# Warmup Iteration  17: 20543.777 ops/s
# Warmup Iteration  18: 20288.732 ops/s
# Warmup Iteration  19: 19090.136 ops/s
# Warmup Iteration  20: 20027.184 ops/s
# Warmup Iteration  21: 20594.402 ops/s
# Warmup Iteration  22: 20275.622 ops/s
# Warmup Iteration  23: 20949.627 ops/s
# Warmup Iteration  24: 21677.677 ops/s
# Warmup Iteration  25: 20717.642 ops/s
# Warmup Iteration  26: 20332.792 ops/s
# Warmup Iteration  27: 20637.093 ops/s
# Warmup Iteration  28: 20101.467 ops/s
# Warmup Iteration  29: 20708.033 ops/s
# Warmup Iteration  30: 20163.993 ops/s
Iteration   1: 21221.709 ops/s
Iteration   2: 21039.250 ops/s
Iteration   3: 20481.863 ops/s
Iteration   4: 20585.976 ops/s
Iteration   5: 20511.593 ops/s
Iteration   6: 20578.161 ops/s
Iteration   7: 20643.094 ops/s
Iteration   8: 21158.107 ops/s
Iteration   9: 20307.843 ops/s
Iteration  10: 21171.533 ops/s
Iteration  11: 20502.951 ops/s
Iteration  12: 21124.221 ops/s
Iteration  13: 20217.943 ops/s
Iteration  14: 20851.593 ops/s
Iteration  15: 20457.265 ops/s
Iteration  16: 20695.882 ops/s
Iteration  17: 20906.707 ops/s
Iteration  18: 20812.070 ops/s
Iteration  19: 20154.492 ops/s
Iteration  20: 20271.585 ops/s
Iteration  21: 20682.017 ops/s
Iteration  22: 20146.911 ops/s
Iteration  23: 20641.958 ops/s
Iteration  24: 20435.374 ops/s
Iteration  25: 20715.190 ops/s
Iteration  26: 20463.785 ops/s
Iteration  27: 21178.727 ops/s
Iteration  28: 20897.823 ops/s
Iteration  29: 20518.556 ops/s
Iteration  30: 20318.918 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_511._Benchmark.benchmark_Cluster_511":
  20656.437 ±(99.9%) 214.246 ops/s [Average]
  (min, avg, max) = (20146.911, 20656.437, 21221.709), stdev = 320.673
  CI (99.9%): [20442.191, 20870.682] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_511._Benchmark.benchmark_Cluster_511  thrpt   30  20656.437 ± 214.246  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_512._Benchmark.benchmark_Cluster_512$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_512._Benchmark.benchmark_Cluster_512

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12433.731 ops/s
# Warmup Iteration   2: 71922.357 ops/s
# Warmup Iteration   3: 170238.326 ops/s
# Warmup Iteration   4: 190038.659 ops/s
# Warmup Iteration   5: 191047.582 ops/s
# Warmup Iteration   6: 187349.219 ops/s
# Warmup Iteration   7: 194515.509 ops/s
# Warmup Iteration   8: 187571.499 ops/s
# Warmup Iteration   9: 188868.493 ops/s
# Warmup Iteration  10: 195353.541 ops/s
# Warmup Iteration  11: 181020.829 ops/s
# Warmup Iteration  12: 192869.560 ops/s
# Warmup Iteration  13: 198355.960 ops/s
# Warmup Iteration  14: 186426.686 ops/s
# Warmup Iteration  15: 193838.096 ops/s
# Warmup Iteration  16: 188398.632 ops/s
# Warmup Iteration  17: 200091.912 ops/s
# Warmup Iteration  18: 194642.359 ops/s
# Warmup Iteration  19: 213465.914 ops/s
# Warmup Iteration  20: 196297.541 ops/s
# Warmup Iteration  21: 206006.038 ops/s
# Warmup Iteration  22: 193536.384 ops/s
# Warmup Iteration  23: 201572.665 ops/s
# Warmup Iteration  24: 200339.926 ops/s
# Warmup Iteration  25: 197929.432 ops/s
# Warmup Iteration  26: 200841.934 ops/s
# Warmup Iteration  27: 199034.912 ops/s
# Warmup Iteration  28: 195755.193 ops/s
# Warmup Iteration  29: 201174.057 ops/s
# Warmup Iteration  30: 193934.212 ops/s
Iteration   1: 199736.565 ops/s
Iteration   2: 175917.708 ops/s
Iteration   3: 184185.246 ops/s
Iteration   4: 198701.548 ops/s
Iteration   5: 196035.404 ops/s
Iteration   6: 200106.829 ops/s
Iteration   7: 196803.874 ops/s
Iteration   8: 208412.774 ops/s
Iteration   9: 192203.652 ops/s
Iteration  10: 194103.980 ops/s
Iteration  11: 210200.158 ops/s
Iteration  12: 192500.314 ops/s
Iteration  13: 204928.506 ops/s
Iteration  14: 208556.315 ops/s
Iteration  15: 196568.358 ops/s
Iteration  16: 197273.454 ops/s
Iteration  17: 210011.689 ops/s
Iteration  18: 195459.867 ops/s
Iteration  19: 189438.875 ops/s
Iteration  20: 211571.113 ops/s
Iteration  21: 207314.084 ops/s
Iteration  22: 200969.761 ops/s
Iteration  23: 207315.259 ops/s
Iteration  24: 197512.649 ops/s
Iteration  25: 212732.571 ops/s
Iteration  26: 209437.554 ops/s
Iteration  27: 196290.937 ops/s
Iteration  28: 201493.572 ops/s
Iteration  29: 199697.367 ops/s
Iteration  30: 206075.708 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_512._Benchmark.benchmark_Cluster_512":
  200051.856 ±(99.9%) 5665.858 ops/s [Average]
  (min, avg, max) = (175917.708, 200051.856, 212732.571), stdev = 8480.390
  CI (99.9%): [194385.999, 205717.714] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_512._Benchmark.benchmark_Cluster_512  thrpt   30  200051.856 ± 5665.858  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_513._Benchmark.benchmark_Cluster_513$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_513._Benchmark.benchmark_Cluster_513

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6646.104 ops/s
# Warmup Iteration   2: 28448.620 ops/s
# Warmup Iteration   3: 36675.517 ops/s
# Warmup Iteration   4: 29406.522 ops/s
# Warmup Iteration   5: 62524.451 ops/s
# Warmup Iteration   6: 85043.421 ops/s
# Warmup Iteration   7: 81398.568 ops/s
# Warmup Iteration   8: 89887.743 ops/s
# Warmup Iteration   9: 101134.201 ops/s
# Warmup Iteration  10: 82634.832 ops/s
# Warmup Iteration  11: 85220.625 ops/s
# Warmup Iteration  12: 109065.110 ops/s
# Warmup Iteration  13: 97348.462 ops/s
# Warmup Iteration  14: 98580.835 ops/s
# Warmup Iteration  15: 97162.412 ops/s
# Warmup Iteration  16: 104365.577 ops/s
# Warmup Iteration  17: 87929.150 ops/s
# Warmup Iteration  18: 94416.460 ops/s
# Warmup Iteration  19: 94312.878 ops/s
# Warmup Iteration  20: 100420.555 ops/s
# Warmup Iteration  21: 84323.821 ops/s
# Warmup Iteration  22: 92898.805 ops/s
# Warmup Iteration  23: 105679.196 ops/s
# Warmup Iteration  24: 92617.477 ops/s
# Warmup Iteration  25: 104439.406 ops/s
# Warmup Iteration  26: 93125.872 ops/s
# Warmup Iteration  27: 92735.873 ops/s
# Warmup Iteration  28: 90405.334 ops/s
# Warmup Iteration  29: 97645.762 ops/s
# Warmup Iteration  30: 96894.619 ops/s
Iteration   1: 92204.168 ops/s
Iteration   2: 96249.739 ops/s
Iteration   3: 101238.645 ops/s
Iteration   4: 105968.128 ops/s
Iteration   5: 90252.452 ops/s
Iteration   6: 87328.261 ops/s
Iteration   7: 100280.042 ops/s
Iteration   8: 101564.059 ops/s
Iteration   9: 95112.047 ops/s
Iteration  10: 89935.378 ops/s
Iteration  11: 101229.815 ops/s
Iteration  12: 90945.871 ops/s
Iteration  13: 96363.952 ops/s
Iteration  14: 101921.446 ops/s
Iteration  15: 102962.547 ops/s
Iteration  16: 98863.671 ops/s
Iteration  17: 98958.475 ops/s
Iteration  18: 98475.838 ops/s
Iteration  19: 84152.871 ops/s
Iteration  20: 91221.918 ops/s
Iteration  21: 88330.512 ops/s
Iteration  22: 95065.658 ops/s
Iteration  23: 88444.971 ops/s
Iteration  24: 92585.905 ops/s
Iteration  25: 96517.012 ops/s
Iteration  26: 103511.951 ops/s
Iteration  27: 91182.793 ops/s
Iteration  28: 104060.290 ops/s
Iteration  29: 83330.564 ops/s
Iteration  30: 85555.695 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_513._Benchmark.benchmark_Cluster_513":
  95127.156 ±(99.9%) 4260.404 ops/s [Average]
  (min, avg, max) = (83330.564, 95127.156, 105968.128), stdev = 6376.773
  CI (99.9%): [90866.752, 99387.560] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_513._Benchmark.benchmark_Cluster_513  thrpt   30  95127.156 ± 4260.404  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_514._Benchmark.benchmark_Cluster_514$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_514._Benchmark.benchmark_Cluster_514

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 23650.352 ops/s
# Warmup Iteration   2: 69788.336 ops/s
# Warmup Iteration   3: 149671.362 ops/s
# Warmup Iteration   4: 145681.097 ops/s
# Warmup Iteration   5: 153384.691 ops/s
# Warmup Iteration   6: 148369.421 ops/s
# Warmup Iteration   7: 148022.911 ops/s
# Warmup Iteration   8: 150663.962 ops/s
# Warmup Iteration   9: 146485.919 ops/s
# Warmup Iteration  10: 150952.773 ops/s
# Warmup Iteration  11: 148485.420 ops/s
# Warmup Iteration  12: 151857.168 ops/s
# Warmup Iteration  13: 151408.451 ops/s
# Warmup Iteration  14: 145678.822 ops/s
# Warmup Iteration  15: 151524.822 ops/s
# Warmup Iteration  16: 148990.782 ops/s
# Warmup Iteration  17: 162007.181 ops/s
# Warmup Iteration  18: 160492.141 ops/s
# Warmup Iteration  19: 156482.846 ops/s
# Warmup Iteration  20: 161758.267 ops/s
# Warmup Iteration  21: 162740.280 ops/s
# Warmup Iteration  22: 156928.589 ops/s
# Warmup Iteration  23: 159530.643 ops/s
# Warmup Iteration  24: 161103.646 ops/s
# Warmup Iteration  25: 154968.530 ops/s
# Warmup Iteration  26: 131118.398 ops/s
# Warmup Iteration  27: 164419.602 ops/s
# Warmup Iteration  28: 158445.917 ops/s
# Warmup Iteration  29: 157157.411 ops/s
# Warmup Iteration  30: 161828.060 ops/s
Iteration   1: 150593.473 ops/s
Iteration   2: 166151.262 ops/s
Iteration   3: 162601.404 ops/s
Iteration   4: 153010.136 ops/s
Iteration   5: 162560.302 ops/s
Iteration   6: 158454.477 ops/s
Iteration   7: 161345.299 ops/s
Iteration   8: 155880.526 ops/s
Iteration   9: 155997.822 ops/s
Iteration  10: 163349.913 ops/s
Iteration  11: 156089.713 ops/s
Iteration  12: 168718.593 ops/s
Iteration  13: 158908.115 ops/s
Iteration  14: 158445.906 ops/s
Iteration  15: 160761.718 ops/s
Iteration  16: 163626.102 ops/s
Iteration  17: 161307.558 ops/s
Iteration  18: 158211.610 ops/s
Iteration  19: 159069.757 ops/s
Iteration  20: 162940.239 ops/s
Iteration  21: 162493.465 ops/s
Iteration  22: 160462.714 ops/s
Iteration  23: 161884.949 ops/s
Iteration  24: 158808.782 ops/s
Iteration  25: 163094.143 ops/s
Iteration  26: 158153.040 ops/s
Iteration  27: 159070.060 ops/s
Iteration  28: 162832.518 ops/s
Iteration  29: 161650.546 ops/s
Iteration  30: 157826.264 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_514._Benchmark.benchmark_Cluster_514":
  160143.347 ±(99.9%) 2481.550 ops/s [Average]
  (min, avg, max) = (150593.473, 160143.347, 168718.593), stdev = 3714.267
  CI (99.9%): [157661.797, 162624.896] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_514._Benchmark.benchmark_Cluster_514  thrpt   30  160143.347 ± 2481.550  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_515._Benchmark.benchmark_Cluster_515$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_515._Benchmark.benchmark_Cluster_515

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 27153.842 ops/s
# Warmup Iteration   2: 111683.146 ops/s
# Warmup Iteration   3: 137556.644 ops/s
# Warmup Iteration   4: 145445.872 ops/s
# Warmup Iteration   5: 148436.387 ops/s
# Warmup Iteration   6: 131679.093 ops/s
# Warmup Iteration   7: 152936.134 ops/s
# Warmup Iteration   8: 151536.512 ops/s
# Warmup Iteration   9: 154976.127 ops/s
# Warmup Iteration  10: 147234.626 ops/s
# Warmup Iteration  11: 149989.803 ops/s
# Warmup Iteration  12: 159561.282 ops/s
# Warmup Iteration  13: 148893.822 ops/s
# Warmup Iteration  14: 155160.185 ops/s
# Warmup Iteration  15: 149335.035 ops/s
# Warmup Iteration  16: 156568.925 ops/s
# Warmup Iteration  17: 161615.582 ops/s
# Warmup Iteration  18: 157170.805 ops/s
# Warmup Iteration  19: 162218.980 ops/s
# Warmup Iteration  20: 158885.761 ops/s
# Warmup Iteration  21: 159206.775 ops/s
# Warmup Iteration  22: 164094.310 ops/s
# Warmup Iteration  23: 157956.417 ops/s
# Warmup Iteration  24: 155531.639 ops/s
# Warmup Iteration  25: 160635.590 ops/s
# Warmup Iteration  26: 156802.580 ops/s
# Warmup Iteration  27: 161168.440 ops/s
# Warmup Iteration  28: 157561.533 ops/s
# Warmup Iteration  29: 167767.910 ops/s
# Warmup Iteration  30: 161653.964 ops/s
Iteration   1: 155487.367 ops/s
Iteration   2: 160021.854 ops/s
Iteration   3: 154813.220 ops/s
Iteration   4: 165638.192 ops/s
Iteration   5: 162242.608 ops/s
Iteration   6: 156779.881 ops/s
Iteration   7: 164334.042 ops/s
Iteration   8: 164872.969 ops/s
Iteration   9: 168209.814 ops/s
Iteration  10: 152547.881 ops/s
Iteration  11: 161324.253 ops/s
Iteration  12: 154971.481 ops/s
Iteration  13: 158681.595 ops/s
Iteration  14: 154167.857 ops/s
Iteration  15: 157843.736 ops/s
Iteration  16: 166344.208 ops/s
Iteration  17: 154779.690 ops/s
Iteration  18: 161758.509 ops/s
Iteration  19: 155750.185 ops/s
Iteration  20: 164153.018 ops/s
Iteration  21: 159215.793 ops/s
Iteration  22: 160693.574 ops/s
Iteration  23: 161802.825 ops/s
Iteration  24: 157233.581 ops/s
Iteration  25: 163886.491 ops/s
Iteration  26: 158190.611 ops/s
Iteration  27: 161822.298 ops/s
Iteration  28: 156393.654 ops/s
Iteration  29: 161072.282 ops/s
Iteration  30: 164992.109 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_515._Benchmark.benchmark_Cluster_515":
  160000.853 ±(99.9%) 2790.887 ops/s [Average]
  (min, avg, max) = (152547.881, 160000.853, 168209.814), stdev = 4177.269
  CI (99.9%): [157209.966, 162791.740] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_515._Benchmark.benchmark_Cluster_515  thrpt   30  160000.853 ± 2790.887  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_516._Benchmark.benchmark_Cluster_516$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_516._Benchmark.benchmark_Cluster_516

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12211.655 ops/s
# Warmup Iteration   2: 38725.539 ops/s
# Warmup Iteration   3: 25777.270 ops/s
# Warmup Iteration   4: 38898.551 ops/s
# Warmup Iteration   5: 98676.810 ops/s
# Warmup Iteration   6: 111998.406 ops/s
# Warmup Iteration   7: 120132.753 ops/s
# Warmup Iteration   8: 118238.994 ops/s
# Warmup Iteration   9: 111297.992 ops/s
# Warmup Iteration  10: 112949.286 ops/s
# Warmup Iteration  11: 112983.229 ops/s
# Warmup Iteration  12: 111138.395 ops/s
# Warmup Iteration  13: 116784.248 ops/s
# Warmup Iteration  14: 111694.314 ops/s
# Warmup Iteration  15: 120758.054 ops/s
# Warmup Iteration  16: 107767.885 ops/s
# Warmup Iteration  17: 120444.721 ops/s
# Warmup Iteration  18: 118081.154 ops/s
# Warmup Iteration  19: 118132.179 ops/s
# Warmup Iteration  20: 104110.379 ops/s
# Warmup Iteration  21: 117920.065 ops/s
# Warmup Iteration  22: 119438.583 ops/s
# Warmup Iteration  23: 119843.113 ops/s
# Warmup Iteration  24: 119159.168 ops/s
# Warmup Iteration  25: 117353.680 ops/s
# Warmup Iteration  26: 119110.426 ops/s
# Warmup Iteration  27: 118245.157 ops/s
# Warmup Iteration  28: 119811.899 ops/s
# Warmup Iteration  29: 120931.945 ops/s
# Warmup Iteration  30: 119927.960 ops/s
Iteration   1: 120378.000 ops/s
Iteration   2: 118514.366 ops/s
Iteration   3: 122696.925 ops/s
Iteration   4: 120439.930 ops/s
Iteration   5: 114053.947 ops/s
Iteration   6: 125920.984 ops/s
Iteration   7: 116686.420 ops/s
Iteration   8: 120134.513 ops/s
Iteration   9: 123967.833 ops/s
Iteration  10: 116995.648 ops/s
Iteration  11: 120931.549 ops/s
Iteration  12: 118320.614 ops/s
Iteration  13: 118381.104 ops/s
Iteration  14: 124452.943 ops/s
Iteration  15: 113284.215 ops/s
Iteration  16: 123732.515 ops/s
Iteration  17: 118228.000 ops/s
Iteration  18: 120373.730 ops/s
Iteration  19: 124269.812 ops/s
Iteration  20: 118559.051 ops/s
Iteration  21: 118709.144 ops/s
Iteration  22: 124412.651 ops/s
Iteration  23: 119687.702 ops/s
Iteration  24: 120288.428 ops/s
Iteration  25: 121109.927 ops/s
Iteration  26: 118299.097 ops/s
Iteration  27: 123974.325 ops/s
Iteration  28: 117094.008 ops/s
Iteration  29: 125035.923 ops/s
Iteration  30: 116663.873 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_516._Benchmark.benchmark_Cluster_516":
  120186.573 ±(99.9%) 2183.997 ops/s [Average]
  (min, avg, max) = (113284.215, 120186.573, 125920.984), stdev = 3268.904
  CI (99.9%): [118002.576, 122370.569] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_516._Benchmark.benchmark_Cluster_516  thrpt   30  120186.573 ± 2183.997  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_517._Benchmark.benchmark_Cluster_517$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_517._Benchmark.benchmark_Cluster_517

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.701 ops/s
# Warmup Iteration   2: 7301.609 ops/s
# Warmup Iteration   3: 38139.098 ops/s
# Warmup Iteration   4: 36903.267 ops/s
# Warmup Iteration   5: 42668.957 ops/s
# Warmup Iteration   6: 41924.182 ops/s
# Warmup Iteration   7: 44447.546 ops/s
# Warmup Iteration   8: 126552.976 ops/s
# Warmup Iteration   9: 157884.374 ops/s
# Warmup Iteration  10: 164262.488 ops/s
# Warmup Iteration  11: 168944.163 ops/s
# Warmup Iteration  12: 155919.078 ops/s
# Warmup Iteration  13: 159567.111 ops/s
# Warmup Iteration  14: 149892.291 ops/s
# Warmup Iteration  15: 155537.131 ops/s
# Warmup Iteration  16: 162372.047 ops/s
# Warmup Iteration  17: 157603.875 ops/s
# Warmup Iteration  18: 166056.490 ops/s
# Warmup Iteration  19: 161969.486 ops/s
# Warmup Iteration  20: 162506.858 ops/s
# Warmup Iteration  21: 159414.793 ops/s
# Warmup Iteration  22: 162703.596 ops/s
# Warmup Iteration  23: 162146.461 ops/s
# Warmup Iteration  24: 159329.686 ops/s
# Warmup Iteration  25: 158500.772 ops/s
# Warmup Iteration  26: 164236.928 ops/s
# Warmup Iteration  27: 153273.630 ops/s
# Warmup Iteration  28: 163067.620 ops/s
# Warmup Iteration  29: 156882.963 ops/s
# Warmup Iteration  30: 164521.576 ops/s
Iteration   1: 166288.301 ops/s
Iteration   2: 157311.967 ops/s
Iteration   3: 160248.737 ops/s
Iteration   4: 166133.617 ops/s
Iteration   5: 156633.104 ops/s
Iteration   6: 160212.449 ops/s
Iteration   7: 165430.695 ops/s
Iteration   8: 157708.894 ops/s
Iteration   9: 163634.393 ops/s
Iteration  10: 159302.115 ops/s
Iteration  11: 164743.858 ops/s
Iteration  12: 158545.250 ops/s
Iteration  13: 162180.467 ops/s
Iteration  14: 168572.939 ops/s
Iteration  15: 162950.538 ops/s
Iteration  16: 158335.830 ops/s
Iteration  17: 165022.178 ops/s
Iteration  18: 156941.624 ops/s
Iteration  19: 164631.367 ops/s
Iteration  20: 157978.226 ops/s
Iteration  21: 159464.406 ops/s
Iteration  22: 160113.218 ops/s
Iteration  23: 161018.337 ops/s
Iteration  24: 164301.791 ops/s
Iteration  25: 162144.977 ops/s
Iteration  26: 161681.964 ops/s
Iteration  27: 161501.163 ops/s
Iteration  28: 158578.216 ops/s
Iteration  29: 167412.194 ops/s
Iteration  30: 155237.481 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_517._Benchmark.benchmark_Cluster_517":
  161475.343 ±(99.9%) 2362.456 ops/s [Average]
  (min, avg, max) = (155237.481, 161475.343, 168572.939), stdev = 3536.014
  CI (99.9%): [159112.887, 163837.800] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_517._Benchmark.benchmark_Cluster_517  thrpt   30  161475.343 ± 2362.456  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_518._Benchmark.benchmark_Cluster_518$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_518._Benchmark.benchmark_Cluster_518

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.781 ops/s
# Warmup Iteration   2: 12149.549 ops/s
# Warmup Iteration   3: 35679.295 ops/s
# Warmup Iteration   4: 37255.500 ops/s
# Warmup Iteration   5: 55367.753 ops/s
# Warmup Iteration   6: 84048.638 ops/s
# Warmup Iteration   7: 119446.958 ops/s
# Warmup Iteration   8: 128836.192 ops/s
# Warmup Iteration   9: 132116.648 ops/s
# Warmup Iteration  10: 127157.377 ops/s
# Warmup Iteration  11: 132197.678 ops/s
# Warmup Iteration  12: 130818.944 ops/s
# Warmup Iteration  13: 126834.517 ops/s
# Warmup Iteration  14: 113083.991 ops/s
# Warmup Iteration  15: 127698.745 ops/s
# Warmup Iteration  16: 134919.421 ops/s
# Warmup Iteration  17: 128622.411 ops/s
# Warmup Iteration  18: 128711.378 ops/s
# Warmup Iteration  19: 128976.518 ops/s
# Warmup Iteration  20: 128605.193 ops/s
# Warmup Iteration  21: 131457.309 ops/s
# Warmup Iteration  22: 128351.397 ops/s
# Warmup Iteration  23: 129163.005 ops/s
# Warmup Iteration  24: 125691.622 ops/s
# Warmup Iteration  25: 128070.632 ops/s
# Warmup Iteration  26: 134445.953 ops/s
# Warmup Iteration  27: 128493.166 ops/s
# Warmup Iteration  28: 132859.445 ops/s
# Warmup Iteration  29: 129616.504 ops/s
# Warmup Iteration  30: 130661.984 ops/s
Iteration   1: 129914.919 ops/s
Iteration   2: 126417.677 ops/s
Iteration   3: 131903.239 ops/s
Iteration   4: 136445.640 ops/s
Iteration   5: 132990.368 ops/s
Iteration   6: 127257.451 ops/s
Iteration   7: 131462.009 ops/s
Iteration   8: 130201.009 ops/s
Iteration   9: 128040.530 ops/s
Iteration  10: 133315.653 ops/s
Iteration  11: 123774.584 ops/s
Iteration  12: 129627.548 ops/s
Iteration  13: 126362.131 ops/s
Iteration  14: 125607.591 ops/s
Iteration  15: 131269.502 ops/s
Iteration  16: 127191.389 ops/s
Iteration  17: 125636.284 ops/s
Iteration  18: 132115.116 ops/s
Iteration  19: 125861.149 ops/s
Iteration  20: 130015.587 ops/s
Iteration  21: 136184.086 ops/s
Iteration  22: 125502.648 ops/s
Iteration  23: 131142.792 ops/s
Iteration  24: 131564.052 ops/s
Iteration  25: 128114.394 ops/s
Iteration  26: 130774.664 ops/s
Iteration  27: 126611.249 ops/s
Iteration  28: 131820.658 ops/s
Iteration  29: 130245.392 ops/s
Iteration  30: 129583.430 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_518._Benchmark.benchmark_Cluster_518":
  129565.091 ±(99.9%) 2108.333 ops/s [Average]
  (min, avg, max) = (123774.584, 129565.091, 136445.640), stdev = 3155.653
  CI (99.9%): [127456.759, 131673.424] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_518._Benchmark.benchmark_Cluster_518  thrpt   30  129565.091 ± 2108.333  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_519._Benchmark.benchmark_Cluster_519$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_519._Benchmark.benchmark_Cluster_519

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 22610.003 ops/s
# Warmup Iteration   2: 89609.558 ops/s
# Warmup Iteration   3: 126601.478 ops/s
# Warmup Iteration   4: 130596.602 ops/s
# Warmup Iteration   5: 115251.477 ops/s
# Warmup Iteration   6: 139229.554 ops/s
# Warmup Iteration   7: 136902.493 ops/s
# Warmup Iteration   8: 140266.393 ops/s
# Warmup Iteration   9: 140394.815 ops/s
# Warmup Iteration  10: 137935.270 ops/s
# Warmup Iteration  11: 139523.890 ops/s
# Warmup Iteration  12: 133174.568 ops/s
# Warmup Iteration  13: 138353.468 ops/s
# Warmup Iteration  14: 136325.592 ops/s
# Warmup Iteration  15: 138557.813 ops/s
# Warmup Iteration  16: 138603.342 ops/s
# Warmup Iteration  17: 142091.983 ops/s
# Warmup Iteration  18: 149048.275 ops/s
# Warmup Iteration  19: 140093.877 ops/s
# Warmup Iteration  20: 147847.780 ops/s
# Warmup Iteration  21: 143479.175 ops/s
# Warmup Iteration  22: 146159.626 ops/s
# Warmup Iteration  23: 142185.348 ops/s
# Warmup Iteration  24: 144828.596 ops/s
# Warmup Iteration  25: 139826.630 ops/s
# Warmup Iteration  26: 148712.811 ops/s
# Warmup Iteration  27: 138682.705 ops/s
# Warmup Iteration  28: 142737.642 ops/s
# Warmup Iteration  29: 151285.772 ops/s
# Warmup Iteration  30: 140980.360 ops/s
Iteration   1: 147428.580 ops/s
Iteration   2: 142800.463 ops/s
Iteration   3: 149563.222 ops/s
Iteration   4: 146507.929 ops/s
Iteration   5: 140626.464 ops/s
Iteration   6: 145973.280 ops/s
Iteration   7: 140324.383 ops/s
Iteration   8: 143537.503 ops/s
Iteration   9: 151383.754 ops/s
Iteration  10: 139917.971 ops/s
Iteration  11: 150408.957 ops/s
Iteration  12: 143690.830 ops/s
Iteration  13: 141577.533 ops/s
Iteration  14: 149010.259 ops/s
Iteration  15: 145049.119 ops/s
Iteration  16: 142265.968 ops/s
Iteration  17: 144156.486 ops/s
Iteration  18: 145893.320 ops/s
Iteration  19: 142495.097 ops/s
Iteration  20: 148338.977 ops/s
Iteration  21: 139702.447 ops/s
Iteration  22: 143596.933 ops/s
Iteration  23: 143315.664 ops/s
Iteration  24: 142624.328 ops/s
Iteration  25: 149583.861 ops/s
Iteration  26: 135281.089 ops/s
Iteration  27: 144883.145 ops/s
Iteration  28: 148411.672 ops/s
Iteration  29: 143158.933 ops/s
Iteration  30: 148143.015 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_519._Benchmark.benchmark_Cluster_519":
  144655.039 ±(99.9%) 2496.762 ops/s [Average]
  (min, avg, max) = (135281.089, 144655.039, 151383.754), stdev = 3737.036
  CI (99.9%): [142158.278, 147151.801] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_519._Benchmark.benchmark_Cluster_519  thrpt   30  144655.039 ± 2496.762  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_52._Benchmark.benchmark_Cluster_52$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_52._Benchmark.benchmark_Cluster_52

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4747.070 ops/s
# Warmup Iteration   2: 41594.423 ops/s
# Warmup Iteration   3: 57106.005 ops/s
# Warmup Iteration   4: 94909.043 ops/s
# Warmup Iteration   5: 113711.563 ops/s
# Warmup Iteration   6: 112258.592 ops/s
# Warmup Iteration   7: 126408.699 ops/s
# Warmup Iteration   8: 81090.087 ops/s
# Warmup Iteration   9: 113375.184 ops/s
# Warmup Iteration  10: 123318.683 ops/s
# Warmup Iteration  11: 120105.029 ops/s
# Warmup Iteration  12: 125279.995 ops/s
# Warmup Iteration  13: 118880.864 ops/s
# Warmup Iteration  14: 128110.453 ops/s
# Warmup Iteration  15: 119098.804 ops/s
# Warmup Iteration  16: 122083.144 ops/s
# Warmup Iteration  17: 132202.791 ops/s
# Warmup Iteration  18: 122936.238 ops/s
# Warmup Iteration  19: 128667.068 ops/s
# Warmup Iteration  20: 132188.953 ops/s
# Warmup Iteration  21: 129603.828 ops/s
# Warmup Iteration  22: 126566.424 ops/s
# Warmup Iteration  23: 129431.935 ops/s
# Warmup Iteration  24: 128576.531 ops/s
# Warmup Iteration  25: 126681.288 ops/s
# Warmup Iteration  26: 130232.829 ops/s
# Warmup Iteration  27: 118628.837 ops/s
# Warmup Iteration  28: 130932.169 ops/s
# Warmup Iteration  29: 127593.407 ops/s
# Warmup Iteration  30: 130649.182 ops/s
Iteration   1: 127672.612 ops/s
Iteration   2: 127713.128 ops/s
Iteration   3: 132621.233 ops/s
Iteration   4: 125830.671 ops/s
Iteration   5: 130308.680 ops/s
Iteration   6: 124990.298 ops/s
Iteration   7: 129523.618 ops/s
Iteration   8: 127504.163 ops/s
Iteration   9: 131577.212 ops/s
Iteration  10: 127616.067 ops/s
Iteration  11: 129482.447 ops/s
Iteration  12: 125278.175 ops/s
Iteration  13: 127419.477 ops/s
Iteration  14: 128808.478 ops/s
Iteration  15: 125773.201 ops/s
Iteration  16: 127690.566 ops/s
Iteration  17: 134576.539 ops/s
Iteration  18: 125344.050 ops/s
Iteration  19: 133286.823 ops/s
Iteration  20: 124191.905 ops/s
Iteration  21: 130099.791 ops/s
Iteration  22: 132008.678 ops/s
Iteration  23: 128101.426 ops/s
Iteration  24: 131779.480 ops/s
Iteration  25: 131259.807 ops/s
Iteration  26: 126429.849 ops/s
Iteration  27: 135284.485 ops/s
Iteration  28: 122377.585 ops/s
Iteration  29: 128074.769 ops/s
Iteration  30: 127668.861 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_52._Benchmark.benchmark_Cluster_52":
  128676.469 ±(99.9%) 2088.895 ops/s [Average]
  (min, avg, max) = (122377.585, 128676.469, 135284.485), stdev = 3126.560
  CI (99.9%): [126587.574, 130765.364] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_52._Benchmark.benchmark_Cluster_52  thrpt   30  128676.469 ± 2088.895  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_520._Benchmark.benchmark_Cluster_520$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_520._Benchmark.benchmark_Cluster_520

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2425.885 ops/s
# Warmup Iteration   2: 7869.057 ops/s
# Warmup Iteration   3: 27672.172 ops/s
# Warmup Iteration   4: 30087.792 ops/s
# Warmup Iteration   5: 22873.389 ops/s
# Warmup Iteration   6: 46003.917 ops/s
# Warmup Iteration   7: 80830.142 ops/s
# Warmup Iteration   8: 71427.010 ops/s
# Warmup Iteration   9: 90818.163 ops/s
# Warmup Iteration  10: 89988.434 ops/s
# Warmup Iteration  11: 88631.933 ops/s
# Warmup Iteration  12: 84586.655 ops/s
# Warmup Iteration  13: 90513.060 ops/s
# Warmup Iteration  14: 84429.688 ops/s
# Warmup Iteration  15: 88170.391 ops/s
# Warmup Iteration  16: 86300.882 ops/s
# Warmup Iteration  17: 89944.977 ops/s
# Warmup Iteration  18: 91750.755 ops/s
# Warmup Iteration  19: 87268.790 ops/s
# Warmup Iteration  20: 92324.359 ops/s
# Warmup Iteration  21: 86543.649 ops/s
# Warmup Iteration  22: 89437.657 ops/s
# Warmup Iteration  23: 91412.789 ops/s
# Warmup Iteration  24: 87880.830 ops/s
# Warmup Iteration  25: 89126.599 ops/s
# Warmup Iteration  26: 91572.996 ops/s
# Warmup Iteration  27: 88412.715 ops/s
# Warmup Iteration  28: 91021.965 ops/s
# Warmup Iteration  29: 90638.958 ops/s
# Warmup Iteration  30: 87034.174 ops/s
Iteration   1: 91116.673 ops/s
Iteration   2: 91716.112 ops/s
Iteration   3: 89942.911 ops/s
Iteration   4: 88933.447 ops/s
Iteration   5: 88144.754 ops/s
Iteration   6: 88551.943 ops/s
Iteration   7: 92185.636 ops/s
Iteration   8: 88212.291 ops/s
Iteration   9: 90158.907 ops/s
Iteration  10: 89271.657 ops/s
Iteration  11: 90526.979 ops/s
Iteration  12: 89554.737 ops/s
Iteration  13: 86374.828 ops/s
Iteration  14: 90879.967 ops/s
Iteration  15: 87045.176 ops/s
Iteration  16: 89668.644 ops/s
Iteration  17: 86518.659 ops/s
Iteration  18: 86040.090 ops/s
Iteration  19: 93808.533 ops/s
Iteration  20: 88331.241 ops/s
Iteration  21: 90536.386 ops/s
Iteration  22: 87345.808 ops/s
Iteration  23: 91011.367 ops/s
Iteration  24: 87582.935 ops/s
Iteration  25: 90462.022 ops/s
Iteration  26: 89242.623 ops/s
Iteration  27: 89296.470 ops/s
Iteration  28: 88652.682 ops/s
Iteration  29: 91312.221 ops/s
Iteration  30: 88397.383 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_520._Benchmark.benchmark_Cluster_520":
  89360.769 ±(99.9%) 1222.219 ops/s [Average]
  (min, avg, max) = (86040.090, 89360.769, 93808.533), stdev = 1829.360
  CI (99.9%): [88138.551, 90582.988] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_520._Benchmark.benchmark_Cluster_520  thrpt   30  89360.769 ± 1222.219  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_521._Benchmark.benchmark_Cluster_521$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_521._Benchmark.benchmark_Cluster_521

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.629 ops/s
# Warmup Iteration   2: 1284.097 ops/s
# Warmup Iteration   3: 4297.870 ops/s
# Warmup Iteration   4: 13352.489 ops/s
# Warmup Iteration   5: 19791.078 ops/s
# Warmup Iteration   6: 18438.952 ops/s
# Warmup Iteration   7: 26259.290 ops/s
# Warmup Iteration   8: 24163.891 ops/s
# Warmup Iteration   9: 25857.479 ops/s
# Warmup Iteration  10: 21126.766 ops/s
# Warmup Iteration  11: 31858.875 ops/s
# Warmup Iteration  12: 34800.351 ops/s
# Warmup Iteration  13: 28508.445 ops/s
# Warmup Iteration  14: 29707.354 ops/s
# Warmup Iteration  15: 30569.844 ops/s
# Warmup Iteration  16: 31299.124 ops/s
# Warmup Iteration  17: 29387.708 ops/s
# Warmup Iteration  18: 32888.480 ops/s
# Warmup Iteration  19: 37639.637 ops/s
# Warmup Iteration  20: 28110.161 ops/s
# Warmup Iteration  21: 31864.425 ops/s
# Warmup Iteration  22: 64392.545 ops/s
# Warmup Iteration  23: 81271.886 ops/s
# Warmup Iteration  24: 75485.898 ops/s
# Warmup Iteration  25: 78977.776 ops/s
# Warmup Iteration  26: 76676.003 ops/s
# Warmup Iteration  27: 77952.928 ops/s
# Warmup Iteration  28: 77332.056 ops/s
# Warmup Iteration  29: 78421.668 ops/s
# Warmup Iteration  30: 79185.090 ops/s
Iteration   1: 77282.544 ops/s
Iteration   2: 72386.947 ops/s
Iteration   3: 77870.065 ops/s
Iteration   4: 78539.010 ops/s
Iteration   5: 80488.432 ops/s
Iteration   6: 75745.232 ops/s
Iteration   7: 79911.403 ops/s
Iteration   8: 81953.516 ops/s
Iteration   9: 76177.311 ops/s
Iteration  10: 73275.114 ops/s
Iteration  11: 79087.110 ops/s
Iteration  12: 80489.570 ops/s
Iteration  13: 77028.440 ops/s
Iteration  14: 76776.390 ops/s
Iteration  15: 77543.103 ops/s
Iteration  16: 82145.595 ops/s
Iteration  17: 75113.803 ops/s
Iteration  18: 79479.692 ops/s
Iteration  19: 77295.521 ops/s
Iteration  20: 77774.947 ops/s
Iteration  21: 80529.715 ops/s
Iteration  22: 74827.280 ops/s
Iteration  23: 82924.375 ops/s
Iteration  24: 80153.767 ops/s
Iteration  25: 76134.820 ops/s
Iteration  26: 79203.992 ops/s
Iteration  27: 77108.317 ops/s
Iteration  28: 78989.554 ops/s
Iteration  29: 79895.572 ops/s
Iteration  30: 76226.123 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_521._Benchmark.benchmark_Cluster_521":
  78078.575 ±(99.9%) 1689.427 ops/s [Average]
  (min, avg, max) = (72386.947, 78078.575, 82924.375), stdev = 2528.654
  CI (99.9%): [76389.149, 79768.002] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_521._Benchmark.benchmark_Cluster_521  thrpt   30  78078.575 ± 1689.427  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_522._Benchmark.benchmark_Cluster_522$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_522._Benchmark.benchmark_Cluster_522

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16550.096 ops/s
# Warmup Iteration   2: 43044.828 ops/s
# Warmup Iteration   3: 45250.403 ops/s
# Warmup Iteration   4: 45193.663 ops/s
# Warmup Iteration   5: 71826.605 ops/s
# Warmup Iteration   6: 98224.075 ops/s
# Warmup Iteration   7: 135867.930 ops/s
# Warmup Iteration   8: 160250.647 ops/s
# Warmup Iteration   9: 159716.890 ops/s
# Warmup Iteration  10: 160259.268 ops/s
# Warmup Iteration  11: 159114.291 ops/s
# Warmup Iteration  12: 159139.660 ops/s
# Warmup Iteration  13: 166265.118 ops/s
# Warmup Iteration  14: 160790.072 ops/s
# Warmup Iteration  15: 150253.511 ops/s
# Warmup Iteration  16: 168670.790 ops/s
# Warmup Iteration  17: 171945.432 ops/s
# Warmup Iteration  18: 161750.668 ops/s
# Warmup Iteration  19: 169238.682 ops/s
# Warmup Iteration  20: 174146.451 ops/s
# Warmup Iteration  21: 160136.590 ops/s
# Warmup Iteration  22: 170486.161 ops/s
# Warmup Iteration  23: 161371.287 ops/s
# Warmup Iteration  24: 163789.435 ops/s
# Warmup Iteration  25: 170713.348 ops/s
# Warmup Iteration  26: 160078.407 ops/s
# Warmup Iteration  27: 167459.241 ops/s
# Warmup Iteration  28: 161561.765 ops/s
# Warmup Iteration  29: 163790.377 ops/s
# Warmup Iteration  30: 170779.477 ops/s
Iteration   1: 162854.826 ops/s
Iteration   2: 170968.067 ops/s
Iteration   3: 172653.625 ops/s
Iteration   4: 163355.783 ops/s
Iteration   5: 166889.467 ops/s
Iteration   6: 164717.895 ops/s
Iteration   7: 170418.277 ops/s
Iteration   8: 166090.284 ops/s
Iteration   9: 161569.472 ops/s
Iteration  10: 170104.627 ops/s
Iteration  11: 167908.597 ops/s
Iteration  12: 169753.115 ops/s
Iteration  13: 161582.404 ops/s
Iteration  14: 164327.992 ops/s
Iteration  15: 167508.067 ops/s
Iteration  16: 163303.671 ops/s
Iteration  17: 166577.048 ops/s
Iteration  18: 172820.092 ops/s
Iteration  19: 164406.305 ops/s
Iteration  20: 164870.474 ops/s
Iteration  21: 162944.188 ops/s
Iteration  22: 170177.778 ops/s
Iteration  23: 164734.209 ops/s
Iteration  24: 165583.002 ops/s
Iteration  25: 173874.581 ops/s
Iteration  26: 160378.473 ops/s
Iteration  27: 160873.190 ops/s
Iteration  28: 146784.206 ops/s
Iteration  29: 160653.783 ops/s
Iteration  30: 172578.134 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_522._Benchmark.benchmark_Cluster_522":
  165708.721 ±(99.9%) 3577.610 ops/s [Average]
  (min, avg, max) = (146784.206, 165708.721, 173874.581), stdev = 5354.799
  CI (99.9%): [162131.111, 169286.332] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_522._Benchmark.benchmark_Cluster_522  thrpt   30  165708.721 ± 3577.610  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_523._Benchmark.benchmark_Cluster_523$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_523._Benchmark.benchmark_Cluster_523

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.780 ops/s
# Warmup Iteration   2: 4770.085 ops/s
# Warmup Iteration   3: 19807.921 ops/s
# Warmup Iteration   4: 28852.518 ops/s
# Warmup Iteration   5: 37226.252 ops/s
# Warmup Iteration   6: 30866.602 ops/s
# Warmup Iteration   7: 40364.972 ops/s
# Warmup Iteration   8: 47067.408 ops/s
# Warmup Iteration   9: 51353.309 ops/s
# Warmup Iteration  10: 110948.273 ops/s
# Warmup Iteration  11: 117023.724 ops/s
# Warmup Iteration  12: 112803.974 ops/s
# Warmup Iteration  13: 117103.319 ops/s
# Warmup Iteration  14: 111352.545 ops/s
# Warmup Iteration  15: 117718.568 ops/s
# Warmup Iteration  16: 114748.527 ops/s
# Warmup Iteration  17: 111170.681 ops/s
# Warmup Iteration  18: 121583.667 ops/s
# Warmup Iteration  19: 109982.565 ops/s
# Warmup Iteration  20: 114647.887 ops/s
# Warmup Iteration  21: 117684.786 ops/s
# Warmup Iteration  22: 113435.326 ops/s
# Warmup Iteration  23: 113437.333 ops/s
# Warmup Iteration  24: 116579.291 ops/s
# Warmup Iteration  25: 112373.697 ops/s
# Warmup Iteration  26: 118242.003 ops/s
# Warmup Iteration  27: 113577.192 ops/s
# Warmup Iteration  28: 113568.848 ops/s
# Warmup Iteration  29: 116498.535 ops/s
# Warmup Iteration  30: 112764.334 ops/s
Iteration   1: 115859.311 ops/s
Iteration   2: 114556.353 ops/s
Iteration   3: 116509.424 ops/s
Iteration   4: 112845.019 ops/s
Iteration   5: 114613.939 ops/s
Iteration   6: 118047.486 ops/s
Iteration   7: 110831.677 ops/s
Iteration   8: 117555.560 ops/s
Iteration   9: 113047.208 ops/s
Iteration  10: 116868.155 ops/s
Iteration  11: 116102.685 ops/s
Iteration  12: 120054.907 ops/s
Iteration  13: 112015.254 ops/s
Iteration  14: 117599.739 ops/s
Iteration  15: 114404.867 ops/s
Iteration  16: 111550.959 ops/s
Iteration  17: 116809.175 ops/s
Iteration  18: 113644.274 ops/s
Iteration  19: 118700.417 ops/s
Iteration  20: 114801.226 ops/s
Iteration  21: 111673.038 ops/s
Iteration  22: 117498.815 ops/s
Iteration  23: 115915.302 ops/s
Iteration  24: 111203.628 ops/s
Iteration  25: 118044.919 ops/s
Iteration  26: 113148.601 ops/s
Iteration  27: 118543.868 ops/s
Iteration  28: 111831.432 ops/s
Iteration  29: 116335.697 ops/s
Iteration  30: 115918.273 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_523._Benchmark.benchmark_Cluster_523":
  115217.707 ±(99.9%) 1715.061 ops/s [Average]
  (min, avg, max) = (110831.677, 115217.707, 120054.907), stdev = 2567.022
  CI (99.9%): [113502.646, 116932.768] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_523._Benchmark.benchmark_Cluster_523  thrpt   30  115217.707 ± 1715.061  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_524._Benchmark.benchmark_Cluster_524$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_524._Benchmark.benchmark_Cluster_524

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.690 ops/s
# Warmup Iteration   2: 2133.810 ops/s
# Warmup Iteration   3: 14702.977 ops/s
# Warmup Iteration   4: 22492.850 ops/s
# Warmup Iteration   5: 27458.230 ops/s
# Warmup Iteration   6: 30337.222 ops/s
# Warmup Iteration   7: 34862.844 ops/s
# Warmup Iteration   8: 30715.149 ops/s
# Warmup Iteration   9: 41787.638 ops/s
# Warmup Iteration  10: 42037.552 ops/s
# Warmup Iteration  11: 91786.297 ops/s
# Warmup Iteration  12: 102371.013 ops/s
# Warmup Iteration  13: 96409.373 ops/s
# Warmup Iteration  14: 96527.461 ops/s
# Warmup Iteration  15: 93650.305 ops/s
# Warmup Iteration  16: 103083.134 ops/s
# Warmup Iteration  17: 101918.792 ops/s
# Warmup Iteration  18: 94032.632 ops/s
# Warmup Iteration  19: 100653.528 ops/s
# Warmup Iteration  20: 98724.876 ops/s
# Warmup Iteration  21: 100195.361 ops/s
# Warmup Iteration  22: 101039.512 ops/s
# Warmup Iteration  23: 101229.279 ops/s
# Warmup Iteration  24: 102423.967 ops/s
# Warmup Iteration  25: 105683.473 ops/s
# Warmup Iteration  26: 99534.044 ops/s
# Warmup Iteration  27: 104764.512 ops/s
# Warmup Iteration  28: 100863.118 ops/s
# Warmup Iteration  29: 106626.659 ops/s
# Warmup Iteration  30: 102231.042 ops/s
Iteration   1: 103017.583 ops/s
Iteration   2: 101279.838 ops/s
Iteration   3: 105117.728 ops/s
Iteration   4: 102522.321 ops/s
Iteration   5: 100891.547 ops/s
Iteration   6: 105685.189 ops/s
Iteration   7: 102132.065 ops/s
Iteration   8: 103882.312 ops/s
Iteration   9: 101959.335 ops/s
Iteration  10: 104448.311 ops/s
Iteration  11: 102948.732 ops/s
Iteration  12: 99888.084 ops/s
Iteration  13: 104249.737 ops/s
Iteration  14: 99709.999 ops/s
Iteration  15: 100480.534 ops/s
Iteration  16: 102509.864 ops/s
Iteration  17: 100662.879 ops/s
Iteration  18: 103175.365 ops/s
Iteration  19: 99698.103 ops/s
Iteration  20: 104183.400 ops/s
Iteration  21: 83691.092 ops/s
Iteration  22: 100309.714 ops/s
Iteration  23: 107483.564 ops/s
Iteration  24: 98275.212 ops/s
Iteration  25: 105773.097 ops/s
Iteration  26: 99967.433 ops/s
Iteration  27: 106825.360 ops/s
Iteration  28: 99130.042 ops/s
Iteration  29: 103092.044 ops/s
Iteration  30: 105630.330 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_524._Benchmark.benchmark_Cluster_524":
  101954.027 ±(99.9%) 2811.653 ops/s [Average]
  (min, avg, max) = (83691.092, 101954.027, 107483.564), stdev = 4208.350
  CI (99.9%): [99142.374, 104765.680] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_524._Benchmark.benchmark_Cluster_524  thrpt   30  101954.027 ± 2811.653  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_525._Benchmark.benchmark_Cluster_525$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_525._Benchmark.benchmark_Cluster_525

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1545.063 ops/s
# Warmup Iteration   2: 21661.291 ops/s
# Warmup Iteration   3: 31240.652 ops/s
# Warmup Iteration   4: 49558.589 ops/s
# Warmup Iteration   5: 68139.595 ops/s
# Warmup Iteration   6: 105444.146 ops/s
# Warmup Iteration   7: 101261.473 ops/s
# Warmup Iteration   8: 112447.973 ops/s
# Warmup Iteration   9: 103932.334 ops/s
# Warmup Iteration  10: 108963.874 ops/s
# Warmup Iteration  11: 98463.504 ops/s
# Warmup Iteration  12: 103046.906 ops/s
# Warmup Iteration  13: 108054.672 ops/s
# Warmup Iteration  14: 107391.024 ops/s
# Warmup Iteration  15: 112712.307 ops/s
# Warmup Iteration  16: 102589.120 ops/s
# Warmup Iteration  17: 109664.449 ops/s
# Warmup Iteration  18: 108283.308 ops/s
# Warmup Iteration  19: 104607.638 ops/s
# Warmup Iteration  20: 108733.749 ops/s
# Warmup Iteration  21: 104176.973 ops/s
# Warmup Iteration  22: 109744.778 ops/s
# Warmup Iteration  23: 112970.045 ops/s
# Warmup Iteration  24: 112556.664 ops/s
# Warmup Iteration  25: 107913.523 ops/s
# Warmup Iteration  26: 106069.258 ops/s
# Warmup Iteration  27: 100560.774 ops/s
# Warmup Iteration  28: 107550.191 ops/s
# Warmup Iteration  29: 109860.118 ops/s
# Warmup Iteration  30: 109690.987 ops/s
Iteration   1: 113970.957 ops/s
Iteration   2: 108982.066 ops/s
Iteration   3: 106494.879 ops/s
Iteration   4: 111146.751 ops/s
Iteration   5: 107077.770 ops/s
Iteration   6: 108181.134 ops/s
Iteration   7: 110721.810 ops/s
Iteration   8: 103862.791 ops/s
Iteration   9: 113665.537 ops/s
Iteration  10: 104069.215 ops/s
Iteration  11: 108079.104 ops/s
Iteration  12: 111765.762 ops/s
Iteration  13: 113266.062 ops/s
Iteration  14: 105973.144 ops/s
Iteration  15: 108410.629 ops/s
Iteration  16: 109441.029 ops/s
Iteration  17: 108680.429 ops/s
Iteration  18: 111009.778 ops/s
Iteration  19: 103217.224 ops/s
Iteration  20: 110827.536 ops/s
Iteration  21: 107511.461 ops/s
Iteration  22: 114971.715 ops/s
Iteration  23: 105269.351 ops/s
Iteration  24: 111030.403 ops/s
Iteration  25: 111415.813 ops/s
Iteration  26: 109191.249 ops/s
Iteration  27: 111682.538 ops/s
Iteration  28: 110098.872 ops/s
Iteration  29: 105720.419 ops/s
Iteration  30: 111830.656 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_525._Benchmark.benchmark_Cluster_525":
  109252.203 ±(99.9%) 2075.166 ops/s [Average]
  (min, avg, max) = (103217.224, 109252.203, 114971.715), stdev = 3106.011
  CI (99.9%): [107177.037, 111327.369] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_525._Benchmark.benchmark_Cluster_525  thrpt   30  109252.203 ± 2075.166  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_526._Benchmark.benchmark_Cluster_526$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_526._Benchmark.benchmark_Cluster_526

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 22617.500 ops/s
# Warmup Iteration   2: 77744.881 ops/s
# Warmup Iteration   3: 122651.658 ops/s
# Warmup Iteration   4: 139873.318 ops/s
# Warmup Iteration   5: 136482.313 ops/s
# Warmup Iteration   6: 126215.271 ops/s
# Warmup Iteration   7: 129040.752 ops/s
# Warmup Iteration   8: 146123.343 ops/s
# Warmup Iteration   9: 130221.652 ops/s
# Warmup Iteration  10: 143370.879 ops/s
# Warmup Iteration  11: 145378.287 ops/s
# Warmup Iteration  12: 141355.191 ops/s
# Warmup Iteration  13: 142967.503 ops/s
# Warmup Iteration  14: 138513.212 ops/s
# Warmup Iteration  15: 146612.419 ops/s
# Warmup Iteration  16: 146816.738 ops/s
# Warmup Iteration  17: 148382.385 ops/s
# Warmup Iteration  18: 143976.552 ops/s
# Warmup Iteration  19: 150086.115 ops/s
# Warmup Iteration  20: 139086.354 ops/s
# Warmup Iteration  21: 146270.921 ops/s
# Warmup Iteration  22: 153502.076 ops/s
# Warmup Iteration  23: 143459.449 ops/s
# Warmup Iteration  24: 145212.226 ops/s
# Warmup Iteration  25: 146201.379 ops/s
# Warmup Iteration  26: 148022.713 ops/s
# Warmup Iteration  27: 151005.814 ops/s
# Warmup Iteration  28: 138988.199 ops/s
# Warmup Iteration  29: 149971.729 ops/s
# Warmup Iteration  30: 150419.380 ops/s
Iteration   1: 143429.366 ops/s
Iteration   2: 149983.038 ops/s
Iteration   3: 145348.185 ops/s
Iteration   4: 141872.400 ops/s
Iteration   5: 149626.143 ops/s
Iteration   6: 145799.479 ops/s
Iteration   7: 150256.190 ops/s
Iteration   8: 144311.691 ops/s
Iteration   9: 147959.891 ops/s
Iteration  10: 150157.945 ops/s
Iteration  11: 143135.424 ops/s
Iteration  12: 150214.432 ops/s
Iteration  13: 142506.670 ops/s
Iteration  14: 147094.447 ops/s
Iteration  15: 122464.089 ops/s
Iteration  16: 147030.847 ops/s
Iteration  17: 145055.155 ops/s
Iteration  18: 152689.902 ops/s
Iteration  19: 143796.815 ops/s
Iteration  20: 147389.890 ops/s
Iteration  21: 144359.156 ops/s
Iteration  22: 148613.941 ops/s
Iteration  23: 149403.799 ops/s
Iteration  24: 144247.831 ops/s
Iteration  25: 142533.183 ops/s
Iteration  26: 151253.797 ops/s
Iteration  27: 143200.440 ops/s
Iteration  28: 151336.026 ops/s
Iteration  29: 143180.701 ops/s
Iteration  30: 148809.968 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_526._Benchmark.benchmark_Cluster_526":
  145902.028 ±(99.9%) 3633.427 ops/s [Average]
  (min, avg, max) = (122464.089, 145902.028, 152689.902), stdev = 5438.344
  CI (99.9%): [142268.601, 149535.455] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_526._Benchmark.benchmark_Cluster_526  thrpt   30  145902.028 ± 3633.427  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_527._Benchmark.benchmark_Cluster_527$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_527._Benchmark.benchmark_Cluster_527

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13612.147 ops/s
# Warmup Iteration   2: 75672.232 ops/s
# Warmup Iteration   3: 82586.976 ops/s
# Warmup Iteration   4: 99215.258 ops/s
# Warmup Iteration   5: 97168.472 ops/s
# Warmup Iteration   6: 96022.591 ops/s
# Warmup Iteration   7: 100770.756 ops/s
# Warmup Iteration   8: 92435.599 ops/s
# Warmup Iteration   9: 103199.940 ops/s
# Warmup Iteration  10: 94056.627 ops/s
# Warmup Iteration  11: 99043.556 ops/s
# Warmup Iteration  12: 96779.633 ops/s
# Warmup Iteration  13: 92021.190 ops/s
# Warmup Iteration  14: 99553.378 ops/s
# Warmup Iteration  15: 99470.902 ops/s
# Warmup Iteration  16: 102608.759 ops/s
# Warmup Iteration  17: 103977.433 ops/s
# Warmup Iteration  18: 103021.015 ops/s
# Warmup Iteration  19: 106362.566 ops/s
# Warmup Iteration  20: 99843.023 ops/s
# Warmup Iteration  21: 102853.973 ops/s
# Warmup Iteration  22: 103978.301 ops/s
# Warmup Iteration  23: 102707.066 ops/s
# Warmup Iteration  24: 103296.913 ops/s
# Warmup Iteration  25: 105092.991 ops/s
# Warmup Iteration  26: 98530.273 ops/s
# Warmup Iteration  27: 103997.545 ops/s
# Warmup Iteration  28: 105157.244 ops/s
# Warmup Iteration  29: 101433.770 ops/s
# Warmup Iteration  30: 104027.723 ops/s
Iteration   1: 102857.122 ops/s
Iteration   2: 105175.405 ops/s
Iteration   3: 97763.736 ops/s
Iteration   4: 103769.146 ops/s
Iteration   5: 98988.207 ops/s
Iteration   6: 101562.466 ops/s
Iteration   7: 107673.014 ops/s
Iteration   8: 100716.302 ops/s
Iteration   9: 105856.157 ops/s
Iteration  10: 101891.132 ops/s
Iteration  11: 105804.525 ops/s
Iteration  12: 101470.790 ops/s
Iteration  13: 103683.525 ops/s
Iteration  14: 102336.711 ops/s
Iteration  15: 101038.600 ops/s
Iteration  16: 103342.383 ops/s
Iteration  17: 105004.644 ops/s
Iteration  18: 101015.804 ops/s
Iteration  19: 106114.694 ops/s
Iteration  20: 99949.882 ops/s
Iteration  21: 106131.930 ops/s
Iteration  22: 100360.417 ops/s
Iteration  23: 103286.535 ops/s
Iteration  24: 107600.694 ops/s
Iteration  25: 99731.269 ops/s
Iteration  26: 102979.032 ops/s
Iteration  27: 101985.966 ops/s
Iteration  28: 102479.478 ops/s
Iteration  29: 105650.695 ops/s
Iteration  30: 99212.410 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_527._Benchmark.benchmark_Cluster_527":
  102847.756 ±(99.9%) 1754.922 ops/s [Average]
  (min, avg, max) = (97763.736, 102847.756, 107673.014), stdev = 2626.684
  CI (99.9%): [101092.834, 104602.677] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_527._Benchmark.benchmark_Cluster_527  thrpt   30  102847.756 ± 1754.922  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_528._Benchmark.benchmark_Cluster_528$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_528._Benchmark.benchmark_Cluster_528

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9063.539 ops/s
# Warmup Iteration   2: 29203.062 ops/s
# Warmup Iteration   3: 57856.581 ops/s
# Warmup Iteration   4: 62019.555 ops/s
# Warmup Iteration   5: 58145.296 ops/s
# Warmup Iteration   6: 66241.339 ops/s
# Warmup Iteration   7: 70592.197 ops/s
# Warmup Iteration   8: 64548.962 ops/s
# Warmup Iteration   9: 74252.778 ops/s
# Warmup Iteration  10: 66568.853 ops/s
# Warmup Iteration  11: 72108.823 ops/s
# Warmup Iteration  12: 55165.885 ops/s
# Warmup Iteration  13: 66222.472 ops/s
# Warmup Iteration  14: 63630.801 ops/s
# Warmup Iteration  15: 63750.613 ops/s
# Warmup Iteration  16: 74585.534 ops/s
# Warmup Iteration  17: 64031.516 ops/s
# Warmup Iteration  18: 64068.604 ops/s
# Warmup Iteration  19: 65232.090 ops/s
# Warmup Iteration  20: 62138.672 ops/s
# Warmup Iteration  21: 66050.887 ops/s
# Warmup Iteration  22: 71788.519 ops/s
# Warmup Iteration  23: 76157.128 ops/s
# Warmup Iteration  24: 65047.029 ops/s
# Warmup Iteration  25: 66340.146 ops/s
# Warmup Iteration  26: 71548.574 ops/s
# Warmup Iteration  27: 76082.297 ops/s
# Warmup Iteration  28: 76160.455 ops/s
# Warmup Iteration  29: 65526.527 ops/s
# Warmup Iteration  30: 71659.917 ops/s
Iteration   1: 74482.662 ops/s
Iteration   2: 73054.677 ops/s
Iteration   3: 71386.254 ops/s
Iteration   4: 68089.926 ops/s
Iteration   5: 62688.618 ops/s
Iteration   6: 71743.661 ops/s
Iteration   7: 72091.344 ops/s
Iteration   8: 62476.983 ops/s
Iteration   9: 63487.477 ops/s
Iteration  10: 68645.570 ops/s
Iteration  11: 76003.036 ops/s
Iteration  12: 78049.612 ops/s
Iteration  13: 71674.864 ops/s
Iteration  14: 68296.072 ops/s
Iteration  15: 66013.658 ops/s
Iteration  16: 72115.845 ops/s
Iteration  17: 73419.784 ops/s
Iteration  18: 77469.382 ops/s
Iteration  19: 66174.485 ops/s
Iteration  20: 65066.338 ops/s
Iteration  21: 72746.745 ops/s
Iteration  22: 65682.733 ops/s
Iteration  23: 66168.972 ops/s
Iteration  24: 72299.714 ops/s
Iteration  25: 70667.331 ops/s
Iteration  26: 67757.477 ops/s
Iteration  27: 74614.393 ops/s
Iteration  28: 69896.944 ops/s
Iteration  29: 65130.836 ops/s
Iteration  30: 61017.502 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_528._Benchmark.benchmark_Cluster_528":
  69613.763 ±(99.9%) 3046.369 ops/s [Average]
  (min, avg, max) = (61017.502, 69613.763, 78049.612), stdev = 4559.662
  CI (99.9%): [66567.394, 72660.132] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_528._Benchmark.benchmark_Cluster_528  thrpt   30  69613.763 ± 3046.369  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_529._Benchmark.benchmark_Cluster_529$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_529._Benchmark.benchmark_Cluster_529

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9557.400 ops/s
# Warmup Iteration   2: 24618.492 ops/s
# Warmup Iteration   3: 17219.351 ops/s
# Warmup Iteration   4: 20162.222 ops/s
# Warmup Iteration   5: 17109.121 ops/s
# Warmup Iteration   6: 17492.903 ops/s
# Warmup Iteration   7: 18497.597 ops/s
# Warmup Iteration   8: 17164.706 ops/s
# Warmup Iteration   9: 17738.306 ops/s
# Warmup Iteration  10: 18067.731 ops/s
# Warmup Iteration  11: 17541.788 ops/s
# Warmup Iteration  12: 17786.574 ops/s
# Warmup Iteration  13: 17992.548 ops/s
# Warmup Iteration  14: 17963.397 ops/s
# Warmup Iteration  15: 17743.157 ops/s
# Warmup Iteration  16: 18513.229 ops/s
# Warmup Iteration  17: 17039.068 ops/s
# Warmup Iteration  18: 18261.587 ops/s
# Warmup Iteration  19: 17534.089 ops/s
# Warmup Iteration  20: 18211.859 ops/s
# Warmup Iteration  21: 17562.195 ops/s
# Warmup Iteration  22: 17981.269 ops/s
# Warmup Iteration  23: 17677.451 ops/s
# Warmup Iteration  24: 17389.104 ops/s
# Warmup Iteration  25: 17707.851 ops/s
# Warmup Iteration  26: 17094.792 ops/s
# Warmup Iteration  27: 17793.798 ops/s
# Warmup Iteration  28: 17993.255 ops/s
# Warmup Iteration  29: 17879.609 ops/s
# Warmup Iteration  30: 17387.267 ops/s
Iteration   1: 18361.246 ops/s
Iteration   2: 17546.023 ops/s
Iteration   3: 17868.676 ops/s
Iteration   4: 18153.021 ops/s
Iteration   5: 17733.736 ops/s
Iteration   6: 17846.373 ops/s
Iteration   7: 17603.523 ops/s
Iteration   8: 18156.631 ops/s
Iteration   9: 18306.847 ops/s
Iteration  10: 18241.144 ops/s
Iteration  11: 17934.702 ops/s
Iteration  12: 18080.770 ops/s
Iteration  13: 18214.693 ops/s
Iteration  14: 18123.212 ops/s
Iteration  15: 17507.941 ops/s
Iteration  16: 18154.522 ops/s
Iteration  17: 17695.004 ops/s
Iteration  18: 17583.442 ops/s
Iteration  19: 18250.602 ops/s
Iteration  20: 17022.883 ops/s
Iteration  21: 17754.325 ops/s
Iteration  22: 17802.864 ops/s
Iteration  23: 17323.602 ops/s
Iteration  24: 18044.863 ops/s
Iteration  25: 17893.533 ops/s
Iteration  26: 18051.562 ops/s
Iteration  27: 17622.222 ops/s
Iteration  28: 17497.613 ops/s
Iteration  29: 17563.097 ops/s
Iteration  30: 17980.311 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_529._Benchmark.benchmark_Cluster_529":
  17863.966 ±(99.9%) 216.028 ops/s [Average]
  (min, avg, max) = (17022.883, 17863.966, 18361.246), stdev = 323.340
  CI (99.9%): [17647.939, 18079.994] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_529._Benchmark.benchmark_Cluster_529  thrpt   30  17863.966 ± 216.028  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_53._Benchmark.benchmark_Cluster_53$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_53._Benchmark.benchmark_Cluster_53

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1948.834 ops/s
# Warmup Iteration   2: 12549.195 ops/s
# Warmup Iteration   3: 19135.918 ops/s
# Warmup Iteration   4: 35638.586 ops/s
# Warmup Iteration   5: 30604.149 ops/s
# Warmup Iteration   6: 28691.281 ops/s
# Warmup Iteration   7: 28931.126 ops/s
# Warmup Iteration   8: 24854.507 ops/s
# Warmup Iteration   9: 37438.899 ops/s
# Warmup Iteration  10: 33454.462 ops/s
# Warmup Iteration  11: 36650.548 ops/s
# Warmup Iteration  12: 76996.146 ops/s
# Warmup Iteration  13: 90901.811 ops/s
# Warmup Iteration  14: 90084.393 ops/s
# Warmup Iteration  15: 90241.422 ops/s
# Warmup Iteration  16: 92753.702 ops/s
# Warmup Iteration  17: 91706.694 ops/s
# Warmup Iteration  18: 90722.985 ops/s
# Warmup Iteration  19: 94681.657 ops/s
# Warmup Iteration  20: 91182.947 ops/s
# Warmup Iteration  21: 94585.419 ops/s
# Warmup Iteration  22: 93272.567 ops/s
# Warmup Iteration  23: 94772.807 ops/s
# Warmup Iteration  24: 90581.957 ops/s
# Warmup Iteration  25: 92261.597 ops/s
# Warmup Iteration  26: 92300.949 ops/s
# Warmup Iteration  27: 96006.757 ops/s
# Warmup Iteration  28: 92901.793 ops/s
# Warmup Iteration  29: 90950.910 ops/s
# Warmup Iteration  30: 94807.833 ops/s
Iteration   1: 94907.561 ops/s
Iteration   2: 93537.665 ops/s
Iteration   3: 66773.693 ops/s
Iteration   4: 94417.824 ops/s
Iteration   5: 91531.141 ops/s
Iteration   6: 93023.600 ops/s
Iteration   7: 94603.741 ops/s
Iteration   8: 92393.792 ops/s
Iteration   9: 90464.336 ops/s
Iteration  10: 95178.315 ops/s
Iteration  11: 95875.185 ops/s
Iteration  12: 90456.761 ops/s
Iteration  13: 96331.741 ops/s
Iteration  14: 95037.213 ops/s
Iteration  15: 89736.275 ops/s
Iteration  16: 90209.402 ops/s
Iteration  17: 92011.548 ops/s
Iteration  18: 94712.096 ops/s
Iteration  19: 94504.875 ops/s
Iteration  20: 88965.932 ops/s
Iteration  21: 92664.205 ops/s
Iteration  22: 94317.960 ops/s
Iteration  23: 90265.230 ops/s
Iteration  24: 92108.771 ops/s
Iteration  25: 97466.576 ops/s
Iteration  26: 90752.839 ops/s
Iteration  27: 97357.998 ops/s
Iteration  28: 92597.663 ops/s
Iteration  29: 92938.210 ops/s
Iteration  30: 97381.387 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_53._Benchmark.benchmark_Cluster_53":
  92417.451 ±(99.9%) 3604.731 ops/s [Average]
  (min, avg, max) = (66773.693, 92417.451, 97466.576), stdev = 5395.393
  CI (99.9%): [88812.720, 96022.182] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_53._Benchmark.benchmark_Cluster_53  thrpt   30  92417.451 ± 3604.731  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_530._Benchmark.benchmark_Cluster_530$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_530._Benchmark.benchmark_Cluster_530

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2493.639 ops/s
# Warmup Iteration   2: 16997.887 ops/s
# Warmup Iteration   3: 21749.646 ops/s
# Warmup Iteration   4: 28736.321 ops/s
# Warmup Iteration   5: 26207.795 ops/s
# Warmup Iteration   6: 35598.293 ops/s
# Warmup Iteration   7: 44787.391 ops/s
# Warmup Iteration   8: 45040.520 ops/s
# Warmup Iteration   9: 58860.850 ops/s
# Warmup Iteration  10: 55870.727 ops/s
# Warmup Iteration  11: 49886.886 ops/s
# Warmup Iteration  12: 53753.022 ops/s
# Warmup Iteration  13: 48520.090 ops/s
# Warmup Iteration  14: 54560.940 ops/s
# Warmup Iteration  15: 60319.136 ops/s
# Warmup Iteration  16: 55730.639 ops/s
# Warmup Iteration  17: 59197.432 ops/s
# Warmup Iteration  18: 58353.102 ops/s
# Warmup Iteration  19: 58505.441 ops/s
# Warmup Iteration  20: 59063.566 ops/s
# Warmup Iteration  21: 59487.508 ops/s
# Warmup Iteration  22: 60744.258 ops/s
# Warmup Iteration  23: 58502.375 ops/s
# Warmup Iteration  24: 59685.751 ops/s
# Warmup Iteration  25: 61026.291 ops/s
# Warmup Iteration  26: 58146.562 ops/s
# Warmup Iteration  27: 54049.974 ops/s
# Warmup Iteration  28: 56010.217 ops/s
# Warmup Iteration  29: 60068.615 ops/s
# Warmup Iteration  30: 60452.911 ops/s
Iteration   1: 60555.151 ops/s
Iteration   2: 55984.464 ops/s
Iteration   3: 58667.181 ops/s
Iteration   4: 59211.630 ops/s
Iteration   5: 52586.282 ops/s
Iteration   6: 60367.604 ops/s
Iteration   7: 55645.723 ops/s
Iteration   8: 54756.687 ops/s
Iteration   9: 62967.989 ops/s
Iteration  10: 57071.769 ops/s
Iteration  11: 57050.734 ops/s
Iteration  12: 57061.108 ops/s
Iteration  13: 54126.443 ops/s
Iteration  14: 60146.557 ops/s
Iteration  15: 62273.884 ops/s
Iteration  16: 54901.011 ops/s
Iteration  17: 54179.048 ops/s
Iteration  18: 52309.090 ops/s
Iteration  19: 58004.096 ops/s
Iteration  20: 54510.277 ops/s
Iteration  21: 59094.106 ops/s
Iteration  22: 59119.865 ops/s
Iteration  23: 55155.626 ops/s
Iteration  24: 56112.629 ops/s
Iteration  25: 61691.907 ops/s
Iteration  26: 48487.515 ops/s
Iteration  27: 57858.186 ops/s
Iteration  28: 55609.263 ops/s
Iteration  29: 62885.242 ops/s
Iteration  30: 57800.153 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_530._Benchmark.benchmark_Cluster_530":
  57206.374 ±(99.9%) 2241.498 ops/s [Average]
  (min, avg, max) = (48487.515, 57206.374, 62967.989), stdev = 3354.969
  CI (99.9%): [54964.876, 59447.872] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_530._Benchmark.benchmark_Cluster_530  thrpt   30  57206.374 ± 2241.498  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_531._Benchmark.benchmark_Cluster_531$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_531._Benchmark.benchmark_Cluster_531

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16939.700 ops/s
# Warmup Iteration   2: 38700.536 ops/s
# Warmup Iteration   3: 68135.978 ops/s
# Warmup Iteration   4: 89210.452 ops/s
# Warmup Iteration   5: 110319.273 ops/s
# Warmup Iteration   6: 109195.009 ops/s
# Warmup Iteration   7: 107709.185 ops/s
# Warmup Iteration   8: 115419.690 ops/s
# Warmup Iteration   9: 105303.423 ops/s
# Warmup Iteration  10: 113674.087 ops/s
# Warmup Iteration  11: 99870.975 ops/s
# Warmup Iteration  12: 109193.030 ops/s
# Warmup Iteration  13: 115100.260 ops/s
# Warmup Iteration  14: 107662.334 ops/s
# Warmup Iteration  15: 113194.474 ops/s
# Warmup Iteration  16: 110972.300 ops/s
# Warmup Iteration  17: 112890.196 ops/s
# Warmup Iteration  18: 114734.174 ops/s
# Warmup Iteration  19: 118070.646 ops/s
# Warmup Iteration  20: 109422.716 ops/s
# Warmup Iteration  21: 112997.737 ops/s
# Warmup Iteration  22: 111318.154 ops/s
# Warmup Iteration  23: 113553.634 ops/s
# Warmup Iteration  24: 111937.196 ops/s
# Warmup Iteration  25: 118021.391 ops/s
# Warmup Iteration  26: 95149.659 ops/s
# Warmup Iteration  27: 116641.844 ops/s
# Warmup Iteration  28: 115562.368 ops/s
# Warmup Iteration  29: 111093.806 ops/s
# Warmup Iteration  30: 116225.493 ops/s
Iteration   1: 117111.781 ops/s
Iteration   2: 113180.327 ops/s
Iteration   3: 119572.210 ops/s
Iteration   4: 112030.275 ops/s
Iteration   5: 112444.023 ops/s
Iteration   6: 116256.055 ops/s
Iteration   7: 114445.625 ops/s
Iteration   8: 116459.709 ops/s
Iteration   9: 113263.125 ops/s
Iteration  10: 117678.749 ops/s
Iteration  11: 111241.609 ops/s
Iteration  12: 116034.089 ops/s
Iteration  13: 117539.305 ops/s
Iteration  14: 112603.455 ops/s
Iteration  15: 111428.182 ops/s
Iteration  16: 117255.103 ops/s
Iteration  17: 109576.076 ops/s
Iteration  18: 115975.888 ops/s
Iteration  19: 112404.129 ops/s
Iteration  20: 116706.646 ops/s
Iteration  21: 110945.361 ops/s
Iteration  22: 114168.539 ops/s
Iteration  23: 114579.667 ops/s
Iteration  24: 113740.981 ops/s
Iteration  25: 114266.156 ops/s
Iteration  26: 111152.708 ops/s
Iteration  27: 110341.618 ops/s
Iteration  28: 115684.170 ops/s
Iteration  29: 115692.692 ops/s
Iteration  30: 114856.819 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_531._Benchmark.benchmark_Cluster_531":
  114287.836 ±(99.9%) 1688.273 ops/s [Average]
  (min, avg, max) = (109576.076, 114287.836, 119572.210), stdev = 2526.928
  CI (99.9%): [112599.562, 115976.109] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_531._Benchmark.benchmark_Cluster_531  thrpt   30  114287.836 ± 1688.273  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_532._Benchmark.benchmark_Cluster_532$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_532._Benchmark.benchmark_Cluster_532

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17443.486 ops/s
# Warmup Iteration   2: 64024.596 ops/s
# Warmup Iteration   3: 91175.272 ops/s
# Warmup Iteration   4: 110878.620 ops/s
# Warmup Iteration   5: 119344.254 ops/s
# Warmup Iteration   6: 122342.086 ops/s
# Warmup Iteration   7: 119544.397 ops/s
# Warmup Iteration   8: 111446.100 ops/s
# Warmup Iteration   9: 118320.187 ops/s
# Warmup Iteration  10: 113853.890 ops/s
# Warmup Iteration  11: 111999.158 ops/s
# Warmup Iteration  12: 120816.534 ops/s
# Warmup Iteration  13: 106738.643 ops/s
# Warmup Iteration  14: 118593.483 ops/s
# Warmup Iteration  15: 119252.362 ops/s
# Warmup Iteration  16: 113132.354 ops/s
# Warmup Iteration  17: 121197.244 ops/s
# Warmup Iteration  18: 120833.093 ops/s
# Warmup Iteration  19: 119521.405 ops/s
# Warmup Iteration  20: 121043.350 ops/s
# Warmup Iteration  21: 119403.619 ops/s
# Warmup Iteration  22: 120821.010 ops/s
# Warmup Iteration  23: 119232.887 ops/s
# Warmup Iteration  24: 119368.872 ops/s
# Warmup Iteration  25: 118011.628 ops/s
# Warmup Iteration  26: 118817.268 ops/s
# Warmup Iteration  27: 125347.190 ops/s
# Warmup Iteration  28: 123410.077 ops/s
# Warmup Iteration  29: 115452.081 ops/s
# Warmup Iteration  30: 123353.040 ops/s
Iteration   1: 123503.005 ops/s
Iteration   2: 116669.453 ops/s
Iteration   3: 122863.522 ops/s
Iteration   4: 119187.569 ops/s
Iteration   5: 118375.869 ops/s
Iteration   6: 123243.937 ops/s
Iteration   7: 116260.007 ops/s
Iteration   8: 124980.916 ops/s
Iteration   9: 115327.438 ops/s
Iteration  10: 125910.071 ops/s
Iteration  11: 117397.136 ops/s
Iteration  12: 121417.558 ops/s
Iteration  13: 119801.440 ops/s
Iteration  14: 117528.387 ops/s
Iteration  15: 118808.035 ops/s
Iteration  16: 117383.316 ops/s
Iteration  17: 122131.679 ops/s
Iteration  18: 120031.618 ops/s
Iteration  19: 117427.231 ops/s
Iteration  20: 121100.756 ops/s
Iteration  21: 116328.766 ops/s
Iteration  22: 119714.656 ops/s
Iteration  23: 117811.972 ops/s
Iteration  24: 119579.406 ops/s
Iteration  25: 124282.316 ops/s
Iteration  26: 121963.702 ops/s
Iteration  27: 119068.280 ops/s
Iteration  28: 121138.276 ops/s
Iteration  29: 116178.802 ops/s
Iteration  30: 123234.182 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_532._Benchmark.benchmark_Cluster_532":
  119954.977 ±(99.9%) 1939.560 ops/s [Average]
  (min, avg, max) = (115327.438, 119954.977, 125910.071), stdev = 2903.043
  CI (99.9%): [118015.417, 121894.537] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_532._Benchmark.benchmark_Cluster_532  thrpt   30  119954.977 ± 1939.560  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_533._Benchmark.benchmark_Cluster_533$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_533._Benchmark.benchmark_Cluster_533

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17479.984 ops/s
# Warmup Iteration   2: 58654.821 ops/s
# Warmup Iteration   3: 74630.238 ops/s
# Warmup Iteration   4: 81941.881 ops/s
# Warmup Iteration   5: 93585.731 ops/s
# Warmup Iteration   6: 83558.489 ops/s
# Warmup Iteration   7: 89512.894 ops/s
# Warmup Iteration   8: 94922.345 ops/s
# Warmup Iteration   9: 90655.572 ops/s
# Warmup Iteration  10: 94636.595 ops/s
# Warmup Iteration  11: 96173.159 ops/s
# Warmup Iteration  12: 89948.839 ops/s
# Warmup Iteration  13: 95275.439 ops/s
# Warmup Iteration  14: 91087.233 ops/s
# Warmup Iteration  15: 98086.546 ops/s
# Warmup Iteration  16: 95910.304 ops/s
# Warmup Iteration  17: 94744.121 ops/s
# Warmup Iteration  18: 96773.220 ops/s
# Warmup Iteration  19: 100039.988 ops/s
# Warmup Iteration  20: 96251.290 ops/s
# Warmup Iteration  21: 82010.921 ops/s
# Warmup Iteration  22: 100242.505 ops/s
# Warmup Iteration  23: 99084.441 ops/s
# Warmup Iteration  24: 95807.089 ops/s
# Warmup Iteration  25: 95654.771 ops/s
# Warmup Iteration  26: 99331.278 ops/s
# Warmup Iteration  27: 94668.715 ops/s
# Warmup Iteration  28: 97323.046 ops/s
# Warmup Iteration  29: 97840.777 ops/s
# Warmup Iteration  30: 97355.434 ops/s
Iteration   1: 97497.174 ops/s
Iteration   2: 97021.762 ops/s
Iteration   3: 98064.851 ops/s
Iteration   4: 95100.852 ops/s
Iteration   5: 100677.974 ops/s
Iteration   6: 92895.840 ops/s
Iteration   7: 97644.356 ops/s
Iteration   8: 100213.551 ops/s
Iteration   9: 94352.474 ops/s
Iteration  10: 97909.551 ops/s
Iteration  11: 94442.191 ops/s
Iteration  12: 99699.714 ops/s
Iteration  13: 95172.912 ops/s
Iteration  14: 93900.454 ops/s
Iteration  15: 96369.459 ops/s
Iteration  16: 99750.643 ops/s
Iteration  17: 94821.966 ops/s
Iteration  18: 97506.486 ops/s
Iteration  19: 101025.669 ops/s
Iteration  20: 96284.248 ops/s
Iteration  21: 98805.389 ops/s
Iteration  22: 95835.388 ops/s
Iteration  23: 98567.035 ops/s
Iteration  24: 97912.324 ops/s
Iteration  25: 98090.315 ops/s
Iteration  26: 98916.466 ops/s
Iteration  27: 96266.961 ops/s
Iteration  28: 99279.199 ops/s
Iteration  29: 95713.710 ops/s
Iteration  30: 101197.895 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_533._Benchmark.benchmark_Cluster_533":
  97364.560 ±(99.9%) 1489.739 ops/s [Average]
  (min, avg, max) = (92895.840, 97364.560, 101197.895), stdev = 2229.771
  CI (99.9%): [95874.822, 98854.299] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_533._Benchmark.benchmark_Cluster_533  thrpt   30  97364.560 ± 1489.739  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_534._Benchmark.benchmark_Cluster_534$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_534._Benchmark.benchmark_Cluster_534

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10507.721 ops/s
# Warmup Iteration   2: 43246.981 ops/s
# Warmup Iteration   3: 39400.915 ops/s
# Warmup Iteration   4: 64177.632 ops/s
# Warmup Iteration   5: 115530.704 ops/s
# Warmup Iteration   6: 124368.592 ops/s
# Warmup Iteration   7: 123045.551 ops/s
# Warmup Iteration   8: 118264.328 ops/s
# Warmup Iteration   9: 121940.425 ops/s
# Warmup Iteration  10: 124805.819 ops/s
# Warmup Iteration  11: 114781.840 ops/s
# Warmup Iteration  12: 119446.185 ops/s
# Warmup Iteration  13: 122201.794 ops/s
# Warmup Iteration  14: 117858.835 ops/s
# Warmup Iteration  15: 120108.313 ops/s
# Warmup Iteration  16: 122406.947 ops/s
# Warmup Iteration  17: 125760.762 ops/s
# Warmup Iteration  18: 127919.448 ops/s
# Warmup Iteration  19: 126115.280 ops/s
# Warmup Iteration  20: 124780.431 ops/s
# Warmup Iteration  21: 130210.432 ops/s
# Warmup Iteration  22: 117585.995 ops/s
# Warmup Iteration  23: 129075.763 ops/s
# Warmup Iteration  24: 118460.473 ops/s
# Warmup Iteration  25: 128856.991 ops/s
# Warmup Iteration  26: 129678.816 ops/s
# Warmup Iteration  27: 126172.653 ops/s
# Warmup Iteration  28: 126228.703 ops/s
# Warmup Iteration  29: 128553.389 ops/s
# Warmup Iteration  30: 124070.259 ops/s
Iteration   1: 131015.282 ops/s
Iteration   2: 128211.687 ops/s
Iteration   3: 121011.131 ops/s
Iteration   4: 130263.043 ops/s
Iteration   5: 122884.397 ops/s
Iteration   6: 130036.383 ops/s
Iteration   7: 132021.227 ops/s
Iteration   8: 120387.030 ops/s
Iteration   9: 133493.814 ops/s
Iteration  10: 127573.920 ops/s
Iteration  11: 123967.668 ops/s
Iteration  12: 130951.026 ops/s
Iteration  13: 125832.895 ops/s
Iteration  14: 128898.525 ops/s
Iteration  15: 127388.280 ops/s
Iteration  16: 123660.317 ops/s
Iteration  17: 130913.364 ops/s
Iteration  18: 129262.952 ops/s
Iteration  19: 124052.985 ops/s
Iteration  20: 132436.409 ops/s
Iteration  21: 124327.779 ops/s
Iteration  22: 132200.783 ops/s
Iteration  23: 128140.425 ops/s
Iteration  24: 124702.239 ops/s
Iteration  25: 128380.432 ops/s
Iteration  26: 127084.802 ops/s
Iteration  27: 127148.294 ops/s
Iteration  28: 128488.043 ops/s
Iteration  29: 125163.102 ops/s
Iteration  30: 131582.911 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_534._Benchmark.benchmark_Cluster_534":
  127716.038 ±(99.9%) 2338.793 ops/s [Average]
  (min, avg, max) = (120387.030, 127716.038, 133493.814), stdev = 3500.596
  CI (99.9%): [125377.245, 130054.832] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_534._Benchmark.benchmark_Cluster_534  thrpt   30  127716.038 ± 2338.793  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_535._Benchmark.benchmark_Cluster_535$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_535._Benchmark.benchmark_Cluster_535

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16511.379 ops/s
# Warmup Iteration   2: 79175.394 ops/s
# Warmup Iteration   3: 103902.897 ops/s
# Warmup Iteration   4: 110014.259 ops/s
# Warmup Iteration   5: 104179.560 ops/s
# Warmup Iteration   6: 114421.774 ops/s
# Warmup Iteration   7: 111716.235 ops/s
# Warmup Iteration   8: 113111.798 ops/s
# Warmup Iteration   9: 110637.149 ops/s
# Warmup Iteration  10: 113359.051 ops/s
# Warmup Iteration  11: 112667.202 ops/s
# Warmup Iteration  12: 110250.637 ops/s
# Warmup Iteration  13: 115112.793 ops/s
# Warmup Iteration  14: 115028.072 ops/s
# Warmup Iteration  15: 89600.402 ops/s
# Warmup Iteration  16: 115043.593 ops/s
# Warmup Iteration  17: 113375.691 ops/s
# Warmup Iteration  18: 112780.959 ops/s
# Warmup Iteration  19: 120382.781 ops/s
# Warmup Iteration  20: 124435.288 ops/s
# Warmup Iteration  21: 113289.439 ops/s
# Warmup Iteration  22: 118616.295 ops/s
# Warmup Iteration  23: 115210.889 ops/s
# Warmup Iteration  24: 115356.401 ops/s
# Warmup Iteration  25: 119943.404 ops/s
# Warmup Iteration  26: 113023.270 ops/s
# Warmup Iteration  27: 120165.235 ops/s
# Warmup Iteration  28: 115841.853 ops/s
# Warmup Iteration  29: 119139.310 ops/s
# Warmup Iteration  30: 118065.509 ops/s
Iteration   1: 114382.926 ops/s
Iteration   2: 118225.519 ops/s
Iteration   3: 117892.698 ops/s
Iteration   4: 113518.455 ops/s
Iteration   5: 119653.066 ops/s
Iteration   6: 121693.519 ops/s
Iteration   7: 114838.536 ops/s
Iteration   8: 117657.568 ops/s
Iteration   9: 117688.166 ops/s
Iteration  10: 114410.706 ops/s
Iteration  11: 121152.736 ops/s
Iteration  12: 111404.482 ops/s
Iteration  13: 119243.402 ops/s
Iteration  14: 112919.262 ops/s
Iteration  15: 115077.367 ops/s
Iteration  16: 119823.237 ops/s
Iteration  17: 110723.681 ops/s
Iteration  18: 116876.803 ops/s
Iteration  19: 114346.862 ops/s
Iteration  20: 116746.150 ops/s
Iteration  21: 116379.737 ops/s
Iteration  22: 116765.083 ops/s
Iteration  23: 119371.072 ops/s
Iteration  24: 110824.306 ops/s
Iteration  25: 122333.278 ops/s
Iteration  26: 119749.113 ops/s
Iteration  27: 115855.129 ops/s
Iteration  28: 116755.365 ops/s
Iteration  29: 110881.722 ops/s
Iteration  30: 117023.726 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_535._Benchmark.benchmark_Cluster_535":
  116473.789 ±(99.9%) 2155.091 ops/s [Average]
  (min, avg, max) = (110723.681, 116473.789, 122333.278), stdev = 3225.640
  CI (99.9%): [114318.698, 118628.880] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_535._Benchmark.benchmark_Cluster_535  thrpt   30  116473.789 ± 2155.091  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_536._Benchmark.benchmark_Cluster_536$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_536._Benchmark.benchmark_Cluster_536

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15896.539 ops/s
# Warmup Iteration   2: 68599.239 ops/s
# Warmup Iteration   3: 66155.611 ops/s
# Warmup Iteration   4: 158888.924 ops/s
# Warmup Iteration   5: 158563.325 ops/s
# Warmup Iteration   6: 162710.696 ops/s
# Warmup Iteration   7: 155372.037 ops/s
# Warmup Iteration   8: 154968.176 ops/s
# Warmup Iteration   9: 164633.652 ops/s
# Warmup Iteration  10: 160504.413 ops/s
# Warmup Iteration  11: 156041.479 ops/s
# Warmup Iteration  12: 166879.840 ops/s
# Warmup Iteration  13: 157347.151 ops/s
# Warmup Iteration  14: 165225.673 ops/s
# Warmup Iteration  15: 160173.901 ops/s
# Warmup Iteration  16: 164321.156 ops/s
# Warmup Iteration  17: 164930.868 ops/s
# Warmup Iteration  18: 169306.253 ops/s
# Warmup Iteration  19: 169138.925 ops/s
# Warmup Iteration  20: 165069.516 ops/s
# Warmup Iteration  21: 175426.055 ops/s
# Warmup Iteration  22: 167130.809 ops/s
# Warmup Iteration  23: 167444.971 ops/s
# Warmup Iteration  24: 167910.267 ops/s
# Warmup Iteration  25: 169227.249 ops/s
# Warmup Iteration  26: 168423.172 ops/s
# Warmup Iteration  27: 170104.278 ops/s
# Warmup Iteration  28: 172551.148 ops/s
# Warmup Iteration  29: 164782.222 ops/s
# Warmup Iteration  30: 169428.771 ops/s
Iteration   1: 166222.503 ops/s
Iteration   2: 168133.392 ops/s
Iteration   3: 173213.606 ops/s
Iteration   4: 173692.704 ops/s
Iteration   5: 163645.728 ops/s
Iteration   6: 173992.413 ops/s
Iteration   7: 162615.740 ops/s
Iteration   8: 169536.246 ops/s
Iteration   9: 167930.752 ops/s
Iteration  10: 166156.733 ops/s
Iteration  11: 172821.422 ops/s
Iteration  12: 168605.553 ops/s
Iteration  13: 165084.601 ops/s
Iteration  14: 176978.791 ops/s
Iteration  15: 168646.593 ops/s
Iteration  16: 169306.310 ops/s
Iteration  17: 164803.154 ops/s
Iteration  18: 173636.869 ops/s
Iteration  19: 172831.729 ops/s
Iteration  20: 165695.904 ops/s
Iteration  21: 171370.407 ops/s
Iteration  22: 172084.098 ops/s
Iteration  23: 171146.868 ops/s
Iteration  24: 170268.381 ops/s
Iteration  25: 165057.664 ops/s
Iteration  26: 173751.283 ops/s
Iteration  27: 165564.235 ops/s
Iteration  28: 166507.387 ops/s
Iteration  29: 175965.919 ops/s
Iteration  30: 164505.741 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_536._Benchmark.benchmark_Cluster_536":
  169325.757 ±(99.9%) 2642.948 ops/s [Average]
  (min, avg, max) = (162615.740, 169325.757, 176978.791), stdev = 3955.840
  CI (99.9%): [166682.810, 171968.705] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_536._Benchmark.benchmark_Cluster_536  thrpt   30  169325.757 ± 2642.948  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_537._Benchmark.benchmark_Cluster_537$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_537._Benchmark.benchmark_Cluster_537

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9712.603 ops/s
# Warmup Iteration   2: 36890.275 ops/s
# Warmup Iteration   3: 37580.263 ops/s
# Warmup Iteration   4: 46536.511 ops/s
# Warmup Iteration   5: 64615.795 ops/s
# Warmup Iteration   6: 123864.608 ops/s
# Warmup Iteration   7: 128991.304 ops/s
# Warmup Iteration   8: 127453.977 ops/s
# Warmup Iteration   9: 124735.474 ops/s
# Warmup Iteration  10: 99094.245 ops/s
# Warmup Iteration  11: 128586.110 ops/s
# Warmup Iteration  12: 122122.263 ops/s
# Warmup Iteration  13: 129444.003 ops/s
# Warmup Iteration  14: 131335.190 ops/s
# Warmup Iteration  15: 121257.618 ops/s
# Warmup Iteration  16: 126655.605 ops/s
# Warmup Iteration  17: 128083.014 ops/s
# Warmup Iteration  18: 132468.643 ops/s
# Warmup Iteration  19: 132560.757 ops/s
# Warmup Iteration  20: 129047.842 ops/s
# Warmup Iteration  21: 138394.334 ops/s
# Warmup Iteration  22: 135711.532 ops/s
# Warmup Iteration  23: 130615.524 ops/s
# Warmup Iteration  24: 126974.260 ops/s
# Warmup Iteration  25: 130847.401 ops/s
# Warmup Iteration  26: 136240.872 ops/s
# Warmup Iteration  27: 130802.577 ops/s
# Warmup Iteration  28: 133848.349 ops/s
# Warmup Iteration  29: 131561.073 ops/s
# Warmup Iteration  30: 132133.025 ops/s
Iteration   1: 137151.836 ops/s
Iteration   2: 134753.469 ops/s
Iteration   3: 128026.927 ops/s
Iteration   4: 131943.979 ops/s
Iteration   5: 127000.240 ops/s
Iteration   6: 134044.320 ops/s
Iteration   7: 135149.597 ops/s
Iteration   8: 130583.243 ops/s
Iteration   9: 130296.659 ops/s
Iteration  10: 139605.254 ops/s
Iteration  11: 126861.643 ops/s
Iteration  12: 135360.786 ops/s
Iteration  13: 133677.165 ops/s
Iteration  14: 131726.674 ops/s
Iteration  15: 135919.852 ops/s
Iteration  16: 131081.384 ops/s
Iteration  17: 132525.492 ops/s
Iteration  18: 137603.625 ops/s
Iteration  19: 130439.180 ops/s
Iteration  20: 133696.622 ops/s
Iteration  21: 131583.898 ops/s
Iteration  22: 131373.190 ops/s
Iteration  23: 137116.377 ops/s
Iteration  24: 132423.375 ops/s
Iteration  25: 133398.909 ops/s
Iteration  26: 133454.477 ops/s
Iteration  27: 131961.613 ops/s
Iteration  28: 129351.532 ops/s
Iteration  29: 132865.242 ops/s
Iteration  30: 138220.696 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_537._Benchmark.benchmark_Cluster_537":
  132973.242 ±(99.9%) 2129.388 ops/s [Average]
  (min, avg, max) = (126861.643, 132973.242, 139605.254), stdev = 3187.167
  CI (99.9%): [130843.854, 135102.629] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_537._Benchmark.benchmark_Cluster_537  thrpt   30  132973.242 ± 2129.388  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_538._Benchmark.benchmark_Cluster_538$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_538._Benchmark.benchmark_Cluster_538

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 26088.890 ops/s
# Warmup Iteration   2: 80200.810 ops/s
# Warmup Iteration   3: 133926.304 ops/s
# Warmup Iteration   4: 154321.346 ops/s
# Warmup Iteration   5: 166958.309 ops/s
# Warmup Iteration   6: 163305.290 ops/s
# Warmup Iteration   7: 150812.449 ops/s
# Warmup Iteration   8: 159999.204 ops/s
# Warmup Iteration   9: 159102.249 ops/s
# Warmup Iteration  10: 162315.720 ops/s
# Warmup Iteration  11: 161353.224 ops/s
# Warmup Iteration  12: 169075.011 ops/s
# Warmup Iteration  13: 169174.989 ops/s
# Warmup Iteration  14: 158836.149 ops/s
# Warmup Iteration  15: 166564.607 ops/s
# Warmup Iteration  16: 160513.851 ops/s
# Warmup Iteration  17: 171260.949 ops/s
# Warmup Iteration  18: 166421.287 ops/s
# Warmup Iteration  19: 167246.692 ops/s
# Warmup Iteration  20: 171648.724 ops/s
# Warmup Iteration  21: 163513.907 ops/s
# Warmup Iteration  22: 173455.599 ops/s
# Warmup Iteration  23: 167523.197 ops/s
# Warmup Iteration  24: 161750.681 ops/s
# Warmup Iteration  25: 166882.720 ops/s
# Warmup Iteration  26: 174250.008 ops/s
# Warmup Iteration  27: 167324.328 ops/s
# Warmup Iteration  28: 164349.221 ops/s
# Warmup Iteration  29: 175735.374 ops/s
# Warmup Iteration  30: 161652.491 ops/s
Iteration   1: 168702.011 ops/s
Iteration   2: 161824.771 ops/s
Iteration   3: 172775.226 ops/s
Iteration   4: 165596.514 ops/s
Iteration   5: 167608.555 ops/s
Iteration   6: 163013.764 ops/s
Iteration   7: 165215.071 ops/s
Iteration   8: 164786.526 ops/s
Iteration   9: 159954.426 ops/s
Iteration  10: 168703.262 ops/s
Iteration  11: 177244.422 ops/s
Iteration  12: 166403.039 ops/s
Iteration  13: 159740.806 ops/s
Iteration  14: 171961.522 ops/s
Iteration  15: 170806.913 ops/s
Iteration  16: 165150.693 ops/s
Iteration  17: 173692.309 ops/s
Iteration  18: 168933.702 ops/s
Iteration  19: 166853.904 ops/s
Iteration  20: 175122.590 ops/s
Iteration  21: 165928.401 ops/s
Iteration  22: 171968.880 ops/s
Iteration  23: 174502.642 ops/s
Iteration  24: 164881.440 ops/s
Iteration  25: 172148.331 ops/s
Iteration  26: 171331.953 ops/s
Iteration  27: 168406.001 ops/s
Iteration  28: 166866.812 ops/s
Iteration  29: 169161.575 ops/s
Iteration  30: 177115.533 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_538._Benchmark.benchmark_Cluster_538":
  168546.720 ±(99.9%) 3104.244 ops/s [Average]
  (min, avg, max) = (159740.806, 168546.720, 177244.422), stdev = 4646.287
  CI (99.9%): [165442.476, 171650.964] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_538._Benchmark.benchmark_Cluster_538  thrpt   30  168546.720 ± 3104.244  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_539._Benchmark.benchmark_Cluster_539$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_539._Benchmark.benchmark_Cluster_539

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2732.824 ops/s
# Warmup Iteration   2: 39064.441 ops/s
# Warmup Iteration   3: 58704.618 ops/s
# Warmup Iteration   4: 65981.849 ops/s
# Warmup Iteration   5: 150202.542 ops/s
# Warmup Iteration   6: 177054.099 ops/s
# Warmup Iteration   7: 165753.914 ops/s
# Warmup Iteration   8: 178224.456 ops/s
# Warmup Iteration   9: 189021.552 ops/s
# Warmup Iteration  10: 178571.261 ops/s
# Warmup Iteration  11: 180609.931 ops/s
# Warmup Iteration  12: 195015.962 ops/s
# Warmup Iteration  13: 177802.358 ops/s
# Warmup Iteration  14: 192451.956 ops/s
# Warmup Iteration  15: 188229.574 ops/s
# Warmup Iteration  16: 183514.022 ops/s
# Warmup Iteration  17: 193241.962 ops/s
# Warmup Iteration  18: 195517.679 ops/s
# Warmup Iteration  19: 186825.409 ops/s
# Warmup Iteration  20: 195154.275 ops/s
# Warmup Iteration  21: 184009.282 ops/s
# Warmup Iteration  22: 186427.736 ops/s
# Warmup Iteration  23: 195740.763 ops/s
# Warmup Iteration  24: 181709.243 ops/s
# Warmup Iteration  25: 186304.162 ops/s
# Warmup Iteration  26: 194228.767 ops/s
# Warmup Iteration  27: 185007.137 ops/s
# Warmup Iteration  28: 190036.245 ops/s
# Warmup Iteration  29: 195318.725 ops/s
# Warmup Iteration  30: 185762.585 ops/s
Iteration   1: 189407.675 ops/s
Iteration   2: 199149.195 ops/s
Iteration   3: 197064.734 ops/s
Iteration   4: 177651.201 ops/s
Iteration   5: 195040.651 ops/s
Iteration   6: 183184.271 ops/s
Iteration   7: 193812.381 ops/s
Iteration   8: 183415.247 ops/s
Iteration   9: 185632.414 ops/s
Iteration  10: 187962.019 ops/s
Iteration  11: 187158.566 ops/s
Iteration  12: 192767.351 ops/s
Iteration  13: 185560.418 ops/s
Iteration  14: 186099.537 ops/s
Iteration  15: 191593.048 ops/s
Iteration  16: 172642.402 ops/s
Iteration  17: 187250.036 ops/s
Iteration  18: 199255.468 ops/s
Iteration  19: 183505.598 ops/s
Iteration  20: 195051.864 ops/s
Iteration  21: 185716.327 ops/s
Iteration  22: 197448.715 ops/s
Iteration  23: 186152.178 ops/s
Iteration  24: 193220.151 ops/s
Iteration  25: 190530.382 ops/s
Iteration  26: 191797.226 ops/s
Iteration  27: 190008.273 ops/s
Iteration  28: 186207.470 ops/s
Iteration  29: 197541.224 ops/s
Iteration  30: 182264.575 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_539._Benchmark.benchmark_Cluster_539":
  189136.353 ±(99.9%) 4236.583 ops/s [Average]
  (min, avg, max) = (172642.402, 189136.353, 199255.468), stdev = 6341.119
  CI (99.9%): [184899.770, 193372.937] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_539._Benchmark.benchmark_Cluster_539  thrpt   30  189136.353 ± 4236.583  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_54._Benchmark.benchmark_Cluster_54$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_54._Benchmark.benchmark_Cluster_54

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1785.665 ops/s
# Warmup Iteration   2: 18434.288 ops/s
# Warmup Iteration   3: 21943.962 ops/s
# Warmup Iteration   4: 31623.022 ops/s
# Warmup Iteration   5: 32041.395 ops/s
# Warmup Iteration   6: 41139.478 ops/s
# Warmup Iteration   7: 60720.170 ops/s
# Warmup Iteration   8: 85662.611 ops/s
# Warmup Iteration   9: 92814.681 ops/s
# Warmup Iteration  10: 90845.853 ops/s
# Warmup Iteration  11: 90038.405 ops/s
# Warmup Iteration  12: 87185.797 ops/s
# Warmup Iteration  13: 92052.170 ops/s
# Warmup Iteration  14: 86400.519 ops/s
# Warmup Iteration  15: 89177.909 ops/s
# Warmup Iteration  16: 86173.730 ops/s
# Warmup Iteration  17: 90721.766 ops/s
# Warmup Iteration  18: 90113.862 ops/s
# Warmup Iteration  19: 87783.802 ops/s
# Warmup Iteration  20: 90811.923 ops/s
# Warmup Iteration  21: 86212.785 ops/s
# Warmup Iteration  22: 89996.697 ops/s
# Warmup Iteration  23: 89001.360 ops/s
# Warmup Iteration  24: 89994.787 ops/s
# Warmup Iteration  25: 91768.665 ops/s
# Warmup Iteration  26: 87118.602 ops/s
# Warmup Iteration  27: 93232.561 ops/s
# Warmup Iteration  28: 91010.696 ops/s
# Warmup Iteration  29: 88429.871 ops/s
# Warmup Iteration  30: 93194.249 ops/s
Iteration   1: 88205.983 ops/s
Iteration   2: 89868.414 ops/s
Iteration   3: 94724.688 ops/s
Iteration   4: 90821.325 ops/s
Iteration   5: 88188.125 ops/s
Iteration   6: 90023.822 ops/s
Iteration   7: 89998.505 ops/s
Iteration   8: 91642.378 ops/s
Iteration   9: 87611.551 ops/s
Iteration  10: 90959.530 ops/s
Iteration  11: 93436.122 ops/s
Iteration  12: 86334.734 ops/s
Iteration  13: 91780.503 ops/s
Iteration  14: 86229.082 ops/s
Iteration  15: 87556.542 ops/s
Iteration  16: 93636.513 ops/s
Iteration  17: 90516.362 ops/s
Iteration  18: 88104.533 ops/s
Iteration  19: 92675.270 ops/s
Iteration  20: 88012.973 ops/s
Iteration  21: 92293.467 ops/s
Iteration  22: 88480.855 ops/s
Iteration  23: 92573.231 ops/s
Iteration  24: 93047.330 ops/s
Iteration  25: 88884.719 ops/s
Iteration  26: 93289.255 ops/s
Iteration  27: 88008.008 ops/s
Iteration  28: 93089.873 ops/s
Iteration  29: 87850.426 ops/s
Iteration  30: 71550.820 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_54._Benchmark.benchmark_Cluster_54":
  89646.498 ±(99.9%) 2790.584 ops/s [Average]
  (min, avg, max) = (71550.820, 89646.498, 94724.688), stdev = 4176.816
  CI (99.9%): [86855.914, 92437.082] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_54._Benchmark.benchmark_Cluster_54  thrpt   30  89646.498 ± 2790.584  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_540._Benchmark.benchmark_Cluster_540$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_540._Benchmark.benchmark_Cluster_540

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9673.106 ops/s
# Warmup Iteration   2: 45466.263 ops/s
# Warmup Iteration   3: 86239.731 ops/s
# Warmup Iteration   4: 121483.927 ops/s
# Warmup Iteration   5: 127058.621 ops/s
# Warmup Iteration   6: 127038.826 ops/s
# Warmup Iteration   7: 123879.175 ops/s
# Warmup Iteration   8: 129926.446 ops/s
# Warmup Iteration   9: 117394.351 ops/s
# Warmup Iteration  10: 117558.892 ops/s
# Warmup Iteration  11: 129001.677 ops/s
# Warmup Iteration  12: 122252.086 ops/s
# Warmup Iteration  13: 130374.877 ops/s
# Warmup Iteration  14: 127061.010 ops/s
# Warmup Iteration  15: 127072.390 ops/s
# Warmup Iteration  16: 122100.592 ops/s
# Warmup Iteration  17: 127846.126 ops/s
# Warmup Iteration  18: 131685.720 ops/s
# Warmup Iteration  19: 130478.541 ops/s
# Warmup Iteration  20: 133021.070 ops/s
# Warmup Iteration  21: 134625.577 ops/s
# Warmup Iteration  22: 131674.168 ops/s
# Warmup Iteration  23: 131877.109 ops/s
# Warmup Iteration  24: 129214.882 ops/s
# Warmup Iteration  25: 131511.848 ops/s
# Warmup Iteration  26: 134562.960 ops/s
# Warmup Iteration  27: 128412.874 ops/s
# Warmup Iteration  28: 136102.396 ops/s
# Warmup Iteration  29: 128005.175 ops/s
# Warmup Iteration  30: 135291.409 ops/s
Iteration   1: 129963.891 ops/s
Iteration   2: 128053.635 ops/s
Iteration   3: 132207.294 ops/s
Iteration   4: 128359.226 ops/s
Iteration   5: 134594.652 ops/s
Iteration   6: 130428.449 ops/s
Iteration   7: 136587.201 ops/s
Iteration   8: 130534.338 ops/s
Iteration   9: 130942.303 ops/s
Iteration  10: 133161.738 ops/s
Iteration  11: 133468.214 ops/s
Iteration  12: 131558.934 ops/s
Iteration  13: 132773.126 ops/s
Iteration  14: 134318.065 ops/s
Iteration  15: 136447.201 ops/s
Iteration  16: 134615.015 ops/s
Iteration  17: 127583.946 ops/s
Iteration  18: 135465.974 ops/s
Iteration  19: 130433.985 ops/s
Iteration  20: 134923.262 ops/s
Iteration  21: 131591.430 ops/s
Iteration  22: 133584.219 ops/s
Iteration  23: 131501.421 ops/s
Iteration  24: 132381.308 ops/s
Iteration  25: 134131.523 ops/s
Iteration  26: 130377.689 ops/s
Iteration  27: 134995.761 ops/s
Iteration  28: 130317.406 ops/s
Iteration  29: 136250.951 ops/s
Iteration  30: 133371.488 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_540._Benchmark.benchmark_Cluster_540":
  132497.455 ±(99.9%) 1664.086 ops/s [Average]
  (min, avg, max) = (127583.946, 132497.455, 136587.201), stdev = 2490.725
  CI (99.9%): [130833.369, 134161.540] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_540._Benchmark.benchmark_Cluster_540  thrpt   30  132497.455 ± 1664.086  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_541._Benchmark.benchmark_Cluster_541$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_541._Benchmark.benchmark_Cluster_541

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1918.021 ops/s
# Warmup Iteration   2: 27478.915 ops/s
# Warmup Iteration   3: 26097.659 ops/s
# Warmup Iteration   4: 44454.849 ops/s
# Warmup Iteration   5: 66638.059 ops/s
# Warmup Iteration   6: 114791.971 ops/s
# Warmup Iteration   7: 107132.807 ops/s
# Warmup Iteration   8: 112103.591 ops/s
# Warmup Iteration   9: 107531.621 ops/s
# Warmup Iteration  10: 117121.925 ops/s
# Warmup Iteration  11: 115495.614 ops/s
# Warmup Iteration  12: 124035.574 ops/s
# Warmup Iteration  13: 112789.915 ops/s
# Warmup Iteration  14: 123516.351 ops/s
# Warmup Iteration  15: 115561.193 ops/s
# Warmup Iteration  16: 117787.277 ops/s
# Warmup Iteration  17: 120007.653 ops/s
# Warmup Iteration  18: 118367.694 ops/s
# Warmup Iteration  19: 120320.457 ops/s
# Warmup Iteration  20: 111268.157 ops/s
# Warmup Iteration  21: 121104.972 ops/s
# Warmup Iteration  22: 120933.958 ops/s
# Warmup Iteration  23: 120590.409 ops/s
# Warmup Iteration  24: 119790.120 ops/s
# Warmup Iteration  25: 120657.534 ops/s
# Warmup Iteration  26: 125076.752 ops/s
# Warmup Iteration  27: 120069.599 ops/s
# Warmup Iteration  28: 115842.855 ops/s
# Warmup Iteration  29: 124010.548 ops/s
# Warmup Iteration  30: 116190.816 ops/s
Iteration   1: 122397.763 ops/s
Iteration   2: 123602.646 ops/s
Iteration   3: 115233.894 ops/s
Iteration   4: 121252.311 ops/s
Iteration   5: 115688.486 ops/s
Iteration   6: 115697.568 ops/s
Iteration   7: 122493.283 ops/s
Iteration   8: 115372.123 ops/s
Iteration   9: 125544.199 ops/s
Iteration  10: 113713.537 ops/s
Iteration  11: 122527.294 ops/s
Iteration  12: 121078.806 ops/s
Iteration  13: 121281.900 ops/s
Iteration  14: 118701.185 ops/s
Iteration  15: 115169.325 ops/s
Iteration  16: 124571.432 ops/s
Iteration  17: 116674.171 ops/s
Iteration  18: 125311.623 ops/s
Iteration  19: 117798.630 ops/s
Iteration  20: 118394.896 ops/s
Iteration  21: 124574.736 ops/s
Iteration  22: 115831.327 ops/s
Iteration  23: 123735.279 ops/s
Iteration  24: 112963.487 ops/s
Iteration  25: 106697.161 ops/s
Iteration  26: 117195.685 ops/s
Iteration  27: 122168.623 ops/s
Iteration  28: 117030.764 ops/s
Iteration  29: 117098.578 ops/s
Iteration  30: 126554.339 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_541._Benchmark.benchmark_Cluster_541":
  119211.835 ±(99.9%) 3070.906 ops/s [Average]
  (min, avg, max) = (106697.161, 119211.835, 126554.339), stdev = 4596.388
  CI (99.9%): [116140.929, 122282.741] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_541._Benchmark.benchmark_Cluster_541  thrpt   30  119211.835 ± 3070.906  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_542._Benchmark.benchmark_Cluster_542$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_542._Benchmark.benchmark_Cluster_542

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2071.866 ops/s
# Warmup Iteration   2: 25931.368 ops/s
# Warmup Iteration   3: 58086.940 ops/s
# Warmup Iteration   4: 67825.748 ops/s
# Warmup Iteration   5: 128216.437 ops/s
# Warmup Iteration   6: 146821.377 ops/s
# Warmup Iteration   7: 160268.025 ops/s
# Warmup Iteration   8: 161667.786 ops/s
# Warmup Iteration   9: 162624.704 ops/s
# Warmup Iteration  10: 160107.078 ops/s
# Warmup Iteration  11: 154362.375 ops/s
# Warmup Iteration  12: 149716.835 ops/s
# Warmup Iteration  13: 164407.197 ops/s
# Warmup Iteration  14: 162537.186 ops/s
# Warmup Iteration  15: 161551.942 ops/s
# Warmup Iteration  16: 169012.743 ops/s
# Warmup Iteration  17: 163061.181 ops/s
# Warmup Iteration  18: 160141.653 ops/s
# Warmup Iteration  19: 165049.591 ops/s
# Warmup Iteration  20: 153116.561 ops/s
# Warmup Iteration  21: 148441.191 ops/s
# Warmup Iteration  22: 169586.973 ops/s
# Warmup Iteration  23: 164465.671 ops/s
# Warmup Iteration  24: 158017.623 ops/s
# Warmup Iteration  25: 168409.977 ops/s
# Warmup Iteration  26: 153422.093 ops/s
# Warmup Iteration  27: 167766.682 ops/s
# Warmup Iteration  28: 162880.719 ops/s
# Warmup Iteration  29: 166619.478 ops/s
# Warmup Iteration  30: 159387.147 ops/s
Iteration   1: 164768.660 ops/s
Iteration   2: 163121.935 ops/s
Iteration   3: 161347.213 ops/s
Iteration   4: 163888.727 ops/s
Iteration   5: 159556.387 ops/s
Iteration   6: 166222.649 ops/s
Iteration   7: 162457.397 ops/s
Iteration   8: 163859.351 ops/s
Iteration   9: 162901.873 ops/s
Iteration  10: 165977.359 ops/s
Iteration  11: 159679.956 ops/s
Iteration  12: 161703.666 ops/s
Iteration  13: 171728.145 ops/s
Iteration  14: 161089.226 ops/s
Iteration  15: 160017.316 ops/s
Iteration  16: 158840.700 ops/s
Iteration  17: 164957.563 ops/s
Iteration  18: 164988.330 ops/s
Iteration  19: 161983.907 ops/s
Iteration  20: 159794.154 ops/s
Iteration  21: 170266.256 ops/s
Iteration  22: 165798.298 ops/s
Iteration  23: 159416.733 ops/s
Iteration  24: 165393.247 ops/s
Iteration  25: 160104.185 ops/s
Iteration  26: 163834.401 ops/s
Iteration  27: 167268.714 ops/s
Iteration  28: 163846.296 ops/s
Iteration  29: 157964.462 ops/s
Iteration  30: 170176.882 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_542._Benchmark.benchmark_Cluster_542":
  163431.800 ±(99.9%) 2337.998 ops/s [Average]
  (min, avg, max) = (157964.462, 163431.800, 171728.145), stdev = 3499.405
  CI (99.9%): [161093.802, 165769.797] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_542._Benchmark.benchmark_Cluster_542  thrpt   30  163431.800 ± 2337.998  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_543._Benchmark.benchmark_Cluster_543$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_543._Benchmark.benchmark_Cluster_543

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3593.461 ops/s
# Warmup Iteration   2: 28420.274 ops/s
# Warmup Iteration   3: 30737.207 ops/s
# Warmup Iteration   4: 21741.482 ops/s
# Warmup Iteration   5: 40423.423 ops/s
# Warmup Iteration   6: 41657.221 ops/s
# Warmup Iteration   7: 52949.740 ops/s
# Warmup Iteration   8: 94673.365 ops/s
# Warmup Iteration   9: 81038.596 ops/s
# Warmup Iteration  10: 68580.499 ops/s
# Warmup Iteration  11: 85065.539 ops/s
# Warmup Iteration  12: 87239.817 ops/s
# Warmup Iteration  13: 83655.874 ops/s
# Warmup Iteration  14: 89124.706 ops/s
# Warmup Iteration  15: 82200.291 ops/s
# Warmup Iteration  16: 90220.131 ops/s
# Warmup Iteration  17: 91127.024 ops/s
# Warmup Iteration  18: 97386.505 ops/s
# Warmup Iteration  19: 70974.710 ops/s
# Warmup Iteration  20: 92845.806 ops/s
# Warmup Iteration  21: 87142.962 ops/s
# Warmup Iteration  22: 91126.018 ops/s
# Warmup Iteration  23: 94916.467 ops/s
# Warmup Iteration  24: 96710.277 ops/s
# Warmup Iteration  25: 93270.579 ops/s
# Warmup Iteration  26: 90367.757 ops/s
# Warmup Iteration  27: 89858.493 ops/s
# Warmup Iteration  28: 82432.888 ops/s
# Warmup Iteration  29: 78453.336 ops/s
# Warmup Iteration  30: 77049.116 ops/s
Iteration   1: 86266.625 ops/s
Iteration   2: 78968.580 ops/s
Iteration   3: 86922.991 ops/s
Iteration   4: 84841.481 ops/s
Iteration   5: 93633.363 ops/s
Iteration   6: 82174.342 ops/s
Iteration   7: 84099.759 ops/s
Iteration   8: 87684.652 ops/s
Iteration   9: 96489.983 ops/s
Iteration  10: 98941.105 ops/s
Iteration  11: 84610.534 ops/s
Iteration  12: 93193.305 ops/s
Iteration  13: 92785.985 ops/s
Iteration  14: 85962.108 ops/s
Iteration  15: 86127.804 ops/s
Iteration  16: 79647.645 ops/s
Iteration  17: 89241.786 ops/s
Iteration  18: 85796.932 ops/s
Iteration  19: 87909.040 ops/s
Iteration  20: 92551.317 ops/s
Iteration  21: 84484.848 ops/s
Iteration  22: 88190.863 ops/s
Iteration  23: 84265.044 ops/s
Iteration  24: 81433.180 ops/s
Iteration  25: 82224.866 ops/s
Iteration  26: 87315.094 ops/s
Iteration  27: 89888.726 ops/s
Iteration  28: 89097.316 ops/s
Iteration  29: 89547.377 ops/s
Iteration  30: 92897.769 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_543._Benchmark.benchmark_Cluster_543":
  87573.147 ±(99.9%) 3195.395 ops/s [Average]
  (min, avg, max) = (78968.580, 87573.147, 98941.105), stdev = 4782.716
  CI (99.9%): [84377.753, 90768.542] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_543._Benchmark.benchmark_Cluster_543  thrpt   30  87573.147 ± 3195.395  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_544._Benchmark.benchmark_Cluster_544$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_544._Benchmark.benchmark_Cluster_544

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1932.904 ops/s
# Warmup Iteration   2: 23433.367 ops/s
# Warmup Iteration   3: 30026.107 ops/s
# Warmup Iteration   4: 39984.615 ops/s
# Warmup Iteration   5: 78165.520 ops/s
# Warmup Iteration   6: 87177.556 ops/s
# Warmup Iteration   7: 95336.998 ops/s
# Warmup Iteration   8: 91509.741 ops/s
# Warmup Iteration   9: 90805.839 ops/s
# Warmup Iteration  10: 86776.687 ops/s
# Warmup Iteration  11: 94323.005 ops/s
# Warmup Iteration  12: 87848.399 ops/s
# Warmup Iteration  13: 91676.744 ops/s
# Warmup Iteration  14: 97090.449 ops/s
# Warmup Iteration  15: 91177.085 ops/s
# Warmup Iteration  16: 96868.036 ops/s
# Warmup Iteration  17: 98994.938 ops/s
# Warmup Iteration  18: 97469.581 ops/s
# Warmup Iteration  19: 102253.650 ops/s
# Warmup Iteration  20: 95915.798 ops/s
# Warmup Iteration  21: 99908.371 ops/s
# Warmup Iteration  22: 99600.730 ops/s
# Warmup Iteration  23: 97768.438 ops/s
# Warmup Iteration  24: 96766.049 ops/s
# Warmup Iteration  25: 99208.841 ops/s
# Warmup Iteration  26: 99207.730 ops/s
# Warmup Iteration  27: 101933.284 ops/s
# Warmup Iteration  28: 96901.161 ops/s
# Warmup Iteration  29: 98517.752 ops/s
# Warmup Iteration  30: 102114.990 ops/s
Iteration   1: 97650.018 ops/s
Iteration   2: 96415.654 ops/s
Iteration   3: 101376.799 ops/s
Iteration   4: 96842.990 ops/s
Iteration   5: 101035.428 ops/s
Iteration   6: 97417.740 ops/s
Iteration   7: 96280.608 ops/s
Iteration   8: 101353.471 ops/s
Iteration   9: 98773.512 ops/s
Iteration  10: 102218.152 ops/s
Iteration  11: 96155.268 ops/s
Iteration  12: 99458.006 ops/s
Iteration  13: 99049.954 ops/s
Iteration  14: 98039.909 ops/s
Iteration  15: 98996.152 ops/s
Iteration  16: 102470.019 ops/s
Iteration  17: 95494.281 ops/s
Iteration  18: 99166.509 ops/s
Iteration  19: 103847.232 ops/s
Iteration  20: 93538.754 ops/s
Iteration  21: 100040.352 ops/s
Iteration  22: 99022.244 ops/s
Iteration  23: 102284.617 ops/s
Iteration  24: 101358.617 ops/s
Iteration  25: 98366.817 ops/s
Iteration  26: 100923.882 ops/s
Iteration  27: 99799.098 ops/s
Iteration  28: 96815.544 ops/s
Iteration  29: 101955.516 ops/s
Iteration  30: 93459.506 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_544._Benchmark.benchmark_Cluster_544":
  98986.888 ±(99.9%) 1763.615 ops/s [Average]
  (min, avg, max) = (93459.506, 98986.888, 103847.232), stdev = 2639.696
  CI (99.9%): [97223.273, 100750.503] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_544._Benchmark.benchmark_Cluster_544  thrpt   30  98986.888 ± 1763.615  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_545._Benchmark.benchmark_Cluster_545$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_545._Benchmark.benchmark_Cluster_545

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9933.007 ops/s
# Warmup Iteration   2: 28406.160 ops/s
# Warmup Iteration   3: 37162.113 ops/s
# Warmup Iteration   4: 82326.027 ops/s
# Warmup Iteration   5: 99075.128 ops/s
# Warmup Iteration   6: 101234.728 ops/s
# Warmup Iteration   7: 107931.590 ops/s
# Warmup Iteration   8: 104101.633 ops/s
# Warmup Iteration   9: 95735.640 ops/s
# Warmup Iteration  10: 107056.425 ops/s
# Warmup Iteration  11: 107073.052 ops/s
# Warmup Iteration  12: 98348.951 ops/s
# Warmup Iteration  13: 105483.032 ops/s
# Warmup Iteration  14: 103459.090 ops/s
# Warmup Iteration  15: 101212.351 ops/s
# Warmup Iteration  16: 106877.960 ops/s
# Warmup Iteration  17: 101029.586 ops/s
# Warmup Iteration  18: 104968.991 ops/s
# Warmup Iteration  19: 106864.631 ops/s
# Warmup Iteration  20: 101358.631 ops/s
# Warmup Iteration  21: 106528.687 ops/s
# Warmup Iteration  22: 100460.724 ops/s
# Warmup Iteration  23: 101462.321 ops/s
# Warmup Iteration  24: 104279.253 ops/s
# Warmup Iteration  25: 101879.832 ops/s
# Warmup Iteration  26: 102685.926 ops/s
# Warmup Iteration  27: 106816.860 ops/s
# Warmup Iteration  28: 105490.571 ops/s
# Warmup Iteration  29: 102140.818 ops/s
# Warmup Iteration  30: 105711.335 ops/s
Iteration   1: 106844.798 ops/s
Iteration   2: 100411.643 ops/s
Iteration   3: 106760.512 ops/s
Iteration   4: 104238.962 ops/s
Iteration   5: 105620.398 ops/s
Iteration   6: 101887.126 ops/s
Iteration   7: 102697.853 ops/s
Iteration   8: 104319.477 ops/s
Iteration   9: 102813.898 ops/s
Iteration  10: 105536.978 ops/s
Iteration  11: 91539.373 ops/s
Iteration  12: 94685.849 ops/s
Iteration  13: 105323.456 ops/s
Iteration  14: 100618.132 ops/s
Iteration  15: 101750.277 ops/s
Iteration  16: 105988.866 ops/s
Iteration  17: 104221.024 ops/s
Iteration  18: 105994.322 ops/s
Iteration  19: 100397.888 ops/s
Iteration  20: 106817.469 ops/s
Iteration  21: 102437.283 ops/s
Iteration  22: 107333.517 ops/s
Iteration  23: 104789.225 ops/s
Iteration  24: 107657.806 ops/s
Iteration  25: 100515.539 ops/s
Iteration  26: 107671.228 ops/s
Iteration  27: 104463.017 ops/s
Iteration  28: 100256.238 ops/s
Iteration  29: 107207.752 ops/s
Iteration  30: 107903.390 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_545._Benchmark.benchmark_Cluster_545":
  103623.443 ±(99.9%) 2540.004 ops/s [Average]
  (min, avg, max) = (91539.373, 103623.443, 107903.390), stdev = 3801.758
  CI (99.9%): [101083.439, 106163.447] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_545._Benchmark.benchmark_Cluster_545  thrpt   30  103623.443 ± 2540.004  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_546._Benchmark.benchmark_Cluster_546$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_546._Benchmark.benchmark_Cluster_546

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4438.555 ops/s
# Warmup Iteration   2: 22388.750 ops/s
# Warmup Iteration   3: 44706.475 ops/s
# Warmup Iteration   4: 84645.811 ops/s
# Warmup Iteration   5: 117243.063 ops/s
# Warmup Iteration   6: 111126.912 ops/s
# Warmup Iteration   7: 114434.251 ops/s
# Warmup Iteration   8: 108473.874 ops/s
# Warmup Iteration   9: 117020.355 ops/s
# Warmup Iteration  10: 120152.027 ops/s
# Warmup Iteration  11: 125081.462 ops/s
# Warmup Iteration  12: 123497.284 ops/s
# Warmup Iteration  13: 120999.203 ops/s
# Warmup Iteration  14: 121763.830 ops/s
# Warmup Iteration  15: 123428.232 ops/s
# Warmup Iteration  16: 117846.659 ops/s
# Warmup Iteration  17: 131963.245 ops/s
# Warmup Iteration  18: 126792.992 ops/s
# Warmup Iteration  19: 123018.257 ops/s
# Warmup Iteration  20: 129022.775 ops/s
# Warmup Iteration  21: 122528.441 ops/s
# Warmup Iteration  22: 126492.093 ops/s
# Warmup Iteration  23: 122749.642 ops/s
# Warmup Iteration  24: 121688.997 ops/s
# Warmup Iteration  25: 129493.157 ops/s
# Warmup Iteration  26: 122059.799 ops/s
# Warmup Iteration  27: 124918.350 ops/s
# Warmup Iteration  28: 132812.619 ops/s
# Warmup Iteration  29: 122826.198 ops/s
# Warmup Iteration  30: 129021.982 ops/s
Iteration   1: 130417.390 ops/s
Iteration   2: 126282.597 ops/s
Iteration   3: 121114.374 ops/s
Iteration   4: 129111.401 ops/s
Iteration   5: 121922.412 ops/s
Iteration   6: 127262.525 ops/s
Iteration   7: 128012.261 ops/s
Iteration   8: 120723.760 ops/s
Iteration   9: 130067.583 ops/s
Iteration  10: 126792.750 ops/s
Iteration  11: 122472.354 ops/s
Iteration  12: 123942.155 ops/s
Iteration  13: 128423.155 ops/s
Iteration  14: 125528.536 ops/s
Iteration  15: 121106.361 ops/s
Iteration  16: 126623.414 ops/s
Iteration  17: 120047.264 ops/s
Iteration  18: 124492.663 ops/s
Iteration  19: 122994.434 ops/s
Iteration  20: 127358.921 ops/s
Iteration  21: 125006.665 ops/s
Iteration  22: 123190.908 ops/s
Iteration  23: 133640.050 ops/s
Iteration  24: 124290.519 ops/s
Iteration  25: 127916.204 ops/s
Iteration  26: 130320.840 ops/s
Iteration  27: 130070.029 ops/s
Iteration  28: 126159.399 ops/s
Iteration  29: 124293.674 ops/s
Iteration  30: 126823.923 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_546._Benchmark.benchmark_Cluster_546":
  125880.284 ±(99.9%) 2248.239 ops/s [Average]
  (min, avg, max) = (120047.264, 125880.284, 133640.050), stdev = 3365.059
  CI (99.9%): [123632.045, 128128.523] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_546._Benchmark.benchmark_Cluster_546  thrpt   30  125880.284 ± 2248.239  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_547._Benchmark.benchmark_Cluster_547$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_547._Benchmark.benchmark_Cluster_547

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3015.828 ops/s
# Warmup Iteration   2: 24860.769 ops/s
# Warmup Iteration   3: 37669.439 ops/s
# Warmup Iteration   4: 34409.378 ops/s
# Warmup Iteration   5: 65675.094 ops/s
# Warmup Iteration   6: 101795.955 ops/s
# Warmup Iteration   7: 97007.383 ops/s
# Warmup Iteration   8: 98141.779 ops/s
# Warmup Iteration   9: 100005.964 ops/s
# Warmup Iteration  10: 100841.156 ops/s
# Warmup Iteration  11: 97403.136 ops/s
# Warmup Iteration  12: 97672.619 ops/s
# Warmup Iteration  13: 103403.867 ops/s
# Warmup Iteration  14: 95148.978 ops/s
# Warmup Iteration  15: 101585.458 ops/s
# Warmup Iteration  16: 98566.441 ops/s
# Warmup Iteration  17: 103471.093 ops/s
# Warmup Iteration  18: 100406.603 ops/s
# Warmup Iteration  19: 97883.385 ops/s
# Warmup Iteration  20: 99483.071 ops/s
# Warmup Iteration  21: 97137.023 ops/s
# Warmup Iteration  22: 104251.685 ops/s
# Warmup Iteration  23: 98711.514 ops/s
# Warmup Iteration  24: 100966.572 ops/s
# Warmup Iteration  25: 106655.896 ops/s
# Warmup Iteration  26: 100570.795 ops/s
# Warmup Iteration  27: 103901.372 ops/s
# Warmup Iteration  28: 101038.724 ops/s
# Warmup Iteration  29: 105742.070 ops/s
# Warmup Iteration  30: 102808.813 ops/s
Iteration   1: 103457.298 ops/s
Iteration   2: 105298.822 ops/s
Iteration   3: 102410.545 ops/s
Iteration   4: 107324.648 ops/s
Iteration   5: 104496.131 ops/s
Iteration   6: 77690.469 ops/s
Iteration   7: 106102.014 ops/s
Iteration   8: 100671.205 ops/s
Iteration   9: 102149.119 ops/s
Iteration  10: 103089.745 ops/s
Iteration  11: 102005.027 ops/s
Iteration  12: 106063.001 ops/s
Iteration  13: 102447.074 ops/s
Iteration  14: 103734.724 ops/s
Iteration  15: 105478.302 ops/s
Iteration  16: 104070.628 ops/s
Iteration  17: 106768.316 ops/s
Iteration  18: 98897.459 ops/s
Iteration  19: 106827.176 ops/s
Iteration  20: 102845.489 ops/s
Iteration  21: 103371.404 ops/s
Iteration  22: 104235.804 ops/s
Iteration  23: 101462.059 ops/s
Iteration  24: 106752.769 ops/s
Iteration  25: 99648.345 ops/s
Iteration  26: 103535.143 ops/s
Iteration  27: 106688.003 ops/s
Iteration  28: 99864.362 ops/s
Iteration  29: 104320.240 ops/s
Iteration  30: 102988.607 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_547._Benchmark.benchmark_Cluster_547":
  102823.131 ±(99.9%) 3511.758 ops/s [Average]
  (min, avg, max) = (77690.469, 102823.131, 107324.648), stdev = 5256.235
  CI (99.9%): [99311.373, 106334.889] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_547._Benchmark.benchmark_Cluster_547  thrpt   30  102823.131 ± 3511.758  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_548._Benchmark.benchmark_Cluster_548$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_548._Benchmark.benchmark_Cluster_548

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.687 ops/s
# Warmup Iteration   2: 1915.764 ops/s
# Warmup Iteration   3: 5085.762 ops/s
# Warmup Iteration   4: 12589.947 ops/s
# Warmup Iteration   5: 15065.845 ops/s
# Warmup Iteration   6: 13864.649 ops/s
# Warmup Iteration   7: 17038.621 ops/s
# Warmup Iteration   8: 13149.463 ops/s
# Warmup Iteration   9: 14142.328 ops/s
# Warmup Iteration  10: 17516.802 ops/s
# Warmup Iteration  11: 24922.336 ops/s
# Warmup Iteration  12: 38921.333 ops/s
# Warmup Iteration  13: 39094.401 ops/s
# Warmup Iteration  14: 39479.971 ops/s
# Warmup Iteration  15: 39013.494 ops/s
# Warmup Iteration  16: 40646.061 ops/s
# Warmup Iteration  17: 38569.059 ops/s
# Warmup Iteration  18: 40439.416 ops/s
# Warmup Iteration  19: 40816.052 ops/s
# Warmup Iteration  20: 38596.900 ops/s
# Warmup Iteration  21: 41324.908 ops/s
# Warmup Iteration  22: 37852.415 ops/s
# Warmup Iteration  23: 40753.462 ops/s
# Warmup Iteration  24: 38609.944 ops/s
# Warmup Iteration  25: 37069.156 ops/s
# Warmup Iteration  26: 40807.560 ops/s
# Warmup Iteration  27: 39261.614 ops/s
# Warmup Iteration  28: 38937.469 ops/s
# Warmup Iteration  29: 40700.149 ops/s
# Warmup Iteration  30: 39430.251 ops/s
Iteration   1: 39820.725 ops/s
Iteration   2: 39293.263 ops/s
Iteration   3: 38787.369 ops/s
Iteration   4: 40175.705 ops/s
Iteration   5: 39925.856 ops/s
Iteration   6: 38932.097 ops/s
Iteration   7: 41390.608 ops/s
Iteration   8: 39159.515 ops/s
Iteration   9: 39192.163 ops/s
Iteration  10: 39262.235 ops/s
Iteration  11: 39526.225 ops/s
Iteration  12: 39830.633 ops/s
Iteration  13: 40132.291 ops/s
Iteration  14: 39046.531 ops/s
Iteration  15: 38311.648 ops/s
Iteration  16: 40611.268 ops/s
Iteration  17: 40490.309 ops/s
Iteration  18: 38933.757 ops/s
Iteration  19: 40126.333 ops/s
Iteration  20: 39622.843 ops/s
Iteration  21: 40413.530 ops/s
Iteration  22: 40715.123 ops/s
Iteration  23: 38262.067 ops/s
Iteration  24: 40644.873 ops/s
Iteration  25: 38284.285 ops/s
Iteration  26: 41104.848 ops/s
Iteration  27: 37454.879 ops/s
Iteration  28: 39120.272 ops/s
Iteration  29: 40066.949 ops/s
Iteration  30: 39189.751 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_548._Benchmark.benchmark_Cluster_548":
  39594.265 ±(99.9%) 610.477 ops/s [Average]
  (min, avg, max) = (37454.879, 39594.265, 41390.608), stdev = 913.734
  CI (99.9%): [38983.788, 40204.742] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_548._Benchmark.benchmark_Cluster_548  thrpt   30  39594.265 ± 610.477  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_549._Benchmark.benchmark_Cluster_549$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_549._Benchmark.benchmark_Cluster_549

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2674.050 ops/s
# Warmup Iteration   2: 9077.373 ops/s
# Warmup Iteration   3: 9512.017 ops/s
# Warmup Iteration   4: 19951.409 ops/s
# Warmup Iteration   5: 21888.533 ops/s
# Warmup Iteration   6: 22222.827 ops/s
# Warmup Iteration   7: <failure>

java.lang.AssertionError: expected null, but was:<Timed[time=28970521, unit=MINUTES, value=2]>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotNull(Assert.java:756)
	at org.junit.Assert.assertNull(Assert.java:738)
	at org.junit.Assert.assertNull(Assert.java:748)
	at io.reactivex.rxjava3.internal.operators.flowable.FlowableReplayTest.noHeadRetentionErrorTime(FlowableReplayTest.java:1525)
	at io.reactivex.rxjava3.internal.operators.flowable.FlowableReplayTest$_Benchmark$_InstanceStatement.evaluate(FlowableReplayTest.java:2194)
	at io.reactivex.rxjava3.internal.operators.flowable.FlowableReplayTest$_Benchmark$_ClassStatement.evaluate(FlowableReplayTest.java:2221)
	at io.reactivex.rxjava3.core.clusters.Cluster_549$_Benchmark.benchmark_Cluster_549(Cluster_549.java:33)
	at io.reactivex.rxjava3.core.clusters.generated.Cluster_549__Benchmark_benchmark_Cluster_549_jmhTest.benchmark_Cluster_549_thrpt_jmhStub(Cluster_549__Benchmark_benchmark_Cluster_549_jmhTest.java:119)
	at io.reactivex.rxjava3.core.clusters.generated.Cluster_549__Benchmark_benchmark_Cluster_549_jmhTest.benchmark_Cluster_549_Throughput(Cluster_549__Benchmark_benchmark_Cluster_549_jmhTest.java:83)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:750)




# Run complete. Total time: 00:00:07

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark  Mode  Cnt  Score   Error  Units
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_55._Benchmark.benchmark_Cluster_55$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_55._Benchmark.benchmark_Cluster_55

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3479.474 ops/s
# Warmup Iteration   2: 27932.242 ops/s
# Warmup Iteration   3: 27832.442 ops/s
# Warmup Iteration   4: 52078.495 ops/s
# Warmup Iteration   5: 125230.473 ops/s
# Warmup Iteration   6: 119966.886 ops/s
# Warmup Iteration   7: 120811.170 ops/s
# Warmup Iteration   8: 120251.386 ops/s
# Warmup Iteration   9: 120912.276 ops/s
# Warmup Iteration  10: 123776.493 ops/s
# Warmup Iteration  11: 119711.362 ops/s
# Warmup Iteration  12: 118710.219 ops/s
# Warmup Iteration  13: 126645.637 ops/s
# Warmup Iteration  14: 120267.853 ops/s
# Warmup Iteration  15: 119856.817 ops/s
# Warmup Iteration  16: 118783.039 ops/s
# Warmup Iteration  17: 123208.759 ops/s
# Warmup Iteration  18: 124518.486 ops/s
# Warmup Iteration  19: 129621.546 ops/s
# Warmup Iteration  20: 107908.533 ops/s
# Warmup Iteration  21: 114827.772 ops/s
# Warmup Iteration  22: 123733.264 ops/s
# Warmup Iteration  23: 122235.385 ops/s
# Warmup Iteration  24: 126528.988 ops/s
# Warmup Iteration  25: 122541.222 ops/s
# Warmup Iteration  26: 129164.125 ops/s
# Warmup Iteration  27: 123181.554 ops/s
# Warmup Iteration  28: 128367.806 ops/s
# Warmup Iteration  29: 126699.102 ops/s
# Warmup Iteration  30: 127568.775 ops/s
Iteration   1: 127195.013 ops/s
Iteration   2: 123124.980 ops/s
Iteration   3: 128949.781 ops/s
Iteration   4: 129046.519 ops/s
Iteration   5: 122371.853 ops/s
Iteration   6: 127363.159 ops/s
Iteration   7: 114608.720 ops/s
Iteration   8: 127321.859 ops/s
Iteration   9: 132705.852 ops/s
Iteration  10: 121634.000 ops/s
Iteration  11: 130429.941 ops/s
Iteration  12: 123127.814 ops/s
Iteration  13: 131703.786 ops/s
Iteration  14: 123253.297 ops/s
Iteration  15: 123200.398 ops/s
Iteration  16: 129300.307 ops/s
Iteration  17: 122673.390 ops/s
Iteration  18: 131674.009 ops/s
Iteration  19: 121246.940 ops/s
Iteration  20: 128637.632 ops/s
Iteration  21: 124215.474 ops/s
Iteration  22: 122848.841 ops/s
Iteration  23: 127755.867 ops/s
Iteration  24: 126462.149 ops/s
Iteration  25: 131794.912 ops/s
Iteration  26: 121649.377 ops/s
Iteration  27: 130443.394 ops/s
Iteration  28: 129988.261 ops/s
Iteration  29: 124047.290 ops/s
Iteration  30: 127953.232 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_55._Benchmark.benchmark_Cluster_55":
  126224.268 ±(99.9%) 2797.440 ops/s [Average]
  (min, avg, max) = (114608.720, 126224.268, 132705.852), stdev = 4187.076
  CI (99.9%): [123426.829, 129021.708] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_55._Benchmark.benchmark_Cluster_55  thrpt   30  126224.268 ± 2797.440  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_550._Benchmark.benchmark_Cluster_550$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_550._Benchmark.benchmark_Cluster_550

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8319.951 ops/s
# Warmup Iteration   2: 47983.685 ops/s
# Warmup Iteration   3: 115599.898 ops/s
# Warmup Iteration   4: 109995.071 ops/s
# Warmup Iteration   5: 123527.300 ops/s
# Warmup Iteration   6: 124992.963 ops/s
# Warmup Iteration   7: 123022.739 ops/s
# Warmup Iteration   8: 128775.597 ops/s
# Warmup Iteration   9: 120108.956 ops/s
# Warmup Iteration  10: 126182.738 ops/s
# Warmup Iteration  11: 125577.960 ops/s
# Warmup Iteration  12: 119898.333 ops/s
# Warmup Iteration  13: 127439.533 ops/s
# Warmup Iteration  14: 120077.720 ops/s
# Warmup Iteration  15: 123170.754 ops/s
# Warmup Iteration  16: 121341.403 ops/s
# Warmup Iteration  17: 126815.434 ops/s
# Warmup Iteration  18: 132894.212 ops/s
# Warmup Iteration  19: 120737.963 ops/s
# Warmup Iteration  20: 132874.451 ops/s
# Warmup Iteration  21: 128478.262 ops/s
# Warmup Iteration  22: 131273.647 ops/s
# Warmup Iteration  23: 128969.366 ops/s
# Warmup Iteration  24: 129080.695 ops/s
# Warmup Iteration  25: 131381.479 ops/s
# Warmup Iteration  26: 130471.957 ops/s
# Warmup Iteration  27: 135089.544 ops/s
# Warmup Iteration  28: 124649.898 ops/s
# Warmup Iteration  29: 130891.739 ops/s
# Warmup Iteration  30: 127873.418 ops/s
Iteration   1: 135075.679 ops/s
Iteration   2: 132422.754 ops/s
Iteration   3: 128719.220 ops/s
Iteration   4: 132734.361 ops/s
Iteration   5: 130533.100 ops/s
Iteration   6: 131538.200 ops/s
Iteration   7: 131416.308 ops/s
Iteration   8: 129239.648 ops/s
Iteration   9: 129622.224 ops/s
Iteration  10: 129704.061 ops/s
Iteration  11: 131063.098 ops/s
Iteration  12: 135040.046 ops/s
Iteration  13: 127075.903 ops/s
Iteration  14: 132697.572 ops/s
Iteration  15: 133363.196 ops/s
Iteration  16: 128217.331 ops/s
Iteration  17: 133668.213 ops/s
Iteration  18: 124981.311 ops/s
Iteration  19: 132436.206 ops/s
Iteration  20: 133226.259 ops/s
Iteration  21: 127109.594 ops/s
Iteration  22: 135444.125 ops/s
Iteration  23: 128477.724 ops/s
Iteration  24: 128083.117 ops/s
Iteration  25: 134460.297 ops/s
Iteration  26: 127737.691 ops/s
Iteration  27: 130954.190 ops/s
Iteration  28: 129706.312 ops/s
Iteration  29: 129181.750 ops/s
Iteration  30: 127792.370 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_550._Benchmark.benchmark_Cluster_550":
  130724.062 ±(99.9%) 1831.209 ops/s [Average]
  (min, avg, max) = (124981.311, 130724.062, 135444.125), stdev = 2740.867
  CI (99.9%): [128892.853, 132555.271] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_550._Benchmark.benchmark_Cluster_550  thrpt   30  130724.062 ± 1831.209  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_551._Benchmark.benchmark_Cluster_551$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_551._Benchmark.benchmark_Cluster_551

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2293.446 ops/s
# Warmup Iteration   2: 28401.718 ops/s
# Warmup Iteration   3: 48462.532 ops/s
# Warmup Iteration   4: 47400.560 ops/s
# Warmup Iteration   5: 58058.866 ops/s
# Warmup Iteration   6: 134884.292 ops/s
# Warmup Iteration   7: 125178.198 ops/s
# Warmup Iteration   8: 129359.840 ops/s
# Warmup Iteration   9: 133907.441 ops/s
# Warmup Iteration  10: 136843.156 ops/s
# Warmup Iteration  11: 131989.074 ops/s
# Warmup Iteration  12: 134913.989 ops/s
# Warmup Iteration  13: 136834.251 ops/s
# Warmup Iteration  14: 128382.399 ops/s
# Warmup Iteration  15: 113679.333 ops/s
# Warmup Iteration  16: 130364.335 ops/s
# Warmup Iteration  17: 135705.633 ops/s
# Warmup Iteration  18: 139316.818 ops/s
# Warmup Iteration  19: 133902.768 ops/s
# Warmup Iteration  20: 143663.134 ops/s
# Warmup Iteration  21: 132290.289 ops/s
# Warmup Iteration  22: 138828.970 ops/s
# Warmup Iteration  23: 136434.888 ops/s
# Warmup Iteration  24: 135347.656 ops/s
# Warmup Iteration  25: 129554.133 ops/s
# Warmup Iteration  26: 134209.614 ops/s
# Warmup Iteration  27: 135441.994 ops/s
# Warmup Iteration  28: 135915.205 ops/s
# Warmup Iteration  29: 145096.396 ops/s
# Warmup Iteration  30: 136530.232 ops/s
Iteration   1: 135518.605 ops/s
Iteration   2: 142765.618 ops/s
Iteration   3: 134751.375 ops/s
Iteration   4: 142758.897 ops/s
Iteration   5: 138399.121 ops/s
Iteration   6: 134998.057 ops/s
Iteration   7: 141756.923 ops/s
Iteration   8: 132766.313 ops/s
Iteration   9: 139915.066 ops/s
Iteration  10: 133770.694 ops/s
Iteration  11: 137292.509 ops/s
Iteration  12: 135793.822 ops/s
Iteration  13: 139304.465 ops/s
Iteration  14: 141347.347 ops/s
Iteration  15: 138973.171 ops/s
Iteration  16: 133716.550 ops/s
Iteration  17: 141849.214 ops/s
Iteration  18: 139038.810 ops/s
Iteration  19: 142393.282 ops/s
Iteration  20: 133353.433 ops/s
Iteration  21: 140033.732 ops/s
Iteration  22: 140971.960 ops/s
Iteration  23: 137980.164 ops/s
Iteration  24: 142044.869 ops/s
Iteration  25: 138196.638 ops/s
Iteration  26: 130138.174 ops/s
Iteration  27: 141398.283 ops/s
Iteration  28: 137332.534 ops/s
Iteration  29: 140073.101 ops/s
Iteration  30: 136236.389 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_551._Benchmark.benchmark_Cluster_551":
  138162.304 ±(99.9%) 2282.418 ops/s [Average]
  (min, avg, max) = (130138.174, 138162.304, 142765.618), stdev = 3416.215
  CI (99.9%): [135879.886, 140444.721] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_551._Benchmark.benchmark_Cluster_551  thrpt   30  138162.304 ± 2282.418  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_552._Benchmark.benchmark_Cluster_552$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_552._Benchmark.benchmark_Cluster_552

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.666 ops/s
# Warmup Iteration   2: 2919.278 ops/s
# Warmup Iteration   3: 8276.356 ops/s
# Warmup Iteration   4: 32298.520 ops/s
# Warmup Iteration   5: 39366.693 ops/s
# Warmup Iteration   6: 40808.234 ops/s
# Warmup Iteration   7: 50404.207 ops/s
# Warmup Iteration   8: 40771.065 ops/s
# Warmup Iteration   9: 51039.750 ops/s
# Warmup Iteration  10: 76852.353 ops/s
# Warmup Iteration  11: 108818.395 ops/s
# Warmup Iteration  12: 110595.437 ops/s
# Warmup Iteration  13: 110933.064 ops/s
# Warmup Iteration  14: 114508.691 ops/s
# Warmup Iteration  15: 112820.433 ops/s
# Warmup Iteration  16: 109530.292 ops/s
# Warmup Iteration  17: 113280.129 ops/s
# Warmup Iteration  18: 107519.144 ops/s
# Warmup Iteration  19: 112620.522 ops/s
# Warmup Iteration  20: 115416.886 ops/s
# Warmup Iteration  21: 107524.755 ops/s
# Warmup Iteration  22: 112424.849 ops/s
# Warmup Iteration  23: 109964.989 ops/s
# Warmup Iteration  24: 112645.531 ops/s
# Warmup Iteration  25: 112534.879 ops/s
# Warmup Iteration  26: 108703.279 ops/s
# Warmup Iteration  27: 111436.608 ops/s
# Warmup Iteration  28: 116015.270 ops/s
# Warmup Iteration  29: 108046.036 ops/s
# Warmup Iteration  30: 113899.968 ops/s
Iteration   1: 114098.447 ops/s
Iteration   2: 107103.983 ops/s
Iteration   3: 111623.854 ops/s
Iteration   4: 112170.892 ops/s
Iteration   5: 105499.409 ops/s
Iteration   6: 112320.356 ops/s
Iteration   7: 106349.138 ops/s
Iteration   8: 112646.539 ops/s
Iteration   9: 108414.276 ops/s
Iteration  10: 110432.446 ops/s
Iteration  11: 107752.899 ops/s
Iteration  12: 110371.363 ops/s
Iteration  13: 113195.976 ops/s
Iteration  14: 110010.462 ops/s
Iteration  15: 115197.637 ops/s
Iteration  16: 110518.425 ops/s
Iteration  17: 114309.093 ops/s
Iteration  18: 116474.096 ops/s
Iteration  19: 108075.049 ops/s
Iteration  20: 111242.294 ops/s
Iteration  21: 109899.723 ops/s
Iteration  22: 113951.882 ops/s
Iteration  23: 111344.006 ops/s
Iteration  24: 110467.733 ops/s
Iteration  25: 114386.150 ops/s
Iteration  26: 110378.978 ops/s
Iteration  27: 114162.379 ops/s
Iteration  28: 107533.538 ops/s
Iteration  29: 114714.267 ops/s
Iteration  30: 111035.432 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_552._Benchmark.benchmark_Cluster_552":
  111189.357 ±(99.9%) 1885.334 ops/s [Average]
  (min, avg, max) = (105499.409, 111189.357, 116474.096), stdev = 2821.880
  CI (99.9%): [109304.023, 113074.692] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_552._Benchmark.benchmark_Cluster_552  thrpt   30  111189.357 ± 1885.334  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_553._Benchmark.benchmark_Cluster_553$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_553._Benchmark.benchmark_Cluster_553

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1809.369 ops/s
# Warmup Iteration   2: 20423.878 ops/s
# Warmup Iteration   3: 36283.348 ops/s
# Warmup Iteration   4: 37748.526 ops/s
# Warmup Iteration   5: 44363.276 ops/s
# Warmup Iteration   6: 63961.856 ops/s
# Warmup Iteration   7: 103185.126 ops/s
# Warmup Iteration   8: 100196.791 ops/s
# Warmup Iteration   9: 92462.947 ops/s
# Warmup Iteration  10: 105690.233 ops/s
# Warmup Iteration  11: 111123.190 ops/s
# Warmup Iteration  12: 105715.181 ops/s
# Warmup Iteration  13: 107953.760 ops/s
# Warmup Iteration  14: 114033.518 ops/s
# Warmup Iteration  15: 110375.926 ops/s
# Warmup Iteration  16: 104260.261 ops/s
# Warmup Iteration  17: 115477.772 ops/s
# Warmup Iteration  18: 109770.098 ops/s
# Warmup Iteration  19: 109412.701 ops/s
# Warmup Iteration  20: 106747.161 ops/s
# Warmup Iteration  21: 105484.838 ops/s
# Warmup Iteration  22: 113696.672 ops/s
# Warmup Iteration  23: 112017.493 ops/s
# Warmup Iteration  24: 108212.032 ops/s
# Warmup Iteration  25: 112019.976 ops/s
# Warmup Iteration  26: 113787.170 ops/s
# Warmup Iteration  27: 110852.826 ops/s
# Warmup Iteration  28: 112926.797 ops/s
# Warmup Iteration  29: 114790.827 ops/s
# Warmup Iteration  30: 108512.539 ops/s
Iteration   1: 112646.804 ops/s
Iteration   2: 110882.468 ops/s
Iteration   3: 110323.098 ops/s
Iteration   4: 115281.187 ops/s
Iteration   5: 106844.219 ops/s
Iteration   6: 114133.382 ops/s
Iteration   7: 109007.616 ops/s
Iteration   8: 111688.091 ops/s
Iteration   9: 109620.091 ops/s
Iteration  10: 112024.376 ops/s
Iteration  11: 113012.831 ops/s
Iteration  12: 110455.355 ops/s
Iteration  13: 115857.336 ops/s
Iteration  14: 105164.582 ops/s
Iteration  15: 112672.986 ops/s
Iteration  16: 111344.642 ops/s
Iteration  17: 109760.002 ops/s
Iteration  18: 111355.397 ops/s
Iteration  19: 113743.113 ops/s
Iteration  20: 110054.207 ops/s
Iteration  21: 114180.394 ops/s
Iteration  22: 110520.685 ops/s
Iteration  23: 110056.409 ops/s
Iteration  24: 114413.878 ops/s
Iteration  25: 111023.895 ops/s
Iteration  26: 113488.246 ops/s
Iteration  27: 114967.398 ops/s
Iteration  28: 111753.780 ops/s
Iteration  29: 106876.641 ops/s
Iteration  30: 112960.161 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_553._Benchmark.benchmark_Cluster_553":
  111537.109 ±(99.9%) 1703.686 ops/s [Average]
  (min, avg, max) = (105164.582, 111537.109, 115857.336), stdev = 2549.997
  CI (99.9%): [109833.423, 113240.795] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_553._Benchmark.benchmark_Cluster_553  thrpt   30  111537.109 ± 1703.686  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_554._Benchmark.benchmark_Cluster_554$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_554._Benchmark.benchmark_Cluster_554

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9748.768 ops/s
# Warmup Iteration   2: 30458.687 ops/s
# Warmup Iteration   3: 58812.036 ops/s
# Warmup Iteration   4: 69750.188 ops/s
# Warmup Iteration   5: 80077.601 ops/s
# Warmup Iteration   6: 72891.601 ops/s
# Warmup Iteration   7: 88549.270 ops/s
# Warmup Iteration   8: 83123.786 ops/s
# Warmup Iteration   9: 86910.208 ops/s
# Warmup Iteration  10: 85287.432 ops/s
# Warmup Iteration  11: 86084.027 ops/s
# Warmup Iteration  12: 85223.518 ops/s
# Warmup Iteration  13: 85589.661 ops/s
# Warmup Iteration  14: 84599.584 ops/s
# Warmup Iteration  15: 85368.974 ops/s
# Warmup Iteration  16: 90690.223 ops/s
# Warmup Iteration  17: 90077.310 ops/s
# Warmup Iteration  18: 87072.110 ops/s
# Warmup Iteration  19: 91497.038 ops/s
# Warmup Iteration  20: 85467.462 ops/s
# Warmup Iteration  21: 88682.281 ops/s
# Warmup Iteration  22: 87058.090 ops/s
# Warmup Iteration  23: 86009.174 ops/s
# Warmup Iteration  24: 89461.019 ops/s
# Warmup Iteration  25: 92759.860 ops/s
# Warmup Iteration  26: 84473.154 ops/s
# Warmup Iteration  27: 90784.463 ops/s
# Warmup Iteration  28: 86352.084 ops/s
# Warmup Iteration  29: 84918.959 ops/s
# Warmup Iteration  30: 90684.538 ops/s
Iteration   1: 84209.035 ops/s
Iteration   2: 89669.370 ops/s
Iteration   3: 86355.977 ops/s
Iteration   4: 91068.185 ops/s
Iteration   5: 89279.091 ops/s
Iteration   6: 84405.342 ops/s
Iteration   7: 92014.641 ops/s
Iteration   8: 84933.108 ops/s
Iteration   9: 88124.087 ops/s
Iteration  10: 88130.796 ops/s
Iteration  11: 85028.131 ops/s
Iteration  12: 85297.470 ops/s
Iteration  13: 89568.193 ops/s
Iteration  14: 86764.240 ops/s
Iteration  15: 83032.808 ops/s
Iteration  16: 86764.960 ops/s
Iteration  17: 85882.135 ops/s
Iteration  18: 89795.244 ops/s
Iteration  19: 86665.684 ops/s
Iteration  20: 89061.356 ops/s
Iteration  21: 87486.226 ops/s
Iteration  22: 88616.326 ops/s
Iteration  23: 87128.130 ops/s
Iteration  24: 87790.419 ops/s
Iteration  25: 90911.875 ops/s
Iteration  26: 84262.652 ops/s
Iteration  27: 89817.028 ops/s
Iteration  28: 87079.954 ops/s
Iteration  29: 90684.733 ops/s
Iteration  30: 87650.809 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_554._Benchmark.benchmark_Cluster_554":
  87582.600 ±(99.9%) 1551.906 ops/s [Average]
  (min, avg, max) = (83032.808, 87582.600, 92014.641), stdev = 2322.821
  CI (99.9%): [86030.694, 89134.507] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_554._Benchmark.benchmark_Cluster_554  thrpt   30  87582.600 ± 1551.906  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_555._Benchmark.benchmark_Cluster_555$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_555._Benchmark.benchmark_Cluster_555

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1314.605 ops/s
# Warmup Iteration   2: 8426.790 ops/s
# Warmup Iteration   3: 17550.223 ops/s
# Warmup Iteration   4: 26963.064 ops/s
# Warmup Iteration   5: 28743.375 ops/s
# Warmup Iteration   6: 28137.511 ops/s
# Warmup Iteration   7: 23045.499 ops/s
# Warmup Iteration   8: 21775.863 ops/s
# Warmup Iteration   9: 25397.067 ops/s
# Warmup Iteration  10: 81848.238 ops/s
# Warmup Iteration  11: 83179.552 ops/s
# Warmup Iteration  12: 82763.769 ops/s
# Warmup Iteration  13: 88095.458 ops/s
# Warmup Iteration  14: 81820.379 ops/s
# Warmup Iteration  15: 78964.401 ops/s
# Warmup Iteration  16: 83801.326 ops/s
# Warmup Iteration  17: 84730.731 ops/s
# Warmup Iteration  18: 89462.308 ops/s
# Warmup Iteration  19: 85259.527 ops/s
# Warmup Iteration  20: 86817.276 ops/s
# Warmup Iteration  21: 86470.752 ops/s
# Warmup Iteration  22: 85837.043 ops/s
# Warmup Iteration  23: 90144.803 ops/s
# Warmup Iteration  24: 84363.922 ops/s
# Warmup Iteration  25: 83401.617 ops/s
# Warmup Iteration  26: 88908.617 ops/s
# Warmup Iteration  27: 85454.682 ops/s
# Warmup Iteration  28: 83616.139 ops/s
# Warmup Iteration  29: 87556.521 ops/s
# Warmup Iteration  30: 87531.019 ops/s
Iteration   1: 86063.394 ops/s
Iteration   2: 86848.905 ops/s
Iteration   3: 86746.371 ops/s
Iteration   4: 87077.832 ops/s
Iteration   5: 82526.563 ops/s
Iteration   6: 89835.110 ops/s
Iteration   7: 85342.859 ops/s
Iteration   8: 88153.752 ops/s
Iteration   9: 84187.543 ops/s
Iteration  10: 87355.872 ops/s
Iteration  11: 87861.448 ops/s
Iteration  12: 85993.353 ops/s
Iteration  13: 84715.441 ops/s
Iteration  14: 85948.925 ops/s
Iteration  15: 86023.428 ops/s
Iteration  16: 88652.419 ops/s
Iteration  17: 85061.221 ops/s
Iteration  18: 86803.344 ops/s
Iteration  19: 88919.652 ops/s
Iteration  20: 84388.617 ops/s
Iteration  21: 87884.756 ops/s
Iteration  22: 83334.818 ops/s
Iteration  23: 89266.826 ops/s
Iteration  24: 84775.877 ops/s
Iteration  25: 86768.163 ops/s
Iteration  26: 91134.084 ops/s
Iteration  27: 82644.853 ops/s
Iteration  28: 85216.238 ops/s
Iteration  29: 85842.786 ops/s
Iteration  30: 87690.573 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_555._Benchmark.benchmark_Cluster_555":
  86435.501 ±(99.9%) 1376.235 ops/s [Average]
  (min, avg, max) = (82526.563, 86435.501, 91134.084), stdev = 2059.885
  CI (99.9%): [85059.265, 87811.736] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_555._Benchmark.benchmark_Cluster_555  thrpt   30  86435.501 ± 1376.235  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_556._Benchmark.benchmark_Cluster_556$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_556._Benchmark.benchmark_Cluster_556

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6495.713 ops/s
# Warmup Iteration   2: 24327.072 ops/s
# Warmup Iteration   3: 64303.405 ops/s
# Warmup Iteration   4: 90496.233 ops/s
# Warmup Iteration   5: 97923.344 ops/s
# Warmup Iteration   6: 98828.503 ops/s
# Warmup Iteration   7: 97146.432 ops/s
# Warmup Iteration   8: 102341.292 ops/s
# Warmup Iteration   9: 100497.737 ops/s
# Warmup Iteration  10: 103309.668 ops/s
# Warmup Iteration  11: 97768.615 ops/s
# Warmup Iteration  12: 101354.990 ops/s
# Warmup Iteration  13: 102776.549 ops/s
# Warmup Iteration  14: 105503.939 ops/s
# Warmup Iteration  15: 98766.839 ops/s
# Warmup Iteration  16: 102825.477 ops/s
# Warmup Iteration  17: 106600.930 ops/s
# Warmup Iteration  18: 101550.516 ops/s
# Warmup Iteration  19: 106602.666 ops/s
# Warmup Iteration  20: 98084.542 ops/s
# Warmup Iteration  21: 103774.722 ops/s
# Warmup Iteration  22: 104419.878 ops/s
# Warmup Iteration  23: 99825.999 ops/s
# Warmup Iteration  24: 106179.943 ops/s
# Warmup Iteration  25: 101957.298 ops/s
# Warmup Iteration  26: 105148.727 ops/s
# Warmup Iteration  27: 108110.437 ops/s
# Warmup Iteration  28: 104693.674 ops/s
# Warmup Iteration  29: 103256.609 ops/s
# Warmup Iteration  30: 106276.860 ops/s
Iteration   1: 103996.150 ops/s
Iteration   2: 99510.329 ops/s
Iteration   3: 100058.474 ops/s
Iteration   4: 104791.435 ops/s
Iteration   5: 108758.229 ops/s
Iteration   6: 100605.269 ops/s
Iteration   7: 107769.228 ops/s
Iteration   8: 106557.005 ops/s
Iteration   9: 104812.854 ops/s
Iteration  10: 107281.572 ops/s
Iteration  11: 102813.329 ops/s
Iteration  12: 109397.264 ops/s
Iteration  13: 106018.434 ops/s
Iteration  14: 100368.935 ops/s
Iteration  15: 106260.542 ops/s
Iteration  16: 103658.984 ops/s
Iteration  17: 102521.343 ops/s
Iteration  18: 110593.459 ops/s
Iteration  19: 102943.295 ops/s
Iteration  20: 106506.749 ops/s
Iteration  21: 101323.428 ops/s
Iteration  22: 102440.044 ops/s
Iteration  23: 107734.310 ops/s
Iteration  24: 101569.785 ops/s
Iteration  25: 104878.129 ops/s
Iteration  26: 108241.310 ops/s
Iteration  27: 102169.338 ops/s
Iteration  28: 106753.118 ops/s
Iteration  29: 84273.286 ops/s
Iteration  30: 102655.017 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_556._Benchmark.benchmark_Cluster_556":
  103908.688 ±(99.9%) 3183.880 ops/s [Average]
  (min, avg, max) = (84273.286, 103908.688, 110593.459), stdev = 4765.481
  CI (99.9%): [100724.809, 107092.568] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_556._Benchmark.benchmark_Cluster_556  thrpt   30  103908.688 ± 3183.880  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_557._Benchmark.benchmark_Cluster_557$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_557._Benchmark.benchmark_Cluster_557

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4369.813 ops/s
# Warmup Iteration   2: 50645.876 ops/s
# Warmup Iteration   3: 49454.091 ops/s
# Warmup Iteration   4: 61379.424 ops/s
# Warmup Iteration   5: 153431.102 ops/s
# Warmup Iteration   6: 164897.389 ops/s
# Warmup Iteration   7: 137224.647 ops/s
# Warmup Iteration   8: 173970.297 ops/s
# Warmup Iteration   9: 164971.779 ops/s
# Warmup Iteration  10: 163617.704 ops/s
# Warmup Iteration  11: 165798.578 ops/s
# Warmup Iteration  12: 166159.153 ops/s
# Warmup Iteration  13: 164660.127 ops/s
# Warmup Iteration  14: 170776.448 ops/s
# Warmup Iteration  15: 161803.354 ops/s
# Warmup Iteration  16: 174628.941 ops/s
# Warmup Iteration  17: 175184.155 ops/s
# Warmup Iteration  18: 169045.569 ops/s
# Warmup Iteration  19: 178962.225 ops/s
# Warmup Iteration  20: 173593.644 ops/s
# Warmup Iteration  21: 171220.753 ops/s
# Warmup Iteration  22: 173332.817 ops/s
# Warmup Iteration  23: 172747.917 ops/s
# Warmup Iteration  24: 176412.913 ops/s
# Warmup Iteration  25: 174856.881 ops/s
# Warmup Iteration  26: 169929.730 ops/s
# Warmup Iteration  27: 180356.791 ops/s
# Warmup Iteration  28: 170484.245 ops/s
# Warmup Iteration  29: 177762.023 ops/s
# Warmup Iteration  30: 170031.319 ops/s
Iteration   1: 177225.567 ops/s
Iteration   2: 175576.299 ops/s
Iteration   3: 179538.670 ops/s
Iteration   4: 168913.448 ops/s
Iteration   5: 172585.490 ops/s
Iteration   6: 170226.678 ops/s
Iteration   7: 177090.163 ops/s
Iteration   8: 181421.269 ops/s
Iteration   9: 168932.356 ops/s
Iteration  10: 172363.303 ops/s
Iteration  11: 170571.388 ops/s
Iteration  12: 176275.180 ops/s
Iteration  13: 177275.115 ops/s
Iteration  14: 167891.251 ops/s
Iteration  15: 172179.756 ops/s
Iteration  16: 173739.140 ops/s
Iteration  17: 175837.853 ops/s
Iteration  18: 171278.832 ops/s
Iteration  19: 177603.116 ops/s
Iteration  20: 171311.906 ops/s
Iteration  21: 173180.088 ops/s
Iteration  22: 176138.397 ops/s
Iteration  23: 172492.994 ops/s
Iteration  24: 178121.377 ops/s
Iteration  25: 172603.178 ops/s
Iteration  26: 178477.541 ops/s
Iteration  27: 172587.429 ops/s
Iteration  28: 174786.325 ops/s
Iteration  29: 178169.091 ops/s
Iteration  30: 171317.289 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_557._Benchmark.benchmark_Cluster_557":
  174190.350 ±(99.9%) 2323.091 ops/s [Average]
  (min, avg, max) = (167891.251, 174190.350, 181421.269), stdev = 3477.093
  CI (99.9%): [171867.259, 176513.440] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_557._Benchmark.benchmark_Cluster_557  thrpt   30  174190.350 ± 2323.091  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_558._Benchmark.benchmark_Cluster_558$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_558._Benchmark.benchmark_Cluster_558

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4423.081 ops/s
# Warmup Iteration   2: 27243.686 ops/s
# Warmup Iteration   3: 57991.408 ops/s
# Warmup Iteration   4: 99933.206 ops/s
# Warmup Iteration   5: 103854.035 ops/s
# Warmup Iteration   6: 110138.909 ops/s
# Warmup Iteration   7: 104979.237 ops/s
# Warmup Iteration   8: 106544.684 ops/s
# Warmup Iteration   9: 107137.502 ops/s
# Warmup Iteration  10: 104071.271 ops/s
# Warmup Iteration  11: 102559.813 ops/s
# Warmup Iteration  12: 107868.138 ops/s
# Warmup Iteration  13: 104260.227 ops/s
# Warmup Iteration  14: 108685.493 ops/s
# Warmup Iteration  15: 112454.511 ops/s
# Warmup Iteration  16: 102954.571 ops/s
# Warmup Iteration  17: 117521.719 ops/s
# Warmup Iteration  18: 114752.014 ops/s
# Warmup Iteration  19: 115343.003 ops/s
# Warmup Iteration  20: 114341.648 ops/s
# Warmup Iteration  21: 112890.338 ops/s
# Warmup Iteration  22: 115536.999 ops/s
# Warmup Iteration  23: 112728.300 ops/s
# Warmup Iteration  24: 111803.192 ops/s
# Warmup Iteration  25: 120771.438 ops/s
# Warmup Iteration  26: 111873.825 ops/s
# Warmup Iteration  27: 116636.953 ops/s
# Warmup Iteration  28: 105501.158 ops/s
# Warmup Iteration  29: 118558.651 ops/s
# Warmup Iteration  30: 107311.927 ops/s
Iteration   1: 115344.558 ops/s
Iteration   2: 120217.700 ops/s
Iteration   3: 108457.731 ops/s
Iteration   4: 117921.721 ops/s
Iteration   5: 115398.898 ops/s
Iteration   6: 106180.022 ops/s
Iteration   7: 116457.103 ops/s
Iteration   8: 120176.313 ops/s
Iteration   9: 111346.547 ops/s
Iteration  10: 117804.527 ops/s
Iteration  11: 113420.864 ops/s
Iteration  12: 116243.107 ops/s
Iteration  13: 115954.849 ops/s
Iteration  14: 113628.875 ops/s
Iteration  15: 113856.302 ops/s
Iteration  16: 120039.243 ops/s
Iteration  17: 119528.040 ops/s
Iteration  18: 112053.497 ops/s
Iteration  19: 118459.325 ops/s
Iteration  20: 109677.942 ops/s
Iteration  21: 117866.539 ops/s
Iteration  22: 112775.499 ops/s
Iteration  23: 92803.045 ops/s
Iteration  24: 116522.899 ops/s
Iteration  25: 111878.708 ops/s
Iteration  26: 114772.968 ops/s
Iteration  27: 113288.252 ops/s
Iteration  28: 110107.386 ops/s
Iteration  29: 114125.358 ops/s
Iteration  30: 118068.368 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_558._Benchmark.benchmark_Cluster_558":
  114145.873 ±(99.9%) 3601.995 ops/s [Average]
  (min, avg, max) = (92803.045, 114145.873, 120217.700), stdev = 5391.297
  CI (99.9%): [110543.877, 117747.868] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_558._Benchmark.benchmark_Cluster_558  thrpt   30  114145.873 ± 3601.995  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_559._Benchmark.benchmark_Cluster_559$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_559._Benchmark.benchmark_Cluster_559

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9754.407 ops/s
# Warmup Iteration   2: 51448.738 ops/s
# Warmup Iteration   3: 105499.754 ops/s
# Warmup Iteration   4: 114403.084 ops/s
# Warmup Iteration   5: 126137.383 ops/s
# Warmup Iteration   6: 119245.655 ops/s
# Warmup Iteration   7: 110544.980 ops/s
# Warmup Iteration   8: 121808.789 ops/s
# Warmup Iteration   9: 120680.963 ops/s
# Warmup Iteration  10: 117739.358 ops/s
# Warmup Iteration  11: 123345.059 ops/s
# Warmup Iteration  12: 120809.473 ops/s
# Warmup Iteration  13: 119345.891 ops/s
# Warmup Iteration  14: 126439.735 ops/s
# Warmup Iteration  15: 115605.783 ops/s
# Warmup Iteration  16: 116868.314 ops/s
# Warmup Iteration  17: 125916.061 ops/s
# Warmup Iteration  18: 129340.229 ops/s
# Warmup Iteration  19: 126939.643 ops/s
# Warmup Iteration  20: 119616.194 ops/s
# Warmup Iteration  21: 127839.143 ops/s
# Warmup Iteration  22: 121878.635 ops/s
# Warmup Iteration  23: 124350.728 ops/s
# Warmup Iteration  24: 116702.694 ops/s
# Warmup Iteration  25: 124117.980 ops/s
# Warmup Iteration  26: 126617.273 ops/s
# Warmup Iteration  27: 119635.953 ops/s
# Warmup Iteration  28: 126974.566 ops/s
# Warmup Iteration  29: 118611.499 ops/s
# Warmup Iteration  30: 121136.395 ops/s
Iteration   1: 125666.367 ops/s
Iteration   2: 122570.227 ops/s
Iteration   3: 130125.449 ops/s
Iteration   4: 125445.857 ops/s
Iteration   5: 120605.468 ops/s
Iteration   6: 124678.464 ops/s
Iteration   7: 124786.327 ops/s
Iteration   8: 126373.516 ops/s
Iteration   9: 120679.897 ops/s
Iteration  10: 123522.112 ops/s
Iteration  11: 127086.282 ops/s
Iteration  12: 124440.142 ops/s
Iteration  13: 121840.237 ops/s
Iteration  14: 128480.371 ops/s
Iteration  15: 119614.957 ops/s
Iteration  16: 127185.382 ops/s
Iteration  17: 122876.186 ops/s
Iteration  18: 122960.534 ops/s
Iteration  19: 128457.953 ops/s
Iteration  20: 120378.551 ops/s
Iteration  21: 131145.443 ops/s
Iteration  22: 128024.314 ops/s
Iteration  23: 119251.502 ops/s
Iteration  24: 130838.943 ops/s
Iteration  25: 118006.497 ops/s
Iteration  26: 126019.479 ops/s
Iteration  27: 126436.569 ops/s
Iteration  28: 120185.746 ops/s
Iteration  29: 123341.359 ops/s
Iteration  30: 129351.355 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_559._Benchmark.benchmark_Cluster_559":
  124679.183 ±(99.9%) 2435.519 ops/s [Average]
  (min, avg, max) = (118006.497, 124679.183, 131145.443), stdev = 3645.370
  CI (99.9%): [122243.664, 127114.702] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_559._Benchmark.benchmark_Cluster_559  thrpt   30  124679.183 ± 2435.519  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_56._Benchmark.benchmark_Cluster_56$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_56._Benchmark.benchmark_Cluster_56

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1580.109 ops/s
# Warmup Iteration   2: 20067.077 ops/s
# Warmup Iteration   3: 34536.636 ops/s
# Warmup Iteration   4: 31031.809 ops/s
# Warmup Iteration   5: 39142.728 ops/s
# Warmup Iteration   6: 84726.390 ops/s
# Warmup Iteration   7: 84559.174 ops/s
# Warmup Iteration   8: 97987.222 ops/s
# Warmup Iteration   9: 96636.409 ops/s
# Warmup Iteration  10: 97777.317 ops/s
# Warmup Iteration  11: 95431.670 ops/s
# Warmup Iteration  12: 94281.255 ops/s
# Warmup Iteration  13: 98413.003 ops/s
# Warmup Iteration  14: 94515.737 ops/s
# Warmup Iteration  15: 99485.232 ops/s
# Warmup Iteration  16: 93602.212 ops/s
# Warmup Iteration  17: 98151.783 ops/s
# Warmup Iteration  18: 97444.673 ops/s
# Warmup Iteration  19: 98980.278 ops/s
# Warmup Iteration  20: 100487.945 ops/s
# Warmup Iteration  21: 96530.289 ops/s
# Warmup Iteration  22: 94571.305 ops/s
# Warmup Iteration  23: 100753.230 ops/s
# Warmup Iteration  24: 98213.953 ops/s
# Warmup Iteration  25: 100511.779 ops/s
# Warmup Iteration  26: 97804.549 ops/s
# Warmup Iteration  27: 97811.399 ops/s
# Warmup Iteration  28: 105730.127 ops/s
# Warmup Iteration  29: 94911.762 ops/s
# Warmup Iteration  30: 100230.476 ops/s
Iteration   1: 99120.114 ops/s
Iteration   2: 102945.260 ops/s
Iteration   3: 97663.301 ops/s
Iteration   4: 97929.267 ops/s
Iteration   5: 100887.882 ops/s
Iteration   6: 99279.245 ops/s
Iteration   7: 97998.894 ops/s
Iteration   8: 101066.068 ops/s
Iteration   9: 102940.631 ops/s
Iteration  10: 96205.506 ops/s
Iteration  11: 103496.208 ops/s
Iteration  12: 93628.621 ops/s
Iteration  13: 99989.598 ops/s
Iteration  14: 102218.896 ops/s
Iteration  15: 95235.748 ops/s
Iteration  16: 99524.122 ops/s
Iteration  17: 94644.434 ops/s
Iteration  18: 91882.213 ops/s
Iteration  19: 97814.051 ops/s
Iteration  20: 100120.642 ops/s
Iteration  21: 101957.198 ops/s
Iteration  22: 96233.504 ops/s
Iteration  23: 101925.634 ops/s
Iteration  24: 98250.324 ops/s
Iteration  25: 99256.118 ops/s
Iteration  26: 101235.938 ops/s
Iteration  27: 96983.283 ops/s
Iteration  28: 102713.966 ops/s
Iteration  29: 104430.829 ops/s
Iteration  30: 103039.770 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_56._Benchmark.benchmark_Cluster_56":
  99353.909 ±(99.9%) 2106.972 ops/s [Average]
  (min, avg, max) = (91882.213, 99353.909, 104430.829), stdev = 3153.617
  CI (99.9%): [97246.936, 101460.881] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_56._Benchmark.benchmark_Cluster_56  thrpt   30  99353.909 ± 2106.972  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_560._Benchmark.benchmark_Cluster_560$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_560._Benchmark.benchmark_Cluster_560

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3291.457 ops/s
# Warmup Iteration   2: 24013.458 ops/s
# Warmup Iteration   3: 25545.555 ops/s
# Warmup Iteration   4: 28767.766 ops/s
# Warmup Iteration   5: 40708.598 ops/s
# Warmup Iteration   6: 24280.933 ops/s
# Warmup Iteration   7: 64527.718 ops/s
# Warmup Iteration   8: 77403.875 ops/s
# Warmup Iteration   9: 92212.932 ops/s
# Warmup Iteration  10: 88866.535 ops/s
# Warmup Iteration  11: 89236.829 ops/s
# Warmup Iteration  12: 93893.487 ops/s
# Warmup Iteration  13: 89077.025 ops/s
# Warmup Iteration  14: 92983.964 ops/s
# Warmup Iteration  15: 89915.654 ops/s
# Warmup Iteration  16: 92506.297 ops/s
# Warmup Iteration  17: 93266.648 ops/s
# Warmup Iteration  18: 91328.552 ops/s
# Warmup Iteration  19: 91556.214 ops/s
# Warmup Iteration  20: 94782.537 ops/s
# Warmup Iteration  21: 90695.282 ops/s
# Warmup Iteration  22: 91361.438 ops/s
# Warmup Iteration  23: 93127.275 ops/s
# Warmup Iteration  24: 91529.559 ops/s
# Warmup Iteration  25: 90188.760 ops/s
# Warmup Iteration  26: 92422.204 ops/s
# Warmup Iteration  27: 90887.122 ops/s
# Warmup Iteration  28: 90547.013 ops/s
# Warmup Iteration  29: 94250.633 ops/s
# Warmup Iteration  30: 91152.851 ops/s
Iteration   1: 94146.804 ops/s
Iteration   2: 96556.134 ops/s
Iteration   3: 91553.615 ops/s
Iteration   4: 93596.245 ops/s
Iteration   5: 92879.514 ops/s
Iteration   6: 93874.893 ops/s
Iteration   7: 92140.996 ops/s
Iteration   8: 93929.286 ops/s
Iteration   9: 92243.178 ops/s
Iteration  10: 91994.867 ops/s
Iteration  11: 97912.532 ops/s
Iteration  12: 90689.419 ops/s
Iteration  13: 88203.652 ops/s
Iteration  14: 92312.611 ops/s
Iteration  15: 95619.814 ops/s
Iteration  16: 92735.486 ops/s
Iteration  17: 92866.327 ops/s
Iteration  18: 95052.266 ops/s
Iteration  19: 91818.688 ops/s
Iteration  20: 97327.931 ops/s
Iteration  21: 90466.559 ops/s
Iteration  22: 96768.541 ops/s
Iteration  23: 93761.394 ops/s
Iteration  24: 91990.952 ops/s
Iteration  25: 93698.630 ops/s
Iteration  26: 89170.478 ops/s
Iteration  27: 91344.870 ops/s
Iteration  28: 95336.035 ops/s
Iteration  29: 91900.069 ops/s
Iteration  30: 95794.041 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_560._Benchmark.benchmark_Cluster_560":
  93256.194 ±(99.9%) 1555.661 ops/s [Average]
  (min, avg, max) = (88203.652, 93256.194, 97912.532), stdev = 2328.441
  CI (99.9%): [91700.533, 94811.856] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_560._Benchmark.benchmark_Cluster_560  thrpt   30  93256.194 ± 1555.661  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_561._Benchmark.benchmark_Cluster_561$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_561._Benchmark.benchmark_Cluster_561

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 25541.154 ops/s
# Warmup Iteration   2: 58320.139 ops/s
# Warmup Iteration   3: 111932.965 ops/s
# Warmup Iteration   4: 169490.062 ops/s
# Warmup Iteration   5: 180474.746 ops/s
# Warmup Iteration   6: 152426.409 ops/s
# Warmup Iteration   7: 184745.959 ops/s
# Warmup Iteration   8: 192916.360 ops/s
# Warmup Iteration   9: 185642.598 ops/s
# Warmup Iteration  10: 180103.013 ops/s
# Warmup Iteration  11: 189412.853 ops/s
# Warmup Iteration  12: 179081.556 ops/s
# Warmup Iteration  13: 185040.741 ops/s
# Warmup Iteration  14: 192451.671 ops/s
# Warmup Iteration  15: 181011.173 ops/s
# Warmup Iteration  16: 191648.116 ops/s
# Warmup Iteration  17: 186696.428 ops/s
# Warmup Iteration  18: 191379.859 ops/s
# Warmup Iteration  19: 204137.116 ops/s
# Warmup Iteration  20: 190458.395 ops/s
# Warmup Iteration  21: 197220.414 ops/s
# Warmup Iteration  22: 189232.004 ops/s
# Warmup Iteration  23: 187275.617 ops/s
# Warmup Iteration  24: 194971.206 ops/s
# Warmup Iteration  25: 194906.233 ops/s
# Warmup Iteration  26: 189120.008 ops/s
# Warmup Iteration  27: 197962.414 ops/s
# Warmup Iteration  28: 191583.941 ops/s
# Warmup Iteration  29: 200580.765 ops/s
# Warmup Iteration  30: 188784.327 ops/s
Iteration   1: 191715.802 ops/s
Iteration   2: 199703.180 ops/s
Iteration   3: 190670.595 ops/s
Iteration   4: 198227.149 ops/s
Iteration   5: 200604.292 ops/s
Iteration   6: 186958.685 ops/s
Iteration   7: 194406.707 ops/s
Iteration   8: 190988.420 ops/s
Iteration   9: 196317.869 ops/s
Iteration  10: 195040.669 ops/s
Iteration  11: 187093.124 ops/s
Iteration  12: 152515.206 ops/s
Iteration  13: 185936.474 ops/s
Iteration  14: 193053.306 ops/s
Iteration  15: 190553.960 ops/s
Iteration  16: 197700.366 ops/s
Iteration  17: 194864.981 ops/s
Iteration  18: 187532.378 ops/s
Iteration  19: 191132.923 ops/s
Iteration  20: 199106.230 ops/s
Iteration  21: 194861.668 ops/s
Iteration  22: 187920.846 ops/s
Iteration  23: 199065.837 ops/s
Iteration  24: 199373.554 ops/s
Iteration  25: 189262.452 ops/s
Iteration  26: 197917.758 ops/s
Iteration  27: 187279.299 ops/s
Iteration  28: 191255.233 ops/s
Iteration  29: 190534.619 ops/s
Iteration  30: 190743.610 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_561._Benchmark.benchmark_Cluster_561":
  191744.573 ±(99.9%) 5773.204 ops/s [Average]
  (min, avg, max) = (152515.206, 191744.573, 200604.292), stdev = 8641.061
  CI (99.9%): [185971.369, 197517.777] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_561._Benchmark.benchmark_Cluster_561  thrpt   30  191744.573 ± 5773.204  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_562._Benchmark.benchmark_Cluster_562$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_562._Benchmark.benchmark_Cluster_562

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19243.761 ops/s
# Warmup Iteration   2: 74156.811 ops/s
# Warmup Iteration   3: 81263.021 ops/s
# Warmup Iteration   4: 87789.174 ops/s
# Warmup Iteration   5: 93374.473 ops/s
# Warmup Iteration   6: 95013.692 ops/s
# Warmup Iteration   7: 97008.160 ops/s
# Warmup Iteration   8: 93481.279 ops/s
# Warmup Iteration   9: 95146.660 ops/s
# Warmup Iteration  10: 98486.575 ops/s
# Warmup Iteration  11: 92397.791 ops/s
# Warmup Iteration  12: 98192.515 ops/s
# Warmup Iteration  13: 96446.486 ops/s
# Warmup Iteration  14: 94405.937 ops/s
# Warmup Iteration  15: 98569.289 ops/s
# Warmup Iteration  16: 101398.912 ops/s
# Warmup Iteration  17: 97920.936 ops/s
# Warmup Iteration  18: 99343.321 ops/s
# Warmup Iteration  19: 96832.206 ops/s
# Warmup Iteration  20: 98796.059 ops/s
# Warmup Iteration  21: 100053.451 ops/s
# Warmup Iteration  22: 98217.434 ops/s
# Warmup Iteration  23: 100554.820 ops/s
# Warmup Iteration  24: 97390.847 ops/s
# Warmup Iteration  25: 97774.349 ops/s
# Warmup Iteration  26: 101928.901 ops/s
# Warmup Iteration  27: 94816.751 ops/s
# Warmup Iteration  28: 99664.780 ops/s
# Warmup Iteration  29: 99062.488 ops/s
# Warmup Iteration  30: 100605.195 ops/s
Iteration   1: 97746.716 ops/s
Iteration   2: 96185.500 ops/s
Iteration   3: 101136.780 ops/s
Iteration   4: 98109.812 ops/s
Iteration   5: 100447.537 ops/s
Iteration   6: 94996.643 ops/s
Iteration   7: 99154.892 ops/s
Iteration   8: 101614.186 ops/s
Iteration   9: 92484.194 ops/s
Iteration  10: 99692.447 ops/s
Iteration  11: 94811.226 ops/s
Iteration  12: 97633.919 ops/s
Iteration  13: 100198.190 ops/s
Iteration  14: 94256.761 ops/s
Iteration  15: 98452.867 ops/s
Iteration  16: 99762.148 ops/s
Iteration  17: 97890.631 ops/s
Iteration  18: 103713.862 ops/s
Iteration  19: 98922.923 ops/s
Iteration  20: 97818.683 ops/s
Iteration  21: 101530.714 ops/s
Iteration  22: 98026.278 ops/s
Iteration  23: 103039.558 ops/s
Iteration  24: 94588.596 ops/s
Iteration  25: 101632.210 ops/s
Iteration  26: 96696.860 ops/s
Iteration  27: 103305.675 ops/s
Iteration  28: 97722.088 ops/s
Iteration  29: 97106.885 ops/s
Iteration  30: 98791.921 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_562._Benchmark.benchmark_Cluster_562":
  98582.357 ±(99.9%) 1864.184 ops/s [Average]
  (min, avg, max) = (92484.194, 98582.357, 103713.862), stdev = 2790.224
  CI (99.9%): [96718.172, 100446.541] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_562._Benchmark.benchmark_Cluster_562  thrpt   30  98582.357 ± 1864.184  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_563._Benchmark.benchmark_Cluster_563$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_563._Benchmark.benchmark_Cluster_563

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17797.527 ops/s
# Warmup Iteration   2: 89732.926 ops/s
# Warmup Iteration   3: 120550.709 ops/s
# Warmup Iteration   4: 113929.255 ops/s
# Warmup Iteration   5: 109608.487 ops/s
# Warmup Iteration   6: 132742.552 ops/s
# Warmup Iteration   7: 124205.409 ops/s
# Warmup Iteration   8: 133561.937 ops/s
# Warmup Iteration   9: 125502.984 ops/s
# Warmup Iteration  10: 128677.392 ops/s
# Warmup Iteration  11: 128750.083 ops/s
# Warmup Iteration  12: 131297.016 ops/s
# Warmup Iteration  13: 127033.659 ops/s
# Warmup Iteration  14: 133324.946 ops/s
# Warmup Iteration  15: 126257.846 ops/s
# Warmup Iteration  16: 126648.754 ops/s
# Warmup Iteration  17: 134857.400 ops/s
# Warmup Iteration  18: 130564.811 ops/s
# Warmup Iteration  19: 138836.373 ops/s
# Warmup Iteration  20: 134644.193 ops/s
# Warmup Iteration  21: 132642.929 ops/s
# Warmup Iteration  22: 138799.030 ops/s
# Warmup Iteration  23: 132844.667 ops/s
# Warmup Iteration  24: 126113.776 ops/s
# Warmup Iteration  25: 134378.182 ops/s
# Warmup Iteration  26: 140262.935 ops/s
# Warmup Iteration  27: 125603.917 ops/s
# Warmup Iteration  28: 135652.396 ops/s
# Warmup Iteration  29: 136740.582 ops/s
# Warmup Iteration  30: 130569.753 ops/s
Iteration   1: 135297.272 ops/s
Iteration   2: 132664.647 ops/s
Iteration   3: 133609.506 ops/s
Iteration   4: 131135.747 ops/s
Iteration   5: 132849.176 ops/s
Iteration   6: 110550.157 ops/s
Iteration   7: 134310.779 ops/s
Iteration   8: 130407.031 ops/s
Iteration   9: 139640.709 ops/s
Iteration  10: 131424.698 ops/s
Iteration  11: 139453.915 ops/s
Iteration  12: 130461.720 ops/s
Iteration  13: 132215.818 ops/s
Iteration  14: 134950.495 ops/s
Iteration  15: 129735.509 ops/s
Iteration  16: 138415.182 ops/s
Iteration  17: 131090.750 ops/s
Iteration  18: 135631.715 ops/s
Iteration  19: 135420.689 ops/s
Iteration  20: 131398.918 ops/s
Iteration  21: 140357.486 ops/s
Iteration  22: 129953.960 ops/s
Iteration  23: 137025.688 ops/s
Iteration  24: 139200.250 ops/s
Iteration  25: 132590.078 ops/s
Iteration  26: 129448.771 ops/s
Iteration  27: 139605.315 ops/s
Iteration  28: 132847.961 ops/s
Iteration  29: 133735.372 ops/s
Iteration  30: 133948.040 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_563._Benchmark.benchmark_Cluster_563":
  133312.578 ±(99.9%) 3622.986 ops/s [Average]
  (min, avg, max) = (110550.157, 133312.578, 140357.486), stdev = 5422.715
  CI (99.9%): [129689.593, 136935.564] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_563._Benchmark.benchmark_Cluster_563  thrpt   30  133312.578 ± 3622.986  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_564._Benchmark.benchmark_Cluster_564$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_564._Benchmark.benchmark_Cluster_564

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1974.135 ops/s
# Warmup Iteration   2: 20796.813 ops/s
# Warmup Iteration   3: 25165.160 ops/s
# Warmup Iteration   4: 36239.745 ops/s
# Warmup Iteration   5: 42776.153 ops/s
# Warmup Iteration   6: 92372.894 ops/s
# Warmup Iteration   7: 103828.513 ops/s
# Warmup Iteration   8: 107351.741 ops/s
# Warmup Iteration   9: 102352.419 ops/s
# Warmup Iteration  10: 103175.556 ops/s
# Warmup Iteration  11: 108359.339 ops/s
# Warmup Iteration  12: 95054.164 ops/s
# Warmup Iteration  13: 103662.327 ops/s
# Warmup Iteration  14: 103734.396 ops/s
# Warmup Iteration  15: 106808.508 ops/s
# Warmup Iteration  16: 101699.857 ops/s
# Warmup Iteration  17: 105633.556 ops/s
# Warmup Iteration  18: 107097.025 ops/s
# Warmup Iteration  19: 104309.519 ops/s
# Warmup Iteration  20: 109787.895 ops/s
# Warmup Iteration  21: 106999.119 ops/s
# Warmup Iteration  22: 102000.060 ops/s
# Warmup Iteration  23: 110327.662 ops/s
# Warmup Iteration  24: 102313.439 ops/s
# Warmup Iteration  25: 105979.444 ops/s
# Warmup Iteration  26: 108379.677 ops/s
# Warmup Iteration  27: 105219.482 ops/s
# Warmup Iteration  28: 105777.156 ops/s
# Warmup Iteration  29: 109586.788 ops/s
# Warmup Iteration  30: 103248.597 ops/s
Iteration   1: 106052.603 ops/s
Iteration   2: 105451.476 ops/s
Iteration   3: 106178.288 ops/s
Iteration   4: 106448.935 ops/s
Iteration   5: 105602.533 ops/s
Iteration   6: 105333.616 ops/s
Iteration   7: 109040.443 ops/s
Iteration   8: 110677.794 ops/s
Iteration   9: 104730.441 ops/s
Iteration  10: 107958.005 ops/s
Iteration  11: 105769.015 ops/s
Iteration  12: 106780.797 ops/s
Iteration  13: 105485.890 ops/s
Iteration  14: 106405.491 ops/s
Iteration  15: 107863.488 ops/s
Iteration  16: 105434.288 ops/s
Iteration  17: 109724.888 ops/s
Iteration  18: 105444.938 ops/s
Iteration  19: 107511.932 ops/s
Iteration  20: 110472.953 ops/s
Iteration  21: 102457.812 ops/s
Iteration  22: 110494.868 ops/s
Iteration  23: 104734.500 ops/s
Iteration  24: 108707.965 ops/s
Iteration  25: 109217.203 ops/s
Iteration  26: 104756.388 ops/s
Iteration  27: 106694.932 ops/s
Iteration  28: 108740.346 ops/s
Iteration  29: 104470.907 ops/s
Iteration  30: 105759.693 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_564._Benchmark.benchmark_Cluster_564":
  106813.414 ±(99.9%) 1377.029 ops/s [Average]
  (min, avg, max) = (102457.812, 106813.414, 110677.794), stdev = 2061.073
  CI (99.9%): [105436.385, 108190.444] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_564._Benchmark.benchmark_Cluster_564  thrpt   30  106813.414 ± 1377.029  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_565._Benchmark.benchmark_Cluster_565$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_565._Benchmark.benchmark_Cluster_565

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20391.725 ops/s
# Warmup Iteration   2: 65343.829 ops/s
# Warmup Iteration   3: 55582.765 ops/s
# Warmup Iteration   4: 85235.680 ops/s
# Warmup Iteration   5: 196585.226 ops/s
# Warmup Iteration   6: 198684.164 ops/s
# Warmup Iteration   7: 200752.372 ops/s
# Warmup Iteration   8: 191920.322 ops/s
# Warmup Iteration   9: 200236.283 ops/s
# Warmup Iteration  10: 197170.035 ops/s
# Warmup Iteration  11: 184654.904 ops/s
# Warmup Iteration  12: 197995.186 ops/s
# Warmup Iteration  13: 200751.407 ops/s
# Warmup Iteration  14: 204434.973 ops/s
# Warmup Iteration  15: 207729.449 ops/s
# Warmup Iteration  16: 198484.707 ops/s
# Warmup Iteration  17: 216187.809 ops/s
# Warmup Iteration  18: 210520.966 ops/s
# Warmup Iteration  19: 206486.880 ops/s
# Warmup Iteration  20: 215700.857 ops/s
# Warmup Iteration  21: 205907.785 ops/s
# Warmup Iteration  22: 211342.385 ops/s
# Warmup Iteration  23: 206768.333 ops/s
# Warmup Iteration  24: 205569.505 ops/s
# Warmup Iteration  25: 216005.609 ops/s
# Warmup Iteration  26: 211250.200 ops/s
# Warmup Iteration  27: 206896.665 ops/s
# Warmup Iteration  28: 212798.881 ops/s
# Warmup Iteration  29: 210478.107 ops/s
# Warmup Iteration  30: 207922.201 ops/s
Iteration   1: 148316.747 ops/s
Iteration   2: 216035.780 ops/s
Iteration   3: 201711.570 ops/s
Iteration   4: 216931.681 ops/s
Iteration   5: 210053.079 ops/s
Iteration   6: 202453.233 ops/s
Iteration   7: 221276.785 ops/s
Iteration   8: 208103.742 ops/s
Iteration   9: 217143.361 ops/s
Iteration  10: 212552.183 ops/s
Iteration  11: 206230.395 ops/s
Iteration  12: 218054.736 ops/s
Iteration  13: 216694.659 ops/s
Iteration  14: 201273.345 ops/s
Iteration  15: 214933.227 ops/s
Iteration  16: 211914.373 ops/s
Iteration  17: 209964.924 ops/s
Iteration  18: 209189.123 ops/s
Iteration  19: 206773.056 ops/s
Iteration  20: 211015.872 ops/s
Iteration  21: 214058.932 ops/s
Iteration  22: 204733.582 ops/s
Iteration  23: 213098.565 ops/s
Iteration  24: 200606.400 ops/s
Iteration  25: 216306.067 ops/s
Iteration  26: 209530.065 ops/s
Iteration  27: 215757.379 ops/s
Iteration  28: 206284.850 ops/s
Iteration  29: 211774.825 ops/s
Iteration  30: 211271.369 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_565._Benchmark.benchmark_Cluster_565":
  208801.463 ±(99.9%) 8445.647 ops/s [Average]
  (min, avg, max) = (148316.747, 208801.463, 221276.785), stdev = 12641.048
  CI (99.9%): [200355.816, 217247.111] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_565._Benchmark.benchmark_Cluster_565  thrpt   30  208801.463 ± 8445.647  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_566._Benchmark.benchmark_Cluster_566$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_566._Benchmark.benchmark_Cluster_566

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10028.248 ops/s
# Warmup Iteration   2: 55016.325 ops/s
# Warmup Iteration   3: 69767.862 ops/s
# Warmup Iteration   4: 66622.004 ops/s
# Warmup Iteration   5: 154545.249 ops/s
# Warmup Iteration   6: 144909.710 ops/s
# Warmup Iteration   7: 154620.861 ops/s
# Warmup Iteration   8: 147856.934 ops/s
# Warmup Iteration   9: 166444.646 ops/s
# Warmup Iteration  10: 156015.285 ops/s
# Warmup Iteration  11: 159336.552 ops/s
# Warmup Iteration  12: 163760.011 ops/s
# Warmup Iteration  13: 159289.860 ops/s
# Warmup Iteration  14: 164440.169 ops/s
# Warmup Iteration  15: 155344.825 ops/s
# Warmup Iteration  16: 162797.468 ops/s
# Warmup Iteration  17: 165455.696 ops/s
# Warmup Iteration  18: 161252.885 ops/s
# Warmup Iteration  19: 167385.924 ops/s
# Warmup Iteration  20: 160279.339 ops/s
# Warmup Iteration  21: 167244.263 ops/s
# Warmup Iteration  22: 169125.751 ops/s
# Warmup Iteration  23: 162442.668 ops/s
# Warmup Iteration  24: 165363.197 ops/s
# Warmup Iteration  25: 167611.618 ops/s
# Warmup Iteration  26: 165083.196 ops/s
# Warmup Iteration  27: 162672.394 ops/s
# Warmup Iteration  28: 165576.596 ops/s
# Warmup Iteration  29: 164072.853 ops/s
# Warmup Iteration  30: 174075.813 ops/s
Iteration   1: 158666.072 ops/s
Iteration   2: 164429.871 ops/s
Iteration   3: 167712.793 ops/s
Iteration   4: 167700.205 ops/s
Iteration   5: 168975.671 ops/s
Iteration   6: 161675.625 ops/s
Iteration   7: 173844.103 ops/s
Iteration   8: 165648.295 ops/s
Iteration   9: 165565.533 ops/s
Iteration  10: 167941.132 ops/s
Iteration  11: 165416.726 ops/s
Iteration  12: 168617.420 ops/s
Iteration  13: 164794.176 ops/s
Iteration  14: 166252.033 ops/s
Iteration  15: 170816.148 ops/s
Iteration  16: 171287.736 ops/s
Iteration  17: 158928.999 ops/s
Iteration  18: 164045.582 ops/s
Iteration  19: 171938.278 ops/s
Iteration  20: 160215.646 ops/s
Iteration  21: 169795.297 ops/s
Iteration  22: 161651.349 ops/s
Iteration  23: 169158.760 ops/s
Iteration  24: 162636.203 ops/s
Iteration  25: 167614.824 ops/s
Iteration  26: 165724.759 ops/s
Iteration  27: 167836.688 ops/s
Iteration  28: 165321.987 ops/s
Iteration  29: 163860.831 ops/s
Iteration  30: 162110.222 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_566._Benchmark.benchmark_Cluster_566":
  166006.099 ±(99.9%) 2537.968 ops/s [Average]
  (min, avg, max) = (158666.072, 166006.099, 173844.103), stdev = 3798.711
  CI (99.9%): [163468.131, 168544.066] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_566._Benchmark.benchmark_Cluster_566  thrpt   30  166006.099 ± 2537.968  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_567._Benchmark.benchmark_Cluster_567$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_567._Benchmark.benchmark_Cluster_567

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2632.953 ops/s
# Warmup Iteration   2: 21608.217 ops/s
# Warmup Iteration   3: 31505.363 ops/s
# Warmup Iteration   4: 48768.248 ops/s
# Warmup Iteration   5: 45587.857 ops/s
# Warmup Iteration   6: 39663.072 ops/s
# Warmup Iteration   7: 67600.646 ops/s
# Warmup Iteration   8: 43854.726 ops/s
# Warmup Iteration   9: 90781.362 ops/s
# Warmup Iteration  10: 90024.931 ops/s
# Warmup Iteration  11: 89775.070 ops/s
# Warmup Iteration  12: 98885.896 ops/s
# Warmup Iteration  13: 98496.529 ops/s
# Warmup Iteration  14: 101011.107 ops/s
# Warmup Iteration  15: 97133.651 ops/s
# Warmup Iteration  16: 100770.888 ops/s
# Warmup Iteration  17: 100213.853 ops/s
# Warmup Iteration  18: 102415.131 ops/s
# Warmup Iteration  19: 100379.152 ops/s
# Warmup Iteration  20: 98793.599 ops/s
# Warmup Iteration  21: 103408.592 ops/s
# Warmup Iteration  22: 101744.520 ops/s
# Warmup Iteration  23: 100533.679 ops/s
# Warmup Iteration  24: 90142.127 ops/s
# Warmup Iteration  25: 96301.181 ops/s
# Warmup Iteration  26: 99405.834 ops/s
# Warmup Iteration  27: 98465.379 ops/s
# Warmup Iteration  28: 105516.307 ops/s
# Warmup Iteration  29: 97676.132 ops/s
# Warmup Iteration  30: 105583.982 ops/s
Iteration   1: 100102.356 ops/s
Iteration   2: 99794.266 ops/s
Iteration   3: 103333.644 ops/s
Iteration   4: 102149.738 ops/s
Iteration   5: 99166.483 ops/s
Iteration   6: 102458.214 ops/s
Iteration   7: 96099.861 ops/s
Iteration   8: 103069.201 ops/s
Iteration   9: 99442.043 ops/s
Iteration  10: 100797.653 ops/s
Iteration  11: 103228.035 ops/s
Iteration  12: 101037.820 ops/s
Iteration  13: 99216.703 ops/s
Iteration  14: 99838.126 ops/s
Iteration  15: 100077.452 ops/s
Iteration  16: 102464.732 ops/s
Iteration  17: 97886.591 ops/s
Iteration  18: 101519.918 ops/s
Iteration  19: 106075.726 ops/s
Iteration  20: 98012.595 ops/s
Iteration  21: 104813.112 ops/s
Iteration  22: 100011.824 ops/s
Iteration  23: 103388.467 ops/s
Iteration  24: 97601.464 ops/s
Iteration  25: 100275.368 ops/s
Iteration  26: 104626.307 ops/s
Iteration  27: 99839.549 ops/s
Iteration  28: 100431.031 ops/s
Iteration  29: 98533.822 ops/s
Iteration  30: 99613.912 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_567._Benchmark.benchmark_Cluster_567":
  100830.200 ±(99.9%) 1557.874 ops/s [Average]
  (min, avg, max) = (96099.861, 100830.200, 106075.726), stdev = 2331.753
  CI (99.9%): [99272.326, 102388.075] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_567._Benchmark.benchmark_Cluster_567  thrpt   30  100830.200 ± 1557.874  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_568._Benchmark.benchmark_Cluster_568$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_568._Benchmark.benchmark_Cluster_568

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1305.268 ops/s
# Warmup Iteration   2: 8826.713 ops/s
# Warmup Iteration   3: 22461.502 ops/s
# Warmup Iteration   4: 31639.932 ops/s
# Warmup Iteration   5: 35792.479 ops/s
# Warmup Iteration   6: 30347.328 ops/s
# Warmup Iteration   7: 29388.223 ops/s
# Warmup Iteration   8: 26898.619 ops/s
# Warmup Iteration   9: 68981.195 ops/s
# Warmup Iteration  10: 74420.027 ops/s
# Warmup Iteration  11: 83025.520 ops/s
# Warmup Iteration  12: 88993.895 ops/s
# Warmup Iteration  13: 83913.172 ops/s
# Warmup Iteration  14: 85935.446 ops/s
# Warmup Iteration  15: 79791.467 ops/s
# Warmup Iteration  16: 84858.873 ops/s
# Warmup Iteration  17: 85339.737 ops/s
# Warmup Iteration  18: 93553.541 ops/s
# Warmup Iteration  19: 89092.113 ops/s
# Warmup Iteration  20: 86342.368 ops/s
# Warmup Iteration  21: 88937.748 ops/s
# Warmup Iteration  22: 84014.883 ops/s
# Warmup Iteration  23: 88762.729 ops/s
# Warmup Iteration  24: 90208.794 ops/s
# Warmup Iteration  25: 84307.958 ops/s
# Warmup Iteration  26: 87579.254 ops/s
# Warmup Iteration  27: 85303.809 ops/s
# Warmup Iteration  28: 84949.930 ops/s
# Warmup Iteration  29: 88124.310 ops/s
# Warmup Iteration  30: 84665.454 ops/s
Iteration   1: 85006.393 ops/s
Iteration   2: 89759.507 ops/s
Iteration   3: 84565.411 ops/s
Iteration   4: 90238.665 ops/s
Iteration   5: 83513.131 ops/s
Iteration   6: 90241.588 ops/s
Iteration   7: 88733.598 ops/s
Iteration   8: 86284.778 ops/s
Iteration   9: 89601.028 ops/s
Iteration  10: 86833.210 ops/s
Iteration  11: 86642.862 ops/s
Iteration  12: 89808.925 ops/s
Iteration  13: 87216.590 ops/s
Iteration  14: 85285.282 ops/s
Iteration  15: 85333.513 ops/s
Iteration  16: 86037.265 ops/s
Iteration  17: 87703.093 ops/s
Iteration  18: 86861.942 ops/s
Iteration  19: 84591.252 ops/s
Iteration  20: 88891.972 ops/s
Iteration  21: 82834.744 ops/s
Iteration  22: 89159.214 ops/s
Iteration  23: 87345.590 ops/s
Iteration  24: 86765.569 ops/s
Iteration  25: 88138.547 ops/s
Iteration  26: 84990.548 ops/s
Iteration  27: 90036.600 ops/s
Iteration  28: 87247.801 ops/s
Iteration  29: 89521.964 ops/s
Iteration  30: 85729.306 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_568._Benchmark.benchmark_Cluster_568":
  87163.996 ±(99.9%) 1412.147 ops/s [Average]
  (min, avg, max) = (82834.744, 87163.996, 90241.588), stdev = 2113.635
  CI (99.9%): [85751.849, 88576.143] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_568._Benchmark.benchmark_Cluster_568  thrpt   30  87163.996 ± 1412.147  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_569._Benchmark.benchmark_Cluster_569$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_569._Benchmark.benchmark_Cluster_569

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20063.773 ops/s
# Warmup Iteration   2: 67652.232 ops/s
# Warmup Iteration   3: 119643.821 ops/s
# Warmup Iteration   4: 127468.513 ops/s
# Warmup Iteration   5: 134228.155 ops/s
# Warmup Iteration   6: 124018.696 ops/s
# Warmup Iteration   7: 128379.679 ops/s
# Warmup Iteration   8: 129071.548 ops/s
# Warmup Iteration   9: 132625.277 ops/s
# Warmup Iteration  10: 136126.353 ops/s
# Warmup Iteration  11: 128309.802 ops/s
# Warmup Iteration  12: 132127.801 ops/s
# Warmup Iteration  13: 130880.944 ops/s
# Warmup Iteration  14: 128899.833 ops/s
# Warmup Iteration  15: 130516.498 ops/s
# Warmup Iteration  16: 134412.367 ops/s
# Warmup Iteration  17: 136336.691 ops/s
# Warmup Iteration  18: 133376.626 ops/s
# Warmup Iteration  19: 114026.589 ops/s
# Warmup Iteration  20: 135413.006 ops/s
# Warmup Iteration  21: 140896.517 ops/s
# Warmup Iteration  22: 133230.739 ops/s
# Warmup Iteration  23: 138849.912 ops/s
# Warmup Iteration  24: 136185.652 ops/s
# Warmup Iteration  25: 131773.591 ops/s
# Warmup Iteration  26: 142701.762 ops/s
# Warmup Iteration  27: 133124.087 ops/s
# Warmup Iteration  28: 138870.324 ops/s
# Warmup Iteration  29: 141109.980 ops/s
# Warmup Iteration  30: 137554.117 ops/s
Iteration   1: 144637.445 ops/s
Iteration   2: 132113.071 ops/s
Iteration   3: 138803.749 ops/s
Iteration   4: 145060.402 ops/s
Iteration   5: 136014.388 ops/s
Iteration   6: 143632.754 ops/s
Iteration   7: 129005.159 ops/s
Iteration   8: 141211.407 ops/s
Iteration   9: 144607.247 ops/s
Iteration  10: 133216.525 ops/s
Iteration  11: 141865.336 ops/s
Iteration  12: 141727.807 ops/s
Iteration  13: 139200.991 ops/s
Iteration  14: 140126.652 ops/s
Iteration  15: 137119.558 ops/s
Iteration  16: 138990.235 ops/s
Iteration  17: 141136.849 ops/s
Iteration  18: 138772.199 ops/s
Iteration  19: 141053.870 ops/s
Iteration  20: 139534.438 ops/s
Iteration  21: 143628.143 ops/s
Iteration  22: 140953.937 ops/s
Iteration  23: 134027.760 ops/s
Iteration  24: 140198.754 ops/s
Iteration  25: 141455.857 ops/s
Iteration  26: 137691.462 ops/s
Iteration  27: 143297.658 ops/s
Iteration  28: 140547.735 ops/s
Iteration  29: 140797.329 ops/s
Iteration  30: 141038.753 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_569._Benchmark.benchmark_Cluster_569":
  139715.582 ±(99.9%) 2535.558 ops/s [Average]
  (min, avg, max) = (129005.159, 139715.582, 145060.402), stdev = 3795.104
  CI (99.9%): [137180.024, 142251.140] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_569._Benchmark.benchmark_Cluster_569  thrpt   30  139715.582 ± 2535.558  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_57._Benchmark.benchmark_Cluster_57$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_57._Benchmark.benchmark_Cluster_57

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2225.319 ops/s
# Warmup Iteration   2: 25314.510 ops/s
# Warmup Iteration   3: 39732.976 ops/s
# Warmup Iteration   4: 57538.844 ops/s
# Warmup Iteration   5: 68882.254 ops/s
# Warmup Iteration   6: 82203.974 ops/s
# Warmup Iteration   7: 80423.351 ops/s
# Warmup Iteration   8: 80023.283 ops/s
# Warmup Iteration   9: 83239.575 ops/s
# Warmup Iteration  10: 78994.767 ops/s
# Warmup Iteration  11: 83079.753 ops/s
# Warmup Iteration  12: 79571.495 ops/s
# Warmup Iteration  13: 82271.329 ops/s
# Warmup Iteration  14: 81626.138 ops/s
# Warmup Iteration  15: 81561.380 ops/s
# Warmup Iteration  16: 81316.758 ops/s
# Warmup Iteration  17: 81516.721 ops/s
# Warmup Iteration  18: 81439.884 ops/s
# Warmup Iteration  19: 84739.633 ops/s
# Warmup Iteration  20: 80191.979 ops/s
# Warmup Iteration  21: 83783.259 ops/s
# Warmup Iteration  22: 79977.800 ops/s
# Warmup Iteration  23: 82024.539 ops/s
# Warmup Iteration  24: 82656.881 ops/s
# Warmup Iteration  25: 79458.684 ops/s
# Warmup Iteration  26: 79999.232 ops/s
# Warmup Iteration  27: 85233.347 ops/s
# Warmup Iteration  28: 76771.544 ops/s
# Warmup Iteration  29: 84686.335 ops/s
# Warmup Iteration  30: 82365.493 ops/s
Iteration   1: 82262.734 ops/s
Iteration   2: 82901.360 ops/s
Iteration   3: 78835.521 ops/s
Iteration   4: 82680.222 ops/s
Iteration   5: 83874.960 ops/s
Iteration   6: 79908.465 ops/s
Iteration   7: 83935.373 ops/s
Iteration   8: 79038.381 ops/s
Iteration   9: 82465.054 ops/s
Iteration  10: 82815.546 ops/s
Iteration  11: 80588.972 ops/s
Iteration  12: 83785.328 ops/s
Iteration  13: 81296.051 ops/s
Iteration  14: 81552.311 ops/s
Iteration  15: 81485.585 ops/s
Iteration  16: 81177.238 ops/s
Iteration  17: 82091.023 ops/s
Iteration  18: 79330.834 ops/s
Iteration  19: 81900.526 ops/s
Iteration  20: 82595.015 ops/s
Iteration  21: 78109.303 ops/s
Iteration  22: 81739.735 ops/s
Iteration  23: 80447.774 ops/s
Iteration  24: 80680.949 ops/s
Iteration  25: 80377.842 ops/s
Iteration  26: 83286.884 ops/s
Iteration  27: 83079.264 ops/s
Iteration  28: 78359.787 ops/s
Iteration  29: 83331.412 ops/s
Iteration  30: 80530.092 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_57._Benchmark.benchmark_Cluster_57":
  81482.118 ±(99.9%) 1115.928 ops/s [Average]
  (min, avg, max) = (78109.303, 81482.118, 83935.373), stdev = 1670.269
  CI (99.9%): [80366.190, 82598.046] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_57._Benchmark.benchmark_Cluster_57  thrpt   30  81482.118 ± 1115.928  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_570._Benchmark.benchmark_Cluster_570$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_570._Benchmark.benchmark_Cluster_570

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 22470.726 ops/s
# Warmup Iteration   2: 85114.741 ops/s
# Warmup Iteration   3: 139475.296 ops/s
# Warmup Iteration   4: 135823.800 ops/s
# Warmup Iteration   5: 144285.496 ops/s
# Warmup Iteration   6: 137795.775 ops/s
# Warmup Iteration   7: 133467.644 ops/s
# Warmup Iteration   8: 136962.610 ops/s
# Warmup Iteration   9: 135584.617 ops/s
# Warmup Iteration  10: 151383.682 ops/s
# Warmup Iteration  11: 142710.370 ops/s
# Warmup Iteration  12: 137945.237 ops/s
# Warmup Iteration  13: 121344.779 ops/s
# Warmup Iteration  14: 130480.549 ops/s
# Warmup Iteration  15: 147456.490 ops/s
# Warmup Iteration  16: 139940.672 ops/s
# Warmup Iteration  17: 148458.910 ops/s
# Warmup Iteration  18: 149452.492 ops/s
# Warmup Iteration  19: 154456.273 ops/s
# Warmup Iteration  20: 154887.716 ops/s
# Warmup Iteration  21: 143398.929 ops/s
# Warmup Iteration  22: 149173.675 ops/s
# Warmup Iteration  23: 152571.110 ops/s
# Warmup Iteration  24: 147870.755 ops/s
# Warmup Iteration  25: 141081.488 ops/s
# Warmup Iteration  26: 151892.634 ops/s
# Warmup Iteration  27: 149166.845 ops/s
# Warmup Iteration  28: 151323.982 ops/s
# Warmup Iteration  29: 144704.784 ops/s
# Warmup Iteration  30: 151351.386 ops/s
Iteration   1: 144582.433 ops/s
Iteration   2: 146750.110 ops/s
Iteration   3: 151688.571 ops/s
Iteration   4: 151742.945 ops/s
Iteration   5: 151247.614 ops/s
Iteration   6: 150028.585 ops/s
Iteration   7: 145611.661 ops/s
Iteration   8: 155982.711 ops/s
Iteration   9: 144119.519 ops/s
Iteration  10: 152437.916 ops/s
Iteration  11: 147297.502 ops/s
Iteration  12: 154040.264 ops/s
Iteration  13: 155062.721 ops/s
Iteration  14: 143288.575 ops/s
Iteration  15: 150922.502 ops/s
Iteration  16: 149960.583 ops/s
Iteration  17: 147385.484 ops/s
Iteration  18: 149744.808 ops/s
Iteration  19: 151725.994 ops/s
Iteration  20: 149908.043 ops/s
Iteration  21: 157436.416 ops/s
Iteration  22: 147409.039 ops/s
Iteration  23: 149458.193 ops/s
Iteration  24: 155223.736 ops/s
Iteration  25: 146944.803 ops/s
Iteration  26: 153715.457 ops/s
Iteration  27: 149257.050 ops/s
Iteration  28: 148502.093 ops/s
Iteration  29: 149370.907 ops/s
Iteration  30: 150577.084 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_570._Benchmark.benchmark_Cluster_570":
  150047.444 ±(99.9%) 2367.554 ops/s [Average]
  (min, avg, max) = (143288.575, 150047.444, 157436.416), stdev = 3543.643
  CI (99.9%): [147679.890, 152414.998] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_570._Benchmark.benchmark_Cluster_570  thrpt   30  150047.444 ± 2367.554  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_571._Benchmark.benchmark_Cluster_571$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_571._Benchmark.benchmark_Cluster_571

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.878 ops/s
# Warmup Iteration   2: 5636.489 ops/s
# Warmup Iteration   3: 28209.949 ops/s
# Warmup Iteration   4: 47227.740 ops/s
# Warmup Iteration   5: 40212.552 ops/s
# Warmup Iteration   6: 40563.562 ops/s
# Warmup Iteration   7: 44106.367 ops/s
# Warmup Iteration   8: 69547.612 ops/s
# Warmup Iteration   9: 139946.071 ops/s
# Warmup Iteration  10: 144368.314 ops/s
# Warmup Iteration  11: 140861.221 ops/s
# Warmup Iteration  12: 149455.923 ops/s
# Warmup Iteration  13: 132845.014 ops/s
# Warmup Iteration  14: 138150.317 ops/s
# Warmup Iteration  15: 143054.964 ops/s
# Warmup Iteration  16: 148299.387 ops/s
# Warmup Iteration  17: 140801.933 ops/s
# Warmup Iteration  18: 145475.019 ops/s
# Warmup Iteration  19: 150496.835 ops/s
# Warmup Iteration  20: 148809.640 ops/s
# Warmup Iteration  21: 144214.274 ops/s
# Warmup Iteration  22: 144924.310 ops/s
# Warmup Iteration  23: 147381.154 ops/s
# Warmup Iteration  24: 143915.522 ops/s
# Warmup Iteration  25: 148239.023 ops/s
# Warmup Iteration  26: 147586.828 ops/s
# Warmup Iteration  27: 141163.501 ops/s
# Warmup Iteration  28: 152473.435 ops/s
# Warmup Iteration  29: 152192.616 ops/s
# Warmup Iteration  30: 143364.857 ops/s
Iteration   1: 147361.999 ops/s
Iteration   2: 143474.311 ops/s
Iteration   3: 148151.737 ops/s
Iteration   4: 148511.210 ops/s
Iteration   5: 142602.238 ops/s
Iteration   6: 147082.565 ops/s
Iteration   7: 147604.943 ops/s
Iteration   8: 142969.077 ops/s
Iteration   9: 153194.799 ops/s
Iteration  10: 141600.082 ops/s
Iteration  11: 151595.401 ops/s
Iteration  12: 140924.962 ops/s
Iteration  13: 146325.796 ops/s
Iteration  14: 148348.626 ops/s
Iteration  15: 141710.466 ops/s
Iteration  16: 147963.829 ops/s
Iteration  17: 144526.573 ops/s
Iteration  18: 144076.948 ops/s
Iteration  19: 153388.184 ops/s
Iteration  20: 141968.287 ops/s
Iteration  21: 150530.144 ops/s
Iteration  22: 142905.583 ops/s
Iteration  23: 146122.008 ops/s
Iteration  24: 146201.827 ops/s
Iteration  25: 144021.105 ops/s
Iteration  26: 148643.408 ops/s
Iteration  27: 141180.657 ops/s
Iteration  28: 147205.990 ops/s
Iteration  29: 143357.495 ops/s
Iteration  30: 147477.158 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_571._Benchmark.benchmark_Cluster_571":
  146034.247 ±(99.9%) 2325.336 ops/s [Average]
  (min, avg, max) = (140924.962, 146034.247, 153388.184), stdev = 3480.454
  CI (99.9%): [143708.911, 148359.583] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_571._Benchmark.benchmark_Cluster_571  thrpt   30  146034.247 ± 2325.336  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_572._Benchmark.benchmark_Cluster_572$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_572._Benchmark.benchmark_Cluster_572

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16158.059 ops/s
# Warmup Iteration   2: 47963.740 ops/s
# Warmup Iteration   3: 87226.560 ops/s
# Warmup Iteration   4: 98540.163 ops/s
# Warmup Iteration   5: 112663.430 ops/s
# Warmup Iteration   6: 107386.060 ops/s
# Warmup Iteration   7: 100677.359 ops/s
# Warmup Iteration   8: 99056.453 ops/s
# Warmup Iteration   9: 112020.699 ops/s
# Warmup Iteration  10: 116784.393 ops/s
# Warmup Iteration  11: 113992.419 ops/s
# Warmup Iteration  12: 109534.053 ops/s
# Warmup Iteration  13: 116273.119 ops/s
# Warmup Iteration  14: 109882.599 ops/s
# Warmup Iteration  15: 115561.254 ops/s
# Warmup Iteration  16: 112076.393 ops/s
# Warmup Iteration  17: 114659.229 ops/s
# Warmup Iteration  18: 119144.305 ops/s
# Warmup Iteration  19: 112424.705 ops/s
# Warmup Iteration  20: 115494.205 ops/s
# Warmup Iteration  21: 116526.608 ops/s
# Warmup Iteration  22: 114726.144 ops/s
# Warmup Iteration  23: 118664.394 ops/s
# Warmup Iteration  24: 115588.173 ops/s
# Warmup Iteration  25: 116728.566 ops/s
# Warmup Iteration  26: 118092.098 ops/s
# Warmup Iteration  27: 115142.108 ops/s
# Warmup Iteration  28: 118093.343 ops/s
# Warmup Iteration  29: 116474.809 ops/s
# Warmup Iteration  30: 117421.146 ops/s
Iteration   1: 115102.093 ops/s
Iteration   2: 114808.506 ops/s
Iteration   3: 114136.705 ops/s
Iteration   4: 113578.174 ops/s
Iteration   5: 116379.134 ops/s
Iteration   6: 114158.358 ops/s
Iteration   7: 119227.090 ops/s
Iteration   8: 118941.568 ops/s
Iteration   9: 116062.818 ops/s
Iteration  10: 117337.506 ops/s
Iteration  11: 117498.009 ops/s
Iteration  12: 116911.217 ops/s
Iteration  13: 120669.230 ops/s
Iteration  14: 112368.470 ops/s
Iteration  15: 117181.045 ops/s
Iteration  16: 119122.088 ops/s
Iteration  17: 116144.789 ops/s
Iteration  18: 117994.301 ops/s
Iteration  19: 117923.635 ops/s
Iteration  20: 113632.104 ops/s
Iteration  21: 116849.787 ops/s
Iteration  22: 115310.143 ops/s
Iteration  23: 119569.938 ops/s
Iteration  24: 119802.686 ops/s
Iteration  25: 115006.686 ops/s
Iteration  26: 118973.993 ops/s
Iteration  27: 116795.964 ops/s
Iteration  28: 113198.268 ops/s
Iteration  29: 119987.069 ops/s
Iteration  30: 115459.537 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_572._Benchmark.benchmark_Cluster_572":
  116671.030 ±(99.9%) 1508.648 ops/s [Average]
  (min, avg, max) = (112368.470, 116671.030, 120669.230), stdev = 2258.073
  CI (99.9%): [115162.383, 118179.678] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_572._Benchmark.benchmark_Cluster_572  thrpt   30  116671.030 ± 1508.648  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_573._Benchmark.benchmark_Cluster_573$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_573._Benchmark.benchmark_Cluster_573

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 31328.939 ops/s
# Warmup Iteration   2: 106817.103 ops/s
# Warmup Iteration   3: 125507.976 ops/s
# Warmup Iteration   4: 135904.630 ops/s
# Warmup Iteration   5: 139016.624 ops/s
# Warmup Iteration   6: 141645.853 ops/s
# Warmup Iteration   7: 123472.944 ops/s
# Warmup Iteration   8: 149913.954 ops/s
# Warmup Iteration   9: 141505.075 ops/s
# Warmup Iteration  10: 150878.966 ops/s
# Warmup Iteration  11: 139411.628 ops/s
# Warmup Iteration  12: 152381.735 ops/s
# Warmup Iteration  13: 150733.581 ops/s
# Warmup Iteration  14: 140035.384 ops/s
# Warmup Iteration  15: 148759.023 ops/s
# Warmup Iteration  16: 142676.525 ops/s
# Warmup Iteration  17: 156107.127 ops/s
# Warmup Iteration  18: 151036.479 ops/s
# Warmup Iteration  19: 149668.489 ops/s
# Warmup Iteration  20: 154940.029 ops/s
# Warmup Iteration  21: 158170.442 ops/s
# Warmup Iteration  22: 149713.720 ops/s
# Warmup Iteration  23: 155344.217 ops/s
# Warmup Iteration  24: 156704.882 ops/s
# Warmup Iteration  25: 148556.218 ops/s
# Warmup Iteration  26: 156461.330 ops/s
# Warmup Iteration  27: 149022.244 ops/s
# Warmup Iteration  28: 150769.675 ops/s
# Warmup Iteration  29: 160464.388 ops/s
# Warmup Iteration  30: 145259.710 ops/s
Iteration   1: 158450.872 ops/s
Iteration   2: 149880.279 ops/s
Iteration   3: 152058.346 ops/s
Iteration   4: 149779.114 ops/s
Iteration   5: 159254.813 ops/s
Iteration   6: 152553.351 ops/s
Iteration   7: 147994.008 ops/s
Iteration   8: 153284.282 ops/s
Iteration   9: 150884.828 ops/s
Iteration  10: 156777.667 ops/s
Iteration  11: 146138.865 ops/s
Iteration  12: 157596.871 ops/s
Iteration  13: 156781.764 ops/s
Iteration  14: 148772.519 ops/s
Iteration  15: 149470.946 ops/s
Iteration  16: 155430.080 ops/s
Iteration  17: 151538.218 ops/s
Iteration  18: 154098.744 ops/s
Iteration  19: 150434.615 ops/s
Iteration  20: 152599.048 ops/s
Iteration  21: 157536.902 ops/s
Iteration  22: 146324.025 ops/s
Iteration  23: 155425.447 ops/s
Iteration  24: 152253.631 ops/s
Iteration  25: 148537.586 ops/s
Iteration  26: 149667.961 ops/s
Iteration  27: 153216.669 ops/s
Iteration  28: 148850.919 ops/s
Iteration  29: 148806.699 ops/s
Iteration  30: 156360.948 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_573._Benchmark.benchmark_Cluster_573":
  152358.667 ±(99.9%) 2478.666 ops/s [Average]
  (min, avg, max) = (146138.865, 152358.667, 159254.813), stdev = 3709.951
  CI (99.9%): [149880.001, 154837.333] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_573._Benchmark.benchmark_Cluster_573  thrpt   30  152358.667 ± 2478.666  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_574._Benchmark.benchmark_Cluster_574$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_574._Benchmark.benchmark_Cluster_574

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3830.791 ops/s
# Warmup Iteration   2: 15434.989 ops/s
# Warmup Iteration   3: 21815.906 ops/s
# Warmup Iteration   4: 25435.409 ops/s
# Warmup Iteration   5: 37330.071 ops/s
# Warmup Iteration   6: 41704.098 ops/s
# Warmup Iteration   7: 75289.051 ops/s
# Warmup Iteration   8: 77899.640 ops/s
# Warmup Iteration   9: 65562.372 ops/s
# Warmup Iteration  10: 74867.618 ops/s
# Warmup Iteration  11: 70166.598 ops/s
# Warmup Iteration  12: 66883.016 ops/s
# Warmup Iteration  13: 69347.013 ops/s
# Warmup Iteration  14: 62912.622 ops/s
# Warmup Iteration  15: 66703.528 ops/s
# Warmup Iteration  16: 75293.442 ops/s
# Warmup Iteration  17: 73566.850 ops/s
# Warmup Iteration  18: 70281.521 ops/s
# Warmup Iteration  19: 76279.364 ops/s
# Warmup Iteration  20: 69310.131 ops/s
# Warmup Iteration  21: 68786.587 ops/s
# Warmup Iteration  22: 70842.485 ops/s
# Warmup Iteration  23: 72687.118 ops/s
# Warmup Iteration  24: 74297.335 ops/s
# Warmup Iteration  25: 74016.318 ops/s
# Warmup Iteration  26: 75987.481 ops/s
# Warmup Iteration  27: 79777.542 ops/s
# Warmup Iteration  28: 71327.941 ops/s
# Warmup Iteration  29: 75986.315 ops/s
# Warmup Iteration  30: 70536.906 ops/s
Iteration   1: 67375.325 ops/s
Iteration   2: 66741.453 ops/s
Iteration   3: 67151.715 ops/s
Iteration   4: 80091.709 ops/s
Iteration   5: 70244.211 ops/s
Iteration   6: 81322.851 ops/s
Iteration   7: 72753.244 ops/s
Iteration   8: 71329.029 ops/s
Iteration   9: 73675.844 ops/s
Iteration  10: 65890.701 ops/s
Iteration  11: 70646.085 ops/s
Iteration  12: 62097.391 ops/s
Iteration  13: 76914.101 ops/s
Iteration  14: 69264.937 ops/s
Iteration  15: 75197.742 ops/s
Iteration  16: 76934.016 ops/s
Iteration  17: 70011.998 ops/s
Iteration  18: 67182.086 ops/s
Iteration  19: 67932.848 ops/s
Iteration  20: 76207.059 ops/s
Iteration  21: 71711.910 ops/s
Iteration  22: 60849.874 ops/s
Iteration  23: 77967.322 ops/s
Iteration  24: 76089.460 ops/s
Iteration  25: 77589.288 ops/s
Iteration  26: 67469.494 ops/s
Iteration  27: 63968.405 ops/s
Iteration  28: 85044.727 ops/s
Iteration  29: 65673.029 ops/s
Iteration  30: 68985.557 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_574._Benchmark.benchmark_Cluster_574":
  71477.114 ±(99.9%) 3924.788 ops/s [Average]
  (min, avg, max) = (60849.874, 71477.114, 85044.727), stdev = 5874.439
  CI (99.9%): [67552.325, 75401.902] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_574._Benchmark.benchmark_Cluster_574  thrpt   30  71477.114 ± 3924.788  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_575._Benchmark.benchmark_Cluster_575$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_575._Benchmark.benchmark_Cluster_575

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8779.472 ops/s
# Warmup Iteration   2: 22308.094 ops/s
# Warmup Iteration   3: 25762.231 ops/s
# Warmup Iteration   4: 16052.257 ops/s
# Warmup Iteration   5: 23638.331 ops/s
# Warmup Iteration   6: 54224.544 ops/s
# Warmup Iteration   7: 74734.199 ops/s
# Warmup Iteration   8: 59268.653 ops/s
# Warmup Iteration   9: 56966.563 ops/s
# Warmup Iteration  10: 59781.284 ops/s
# Warmup Iteration  11: 63263.524 ops/s
# Warmup Iteration  12: 56474.993 ops/s
# Warmup Iteration  13: 60519.999 ops/s
# Warmup Iteration  14: 53342.004 ops/s
# Warmup Iteration  15: 52965.031 ops/s
# Warmup Iteration  16: 53661.455 ops/s
# Warmup Iteration  17: 60228.884 ops/s
# Warmup Iteration  18: 56980.908 ops/s
# Warmup Iteration  19: 64525.821 ops/s
# Warmup Iteration  20: 53919.466 ops/s
# Warmup Iteration  21: 53809.003 ops/s
# Warmup Iteration  22: 57643.835 ops/s
# Warmup Iteration  23: 60155.623 ops/s
# Warmup Iteration  24: 52076.467 ops/s
# Warmup Iteration  25: 68038.881 ops/s
# Warmup Iteration  26: 70465.936 ops/s
# Warmup Iteration  27: 58825.777 ops/s
# Warmup Iteration  28: 58116.887 ops/s
# Warmup Iteration  29: 62073.881 ops/s
# Warmup Iteration  30: 58367.417 ops/s
Iteration   1: 64095.043 ops/s
Iteration   2: 65314.018 ops/s
Iteration   3: 59579.504 ops/s
Iteration   4: 67482.826 ops/s
Iteration   5: 59241.433 ops/s
Iteration   6: 50739.646 ops/s
Iteration   7: 64782.123 ops/s
Iteration   8: 62233.718 ops/s
Iteration   9: 58768.474 ops/s
Iteration  10: 70882.861 ops/s
Iteration  11: 65380.487 ops/s
Iteration  12: 56065.596 ops/s
Iteration  13: 66098.531 ops/s
Iteration  14: 59186.514 ops/s
Iteration  15: 63729.743 ops/s
Iteration  16: 54892.841 ops/s
Iteration  17: 64700.914 ops/s
Iteration  18: 59013.554 ops/s
Iteration  19: 53961.531 ops/s
Iteration  20: 68293.463 ops/s
Iteration  21: 60436.770 ops/s
Iteration  22: 64438.416 ops/s
Iteration  23: 61755.293 ops/s
Iteration  24: 65199.840 ops/s
Iteration  25: 63179.402 ops/s
Iteration  26: 62103.221 ops/s
Iteration  27: 60110.327 ops/s
Iteration  28: 64084.318 ops/s
Iteration  29: 59755.163 ops/s
Iteration  30: 65443.985 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_575._Benchmark.benchmark_Cluster_575":
  62031.652 ±(99.9%) 2969.849 ops/s [Average]
  (min, avg, max) = (50739.646, 62031.652, 70882.861), stdev = 4445.131
  CI (99.9%): [59061.803, 65001.501] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_575._Benchmark.benchmark_Cluster_575  thrpt   30  62031.652 ± 2969.849  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_576._Benchmark.benchmark_Cluster_576$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_576._Benchmark.benchmark_Cluster_576

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.736 ops/s
# Warmup Iteration   2: 4352.475 ops/s
# Warmup Iteration   3: 20340.016 ops/s
# Warmup Iteration   4: 27901.999 ops/s
# Warmup Iteration   5: 31624.992 ops/s
# Warmup Iteration   6: 28853.789 ops/s
# Warmup Iteration   7: 28353.524 ops/s
# Warmup Iteration   8: 34407.784 ops/s
# Warmup Iteration   9: 29404.082 ops/s
# Warmup Iteration  10: 28300.917 ops/s
# Warmup Iteration  11: 49435.739 ops/s
# Warmup Iteration  12: 90035.365 ops/s
# Warmup Iteration  13: 70099.462 ops/s
# Warmup Iteration  14: 81691.942 ops/s
# Warmup Iteration  15: 86373.511 ops/s
# Warmup Iteration  16: 83909.025 ops/s
# Warmup Iteration  17: 92949.595 ops/s
# Warmup Iteration  18: 91014.711 ops/s
# Warmup Iteration  19: 74626.255 ops/s
# Warmup Iteration  20: 87465.813 ops/s
# Warmup Iteration  21: 93309.265 ops/s
# Warmup Iteration  22: 81800.945 ops/s
# Warmup Iteration  23: 79970.366 ops/s
# Warmup Iteration  24: 77473.782 ops/s
# Warmup Iteration  25: 92709.445 ops/s
# Warmup Iteration  26: 86994.735 ops/s
# Warmup Iteration  27: 84083.364 ops/s
# Warmup Iteration  28: 84300.097 ops/s
# Warmup Iteration  29: 81915.255 ops/s
# Warmup Iteration  30: 79274.444 ops/s
Iteration   1: 90106.470 ops/s
Iteration   2: 89888.444 ops/s
Iteration   3: 92324.274 ops/s
Iteration   4: 88304.253 ops/s
Iteration   5: 71808.470 ops/s
Iteration   6: 87943.260 ops/s
Iteration   7: 86936.425 ops/s
Iteration   8: 88064.889 ops/s
Iteration   9: 90809.547 ops/s
Iteration  10: 82224.673 ops/s
Iteration  11: 76344.164 ops/s
Iteration  12: 79278.994 ops/s
Iteration  13: 89143.321 ops/s
Iteration  14: 82649.957 ops/s
Iteration  15: 89922.606 ops/s
Iteration  16: 87985.769 ops/s
Iteration  17: 81006.650 ops/s
Iteration  18: 88771.138 ops/s
Iteration  19: 91686.528 ops/s
Iteration  20: 91936.754 ops/s
Iteration  21: 92029.238 ops/s
Iteration  22: 83906.780 ops/s
Iteration  23: 88220.988 ops/s
Iteration  24: 84674.522 ops/s
Iteration  25: 84242.969 ops/s
Iteration  26: 86337.153 ops/s
Iteration  27: 81715.645 ops/s
Iteration  28: 89399.176 ops/s
Iteration  29: 95255.643 ops/s
Iteration  30: 89991.316 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_576._Benchmark.benchmark_Cluster_576":
  86763.667 ±(99.9%) 3439.682 ops/s [Average]
  (min, avg, max) = (71808.470, 86763.667, 95255.643), stdev = 5148.354
  CI (99.9%): [83323.985, 90203.349] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_576._Benchmark.benchmark_Cluster_576  thrpt   30  86763.667 ± 3439.682  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_577._Benchmark.benchmark_Cluster_577$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_577._Benchmark.benchmark_Cluster_577

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.778 ops/s
# Warmup Iteration   2: 2411.339 ops/s
# Warmup Iteration   3: 9967.092 ops/s
# Warmup Iteration   4: 25469.578 ops/s
# Warmup Iteration   5: 21466.386 ops/s
# Warmup Iteration   6: 27295.848 ops/s
# Warmup Iteration   7: 27683.543 ops/s
# Warmup Iteration   8: 42301.571 ops/s
# Warmup Iteration   9: 70640.833 ops/s
# Warmup Iteration  10: 95685.164 ops/s
# Warmup Iteration  11: 96928.243 ops/s
# Warmup Iteration  12: 97195.824 ops/s
# Warmup Iteration  13: 97280.107 ops/s
# Warmup Iteration  14: 97228.268 ops/s
# Warmup Iteration  15: 94871.770 ops/s
# Warmup Iteration  16: 101072.619 ops/s
# Warmup Iteration  17: 95448.104 ops/s
# Warmup Iteration  18: 99365.426 ops/s
# Warmup Iteration  19: 97164.913 ops/s
# Warmup Iteration  20: 98290.085 ops/s
# Warmup Iteration  21: 99097.917 ops/s
# Warmup Iteration  22: 94961.476 ops/s
# Warmup Iteration  23: 100291.538 ops/s
# Warmup Iteration  24: 100945.123 ops/s
# Warmup Iteration  25: 94464.030 ops/s
# Warmup Iteration  26: 101155.189 ops/s
# Warmup Iteration  27: 99617.137 ops/s
# Warmup Iteration  28: 97465.310 ops/s
# Warmup Iteration  29: 94769.417 ops/s
# Warmup Iteration  30: 98686.086 ops/s
Iteration   1: 98858.619 ops/s
Iteration   2: 92368.269 ops/s
Iteration   3: 93896.752 ops/s
Iteration   4: 99176.230 ops/s
Iteration   5: 97224.010 ops/s
Iteration   6: 93435.418 ops/s
Iteration   7: 101136.103 ops/s
Iteration   8: 94134.502 ops/s
Iteration   9: 98503.740 ops/s
Iteration  10: 97144.620 ops/s
Iteration  11: 99812.138 ops/s
Iteration  12: 95718.187 ops/s
Iteration  13: 99201.187 ops/s
Iteration  14: 97111.925 ops/s
Iteration  15: 94723.036 ops/s
Iteration  16: 95826.475 ops/s
Iteration  17: 101011.907 ops/s
Iteration  18: 76743.329 ops/s
Iteration  19: 99191.504 ops/s
Iteration  20: 96577.286 ops/s
Iteration  21: 98604.150 ops/s
Iteration  22: 98359.402 ops/s
Iteration  23: 99777.799 ops/s
Iteration  24: 95825.836 ops/s
Iteration  25: 101648.020 ops/s
Iteration  26: 94736.123 ops/s
Iteration  27: 99143.583 ops/s
Iteration  28: 98124.012 ops/s
Iteration  29: 95484.359 ops/s
Iteration  30: 100070.789 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_577._Benchmark.benchmark_Cluster_577":
  96785.644 ±(99.9%) 3009.611 ops/s [Average]
  (min, avg, max) = (76743.329, 96785.644, 101648.020), stdev = 4504.644
  CI (99.9%): [93776.033, 99795.255] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_577._Benchmark.benchmark_Cluster_577  thrpt   30  96785.644 ± 3009.611  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_578._Benchmark.benchmark_Cluster_578$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_578._Benchmark.benchmark_Cluster_578

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.888 ops/s
# Warmup Iteration   2: 9166.575 ops/s
# Warmup Iteration   3: 32905.838 ops/s
# Warmup Iteration   4: 43118.082 ops/s
# Warmup Iteration   5: 64395.847 ops/s
# Warmup Iteration   6: 122162.467 ops/s
# Warmup Iteration   7: 146996.072 ops/s
# Warmup Iteration   8: 140040.739 ops/s
# Warmup Iteration   9: 138989.245 ops/s
# Warmup Iteration  10: 141241.880 ops/s
# Warmup Iteration  11: 140118.656 ops/s
# Warmup Iteration  12: 137785.827 ops/s
# Warmup Iteration  13: 151880.574 ops/s
# Warmup Iteration  14: 144684.252 ops/s
# Warmup Iteration  15: 147177.234 ops/s
# Warmup Iteration  16: 150826.024 ops/s
# Warmup Iteration  17: 142351.482 ops/s
# Warmup Iteration  18: 150928.125 ops/s
# Warmup Iteration  19: 143697.270 ops/s
# Warmup Iteration  20: 148941.173 ops/s
# Warmup Iteration  21: 146300.265 ops/s
# Warmup Iteration  22: 146287.865 ops/s
# Warmup Iteration  23: 152819.713 ops/s
# Warmup Iteration  24: 146436.756 ops/s
# Warmup Iteration  25: 144314.124 ops/s
# Warmup Iteration  26: 152020.802 ops/s
# Warmup Iteration  27: 144066.930 ops/s
# Warmup Iteration  28: 147083.832 ops/s
# Warmup Iteration  29: 153588.178 ops/s
# Warmup Iteration  30: 144725.774 ops/s
Iteration   1: 147672.235 ops/s
Iteration   2: 149783.537 ops/s
Iteration   3: 147471.367 ops/s
Iteration   4: 149566.688 ops/s
Iteration   5: 153188.230 ops/s
Iteration   6: 142894.777 ops/s
Iteration   7: 153405.860 ops/s
Iteration   8: 143879.352 ops/s
Iteration   9: 150998.716 ops/s
Iteration  10: 151594.702 ops/s
Iteration  11: 146370.432 ops/s
Iteration  12: 149188.291 ops/s
Iteration  13: 152336.632 ops/s
Iteration  14: 144880.284 ops/s
Iteration  15: 150738.411 ops/s
Iteration  16: 151942.283 ops/s
Iteration  17: 141921.421 ops/s
Iteration  18: 147771.630 ops/s
Iteration  19: 148726.472 ops/s
Iteration  20: 149749.340 ops/s
Iteration  21: 144462.847 ops/s
Iteration  22: 148325.505 ops/s
Iteration  23: 151415.029 ops/s
Iteration  24: 143936.476 ops/s
Iteration  25: 154179.443 ops/s
Iteration  26: 145219.797 ops/s
Iteration  27: 144817.453 ops/s
Iteration  28: 154219.131 ops/s
Iteration  29: 149388.412 ops/s
Iteration  30: 145945.431 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_578._Benchmark.benchmark_Cluster_578":
  148533.006 ±(99.9%) 2342.493 ops/s [Average]
  (min, avg, max) = (141921.421, 148533.006, 154219.131), stdev = 3506.134
  CI (99.9%): [146190.513, 150875.499] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_578._Benchmark.benchmark_Cluster_578  thrpt   30  148533.006 ± 2342.493  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_579._Benchmark.benchmark_Cluster_579$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_579._Benchmark.benchmark_Cluster_579

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1060.659 ops/s
# Warmup Iteration   2: 18757.770 ops/s
# Warmup Iteration   3: 17957.098 ops/s
# Warmup Iteration   4: 26971.015 ops/s
# Warmup Iteration   5: 31905.982 ops/s
# Warmup Iteration   6: 33994.786 ops/s
# Warmup Iteration   7: 56615.405 ops/s
# Warmup Iteration   8: 63613.874 ops/s
# Warmup Iteration   9: 72585.026 ops/s
# Warmup Iteration  10: 68361.740 ops/s
# Warmup Iteration  11: 71976.888 ops/s
# Warmup Iteration  12: 71009.280 ops/s
# Warmup Iteration  13: 67608.177 ops/s
# Warmup Iteration  14: 70692.801 ops/s
# Warmup Iteration  15: 70294.066 ops/s
# Warmup Iteration  16: 72227.257 ops/s
# Warmup Iteration  17: 72185.225 ops/s
# Warmup Iteration  18: 71102.844 ops/s
# Warmup Iteration  19: 70547.957 ops/s
# Warmup Iteration  20: 70327.768 ops/s
# Warmup Iteration  21: 70938.522 ops/s
# Warmup Iteration  22: 71107.039 ops/s
# Warmup Iteration  23: 70119.271 ops/s
# Warmup Iteration  24: 68088.506 ops/s
# Warmup Iteration  25: 72993.485 ops/s
# Warmup Iteration  26: 66894.548 ops/s
# Warmup Iteration  27: 72074.508 ops/s
# Warmup Iteration  28: 72954.418 ops/s
# Warmup Iteration  29: 66079.988 ops/s
# Warmup Iteration  30: 73419.673 ops/s
Iteration   1: 69287.811 ops/s
Iteration   2: 72387.898 ops/s
Iteration   3: 70033.244 ops/s
Iteration   4: 73019.327 ops/s
Iteration   5: 70875.525 ops/s
Iteration   6: 68946.830 ops/s
Iteration   7: 73046.098 ops/s
Iteration   8: 69703.243 ops/s
Iteration   9: 70783.591 ops/s
Iteration  10: 70297.651 ops/s
Iteration  11: 73830.150 ops/s
Iteration  12: 58025.661 ops/s
Iteration  13: 72509.335 ops/s
Iteration  14: 69445.799 ops/s
Iteration  15: 70493.951 ops/s
Iteration  16: 69755.716 ops/s
Iteration  17: 69470.652 ops/s
Iteration  18: 71585.924 ops/s
Iteration  19: 74763.841 ops/s
Iteration  20: 67710.435 ops/s
Iteration  21: 73496.372 ops/s
Iteration  22: 69764.903 ops/s
Iteration  23: 73585.401 ops/s
Iteration  24: 68226.660 ops/s
Iteration  25: 69512.426 ops/s
Iteration  26: 71251.809 ops/s
Iteration  27: 69640.341 ops/s
Iteration  28: 68783.476 ops/s
Iteration  29: 69885.344 ops/s
Iteration  30: 73508.115 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_579._Benchmark.benchmark_Cluster_579":
  70454.251 ±(99.9%) 2003.530 ops/s [Average]
  (min, avg, max) = (58025.661, 70454.251, 74763.841), stdev = 2998.789
  CI (99.9%): [68450.721, 72457.780] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_579._Benchmark.benchmark_Cluster_579  thrpt   30  70454.251 ± 2003.530  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_58._Benchmark.benchmark_Cluster_58$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_58._Benchmark.benchmark_Cluster_58

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15915.797 ops/s
# Warmup Iteration   2: 52158.358 ops/s
# Warmup Iteration   3: 100015.581 ops/s
# Warmup Iteration   4: 142559.569 ops/s
# Warmup Iteration   5: 162899.401 ops/s
# Warmup Iteration   6: 152096.227 ops/s
# Warmup Iteration   7: 150872.005 ops/s
# Warmup Iteration   8: 165629.380 ops/s
# Warmup Iteration   9: 155884.584 ops/s
# Warmup Iteration  10: 153218.535 ops/s
# Warmup Iteration  11: 151748.398 ops/s
# Warmup Iteration  12: 160945.854 ops/s
# Warmup Iteration  13: 158694.286 ops/s
# Warmup Iteration  14: 154645.285 ops/s
# Warmup Iteration  15: 155403.338 ops/s
# Warmup Iteration  16: 158682.474 ops/s
# Warmup Iteration  17: 163950.321 ops/s
# Warmup Iteration  18: 169863.381 ops/s
# Warmup Iteration  19: 169222.956 ops/s
# Warmup Iteration  20: 162033.190 ops/s
# Warmup Iteration  21: 177170.064 ops/s
# Warmup Iteration  22: 165984.945 ops/s
# Warmup Iteration  23: 159471.757 ops/s
# Warmup Iteration  24: 172524.119 ops/s
# Warmup Iteration  25: 174161.675 ops/s
# Warmup Iteration  26: 169343.232 ops/s
# Warmup Iteration  27: 171798.823 ops/s
# Warmup Iteration  28: 167440.640 ops/s
# Warmup Iteration  29: 169415.866 ops/s
# Warmup Iteration  30: 170836.366 ops/s
Iteration   1: 166263.900 ops/s
Iteration   2: 170902.106 ops/s
Iteration   3: 172815.637 ops/s
Iteration   4: 167677.003 ops/s
Iteration   5: 167117.239 ops/s
Iteration   6: 169106.671 ops/s
Iteration   7: 173932.578 ops/s
Iteration   8: 166069.522 ops/s
Iteration   9: 176161.275 ops/s
Iteration  10: 164376.155 ops/s
Iteration  11: 171407.996 ops/s
Iteration  12: 168854.906 ops/s
Iteration  13: 168037.804 ops/s
Iteration  14: 167400.509 ops/s
Iteration  15: 164294.694 ops/s
Iteration  16: 172746.869 ops/s
Iteration  17: 166359.370 ops/s
Iteration  18: 164209.281 ops/s
Iteration  19: 177157.691 ops/s
Iteration  20: 169242.742 ops/s
Iteration  21: 169247.549 ops/s
Iteration  22: 169574.925 ops/s
Iteration  23: 172527.493 ops/s
Iteration  24: 171860.310 ops/s
Iteration  25: 166877.842 ops/s
Iteration  26: 176032.244 ops/s
Iteration  27: 164385.821 ops/s
Iteration  28: 168909.585 ops/s
Iteration  29: 166385.463 ops/s
Iteration  30: 171021.185 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_58._Benchmark.benchmark_Cluster_58":
  169365.212 ±(99.9%) 2424.062 ops/s [Average]
  (min, avg, max) = (164209.281, 169365.212, 177157.691), stdev = 3628.222
  CI (99.9%): [166941.150, 171789.274] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_58._Benchmark.benchmark_Cluster_58  thrpt   30  169365.212 ± 2424.062  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_580._Benchmark.benchmark_Cluster_580$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_580._Benchmark.benchmark_Cluster_580

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1048.679 ops/s
# Warmup Iteration   2: 4001.733 ops/s
# Warmup Iteration   3: 12899.679 ops/s
# Warmup Iteration   4: 19892.226 ops/s
# Warmup Iteration   5: 22758.601 ops/s
# Warmup Iteration   6: 21879.913 ops/s
# Warmup Iteration   7: 14892.367 ops/s
# Warmup Iteration   8: 36430.407 ops/s
# Warmup Iteration   9: 36712.525 ops/s
# Warmup Iteration  10: 67676.348 ops/s
# Warmup Iteration  11: 69953.700 ops/s
# Warmup Iteration  12: 72643.186 ops/s
# Warmup Iteration  13: 69343.050 ops/s
# Warmup Iteration  14: 70518.407 ops/s
# Warmup Iteration  15: 69580.443 ops/s
# Warmup Iteration  16: 70824.751 ops/s
# Warmup Iteration  17: 70696.164 ops/s
# Warmup Iteration  18: 70484.787 ops/s
# Warmup Iteration  19: 71569.948 ops/s
# Warmup Iteration  20: 69316.329 ops/s
# Warmup Iteration  21: 70778.596 ops/s
# Warmup Iteration  22: 71783.468 ops/s
# Warmup Iteration  23: 69485.796 ops/s
# Warmup Iteration  24: 70217.333 ops/s
# Warmup Iteration  25: 72505.986 ops/s
# Warmup Iteration  26: 69226.545 ops/s
# Warmup Iteration  27: 71507.502 ops/s
# Warmup Iteration  28: 69277.752 ops/s
# Warmup Iteration  29: 70779.149 ops/s
# Warmup Iteration  30: 71688.954 ops/s
Iteration   1: 69186.120 ops/s
Iteration   2: 70928.986 ops/s
Iteration   3: 70268.324 ops/s
Iteration   4: 70184.652 ops/s
Iteration   5: 71582.274 ops/s
Iteration   6: 59814.105 ops/s
Iteration   7: 66729.689 ops/s
Iteration   8: 70870.033 ops/s
Iteration   9: 67932.305 ops/s
Iteration  10: 70506.722 ops/s
Iteration  11: 69479.494 ops/s
Iteration  12: 72140.253 ops/s
Iteration  13: 68602.877 ops/s
Iteration  14: 70003.476 ops/s
Iteration  15: 72612.943 ops/s
Iteration  16: 71125.847 ops/s
Iteration  17: 70034.596 ops/s
Iteration  18: 73036.966 ops/s
Iteration  19: 68445.061 ops/s
Iteration  20: 73792.195 ops/s
Iteration  21: 69081.402 ops/s
Iteration  22: 69661.607 ops/s
Iteration  23: 70624.055 ops/s
Iteration  24: 70787.853 ops/s
Iteration  25: 68466.540 ops/s
Iteration  26: 68611.014 ops/s
Iteration  27: 70196.137 ops/s
Iteration  28: 69860.370 ops/s
Iteration  29: 71550.316 ops/s
Iteration  30: 69323.563 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_580._Benchmark.benchmark_Cluster_580":
  69847.993 ±(99.9%) 1633.091 ops/s [Average]
  (min, avg, max) = (59814.105, 69847.993, 73792.195), stdev = 2444.333
  CI (99.9%): [68214.902, 71481.083] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_580._Benchmark.benchmark_Cluster_580  thrpt   30  69847.993 ± 1633.091  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_581._Benchmark.benchmark_Cluster_581$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_581._Benchmark.benchmark_Cluster_581

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2040.163 ops/s
# Warmup Iteration   2: 17561.554 ops/s
# Warmup Iteration   3: 34857.571 ops/s
# Warmup Iteration   4: 27966.718 ops/s
# Warmup Iteration   5: 45365.415 ops/s
# Warmup Iteration   6: 41226.647 ops/s
# Warmup Iteration   7: 96236.729 ops/s
# Warmup Iteration   8: 91728.378 ops/s
# Warmup Iteration   9: 92753.460 ops/s
# Warmup Iteration  10: 96131.803 ops/s
# Warmup Iteration  11: 89475.052 ops/s
# Warmup Iteration  12: 97435.145 ops/s
# Warmup Iteration  13: 92898.214 ops/s
# Warmup Iteration  14: 94397.855 ops/s
# Warmup Iteration  15: 98459.903 ops/s
# Warmup Iteration  16: 93944.112 ops/s
# Warmup Iteration  17: 98110.146 ops/s
# Warmup Iteration  18: 97287.532 ops/s
# Warmup Iteration  19: 97694.459 ops/s
# Warmup Iteration  20: 94920.081 ops/s
# Warmup Iteration  21: 94524.963 ops/s
# Warmup Iteration  22: 95617.378 ops/s
# Warmup Iteration  23: 102048.715 ops/s
# Warmup Iteration  24: 92626.849 ops/s
# Warmup Iteration  25: 100548.846 ops/s
# Warmup Iteration  26: 98140.955 ops/s
# Warmup Iteration  27: 95418.262 ops/s
# Warmup Iteration  28: 99016.567 ops/s
# Warmup Iteration  29: 95075.372 ops/s
# Warmup Iteration  30: 101938.471 ops/s
Iteration   1: 93246.363 ops/s
Iteration   2: 95459.332 ops/s
Iteration   3: 97811.612 ops/s
Iteration   4: 97694.600 ops/s
Iteration   5: 100788.938 ops/s
Iteration   6: 94812.861 ops/s
Iteration   7: 103396.481 ops/s
Iteration   8: 94692.354 ops/s
Iteration   9: 100415.726 ops/s
Iteration  10: 101217.306 ops/s
Iteration  11: 93561.110 ops/s
Iteration  12: 97856.913 ops/s
Iteration  13: 96535.581 ops/s
Iteration  14: 98049.419 ops/s
Iteration  15: 101277.138 ops/s
Iteration  16: 96814.031 ops/s
Iteration  17: 100311.387 ops/s
Iteration  18: 95176.648 ops/s
Iteration  19: 99558.147 ops/s
Iteration  20: 95133.249 ops/s
Iteration  21: 100679.685 ops/s
Iteration  22: 99880.056 ops/s
Iteration  23: 98101.441 ops/s
Iteration  24: 90972.076 ops/s
Iteration  25: 101023.565 ops/s
Iteration  26: 97641.468 ops/s
Iteration  27: 102385.344 ops/s
Iteration  28: 99771.078 ops/s
Iteration  29: 96323.020 ops/s
Iteration  30: 100708.339 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_581._Benchmark.benchmark_Cluster_581":
  98043.176 ±(99.9%) 2012.733 ops/s [Average]
  (min, avg, max) = (90972.076, 98043.176, 103396.481), stdev = 3012.563
  CI (99.9%): [96030.443, 100055.908] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_581._Benchmark.benchmark_Cluster_581  thrpt   30  98043.176 ± 2012.733  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_582._Benchmark.benchmark_Cluster_582$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_582._Benchmark.benchmark_Cluster_582

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13453.849 ops/s
# Warmup Iteration   2: 39175.819 ops/s
# Warmup Iteration   3: 45072.896 ops/s
# Warmup Iteration   4: 44740.648 ops/s
# Warmup Iteration   5: 86946.862 ops/s
# Warmup Iteration   6: 113735.859 ops/s
# Warmup Iteration   7: 129813.664 ops/s
# Warmup Iteration   8: 120788.812 ops/s
# Warmup Iteration   9: 124692.150 ops/s
# Warmup Iteration  10: 123475.355 ops/s
# Warmup Iteration  11: 120500.797 ops/s
# Warmup Iteration  12: 124421.658 ops/s
# Warmup Iteration  13: 123047.455 ops/s
# Warmup Iteration  14: 123379.768 ops/s
# Warmup Iteration  15: 129057.942 ops/s
# Warmup Iteration  16: 126040.920 ops/s
# Warmup Iteration  17: 126839.852 ops/s
# Warmup Iteration  18: 130396.063 ops/s
# Warmup Iteration  19: 127939.412 ops/s
# Warmup Iteration  20: 123416.408 ops/s
# Warmup Iteration  21: 132335.502 ops/s
# Warmup Iteration  22: 123165.370 ops/s
# Warmup Iteration  23: 130309.915 ops/s
# Warmup Iteration  24: 127712.900 ops/s
# Warmup Iteration  25: 133658.253 ops/s
# Warmup Iteration  26: 132164.183 ops/s
# Warmup Iteration  27: 126531.046 ops/s
# Warmup Iteration  28: 130699.790 ops/s
# Warmup Iteration  29: 125413.404 ops/s
# Warmup Iteration  30: 104813.449 ops/s
Iteration   1: 129880.136 ops/s
Iteration   2: 122266.054 ops/s
Iteration   3: 122265.977 ops/s
Iteration   4: 128520.740 ops/s
Iteration   5: 125904.365 ops/s
Iteration   6: 131138.567 ops/s
Iteration   7: 126924.182 ops/s
Iteration   8: 127626.278 ops/s
Iteration   9: 129901.672 ops/s
Iteration  10: 126809.263 ops/s
Iteration  11: 127510.804 ops/s
Iteration  12: 131010.248 ops/s
Iteration  13: 131799.790 ops/s
Iteration  14: 128910.167 ops/s
Iteration  15: 125825.858 ops/s
Iteration  16: 124127.111 ops/s
Iteration  17: 133776.496 ops/s
Iteration  18: 130320.780 ops/s
Iteration  19: 123376.634 ops/s
Iteration  20: 133144.437 ops/s
Iteration  21: 126899.801 ops/s
Iteration  22: 132611.179 ops/s
Iteration  23: 129436.273 ops/s
Iteration  24: 128484.308 ops/s
Iteration  25: 128984.160 ops/s
Iteration  26: 127640.560 ops/s
Iteration  27: 126794.190 ops/s
Iteration  28: 130591.887 ops/s
Iteration  29: 124370.099 ops/s
Iteration  30: 128688.922 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_582._Benchmark.benchmark_Cluster_582":
  128184.698 ±(99.9%) 2029.876 ops/s [Average]
  (min, avg, max) = (122265.977, 128184.698, 133776.496), stdev = 3038.223
  CI (99.9%): [126154.822, 130214.574] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_582._Benchmark.benchmark_Cluster_582  thrpt   30  128184.698 ± 2029.876  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_583._Benchmark.benchmark_Cluster_583$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_583._Benchmark.benchmark_Cluster_583

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14040.785 ops/s
# Warmup Iteration   2: 23693.351 ops/s
# Warmup Iteration   3: 21864.441 ops/s
# Warmup Iteration   4: 25010.835 ops/s
# Warmup Iteration   5: 20674.429 ops/s
# Warmup Iteration   6: 19177.047 ops/s
# Warmup Iteration   7: 19391.983 ops/s
# Warmup Iteration   8: 19335.233 ops/s
# Warmup Iteration   9: 19610.370 ops/s
# Warmup Iteration  10: 19551.974 ops/s
# Warmup Iteration  11: 20163.973 ops/s
# Warmup Iteration  12: 21559.343 ops/s
# Warmup Iteration  13: 20525.013 ops/s
# Warmup Iteration  14: 19910.739 ops/s
# Warmup Iteration  15: 19508.578 ops/s
# Warmup Iteration  16: 20800.632 ops/s
# Warmup Iteration  17: 19564.429 ops/s
# Warmup Iteration  18: 20656.118 ops/s
# Warmup Iteration  19: 20108.500 ops/s
# Warmup Iteration  20: 20787.357 ops/s
# Warmup Iteration  21: 20239.945 ops/s
# Warmup Iteration  22: 19838.420 ops/s
# Warmup Iteration  23: 20765.676 ops/s
# Warmup Iteration  24: 19577.090 ops/s
# Warmup Iteration  25: 21299.532 ops/s
# Warmup Iteration  26: 18833.593 ops/s
# Warmup Iteration  27: 19869.420 ops/s
# Warmup Iteration  28: 19332.134 ops/s
# Warmup Iteration  29: 19607.280 ops/s
# Warmup Iteration  30: 19587.213 ops/s
Iteration   1: 20400.679 ops/s
Iteration   2: 19851.756 ops/s
Iteration   3: 18914.454 ops/s
Iteration   4: 20708.393 ops/s
Iteration   5: 19966.240 ops/s
Iteration   6: 20164.827 ops/s
Iteration   7: 19926.352 ops/s
Iteration   8: 19665.338 ops/s
Iteration   9: 20366.157 ops/s
Iteration  10: 20010.416 ops/s
Iteration  11: 19806.114 ops/s
Iteration  12: 19978.492 ops/s
Iteration  13: 20145.886 ops/s
Iteration  14: 19604.081 ops/s
Iteration  15: 19760.110 ops/s
Iteration  16: 19664.270 ops/s
Iteration  17: 20436.430 ops/s
Iteration  18: 19896.923 ops/s
Iteration  19: 20341.473 ops/s
Iteration  20: 19535.471 ops/s
Iteration  21: 20653.958 ops/s
Iteration  22: 19771.135 ops/s
Iteration  23: 19469.465 ops/s
Iteration  24: 20268.614 ops/s
Iteration  25: 20372.857 ops/s
Iteration  26: 19450.771 ops/s
Iteration  27: 20637.546 ops/s
Iteration  28: 19998.134 ops/s
Iteration  29: 19983.517 ops/s
Iteration  30: 19753.686 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_583._Benchmark.benchmark_Cluster_583":
  19983.452 ±(99.9%) 271.701 ops/s [Average]
  (min, avg, max) = (18914.454, 19983.452, 20708.393), stdev = 406.670
  CI (99.9%): [19711.750, 20255.153] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_583._Benchmark.benchmark_Cluster_583  thrpt   30  19983.452 ± 271.701  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_584._Benchmark.benchmark_Cluster_584$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_584._Benchmark.benchmark_Cluster_584

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3294.128 ops/s
# Warmup Iteration   2: 17257.144 ops/s
# Warmup Iteration   3: 31572.792 ops/s
# Warmup Iteration   4: 47048.611 ops/s
# Warmup Iteration   5: 51688.533 ops/s
# Warmup Iteration   6: 53089.042 ops/s
# Warmup Iteration   7: 57102.913 ops/s
# Warmup Iteration   8: 55964.200 ops/s
# Warmup Iteration   9: 52236.335 ops/s
# Warmup Iteration  10: 56106.031 ops/s
# Warmup Iteration  11: 52572.624 ops/s
# Warmup Iteration  12: 56071.938 ops/s
# Warmup Iteration  13: 55256.527 ops/s
# Warmup Iteration  14: 52584.923 ops/s
# Warmup Iteration  15: 56957.474 ops/s
# Warmup Iteration  16: 56788.211 ops/s
# Warmup Iteration  17: 56885.295 ops/s
# Warmup Iteration  18: 51600.765 ops/s
# Warmup Iteration  19: 53671.206 ops/s
# Warmup Iteration  20: 54200.706 ops/s
# Warmup Iteration  21: 52331.662 ops/s
# Warmup Iteration  22: 51838.107 ops/s
# Warmup Iteration  23: 54612.024 ops/s
# Warmup Iteration  24: 52824.352 ops/s
# Warmup Iteration  25: 52939.165 ops/s
# Warmup Iteration  26: 57032.182 ops/s
# Warmup Iteration  27: 51839.226 ops/s
# Warmup Iteration  28: 54065.242 ops/s
# Warmup Iteration  29: 53320.637 ops/s
# Warmup Iteration  30: 54840.085 ops/s
Iteration   1: 53469.789 ops/s
Iteration   2: 54502.051 ops/s
Iteration   3: 56219.802 ops/s
Iteration   4: 55783.504 ops/s
Iteration   5: 49505.796 ops/s
Iteration   6: 57939.728 ops/s
Iteration   7: 55123.364 ops/s
Iteration   8: 55711.576 ops/s
Iteration   9: 54249.437 ops/s
Iteration  10: 52993.083 ops/s
Iteration  11: 56063.979 ops/s
Iteration  12: 55479.461 ops/s
Iteration  13: 50040.131 ops/s
Iteration  14: 54935.799 ops/s
Iteration  15: 56176.230 ops/s
Iteration  16: 56799.268 ops/s
Iteration  17: 56938.797 ops/s
Iteration  18: 53986.221 ops/s
Iteration  19: 53253.589 ops/s
Iteration  20: 52493.547 ops/s
Iteration  21: 55828.188 ops/s
Iteration  22: 55171.949 ops/s
Iteration  23: 53510.860 ops/s
Iteration  24: 56910.912 ops/s
Iteration  25: 57482.795 ops/s
Iteration  26: 54296.694 ops/s
Iteration  27: 56287.352 ops/s
Iteration  28: 54880.516 ops/s
Iteration  29: 53653.675 ops/s
Iteration  30: 54054.043 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_584._Benchmark.benchmark_Cluster_584":
  54791.404 ±(99.9%) 1299.170 ops/s [Average]
  (min, avg, max) = (49505.796, 54791.404, 57939.728), stdev = 1944.537
  CI (99.9%): [53492.234, 56090.575] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_584._Benchmark.benchmark_Cluster_584  thrpt   30  54791.404 ± 1299.170  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_585._Benchmark.benchmark_Cluster_585$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_585._Benchmark.benchmark_Cluster_585

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2629.324 ops/s
# Warmup Iteration   2: 13783.590 ops/s
# Warmup Iteration   3: 18456.875 ops/s
# Warmup Iteration   4: 23574.812 ops/s
# Warmup Iteration   5: 21114.339 ops/s
# Warmup Iteration   6: 24070.536 ops/s
# Warmup Iteration   7: 27845.177 ops/s
# Warmup Iteration   8: 20833.654 ops/s
# Warmup Iteration   9: 27992.809 ops/s
# Warmup Iteration  10: 28417.008 ops/s
# Warmup Iteration  11: 25911.366 ops/s
# Warmup Iteration  12: 27285.660 ops/s
# Warmup Iteration  13: 50682.868 ops/s
# Warmup Iteration  14: 52082.652 ops/s
# Warmup Iteration  15: 48876.463 ops/s
# Warmup Iteration  16: 51988.032 ops/s
# Warmup Iteration  17: 53904.857 ops/s
# Warmup Iteration  18: 53616.946 ops/s
# Warmup Iteration  19: 47807.344 ops/s
# Warmup Iteration  20: 51564.749 ops/s
# Warmup Iteration  21: 54225.750 ops/s
# Warmup Iteration  22: 50507.963 ops/s
# Warmup Iteration  23: 47623.266 ops/s
# Warmup Iteration  24: 54535.901 ops/s
# Warmup Iteration  25: 50490.931 ops/s
# Warmup Iteration  26: 48230.518 ops/s
# Warmup Iteration  27: 53236.261 ops/s
# Warmup Iteration  28: 47221.582 ops/s
# Warmup Iteration  29: 44288.718 ops/s
# Warmup Iteration  30: 51539.795 ops/s
Iteration   1: 52381.477 ops/s
Iteration   2: 50529.066 ops/s
Iteration   3: 49272.459 ops/s
Iteration   4: 51900.362 ops/s
Iteration   5: 55325.857 ops/s
Iteration   6: 54386.452 ops/s
Iteration   7: 53125.722 ops/s
Iteration   8: 51468.760 ops/s
Iteration   9: 53851.327 ops/s
Iteration  10: 55244.916 ops/s
Iteration  11: 53524.229 ops/s
Iteration  12: 51045.849 ops/s
Iteration  13: 51180.475 ops/s
Iteration  14: 51496.375 ops/s
Iteration  15: 54105.577 ops/s
Iteration  16: 50587.005 ops/s
Iteration  17: 54760.637 ops/s
Iteration  18: 57184.213 ops/s
Iteration  19: 52789.514 ops/s
Iteration  20: 51159.898 ops/s
Iteration  21: 50973.396 ops/s
Iteration  22: 57857.165 ops/s
Iteration  23: 53671.535 ops/s
Iteration  24: 57352.783 ops/s
Iteration  25: 52990.590 ops/s
Iteration  26: 48575.128 ops/s
Iteration  27: 55783.961 ops/s
Iteration  28: 54399.731 ops/s
Iteration  29: 49093.299 ops/s
Iteration  30: 53208.422 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_585._Benchmark.benchmark_Cluster_585":
  52974.206 ±(99.9%) 1615.084 ops/s [Average]
  (min, avg, max) = (48575.128, 52974.206, 57857.165), stdev = 2417.381
  CI (99.9%): [51359.122, 54589.290] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_585._Benchmark.benchmark_Cluster_585  thrpt   30  52974.206 ± 1615.084  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_586._Benchmark.benchmark_Cluster_586$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_586._Benchmark.benchmark_Cluster_586

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16188.394 ops/s
# Warmup Iteration   2: 35823.052 ops/s
# Warmup Iteration   3: 112706.472 ops/s
# Warmup Iteration   4: 138502.489 ops/s
# Warmup Iteration   5: 149381.637 ops/s
# Warmup Iteration   6: 151863.061 ops/s
# Warmup Iteration   7: 145093.001 ops/s
# Warmup Iteration   8: 151151.981 ops/s
# Warmup Iteration   9: 145204.941 ops/s
# Warmup Iteration  10: 145905.953 ops/s
# Warmup Iteration  11: 148953.866 ops/s
# Warmup Iteration  12: 155020.482 ops/s
# Warmup Iteration  13: 144378.495 ops/s
# Warmup Iteration  14: 152298.130 ops/s
# Warmup Iteration  15: 151710.101 ops/s
# Warmup Iteration  16: 136155.261 ops/s
# Warmup Iteration  17: 128986.066 ops/s
# Warmup Iteration  18: 161679.555 ops/s
# Warmup Iteration  19: 153755.266 ops/s
# Warmup Iteration  20: 162708.429 ops/s
# Warmup Iteration  21: 151434.479 ops/s
# Warmup Iteration  22: 161549.208 ops/s
# Warmup Iteration  23: 160917.361 ops/s
# Warmup Iteration  24: 154504.038 ops/s
# Warmup Iteration  25: 160996.983 ops/s
# Warmup Iteration  26: 154535.239 ops/s
# Warmup Iteration  27: 156440.015 ops/s
# Warmup Iteration  28: 156349.088 ops/s
# Warmup Iteration  29: 154971.920 ops/s
# Warmup Iteration  30: 157807.217 ops/s
Iteration   1: 157721.662 ops/s
Iteration   2: 159450.148 ops/s
Iteration   3: 145823.876 ops/s
Iteration   4: 161216.043 ops/s
Iteration   5: 154362.898 ops/s
Iteration   6: 157637.704 ops/s
Iteration   7: 159007.785 ops/s
Iteration   8: 158430.222 ops/s
Iteration   9: 164261.312 ops/s
Iteration  10: 154592.423 ops/s
Iteration  11: 161860.344 ops/s
Iteration  12: 155170.423 ops/s
Iteration  13: 156295.604 ops/s
Iteration  14: 161257.340 ops/s
Iteration  15: 155742.425 ops/s
Iteration  16: 151777.795 ops/s
Iteration  17: 160341.804 ops/s
Iteration  18: 149931.021 ops/s
Iteration  19: 160528.645 ops/s
Iteration  20: 153205.573 ops/s
Iteration  21: 164149.965 ops/s
Iteration  22: 158505.737 ops/s
Iteration  23: 154526.233 ops/s
Iteration  24: 162280.024 ops/s
Iteration  25: 156247.267 ops/s
Iteration  26: 157959.515 ops/s
Iteration  27: 155347.052 ops/s
Iteration  28: 155304.902 ops/s
Iteration  29: 164960.646 ops/s
Iteration  30: 152246.102 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_586._Benchmark.benchmark_Cluster_586":
  157338.083 ±(99.9%) 2937.549 ops/s [Average]
  (min, avg, max) = (145823.876, 157338.083, 164960.646), stdev = 4396.785
  CI (99.9%): [154400.534, 160275.632] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_586._Benchmark.benchmark_Cluster_586  thrpt   30  157338.083 ± 2937.549  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_587._Benchmark.benchmark_Cluster_587$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_587._Benchmark.benchmark_Cluster_587

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 23404.726 ops/s
# Warmup Iteration   2: 86298.940 ops/s
# Warmup Iteration   3: 102572.134 ops/s
# Warmup Iteration   4: 119844.933 ops/s
# Warmup Iteration   5: 119082.207 ops/s
# Warmup Iteration   6: 121497.943 ops/s
# Warmup Iteration   7: 114182.035 ops/s
# Warmup Iteration   8: 126769.632 ops/s
# Warmup Iteration   9: 117385.892 ops/s
# Warmup Iteration  10: 123424.992 ops/s
# Warmup Iteration  11: 120546.716 ops/s
# Warmup Iteration  12: 129452.959 ops/s
# Warmup Iteration  13: 121623.601 ops/s
# Warmup Iteration  14: 128401.712 ops/s
# Warmup Iteration  15: 123082.898 ops/s
# Warmup Iteration  16: 125769.872 ops/s
# Warmup Iteration  17: 130889.881 ops/s
# Warmup Iteration  18: 130146.277 ops/s
# Warmup Iteration  19: 133324.074 ops/s
# Warmup Iteration  20: 126448.840 ops/s
# Warmup Iteration  21: 134544.318 ops/s
# Warmup Iteration  22: 129174.452 ops/s
# Warmup Iteration  23: 129425.268 ops/s
# Warmup Iteration  24: 128747.511 ops/s
# Warmup Iteration  25: 133763.688 ops/s
# Warmup Iteration  26: 126776.819 ops/s
# Warmup Iteration  27: 135585.692 ops/s
# Warmup Iteration  28: 133108.778 ops/s
# Warmup Iteration  29: 128123.174 ops/s
# Warmup Iteration  30: 133290.405 ops/s
Iteration   1: 128953.954 ops/s
Iteration   2: 131688.285 ops/s
Iteration   3: 126709.071 ops/s
Iteration   4: 131030.709 ops/s
Iteration   5: 132273.298 ops/s
Iteration   6: 124088.733 ops/s
Iteration   7: 130377.357 ops/s
Iteration   8: 132220.971 ops/s
Iteration   9: 125976.519 ops/s
Iteration  10: 133256.386 ops/s
Iteration  11: 128630.856 ops/s
Iteration  12: 130053.117 ops/s
Iteration  13: 133352.244 ops/s
Iteration  14: 129063.943 ops/s
Iteration  15: 125475.228 ops/s
Iteration  16: 125625.579 ops/s
Iteration  17: 132136.738 ops/s
Iteration  18: 126219.468 ops/s
Iteration  19: 131227.919 ops/s
Iteration  20: 131923.317 ops/s
Iteration  21: 128433.906 ops/s
Iteration  22: 131729.307 ops/s
Iteration  23: 124845.311 ops/s
Iteration  24: 131241.935 ops/s
Iteration  25: 127117.374 ops/s
Iteration  26: 129421.472 ops/s
Iteration  27: 133290.647 ops/s
Iteration  28: 126492.951 ops/s
Iteration  29: 134028.325 ops/s
Iteration  30: 125541.416 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_587._Benchmark.benchmark_Cluster_587":
  129414.211 ±(99.9%) 1987.454 ops/s [Average]
  (min, avg, max) = (124088.733, 129414.211, 134028.325), stdev = 2974.728
  CI (99.9%): [127426.757, 131401.665] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_587._Benchmark.benchmark_Cluster_587  thrpt   30  129414.211 ± 1987.454  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_588._Benchmark.benchmark_Cluster_588$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_588._Benchmark.benchmark_Cluster_588

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.745 ops/s
# Warmup Iteration   2: 10312.519 ops/s
# Warmup Iteration   3: 33955.337 ops/s
# Warmup Iteration   4: 41456.385 ops/s
# Warmup Iteration   5: 41091.993 ops/s
# Warmup Iteration   6: 44868.636 ops/s
# Warmup Iteration   7: 108483.561 ops/s
# Warmup Iteration   8: 123923.382 ops/s
# Warmup Iteration   9: 132483.609 ops/s
# Warmup Iteration  10: 124058.049 ops/s
# Warmup Iteration  11: 105210.358 ops/s
# Warmup Iteration  12: 131754.716 ops/s
# Warmup Iteration  13: 131595.676 ops/s
# Warmup Iteration  14: 127878.601 ops/s
# Warmup Iteration  15: 129577.696 ops/s
# Warmup Iteration  16: 131072.705 ops/s
# Warmup Iteration  17: 136477.975 ops/s
# Warmup Iteration  18: 128466.932 ops/s
# Warmup Iteration  19: 130825.148 ops/s
# Warmup Iteration  20: 124490.233 ops/s
# Warmup Iteration  21: 134956.074 ops/s
# Warmup Iteration  22: 136257.131 ops/s
# Warmup Iteration  23: 129525.845 ops/s
# Warmup Iteration  24: 137543.008 ops/s
# Warmup Iteration  25: 121567.793 ops/s
# Warmup Iteration  26: 125946.412 ops/s
# Warmup Iteration  27: 137466.999 ops/s
# Warmup Iteration  28: 130233.665 ops/s
# Warmup Iteration  29: 137609.688 ops/s
# Warmup Iteration  30: 131619.703 ops/s
Iteration   1: 136163.268 ops/s
Iteration   2: 134224.740 ops/s
Iteration   3: 131251.361 ops/s
Iteration   4: 138636.890 ops/s
Iteration   5: 129964.393 ops/s
Iteration   6: 132976.446 ops/s
Iteration   7: 130300.412 ops/s
Iteration   8: 130784.601 ops/s
Iteration   9: 136833.260 ops/s
Iteration  10: 130434.385 ops/s
Iteration  11: 136130.499 ops/s
Iteration  12: 134882.166 ops/s
Iteration  13: 130096.743 ops/s
Iteration  14: 135656.982 ops/s
Iteration  15: 130219.646 ops/s
Iteration  16: 131782.062 ops/s
Iteration  17: 134191.273 ops/s
Iteration  18: 130957.623 ops/s
Iteration  19: 135722.592 ops/s
Iteration  20: 132248.551 ops/s
Iteration  21: 128809.502 ops/s
Iteration  22: 135546.096 ops/s
Iteration  23: 131092.833 ops/s
Iteration  24: 135986.656 ops/s
Iteration  25: 130230.719 ops/s
Iteration  26: 135369.275 ops/s
Iteration  27: 135522.828 ops/s
Iteration  28: 127702.805 ops/s
Iteration  29: 138669.406 ops/s
Iteration  30: 138168.005 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_588._Benchmark.benchmark_Cluster_588":
  133351.867 ±(99.9%) 2076.316 ops/s [Average]
  (min, avg, max) = (127702.805, 133351.867, 138669.406), stdev = 3107.733
  CI (99.9%): [131275.551, 135428.184] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_588._Benchmark.benchmark_Cluster_588  thrpt   30  133351.867 ± 2076.316  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_589._Benchmark.benchmark_Cluster_589$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_589._Benchmark.benchmark_Cluster_589

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11450.804 ops/s
# Warmup Iteration   2: 66147.281 ops/s
# Warmup Iteration   3: 82378.945 ops/s
# Warmup Iteration   4: 99895.311 ops/s
# Warmup Iteration   5: 97903.682 ops/s
# Warmup Iteration   6: 96296.436 ops/s
# Warmup Iteration   7: 105026.040 ops/s
# Warmup Iteration   8: 103557.809 ops/s
# Warmup Iteration   9: 105057.291 ops/s
# Warmup Iteration  10: 102417.843 ops/s
# Warmup Iteration  11: 104601.712 ops/s
# Warmup Iteration  12: 102806.646 ops/s
# Warmup Iteration  13: 102648.518 ops/s
# Warmup Iteration  14: 106101.361 ops/s
# Warmup Iteration  15: 102369.842 ops/s
# Warmup Iteration  16: 104313.322 ops/s
# Warmup Iteration  17: 113571.599 ops/s
# Warmup Iteration  18: 107797.072 ops/s
# Warmup Iteration  19: 110347.487 ops/s
# Warmup Iteration  20: 105921.545 ops/s
# Warmup Iteration  21: 112221.995 ops/s
# Warmup Iteration  22: 105771.671 ops/s
# Warmup Iteration  23: 106997.969 ops/s
# Warmup Iteration  24: 113679.296 ops/s
# Warmup Iteration  25: 107159.556 ops/s
# Warmup Iteration  26: 111254.533 ops/s
# Warmup Iteration  27: 110985.234 ops/s
# Warmup Iteration  28: 106095.913 ops/s
# Warmup Iteration  29: 110693.113 ops/s
# Warmup Iteration  30: 104823.151 ops/s
Iteration   1: 109405.558 ops/s
Iteration   2: 106221.104 ops/s
Iteration   3: 111194.939 ops/s
Iteration   4: 111832.455 ops/s
Iteration   5: 105799.486 ops/s
Iteration   6: 107189.557 ops/s
Iteration   7: 112157.785 ops/s
Iteration   8: 106651.347 ops/s
Iteration   9: 110587.400 ops/s
Iteration  10: 106777.159 ops/s
Iteration  11: 110180.536 ops/s
Iteration  12: 110307.696 ops/s
Iteration  13: 106723.184 ops/s
Iteration  14: 111567.617 ops/s
Iteration  15: 110624.177 ops/s
Iteration  16: 104472.107 ops/s
Iteration  17: 108645.530 ops/s
Iteration  18: 109228.007 ops/s
Iteration  19: 105516.730 ops/s
Iteration  20: 110629.783 ops/s
Iteration  21: 106903.539 ops/s
Iteration  22: 108807.164 ops/s
Iteration  23: 108414.004 ops/s
Iteration  24: 108367.563 ops/s
Iteration  25: 110439.876 ops/s
Iteration  26: 105117.865 ops/s
Iteration  27: 106644.954 ops/s
Iteration  28: 111208.112 ops/s
Iteration  29: 103688.115 ops/s
Iteration  30: 108487.963 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_589._Benchmark.benchmark_Cluster_589":
  108459.710 ±(99.9%) 1582.245 ops/s [Average]
  (min, avg, max) = (103688.115, 108459.710, 112157.785), stdev = 2368.229
  CI (99.9%): [106877.466, 110041.955] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_589._Benchmark.benchmark_Cluster_589  thrpt   30  108459.710 ± 1582.245  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_59._Benchmark.benchmark_Cluster_59$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_59._Benchmark.benchmark_Cluster_59

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2343.762 ops/s
# Warmup Iteration   2: 35289.840 ops/s
# Warmup Iteration   3: 28136.686 ops/s
# Warmup Iteration   4: 31721.096 ops/s
# Warmup Iteration   5: 61439.101 ops/s
# Warmup Iteration   6: 68170.618 ops/s
# Warmup Iteration   7: 69275.285 ops/s
# Warmup Iteration   8: 55041.182 ops/s
# Warmup Iteration   9: 97378.140 ops/s
# Warmup Iteration  10: 137161.259 ops/s
# Warmup Iteration  11: 134794.221 ops/s
# Warmup Iteration  12: 148405.230 ops/s
# Warmup Iteration  13: 140155.406 ops/s
# Warmup Iteration  14: 150837.451 ops/s
# Warmup Iteration  15: 146345.339 ops/s
# Warmup Iteration  16: 136759.645 ops/s
# Warmup Iteration  17: 145552.417 ops/s
# Warmup Iteration  18: 154249.495 ops/s
# Warmup Iteration  19: 139541.267 ops/s
# Warmup Iteration  20: 152447.768 ops/s
# Warmup Iteration  21: 150612.870 ops/s
# Warmup Iteration  22: 143164.094 ops/s
# Warmup Iteration  23: 141807.043 ops/s
# Warmup Iteration  24: 141349.068 ops/s
# Warmup Iteration  25: 152527.741 ops/s
# Warmup Iteration  26: 142063.282 ops/s
# Warmup Iteration  27: 148318.412 ops/s
# Warmup Iteration  28: 141708.243 ops/s
# Warmup Iteration  29: 147401.219 ops/s
# Warmup Iteration  30: 135019.094 ops/s
Iteration   1: 151669.828 ops/s
Iteration   2: 144381.995 ops/s
Iteration   3: 150565.279 ops/s
Iteration   4: 149171.438 ops/s
Iteration   5: 132503.342 ops/s
Iteration   6: 154229.942 ops/s
Iteration   7: 152267.121 ops/s
Iteration   8: 142857.434 ops/s
Iteration   9: 150509.359 ops/s
Iteration  10: 145907.968 ops/s
Iteration  11: 146757.400 ops/s
Iteration  12: 151390.282 ops/s
Iteration  13: 144051.058 ops/s
Iteration  14: 149881.601 ops/s
Iteration  15: 148680.039 ops/s
Iteration  16: 142484.811 ops/s
Iteration  17: 147599.672 ops/s
Iteration  18: 152661.739 ops/s
Iteration  19: 144496.199 ops/s
Iteration  20: 147544.776 ops/s
Iteration  21: 144483.497 ops/s
Iteration  22: 145067.832 ops/s
Iteration  23: 150323.625 ops/s
Iteration  24: 145745.621 ops/s
Iteration  25: 150224.034 ops/s
Iteration  26: 140055.884 ops/s
Iteration  27: 147489.142 ops/s
Iteration  28: 148466.474 ops/s
Iteration  29: 146608.638 ops/s
Iteration  30: 151119.048 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_59._Benchmark.benchmark_Cluster_59":
  147306.503 ±(99.9%) 2944.928 ops/s [Average]
  (min, avg, max) = (132503.342, 147306.503, 154229.942), stdev = 4407.831
  CI (99.9%): [144361.574, 150251.431] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_59._Benchmark.benchmark_Cluster_59  thrpt   30  147306.503 ± 2944.928  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_590._Benchmark.benchmark_Cluster_590$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_590._Benchmark.benchmark_Cluster_590

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19515.013 ops/s
# Warmup Iteration   2: 69365.558 ops/s
# Warmup Iteration   3: 149457.132 ops/s
# Warmup Iteration   4: 155451.733 ops/s
# Warmup Iteration   5: 160612.133 ops/s
# Warmup Iteration   6: 161712.698 ops/s
# Warmup Iteration   7: 147570.117 ops/s
# Warmup Iteration   8: 161395.240 ops/s
# Warmup Iteration   9: 158385.393 ops/s
# Warmup Iteration  10: 156858.388 ops/s
# Warmup Iteration  11: 163977.115 ops/s
# Warmup Iteration  12: 159552.975 ops/s
# Warmup Iteration  13: 157545.605 ops/s
# Warmup Iteration  14: 157307.344 ops/s
# Warmup Iteration  15: 164600.055 ops/s
# Warmup Iteration  16: 159929.816 ops/s
# Warmup Iteration  17: 169442.962 ops/s
# Warmup Iteration  18: 172335.303 ops/s
# Warmup Iteration  19: 163750.836 ops/s
# Warmup Iteration  20: 175167.475 ops/s
# Warmup Iteration  21: 162435.335 ops/s
# Warmup Iteration  22: 164514.482 ops/s
# Warmup Iteration  23: 168285.377 ops/s
# Warmup Iteration  24: 159360.584 ops/s
# Warmup Iteration  25: 168830.537 ops/s
# Warmup Iteration  26: 161005.211 ops/s
# Warmup Iteration  27: 169796.487 ops/s
# Warmup Iteration  28: 161983.922 ops/s
# Warmup Iteration  29: 168848.534 ops/s
# Warmup Iteration  30: 157588.163 ops/s
Iteration   1: 166119.994 ops/s
Iteration   2: 168560.163 ops/s
Iteration   3: 170430.573 ops/s
Iteration   4: 162550.310 ops/s
Iteration   5: 172504.321 ops/s
Iteration   6: 166274.644 ops/s
Iteration   7: 165420.112 ops/s
Iteration   8: 168876.008 ops/s
Iteration   9: 167849.749 ops/s
Iteration  10: 165038.066 ops/s
Iteration  11: 166480.967 ops/s
Iteration  12: 170654.564 ops/s
Iteration  13: 160165.835 ops/s
Iteration  14: 172084.569 ops/s
Iteration  15: 163339.950 ops/s
Iteration  16: 163114.403 ops/s
Iteration  17: 175903.246 ops/s
Iteration  18: 169755.233 ops/s
Iteration  19: 164577.443 ops/s
Iteration  20: 167401.778 ops/s
Iteration  21: 163030.647 ops/s
Iteration  22: 168765.968 ops/s
Iteration  23: 166202.570 ops/s
Iteration  24: 170929.686 ops/s
Iteration  25: 162494.972 ops/s
Iteration  26: 166554.600 ops/s
Iteration  27: 173263.563 ops/s
Iteration  28: 163951.813 ops/s
Iteration  29: 163201.590 ops/s
Iteration  30: 166900.945 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_590._Benchmark.benchmark_Cluster_590":
  167079.943 ±(99.9%) 2487.413 ops/s [Average]
  (min, avg, max) = (160165.835, 167079.943, 175903.246), stdev = 3723.044
  CI (99.9%): [164592.529, 169567.356] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_590._Benchmark.benchmark_Cluster_590  thrpt   30  167079.943 ± 2487.413  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_591._Benchmark.benchmark_Cluster_591$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_591._Benchmark.benchmark_Cluster_591

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.834 ops/s
# Warmup Iteration   2: 14293.958 ops/s
# Warmup Iteration   3: 34064.309 ops/s
# Warmup Iteration   4: 67388.567 ops/s
# Warmup Iteration   5: 107895.855 ops/s
# Warmup Iteration   6: 116890.084 ops/s
# Warmup Iteration   7: 111698.085 ops/s
# Warmup Iteration   8: 126588.274 ops/s
# Warmup Iteration   9: 116907.480 ops/s
# Warmup Iteration  10: 124958.335 ops/s
# Warmup Iteration  11: 127803.758 ops/s
# Warmup Iteration  12: 126947.370 ops/s
# Warmup Iteration  13: 126439.888 ops/s
# Warmup Iteration  14: 131087.505 ops/s
# Warmup Iteration  15: 124655.688 ops/s
# Warmup Iteration  16: 130005.732 ops/s
# Warmup Iteration  17: 125177.635 ops/s
# Warmup Iteration  18: 131070.424 ops/s
# Warmup Iteration  19: 124154.917 ops/s
# Warmup Iteration  20: 126639.278 ops/s
# Warmup Iteration  21: 124706.451 ops/s
# Warmup Iteration  22: 127088.416 ops/s
# Warmup Iteration  23: 128311.178 ops/s
# Warmup Iteration  24: 128343.415 ops/s
# Warmup Iteration  25: 123992.303 ops/s
# Warmup Iteration  26: 130247.031 ops/s
# Warmup Iteration  27: 126999.962 ops/s
# Warmup Iteration  28: 122536.648 ops/s
# Warmup Iteration  29: 128678.648 ops/s
# Warmup Iteration  30: 127888.393 ops/s
Iteration   1: 126530.641 ops/s
Iteration   2: 127774.998 ops/s
Iteration   3: 125305.534 ops/s
Iteration   4: 129919.062 ops/s
Iteration   5: 129738.998 ops/s
Iteration   6: 124818.133 ops/s
Iteration   7: 125226.592 ops/s
Iteration   8: 127714.522 ops/s
Iteration   9: 128382.126 ops/s
Iteration  10: 127168.356 ops/s
Iteration  11: 128128.838 ops/s
Iteration  12: 123745.436 ops/s
Iteration  13: 125987.230 ops/s
Iteration  14: 132066.538 ops/s
Iteration  15: 127189.799 ops/s
Iteration  16: 121647.450 ops/s
Iteration  17: 127515.439 ops/s
Iteration  18: 125884.369 ops/s
Iteration  19: 127563.982 ops/s
Iteration  20: 128038.932 ops/s
Iteration  21: 128709.563 ops/s
Iteration  22: 129706.892 ops/s
Iteration  23: 124090.531 ops/s
Iteration  24: 128151.717 ops/s
Iteration  25: 128021.559 ops/s
Iteration  26: 124822.333 ops/s
Iteration  27: 129780.096 ops/s
Iteration  28: 124080.449 ops/s
Iteration  29: 129790.441 ops/s
Iteration  30: 123237.989 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_591._Benchmark.benchmark_Cluster_591":
  127024.618 ±(99.9%) 1589.909 ops/s [Average]
  (min, avg, max) = (121647.450, 127024.618, 132066.538), stdev = 2379.701
  CI (99.9%): [125434.709, 128614.527] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_591._Benchmark.benchmark_Cluster_591  thrpt   30  127024.618 ± 1589.909  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_592._Benchmark.benchmark_Cluster_592$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_592._Benchmark.benchmark_Cluster_592

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.892 ops/s
# Warmup Iteration   2: 13368.282 ops/s
# Warmup Iteration   3: 31504.391 ops/s
# Warmup Iteration   4: 37844.144 ops/s
# Warmup Iteration   5: 40783.814 ops/s
# Warmup Iteration   6: 47083.934 ops/s
# Warmup Iteration   7: 70313.130 ops/s
# Warmup Iteration   8: 101584.500 ops/s
# Warmup Iteration   9: 104961.768 ops/s
# Warmup Iteration  10: 94995.355 ops/s
# Warmup Iteration  11: 104391.007 ops/s
# Warmup Iteration  12: 107404.021 ops/s
# Warmup Iteration  13: 102279.886 ops/s
# Warmup Iteration  14: 102743.130 ops/s
# Warmup Iteration  15: 107945.510 ops/s
# Warmup Iteration  16: 100555.288 ops/s
# Warmup Iteration  17: 103767.281 ops/s
# Warmup Iteration  18: 105329.494 ops/s
# Warmup Iteration  19: 103290.584 ops/s
# Warmup Iteration  20: 105067.811 ops/s
# Warmup Iteration  21: 103165.372 ops/s
# Warmup Iteration  22: 108046.134 ops/s
# Warmup Iteration  23: 99441.587 ops/s
# Warmup Iteration  24: 102351.292 ops/s
# Warmup Iteration  25: 106746.000 ops/s
# Warmup Iteration  26: 100754.018 ops/s
# Warmup Iteration  27: 104245.550 ops/s
# Warmup Iteration  28: 108431.978 ops/s
# Warmup Iteration  29: 102537.963 ops/s
# Warmup Iteration  30: 107639.109 ops/s
Iteration   1: 102431.097 ops/s
Iteration   2: 104100.700 ops/s
Iteration   3: 108751.322 ops/s
Iteration   4: 103107.727 ops/s
Iteration   5: 108269.316 ops/s
Iteration   6: 100082.067 ops/s
Iteration   7: 106769.160 ops/s
Iteration   8: 105721.963 ops/s
Iteration   9: 103038.079 ops/s
Iteration  10: 107934.738 ops/s
Iteration  11: 104744.844 ops/s
Iteration  12: 104676.746 ops/s
Iteration  13: 109599.817 ops/s
Iteration  14: 107899.681 ops/s
Iteration  15: 100960.651 ops/s
Iteration  16: 105215.049 ops/s
Iteration  17: 109209.758 ops/s
Iteration  18: 101440.428 ops/s
Iteration  19: 107293.126 ops/s
Iteration  20: 103278.608 ops/s
Iteration  21: 109146.598 ops/s
Iteration  22: 107586.839 ops/s
Iteration  23: 103576.681 ops/s
Iteration  24: 105159.762 ops/s
Iteration  25: 98323.638 ops/s
Iteration  26: 96711.029 ops/s
Iteration  27: 103926.614 ops/s
Iteration  28: 108927.725 ops/s
Iteration  29: 102691.667 ops/s
Iteration  30: 103271.694 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_592._Benchmark.benchmark_Cluster_592":
  104794.904 ±(99.9%) 2231.842 ops/s [Average]
  (min, avg, max) = (96711.029, 104794.904, 109599.817), stdev = 3340.516
  CI (99.9%): [102563.062, 107026.746] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_592._Benchmark.benchmark_Cluster_592  thrpt   30  104794.904 ± 2231.842  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_593._Benchmark.benchmark_Cluster_593$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_593._Benchmark.benchmark_Cluster_593

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1488.172 ops/s
# Warmup Iteration   2: 22987.567 ops/s
# Warmup Iteration   3: 32609.910 ops/s
# Warmup Iteration   4: 38756.952 ops/s
# Warmup Iteration   5: 39793.949 ops/s
# Warmup Iteration   6: 36020.190 ops/s
# Warmup Iteration   7: 76844.731 ops/s
# Warmup Iteration   8: 79176.426 ops/s
# Warmup Iteration   9: 89304.067 ops/s
# Warmup Iteration  10: 86806.634 ops/s
# Warmup Iteration  11: 86164.398 ops/s
# Warmup Iteration  12: 90087.234 ops/s
# Warmup Iteration  13: 86515.248 ops/s
# Warmup Iteration  14: 90306.681 ops/s
# Warmup Iteration  15: 84591.593 ops/s
# Warmup Iteration  16: 88445.999 ops/s
# Warmup Iteration  17: 90953.922 ops/s
# Warmup Iteration  18: 80706.355 ops/s
# Warmup Iteration  19: 85332.925 ops/s
# Warmup Iteration  20: 89805.733 ops/s
# Warmup Iteration  21: 87640.057 ops/s
# Warmup Iteration  22: 90284.806 ops/s
# Warmup Iteration  23: 78225.288 ops/s
# Warmup Iteration  24: 90465.026 ops/s
# Warmup Iteration  25: 87682.239 ops/s
# Warmup Iteration  26: 87147.953 ops/s
# Warmup Iteration  27: 91549.422 ops/s
# Warmup Iteration  28: 87493.364 ops/s
# Warmup Iteration  29: 89568.486 ops/s
# Warmup Iteration  30: 85907.904 ops/s
Iteration   1: 86294.535 ops/s
Iteration   2: 88902.376 ops/s
Iteration   3: 84841.932 ops/s
Iteration   4: 86452.501 ops/s
Iteration   5: 88994.129 ops/s
Iteration   6: 83763.348 ops/s
Iteration   7: 92021.803 ops/s
Iteration   8: 87207.605 ops/s
Iteration   9: 85880.816 ops/s
Iteration  10: 89346.959 ops/s
Iteration  11: 90707.008 ops/s
Iteration  12: 86183.574 ops/s
Iteration  13: 86838.278 ops/s
Iteration  14: 89124.839 ops/s
Iteration  15: 86073.834 ops/s
Iteration  16: 91515.245 ops/s
Iteration  17: 89256.267 ops/s
Iteration  18: 86626.401 ops/s
Iteration  19: 88033.134 ops/s
Iteration  20: 88298.962 ops/s
Iteration  21: 89921.887 ops/s
Iteration  22: 83906.914 ops/s
Iteration  23: 88762.178 ops/s
Iteration  24: 90780.209 ops/s
Iteration  25: 86151.669 ops/s
Iteration  26: 91671.881 ops/s
Iteration  27: 86674.414 ops/s
Iteration  28: 87591.349 ops/s
Iteration  29: 93040.911 ops/s
Iteration  30: 86382.767 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_593._Benchmark.benchmark_Cluster_593":
  88041.591 ±(99.9%) 1601.148 ops/s [Average]
  (min, avg, max) = (83763.348, 88041.591, 93040.911), stdev = 2396.523
  CI (99.9%): [86440.443, 89642.738] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_593._Benchmark.benchmark_Cluster_593  thrpt   30  88041.591 ± 1601.148  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_594._Benchmark.benchmark_Cluster_594$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_594._Benchmark.benchmark_Cluster_594

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.770 ops/s
# Warmup Iteration   2: 2233.601 ops/s
# Warmup Iteration   3: 18848.804 ops/s
# Warmup Iteration   4: 28161.432 ops/s
# Warmup Iteration   5: 38403.865 ops/s
# Warmup Iteration   6: 39162.940 ops/s
# Warmup Iteration   7: 38480.023 ops/s
# Warmup Iteration   8: 54355.641 ops/s
# Warmup Iteration   9: 90963.773 ops/s
# Warmup Iteration  10: 104182.281 ops/s
# Warmup Iteration  11: 98995.625 ops/s
# Warmup Iteration  12: 98506.605 ops/s
# Warmup Iteration  13: 103322.175 ops/s
# Warmup Iteration  14: 100303.608 ops/s
# Warmup Iteration  15: 104191.349 ops/s
# Warmup Iteration  16: 95729.937 ops/s
# Warmup Iteration  17: 106239.105 ops/s
# Warmup Iteration  18: 105023.400 ops/s
# Warmup Iteration  19: 105681.176 ops/s
# Warmup Iteration  20: 99972.058 ops/s
# Warmup Iteration  21: 107448.923 ops/s
# Warmup Iteration  22: 99401.042 ops/s
# Warmup Iteration  23: 102699.411 ops/s
# Warmup Iteration  24: 104391.846 ops/s
# Warmup Iteration  25: 102877.243 ops/s
# Warmup Iteration  26: 102642.130 ops/s
# Warmup Iteration  27: 103982.918 ops/s
# Warmup Iteration  28: 100185.634 ops/s
# Warmup Iteration  29: 102027.710 ops/s
# Warmup Iteration  30: 103190.842 ops/s
Iteration   1: 104506.667 ops/s
Iteration   2: 101402.672 ops/s
Iteration   3: 98072.862 ops/s
Iteration   4: 108266.292 ops/s
Iteration   5: 100207.700 ops/s
Iteration   6: 103981.078 ops/s
Iteration   7: 101730.835 ops/s
Iteration   8: 104202.532 ops/s
Iteration   9: 102014.379 ops/s
Iteration  10: 101441.236 ops/s
Iteration  11: 106180.609 ops/s
Iteration  12: 102278.277 ops/s
Iteration  13: 99641.108 ops/s
Iteration  14: 101421.647 ops/s
Iteration  15: 99678.339 ops/s
Iteration  16: 100335.295 ops/s
Iteration  17: 105698.837 ops/s
Iteration  18: 102860.458 ops/s
Iteration  19: 85190.026 ops/s
Iteration  20: 105911.033 ops/s
Iteration  21: 104584.849 ops/s
Iteration  22: 100443.296 ops/s
Iteration  23: 103487.557 ops/s
Iteration  24: 101610.012 ops/s
Iteration  25: 105068.303 ops/s
Iteration  26: 101546.453 ops/s
Iteration  27: 104587.624 ops/s
Iteration  28: 103388.830 ops/s
Iteration  29: 99451.805 ops/s
Iteration  30: 103727.421 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_594._Benchmark.benchmark_Cluster_594":
  102097.268 ±(99.9%) 2650.818 ops/s [Average]
  (min, avg, max) = (85190.026, 102097.268, 108266.292), stdev = 3967.620
  CI (99.9%): [99446.449, 104748.086] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_594._Benchmark.benchmark_Cluster_594  thrpt   30  102097.268 ± 2650.818  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_595._Benchmark.benchmark_Cluster_595$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_595._Benchmark.benchmark_Cluster_595

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.780 ops/s
# Warmup Iteration   2: 3657.300 ops/s
# Warmup Iteration   3: 26250.626 ops/s
# Warmup Iteration   4: 37359.199 ops/s
# Warmup Iteration   5: 36487.431 ops/s
# Warmup Iteration   6: 31249.123 ops/s
# Warmup Iteration   7: 34705.756 ops/s
# Warmup Iteration   8: 32792.453 ops/s
# Warmup Iteration   9: 103186.975 ops/s
# Warmup Iteration  10: 121610.116 ops/s
# Warmup Iteration  11: 122436.606 ops/s
# Warmup Iteration  12: 125107.102 ops/s
# Warmup Iteration  13: 119801.596 ops/s
# Warmup Iteration  14: 123339.871 ops/s
# Warmup Iteration  15: 120691.555 ops/s
# Warmup Iteration  16: 113641.825 ops/s
# Warmup Iteration  17: 120934.283 ops/s
# Warmup Iteration  18: 121936.281 ops/s
# Warmup Iteration  19: 124959.201 ops/s
# Warmup Iteration  20: 117794.410 ops/s
# Warmup Iteration  21: 126833.145 ops/s
# Warmup Iteration  22: 121374.990 ops/s
# Warmup Iteration  23: 122161.083 ops/s
# Warmup Iteration  24: 117701.422 ops/s
# Warmup Iteration  25: 119278.435 ops/s
# Warmup Iteration  26: 126977.991 ops/s
# Warmup Iteration  27: 121447.544 ops/s
# Warmup Iteration  28: 120022.886 ops/s
# Warmup Iteration  29: 125697.064 ops/s
# Warmup Iteration  30: 118887.464 ops/s
Iteration   1: 125054.977 ops/s
Iteration   2: 120236.979 ops/s
Iteration   3: 120601.162 ops/s
Iteration   4: 126521.720 ops/s
Iteration   5: 117082.805 ops/s
Iteration   6: 124613.804 ops/s
Iteration   7: 118227.225 ops/s
Iteration   8: 122216.553 ops/s
Iteration   9: 121761.602 ops/s
Iteration  10: 126723.439 ops/s
Iteration  11: 121652.082 ops/s
Iteration  12: 126045.431 ops/s
Iteration  13: 120974.149 ops/s
Iteration  14: 120718.720 ops/s
Iteration  15: 121399.803 ops/s
Iteration  16: 121151.318 ops/s
Iteration  17: 120375.677 ops/s
Iteration  18: 125301.902 ops/s
Iteration  19: 121775.728 ops/s
Iteration  20: 125857.712 ops/s
Iteration  21: 120495.625 ops/s
Iteration  22: 127876.777 ops/s
Iteration  23: 124028.076 ops/s
Iteration  24: 119947.297 ops/s
Iteration  25: 127502.675 ops/s
Iteration  26: 118585.614 ops/s
Iteration  27: 122564.361 ops/s
Iteration  28: 125566.120 ops/s
Iteration  29: 117939.336 ops/s
Iteration  30: 126830.378 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_595._Benchmark.benchmark_Cluster_595":
  122654.302 ±(99.9%) 2069.756 ops/s [Average]
  (min, avg, max) = (117082.805, 122654.302, 127876.777), stdev = 3097.914
  CI (99.9%): [120584.545, 124724.058] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_595._Benchmark.benchmark_Cluster_595  thrpt   30  122654.302 ± 2069.756  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_596._Benchmark.benchmark_Cluster_596$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_596._Benchmark.benchmark_Cluster_596

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3126.620 ops/s
# Warmup Iteration   2: 31138.273 ops/s
# Warmup Iteration   3: 37610.339 ops/s
# Warmup Iteration   4: 42306.995 ops/s
# Warmup Iteration   5: 56033.860 ops/s
# Warmup Iteration   6: 44438.219 ops/s
# Warmup Iteration   7: 45818.747 ops/s
# Warmup Iteration   8: 37139.349 ops/s
# Warmup Iteration   9: 69104.880 ops/s
# Warmup Iteration  10: 112530.277 ops/s
# Warmup Iteration  11: 113738.884 ops/s
# Warmup Iteration  12: 112365.299 ops/s
# Warmup Iteration  13: 111407.605 ops/s
# Warmup Iteration  14: 111011.481 ops/s
# Warmup Iteration  15: 117355.577 ops/s
# Warmup Iteration  16: 112179.125 ops/s
# Warmup Iteration  17: 121708.154 ops/s
# Warmup Iteration  18: 117596.345 ops/s
# Warmup Iteration  19: 121351.692 ops/s
# Warmup Iteration  20: 119119.847 ops/s
# Warmup Iteration  21: 115631.883 ops/s
# Warmup Iteration  22: 120532.200 ops/s
# Warmup Iteration  23: 117787.318 ops/s
# Warmup Iteration  24: 116702.658 ops/s
# Warmup Iteration  25: 123571.038 ops/s
# Warmup Iteration  26: 117672.585 ops/s
# Warmup Iteration  27: 120629.233 ops/s
# Warmup Iteration  28: 116440.694 ops/s
# Warmup Iteration  29: 118806.018 ops/s
# Warmup Iteration  30: 124190.199 ops/s
Iteration   1: 115766.775 ops/s
Iteration   2: 116975.540 ops/s
Iteration   3: 122840.064 ops/s
Iteration   4: 114252.349 ops/s
Iteration   5: 121015.936 ops/s
Iteration   6: 116118.412 ops/s
Iteration   7: 124286.011 ops/s
Iteration   8: 117697.316 ops/s
Iteration   9: 115602.469 ops/s
Iteration  10: 122108.932 ops/s
Iteration  11: 116805.372 ops/s
Iteration  12: 121064.610 ops/s
Iteration  13: 95706.492 ops/s
Iteration  14: 115647.204 ops/s
Iteration  15: 114939.694 ops/s
Iteration  16: 122814.571 ops/s
Iteration  17: 117504.174 ops/s
Iteration  18: 120409.654 ops/s
Iteration  19: 122869.919 ops/s
Iteration  20: 118729.987 ops/s
Iteration  21: 119542.012 ops/s
Iteration  22: 118035.571 ops/s
Iteration  23: 122903.184 ops/s
Iteration  24: 118554.411 ops/s
Iteration  25: 117550.704 ops/s
Iteration  26: 121032.402 ops/s
Iteration  27: 116252.411 ops/s
Iteration  28: 120272.117 ops/s
Iteration  29: 123726.930 ops/s
Iteration  30: 108436.262 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_596._Benchmark.benchmark_Cluster_596":
  117982.049 ±(99.9%) 3645.029 ops/s [Average]
  (min, avg, max) = (95706.492, 117982.049, 124286.011), stdev = 5455.708
  CI (99.9%): [114337.020, 121627.079] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_596._Benchmark.benchmark_Cluster_596  thrpt   30  117982.049 ± 3645.029  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_597._Benchmark.benchmark_Cluster_597$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_597._Benchmark.benchmark_Cluster_597

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6565.923 ops/s
# Warmup Iteration   2: 61409.689 ops/s
# Warmup Iteration   3: 109765.714 ops/s
# Warmup Iteration   4: 118329.216 ops/s
# Warmup Iteration   5: 109039.247 ops/s
# Warmup Iteration   6: 114349.513 ops/s
# Warmup Iteration   7: 115260.980 ops/s
# Warmup Iteration   8: 116117.703 ops/s
# Warmup Iteration   9: 117368.815 ops/s
# Warmup Iteration  10: 114967.748 ops/s
# Warmup Iteration  11: 123087.052 ops/s
# Warmup Iteration  12: 123150.968 ops/s
# Warmup Iteration  13: 117705.754 ops/s
# Warmup Iteration  14: 120711.420 ops/s
# Warmup Iteration  15: 122127.509 ops/s
# Warmup Iteration  16: 121114.929 ops/s
# Warmup Iteration  17: 122409.541 ops/s
# Warmup Iteration  18: 128698.779 ops/s
# Warmup Iteration  19: 125010.956 ops/s
# Warmup Iteration  20: 124096.219 ops/s
# Warmup Iteration  21: 123702.129 ops/s
# Warmup Iteration  22: 119193.206 ops/s
# Warmup Iteration  23: 126725.618 ops/s
# Warmup Iteration  24: 121159.720 ops/s
# Warmup Iteration  25: 125474.368 ops/s
# Warmup Iteration  26: 124254.334 ops/s
# Warmup Iteration  27: 124313.068 ops/s
# Warmup Iteration  28: 129233.711 ops/s
# Warmup Iteration  29: 120475.176 ops/s
# Warmup Iteration  30: 126801.868 ops/s
Iteration   1: 121743.978 ops/s
Iteration   2: 123493.901 ops/s
Iteration   3: 122627.802 ops/s
Iteration   4: 126125.744 ops/s
Iteration   5: 125005.894 ops/s
Iteration   6: 123086.523 ops/s
Iteration   7: 126049.031 ops/s
Iteration   8: 125108.008 ops/s
Iteration   9: 121692.815 ops/s
Iteration  10: 128999.868 ops/s
Iteration  11: 121382.996 ops/s
Iteration  12: 128302.879 ops/s
Iteration  13: 120910.452 ops/s
Iteration  14: 123090.286 ops/s
Iteration  15: 123763.625 ops/s
Iteration  16: 127263.086 ops/s
Iteration  17: 122367.096 ops/s
Iteration  18: 127080.019 ops/s
Iteration  19: 119381.635 ops/s
Iteration  20: 128125.463 ops/s
Iteration  21: 119812.030 ops/s
Iteration  22: 128424.767 ops/s
Iteration  23: 121174.664 ops/s
Iteration  24: 127243.515 ops/s
Iteration  25: 124654.082 ops/s
Iteration  26: 121334.525 ops/s
Iteration  27: 132211.784 ops/s
Iteration  28: 121338.915 ops/s
Iteration  29: 124866.326 ops/s
Iteration  30: 123993.628 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_597._Benchmark.benchmark_Cluster_597":
  124355.178 ±(99.9%) 2079.410 ops/s [Average]
  (min, avg, max) = (119381.635, 124355.178, 132211.784), stdev = 3112.363
  CI (99.9%): [122275.768, 126434.588] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_597._Benchmark.benchmark_Cluster_597  thrpt   30  124355.178 ± 2079.410  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_598._Benchmark.benchmark_Cluster_598$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_598._Benchmark.benchmark_Cluster_598

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16320.892 ops/s
# Warmup Iteration   2: 84254.022 ops/s
# Warmup Iteration   3: 84484.906 ops/s
# Warmup Iteration   4: 95000.300 ops/s
# Warmup Iteration   5: 97298.364 ops/s
# Warmup Iteration   6: 101697.135 ops/s
# Warmup Iteration   7: 105078.646 ops/s
# Warmup Iteration   8: 101786.682 ops/s
# Warmup Iteration   9: 102927.823 ops/s
# Warmup Iteration  10: 106267.172 ops/s
# Warmup Iteration  11: 105865.801 ops/s
# Warmup Iteration  12: 100986.616 ops/s
# Warmup Iteration  13: 107952.343 ops/s
# Warmup Iteration  14: 99318.236 ops/s
# Warmup Iteration  15: 103491.160 ops/s
# Warmup Iteration  16: 101318.549 ops/s
# Warmup Iteration  17: 104488.390 ops/s
# Warmup Iteration  18: 108005.284 ops/s
# Warmup Iteration  19: 105799.518 ops/s
# Warmup Iteration  20: 109200.487 ops/s
# Warmup Iteration  21: 103245.159 ops/s
# Warmup Iteration  22: 110249.938 ops/s
# Warmup Iteration  23: 107319.934 ops/s
# Warmup Iteration  24: 104738.411 ops/s
# Warmup Iteration  25: 101543.100 ops/s
# Warmup Iteration  26: 112213.374 ops/s
# Warmup Iteration  27: 106004.251 ops/s
# Warmup Iteration  28: 104243.008 ops/s
# Warmup Iteration  29: 109164.434 ops/s
# Warmup Iteration  30: 108625.670 ops/s
Iteration   1: 103718.230 ops/s
Iteration   2: 108942.886 ops/s
Iteration   3: 110565.107 ops/s
Iteration   4: 107113.507 ops/s
Iteration   5: 102708.677 ops/s
Iteration   6: 109986.239 ops/s
Iteration   7: 104037.992 ops/s
Iteration   8: 91475.032 ops/s
Iteration   9: 109145.952 ops/s
Iteration  10: 101144.827 ops/s
Iteration  11: 105475.352 ops/s
Iteration  12: 104536.849 ops/s
Iteration  13: 104516.794 ops/s
Iteration  14: 103929.552 ops/s
Iteration  15: 100542.123 ops/s
Iteration  16: 107826.185 ops/s
Iteration  17: 101904.518 ops/s
Iteration  18: 104995.323 ops/s
Iteration  19: 104854.673 ops/s
Iteration  20: 104212.214 ops/s
Iteration  21: 108636.472 ops/s
Iteration  22: 105167.475 ops/s
Iteration  23: 109224.857 ops/s
Iteration  24: 109517.351 ops/s
Iteration  25: 103975.496 ops/s
Iteration  26: 105857.908 ops/s
Iteration  27: 111890.962 ops/s
Iteration  28: 102022.068 ops/s
Iteration  29: 109615.114 ops/s
Iteration  30: 106854.411 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_598._Benchmark.benchmark_Cluster_598":
  105479.805 ±(99.9%) 2678.271 ops/s [Average]
  (min, avg, max) = (91475.032, 105479.805, 111890.962), stdev = 4008.711
  CI (99.9%): [102801.534, 108158.076] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_598._Benchmark.benchmark_Cluster_598  thrpt   30  105479.805 ± 2678.271  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_599._Benchmark.benchmark_Cluster_599$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_599._Benchmark.benchmark_Cluster_599

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2961.623 ops/s
# Warmup Iteration   2: 18264.761 ops/s
# Warmup Iteration   3: 31922.267 ops/s
# Warmup Iteration   4: 28829.365 ops/s
# Warmup Iteration   5: 41694.076 ops/s
# Warmup Iteration   6: 43641.900 ops/s
# Warmup Iteration   7: 48733.901 ops/s
# Warmup Iteration   8: 82292.425 ops/s
# Warmup Iteration   9: 98599.484 ops/s
# Warmup Iteration  10: 100706.280 ops/s
# Warmup Iteration  11: 104289.554 ops/s
# Warmup Iteration  12: 103021.089 ops/s
# Warmup Iteration  13: 102822.416 ops/s
# Warmup Iteration  14: 103559.747 ops/s
# Warmup Iteration  15: 93209.953 ops/s
# Warmup Iteration  16: 103333.220 ops/s
# Warmup Iteration  17: 105169.546 ops/s
# Warmup Iteration  18: 106637.849 ops/s
# Warmup Iteration  19: 108293.144 ops/s
# Warmup Iteration  20: 104653.914 ops/s
# Warmup Iteration  21: 109239.711 ops/s
# Warmup Iteration  22: 105428.610 ops/s
# Warmup Iteration  23: 107552.850 ops/s
# Warmup Iteration  24: 107319.888 ops/s
# Warmup Iteration  25: 107229.854 ops/s
# Warmup Iteration  26: 105456.721 ops/s
# Warmup Iteration  27: 107676.490 ops/s
# Warmup Iteration  28: 108467.733 ops/s
# Warmup Iteration  29: 104947.411 ops/s
# Warmup Iteration  30: 110077.070 ops/s
Iteration   1: 104655.962 ops/s
Iteration   2: 108470.332 ops/s
Iteration   3: 110793.480 ops/s
Iteration   4: 103977.845 ops/s
Iteration   5: 108098.387 ops/s
Iteration   6: 101738.254 ops/s
Iteration   7: 109324.019 ops/s
Iteration   8: 109726.804 ops/s
Iteration   9: 101092.923 ops/s
Iteration  10: 105538.859 ops/s
Iteration  11: 104175.158 ops/s
Iteration  12: 105683.247 ops/s
Iteration  13: 105308.938 ops/s
Iteration  14: 103369.092 ops/s
Iteration  15: 107132.601 ops/s
Iteration  16: 108053.713 ops/s
Iteration  17: 106436.904 ops/s
Iteration  18: 109596.839 ops/s
Iteration  19: 103474.248 ops/s
Iteration  20: 111158.035 ops/s
Iteration  21: 105128.416 ops/s
Iteration  22: 105995.946 ops/s
Iteration  23: 105405.217 ops/s
Iteration  24: 103736.251 ops/s
Iteration  25: 107991.215 ops/s
Iteration  26: 105411.308 ops/s
Iteration  27: 108797.014 ops/s
Iteration  28: 107668.894 ops/s
Iteration  29: 107963.202 ops/s
Iteration  30: 104128.069 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_599._Benchmark.benchmark_Cluster_599":
  106334.372 ±(99.9%) 1729.708 ops/s [Average]
  (min, avg, max) = (101092.923, 106334.372, 111158.035), stdev = 2588.946
  CI (99.9%): [104604.664, 108064.081] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_599._Benchmark.benchmark_Cluster_599  thrpt   30  106334.372 ± 1729.708  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_6._Benchmark.benchmark_Cluster_6$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_6._Benchmark.benchmark_Cluster_6

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6624.766 ops/s
# Warmup Iteration   2: 27090.267 ops/s
# Warmup Iteration   3: 38026.274 ops/s
# Warmup Iteration   4: 34632.311 ops/s
# Warmup Iteration   5: 95439.588 ops/s
# Warmup Iteration   6: 104002.196 ops/s
# Warmup Iteration   7: 110817.247 ops/s
# Warmup Iteration   8: 103226.288 ops/s
# Warmup Iteration   9: 107224.809 ops/s
# Warmup Iteration  10: 104057.008 ops/s
# Warmup Iteration  11: 102562.474 ops/s
# Warmup Iteration  12: 104618.712 ops/s
# Warmup Iteration  13: 108874.675 ops/s
# Warmup Iteration  14: 95170.921 ops/s
# Warmup Iteration  15: 110829.053 ops/s
# Warmup Iteration  16: 108536.423 ops/s
# Warmup Iteration  17: 108078.966 ops/s
# Warmup Iteration  18: 108559.219 ops/s
# Warmup Iteration  19: 112048.163 ops/s
# Warmup Iteration  20: 107266.577 ops/s
# Warmup Iteration  21: 113041.786 ops/s
# Warmup Iteration  22: 105651.898 ops/s
# Warmup Iteration  23: 107754.767 ops/s
# Warmup Iteration  24: 110051.846 ops/s
# Warmup Iteration  25: 107544.082 ops/s
# Warmup Iteration  26: 106328.252 ops/s
# Warmup Iteration  27: 108619.613 ops/s
# Warmup Iteration  28: 106723.202 ops/s
# Warmup Iteration  29: 111124.207 ops/s
# Warmup Iteration  30: 110495.705 ops/s
Iteration   1: 107475.679 ops/s
Iteration   2: 101291.597 ops/s
Iteration   3: 91537.560 ops/s
Iteration   4: 111259.560 ops/s
Iteration   5: 106492.547 ops/s
Iteration   6: 109357.677 ops/s
Iteration   7: 106565.820 ops/s
Iteration   8: 111579.092 ops/s
Iteration   9: 107262.036 ops/s
Iteration  10: 108983.202 ops/s
Iteration  11: 111842.473 ops/s
Iteration  12: 106913.749 ops/s
Iteration  13: 110624.175 ops/s
Iteration  14: 107830.581 ops/s
Iteration  15: 108617.092 ops/s
Iteration  16: 113083.889 ops/s
Iteration  17: 105505.223 ops/s
Iteration  18: 112551.234 ops/s
Iteration  19: 106077.066 ops/s
Iteration  20: 110080.026 ops/s
Iteration  21: 114082.911 ops/s
Iteration  22: 105437.815 ops/s
Iteration  23: 109435.273 ops/s
Iteration  24: 108049.853 ops/s
Iteration  25: 110190.603 ops/s
Iteration  26: 111815.006 ops/s
Iteration  27: 105330.884 ops/s
Iteration  28: 113597.487 ops/s
Iteration  29: 103675.413 ops/s
Iteration  30: 107786.853 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_6._Benchmark.benchmark_Cluster_6":
  108144.412 ±(99.9%) 2917.560 ops/s [Average]
  (min, avg, max) = (91537.560, 108144.412, 114082.911), stdev = 4366.866
  CI (99.9%): [105226.853, 111061.972] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score      Error  Units
Cluster_6._Benchmark.benchmark_Cluster_6  thrpt   30  108144.412 ± 2917.560  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_60._Benchmark.benchmark_Cluster_60$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_60._Benchmark.benchmark_Cluster_60

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 26204.074 ops/s
# Warmup Iteration   2: 77456.482 ops/s
# Warmup Iteration   3: 90274.421 ops/s
# Warmup Iteration   4: 99853.283 ops/s
# Warmup Iteration   5: 110304.298 ops/s
# Warmup Iteration   6: 103865.441 ops/s
# Warmup Iteration   7: 98796.829 ops/s
# Warmup Iteration   8: 111796.912 ops/s
# Warmup Iteration   9: 107088.576 ops/s
# Warmup Iteration  10: 109660.866 ops/s
# Warmup Iteration  11: 106931.607 ops/s
# Warmup Iteration  12: 108442.268 ops/s
# Warmup Iteration  13: 110898.851 ops/s
# Warmup Iteration  14: 107802.524 ops/s
# Warmup Iteration  15: 111172.270 ops/s
# Warmup Iteration  16: 108202.107 ops/s
# Warmup Iteration  17: 113665.855 ops/s
# Warmup Iteration  18: 116415.318 ops/s
# Warmup Iteration  19: 112131.148 ops/s
# Warmup Iteration  20: 118020.125 ops/s
# Warmup Iteration  21: 110425.221 ops/s
# Warmup Iteration  22: 115592.280 ops/s
# Warmup Iteration  23: 113956.952 ops/s
# Warmup Iteration  24: 115308.873 ops/s
# Warmup Iteration  25: 114304.656 ops/s
# Warmup Iteration  26: 113230.319 ops/s
# Warmup Iteration  27: 117605.208 ops/s
# Warmup Iteration  28: 113428.599 ops/s
# Warmup Iteration  29: 112489.384 ops/s
# Warmup Iteration  30: 114609.298 ops/s
Iteration   1: 111793.938 ops/s
Iteration   2: 111822.596 ops/s
Iteration   3: 116162.419 ops/s
Iteration   4: 110617.240 ops/s
Iteration   5: 112393.595 ops/s
Iteration   6: 117065.593 ops/s
Iteration   7: 114137.524 ops/s
Iteration   8: 115696.229 ops/s
Iteration   9: 113738.929 ops/s
Iteration  10: 117335.390 ops/s
Iteration  11: 114249.659 ops/s
Iteration  12: 110258.104 ops/s
Iteration  13: 117270.538 ops/s
Iteration  14: 114605.609 ops/s
Iteration  15: 110803.087 ops/s
Iteration  16: 113804.844 ops/s
Iteration  17: 113965.279 ops/s
Iteration  18: 120226.147 ops/s
Iteration  19: 110406.117 ops/s
Iteration  20: 114464.194 ops/s
Iteration  21: 117045.444 ops/s
Iteration  22: 115181.281 ops/s
Iteration  23: 112128.628 ops/s
Iteration  24: 118888.047 ops/s
Iteration  25: 112518.152 ops/s
Iteration  26: 116170.965 ops/s
Iteration  27: 116082.179 ops/s
Iteration  28: 114020.978 ops/s
Iteration  29: 117787.089 ops/s
Iteration  30: 111342.092 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_60._Benchmark.benchmark_Cluster_60":
  114399.396 ±(99.9%) 1776.385 ops/s [Average]
  (min, avg, max) = (110258.104, 114399.396, 120226.147), stdev = 2658.809
  CI (99.9%): [112623.012, 116175.781] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_60._Benchmark.benchmark_Cluster_60  thrpt   30  114399.396 ± 1776.385  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_600._Benchmark.benchmark_Cluster_600$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_600._Benchmark.benchmark_Cluster_600

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1865.642 ops/s
# Warmup Iteration   2: 16095.952 ops/s
# Warmup Iteration   3: 25306.204 ops/s
# Warmup Iteration   4: 46235.332 ops/s
# Warmup Iteration   5: 62511.776 ops/s
# Warmup Iteration   6: 84953.834 ops/s
# Warmup Iteration   7: 75352.089 ops/s
# Warmup Iteration   8: 85971.634 ops/s
# Warmup Iteration   9: 88040.424 ops/s
# Warmup Iteration  10: 90134.056 ops/s
# Warmup Iteration  11: 85047.608 ops/s
# Warmup Iteration  12: 87081.270 ops/s
# Warmup Iteration  13: 90816.619 ops/s
# Warmup Iteration  14: 85414.500 ops/s
# Warmup Iteration  15: 89596.247 ops/s
# Warmup Iteration  16: 89939.127 ops/s
# Warmup Iteration  17: 87546.350 ops/s
# Warmup Iteration  18: 92661.636 ops/s
# Warmup Iteration  19: 86179.509 ops/s
# Warmup Iteration  20: 91954.858 ops/s
# Warmup Iteration  21: 86809.254 ops/s
# Warmup Iteration  22: 88435.178 ops/s
# Warmup Iteration  23: 89994.211 ops/s
# Warmup Iteration  24: 85978.584 ops/s
# Warmup Iteration  25: 92028.168 ops/s
# Warmup Iteration  26: 85768.749 ops/s
# Warmup Iteration  27: 76343.426 ops/s
# Warmup Iteration  28: 92498.454 ops/s
# Warmup Iteration  29: 88312.911 ops/s
# Warmup Iteration  30: 90034.095 ops/s
Iteration   1: 91184.343 ops/s
Iteration   2: 88634.128 ops/s
Iteration   3: 90859.125 ops/s
Iteration   4: 90784.608 ops/s
Iteration   5: 87886.176 ops/s
Iteration   6: 92901.285 ops/s
Iteration   7: 93638.124 ops/s
Iteration   8: 88526.183 ops/s
Iteration   9: 90554.848 ops/s
Iteration  10: 91236.841 ops/s
Iteration  11: 89513.982 ops/s
Iteration  12: 87867.213 ops/s
Iteration  13: 89948.242 ops/s
Iteration  14: 90239.400 ops/s
Iteration  15: 86980.136 ops/s
Iteration  16: 90328.486 ops/s
Iteration  17: 92755.902 ops/s
Iteration  18: 86900.747 ops/s
Iteration  19: 92405.072 ops/s
Iteration  20: 88413.452 ops/s
Iteration  21: 91437.241 ops/s
Iteration  22: 88244.672 ops/s
Iteration  23: 92448.679 ops/s
Iteration  24: 89705.234 ops/s
Iteration  25: 88925.958 ops/s
Iteration  26: 91722.230 ops/s
Iteration  27: 89204.751 ops/s
Iteration  28: 90716.121 ops/s
Iteration  29: 87848.288 ops/s
Iteration  30: 86671.991 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_600._Benchmark.benchmark_Cluster_600":
  89949.449 ±(99.9%) 1280.048 ops/s [Average]
  (min, avg, max) = (86671.991, 89949.449, 93638.124), stdev = 1915.915
  CI (99.9%): [88669.401, 91229.496] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_600._Benchmark.benchmark_Cluster_600  thrpt   30  89949.449 ± 1280.048  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_601._Benchmark.benchmark_Cluster_601$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_601._Benchmark.benchmark_Cluster_601

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17019.670 ops/s
# Warmup Iteration   2: 85134.524 ops/s
# Warmup Iteration   3: 171920.130 ops/s
# Warmup Iteration   4: 155309.177 ops/s
# Warmup Iteration   5: 198619.968 ops/s
# Warmup Iteration   6: 178422.873 ops/s
# Warmup Iteration   7: 189639.251 ops/s
# Warmup Iteration   8: 193064.375 ops/s
# Warmup Iteration   9: 191831.458 ops/s
# Warmup Iteration  10: 201117.749 ops/s
# Warmup Iteration  11: 187430.999 ops/s
# Warmup Iteration  12: 193038.760 ops/s
# Warmup Iteration  13: 192599.765 ops/s
# Warmup Iteration  14: 191680.022 ops/s
# Warmup Iteration  15: 195440.346 ops/s
# Warmup Iteration  16: 191960.036 ops/s
# Warmup Iteration  17: 199272.702 ops/s
# Warmup Iteration  18: 198006.948 ops/s
# Warmup Iteration  19: 205906.086 ops/s
# Warmup Iteration  20: 197104.829 ops/s
# Warmup Iteration  21: 203199.368 ops/s
# Warmup Iteration  22: 195016.282 ops/s
# Warmup Iteration  23: 200886.654 ops/s
# Warmup Iteration  24: 197110.382 ops/s
# Warmup Iteration  25: 193357.327 ops/s
# Warmup Iteration  26: 199797.311 ops/s
# Warmup Iteration  27: 200506.513 ops/s
# Warmup Iteration  28: 201702.398 ops/s
# Warmup Iteration  29: 203071.826 ops/s
# Warmup Iteration  30: 190172.074 ops/s
Iteration   1: 202667.411 ops/s
Iteration   2: 191262.715 ops/s
Iteration   3: 201766.898 ops/s
Iteration   4: 204641.865 ops/s
Iteration   5: 191025.169 ops/s
Iteration   6: 203924.685 ops/s
Iteration   7: 199877.585 ops/s
Iteration   8: 197790.952 ops/s
Iteration   9: 207667.288 ops/s
Iteration  10: 191251.535 ops/s
Iteration  11: 205853.076 ops/s
Iteration  12: 195723.394 ops/s
Iteration  13: 198370.470 ops/s
Iteration  14: 196769.139 ops/s
Iteration  15: 195168.276 ops/s
Iteration  16: 203613.813 ops/s
Iteration  17: 195606.624 ops/s
Iteration  18: 202699.159 ops/s
Iteration  19: 195092.629 ops/s
Iteration  20: 201988.726 ops/s
Iteration  21: 196499.598 ops/s
Iteration  22: 205086.766 ops/s
Iteration  23: 196410.746 ops/s
Iteration  24: 201888.581 ops/s
Iteration  25: 203906.533 ops/s
Iteration  26: 195852.795 ops/s
Iteration  27: 201357.712 ops/s
Iteration  28: 193976.069 ops/s
Iteration  29: 199700.970 ops/s
Iteration  30: 195649.448 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_601._Benchmark.benchmark_Cluster_601":
  199103.021 ±(99.9%) 3091.726 ops/s [Average]
  (min, avg, max) = (191025.169, 199103.021, 207667.288), stdev = 4627.551
  CI (99.9%): [196011.295, 202194.747] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_601._Benchmark.benchmark_Cluster_601  thrpt   30  199103.021 ± 3091.726  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_602._Benchmark.benchmark_Cluster_602$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_602._Benchmark.benchmark_Cluster_602

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10350.869 ops/s
# Warmup Iteration   2: 54132.700 ops/s
# Warmup Iteration   3: 70073.568 ops/s
# Warmup Iteration   4: 117445.935 ops/s
# Warmup Iteration   5: 128197.667 ops/s
# Warmup Iteration   6: 121464.183 ops/s
# Warmup Iteration   7: 122327.864 ops/s
# Warmup Iteration   8: 122046.971 ops/s
# Warmup Iteration   9: 122497.189 ops/s
# Warmup Iteration  10: 123917.202 ops/s
# Warmup Iteration  11: 120141.590 ops/s
# Warmup Iteration  12: 122160.103 ops/s
# Warmup Iteration  13: 119600.229 ops/s
# Warmup Iteration  14: 128294.829 ops/s
# Warmup Iteration  15: 115670.433 ops/s
# Warmup Iteration  16: 128620.125 ops/s
# Warmup Iteration  17: 132987.149 ops/s
# Warmup Iteration  18: 129626.406 ops/s
# Warmup Iteration  19: 131957.952 ops/s
# Warmup Iteration  20: 132640.897 ops/s
# Warmup Iteration  21: 110662.072 ops/s
# Warmup Iteration  22: 130981.625 ops/s
# Warmup Iteration  23: 127906.905 ops/s
# Warmup Iteration  24: 129189.321 ops/s
# Warmup Iteration  25: 131037.045 ops/s
# Warmup Iteration  26: 128240.279 ops/s
# Warmup Iteration  27: 133118.764 ops/s
# Warmup Iteration  28: 128771.069 ops/s
# Warmup Iteration  29: 135704.965 ops/s
# Warmup Iteration  30: 127803.072 ops/s
Iteration   1: 132009.801 ops/s
Iteration   2: 135298.237 ops/s
Iteration   3: 131031.741 ops/s
Iteration   4: 133797.766 ops/s
Iteration   5: 130707.249 ops/s
Iteration   6: 131071.516 ops/s
Iteration   7: 127351.725 ops/s
Iteration   8: 133953.508 ops/s
Iteration   9: 125009.948 ops/s
Iteration  10: 128965.259 ops/s
Iteration  11: 135931.993 ops/s
Iteration  12: 130434.208 ops/s
Iteration  13: 130286.361 ops/s
Iteration  14: 132420.117 ops/s
Iteration  15: 127088.682 ops/s
Iteration  16: 135637.792 ops/s
Iteration  17: 128655.833 ops/s
Iteration  18: 131859.072 ops/s
Iteration  19: 133394.511 ops/s
Iteration  20: 125957.166 ops/s
Iteration  21: 136608.675 ops/s
Iteration  22: 128774.380 ops/s
Iteration  23: 132905.513 ops/s
Iteration  24: 134382.258 ops/s
Iteration  25: 128115.500 ops/s
Iteration  26: 135429.906 ops/s
Iteration  27: 127700.498 ops/s
Iteration  28: 134143.613 ops/s
Iteration  29: 127920.557 ops/s
Iteration  30: 132449.362 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_602._Benchmark.benchmark_Cluster_602":
  131309.758 ±(99.9%) 2147.956 ops/s [Average]
  (min, avg, max) = (125009.948, 131309.758, 136608.675), stdev = 3214.959
  CI (99.9%): [129161.803, 133457.714] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_602._Benchmark.benchmark_Cluster_602  thrpt   30  131309.758 ± 2147.956  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_603._Benchmark.benchmark_Cluster_603$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_603._Benchmark.benchmark_Cluster_603

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12613.122 ops/s
# Warmup Iteration   2: 40318.549 ops/s
# Warmup Iteration   3: 106000.820 ops/s
# Warmup Iteration   4: 134869.609 ops/s
# Warmup Iteration   5: 145209.716 ops/s
# Warmup Iteration   6: 138611.141 ops/s
# Warmup Iteration   7: 148638.595 ops/s
# Warmup Iteration   8: 141038.482 ops/s
# Warmup Iteration   9: 140748.188 ops/s
# Warmup Iteration  10: 145535.822 ops/s
# Warmup Iteration  11: 146351.714 ops/s
# Warmup Iteration  12: 141604.057 ops/s
# Warmup Iteration  13: 146287.764 ops/s
# Warmup Iteration  14: 138848.516 ops/s
# Warmup Iteration  15: 144224.058 ops/s
# Warmup Iteration  16: 142172.314 ops/s
# Warmup Iteration  17: 153343.972 ops/s
# Warmup Iteration  18: 143689.741 ops/s
# Warmup Iteration  19: 150915.234 ops/s
# Warmup Iteration  20: 158828.076 ops/s
# Warmup Iteration  21: 149768.687 ops/s
# Warmup Iteration  22: 154504.561 ops/s
# Warmup Iteration  23: 147449.215 ops/s
# Warmup Iteration  24: 148872.788 ops/s
# Warmup Iteration  25: 150300.830 ops/s
# Warmup Iteration  26: 145282.355 ops/s
# Warmup Iteration  27: 157982.003 ops/s
# Warmup Iteration  28: 157399.481 ops/s
# Warmup Iteration  29: 146413.030 ops/s
# Warmup Iteration  30: 153559.281 ops/s
Iteration   1: 151827.729 ops/s
Iteration   2: 155927.881 ops/s
Iteration   3: 147393.781 ops/s
Iteration   4: 150828.315 ops/s
Iteration   5: 151597.065 ops/s
Iteration   6: 157086.264 ops/s
Iteration   7: 148606.250 ops/s
Iteration   8: 158837.749 ops/s
Iteration   9: 148848.102 ops/s
Iteration  10: 155228.807 ops/s
Iteration  11: 148151.158 ops/s
Iteration  12: 155072.330 ops/s
Iteration  13: 151973.150 ops/s
Iteration  14: 150584.950 ops/s
Iteration  15: 148377.295 ops/s
Iteration  16: 150622.820 ops/s
Iteration  17: 156866.364 ops/s
Iteration  18: 150936.741 ops/s
Iteration  19: 146347.134 ops/s
Iteration  20: 146837.440 ops/s
Iteration  21: 148126.339 ops/s
Iteration  22: 144145.422 ops/s
Iteration  23: 150981.909 ops/s
Iteration  24: 156100.754 ops/s
Iteration  25: 146569.629 ops/s
Iteration  26: 156769.237 ops/s
Iteration  27: 151289.808 ops/s
Iteration  28: 153186.573 ops/s
Iteration  29: 150284.382 ops/s
Iteration  30: 149658.715 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_603._Benchmark.benchmark_Cluster_603":
  151302.136 ±(99.9%) 2511.894 ops/s [Average]
  (min, avg, max) = (144145.422, 151302.136, 158837.749), stdev = 3759.685
  CI (99.9%): [148790.243, 153814.030] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_603._Benchmark.benchmark_Cluster_603  thrpt   30  151302.136 ± 2511.894  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_604._Benchmark.benchmark_Cluster_604$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_604._Benchmark.benchmark_Cluster_604

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4453.332 ops/s
# Warmup Iteration   2: 21180.053 ops/s
# Warmup Iteration   3: 24152.770 ops/s
# Warmup Iteration   4: 23416.622 ops/s
# Warmup Iteration   5: 18920.642 ops/s
# Warmup Iteration   6: 24324.382 ops/s
# Warmup Iteration   7: 18105.376 ops/s
# Warmup Iteration   8: 18876.847 ops/s
# Warmup Iteration   9: 19500.550 ops/s
# Warmup Iteration  10: 19097.330 ops/s
# Warmup Iteration  11: 18567.154 ops/s
# Warmup Iteration  12: 18994.266 ops/s
# Warmup Iteration  13: 19474.718 ops/s
# Warmup Iteration  14: 19104.141 ops/s
# Warmup Iteration  15: 22629.608 ops/s
# Warmup Iteration  16: 20002.420 ops/s
# Warmup Iteration  17: 18906.360 ops/s
# Warmup Iteration  18: 18885.295 ops/s
# Warmup Iteration  19: 19536.879 ops/s
# Warmup Iteration  20: 19384.541 ops/s
# Warmup Iteration  21: 19420.311 ops/s
# Warmup Iteration  22: 19175.709 ops/s
# Warmup Iteration  23: 18647.426 ops/s
# Warmup Iteration  24: 18961.606 ops/s
# Warmup Iteration  25: 18455.638 ops/s
# Warmup Iteration  26: 18958.897 ops/s
# Warmup Iteration  27: 19300.119 ops/s
# Warmup Iteration  28: 18512.057 ops/s
# Warmup Iteration  29: 19140.538 ops/s
# Warmup Iteration  30: 19078.943 ops/s
Iteration   1: 19253.857 ops/s
Iteration   2: 18955.666 ops/s
Iteration   3: 19705.198 ops/s
Iteration   4: 18708.518 ops/s
Iteration   5: 19652.617 ops/s
Iteration   6: 19492.217 ops/s
Iteration   7: 18791.327 ops/s
Iteration   8: 18996.156 ops/s
Iteration   9: 18878.480 ops/s
Iteration  10: 19064.244 ops/s
Iteration  11: 19075.329 ops/s
Iteration  12: 19414.121 ops/s
Iteration  13: 19073.244 ops/s
Iteration  14: 19104.207 ops/s
Iteration  15: 19215.802 ops/s
Iteration  16: 19521.142 ops/s
Iteration  17: 19085.626 ops/s
Iteration  18: 19356.401 ops/s
Iteration  19: 19536.076 ops/s
Iteration  20: 18898.351 ops/s
Iteration  21: 19055.532 ops/s
Iteration  22: 19069.327 ops/s
Iteration  23: 19297.487 ops/s
Iteration  24: 19335.898 ops/s
Iteration  25: 18991.713 ops/s
Iteration  26: 18433.458 ops/s
Iteration  27: 19537.016 ops/s
Iteration  28: 18942.113 ops/s
Iteration  29: 19125.640 ops/s
Iteration  30: 19251.304 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_604._Benchmark.benchmark_Cluster_604":
  19160.602 ±(99.9%) 194.196 ops/s [Average]
  (min, avg, max) = (18433.458, 19160.602, 19705.198), stdev = 290.663
  CI (99.9%): [18966.406, 19354.798] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_604._Benchmark.benchmark_Cluster_604  thrpt   30  19160.602 ± 194.196  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_605._Benchmark.benchmark_Cluster_605$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_605._Benchmark.benchmark_Cluster_605

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.732 ops/s
# Warmup Iteration   2: 11122.238 ops/s
# Warmup Iteration   3: 32821.173 ops/s
# Warmup Iteration   4: 42451.960 ops/s
# Warmup Iteration   5: 59869.913 ops/s
# Warmup Iteration   6: 35938.010 ops/s
# Warmup Iteration   7: 63628.717 ops/s
# Warmup Iteration   8: 92869.644 ops/s
# Warmup Iteration   9: 149187.213 ops/s
# Warmup Iteration  10: 154787.854 ops/s
# Warmup Iteration  11: 146158.001 ops/s
# Warmup Iteration  12: 153509.971 ops/s
# Warmup Iteration  13: 157952.205 ops/s
# Warmup Iteration  14: 147914.231 ops/s
# Warmup Iteration  15: 152452.555 ops/s
# Warmup Iteration  16: 151902.645 ops/s
# Warmup Iteration  17: 150313.424 ops/s
# Warmup Iteration  18: 152023.761 ops/s
# Warmup Iteration  19: 159502.497 ops/s
# Warmup Iteration  20: 148643.964 ops/s
# Warmup Iteration  21: 156405.332 ops/s
# Warmup Iteration  22: 149565.688 ops/s
# Warmup Iteration  23: 156590.058 ops/s
# Warmup Iteration  24: 145775.001 ops/s
# Warmup Iteration  25: 155115.164 ops/s
# Warmup Iteration  26: 154925.108 ops/s
# Warmup Iteration  27: 146171.626 ops/s
# Warmup Iteration  28: 150660.054 ops/s
# Warmup Iteration  29: 150902.866 ops/s
# Warmup Iteration  30: 152860.251 ops/s
Iteration   1: 155351.478 ops/s
Iteration   2: 149330.032 ops/s
Iteration   3: 154866.933 ops/s
Iteration   4: 157741.334 ops/s
Iteration   5: 150036.482 ops/s
Iteration   6: 154840.330 ops/s
Iteration   7: 152011.244 ops/s
Iteration   8: 151503.526 ops/s
Iteration   9: 155502.692 ops/s
Iteration  10: 149685.959 ops/s
Iteration  11: 158119.842 ops/s
Iteration  12: 148066.430 ops/s
Iteration  13: 151156.944 ops/s
Iteration  14: 153984.276 ops/s
Iteration  15: 150075.698 ops/s
Iteration  16: 149112.304 ops/s
Iteration  17: 151745.098 ops/s
Iteration  18: 152783.918 ops/s
Iteration  19: 154363.033 ops/s
Iteration  20: 154309.312 ops/s
Iteration  21: 149172.988 ops/s
Iteration  22: 150983.490 ops/s
Iteration  23: 153060.631 ops/s
Iteration  24: 152862.895 ops/s
Iteration  25: 153698.026 ops/s
Iteration  26: 153474.324 ops/s
Iteration  27: 153028.901 ops/s
Iteration  28: 155602.912 ops/s
Iteration  29: 149655.151 ops/s
Iteration  30: 156713.343 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_605._Benchmark.benchmark_Cluster_605":
  152761.318 ±(99.9%) 1801.579 ops/s [Average]
  (min, avg, max) = (148066.430, 152761.318, 158119.842), stdev = 2696.519
  CI (99.9%): [150959.738, 154562.897] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_605._Benchmark.benchmark_Cluster_605  thrpt   30  152761.318 ± 1801.579  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_606._Benchmark.benchmark_Cluster_606$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_606._Benchmark.benchmark_Cluster_606

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.691 ops/s
# Warmup Iteration   2: 3289.626 ops/s
# Warmup Iteration   3: 9769.267 ops/s
# Warmup Iteration   4: 21797.227 ops/s
# Warmup Iteration   5: 21810.758 ops/s
# Warmup Iteration   6: 27286.726 ops/s
# Warmup Iteration   7: 21820.360 ops/s
# Warmup Iteration   8: 16185.800 ops/s
# Warmup Iteration   9: 24659.738 ops/s
# Warmup Iteration  10: 33411.018 ops/s
# Warmup Iteration  11: 34319.659 ops/s
# Warmup Iteration  12: 36162.003 ops/s
# Warmup Iteration  13: 50745.062 ops/s
# Warmup Iteration  14: 48166.119 ops/s
# Warmup Iteration  15: 58293.325 ops/s
# Warmup Iteration  16: 49389.043 ops/s
# Warmup Iteration  17: 50436.947 ops/s
# Warmup Iteration  18: 56932.170 ops/s
# Warmup Iteration  19: 48887.341 ops/s
# Warmup Iteration  20: 53300.219 ops/s
# Warmup Iteration  21: 55709.150 ops/s
# Warmup Iteration  22: 52207.464 ops/s
# Warmup Iteration  23: 50908.761 ops/s
# Warmup Iteration  24: 54650.617 ops/s
# Warmup Iteration  25: 56739.196 ops/s
# Warmup Iteration  26: 56513.954 ops/s
# Warmup Iteration  27: 55580.298 ops/s
# Warmup Iteration  28: 57483.765 ops/s
# Warmup Iteration  29: 54641.741 ops/s
# Warmup Iteration  30: 51527.540 ops/s
Iteration   1: 56104.065 ops/s
Iteration   2: 52225.651 ops/s
Iteration   3: 51791.580 ops/s
Iteration   4: 54981.985 ops/s
Iteration   5: 51400.626 ops/s
Iteration   6: 57784.698 ops/s
Iteration   7: 54193.984 ops/s
Iteration   8: 54778.690 ops/s
Iteration   9: 52512.623 ops/s
Iteration  10: 52371.053 ops/s
Iteration  11: 53448.424 ops/s
Iteration  12: 50027.022 ops/s
Iteration  13: 57098.805 ops/s
Iteration  14: 53356.647 ops/s
Iteration  15: 52267.270 ops/s
Iteration  16: 51650.003 ops/s
Iteration  17: 56007.143 ops/s
Iteration  18: 53652.417 ops/s
Iteration  19: 51298.554 ops/s
Iteration  20: 48349.728 ops/s
Iteration  21: 54636.095 ops/s
Iteration  22: 56354.830 ops/s
Iteration  23: 53026.682 ops/s
Iteration  24: 49770.350 ops/s
Iteration  25: 52502.388 ops/s
Iteration  26: 54080.074 ops/s
Iteration  27: 57397.207 ops/s
Iteration  28: 51799.556 ops/s
Iteration  29: 56461.030 ops/s
Iteration  30: 54216.529 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_606._Benchmark.benchmark_Cluster_606":
  53518.190 ±(99.9%) 1572.105 ops/s [Average]
  (min, avg, max) = (48349.728, 53518.190, 57784.698), stdev = 2353.053
  CI (99.9%): [51946.085, 55090.295] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_606._Benchmark.benchmark_Cluster_606  thrpt   30  53518.190 ± 1572.105  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_607._Benchmark.benchmark_Cluster_607$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_607._Benchmark.benchmark_Cluster_607

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.736 ops/s
# Warmup Iteration   2: 10674.477 ops/s
# Warmup Iteration   3: 29570.783 ops/s
# Warmup Iteration   4: 37391.141 ops/s
# Warmup Iteration   5: 53024.903 ops/s
# Warmup Iteration   6: 48085.692 ops/s
# Warmup Iteration   7: 46833.613 ops/s
# Warmup Iteration   8: 95696.112 ops/s
# Warmup Iteration   9: 100423.528 ops/s
# Warmup Iteration  10: 116272.629 ops/s
# Warmup Iteration  11: 115263.599 ops/s
# Warmup Iteration  12: 113268.419 ops/s
# Warmup Iteration  13: 117745.485 ops/s
# Warmup Iteration  14: 115327.150 ops/s
# Warmup Iteration  15: 113553.837 ops/s
# Warmup Iteration  16: 114329.990 ops/s
# Warmup Iteration  17: 115269.256 ops/s
# Warmup Iteration  18: 116530.786 ops/s
# Warmup Iteration  19: 115009.075 ops/s
# Warmup Iteration  20: 121514.907 ops/s
# Warmup Iteration  21: 110068.131 ops/s
# Warmup Iteration  22: 118871.467 ops/s
# Warmup Iteration  23: 113104.803 ops/s
# Warmup Iteration  24: 114437.992 ops/s
# Warmup Iteration  25: 117203.309 ops/s
# Warmup Iteration  26: 114926.984 ops/s
# Warmup Iteration  27: 118087.831 ops/s
# Warmup Iteration  28: 115096.830 ops/s
# Warmup Iteration  29: 117638.404 ops/s
# Warmup Iteration  30: 114610.367 ops/s
Iteration   1: 113527.011 ops/s
Iteration   2: 118929.687 ops/s
Iteration   3: 114858.785 ops/s
Iteration   4: 117491.697 ops/s
Iteration   5: 116326.272 ops/s
Iteration   6: 115249.155 ops/s
Iteration   7: 120736.994 ops/s
Iteration   8: 113345.605 ops/s
Iteration   9: 114666.867 ops/s
Iteration  10: 116807.277 ops/s
Iteration  11: 113906.994 ops/s
Iteration  12: 117845.786 ops/s
Iteration  13: 112840.863 ops/s
Iteration  14: 117041.106 ops/s
Iteration  15: 119271.523 ops/s
Iteration  16: 114463.032 ops/s
Iteration  17: 115379.790 ops/s
Iteration  18: 116938.050 ops/s
Iteration  19: 113486.217 ops/s
Iteration  20: 118391.786 ops/s
Iteration  21: 113695.461 ops/s
Iteration  22: 118190.187 ops/s
Iteration  23: 114991.342 ops/s
Iteration  24: 116686.369 ops/s
Iteration  25: 121739.100 ops/s
Iteration  26: 111040.862 ops/s
Iteration  27: 114668.389 ops/s
Iteration  28: 118897.417 ops/s
Iteration  29: 115362.102 ops/s
Iteration  30: 119626.818 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_607._Benchmark.benchmark_Cluster_607":
  116213.418 ±(99.9%) 1698.930 ops/s [Average]
  (min, avg, max) = (111040.862, 116213.418, 121739.100), stdev = 2542.878
  CI (99.9%): [114514.489, 117912.348] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_607._Benchmark.benchmark_Cluster_607  thrpt   30  116213.418 ± 1698.930  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_608._Benchmark.benchmark_Cluster_608$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_608._Benchmark.benchmark_Cluster_608

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 34459.332 ops/s
# Warmup Iteration   2: 65106.738 ops/s
# Warmup Iteration   3: 125505.240 ops/s
# Warmup Iteration   4: 126563.125 ops/s
# Warmup Iteration   5: 132097.857 ops/s
# Warmup Iteration   6: 128438.535 ops/s
# Warmup Iteration   7: 129054.302 ops/s
# Warmup Iteration   8: 136840.221 ops/s
# Warmup Iteration   9: 128991.584 ops/s
# Warmup Iteration  10: 128351.399 ops/s
# Warmup Iteration  11: 130204.099 ops/s
# Warmup Iteration  12: 135045.617 ops/s
# Warmup Iteration  13: 136762.298 ops/s
# Warmup Iteration  14: 129289.078 ops/s
# Warmup Iteration  15: 132485.458 ops/s
# Warmup Iteration  16: 136673.949 ops/s
# Warmup Iteration  17: 134647.194 ops/s
# Warmup Iteration  18: 142914.350 ops/s
# Warmup Iteration  19: 143489.749 ops/s
# Warmup Iteration  20: 135753.577 ops/s
# Warmup Iteration  21: 144116.798 ops/s
# Warmup Iteration  22: 137612.004 ops/s
# Warmup Iteration  23: 139991.947 ops/s
# Warmup Iteration  24: 136776.662 ops/s
# Warmup Iteration  25: 137933.470 ops/s
# Warmup Iteration  26: 143723.780 ops/s
# Warmup Iteration  27: 136047.284 ops/s
# Warmup Iteration  28: 138961.887 ops/s
# Warmup Iteration  29: 137995.135 ops/s
# Warmup Iteration  30: 140368.384 ops/s
Iteration   1: 137277.611 ops/s
Iteration   2: 134076.431 ops/s
Iteration   3: 143711.266 ops/s
Iteration   4: 139237.535 ops/s
Iteration   5: 133009.884 ops/s
Iteration   6: 143998.751 ops/s
Iteration   7: 135878.912 ops/s
Iteration   8: 140605.363 ops/s
Iteration   9: 142362.232 ops/s
Iteration  10: 137829.372 ops/s
Iteration  11: 139591.824 ops/s
Iteration  12: 134377.364 ops/s
Iteration  13: 139025.637 ops/s
Iteration  14: 144975.370 ops/s
Iteration  15: 145792.799 ops/s
Iteration  16: 134367.185 ops/s
Iteration  17: 145171.729 ops/s
Iteration  18: 139376.633 ops/s
Iteration  19: 135623.875 ops/s
Iteration  20: 142362.307 ops/s
Iteration  21: 137307.243 ops/s
Iteration  22: 142906.794 ops/s
Iteration  23: 133411.595 ops/s
Iteration  24: 139243.163 ops/s
Iteration  25: 141198.874 ops/s
Iteration  26: 137718.425 ops/s
Iteration  27: 144441.483 ops/s
Iteration  28: 135972.683 ops/s
Iteration  29: 143369.288 ops/s
Iteration  30: 137959.749 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_608._Benchmark.benchmark_Cluster_608":
  139406.046 ±(99.9%) 2576.217 ops/s [Average]
  (min, avg, max) = (133009.884, 139406.046, 145792.799), stdev = 3855.961
  CI (99.9%): [136829.829, 141982.263] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_608._Benchmark.benchmark_Cluster_608  thrpt   30  139406.046 ± 2576.217  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_609._Benchmark.benchmark_Cluster_609$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_609._Benchmark.benchmark_Cluster_609

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12169.093 ops/s
# Warmup Iteration   2: 30421.486 ops/s
# Warmup Iteration   3: 28097.568 ops/s
# Warmup Iteration   4: 30649.374 ops/s
# Warmup Iteration   5: 49963.532 ops/s
# Warmup Iteration   6: 85758.291 ops/s
# Warmup Iteration   7: 101464.400 ops/s
# Warmup Iteration   8: 101650.244 ops/s
# Warmup Iteration   9: 103660.066 ops/s
# Warmup Iteration  10: 98139.609 ops/s
# Warmup Iteration  11: 101962.553 ops/s
# Warmup Iteration  12: 103961.964 ops/s
# Warmup Iteration  13: 102718.680 ops/s
# Warmup Iteration  14: 101210.410 ops/s
# Warmup Iteration  15: 107474.291 ops/s
# Warmup Iteration  16: 100199.159 ops/s
# Warmup Iteration  17: 108716.338 ops/s
# Warmup Iteration  18: 108095.367 ops/s
# Warmup Iteration  19: 105186.310 ops/s
# Warmup Iteration  20: 111021.969 ops/s
# Warmup Iteration  21: 106628.732 ops/s
# Warmup Iteration  22: 110205.048 ops/s
# Warmup Iteration  23: 106671.541 ops/s
# Warmup Iteration  24: 107152.624 ops/s
# Warmup Iteration  25: 108290.371 ops/s
# Warmup Iteration  26: 103772.250 ops/s
# Warmup Iteration  27: 106361.176 ops/s
# Warmup Iteration  28: 108731.573 ops/s
# Warmup Iteration  29: 106085.080 ops/s
# Warmup Iteration  30: 111912.172 ops/s
Iteration   1: 107249.141 ops/s
Iteration   2: 109055.879 ops/s
Iteration   3: 108051.255 ops/s
Iteration   4: 108624.894 ops/s
Iteration   5: 108469.450 ops/s
Iteration   6: 106955.707 ops/s
Iteration   7: 110744.646 ops/s
Iteration   8: 105515.252 ops/s
Iteration   9: 112257.021 ops/s
Iteration  10: 105782.439 ops/s
Iteration  11: 108804.199 ops/s
Iteration  12: 110616.459 ops/s
Iteration  13: 107102.758 ops/s
Iteration  14: 106871.867 ops/s
Iteration  15: 111735.819 ops/s
Iteration  16: 106749.931 ops/s
Iteration  17: 110515.114 ops/s
Iteration  18: 105849.138 ops/s
Iteration  19: 108565.032 ops/s
Iteration  20: 112164.655 ops/s
Iteration  21: 105512.267 ops/s
Iteration  22: 109432.335 ops/s
Iteration  23: 112547.484 ops/s
Iteration  24: 103600.081 ops/s
Iteration  25: 110907.547 ops/s
Iteration  26: 107705.252 ops/s
Iteration  27: 108326.916 ops/s
Iteration  28: 108679.123 ops/s
Iteration  29: 81215.436 ops/s
Iteration  30: 112687.438 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_609._Benchmark.benchmark_Cluster_609":
  107743.151 ±(99.9%) 3698.375 ops/s [Average]
  (min, avg, max) = (81215.436, 107743.151, 112687.438), stdev = 5535.554
  CI (99.9%): [104044.776, 111441.526] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_609._Benchmark.benchmark_Cluster_609  thrpt   30  107743.151 ± 3698.375  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_61._Benchmark.benchmark_Cluster_61$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_61._Benchmark.benchmark_Cluster_61

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8569.983 ops/s
# Warmup Iteration   2: 29120.173 ops/s
# Warmup Iteration   3: 39208.220 ops/s
# Warmup Iteration   4: 51521.291 ops/s
# Warmup Iteration   5: 63725.718 ops/s
# Warmup Iteration   6: 53642.846 ops/s
# Warmup Iteration   7: 69087.083 ops/s
# Warmup Iteration   8: 63066.392 ops/s
# Warmup Iteration   9: 57875.034 ops/s
# Warmup Iteration  10: 65500.544 ops/s
# Warmup Iteration  11: 56739.381 ops/s
# Warmup Iteration  12: 57176.863 ops/s
# Warmup Iteration  13: 67865.049 ops/s
# Warmup Iteration  14: 66933.751 ops/s
# Warmup Iteration  15: 63278.371 ops/s
# Warmup Iteration  16: 64760.510 ops/s
# Warmup Iteration  17: 65280.868 ops/s
# Warmup Iteration  18: 62227.235 ops/s
# Warmup Iteration  19: 65970.666 ops/s
# Warmup Iteration  20: 65589.985 ops/s
# Warmup Iteration  21: 64661.493 ops/s
# Warmup Iteration  22: 66616.573 ops/s
# Warmup Iteration  23: 57460.213 ops/s
# Warmup Iteration  24: 63984.188 ops/s
# Warmup Iteration  25: 61287.715 ops/s
# Warmup Iteration  26: 67319.933 ops/s
# Warmup Iteration  27: 56008.672 ops/s
# Warmup Iteration  28: 63591.790 ops/s
# Warmup Iteration  29: 62740.055 ops/s
# Warmup Iteration  30: 63867.451 ops/s
Iteration   1: 62121.793 ops/s
Iteration   2: 63682.665 ops/s
Iteration   3: 62239.144 ops/s
Iteration   4: 60286.547 ops/s
Iteration   5: 72046.793 ops/s
Iteration   6: 76398.033 ops/s
Iteration   7: 65605.810 ops/s
Iteration   8: 65432.729 ops/s
Iteration   9: 57373.384 ops/s
Iteration  10: 72747.615 ops/s
Iteration  11: 72767.426 ops/s
Iteration  12: 50736.373 ops/s
Iteration  13: 61254.326 ops/s
Iteration  14: 69757.749 ops/s
Iteration  15: 56345.775 ops/s
Iteration  16: 64201.518 ops/s
Iteration  17: 59100.546 ops/s
Iteration  18: 62620.359 ops/s
Iteration  19: 60594.958 ops/s
Iteration  20: 77568.479 ops/s
Iteration  21: 71332.225 ops/s
Iteration  22: 57761.340 ops/s
Iteration  23: 67609.947 ops/s
Iteration  24: 57222.283 ops/s
Iteration  25: 65830.504 ops/s
Iteration  26: 63341.579 ops/s
Iteration  27: 53021.345 ops/s
Iteration  28: 63089.459 ops/s
Iteration  29: 66816.972 ops/s
Iteration  30: 56841.729 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_61._Benchmark.benchmark_Cluster_61":
  63858.314 ±(99.9%) 4426.773 ops/s [Average]
  (min, avg, max) = (50736.373, 63858.314, 77568.479), stdev = 6625.787
  CI (99.9%): [59431.540, 68285.087] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_61._Benchmark.benchmark_Cluster_61  thrpt   30  63858.314 ± 4426.773  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_610._Benchmark.benchmark_Cluster_610$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_610._Benchmark.benchmark_Cluster_610

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7559.647 ops/s
# Warmup Iteration   2: 28624.816 ops/s
# Warmup Iteration   3: 28336.235 ops/s
# Warmup Iteration   4: 50145.143 ops/s
# Warmup Iteration   5: 97834.719 ops/s
# Warmup Iteration   6: 97679.905 ops/s
# Warmup Iteration   7: 106445.297 ops/s
# Warmup Iteration   8: 97815.813 ops/s
# Warmup Iteration   9: 99492.427 ops/s
# Warmup Iteration  10: 102081.721 ops/s
# Warmup Iteration  11: 96884.799 ops/s
# Warmup Iteration  12: 101908.420 ops/s
# Warmup Iteration  13: 102745.454 ops/s
# Warmup Iteration  14: 102828.746 ops/s
# Warmup Iteration  15: 101938.356 ops/s
# Warmup Iteration  16: 104426.597 ops/s
# Warmup Iteration  17: 108651.105 ops/s
# Warmup Iteration  18: 101905.044 ops/s
# Warmup Iteration  19: 107605.874 ops/s
# Warmup Iteration  20: 101688.645 ops/s
# Warmup Iteration  21: 110655.830 ops/s
# Warmup Iteration  22: 107134.268 ops/s
# Warmup Iteration  23: 103895.091 ops/s
# Warmup Iteration  24: 105402.834 ops/s
# Warmup Iteration  25: 109448.775 ops/s
# Warmup Iteration  26: 104699.550 ops/s
# Warmup Iteration  27: 104938.540 ops/s
# Warmup Iteration  28: 110192.692 ops/s
# Warmup Iteration  29: 102284.050 ops/s
# Warmup Iteration  30: 107570.090 ops/s
Iteration   1: 105099.889 ops/s
Iteration   2: 108198.542 ops/s
Iteration   3: 108737.946 ops/s
Iteration   4: 105937.832 ops/s
Iteration   5: 107502.214 ops/s
Iteration   6: 104258.605 ops/s
Iteration   7: 105863.079 ops/s
Iteration   8: 109556.278 ops/s
Iteration   9: 103329.728 ops/s
Iteration  10: 107883.858 ops/s
Iteration  11: 104482.836 ops/s
Iteration  12: 110617.433 ops/s
Iteration  13: 103564.487 ops/s
Iteration  14: 105798.716 ops/s
Iteration  15: 109851.250 ops/s
Iteration  16: 104841.992 ops/s
Iteration  17: 109715.906 ops/s
Iteration  18: 111205.951 ops/s
Iteration  19: 104436.070 ops/s
Iteration  20: 108416.061 ops/s
Iteration  21: 72764.077 ops/s
Iteration  22: 103931.820 ops/s
Iteration  23: 101835.897 ops/s
Iteration  24: 106008.731 ops/s
Iteration  25: 109586.426 ops/s
Iteration  26: 105226.016 ops/s
Iteration  27: 106953.266 ops/s
Iteration  28: 107451.295 ops/s
Iteration  29: 107203.647 ops/s
Iteration  30: 109177.026 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_610._Benchmark.benchmark_Cluster_610":
  105647.896 ±(99.9%) 4451.309 ops/s [Average]
  (min, avg, max) = (72764.077, 105647.896, 111205.951), stdev = 6662.511
  CI (99.9%): [101196.587, 110099.205] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_610._Benchmark.benchmark_Cluster_610  thrpt   30  105647.896 ± 4451.309  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_611._Benchmark.benchmark_Cluster_611$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_611._Benchmark.benchmark_Cluster_611

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15131.020 ops/s
# Warmup Iteration   2: 62345.029 ops/s
# Warmup Iteration   3: 54968.295 ops/s
# Warmup Iteration   4: 86598.331 ops/s
# Warmup Iteration   5: 142675.799 ops/s
# Warmup Iteration   6: 135082.655 ops/s
# Warmup Iteration   7: 165022.395 ops/s
# Warmup Iteration   8: 161139.439 ops/s
# Warmup Iteration   9: 164795.688 ops/s
# Warmup Iteration  10: 166264.545 ops/s
# Warmup Iteration  11: 156982.699 ops/s
# Warmup Iteration  12: 166929.325 ops/s
# Warmup Iteration  13: 165994.551 ops/s
# Warmup Iteration  14: 163694.626 ops/s
# Warmup Iteration  15: 163752.693 ops/s
# Warmup Iteration  16: 160895.255 ops/s
# Warmup Iteration  17: 168654.093 ops/s
# Warmup Iteration  18: 174360.341 ops/s
# Warmup Iteration  19: 165887.374 ops/s
# Warmup Iteration  20: 167408.034 ops/s
# Warmup Iteration  21: 165875.446 ops/s
# Warmup Iteration  22: 165556.561 ops/s
# Warmup Iteration  23: 176501.012 ops/s
# Warmup Iteration  24: 160339.517 ops/s
# Warmup Iteration  25: 169274.542 ops/s
# Warmup Iteration  26: 174096.055 ops/s
# Warmup Iteration  27: 163042.430 ops/s
# Warmup Iteration  28: 169263.397 ops/s
# Warmup Iteration  29: 163358.825 ops/s
# Warmup Iteration  30: 170441.965 ops/s
Iteration   1: 168125.337 ops/s
Iteration   2: 168261.484 ops/s
Iteration   3: 172858.885 ops/s
Iteration   4: 165260.142 ops/s
Iteration   5: 172381.858 ops/s
Iteration   6: 167724.963 ops/s
Iteration   7: 165211.883 ops/s
Iteration   8: 172535.160 ops/s
Iteration   9: 166634.002 ops/s
Iteration  10: 170878.054 ops/s
Iteration  11: 166520.651 ops/s
Iteration  12: 172033.671 ops/s
Iteration  13: 166142.876 ops/s
Iteration  14: 166554.874 ops/s
Iteration  15: 158118.223 ops/s
Iteration  16: 167492.019 ops/s
Iteration  17: 168700.029 ops/s
Iteration  18: 162992.897 ops/s
Iteration  19: 165469.339 ops/s
Iteration  20: 171066.061 ops/s
Iteration  21: 163065.508 ops/s
Iteration  22: 173175.065 ops/s
Iteration  23: 166338.492 ops/s
Iteration  24: 169458.104 ops/s
Iteration  25: 169075.391 ops/s
Iteration  26: 172183.148 ops/s
Iteration  27: 163859.600 ops/s
Iteration  28: 173817.494 ops/s
Iteration  29: 164643.866 ops/s
Iteration  30: 172974.678 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_611._Benchmark.benchmark_Cluster_611":
  168118.458 ±(99.9%) 2522.788 ops/s [Average]
  (min, avg, max) = (158118.223, 168118.458, 173817.494), stdev = 3775.990
  CI (99.9%): [165595.671, 170641.246] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_611._Benchmark.benchmark_Cluster_611  thrpt   30  168118.458 ± 2522.788  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_612._Benchmark.benchmark_Cluster_612$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_612._Benchmark.benchmark_Cluster_612

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7570.601 ops/s
# Warmup Iteration   2: 53892.200 ops/s
# Warmup Iteration   3: 87536.272 ops/s
# Warmup Iteration   4: 112602.010 ops/s
# Warmup Iteration   5: 109487.034 ops/s
# Warmup Iteration   6: 108959.835 ops/s
# Warmup Iteration   7: 113081.143 ops/s
# Warmup Iteration   8: 125312.522 ops/s
# Warmup Iteration   9: 112424.412 ops/s
# Warmup Iteration  10: 117799.765 ops/s
# Warmup Iteration  11: 121464.077 ops/s
# Warmup Iteration  12: 116156.806 ops/s
# Warmup Iteration  13: 121329.787 ops/s
# Warmup Iteration  14: 116924.004 ops/s
# Warmup Iteration  15: 122402.475 ops/s
# Warmup Iteration  16: 114595.542 ops/s
# Warmup Iteration  17: 122364.899 ops/s
# Warmup Iteration  18: 124413.700 ops/s
# Warmup Iteration  19: 123845.119 ops/s
# Warmup Iteration  20: 125883.166 ops/s
# Warmup Iteration  21: 121417.528 ops/s
# Warmup Iteration  22: 124823.954 ops/s
# Warmup Iteration  23: 125229.709 ops/s
# Warmup Iteration  24: 118504.362 ops/s
# Warmup Iteration  25: 118551.535 ops/s
# Warmup Iteration  26: 126776.507 ops/s
# Warmup Iteration  27: 118081.187 ops/s
# Warmup Iteration  28: 122663.792 ops/s
# Warmup Iteration  29: 125989.649 ops/s
# Warmup Iteration  30: 118690.572 ops/s
Iteration   1: 128043.946 ops/s
Iteration   2: 118247.989 ops/s
Iteration   3: 126038.711 ops/s
Iteration   4: 113780.149 ops/s
Iteration   5: 122621.994 ops/s
Iteration   6: 126622.925 ops/s
Iteration   7: 122114.194 ops/s
Iteration   8: 127975.554 ops/s
Iteration   9: 120479.444 ops/s
Iteration  10: 126969.318 ops/s
Iteration  11: 120203.160 ops/s
Iteration  12: 125435.219 ops/s
Iteration  13: 126304.094 ops/s
Iteration  14: 127558.775 ops/s
Iteration  15: 89843.308 ops/s
Iteration  16: 120142.636 ops/s
Iteration  17: 128234.670 ops/s
Iteration  18: 120668.397 ops/s
Iteration  19: 125597.709 ops/s
Iteration  20: 121133.016 ops/s
Iteration  21: 123085.523 ops/s
Iteration  22: 125826.321 ops/s
Iteration  23: 123391.188 ops/s
Iteration  24: 125536.026 ops/s
Iteration  25: 124943.444 ops/s
Iteration  26: 123097.196 ops/s
Iteration  27: 125990.182 ops/s
Iteration  28: 123433.271 ops/s
Iteration  29: 121058.256 ops/s
Iteration  30: 118157.237 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_612._Benchmark.benchmark_Cluster_612":
  122417.795 ±(99.9%) 4714.135 ops/s [Average]
  (min, avg, max) = (89843.308, 122417.795, 128234.670), stdev = 7055.895
  CI (99.9%): [117703.660, 127131.930] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_612._Benchmark.benchmark_Cluster_612  thrpt   30  122417.795 ± 4714.135  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_613._Benchmark.benchmark_Cluster_613$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_613._Benchmark.benchmark_Cluster_613

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19167.936 ops/s
# Warmup Iteration   2: 55696.559 ops/s
# Warmup Iteration   3: 101428.528 ops/s
# Warmup Iteration   4: 107323.394 ops/s
# Warmup Iteration   5: 112046.348 ops/s
# Warmup Iteration   6: 118656.353 ops/s
# Warmup Iteration   7: 118033.461 ops/s
# Warmup Iteration   8: 129952.825 ops/s
# Warmup Iteration   9: 119404.199 ops/s
# Warmup Iteration  10: 123625.533 ops/s
# Warmup Iteration  11: 123235.524 ops/s
# Warmup Iteration  12: 121593.039 ops/s
# Warmup Iteration  13: 125523.175 ops/s
# Warmup Iteration  14: 126978.511 ops/s
# Warmup Iteration  15: 120733.822 ops/s
# Warmup Iteration  16: 123880.645 ops/s
# Warmup Iteration  17: 127762.847 ops/s
# Warmup Iteration  18: 127867.141 ops/s
# Warmup Iteration  19: 130115.879 ops/s
# Warmup Iteration  20: 126636.760 ops/s
# Warmup Iteration  21: 127068.206 ops/s
# Warmup Iteration  22: 127710.798 ops/s
# Warmup Iteration  23: 125075.911 ops/s
# Warmup Iteration  24: 131688.720 ops/s
# Warmup Iteration  25: 124410.314 ops/s
# Warmup Iteration  26: 125819.744 ops/s
# Warmup Iteration  27: 134074.054 ops/s
# Warmup Iteration  28: 125962.814 ops/s
# Warmup Iteration  29: 126788.825 ops/s
# Warmup Iteration  30: 128693.097 ops/s
Iteration   1: 128818.298 ops/s
Iteration   2: 128369.493 ops/s
Iteration   3: 129303.075 ops/s
Iteration   4: 122058.193 ops/s
Iteration   5: 130707.828 ops/s
Iteration   6: 126176.969 ops/s
Iteration   7: 131029.857 ops/s
Iteration   8: 123443.300 ops/s
Iteration   9: 132847.860 ops/s
Iteration  10: 127535.414 ops/s
Iteration  11: 125663.177 ops/s
Iteration  12: 126021.586 ops/s
Iteration  13: 125693.732 ops/s
Iteration  14: 128691.701 ops/s
Iteration  15: 126074.706 ops/s
Iteration  16: 123072.392 ops/s
Iteration  17: 127125.102 ops/s
Iteration  18: 127228.244 ops/s
Iteration  19: 132031.984 ops/s
Iteration  20: 125190.150 ops/s
Iteration  21: 128500.286 ops/s
Iteration  22: 132044.354 ops/s
Iteration  23: 125914.901 ops/s
Iteration  24: 131486.269 ops/s
Iteration  25: 125301.433 ops/s
Iteration  26: 130911.809 ops/s
Iteration  27: 124685.976 ops/s
Iteration  28: 129631.451 ops/s
Iteration  29: 129941.476 ops/s
Iteration  30: 122757.340 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_613._Benchmark.benchmark_Cluster_613":
  127608.612 ±(99.9%) 2000.391 ops/s [Average]
  (min, avg, max) = (122058.193, 127608.612, 132847.860), stdev = 2994.091
  CI (99.9%): [125608.221, 129609.003] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_613._Benchmark.benchmark_Cluster_613  thrpt   30  127608.612 ± 2000.391  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_614._Benchmark.benchmark_Cluster_614$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_614._Benchmark.benchmark_Cluster_614

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.784 ops/s
# Warmup Iteration   2: 6973.197 ops/s
# Warmup Iteration   3: 25485.341 ops/s
# Warmup Iteration   4: 28516.685 ops/s
# Warmup Iteration   5: 36121.215 ops/s
# Warmup Iteration   6: 46131.381 ops/s
# Warmup Iteration   7: 48097.564 ops/s
# Warmup Iteration   8: 110726.470 ops/s
# Warmup Iteration   9: 108037.829 ops/s
# Warmup Iteration  10: 109616.066 ops/s
# Warmup Iteration  11: 108189.683 ops/s
# Warmup Iteration  12: 106061.294 ops/s
# Warmup Iteration  13: 108835.396 ops/s
# Warmup Iteration  14: 106418.677 ops/s
# Warmup Iteration  15: 108110.675 ops/s
# Warmup Iteration  16: 105550.736 ops/s
# Warmup Iteration  17: 110831.222 ops/s
# Warmup Iteration  18: 103539.783 ops/s
# Warmup Iteration  19: 104734.619 ops/s
# Warmup Iteration  20: 111982.588 ops/s
# Warmup Iteration  21: 104368.347 ops/s
# Warmup Iteration  22: 105869.913 ops/s
# Warmup Iteration  23: 107113.875 ops/s
# Warmup Iteration  24: 107954.124 ops/s
# Warmup Iteration  25: 112300.944 ops/s
# Warmup Iteration  26: 110746.924 ops/s
# Warmup Iteration  27: 107411.687 ops/s
# Warmup Iteration  28: 112587.655 ops/s
# Warmup Iteration  29: 107766.496 ops/s
# Warmup Iteration  30: 112359.540 ops/s
Iteration   1: 104578.900 ops/s
Iteration   2: 109528.628 ops/s
Iteration   3: 110798.037 ops/s
Iteration   4: 108811.980 ops/s
Iteration   5: 106924.362 ops/s
Iteration   6: 100053.169 ops/s
Iteration   7: 112369.267 ops/s
Iteration   8: 109425.719 ops/s
Iteration   9: 110290.093 ops/s
Iteration  10: 94731.661 ops/s
Iteration  11: 108033.672 ops/s
Iteration  12: 108314.694 ops/s
Iteration  13: 115688.405 ops/s
Iteration  14: 112698.369 ops/s
Iteration  15: 110572.576 ops/s
Iteration  16: 113085.445 ops/s
Iteration  17: 106376.586 ops/s
Iteration  18: 110777.567 ops/s
Iteration  19: 110755.865 ops/s
Iteration  20: 105656.470 ops/s
Iteration  21: 109351.141 ops/s
Iteration  22: 108023.861 ops/s
Iteration  23: 112865.682 ops/s
Iteration  24: 106621.871 ops/s
Iteration  25: 112250.062 ops/s
Iteration  26: 114161.753 ops/s
Iteration  27: 106032.554 ops/s
Iteration  28: 114137.098 ops/s
Iteration  29: 110150.512 ops/s
Iteration  30: 105911.666 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_614._Benchmark.benchmark_Cluster_614":
  108965.922 ±(99.9%) 2862.712 ops/s [Average]
  (min, avg, max) = (94731.661, 108965.922, 115688.405), stdev = 4284.773
  CI (99.9%): [106103.210, 111828.634] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_614._Benchmark.benchmark_Cluster_614  thrpt   30  108965.922 ± 2862.712  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_615._Benchmark.benchmark_Cluster_615$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_615._Benchmark.benchmark_Cluster_615

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12315.369 ops/s
# Warmup Iteration   2: 52921.210 ops/s
# Warmup Iteration   3: 88266.476 ops/s
# Warmup Iteration   4: 98843.015 ops/s
# Warmup Iteration   5: 101122.418 ops/s
# Warmup Iteration   6: 99802.367 ops/s
# Warmup Iteration   7: 99921.729 ops/s
# Warmup Iteration   8: 103692.637 ops/s
# Warmup Iteration   9: 99709.902 ops/s
# Warmup Iteration  10: 98337.307 ops/s
# Warmup Iteration  11: 102991.684 ops/s
# Warmup Iteration  12: 101214.356 ops/s
# Warmup Iteration  13: 105512.692 ops/s
# Warmup Iteration  14: 101406.040 ops/s
# Warmup Iteration  15: 101480.625 ops/s
# Warmup Iteration  16: 99193.879 ops/s
# Warmup Iteration  17: 110076.462 ops/s
# Warmup Iteration  18: 102680.163 ops/s
# Warmup Iteration  19: 103342.619 ops/s
# Warmup Iteration  20: 109480.346 ops/s
# Warmup Iteration  21: 104823.315 ops/s
# Warmup Iteration  22: 104015.283 ops/s
# Warmup Iteration  23: 109995.233 ops/s
# Warmup Iteration  24: 101516.145 ops/s
# Warmup Iteration  25: 99268.202 ops/s
# Warmup Iteration  26: 105503.812 ops/s
# Warmup Iteration  27: 107015.769 ops/s
# Warmup Iteration  28: 103967.199 ops/s
# Warmup Iteration  29: 105115.903 ops/s
# Warmup Iteration  30: 108991.997 ops/s
Iteration   1: 103196.105 ops/s
Iteration   2: 109219.332 ops/s
Iteration   3: 104861.404 ops/s
Iteration   4: 108272.600 ops/s
Iteration   5: 107155.430 ops/s
Iteration   6: 103511.525 ops/s
Iteration   7: 107753.721 ops/s
Iteration   8: 108963.609 ops/s
Iteration   9: 101889.851 ops/s
Iteration  10: 107950.976 ops/s
Iteration  11: 104140.384 ops/s
Iteration  12: 107196.044 ops/s
Iteration  13: 105225.324 ops/s
Iteration  14: 103186.264 ops/s
Iteration  15: 104479.087 ops/s
Iteration  16: 104952.179 ops/s
Iteration  17: 106582.285 ops/s
Iteration  18: 104890.516 ops/s
Iteration  19: 106463.656 ops/s
Iteration  20: 104936.806 ops/s
Iteration  21: 109192.316 ops/s
Iteration  22: 102447.513 ops/s
Iteration  23: 109590.691 ops/s
Iteration  24: 104282.736 ops/s
Iteration  25: 106473.047 ops/s
Iteration  26: 103435.222 ops/s
Iteration  27: 106206.944 ops/s
Iteration  28: 107974.393 ops/s
Iteration  29: 103876.117 ops/s
Iteration  30: 109683.662 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_615._Benchmark.benchmark_Cluster_615":
  105932.991 ±(99.9%) 1528.810 ops/s [Average]
  (min, avg, max) = (101889.851, 105932.991, 109683.662), stdev = 2288.251
  CI (99.9%): [104404.181, 107461.801] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_615._Benchmark.benchmark_Cluster_615  thrpt   30  105932.991 ± 1528.810  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_616._Benchmark.benchmark_Cluster_616$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_616._Benchmark.benchmark_Cluster_616

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8684.660 ops/s
# Warmup Iteration   2: 25436.707 ops/s
# Warmup Iteration   3: 41031.335 ops/s
# Warmup Iteration   4: 48397.362 ops/s
# Warmup Iteration   5: 43098.926 ops/s
# Warmup Iteration   6: 52527.474 ops/s
# Warmup Iteration   7: 67028.865 ops/s
# Warmup Iteration   8: 48684.826 ops/s
# Warmup Iteration   9: 48415.737 ops/s
# Warmup Iteration  10: 55769.906 ops/s
# Warmup Iteration  11: 50145.368 ops/s
# Warmup Iteration  12: 53438.397 ops/s
# Warmup Iteration  13: 55756.774 ops/s
# Warmup Iteration  14: 47034.035 ops/s
# Warmup Iteration  15: 56990.784 ops/s
# Warmup Iteration  16: 48623.510 ops/s
# Warmup Iteration  17: 45202.594 ops/s
# Warmup Iteration  18: 46766.174 ops/s
# Warmup Iteration  19: 43697.602 ops/s
# Warmup Iteration  20: 46846.189 ops/s
# Warmup Iteration  21: 48655.224 ops/s
# Warmup Iteration  22: 54950.337 ops/s
# Warmup Iteration  23: 40055.995 ops/s
# Warmup Iteration  24: 51007.698 ops/s
# Warmup Iteration  25: 58970.552 ops/s
# Warmup Iteration  26: 51402.377 ops/s
# Warmup Iteration  27: 43469.826 ops/s
# Warmup Iteration  28: 48692.783 ops/s
# Warmup Iteration  29: 48923.126 ops/s
# Warmup Iteration  30: 45122.349 ops/s
Iteration   1: 56240.473 ops/s
Iteration   2: 53321.857 ops/s
Iteration   3: 60600.917 ops/s
Iteration   4: 42675.192 ops/s
Iteration   5: 50776.490 ops/s
Iteration   6: 45629.315 ops/s
Iteration   7: 55338.522 ops/s
Iteration   8: 42219.113 ops/s
Iteration   9: 44691.031 ops/s
Iteration  10: 39189.123 ops/s
Iteration  11: 50216.489 ops/s
Iteration  12: 55342.304 ops/s
Iteration  13: 43380.236 ops/s
Iteration  14: 45607.838 ops/s
Iteration  15: 49063.760 ops/s
Iteration  16: 49741.822 ops/s
Iteration  17: 54537.675 ops/s
Iteration  18: 42670.664 ops/s
Iteration  19: 54111.785 ops/s
Iteration  20: 47591.175 ops/s
Iteration  21: 46351.736 ops/s
Iteration  22: 45533.405 ops/s
Iteration  23: 54374.317 ops/s
Iteration  24: 46928.809 ops/s
Iteration  25: 48724.680 ops/s
Iteration  26: 44232.297 ops/s
Iteration  27: 52459.943 ops/s
Iteration  28: 57190.689 ops/s
Iteration  29: 52075.468 ops/s
Iteration  30: 57043.096 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_616._Benchmark.benchmark_Cluster_616":
  49595.341 ±(99.9%) 3644.564 ops/s [Average]
  (min, avg, max) = (39189.123, 49595.341, 60600.917), stdev = 5455.012
  CI (99.9%): [45950.777, 53239.905] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_616._Benchmark.benchmark_Cluster_616  thrpt   30  49595.341 ± 3644.564  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_617._Benchmark.benchmark_Cluster_617$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_617._Benchmark.benchmark_Cluster_617

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20596.694 ops/s
# Warmup Iteration   2: 20103.372 ops/s
# Warmup Iteration   3: 22266.711 ops/s
# Warmup Iteration   4: 18982.311 ops/s
# Warmup Iteration   5: 20341.054 ops/s
# Warmup Iteration   6: 19944.198 ops/s
# Warmup Iteration   7: 19627.646 ops/s
# Warmup Iteration   8: 20504.652 ops/s
# Warmup Iteration   9: 19786.675 ops/s
# Warmup Iteration  10: 20215.261 ops/s
# Warmup Iteration  11: 20226.196 ops/s
# Warmup Iteration  12: 20300.922 ops/s
# Warmup Iteration  13: 19882.948 ops/s
# Warmup Iteration  14: 20059.600 ops/s
# Warmup Iteration  15: 20030.977 ops/s
# Warmup Iteration  16: 19472.242 ops/s
# Warmup Iteration  17: 20757.279 ops/s
# Warmup Iteration  18: 19975.792 ops/s
# Warmup Iteration  19: 20675.799 ops/s
# Warmup Iteration  20: 19652.874 ops/s
# Warmup Iteration  21: 19657.640 ops/s
# Warmup Iteration  22: 20214.548 ops/s
# Warmup Iteration  23: 19938.997 ops/s
# Warmup Iteration  24: 19289.137 ops/s
# Warmup Iteration  25: 20549.814 ops/s
# Warmup Iteration  26: 20054.447 ops/s
# Warmup Iteration  27: 20577.236 ops/s
# Warmup Iteration  28: 20123.846 ops/s
# Warmup Iteration  29: 20115.865 ops/s
# Warmup Iteration  30: 19973.355 ops/s
Iteration   1: 19979.872 ops/s
Iteration   2: 19982.286 ops/s
Iteration   3: 20117.962 ops/s
Iteration   4: 20566.196 ops/s
Iteration   5: 20040.103 ops/s
Iteration   6: 20776.107 ops/s
Iteration   7: 19988.757 ops/s
Iteration   8: 20519.551 ops/s
Iteration   9: 20048.134 ops/s
Iteration  10: 20565.186 ops/s
Iteration  11: 20089.733 ops/s
Iteration  12: 19660.789 ops/s
Iteration  13: 20410.416 ops/s
Iteration  14: 19844.186 ops/s
Iteration  15: 20670.629 ops/s
Iteration  16: 19574.638 ops/s
Iteration  17: 20604.201 ops/s
Iteration  18: 19878.981 ops/s
Iteration  19: 20873.560 ops/s
Iteration  20: 20543.233 ops/s
Iteration  21: 20197.097 ops/s
Iteration  22: 20739.278 ops/s
Iteration  23: 20255.457 ops/s
Iteration  24: 20106.780 ops/s
Iteration  25: 20122.302 ops/s
Iteration  26: 20097.710 ops/s
Iteration  27: 19640.374 ops/s
Iteration  28: 20190.759 ops/s
Iteration  29: 20353.296 ops/s
Iteration  30: 20486.771 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_617._Benchmark.benchmark_Cluster_617":
  20230.812 ±(99.9%) 233.138 ops/s [Average]
  (min, avg, max) = (19574.638, 20230.812, 20873.560), stdev = 348.950
  CI (99.9%): [19997.674, 20463.949] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_617._Benchmark.benchmark_Cluster_617  thrpt   30  20230.812 ± 233.138  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_618._Benchmark.benchmark_Cluster_618$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_618._Benchmark.benchmark_Cluster_618

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1518.063 ops/s
# Warmup Iteration   2: 7372.750 ops/s
# Warmup Iteration   3: 21521.450 ops/s
# Warmup Iteration   4: 23598.691 ops/s
# Warmup Iteration   5: 22193.933 ops/s
# Warmup Iteration   6: 24896.334 ops/s
# Warmup Iteration   7: 22711.237 ops/s
# Warmup Iteration   8: 29218.648 ops/s
# Warmup Iteration   9: 48790.343 ops/s
# Warmup Iteration  10: 46485.755 ops/s
# Warmup Iteration  11: 50960.940 ops/s
# Warmup Iteration  12: 48129.729 ops/s
# Warmup Iteration  13: 49777.426 ops/s
# Warmup Iteration  14: 50420.700 ops/s
# Warmup Iteration  15: 46260.172 ops/s
# Warmup Iteration  16: 47056.245 ops/s
# Warmup Iteration  17: 47727.010 ops/s
# Warmup Iteration  18: 52352.068 ops/s
# Warmup Iteration  19: 52618.183 ops/s
# Warmup Iteration  20: 48861.190 ops/s
# Warmup Iteration  21: 50910.481 ops/s
# Warmup Iteration  22: 48506.972 ops/s
# Warmup Iteration  23: 51158.219 ops/s
# Warmup Iteration  24: 51312.016 ops/s
# Warmup Iteration  25: 50004.241 ops/s
# Warmup Iteration  26: 43527.746 ops/s
# Warmup Iteration  27: 47251.734 ops/s
# Warmup Iteration  28: 49653.293 ops/s
# Warmup Iteration  29: 46188.157 ops/s
# Warmup Iteration  30: 50859.680 ops/s
Iteration   1: 54292.773 ops/s
Iteration   2: 47762.157 ops/s
Iteration   3: 52491.226 ops/s
Iteration   4: 50315.802 ops/s
Iteration   5: 50238.913 ops/s
Iteration   6: 47643.205 ops/s
Iteration   7: 49026.981 ops/s
Iteration   8: 47828.507 ops/s
Iteration   9: 50372.825 ops/s
Iteration  10: 50392.582 ops/s
Iteration  11: 50570.415 ops/s
Iteration  12: 48121.344 ops/s
Iteration  13: 51907.378 ops/s
Iteration  14: 50727.311 ops/s
Iteration  15: 47836.599 ops/s
Iteration  16: 49682.505 ops/s
Iteration  17: 46216.266 ops/s
Iteration  18: 47069.273 ops/s
Iteration  19: 51366.215 ops/s
Iteration  20: 49913.072 ops/s
Iteration  21: 57083.583 ops/s
Iteration  22: 53146.715 ops/s
Iteration  23: 50480.825 ops/s
Iteration  24: 53338.509 ops/s
Iteration  25: 47980.495 ops/s
Iteration  26: 45792.000 ops/s
Iteration  27: 52035.544 ops/s
Iteration  28: 51283.010 ops/s
Iteration  29: 49886.722 ops/s
Iteration  30: 52757.349 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_618._Benchmark.benchmark_Cluster_618":
  50252.003 ±(99.9%) 1681.227 ops/s [Average]
  (min, avg, max) = (45792.000, 50252.003, 57083.583), stdev = 2516.381
  CI (99.9%): [48570.777, 51933.230] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_618._Benchmark.benchmark_Cluster_618  thrpt   30  50252.003 ± 1681.227  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_619._Benchmark.benchmark_Cluster_619$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_619._Benchmark.benchmark_Cluster_619

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13637.233 ops/s
# Warmup Iteration   2: 32835.419 ops/s
# Warmup Iteration   3: 45561.710 ops/s
# Warmup Iteration   4: 101078.570 ops/s
# Warmup Iteration   5: 114836.617 ops/s
# Warmup Iteration   6: 127739.595 ops/s
# Warmup Iteration   7: 118698.578 ops/s
# Warmup Iteration   8: 131423.141 ops/s
# Warmup Iteration   9: 129242.948 ops/s
# Warmup Iteration  10: 128279.029 ops/s
# Warmup Iteration  11: 131538.265 ops/s
# Warmup Iteration  12: 130310.744 ops/s
# Warmup Iteration  13: 133233.386 ops/s
# Warmup Iteration  14: 128886.188 ops/s
# Warmup Iteration  15: 130096.181 ops/s
# Warmup Iteration  16: 129382.798 ops/s
# Warmup Iteration  17: 134722.424 ops/s
# Warmup Iteration  18: 140030.720 ops/s
# Warmup Iteration  19: 135102.417 ops/s
# Warmup Iteration  20: 135582.559 ops/s
# Warmup Iteration  21: 140625.557 ops/s
# Warmup Iteration  22: 136080.333 ops/s
# Warmup Iteration  23: 135554.044 ops/s
# Warmup Iteration  24: 136277.059 ops/s
# Warmup Iteration  25: 140483.690 ops/s
# Warmup Iteration  26: 134544.724 ops/s
# Warmup Iteration  27: 137373.193 ops/s
# Warmup Iteration  28: 137280.262 ops/s
# Warmup Iteration  29: 130425.619 ops/s
# Warmup Iteration  30: 139555.348 ops/s
Iteration   1: 140829.839 ops/s
Iteration   2: 135069.593 ops/s
Iteration   3: 139751.867 ops/s
Iteration   4: 135472.652 ops/s
Iteration   5: 134655.268 ops/s
Iteration   6: 142889.282 ops/s
Iteration   7: 132556.209 ops/s
Iteration   8: 142231.489 ops/s
Iteration   9: 135901.363 ops/s
Iteration  10: 140154.439 ops/s
Iteration  11: 136800.509 ops/s
Iteration  12: 138374.712 ops/s
Iteration  13: 138619.986 ops/s
Iteration  14: 135053.280 ops/s
Iteration  15: 137580.405 ops/s
Iteration  16: 136874.709 ops/s
Iteration  17: 134553.141 ops/s
Iteration  18: 139870.469 ops/s
Iteration  19: 134340.379 ops/s
Iteration  20: 138372.338 ops/s
Iteration  21: 135542.036 ops/s
Iteration  22: 140610.905 ops/s
Iteration  23: 142537.745 ops/s
Iteration  24: 130487.928 ops/s
Iteration  25: 141965.091 ops/s
Iteration  26: 133350.764 ops/s
Iteration  27: 144457.081 ops/s
Iteration  28: 133857.437 ops/s
Iteration  29: 133687.715 ops/s
Iteration  30: 143650.288 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_619._Benchmark.benchmark_Cluster_619":
  137669.964 ±(99.9%) 2456.549 ops/s [Average]
  (min, avg, max) = (130487.928, 137669.964, 144457.081), stdev = 3676.848
  CI (99.9%): [135213.415, 140126.513] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_619._Benchmark.benchmark_Cluster_619  thrpt   30  137669.964 ± 2456.549  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_62._Benchmark.benchmark_Cluster_62$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_62._Benchmark.benchmark_Cluster_62

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3062.782 ops/s
# Warmup Iteration   2: 14762.642 ops/s
# Warmup Iteration   3: 20529.128 ops/s
# Warmup Iteration   4: 31856.016 ops/s
# Warmup Iteration   5: 37364.170 ops/s
# Warmup Iteration   6: 38123.677 ops/s
# Warmup Iteration   7: 55375.367 ops/s
# Warmup Iteration   8: 54026.667 ops/s
# Warmup Iteration   9: 51503.863 ops/s
# Warmup Iteration  10: 49676.105 ops/s
# Warmup Iteration  11: 53074.259 ops/s
# Warmup Iteration  12: 57488.886 ops/s
# Warmup Iteration  13: 55173.663 ops/s
# Warmup Iteration  14: 54175.375 ops/s
# Warmup Iteration  15: 55581.507 ops/s
# Warmup Iteration  16: 54615.397 ops/s
# Warmup Iteration  17: 54277.753 ops/s
# Warmup Iteration  18: 60561.196 ops/s
# Warmup Iteration  19: 58307.564 ops/s
# Warmup Iteration  20: 42393.145 ops/s
# Warmup Iteration  21: 60892.117 ops/s
# Warmup Iteration  22: 57844.826 ops/s
# Warmup Iteration  23: 56302.466 ops/s
# Warmup Iteration  24: 61651.836 ops/s
# Warmup Iteration  25: 57195.488 ops/s
# Warmup Iteration  26: 57084.621 ops/s
# Warmup Iteration  27: 59515.784 ops/s
# Warmup Iteration  28: 57572.882 ops/s
# Warmup Iteration  29: 60743.948 ops/s
# Warmup Iteration  30: 57138.616 ops/s
Iteration   1: 54688.280 ops/s
Iteration   2: 54317.636 ops/s
Iteration   3: 54266.338 ops/s
Iteration   4: 60533.938 ops/s
Iteration   5: 55325.084 ops/s
Iteration   6: 52270.314 ops/s
Iteration   7: 56386.335 ops/s
Iteration   8: 51012.796 ops/s
Iteration   9: 56507.888 ops/s
Iteration  10: 54377.802 ops/s
Iteration  11: 54123.339 ops/s
Iteration  12: 53907.378 ops/s
Iteration  13: 56138.758 ops/s
Iteration  14: 60106.352 ops/s
Iteration  15: 55772.369 ops/s
Iteration  16: 58020.426 ops/s
Iteration  17: 61698.229 ops/s
Iteration  18: 55687.856 ops/s
Iteration  19: 54796.762 ops/s
Iteration  20: 59172.448 ops/s
Iteration  21: 57059.580 ops/s
Iteration  22: 50933.325 ops/s
Iteration  23: 51848.596 ops/s
Iteration  24: 57446.447 ops/s
Iteration  25: 52670.362 ops/s
Iteration  26: 58172.313 ops/s
Iteration  27: 57929.082 ops/s
Iteration  28: 52339.759 ops/s
Iteration  29: 58298.224 ops/s
Iteration  30: 52258.799 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_62._Benchmark.benchmark_Cluster_62":
  55602.227 ±(99.9%) 1909.810 ops/s [Average]
  (min, avg, max) = (50933.325, 55602.227, 61698.229), stdev = 2858.514
  CI (99.9%): [53692.417, 57512.037] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_62._Benchmark.benchmark_Cluster_62  thrpt   30  55602.227 ± 1909.810  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_620._Benchmark.benchmark_Cluster_620$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_620._Benchmark.benchmark_Cluster_620

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16666.861 ops/s
# Warmup Iteration   2: 42395.369 ops/s
# Warmup Iteration   3: 81051.770 ops/s
# Warmup Iteration   4: 96308.170 ops/s
# Warmup Iteration   5: 95690.565 ops/s
# Warmup Iteration   6: 94466.798 ops/s
# Warmup Iteration   7: 93026.862 ops/s
# Warmup Iteration   8: 97513.103 ops/s
# Warmup Iteration   9: 99850.109 ops/s
# Warmup Iteration  10: 93837.889 ops/s
# Warmup Iteration  11: 95057.352 ops/s
# Warmup Iteration  12: 98788.060 ops/s
# Warmup Iteration  13: 96219.074 ops/s
# Warmup Iteration  14: 99724.393 ops/s
# Warmup Iteration  15: 97924.156 ops/s
# Warmup Iteration  16: 93035.759 ops/s
# Warmup Iteration  17: 100768.266 ops/s
# Warmup Iteration  18: 101820.969 ops/s
# Warmup Iteration  19: 100243.976 ops/s
# Warmup Iteration  20: 103003.817 ops/s
# Warmup Iteration  21: 97110.501 ops/s
# Warmup Iteration  22: 100506.843 ops/s
# Warmup Iteration  23: 100723.861 ops/s
# Warmup Iteration  24: 102636.787 ops/s
# Warmup Iteration  25: 101176.200 ops/s
# Warmup Iteration  26: 102736.541 ops/s
# Warmup Iteration  27: 104599.526 ops/s
# Warmup Iteration  28: 99005.964 ops/s
# Warmup Iteration  29: 104651.970 ops/s
# Warmup Iteration  30: 99889.616 ops/s
Iteration   1: 105237.576 ops/s
Iteration   2: 100283.210 ops/s
Iteration   3: 100709.333 ops/s
Iteration   4: 105776.641 ops/s
Iteration   5: 95859.967 ops/s
Iteration   6: 98783.593 ops/s
Iteration   7: 102193.213 ops/s
Iteration   8: 107355.810 ops/s
Iteration   9: 98041.829 ops/s
Iteration  10: 103307.903 ops/s
Iteration  11: 100782.865 ops/s
Iteration  12: 101709.239 ops/s
Iteration  13: 103837.363 ops/s
Iteration  14: 97846.080 ops/s
Iteration  15: 101449.806 ops/s
Iteration  16: 103144.882 ops/s
Iteration  17: 101958.012 ops/s
Iteration  18: 102535.028 ops/s
Iteration  19: 102925.839 ops/s
Iteration  20: 100178.020 ops/s
Iteration  21: 105360.412 ops/s
Iteration  22: 105313.805 ops/s
Iteration  23: 103151.561 ops/s
Iteration  24: 106616.598 ops/s
Iteration  25: 98664.060 ops/s
Iteration  26: 104979.173 ops/s
Iteration  27: 98570.830 ops/s
Iteration  28: 103694.181 ops/s
Iteration  29: 102807.008 ops/s
Iteration  30: 102472.945 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_620._Benchmark.benchmark_Cluster_620":
  102184.893 ±(99.9%) 1886.341 ops/s [Average]
  (min, avg, max) = (95859.967, 102184.893, 107355.810), stdev = 2823.387
  CI (99.9%): [100298.552, 104071.234] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_620._Benchmark.benchmark_Cluster_620  thrpt   30  102184.893 ± 1886.341  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_621._Benchmark.benchmark_Cluster_621$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_621._Benchmark.benchmark_Cluster_621

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5919.778 ops/s
# Warmup Iteration   2: 27454.066 ops/s
# Warmup Iteration   3: 41296.398 ops/s
# Warmup Iteration   4: 70137.680 ops/s
# Warmup Iteration   5: 93132.450 ops/s
# Warmup Iteration   6: 93178.561 ops/s
# Warmup Iteration   7: 95938.395 ops/s
# Warmup Iteration   8: 102586.414 ops/s
# Warmup Iteration   9: 101164.716 ops/s
# Warmup Iteration  10: 99117.309 ops/s
# Warmup Iteration  11: 91592.825 ops/s
# Warmup Iteration  12: 99111.893 ops/s
# Warmup Iteration  13: 92427.260 ops/s
# Warmup Iteration  14: 87599.480 ops/s
# Warmup Iteration  15: 95903.706 ops/s
# Warmup Iteration  16: 98193.917 ops/s
# Warmup Iteration  17: 113479.151 ops/s
# Warmup Iteration  18: 93325.132 ops/s
# Warmup Iteration  19: 106831.382 ops/s
# Warmup Iteration  20: 99411.229 ops/s
# Warmup Iteration  21: 102631.043 ops/s
# Warmup Iteration  22: 105229.967 ops/s
# Warmup Iteration  23: 105784.605 ops/s
# Warmup Iteration  24: 102813.951 ops/s
# Warmup Iteration  25: 101530.053 ops/s
# Warmup Iteration  26: 106151.350 ops/s
# Warmup Iteration  27: 114603.632 ops/s
# Warmup Iteration  28: 106548.550 ops/s
# Warmup Iteration  29: 102535.429 ops/s
# Warmup Iteration  30: 107974.650 ops/s
Iteration   1: 103852.692 ops/s
Iteration   2: 108793.119 ops/s
Iteration   3: 103963.918 ops/s
Iteration   4: 105336.676 ops/s
Iteration   5: 107078.325 ops/s
Iteration   6: 98482.822 ops/s
Iteration   7: 104200.776 ops/s
Iteration   8: 97890.428 ops/s
Iteration   9: 103633.544 ops/s
Iteration  10: 100195.633 ops/s
Iteration  11: 104683.916 ops/s
Iteration  12: 103102.684 ops/s
Iteration  13: 99579.459 ops/s
Iteration  14: 103263.787 ops/s
Iteration  15: 102019.757 ops/s
Iteration  16: 105142.603 ops/s
Iteration  17: 101484.291 ops/s
Iteration  18: 103569.627 ops/s
Iteration  19: 100334.199 ops/s
Iteration  20: 102699.166 ops/s
Iteration  21: 102883.914 ops/s
Iteration  22: 99397.757 ops/s
Iteration  23: 104775.995 ops/s
Iteration  24: 100307.691 ops/s
Iteration  25: 103923.406 ops/s
Iteration  26: 99159.369 ops/s
Iteration  27: 105288.334 ops/s
Iteration  28: 101243.351 ops/s
Iteration  29: 101591.462 ops/s
Iteration  30: 104956.039 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_621._Benchmark.benchmark_Cluster_621":
  102761.158 ±(99.9%) 1732.179 ops/s [Average]
  (min, avg, max) = (97890.428, 102761.158, 108793.119), stdev = 2592.644
  CI (99.9%): [101028.979, 104493.337] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_621._Benchmark.benchmark_Cluster_621  thrpt   30  102761.158 ± 1732.179  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_622._Benchmark.benchmark_Cluster_622$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_622._Benchmark.benchmark_Cluster_622

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15582.909 ops/s
# Warmup Iteration   2: 24987.811 ops/s
# Warmup Iteration   3: 48929.167 ops/s
# Warmup Iteration   4: 72612.784 ops/s
# Warmup Iteration   5: 101870.985 ops/s
# Warmup Iteration   6: 120282.924 ops/s
# Warmup Iteration   7: 113745.375 ops/s
# Warmup Iteration   8: 118422.541 ops/s
# Warmup Iteration   9: 116667.688 ops/s
# Warmup Iteration  10: 119204.316 ops/s
# Warmup Iteration  11: 117367.606 ops/s
# Warmup Iteration  12: 114031.798 ops/s
# Warmup Iteration  13: 117973.860 ops/s
# Warmup Iteration  14: 121240.559 ops/s
# Warmup Iteration  15: 114386.560 ops/s
# Warmup Iteration  16: 117977.778 ops/s
# Warmup Iteration  17: 120303.811 ops/s
# Warmup Iteration  18: 123203.700 ops/s
# Warmup Iteration  19: 122862.700 ops/s
# Warmup Iteration  20: 117883.456 ops/s
# Warmup Iteration  21: 122265.914 ops/s
# Warmup Iteration  22: 120648.592 ops/s
# Warmup Iteration  23: 119103.201 ops/s
# Warmup Iteration  24: 121825.158 ops/s
# Warmup Iteration  25: 118884.300 ops/s
# Warmup Iteration  26: 120369.838 ops/s
# Warmup Iteration  27: 123394.776 ops/s
# Warmup Iteration  28: 119855.968 ops/s
# Warmup Iteration  29: 122701.157 ops/s
# Warmup Iteration  30: 120400.452 ops/s
Iteration   1: 120911.011 ops/s
Iteration   2: 123334.346 ops/s
Iteration   3: 121330.500 ops/s
Iteration   4: 122021.890 ops/s
Iteration   5: 125073.051 ops/s
Iteration   6: 124855.574 ops/s
Iteration   7: 120691.632 ops/s
Iteration   8: 124882.714 ops/s
Iteration   9: 125662.669 ops/s
Iteration  10: 117902.163 ops/s
Iteration  11: 125950.696 ops/s
Iteration  12: 118819.236 ops/s
Iteration  13: 125669.230 ops/s
Iteration  14: 121000.663 ops/s
Iteration  15: 121318.978 ops/s
Iteration  16: 119983.474 ops/s
Iteration  17: 124175.922 ops/s
Iteration  18: 116204.480 ops/s
Iteration  19: 122565.902 ops/s
Iteration  20: 116440.407 ops/s
Iteration  21: 125257.823 ops/s
Iteration  22: 115965.323 ops/s
Iteration  23: 120384.145 ops/s
Iteration  24: 123159.594 ops/s
Iteration  25: 118064.536 ops/s
Iteration  26: 121299.784 ops/s
Iteration  27: 119230.332 ops/s
Iteration  28: 120981.196 ops/s
Iteration  29: 123209.164 ops/s
Iteration  30: 119465.824 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_622._Benchmark.benchmark_Cluster_622":
  121527.075 ±(99.9%) 1970.883 ops/s [Average]
  (min, avg, max) = (115965.323, 121527.075, 125950.696), stdev = 2949.925
  CI (99.9%): [119556.192, 123497.958] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_622._Benchmark.benchmark_Cluster_622  thrpt   30  121527.075 ± 1970.883  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_623._Benchmark.benchmark_Cluster_623$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_623._Benchmark.benchmark_Cluster_623

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.821 ops/s
# Warmup Iteration   2: 10627.178 ops/s
# Warmup Iteration   3: 36167.545 ops/s
# Warmup Iteration   4: 34741.684 ops/s
# Warmup Iteration   5: 37409.657 ops/s
# Warmup Iteration   6: 35110.582 ops/s
# Warmup Iteration   7: 61032.231 ops/s
# Warmup Iteration   8: 42962.791 ops/s
# Warmup Iteration   9: 67930.098 ops/s
# Warmup Iteration  10: 127096.304 ops/s
# Warmup Iteration  11: 173088.293 ops/s
# Warmup Iteration  12: 177785.483 ops/s
# Warmup Iteration  13: 172080.627 ops/s
# Warmup Iteration  14: 174638.308 ops/s
# Warmup Iteration  15: 175621.428 ops/s
# Warmup Iteration  16: 174539.812 ops/s
# Warmup Iteration  17: 182364.972 ops/s
# Warmup Iteration  18: 172408.452 ops/s
# Warmup Iteration  19: 182073.829 ops/s
# Warmup Iteration  20: 178884.101 ops/s
# Warmup Iteration  21: 171893.456 ops/s
# Warmup Iteration  22: 172937.820 ops/s
# Warmup Iteration  23: 179505.616 ops/s
# Warmup Iteration  24: 172542.130 ops/s
# Warmup Iteration  25: 167072.129 ops/s
# Warmup Iteration  26: 181854.992 ops/s
# Warmup Iteration  27: 172824.309 ops/s
# Warmup Iteration  28: 176315.664 ops/s
# Warmup Iteration  29: 184118.833 ops/s
# Warmup Iteration  30: 170140.424 ops/s
Iteration   1: 179215.085 ops/s
Iteration   2: 169565.633 ops/s
Iteration   3: 181142.535 ops/s
Iteration   4: 180136.266 ops/s
Iteration   5: 170082.123 ops/s
Iteration   6: 182547.650 ops/s
Iteration   7: 170978.237 ops/s
Iteration   8: 174777.342 ops/s
Iteration   9: 177691.562 ops/s
Iteration  10: 173664.536 ops/s
Iteration  11: 179534.762 ops/s
Iteration  12: 174224.210 ops/s
Iteration  13: 180864.124 ops/s
Iteration  14: 177674.830 ops/s
Iteration  15: 172185.950 ops/s
Iteration  16: 179346.382 ops/s
Iteration  17: 171726.623 ops/s
Iteration  18: 176095.416 ops/s
Iteration  19: 182323.325 ops/s
Iteration  20: 180049.227 ops/s
Iteration  21: 172824.928 ops/s
Iteration  22: 179146.297 ops/s
Iteration  23: 174469.643 ops/s
Iteration  24: 180141.402 ops/s
Iteration  25: 177376.186 ops/s
Iteration  26: 172088.516 ops/s
Iteration  27: 177882.175 ops/s
Iteration  28: 176353.406 ops/s
Iteration  29: 172650.877 ops/s
Iteration  30: 179906.560 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_623._Benchmark.benchmark_Cluster_623":
  176555.527 ±(99.9%) 2567.518 ops/s [Average]
  (min, avg, max) = (169565.633, 176555.527, 182547.650), stdev = 3842.941
  CI (99.9%): [173988.009, 179123.045] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_623._Benchmark.benchmark_Cluster_623  thrpt   30  176555.527 ± 2567.518  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_624._Benchmark.benchmark_Cluster_624$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_624._Benchmark.benchmark_Cluster_624

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.730 ops/s
# Warmup Iteration   2: 6607.234 ops/s
# Warmup Iteration   3: 30541.858 ops/s
# Warmup Iteration   4: 34408.036 ops/s
# Warmup Iteration   5: 27295.093 ops/s
# Warmup Iteration   6: 51845.196 ops/s
# Warmup Iteration   7: 64005.062 ops/s
# Warmup Iteration   8: 117927.675 ops/s
# Warmup Iteration   9: 130254.299 ops/s
# Warmup Iteration  10: 112074.561 ops/s
# Warmup Iteration  11: 122078.653 ops/s
# Warmup Iteration  12: 124446.206 ops/s
# Warmup Iteration  13: 130664.475 ops/s
# Warmup Iteration  14: 122724.520 ops/s
# Warmup Iteration  15: 129220.455 ops/s
# Warmup Iteration  16: 120585.063 ops/s
# Warmup Iteration  17: 129244.854 ops/s
# Warmup Iteration  18: 127195.603 ops/s
# Warmup Iteration  19: 123642.730 ops/s
# Warmup Iteration  20: 127159.799 ops/s
# Warmup Iteration  21: 124234.637 ops/s
# Warmup Iteration  22: 127043.759 ops/s
# Warmup Iteration  23: 122829.438 ops/s
# Warmup Iteration  24: 124824.623 ops/s
# Warmup Iteration  25: 126333.794 ops/s
# Warmup Iteration  26: 122621.769 ops/s
# Warmup Iteration  27: 124887.743 ops/s
# Warmup Iteration  28: 121105.276 ops/s
# Warmup Iteration  29: 127204.017 ops/s
# Warmup Iteration  30: 124227.221 ops/s
Iteration   1: 128002.590 ops/s
Iteration   2: 128438.979 ops/s
Iteration   3: 123388.640 ops/s
Iteration   4: 129034.007 ops/s
Iteration   5: 121424.905 ops/s
Iteration   6: 127093.367 ops/s
Iteration   7: 125872.154 ops/s
Iteration   8: 128556.823 ops/s
Iteration   9: 125406.516 ops/s
Iteration  10: 125565.821 ops/s
Iteration  11: 129547.718 ops/s
Iteration  12: 124904.656 ops/s
Iteration  13: 131452.833 ops/s
Iteration  14: 125335.116 ops/s
Iteration  15: 123700.378 ops/s
Iteration  16: 125847.735 ops/s
Iteration  17: 126652.095 ops/s
Iteration  18: 130188.960 ops/s
Iteration  19: 124901.411 ops/s
Iteration  20: 124615.357 ops/s
Iteration  21: 127247.881 ops/s
Iteration  22: 122007.497 ops/s
Iteration  23: 123567.809 ops/s
Iteration  24: 126764.227 ops/s
Iteration  25: 127916.892 ops/s
Iteration  26: 130861.837 ops/s
Iteration  27: 121078.114 ops/s
Iteration  28: 126197.523 ops/s
Iteration  29: 128129.073 ops/s
Iteration  30: 122308.249 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_624._Benchmark.benchmark_Cluster_624":
  126200.305 ±(99.9%) 1832.248 ops/s [Average]
  (min, avg, max) = (121078.114, 126200.305, 131452.833), stdev = 2742.423
  CI (99.9%): [124368.058, 128032.553] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_624._Benchmark.benchmark_Cluster_624  thrpt   30  126200.305 ± 1832.248  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_625._Benchmark.benchmark_Cluster_625$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_625._Benchmark.benchmark_Cluster_625

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5020.170 ops/s
# Warmup Iteration   2: 32461.156 ops/s
# Warmup Iteration   3: 62397.918 ops/s
# Warmup Iteration   4: 84261.693 ops/s
# Warmup Iteration   5: 108695.758 ops/s
# Warmup Iteration   6: 110920.241 ops/s
# Warmup Iteration   7: 109908.435 ops/s
# Warmup Iteration   8: 111673.026 ops/s
# Warmup Iteration   9: 111023.194 ops/s
# Warmup Iteration  10: 102301.233 ops/s
# Warmup Iteration  11: 107100.841 ops/s
# Warmup Iteration  12: 114026.946 ops/s
# Warmup Iteration  13: 108902.215 ops/s
# Warmup Iteration  14: 112637.719 ops/s
# Warmup Iteration  15: 111061.413 ops/s
# Warmup Iteration  16: 110796.078 ops/s
# Warmup Iteration  17: 115179.000 ops/s
# Warmup Iteration  18: 112202.954 ops/s
# Warmup Iteration  19: 116964.494 ops/s
# Warmup Iteration  20: 112682.596 ops/s
# Warmup Iteration  21: 115198.705 ops/s
# Warmup Iteration  22: 110505.974 ops/s
# Warmup Iteration  23: 116981.159 ops/s
# Warmup Iteration  24: 117808.230 ops/s
# Warmup Iteration  25: 113124.084 ops/s
# Warmup Iteration  26: 115059.846 ops/s
# Warmup Iteration  27: 114848.467 ops/s
# Warmup Iteration  28: 116179.926 ops/s
# Warmup Iteration  29: 111896.585 ops/s
# Warmup Iteration  30: 114056.596 ops/s
Iteration   1: 113518.909 ops/s
Iteration   2: 114262.057 ops/s
Iteration   3: 115355.303 ops/s
Iteration   4: 112716.165 ops/s
Iteration   5: 117262.827 ops/s
Iteration   6: 114857.078 ops/s
Iteration   7: 113692.560 ops/s
Iteration   8: 111900.496 ops/s
Iteration   9: 115599.155 ops/s
Iteration  10: 112239.288 ops/s
Iteration  11: 119007.863 ops/s
Iteration  12: 105800.913 ops/s
Iteration  13: 116942.159 ops/s
Iteration  14: 116666.528 ops/s
Iteration  15: 111198.964 ops/s
Iteration  16: 115082.997 ops/s
Iteration  17: 115571.977 ops/s
Iteration  18: 107105.472 ops/s
Iteration  19: 117643.931 ops/s
Iteration  20: 112652.449 ops/s
Iteration  21: 119237.740 ops/s
Iteration  22: 115836.936 ops/s
Iteration  23: 113661.180 ops/s
Iteration  24: 117139.733 ops/s
Iteration  25: 114264.631 ops/s
Iteration  26: 116618.414 ops/s
Iteration  27: 109489.915 ops/s
Iteration  28: 117285.184 ops/s
Iteration  29: 116910.742 ops/s
Iteration  30: 114228.330 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_625._Benchmark.benchmark_Cluster_625":
  114458.330 ±(99.9%) 2107.570 ops/s [Average]
  (min, avg, max) = (105800.913, 114458.330, 119237.740), stdev = 3154.512
  CI (99.9%): [112350.760, 116565.900] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_625._Benchmark.benchmark_Cluster_625  thrpt   30  114458.330 ± 2107.570  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_626._Benchmark.benchmark_Cluster_626$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_626._Benchmark.benchmark_Cluster_626

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6418.384 ops/s
# Warmup Iteration   2: 45790.123 ops/s
# Warmup Iteration   3: 73833.602 ops/s
# Warmup Iteration   4: 103363.345 ops/s
# Warmup Iteration   5: 115925.821 ops/s
# Warmup Iteration   6: 125981.683 ops/s
# Warmup Iteration   7: 117572.976 ops/s
# Warmup Iteration   8: 124082.083 ops/s
# Warmup Iteration   9: 121092.385 ops/s
# Warmup Iteration  10: 121738.376 ops/s
# Warmup Iteration  11: 125299.979 ops/s
# Warmup Iteration  12: 120121.126 ops/s
# Warmup Iteration  13: 124823.273 ops/s
# Warmup Iteration  14: 118937.442 ops/s
# Warmup Iteration  15: 121963.389 ops/s
# Warmup Iteration  16: 123019.067 ops/s
# Warmup Iteration  17: 124192.955 ops/s
# Warmup Iteration  18: 131828.115 ops/s
# Warmup Iteration  19: 124510.308 ops/s
# Warmup Iteration  20: 128222.244 ops/s
# Warmup Iteration  21: 131766.806 ops/s
# Warmup Iteration  22: 125085.486 ops/s
# Warmup Iteration  23: 124778.980 ops/s
# Warmup Iteration  24: 132763.376 ops/s
# Warmup Iteration  25: 127014.028 ops/s
# Warmup Iteration  26: 122570.387 ops/s
# Warmup Iteration  27: 132231.482 ops/s
# Warmup Iteration  28: 125907.145 ops/s
# Warmup Iteration  29: 125995.326 ops/s
# Warmup Iteration  30: 128634.245 ops/s
Iteration   1: 126784.102 ops/s
Iteration   2: 129459.621 ops/s
Iteration   3: 123442.650 ops/s
Iteration   4: 123956.394 ops/s
Iteration   5: 123990.170 ops/s
Iteration   6: 127342.508 ops/s
Iteration   7: 126748.644 ops/s
Iteration   8: 126154.448 ops/s
Iteration   9: 131728.770 ops/s
Iteration  10: 127014.023 ops/s
Iteration  11: 125849.030 ops/s
Iteration  12: 129319.988 ops/s
Iteration  13: 122433.023 ops/s
Iteration  14: 130664.894 ops/s
Iteration  15: 128125.300 ops/s
Iteration  16: 126144.788 ops/s
Iteration  17: 126110.005 ops/s
Iteration  18: 126504.918 ops/s
Iteration  19: 129690.678 ops/s
Iteration  20: 128493.942 ops/s
Iteration  21: 126506.588 ops/s
Iteration  22: 132497.060 ops/s
Iteration  23: 125565.337 ops/s
Iteration  24: 125711.239 ops/s
Iteration  25: 132160.280 ops/s
Iteration  26: 124681.657 ops/s
Iteration  27: 135105.064 ops/s
Iteration  28: 107896.730 ops/s
Iteration  29: 123393.332 ops/s
Iteration  30: 131547.497 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_626._Benchmark.benchmark_Cluster_626":
  126834.089 ±(99.9%) 3147.219 ops/s [Average]
  (min, avg, max) = (107896.730, 126834.089, 135105.064), stdev = 4710.609
  CI (99.9%): [123686.871, 129981.308] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_626._Benchmark.benchmark_Cluster_626  thrpt   30  126834.089 ± 3147.219  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_627._Benchmark.benchmark_Cluster_627$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_627._Benchmark.benchmark_Cluster_627

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19899.826 ops/s
# Warmup Iteration   2: 91806.424 ops/s
# Warmup Iteration   3: 128373.665 ops/s
# Warmup Iteration   4: 133174.785 ops/s
# Warmup Iteration   5: 127358.477 ops/s
# Warmup Iteration   6: 144318.177 ops/s
# Warmup Iteration   7: 143451.619 ops/s
# Warmup Iteration   8: 147271.969 ops/s
# Warmup Iteration   9: 148774.501 ops/s
# Warmup Iteration  10: 143613.452 ops/s
# Warmup Iteration  11: 143811.687 ops/s
# Warmup Iteration  12: 149642.636 ops/s
# Warmup Iteration  13: 143773.608 ops/s
# Warmup Iteration  14: 150358.358 ops/s
# Warmup Iteration  15: 143083.837 ops/s
# Warmup Iteration  16: 148985.725 ops/s
# Warmup Iteration  17: 146440.851 ops/s
# Warmup Iteration  18: 150182.898 ops/s
# Warmup Iteration  19: 156222.076 ops/s
# Warmup Iteration  20: 145124.023 ops/s
# Warmup Iteration  21: 155409.019 ops/s
# Warmup Iteration  22: 148196.873 ops/s
# Warmup Iteration  23: 151531.461 ops/s
# Warmup Iteration  24: 155166.045 ops/s
# Warmup Iteration  25: 148677.207 ops/s
# Warmup Iteration  26: 148276.584 ops/s
# Warmup Iteration  27: 154642.311 ops/s
# Warmup Iteration  28: 149857.892 ops/s
# Warmup Iteration  29: 155074.387 ops/s
# Warmup Iteration  30: 147758.867 ops/s
Iteration   1: 154677.734 ops/s
Iteration   2: 154917.050 ops/s
Iteration   3: 149823.096 ops/s
Iteration   4: 153870.406 ops/s
Iteration   5: 148448.490 ops/s
Iteration   6: 155379.491 ops/s
Iteration   7: 154514.637 ops/s
Iteration   8: 145299.745 ops/s
Iteration   9: 156706.251 ops/s
Iteration  10: 149254.050 ops/s
Iteration  11: 152407.630 ops/s
Iteration  12: 149569.714 ops/s
Iteration  13: 150433.994 ops/s
Iteration  14: 156527.312 ops/s
Iteration  15: 152649.089 ops/s
Iteration  16: 146966.299 ops/s
Iteration  17: 151383.378 ops/s
Iteration  18: 152975.568 ops/s
Iteration  19: 157721.456 ops/s
Iteration  20: 147989.544 ops/s
Iteration  21: 151604.295 ops/s
Iteration  22: 156321.686 ops/s
Iteration  23: 148658.626 ops/s
Iteration  24: 154010.254 ops/s
Iteration  25: 147245.788 ops/s
Iteration  26: 156006.672 ops/s
Iteration  27: 147567.378 ops/s
Iteration  28: 152430.220 ops/s
Iteration  29: 149049.678 ops/s
Iteration  30: 156918.962 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_627._Benchmark.benchmark_Cluster_627":
  152044.283 ±(99.9%) 2351.225 ops/s [Average]
  (min, avg, max) = (145299.745, 152044.283, 157721.456), stdev = 3519.203
  CI (99.9%): [149693.058, 154395.508] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_627._Benchmark.benchmark_Cluster_627  thrpt   30  152044.283 ± 2351.225  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_628._Benchmark.benchmark_Cluster_628$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_628._Benchmark.benchmark_Cluster_628

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3412.854 ops/s
# Warmup Iteration   2: 37400.682 ops/s
# Warmup Iteration   3: 75331.505 ops/s
# Warmup Iteration   4: 119999.472 ops/s
# Warmup Iteration   5: 131411.135 ops/s
# Warmup Iteration   6: 139109.329 ops/s
# Warmup Iteration   7: 141735.561 ops/s
# Warmup Iteration   8: 137350.917 ops/s
# Warmup Iteration   9: 135596.820 ops/s
# Warmup Iteration  10: 147910.741 ops/s
# Warmup Iteration  11: 139879.187 ops/s
# Warmup Iteration  12: 136172.052 ops/s
# Warmup Iteration  13: 143691.554 ops/s
# Warmup Iteration  14: 141124.534 ops/s
# Warmup Iteration  15: 141228.016 ops/s
# Warmup Iteration  16: 137024.399 ops/s
# Warmup Iteration  17: 138309.346 ops/s
# Warmup Iteration  18: 143530.505 ops/s
# Warmup Iteration  19: 138276.872 ops/s
# Warmup Iteration  20: 144610.066 ops/s
# Warmup Iteration  21: 137211.111 ops/s
# Warmup Iteration  22: 145489.071 ops/s
# Warmup Iteration  23: 141787.335 ops/s
# Warmup Iteration  24: 138015.107 ops/s
# Warmup Iteration  25: 143750.433 ops/s
# Warmup Iteration  26: 141056.303 ops/s
# Warmup Iteration  27: 146400.346 ops/s
# Warmup Iteration  28: 138197.125 ops/s
# Warmup Iteration  29: 143354.896 ops/s
# Warmup Iteration  30: 139322.384 ops/s
Iteration   1: 139690.384 ops/s
Iteration   2: 146253.917 ops/s
Iteration   3: 136964.529 ops/s
Iteration   4: 146878.413 ops/s
Iteration   5: 141440.481 ops/s
Iteration   6: 143094.694 ops/s
Iteration   7: 136688.553 ops/s
Iteration   8: 146805.011 ops/s
Iteration   9: 138091.790 ops/s
Iteration  10: 144609.797 ops/s
Iteration  11: 139451.608 ops/s
Iteration  12: 138554.933 ops/s
Iteration  13: 146288.186 ops/s
Iteration  14: 136112.218 ops/s
Iteration  15: 138723.959 ops/s
Iteration  16: 144910.806 ops/s
Iteration  17: 140483.696 ops/s
Iteration  18: 147635.767 ops/s
Iteration  19: 138902.425 ops/s
Iteration  20: 143157.069 ops/s
Iteration  21: 143939.670 ops/s
Iteration  22: 131613.365 ops/s
Iteration  23: 120953.690 ops/s
Iteration  24: 139660.823 ops/s
Iteration  25: 143382.742 ops/s
Iteration  26: 143185.206 ops/s
Iteration  27: 138409.821 ops/s
Iteration  28: 139842.682 ops/s
Iteration  29: 135016.184 ops/s
Iteration  30: 141454.804 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_628._Benchmark.benchmark_Cluster_628":
  140406.574 ±(99.9%) 3589.166 ops/s [Average]
  (min, avg, max) = (120953.690, 140406.574, 147635.767), stdev = 5372.095
  CI (99.9%): [136817.408, 143995.740] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_628._Benchmark.benchmark_Cluster_628  thrpt   30  140406.574 ± 3589.166  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_629._Benchmark.benchmark_Cluster_629$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_629._Benchmark.benchmark_Cluster_629

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8044.821 ops/s
# Warmup Iteration   2: 41195.058 ops/s
# Warmup Iteration   3: 87772.955 ops/s
# Warmup Iteration   4: 109563.239 ops/s
# Warmup Iteration   5: 119531.026 ops/s
# Warmup Iteration   6: 122676.236 ops/s
# Warmup Iteration   7: 118553.359 ops/s
# Warmup Iteration   8: 125040.349 ops/s
# Warmup Iteration   9: 119465.258 ops/s
# Warmup Iteration  10: 117930.348 ops/s
# Warmup Iteration  11: 122163.488 ops/s
# Warmup Iteration  12: 119457.776 ops/s
# Warmup Iteration  13: 120377.199 ops/s
# Warmup Iteration  14: 120268.779 ops/s
# Warmup Iteration  15: 123913.246 ops/s
# Warmup Iteration  16: 120777.217 ops/s
# Warmup Iteration  17: 125551.134 ops/s
# Warmup Iteration  18: 129988.151 ops/s
# Warmup Iteration  19: 120614.970 ops/s
# Warmup Iteration  20: 128010.212 ops/s
# Warmup Iteration  21: 120479.538 ops/s
# Warmup Iteration  22: 125395.615 ops/s
# Warmup Iteration  23: 130252.069 ops/s
# Warmup Iteration  24: 126035.436 ops/s
# Warmup Iteration  25: 121130.062 ops/s
# Warmup Iteration  26: 129100.534 ops/s
# Warmup Iteration  27: 122995.223 ops/s
# Warmup Iteration  28: 128706.513 ops/s
# Warmup Iteration  29: 126134.082 ops/s
# Warmup Iteration  30: 124649.892 ops/s
Iteration   1: 125917.270 ops/s
Iteration   2: 127122.894 ops/s
Iteration   3: 132245.607 ops/s
Iteration   4: 122600.089 ops/s
Iteration   5: 127298.240 ops/s
Iteration   6: 125749.894 ops/s
Iteration   7: 126888.218 ops/s
Iteration   8: 125376.278 ops/s
Iteration   9: 129913.989 ops/s
Iteration  10: 124752.217 ops/s
Iteration  11: 127013.037 ops/s
Iteration  12: 128257.090 ops/s
Iteration  13: 125308.461 ops/s
Iteration  14: 129477.941 ops/s
Iteration  15: 127910.575 ops/s
Iteration  16: 126954.311 ops/s
Iteration  17: 129098.121 ops/s
Iteration  18: 128972.353 ops/s
Iteration  19: 126333.673 ops/s
Iteration  20: 130969.361 ops/s
Iteration  21: 121780.974 ops/s
Iteration  22: 128517.899 ops/s
Iteration  23: 125945.912 ops/s
Iteration  24: 126379.577 ops/s
Iteration  25: 127673.972 ops/s
Iteration  26: 124368.066 ops/s
Iteration  27: 131122.916 ops/s
Iteration  28: 125460.446 ops/s
Iteration  29: 125484.649 ops/s
Iteration  30: 125703.848 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_629._Benchmark.benchmark_Cluster_629":
  127019.929 ±(99.9%) 1586.707 ops/s [Average]
  (min, avg, max) = (121780.974, 127019.929, 132245.607), stdev = 2374.908
  CI (99.9%): [125433.222, 128606.636] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_629._Benchmark.benchmark_Cluster_629  thrpt   30  127019.929 ± 1586.707  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_63._Benchmark.benchmark_Cluster_63$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_63._Benchmark.benchmark_Cluster_63

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1592.125 ops/s
# Warmup Iteration   2: 13840.388 ops/s
# Warmup Iteration   3: 17579.791 ops/s
# Warmup Iteration   4: 33192.670 ops/s
# Warmup Iteration   5: 33852.526 ops/s
# Warmup Iteration   6: 45112.281 ops/s
# Warmup Iteration   7: 80652.749 ops/s
# Warmup Iteration   8: 82208.610 ops/s
# Warmup Iteration   9: 82459.068 ops/s
# Warmup Iteration  10: 79186.053 ops/s
# Warmup Iteration  11: 82547.570 ops/s
# Warmup Iteration  12: 83646.001 ops/s
# Warmup Iteration  13: 82218.638 ops/s
# Warmup Iteration  14: 83503.009 ops/s
# Warmup Iteration  15: 80860.385 ops/s
# Warmup Iteration  16: 82326.819 ops/s
# Warmup Iteration  17: 83060.967 ops/s
# Warmup Iteration  18: 77658.452 ops/s
# Warmup Iteration  19: 84654.433 ops/s
# Warmup Iteration  20: 85083.267 ops/s
# Warmup Iteration  21: 84761.875 ops/s
# Warmup Iteration  22: 85973.618 ops/s
# Warmup Iteration  23: 83570.823 ops/s
# Warmup Iteration  24: 84346.786 ops/s
# Warmup Iteration  25: 88301.858 ops/s
# Warmup Iteration  26: 81809.593 ops/s
# Warmup Iteration  27: 87209.855 ops/s
# Warmup Iteration  28: 82823.933 ops/s
# Warmup Iteration  29: 83537.255 ops/s
# Warmup Iteration  30: 81863.202 ops/s
Iteration   1: 84392.487 ops/s
Iteration   2: 85898.532 ops/s
Iteration   3: 83528.658 ops/s
Iteration   4: 86320.553 ops/s
Iteration   5: 83081.645 ops/s
Iteration   6: 84444.988 ops/s
Iteration   7: 85371.241 ops/s
Iteration   8: 83899.353 ops/s
Iteration   9: 86462.261 ops/s
Iteration  10: 83149.339 ops/s
Iteration  11: 87859.885 ops/s
Iteration  12: 86322.736 ops/s
Iteration  13: 83595.589 ops/s
Iteration  14: 87153.785 ops/s
Iteration  15: 83986.604 ops/s
Iteration  16: 82324.305 ops/s
Iteration  17: 68949.467 ops/s
Iteration  18: 83053.023 ops/s
Iteration  19: 87045.093 ops/s
Iteration  20: 85712.812 ops/s
Iteration  21: 87298.475 ops/s
Iteration  22: 82791.940 ops/s
Iteration  23: 85619.840 ops/s
Iteration  24: 88283.703 ops/s
Iteration  25: 82507.589 ops/s
Iteration  26: 85473.829 ops/s
Iteration  27: 85486.908 ops/s
Iteration  28: 87625.175 ops/s
Iteration  29: 83933.154 ops/s
Iteration  30: 86004.821 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_63._Benchmark.benchmark_Cluster_63":
  84585.926 ±(99.9%) 2283.301 ops/s [Average]
  (min, avg, max) = (68949.467, 84585.926, 88283.703), stdev = 3417.537
  CI (99.9%): [82302.626, 86869.227] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_63._Benchmark.benchmark_Cluster_63  thrpt   30  84585.926 ± 2283.301  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_630._Benchmark.benchmark_Cluster_630$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_630._Benchmark.benchmark_Cluster_630

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5774.250 ops/s
# Warmup Iteration   2: 33542.791 ops/s
# Warmup Iteration   3: 34048.724 ops/s
# Warmup Iteration   4: 31957.423 ops/s
# Warmup Iteration   5: 79677.973 ops/s
# Warmup Iteration   6: 109825.373 ops/s
# Warmup Iteration   7: 104770.241 ops/s
# Warmup Iteration   8: 111232.282 ops/s
# Warmup Iteration   9: 107952.246 ops/s
# Warmup Iteration  10: 109148.414 ops/s
# Warmup Iteration  11: 114899.944 ops/s
# Warmup Iteration  12: 110286.011 ops/s
# Warmup Iteration  13: 110468.191 ops/s
# Warmup Iteration  14: 113243.082 ops/s
# Warmup Iteration  15: 109632.899 ops/s
# Warmup Iteration  16: 114261.622 ops/s
# Warmup Iteration  17: 117234.827 ops/s
# Warmup Iteration  18: 114170.736 ops/s
# Warmup Iteration  19: 121834.756 ops/s
# Warmup Iteration  20: 119173.430 ops/s
# Warmup Iteration  21: 112994.044 ops/s
# Warmup Iteration  22: 119630.128 ops/s
# Warmup Iteration  23: 114300.681 ops/s
# Warmup Iteration  24: 118867.696 ops/s
# Warmup Iteration  25: 114381.617 ops/s
# Warmup Iteration  26: 111853.658 ops/s
# Warmup Iteration  27: 115723.372 ops/s
# Warmup Iteration  28: 123208.723 ops/s
# Warmup Iteration  29: 117408.322 ops/s
# Warmup Iteration  30: 118312.478 ops/s
Iteration   1: 117198.448 ops/s
Iteration   2: 117901.612 ops/s
Iteration   3: 123618.221 ops/s
Iteration   4: 114596.358 ops/s
Iteration   5: 119633.294 ops/s
Iteration   6: 119660.809 ops/s
Iteration   7: 113463.031 ops/s
Iteration   8: 119359.830 ops/s
Iteration   9: 118551.117 ops/s
Iteration  10: 116467.696 ops/s
Iteration  11: 121598.520 ops/s
Iteration  12: 115239.764 ops/s
Iteration  13: 119400.533 ops/s
Iteration  14: 116499.112 ops/s
Iteration  15: 121116.801 ops/s
Iteration  16: 121256.700 ops/s
Iteration  17: 116876.256 ops/s
Iteration  18: 122129.233 ops/s
Iteration  19: 120608.211 ops/s
Iteration  20: 118190.562 ops/s
Iteration  21: 119725.452 ops/s
Iteration  22: 115606.564 ops/s
Iteration  23: 120515.166 ops/s
Iteration  24: 117465.164 ops/s
Iteration  25: 117765.027 ops/s
Iteration  26: 120763.889 ops/s
Iteration  27: 114614.210 ops/s
Iteration  28: 120502.788 ops/s
Iteration  29: 111184.255 ops/s
Iteration  30: 115675.940 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_630._Benchmark.benchmark_Cluster_630":
  118239.485 ±(99.9%) 1903.676 ops/s [Average]
  (min, avg, max) = (111184.255, 118239.485, 123618.221), stdev = 2849.333
  CI (99.9%): [116335.809, 120143.162] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_630._Benchmark.benchmark_Cluster_630  thrpt   30  118239.485 ± 1903.676  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_631._Benchmark.benchmark_Cluster_631$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_631._Benchmark.benchmark_Cluster_631

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 44930.532 ops/s
# Warmup Iteration   2: 71618.316 ops/s
# Warmup Iteration   3: 251310.306 ops/s
# Warmup Iteration   4: 279635.551 ops/s
# Warmup Iteration   5: 297427.622 ops/s
# Warmup Iteration   6: 293032.052 ops/s
# Warmup Iteration   7: 272944.917 ops/s
# Warmup Iteration   8: 299022.070 ops/s
# Warmup Iteration   9: 288902.490 ops/s
# Warmup Iteration  10: 297081.649 ops/s
# Warmup Iteration  11: 299905.930 ops/s
# Warmup Iteration  12: 289583.581 ops/s
# Warmup Iteration  13: 298070.883 ops/s
# Warmup Iteration  14: 289393.775 ops/s
# Warmup Iteration  15: 296590.343 ops/s
# Warmup Iteration  16: 294028.562 ops/s
# Warmup Iteration  17: 306677.964 ops/s
# Warmup Iteration  18: 308203.620 ops/s
# Warmup Iteration  19: 305643.258 ops/s
# Warmup Iteration  20: 312553.398 ops/s
# Warmup Iteration  21: 312279.571 ops/s
# Warmup Iteration  22: 304230.979 ops/s
# Warmup Iteration  23: 307385.399 ops/s
# Warmup Iteration  24: 314889.212 ops/s
# Warmup Iteration  25: 298599.638 ops/s
# Warmup Iteration  26: 321822.621 ops/s
# Warmup Iteration  27: 298370.066 ops/s
# Warmup Iteration  28: 309852.000 ops/s
# Warmup Iteration  29: 314445.791 ops/s
# Warmup Iteration  30: 306640.571 ops/s
Iteration   1: 309464.231 ops/s
Iteration   2: 295746.657 ops/s
Iteration   3: 299547.785 ops/s
Iteration   4: 318380.491 ops/s
Iteration   5: 296698.892 ops/s
Iteration   6: 323361.143 ops/s
Iteration   7: 303272.929 ops/s
Iteration   8: 307143.542 ops/s
Iteration   9: 311650.357 ops/s
Iteration  10: 317829.482 ops/s
Iteration  11: 265622.019 ops/s
Iteration  12: 304089.474 ops/s
Iteration  13: 314326.231 ops/s
Iteration  14: 308498.712 ops/s
Iteration  15: 324553.429 ops/s
Iteration  16: 295397.102 ops/s
Iteration  17: 322352.356 ops/s
Iteration  18: 288996.435 ops/s
Iteration  19: 315827.718 ops/s
Iteration  20: 310781.602 ops/s
Iteration  21: 305917.023 ops/s
Iteration  22: 321826.658 ops/s
Iteration  23: 307573.665 ops/s
Iteration  24: 307971.619 ops/s
Iteration  25: 317409.263 ops/s
Iteration  26: 304333.552 ops/s
Iteration  27: 318727.834 ops/s
Iteration  28: 299513.298 ops/s
Iteration  29: 309786.165 ops/s
Iteration  30: 302441.577 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_631._Benchmark.benchmark_Cluster_631":
  307634.708 ±(99.9%) 8100.908 ops/s [Average]
  (min, avg, max) = (265622.019, 307634.708, 324553.429), stdev = 12125.059
  CI (99.9%): [299533.800, 315735.616] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_631._Benchmark.benchmark_Cluster_631  thrpt   30  307634.708 ± 8100.908  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_632._Benchmark.benchmark_Cluster_632$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_632._Benchmark.benchmark_Cluster_632

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11078.385 ops/s
# Warmup Iteration   2: 36816.300 ops/s
# Warmup Iteration   3: 37278.484 ops/s
# Warmup Iteration   4: 38463.227 ops/s
# Warmup Iteration   5: 47495.292 ops/s
# Warmup Iteration   6: 84223.449 ops/s
# Warmup Iteration   7: 96870.025 ops/s
# Warmup Iteration   8: 97885.933 ops/s
# Warmup Iteration   9: 95703.232 ops/s
# Warmup Iteration  10: 93878.296 ops/s
# Warmup Iteration  11: 99738.396 ops/s
# Warmup Iteration  12: 94503.239 ops/s
# Warmup Iteration  13: 101494.326 ops/s
# Warmup Iteration  14: 100275.565 ops/s
# Warmup Iteration  15: 93829.876 ops/s
# Warmup Iteration  16: 97969.484 ops/s
# Warmup Iteration  17: 100386.033 ops/s
# Warmup Iteration  18: 98121.269 ops/s
# Warmup Iteration  19: 99450.546 ops/s
# Warmup Iteration  20: 97560.927 ops/s
# Warmup Iteration  21: 105571.780 ops/s
# Warmup Iteration  22: 97949.482 ops/s
# Warmup Iteration  23: 97579.842 ops/s
# Warmup Iteration  24: 102846.701 ops/s
# Warmup Iteration  25: 102915.905 ops/s
# Warmup Iteration  26: 103801.877 ops/s
# Warmup Iteration  27: 103776.315 ops/s
# Warmup Iteration  28: 101167.190 ops/s
# Warmup Iteration  29: 99709.296 ops/s
# Warmup Iteration  30: 104033.986 ops/s
Iteration   1: 99699.762 ops/s
Iteration   2: 104110.275 ops/s
Iteration   3: 103032.426 ops/s
Iteration   4: 96978.085 ops/s
Iteration   5: 104571.015 ops/s
Iteration   6: 98212.058 ops/s
Iteration   7: 98991.012 ops/s
Iteration   8: 102060.643 ops/s
Iteration   9: 102566.298 ops/s
Iteration  10: 101495.006 ops/s
Iteration  11: 105446.387 ops/s
Iteration  12: 98303.508 ops/s
Iteration  13: 103167.031 ops/s
Iteration  14: 102726.000 ops/s
Iteration  15: 100963.786 ops/s
Iteration  16: 100604.885 ops/s
Iteration  17: 106291.043 ops/s
Iteration  18: 106169.017 ops/s
Iteration  19: 99597.280 ops/s
Iteration  20: 103666.309 ops/s
Iteration  21: 100514.727 ops/s
Iteration  22: 106705.028 ops/s
Iteration  23: 103235.666 ops/s
Iteration  24: 99594.119 ops/s
Iteration  25: 104223.974 ops/s
Iteration  26: 100380.098 ops/s
Iteration  27: 106044.865 ops/s
Iteration  28: 100783.881 ops/s
Iteration  29: 101853.802 ops/s
Iteration  30: 100169.899 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_632._Benchmark.benchmark_Cluster_632":
  102071.929 ±(99.9%) 1761.991 ops/s [Average]
  (min, avg, max) = (96978.085, 102071.929, 106705.028), stdev = 2637.266
  CI (99.9%): [100309.938, 103833.921] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_632._Benchmark.benchmark_Cluster_632  thrpt   30  102071.929 ± 1761.991  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_633._Benchmark.benchmark_Cluster_633$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_633._Benchmark.benchmark_Cluster_633

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10950.299 ops/s
# Warmup Iteration   2: 19752.626 ops/s
# Warmup Iteration   3: 60141.819 ops/s
# Warmup Iteration   4: 73418.225 ops/s
# Warmup Iteration   5: 108796.440 ops/s
# Warmup Iteration   6: 101361.845 ops/s
# Warmup Iteration   7: 101152.174 ops/s
# Warmup Iteration   8: 99176.118 ops/s
# Warmup Iteration   9: 100160.987 ops/s
# Warmup Iteration  10: 103398.692 ops/s
# Warmup Iteration  11: 101742.111 ops/s
# Warmup Iteration  12: 105315.584 ops/s
# Warmup Iteration  13: 103850.953 ops/s
# Warmup Iteration  14: 106609.772 ops/s
# Warmup Iteration  15: 100681.334 ops/s
# Warmup Iteration  16: 108059.146 ops/s
# Warmup Iteration  17: 105591.922 ops/s
# Warmup Iteration  18: 111481.125 ops/s
# Warmup Iteration  19: 105985.026 ops/s
# Warmup Iteration  20: 108499.881 ops/s
# Warmup Iteration  21: 109288.835 ops/s
# Warmup Iteration  22: 104160.821 ops/s
# Warmup Iteration  23: 109792.552 ops/s
# Warmup Iteration  24: 108248.636 ops/s
# Warmup Iteration  25: 105818.082 ops/s
# Warmup Iteration  26: 114378.448 ops/s
# Warmup Iteration  27: 107209.149 ops/s
# Warmup Iteration  28: 109832.745 ops/s
# Warmup Iteration  29: 109571.862 ops/s
# Warmup Iteration  30: 110753.597 ops/s
Iteration   1: 107245.711 ops/s
Iteration   2: 109752.510 ops/s
Iteration   3: 106306.196 ops/s
Iteration   4: 107504.035 ops/s
Iteration   5: 105203.947 ops/s
Iteration   6: 80363.068 ops/s
Iteration   7: 111709.372 ops/s
Iteration   8: 106484.856 ops/s
Iteration   9: 111506.418 ops/s
Iteration  10: 111583.737 ops/s
Iteration  11: 102630.799 ops/s
Iteration  12: 111317.253 ops/s
Iteration  13: 110148.166 ops/s
Iteration  14: 108013.293 ops/s
Iteration  15: 105747.217 ops/s
Iteration  16: 110618.489 ops/s
Iteration  17: 114540.467 ops/s
Iteration  18: 109621.654 ops/s
Iteration  19: 115776.964 ops/s
Iteration  20: 109290.269 ops/s
Iteration  21: 110951.248 ops/s
Iteration  22: 116148.418 ops/s
Iteration  23: 108518.703 ops/s
Iteration  24: 113483.085 ops/s
Iteration  25: 108748.602 ops/s
Iteration  26: 112975.860 ops/s
Iteration  27: 110438.606 ops/s
Iteration  28: 112025.650 ops/s
Iteration  29: 114786.218 ops/s
Iteration  30: 108156.817 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_633._Benchmark.benchmark_Cluster_633":
  109053.254 ±(99.9%) 4205.815 ops/s [Average]
  (min, avg, max) = (80363.068, 109053.254, 116148.418), stdev = 6295.066
  CI (99.9%): [104847.440, 113259.069] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_633._Benchmark.benchmark_Cluster_633  thrpt   30  109053.254 ± 4205.815  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_634._Benchmark.benchmark_Cluster_634$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_634._Benchmark.benchmark_Cluster_634

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8735.742 ops/s
# Warmup Iteration   2: 27047.050 ops/s
# Warmup Iteration   3: 82078.235 ops/s
# Warmup Iteration   4: 72574.826 ops/s
# Warmup Iteration   5: 78339.011 ops/s
# Warmup Iteration   6: 90342.306 ops/s
# Warmup Iteration   7: 90854.224 ops/s
# Warmup Iteration   8: 88589.747 ops/s
# Warmup Iteration   9: 91607.749 ops/s
# Warmup Iteration  10: 91913.399 ops/s
# Warmup Iteration  11: 87703.538 ops/s
# Warmup Iteration  12: 92473.724 ops/s
# Warmup Iteration  13: 89715.749 ops/s
# Warmup Iteration  14: 88905.078 ops/s
# Warmup Iteration  15: 93013.833 ops/s
# Warmup Iteration  16: 89110.224 ops/s
# Warmup Iteration  17: 90440.330 ops/s
# Warmup Iteration  18: 86966.970 ops/s
# Warmup Iteration  19: 94660.674 ops/s
# Warmup Iteration  20: 88502.084 ops/s
# Warmup Iteration  21: 90562.879 ops/s
# Warmup Iteration  22: 88577.940 ops/s
# Warmup Iteration  23: 92017.503 ops/s
# Warmup Iteration  24: 87809.881 ops/s
# Warmup Iteration  25: 89354.280 ops/s
# Warmup Iteration  26: 91267.964 ops/s
# Warmup Iteration  27: 92347.570 ops/s
# Warmup Iteration  28: 87932.215 ops/s
# Warmup Iteration  29: 94476.265 ops/s
# Warmup Iteration  30: 88661.691 ops/s
Iteration   1: 93040.071 ops/s
Iteration   2: 85510.870 ops/s
Iteration   3: 92519.512 ops/s
Iteration   4: 90744.273 ops/s
Iteration   5: 90246.939 ops/s
Iteration   6: 94391.151 ops/s
Iteration   7: 90083.052 ops/s
Iteration   8: 89629.586 ops/s
Iteration   9: 92536.919 ops/s
Iteration  10: 88370.411 ops/s
Iteration  11: 91696.751 ops/s
Iteration  12: 87181.519 ops/s
Iteration  13: 89918.925 ops/s
Iteration  14: 92783.023 ops/s
Iteration  15: 91050.169 ops/s
Iteration  16: 92387.659 ops/s
Iteration  17: 87944.150 ops/s
Iteration  18: 92588.107 ops/s
Iteration  19: 88119.259 ops/s
Iteration  20: 87448.601 ops/s
Iteration  21: 89352.761 ops/s
Iteration  22: 91943.137 ops/s
Iteration  23: 88865.358 ops/s
Iteration  24: 93059.419 ops/s
Iteration  25: 89463.133 ops/s
Iteration  26: 91178.883 ops/s
Iteration  27: 90521.098 ops/s
Iteration  28: 90656.180 ops/s
Iteration  29: 89836.826 ops/s
Iteration  30: 90200.585 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_634._Benchmark.benchmark_Cluster_634":
  90442.278 ±(99.9%) 1373.970 ops/s [Average]
  (min, avg, max) = (85510.870, 90442.278, 94391.151), stdev = 2056.494
  CI (99.9%): [89068.307, 91816.248] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_634._Benchmark.benchmark_Cluster_634  thrpt   30  90442.278 ± 1373.970  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_635._Benchmark.benchmark_Cluster_635$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_635._Benchmark.benchmark_Cluster_635

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8033.604 ops/s
# Warmup Iteration   2: 48454.930 ops/s
# Warmup Iteration   3: 37397.856 ops/s
# Warmup Iteration   4: 83872.213 ops/s
# Warmup Iteration   5: 137872.109 ops/s
# Warmup Iteration   6: 138536.353 ops/s
# Warmup Iteration   7: 142425.003 ops/s
# Warmup Iteration   8: 145441.506 ops/s
# Warmup Iteration   9: 135156.963 ops/s
# Warmup Iteration  10: 140647.118 ops/s
# Warmup Iteration  11: 137610.162 ops/s
# Warmup Iteration  12: 130873.162 ops/s
# Warmup Iteration  13: 145061.525 ops/s
# Warmup Iteration  14: 139840.877 ops/s
# Warmup Iteration  15: 143481.665 ops/s
# Warmup Iteration  16: 140854.273 ops/s
# Warmup Iteration  17: 145774.415 ops/s
# Warmup Iteration  18: 146829.149 ops/s
# Warmup Iteration  19: 140473.892 ops/s
# Warmup Iteration  20: 149382.202 ops/s
# Warmup Iteration  21: 144316.502 ops/s
# Warmup Iteration  22: 149550.664 ops/s
# Warmup Iteration  23: 142285.652 ops/s
# Warmup Iteration  24: 146057.068 ops/s
# Warmup Iteration  25: 147632.840 ops/s
# Warmup Iteration  26: 141492.884 ops/s
# Warmup Iteration  27: 145430.791 ops/s
# Warmup Iteration  28: 140352.334 ops/s
# Warmup Iteration  29: 152515.989 ops/s
# Warmup Iteration  30: 110687.345 ops/s
Iteration   1: 142117.322 ops/s
Iteration   2: 138197.066 ops/s
Iteration   3: 145510.108 ops/s
Iteration   4: 152101.549 ops/s
Iteration   5: 143382.158 ops/s
Iteration   6: 140996.314 ops/s
Iteration   7: 146477.589 ops/s
Iteration   8: 144424.155 ops/s
Iteration   9: 148170.061 ops/s
Iteration  10: 143376.408 ops/s
Iteration  11: 145107.524 ops/s
Iteration  12: 153733.379 ops/s
Iteration  13: 139656.068 ops/s
Iteration  14: 146280.670 ops/s
Iteration  15: 144707.646 ops/s
Iteration  16: 150261.827 ops/s
Iteration  17: 138684.538 ops/s
Iteration  18: 149055.922 ops/s
Iteration  19: 147670.865 ops/s
Iteration  20: 147368.923 ops/s
Iteration  21: 145747.679 ops/s
Iteration  22: 144752.840 ops/s
Iteration  23: 149762.497 ops/s
Iteration  24: 142831.916 ops/s
Iteration  25: 147945.712 ops/s
Iteration  26: 141768.562 ops/s
Iteration  27: 147805.033 ops/s
Iteration  28: 142353.452 ops/s
Iteration  29: 144345.491 ops/s
Iteration  30: 150416.484 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_635._Benchmark.benchmark_Cluster_635":
  145500.325 ±(99.9%) 2562.828 ops/s [Average]
  (min, avg, max) = (138197.066, 145500.325, 153733.379), stdev = 3835.920
  CI (99.9%): [142937.497, 148063.153] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_635._Benchmark.benchmark_Cluster_635  thrpt   30  145500.325 ± 2562.828  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_636._Benchmark.benchmark_Cluster_636$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_636._Benchmark.benchmark_Cluster_636

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 35457.732 ops/s
# Warmup Iteration   2: 145461.595 ops/s
# Warmup Iteration   3: 157758.379 ops/s
# Warmup Iteration   4: 150585.100 ops/s
# Warmup Iteration   5: 164478.583 ops/s
# Warmup Iteration   6: 145235.260 ops/s
# Warmup Iteration   7: 168544.275 ops/s
# Warmup Iteration   8: 163880.823 ops/s
# Warmup Iteration   9: 164296.420 ops/s
# Warmup Iteration  10: 165646.857 ops/s
# Warmup Iteration  11: 163432.518 ops/s
# Warmup Iteration  12: 162676.310 ops/s
# Warmup Iteration  13: 168819.233 ops/s
# Warmup Iteration  14: 160930.011 ops/s
# Warmup Iteration  15: 167585.441 ops/s
# Warmup Iteration  16: 162133.567 ops/s
# Warmup Iteration  17: 168183.228 ops/s
# Warmup Iteration  18: 176513.146 ops/s
# Warmup Iteration  19: 171422.512 ops/s
# Warmup Iteration  20: 165733.092 ops/s
# Warmup Iteration  21: 171125.615 ops/s
# Warmup Iteration  22: 172180.858 ops/s
# Warmup Iteration  23: 161877.992 ops/s
# Warmup Iteration  24: 170580.467 ops/s
# Warmup Iteration  25: 171007.432 ops/s
# Warmup Iteration  26: 165120.981 ops/s
# Warmup Iteration  27: 171832.458 ops/s
# Warmup Iteration  28: 167987.210 ops/s
# Warmup Iteration  29: 170362.293 ops/s
# Warmup Iteration  30: 174791.883 ops/s
Iteration   1: 167414.733 ops/s
Iteration   2: 171606.691 ops/s
Iteration   3: 163548.197 ops/s
Iteration   4: 174593.269 ops/s
Iteration   5: 167402.315 ops/s
Iteration   6: 169877.984 ops/s
Iteration   7: 167464.996 ops/s
Iteration   8: 167352.046 ops/s
Iteration   9: 169114.240 ops/s
Iteration  10: 165672.933 ops/s
Iteration  11: 169560.200 ops/s
Iteration  12: 166277.705 ops/s
Iteration  13: 169206.724 ops/s
Iteration  14: 172049.985 ops/s
Iteration  15: 173239.894 ops/s
Iteration  16: 165665.293 ops/s
Iteration  17: 170038.191 ops/s
Iteration  18: 159752.838 ops/s
Iteration  19: 171569.900 ops/s
Iteration  20: 173015.811 ops/s
Iteration  21: 166770.399 ops/s
Iteration  22: 176294.557 ops/s
Iteration  23: 165275.699 ops/s
Iteration  24: 170884.558 ops/s
Iteration  25: 176731.970 ops/s
Iteration  26: 167128.449 ops/s
Iteration  27: 172268.824 ops/s
Iteration  28: 167450.626 ops/s
Iteration  29: 170002.060 ops/s
Iteration  30: 173360.547 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_636._Benchmark.benchmark_Cluster_636":
  169353.054 ±(99.9%) 2522.934 ops/s [Average]
  (min, avg, max) = (159752.838, 169353.054, 176731.970), stdev = 3776.209
  CI (99.9%): [166830.120, 171875.988] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_636._Benchmark.benchmark_Cluster_636  thrpt   30  169353.054 ± 2522.934  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_637._Benchmark.benchmark_Cluster_637$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_637._Benchmark.benchmark_Cluster_637

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2849.960 ops/s
# Warmup Iteration   2: 18266.574 ops/s
# Warmup Iteration   3: 27181.638 ops/s
# Warmup Iteration   4: 38396.684 ops/s
# Warmup Iteration   5: 77820.238 ops/s
# Warmup Iteration   6: 91685.075 ops/s
# Warmup Iteration   7: 96196.194 ops/s
# Warmup Iteration   8: 94790.760 ops/s
# Warmup Iteration   9: 97300.385 ops/s
# Warmup Iteration  10: 99977.028 ops/s
# Warmup Iteration  11: 101209.413 ops/s
# Warmup Iteration  12: 103074.117 ops/s
# Warmup Iteration  13: 97911.003 ops/s
# Warmup Iteration  14: 95242.696 ops/s
# Warmup Iteration  15: 101971.024 ops/s
# Warmup Iteration  16: 98015.425 ops/s
# Warmup Iteration  17: 106619.041 ops/s
# Warmup Iteration  18: 101284.473 ops/s
# Warmup Iteration  19: 102347.941 ops/s
# Warmup Iteration  20: 102038.560 ops/s
# Warmup Iteration  21: 105977.386 ops/s
# Warmup Iteration  22: 100642.756 ops/s
# Warmup Iteration  23: 105173.468 ops/s
# Warmup Iteration  24: 99757.895 ops/s
# Warmup Iteration  25: 81750.904 ops/s
# Warmup Iteration  26: 102879.129 ops/s
# Warmup Iteration  27: 98955.387 ops/s
# Warmup Iteration  28: 97866.723 ops/s
# Warmup Iteration  29: 108216.353 ops/s
# Warmup Iteration  30: 101233.888 ops/s
Iteration   1: 104511.201 ops/s
Iteration   2: 102557.821 ops/s
Iteration   3: 103204.653 ops/s
Iteration   4: 105263.307 ops/s
Iteration   5: 105707.391 ops/s
Iteration   6: 99897.063 ops/s
Iteration   7: 105214.792 ops/s
Iteration   8: 101473.509 ops/s
Iteration   9: 103459.804 ops/s
Iteration  10: 96975.632 ops/s
Iteration  11: 104805.676 ops/s
Iteration  12: 102395.209 ops/s
Iteration  13: 106298.495 ops/s
Iteration  14: 103999.927 ops/s
Iteration  15: 102544.854 ops/s
Iteration  16: 103777.785 ops/s
Iteration  17: 107696.084 ops/s
Iteration  18: 100702.843 ops/s
Iteration  19: 105485.038 ops/s
Iteration  20: 100737.714 ops/s
Iteration  21: 106437.475 ops/s
Iteration  22: 101151.947 ops/s
Iteration  23: 103159.988 ops/s
Iteration  24: 102519.393 ops/s
Iteration  25: 102144.983 ops/s
Iteration  26: 105239.522 ops/s
Iteration  27: 100414.191 ops/s
Iteration  28: 106890.062 ops/s
Iteration  29: 102002.206 ops/s
Iteration  30: 103781.814 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_637._Benchmark.benchmark_Cluster_637":
  103348.346 ±(99.9%) 1590.283 ops/s [Average]
  (min, avg, max) = (96975.632, 103348.346, 107696.084), stdev = 2380.261
  CI (99.9%): [101758.063, 104938.629] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_637._Benchmark.benchmark_Cluster_637  thrpt   30  103348.346 ± 1590.283  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_638._Benchmark.benchmark_Cluster_638$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_638._Benchmark.benchmark_Cluster_638

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8483.679 ops/s
# Warmup Iteration   2: 42102.383 ops/s
# Warmup Iteration   3: 45746.636 ops/s
# Warmup Iteration   4: 99732.339 ops/s
# Warmup Iteration   5: 97821.803 ops/s
# Warmup Iteration   6: 103996.434 ops/s
# Warmup Iteration   7: 111369.903 ops/s
# Warmup Iteration   8: 113281.034 ops/s
# Warmup Iteration   9: 112860.240 ops/s
# Warmup Iteration  10: 111125.489 ops/s
# Warmup Iteration  11: 111755.548 ops/s
# Warmup Iteration  12: 117067.288 ops/s
# Warmup Iteration  13: 107980.604 ops/s
# Warmup Iteration  14: 117079.732 ops/s
# Warmup Iteration  15: 109699.235 ops/s
# Warmup Iteration  16: 116011.232 ops/s
# Warmup Iteration  17: 122913.906 ops/s
# Warmup Iteration  18: 114939.496 ops/s
# Warmup Iteration  19: 120916.205 ops/s
# Warmup Iteration  20: 115103.828 ops/s
# Warmup Iteration  21: 122399.781 ops/s
# Warmup Iteration  22: 113695.258 ops/s
# Warmup Iteration  23: 118882.427 ops/s
# Warmup Iteration  24: 115163.759 ops/s
# Warmup Iteration  25: 119533.601 ops/s
# Warmup Iteration  26: 121784.204 ops/s
# Warmup Iteration  27: 112568.092 ops/s
# Warmup Iteration  28: 123042.473 ops/s
# Warmup Iteration  29: 120464.011 ops/s
# Warmup Iteration  30: 115948.266 ops/s
Iteration   1: 118925.702 ops/s
Iteration   2: 115597.690 ops/s
Iteration   3: 115800.349 ops/s
Iteration   4: 123074.576 ops/s
Iteration   5: 114043.470 ops/s
Iteration   6: 117616.108 ops/s
Iteration   7: 120343.193 ops/s
Iteration   8: 113564.389 ops/s
Iteration   9: 117583.291 ops/s
Iteration  10: 112856.359 ops/s
Iteration  11: 117895.508 ops/s
Iteration  12: 118186.594 ops/s
Iteration  13: 115372.734 ops/s
Iteration  14: 115403.158 ops/s
Iteration  15: 118831.546 ops/s
Iteration  16: 113884.830 ops/s
Iteration  17: 123084.679 ops/s
Iteration  18: 115005.389 ops/s
Iteration  19: 119620.893 ops/s
Iteration  20: 115234.500 ops/s
Iteration  21: 116635.663 ops/s
Iteration  22: 121479.487 ops/s
Iteration  23: 114533.824 ops/s
Iteration  24: 118398.170 ops/s
Iteration  25: 121339.498 ops/s
Iteration  26: 115188.426 ops/s
Iteration  27: 120552.495 ops/s
Iteration  28: 115336.427 ops/s
Iteration  29: 116675.716 ops/s
Iteration  30: 121238.659 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_638._Benchmark.benchmark_Cluster_638":
  117443.444 ±(99.9%) 1933.942 ops/s [Average]
  (min, avg, max) = (112856.359, 117443.444, 123084.679), stdev = 2894.634
  CI (99.9%): [115509.502, 119377.387] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_638._Benchmark.benchmark_Cluster_638  thrpt   30  117443.444 ± 1933.942  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_639._Benchmark.benchmark_Cluster_639$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_639._Benchmark.benchmark_Cluster_639

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8725.106 ops/s
# Warmup Iteration   2: 36541.333 ops/s
# Warmup Iteration   3: 44853.495 ops/s
# Warmup Iteration   4: 46868.108 ops/s
# Warmup Iteration   5: 34239.035 ops/s
# Warmup Iteration   6: 87317.943 ops/s
# Warmup Iteration   7: 125700.056 ops/s
# Warmup Iteration   8: 125380.550 ops/s
# Warmup Iteration   9: 126872.413 ops/s
# Warmup Iteration  10: 125032.511 ops/s
# Warmup Iteration  11: 125497.456 ops/s
# Warmup Iteration  12: 125612.140 ops/s
# Warmup Iteration  13: 125473.190 ops/s
# Warmup Iteration  14: 124477.952 ops/s
# Warmup Iteration  15: 128471.797 ops/s
# Warmup Iteration  16: 120578.197 ops/s
# Warmup Iteration  17: 137172.320 ops/s
# Warmup Iteration  18: 129983.219 ops/s
# Warmup Iteration  19: 101255.440 ops/s
# Warmup Iteration  20: 130606.773 ops/s
# Warmup Iteration  21: 129830.267 ops/s
# Warmup Iteration  22: 130313.364 ops/s
# Warmup Iteration  23: 128428.240 ops/s
# Warmup Iteration  24: 130422.111 ops/s
# Warmup Iteration  25: 129808.232 ops/s
# Warmup Iteration  26: 135617.103 ops/s
# Warmup Iteration  27: 127942.647 ops/s
# Warmup Iteration  28: 134660.736 ops/s
# Warmup Iteration  29: 128800.843 ops/s
# Warmup Iteration  30: 132937.679 ops/s
Iteration   1: 127832.381 ops/s
Iteration   2: 130329.156 ops/s
Iteration   3: 123933.465 ops/s
Iteration   4: 129097.347 ops/s
Iteration   5: 132869.981 ops/s
Iteration   6: 130842.060 ops/s
Iteration   7: 135190.441 ops/s
Iteration   8: 133482.844 ops/s
Iteration   9: 130159.630 ops/s
Iteration  10: 136906.957 ops/s
Iteration  11: 126082.201 ops/s
Iteration  12: 132207.954 ops/s
Iteration  13: 134281.273 ops/s
Iteration  14: 138150.080 ops/s
Iteration  15: 126510.290 ops/s
Iteration  16: 129977.193 ops/s
Iteration  17: 137067.535 ops/s
Iteration  18: 129168.840 ops/s
Iteration  19: 132739.711 ops/s
Iteration  20: 127793.542 ops/s
Iteration  21: 130905.676 ops/s
Iteration  22: 136559.031 ops/s
Iteration  23: 126108.421 ops/s
Iteration  24: 130376.780 ops/s
Iteration  25: 132724.355 ops/s
Iteration  26: 126598.438 ops/s
Iteration  27: 135335.837 ops/s
Iteration  28: 135115.593 ops/s
Iteration  29: 126787.780 ops/s
Iteration  30: 132058.765 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_639._Benchmark.benchmark_Cluster_639":
  131239.785 ±(99.9%) 2541.221 ops/s [Average]
  (min, avg, max) = (123933.465, 131239.785, 138150.080), stdev = 3803.581
  CI (99.9%): [128698.564, 133781.007] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_639._Benchmark.benchmark_Cluster_639  thrpt   30  131239.785 ± 2541.221  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_64._Benchmark.benchmark_Cluster_64$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_64._Benchmark.benchmark_Cluster_64

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3258.806 ops/s
# Warmup Iteration   2: 29627.235 ops/s
# Warmup Iteration   3: 40784.026 ops/s
# Warmup Iteration   4: 43374.610 ops/s
# Warmup Iteration   5: 52408.075 ops/s
# Warmup Iteration   6: 74375.912 ops/s
# Warmup Iteration   7: 107194.950 ops/s
# Warmup Iteration   8: 116417.790 ops/s
# Warmup Iteration   9: 116041.351 ops/s
# Warmup Iteration  10: 119105.987 ops/s
# Warmup Iteration  11: 116060.973 ops/s
# Warmup Iteration  12: 117316.063 ops/s
# Warmup Iteration  13: 119802.258 ops/s
# Warmup Iteration  14: 117929.132 ops/s
# Warmup Iteration  15: 114383.371 ops/s
# Warmup Iteration  16: 118457.755 ops/s
# Warmup Iteration  17: 114905.379 ops/s
# Warmup Iteration  18: 117302.569 ops/s
# Warmup Iteration  19: 123924.128 ops/s
# Warmup Iteration  20: 123307.093 ops/s
# Warmup Iteration  21: 113375.191 ops/s
# Warmup Iteration  22: 120672.696 ops/s
# Warmup Iteration  23: 117516.420 ops/s
# Warmup Iteration  24: 116294.546 ops/s
# Warmup Iteration  25: 121271.087 ops/s
# Warmup Iteration  26: 124269.299 ops/s
# Warmup Iteration  27: 114511.486 ops/s
# Warmup Iteration  28: 119110.793 ops/s
# Warmup Iteration  29: 116612.002 ops/s
# Warmup Iteration  30: 121515.436 ops/s
Iteration   1: 117572.379 ops/s
Iteration   2: 122360.388 ops/s
Iteration   3: 121658.088 ops/s
Iteration   4: 111904.355 ops/s
Iteration   5: 122006.311 ops/s
Iteration   6: 118311.424 ops/s
Iteration   7: 122657.108 ops/s
Iteration   8: 120437.596 ops/s
Iteration   9: 113334.238 ops/s
Iteration  10: 121800.304 ops/s
Iteration  11: 116429.864 ops/s
Iteration  12: 115298.816 ops/s
Iteration  13: 117140.077 ops/s
Iteration  14: 119245.620 ops/s
Iteration  15: 116999.602 ops/s
Iteration  16: 121269.470 ops/s
Iteration  17: 118260.579 ops/s
Iteration  18: 117003.209 ops/s
Iteration  19: 121328.215 ops/s
Iteration  20: 113950.570 ops/s
Iteration  21: 122904.926 ops/s
Iteration  22: 116889.021 ops/s
Iteration  23: 118298.271 ops/s
Iteration  24: 120421.486 ops/s
Iteration  25: 118005.818 ops/s
Iteration  26: 117660.571 ops/s
Iteration  27: 121202.586 ops/s
Iteration  28: 118985.140 ops/s
Iteration  29: 115224.470 ops/s
Iteration  30: 119750.583 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_64._Benchmark.benchmark_Cluster_64":
  118610.370 ±(99.9%) 1938.689 ops/s [Average]
  (min, avg, max) = (111904.355, 118610.370, 122904.926), stdev = 2901.738
  CI (99.9%): [116671.681, 120549.058] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_64._Benchmark.benchmark_Cluster_64  thrpt   30  118610.370 ± 1938.689  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_640._Benchmark.benchmark_Cluster_640$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_640._Benchmark.benchmark_Cluster_640

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.718 ops/s
# Warmup Iteration   2: 5917.581 ops/s
# Warmup Iteration   3: 35294.350 ops/s
# Warmup Iteration   4: 36501.186 ops/s
# Warmup Iteration   5: 39861.689 ops/s
# Warmup Iteration   6: 40696.514 ops/s
# Warmup Iteration   7: 80361.181 ops/s
# Warmup Iteration   8: 110146.875 ops/s
# Warmup Iteration   9: 132534.291 ops/s
# Warmup Iteration  10: 125049.815 ops/s
# Warmup Iteration  11: 126828.060 ops/s
# Warmup Iteration  12: 123452.981 ops/s
# Warmup Iteration  13: 103465.372 ops/s
# Warmup Iteration  14: 123230.723 ops/s
# Warmup Iteration  15: 131156.482 ops/s
# Warmup Iteration  16: 123190.475 ops/s
# Warmup Iteration  17: 129661.341 ops/s
# Warmup Iteration  18: 122070.058 ops/s
# Warmup Iteration  19: 126215.365 ops/s
# Warmup Iteration  20: 125618.162 ops/s
# Warmup Iteration  21: 125580.606 ops/s
# Warmup Iteration  22: 128430.713 ops/s
# Warmup Iteration  23: 126909.048 ops/s
# Warmup Iteration  24: 128804.978 ops/s
# Warmup Iteration  25: 129971.283 ops/s
# Warmup Iteration  26: 124034.919 ops/s
# Warmup Iteration  27: 134612.555 ops/s
# Warmup Iteration  28: 130050.677 ops/s
# Warmup Iteration  29: 128626.321 ops/s
# Warmup Iteration  30: 131074.257 ops/s
Iteration   1: 125240.861 ops/s
Iteration   2: 128789.222 ops/s
Iteration   3: 132353.803 ops/s
Iteration   4: 127338.335 ops/s
Iteration   5: 131806.951 ops/s
Iteration   6: 129315.726 ops/s
Iteration   7: 124485.018 ops/s
Iteration   8: 131475.374 ops/s
Iteration   9: 126427.296 ops/s
Iteration  10: 130931.261 ops/s
Iteration  11: 127449.776 ops/s
Iteration  12: 127858.413 ops/s
Iteration  13: 131779.982 ops/s
Iteration  14: 122827.140 ops/s
Iteration  15: 125496.871 ops/s
Iteration  16: 132209.006 ops/s
Iteration  17: 125579.884 ops/s
Iteration  18: 131358.601 ops/s
Iteration  19: 130238.144 ops/s
Iteration  20: 122081.356 ops/s
Iteration  21: 128074.284 ops/s
Iteration  22: 124608.530 ops/s
Iteration  23: 132570.296 ops/s
Iteration  24: 129815.174 ops/s
Iteration  25: 127799.426 ops/s
Iteration  26: 133738.018 ops/s
Iteration  27: 128041.905 ops/s
Iteration  28: 128051.143 ops/s
Iteration  29: 130936.942 ops/s
Iteration  30: 127948.635 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_640._Benchmark.benchmark_Cluster_640":
  128554.246 ±(99.9%) 2038.422 ops/s [Average]
  (min, avg, max) = (122081.356, 128554.246, 133738.018), stdev = 3051.014
  CI (99.9%): [126515.824, 130592.668] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_640._Benchmark.benchmark_Cluster_640  thrpt   30  128554.246 ± 2038.422  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_641._Benchmark.benchmark_Cluster_641$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_641._Benchmark.benchmark_Cluster_641

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1939.369 ops/s
# Warmup Iteration   2: 21287.407 ops/s
# Warmup Iteration   3: 34107.391 ops/s
# Warmup Iteration   4: 30764.037 ops/s
# Warmup Iteration   5: 31318.926 ops/s
# Warmup Iteration   6: 49869.529 ops/s
# Warmup Iteration   7: 53812.674 ops/s
# Warmup Iteration   8: 92739.138 ops/s
# Warmup Iteration   9: 96900.642 ops/s
# Warmup Iteration  10: 97653.251 ops/s
# Warmup Iteration  11: 95557.045 ops/s
# Warmup Iteration  12: 97981.461 ops/s
# Warmup Iteration  13: 101131.665 ops/s
# Warmup Iteration  14: 99394.215 ops/s
# Warmup Iteration  15: 102788.623 ops/s
# Warmup Iteration  16: 95510.273 ops/s
# Warmup Iteration  17: 105767.568 ops/s
# Warmup Iteration  18: 102063.504 ops/s
# Warmup Iteration  19: 106046.362 ops/s
# Warmup Iteration  20: 100904.227 ops/s
# Warmup Iteration  21: 102957.727 ops/s
# Warmup Iteration  22: 107223.721 ops/s
# Warmup Iteration  23: 96294.454 ops/s
# Warmup Iteration  24: 107551.950 ops/s
# Warmup Iteration  25: 106914.647 ops/s
# Warmup Iteration  26: 99783.399 ops/s
# Warmup Iteration  27: 106719.636 ops/s
# Warmup Iteration  28: 104025.276 ops/s
# Warmup Iteration  29: 102542.722 ops/s
# Warmup Iteration  30: 105164.081 ops/s
Iteration   1: 99748.103 ops/s
Iteration   2: 101362.705 ops/s
Iteration   3: 102738.083 ops/s
Iteration   4: 100989.228 ops/s
Iteration   5: 107442.754 ops/s
Iteration   6: 104359.787 ops/s
Iteration   7: 105231.849 ops/s
Iteration   8: 103063.458 ops/s
Iteration   9: 102785.804 ops/s
Iteration  10: 106189.031 ops/s
Iteration  11: 101208.322 ops/s
Iteration  12: 102633.790 ops/s
Iteration  13: 106454.315 ops/s
Iteration  14: 98540.819 ops/s
Iteration  15: 103194.657 ops/s
Iteration  16: 105259.148 ops/s
Iteration  17: 100823.567 ops/s
Iteration  18: 107762.179 ops/s
Iteration  19: 102516.938 ops/s
Iteration  20: 106858.951 ops/s
Iteration  21: 103422.405 ops/s
Iteration  22: 105196.147 ops/s
Iteration  23: 103715.037 ops/s
Iteration  24: 104560.229 ops/s
Iteration  25: 103801.186 ops/s
Iteration  26: 101671.398 ops/s
Iteration  27: 106531.400 ops/s
Iteration  28: 107115.861 ops/s
Iteration  29: 103423.978 ops/s
Iteration  30: 104967.760 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_641._Benchmark.benchmark_Cluster_641":
  103785.630 ±(99.9%) 1580.550 ops/s [Average]
  (min, avg, max) = (98540.819, 103785.630, 107762.179), stdev = 2365.693
  CI (99.9%): [102205.080, 105366.180] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_641._Benchmark.benchmark_Cluster_641  thrpt   30  103785.630 ± 1580.550  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_642._Benchmark.benchmark_Cluster_642$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_642._Benchmark.benchmark_Cluster_642

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16433.927 ops/s
# Warmup Iteration   2: 73056.215 ops/s
# Warmup Iteration   3: 110031.069 ops/s
# Warmup Iteration   4: 114092.197 ops/s
# Warmup Iteration   5: 120337.240 ops/s
# Warmup Iteration   6: 107589.336 ops/s
# Warmup Iteration   7: 90474.034 ops/s
# Warmup Iteration   8: 119160.386 ops/s
# Warmup Iteration   9: 126617.263 ops/s
# Warmup Iteration  10: 119091.520 ops/s
# Warmup Iteration  11: 124718.463 ops/s
# Warmup Iteration  12: 120179.321 ops/s
# Warmup Iteration  13: 122057.049 ops/s
# Warmup Iteration  14: 124481.125 ops/s
# Warmup Iteration  15: 120979.066 ops/s
# Warmup Iteration  16: 125287.473 ops/s
# Warmup Iteration  17: 126394.693 ops/s
# Warmup Iteration  18: 131292.208 ops/s
# Warmup Iteration  19: 125414.963 ops/s
# Warmup Iteration  20: 131406.225 ops/s
# Warmup Iteration  21: 126914.751 ops/s
# Warmup Iteration  22: 128266.708 ops/s
# Warmup Iteration  23: 130417.362 ops/s
# Warmup Iteration  24: 126874.954 ops/s
# Warmup Iteration  25: 128268.190 ops/s
# Warmup Iteration  26: 131857.606 ops/s
# Warmup Iteration  27: 122922.797 ops/s
# Warmup Iteration  28: 128896.138 ops/s
# Warmup Iteration  29: 133244.545 ops/s
# Warmup Iteration  30: 126571.650 ops/s
Iteration   1: 128731.949 ops/s
Iteration   2: 125583.982 ops/s
Iteration   3: 131584.022 ops/s
Iteration   4: 125564.312 ops/s
Iteration   5: 129992.091 ops/s
Iteration   6: 127940.587 ops/s
Iteration   7: 127595.704 ops/s
Iteration   8: 130812.483 ops/s
Iteration   9: 127029.847 ops/s
Iteration  10: 130403.461 ops/s
Iteration  11: 127656.802 ops/s
Iteration  12: 133504.160 ops/s
Iteration  13: 129475.191 ops/s
Iteration  14: 123849.783 ops/s
Iteration  15: 127152.982 ops/s
Iteration  16: 131359.033 ops/s
Iteration  17: 125795.691 ops/s
Iteration  18: 134196.895 ops/s
Iteration  19: 126091.509 ops/s
Iteration  20: 129368.483 ops/s
Iteration  21: 129283.863 ops/s
Iteration  22: 129600.509 ops/s
Iteration  23: 131923.474 ops/s
Iteration  24: 124981.029 ops/s
Iteration  25: 134442.136 ops/s
Iteration  26: 127446.353 ops/s
Iteration  27: 123288.556 ops/s
Iteration  28: 134148.563 ops/s
Iteration  29: 126591.686 ops/s
Iteration  30: 132205.045 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_642._Benchmark.benchmark_Cluster_642":
  128920.006 ±(99.9%) 2073.436 ops/s [Average]
  (min, avg, max) = (123288.556, 128920.006, 134442.136), stdev = 3103.421
  CI (99.9%): [126846.570, 130993.442] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_642._Benchmark.benchmark_Cluster_642  thrpt   30  128920.006 ± 2073.436  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_643._Benchmark.benchmark_Cluster_643$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_643._Benchmark.benchmark_Cluster_643

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1775.806 ops/s
# Warmup Iteration   2: 11603.630 ops/s
# Warmup Iteration   3: 19438.299 ops/s
# Warmup Iteration   4: 24811.470 ops/s
# Warmup Iteration   5: 33741.845 ops/s
# Warmup Iteration   6: 34235.069 ops/s
# Warmup Iteration   7: 82916.373 ops/s
# Warmup Iteration   8: 86727.811 ops/s
# Warmup Iteration   9: 89346.922 ops/s
# Warmup Iteration  10: 94677.545 ops/s
# Warmup Iteration  11: 89610.590 ops/s
# Warmup Iteration  12: 98591.416 ops/s
# Warmup Iteration  13: 95267.907 ops/s
# Warmup Iteration  14: 91428.566 ops/s
# Warmup Iteration  15: 93377.414 ops/s
# Warmup Iteration  16: 89627.057 ops/s
# Warmup Iteration  17: 97041.834 ops/s
# Warmup Iteration  18: 93824.344 ops/s
# Warmup Iteration  19: 97275.961 ops/s
# Warmup Iteration  20: 93646.148 ops/s
# Warmup Iteration  21: 90134.060 ops/s
# Warmup Iteration  22: 100786.562 ops/s
# Warmup Iteration  23: 92472.655 ops/s
# Warmup Iteration  24: 96583.412 ops/s
# Warmup Iteration  25: 95870.936 ops/s
# Warmup Iteration  26: 96691.092 ops/s
# Warmup Iteration  27: 93780.266 ops/s
# Warmup Iteration  28: 98017.823 ops/s
# Warmup Iteration  29: 96553.406 ops/s
# Warmup Iteration  30: 98644.759 ops/s
Iteration   1: 97026.267 ops/s
Iteration   2: 92593.643 ops/s
Iteration   3: 95730.095 ops/s
Iteration   4: 94365.183 ops/s
Iteration   5: 98761.262 ops/s
Iteration   6: 98317.123 ops/s
Iteration   7: 96706.428 ops/s
Iteration   8: 96919.329 ops/s
Iteration   9: 97926.090 ops/s
Iteration  10: 98559.656 ops/s
Iteration  11: 94121.346 ops/s
Iteration  12: 98157.090 ops/s
Iteration  13: 96234.911 ops/s
Iteration  14: 96157.055 ops/s
Iteration  15: 97533.402 ops/s
Iteration  16: 95390.983 ops/s
Iteration  17: 95290.503 ops/s
Iteration  18: 98182.581 ops/s
Iteration  19: 93959.553 ops/s
Iteration  20: 99030.428 ops/s
Iteration  21: 100348.890 ops/s
Iteration  22: 87949.741 ops/s
Iteration  23: 99127.949 ops/s
Iteration  24: 92699.603 ops/s
Iteration  25: 99958.265 ops/s
Iteration  26: 93337.076 ops/s
Iteration  27: 98690.791 ops/s
Iteration  28: 100008.457 ops/s
Iteration  29: 94162.620 ops/s
Iteration  30: 96611.117 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_643._Benchmark.benchmark_Cluster_643":
  96461.915 ±(99.9%) 1829.331 ops/s [Average]
  (min, avg, max) = (87949.741, 96461.915, 100348.890), stdev = 2738.057
  CI (99.9%): [94632.584, 98291.246] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_643._Benchmark.benchmark_Cluster_643  thrpt   30  96461.915 ± 1829.331  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_644._Benchmark.benchmark_Cluster_644$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_644._Benchmark.benchmark_Cluster_644

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.545 ops/s
# Warmup Iteration   2: 3756.979 ops/s
# Warmup Iteration   3: 20837.887 ops/s
# Warmup Iteration   4: 24160.762 ops/s
# Warmup Iteration   5: 31901.772 ops/s
# Warmup Iteration   6: 26909.540 ops/s
# Warmup Iteration   7: 26560.020 ops/s
# Warmup Iteration   8: 30679.926 ops/s
# Warmup Iteration   9: 34339.017 ops/s
# Warmup Iteration  10: 32409.683 ops/s
# Warmup Iteration  11: 41001.525 ops/s
# Warmup Iteration  12: 84766.483 ops/s
# Warmup Iteration  13: 82578.081 ops/s
# Warmup Iteration  14: 86440.148 ops/s
# Warmup Iteration  15: 81209.240 ops/s
# Warmup Iteration  16: 86569.254 ops/s
# Warmup Iteration  17: 86634.239 ops/s
# Warmup Iteration  18: 81086.465 ops/s
# Warmup Iteration  19: 86837.839 ops/s
# Warmup Iteration  20: 80214.975 ops/s
# Warmup Iteration  21: 81151.504 ops/s
# Warmup Iteration  22: 88394.918 ops/s
# Warmup Iteration  23: 87996.470 ops/s
# Warmup Iteration  24: 82495.472 ops/s
# Warmup Iteration  25: 83547.343 ops/s
# Warmup Iteration  26: 85894.506 ops/s
# Warmup Iteration  27: 84254.125 ops/s
# Warmup Iteration  28: 86756.690 ops/s
# Warmup Iteration  29: 81085.031 ops/s
# Warmup Iteration  30: 85775.179 ops/s
Iteration   1: 87712.272 ops/s
Iteration   2: 82633.297 ops/s
Iteration   3: 84678.878 ops/s
Iteration   4: 85741.805 ops/s
Iteration   5: 83763.231 ops/s
Iteration   6: 88480.036 ops/s
Iteration   7: 80712.981 ops/s
Iteration   8: 86985.801 ops/s
Iteration   9: 83389.094 ops/s
Iteration  10: 83773.924 ops/s
Iteration  11: 87814.826 ops/s
Iteration  12: 87302.370 ops/s
Iteration  13: 83889.264 ops/s
Iteration  14: 88503.112 ops/s
Iteration  15: 85574.827 ops/s
Iteration  16: 84011.385 ops/s
Iteration  17: 85283.438 ops/s
Iteration  18: 88777.961 ops/s
Iteration  19: 84072.610 ops/s
Iteration  20: 84873.240 ops/s
Iteration  21: 87422.504 ops/s
Iteration  22: 85400.449 ops/s
Iteration  23: 88799.026 ops/s
Iteration  24: 85234.430 ops/s
Iteration  25: 87425.082 ops/s
Iteration  26: 90059.633 ops/s
Iteration  27: 82830.482 ops/s
Iteration  28: 88917.169 ops/s
Iteration  29: 84293.343 ops/s
Iteration  30: 85801.186 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_644._Benchmark.benchmark_Cluster_644":
  85805.255 ±(99.9%) 1522.900 ops/s [Average]
  (min, avg, max) = (80712.981, 85805.255, 90059.633), stdev = 2279.406
  CI (99.9%): [84282.355, 87328.156] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_644._Benchmark.benchmark_Cluster_644  thrpt   30  85805.255 ± 1522.900  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_645._Benchmark.benchmark_Cluster_645$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_645._Benchmark.benchmark_Cluster_645

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.699 ops/s
# Warmup Iteration   2: 5781.969 ops/s
# Warmup Iteration   3: 20796.073 ops/s
# Warmup Iteration   4: 35402.829 ops/s
# Warmup Iteration   5: 31925.007 ops/s
# Warmup Iteration   6: 48136.218 ops/s
# Warmup Iteration   7: 117075.119 ops/s
# Warmup Iteration   8: 100531.445 ops/s
# Warmup Iteration   9: 127406.741 ops/s
# Warmup Iteration  10: 113607.266 ops/s
# Warmup Iteration  11: 130168.299 ops/s
# Warmup Iteration  12: 123198.123 ops/s
# Warmup Iteration  13: 129351.372 ops/s
# Warmup Iteration  14: 129718.645 ops/s
# Warmup Iteration  15: 124146.641 ops/s
# Warmup Iteration  16: 128829.280 ops/s
# Warmup Iteration  17: 127570.156 ops/s
# Warmup Iteration  18: 129766.962 ops/s
# Warmup Iteration  19: 129993.259 ops/s
# Warmup Iteration  20: 129110.285 ops/s
# Warmup Iteration  21: 124988.820 ops/s
# Warmup Iteration  22: 132210.559 ops/s
# Warmup Iteration  23: 122796.251 ops/s
# Warmup Iteration  24: 128952.982 ops/s
# Warmup Iteration  25: 124918.979 ops/s
# Warmup Iteration  26: 126518.548 ops/s
# Warmup Iteration  27: 131604.993 ops/s
# Warmup Iteration  28: 129619.801 ops/s
# Warmup Iteration  29: 125277.398 ops/s
# Warmup Iteration  30: 124391.802 ops/s
Iteration   1: 124521.521 ops/s
Iteration   2: 127453.465 ops/s
Iteration   3: 134658.781 ops/s
Iteration   4: 123034.655 ops/s
Iteration   5: 128426.553 ops/s
Iteration   6: 135609.169 ops/s
Iteration   7: 121437.275 ops/s
Iteration   8: 128679.842 ops/s
Iteration   9: 121885.382 ops/s
Iteration  10: 128774.898 ops/s
Iteration  11: 134744.481 ops/s
Iteration  12: 132570.306 ops/s
Iteration  13: 119665.229 ops/s
Iteration  14: 129852.261 ops/s
Iteration  15: 128646.618 ops/s
Iteration  16: 124239.317 ops/s
Iteration  17: 128095.002 ops/s
Iteration  18: 130909.492 ops/s
Iteration  19: 122809.524 ops/s
Iteration  20: 130840.560 ops/s
Iteration  21: 128891.624 ops/s
Iteration  22: 127496.254 ops/s
Iteration  23: 127911.961 ops/s
Iteration  24: 127272.303 ops/s
Iteration  25: 131194.129 ops/s
Iteration  26: 129179.371 ops/s
Iteration  27: 126770.141 ops/s
Iteration  28: 129114.440 ops/s
Iteration  29: 125217.323 ops/s
Iteration  30: 131410.936 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_645._Benchmark.benchmark_Cluster_645":
  128043.760 ±(99.9%) 2642.241 ops/s [Average]
  (min, avg, max) = (119665.229, 128043.760, 135609.169), stdev = 3954.782
  CI (99.9%): [125401.520, 130686.001] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_645._Benchmark.benchmark_Cluster_645  thrpt   30  128043.760 ± 2642.241  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_646._Benchmark.benchmark_Cluster_646$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_646._Benchmark.benchmark_Cluster_646

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.770 ops/s
# Warmup Iteration   2: 1989.680 ops/s
# Warmup Iteration   3: 17943.839 ops/s
# Warmup Iteration   4: 17993.720 ops/s
# Warmup Iteration   5: 34889.480 ops/s
# Warmup Iteration   6: 41971.477 ops/s
# Warmup Iteration   7: 51164.105 ops/s
# Warmup Iteration   8: 49145.869 ops/s
# Warmup Iteration   9: 59234.021 ops/s
# Warmup Iteration  10: 108507.855 ops/s
# Warmup Iteration  11: 122592.263 ops/s
# Warmup Iteration  12: 117401.924 ops/s
# Warmup Iteration  13: 122586.073 ops/s
# Warmup Iteration  14: 111130.251 ops/s
# Warmup Iteration  15: 119976.729 ops/s
# Warmup Iteration  16: 128029.960 ops/s
# Warmup Iteration  17: 127116.978 ops/s
# Warmup Iteration  18: 117456.747 ops/s
# Warmup Iteration  19: 127035.842 ops/s
# Warmup Iteration  20: 123599.408 ops/s
# Warmup Iteration  21: 128075.980 ops/s
# Warmup Iteration  22: 127929.777 ops/s
# Warmup Iteration  23: 117773.200 ops/s
# Warmup Iteration  24: 122266.770 ops/s
# Warmup Iteration  25: 123618.006 ops/s
# Warmup Iteration  26: 118564.190 ops/s
# Warmup Iteration  27: 126708.384 ops/s
# Warmup Iteration  28: 122648.722 ops/s
# Warmup Iteration  29: 122581.078 ops/s
# Warmup Iteration  30: 122032.722 ops/s
Iteration   1: 115395.117 ops/s
Iteration   2: 121560.776 ops/s
Iteration   3: 123937.494 ops/s
Iteration   4: 117638.254 ops/s
Iteration   5: 122728.500 ops/s
Iteration   6: 125032.549 ops/s
Iteration   7: 126958.800 ops/s
Iteration   8: 121493.187 ops/s
Iteration   9: 124218.826 ops/s
Iteration  10: 122643.172 ops/s
Iteration  11: 122758.982 ops/s
Iteration  12: 128321.784 ops/s
Iteration  13: 115944.792 ops/s
Iteration  14: 125011.803 ops/s
Iteration  15: 118486.307 ops/s
Iteration  16: 119723.153 ops/s
Iteration  17: 127333.689 ops/s
Iteration  18: 125042.323 ops/s
Iteration  19: 124857.838 ops/s
Iteration  20: 124450.970 ops/s
Iteration  21: 118863.978 ops/s
Iteration  22: 124890.493 ops/s
Iteration  23: 117725.957 ops/s
Iteration  24: 125031.302 ops/s
Iteration  25: 124198.001 ops/s
Iteration  26: 120086.012 ops/s
Iteration  27: 123930.461 ops/s
Iteration  28: 119780.350 ops/s
Iteration  29: 120900.578 ops/s
Iteration  30: 121739.390 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_646._Benchmark.benchmark_Cluster_646":
  122356.161 ±(99.9%) 2227.856 ops/s [Average]
  (min, avg, max) = (115395.117, 122356.161, 128321.784), stdev = 3334.551
  CI (99.9%): [120128.305, 124584.018] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_646._Benchmark.benchmark_Cluster_646  thrpt   30  122356.161 ± 2227.856  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_647._Benchmark.benchmark_Cluster_647$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_647._Benchmark.benchmark_Cluster_647

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8460.063 ops/s
# Warmup Iteration   2: 41351.459 ops/s
# Warmup Iteration   3: 84644.216 ops/s
# Warmup Iteration   4: 91758.881 ops/s
# Warmup Iteration   5: 69563.750 ops/s
# Warmup Iteration   6: 109582.165 ops/s
# Warmup Iteration   7: 105981.498 ops/s
# Warmup Iteration   8: 103539.107 ops/s
# Warmup Iteration   9: 107679.001 ops/s
# Warmup Iteration  10: 100312.898 ops/s
# Warmup Iteration  11: 102296.612 ops/s
# Warmup Iteration  12: 109351.398 ops/s
# Warmup Iteration  13: 105875.197 ops/s
# Warmup Iteration  14: 108516.674 ops/s
# Warmup Iteration  15: 101905.969 ops/s
# Warmup Iteration  16: 108631.003 ops/s
# Warmup Iteration  17: 103820.713 ops/s
# Warmup Iteration  18: 108726.809 ops/s
# Warmup Iteration  19: 107074.655 ops/s
# Warmup Iteration  20: 105100.707 ops/s
# Warmup Iteration  21: 111672.920 ops/s
# Warmup Iteration  22: 106078.050 ops/s
# Warmup Iteration  23: 104038.438 ops/s
# Warmup Iteration  24: 109492.326 ops/s
# Warmup Iteration  25: 108627.554 ops/s
# Warmup Iteration  26: 105856.014 ops/s
# Warmup Iteration  27: 103469.491 ops/s
# Warmup Iteration  28: 111348.577 ops/s
# Warmup Iteration  29: 105027.156 ops/s
# Warmup Iteration  30: 110058.110 ops/s
Iteration   1: 102486.835 ops/s
Iteration   2: 110980.710 ops/s
Iteration   3: 112887.181 ops/s
Iteration   4: 100701.218 ops/s
Iteration   5: 108379.189 ops/s
Iteration   6: 113868.005 ops/s
Iteration   7: 108845.474 ops/s
Iteration   8: 115372.804 ops/s
Iteration   9: 107015.925 ops/s
Iteration  10: 112319.742 ops/s
Iteration  11: 106079.041 ops/s
Iteration  12: 110849.004 ops/s
Iteration  13: 107360.494 ops/s
Iteration  14: 113343.534 ops/s
Iteration  15: 102238.834 ops/s
Iteration  16: 108856.896 ops/s
Iteration  17: 105693.929 ops/s
Iteration  18: 110217.791 ops/s
Iteration  19: 107818.388 ops/s
Iteration  20: 110839.482 ops/s
Iteration  21: 103816.501 ops/s
Iteration  22: 109828.354 ops/s
Iteration  23: 110653.405 ops/s
Iteration  24: 106552.222 ops/s
Iteration  25: 112906.784 ops/s
Iteration  26: 107157.755 ops/s
Iteration  27: 109233.119 ops/s
Iteration  28: 111449.627 ops/s
Iteration  29: 104397.083 ops/s
Iteration  30: 110405.523 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_647._Benchmark.benchmark_Cluster_647":
  108751.828 ±(99.9%) 2446.135 ops/s [Average]
  (min, avg, max) = (100701.218, 108751.828, 115372.804), stdev = 3661.259
  CI (99.9%): [106305.694, 111197.963] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_647._Benchmark.benchmark_Cluster_647  thrpt   30  108751.828 ± 2446.135  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_648._Benchmark.benchmark_Cluster_648$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_648._Benchmark.benchmark_Cluster_648

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3310.298 ops/s
# Warmup Iteration   2: 19766.210 ops/s
# Warmup Iteration   3: 27623.666 ops/s
# Warmup Iteration   4: 26222.527 ops/s
# Warmup Iteration   5: 46301.894 ops/s
# Warmup Iteration   6: 38596.641 ops/s
# Warmup Iteration   7: 60168.317 ops/s
# Warmup Iteration   8: 55118.452 ops/s
# Warmup Iteration   9: 48052.626 ops/s
# Warmup Iteration  10: 58040.442 ops/s
# Warmup Iteration  11: 41557.131 ops/s
# Warmup Iteration  12: 54384.313 ops/s
# Warmup Iteration  13: 60736.902 ops/s
# Warmup Iteration  14: 121723.979 ops/s
# Warmup Iteration  15: 114820.877 ops/s
# Warmup Iteration  16: 113912.832 ops/s
# Warmup Iteration  17: 118629.857 ops/s
# Warmup Iteration  18: 122354.507 ops/s
# Warmup Iteration  19: 117463.068 ops/s
# Warmup Iteration  20: 112723.580 ops/s
# Warmup Iteration  21: 120820.923 ops/s
# Warmup Iteration  22: 120747.124 ops/s
# Warmup Iteration  23: 123875.451 ops/s
# Warmup Iteration  24: 117037.609 ops/s
# Warmup Iteration  25: 111020.231 ops/s
# Warmup Iteration  26: 119904.935 ops/s
# Warmup Iteration  27: 119408.244 ops/s
# Warmup Iteration  28: 117867.198 ops/s
# Warmup Iteration  29: 123266.210 ops/s
# Warmup Iteration  30: 119645.021 ops/s
Iteration   1: 122630.464 ops/s
Iteration   2: 120016.831 ops/s
Iteration   3: 118368.722 ops/s
Iteration   4: 121061.856 ops/s
Iteration   5: 126017.240 ops/s
Iteration   6: 119046.750 ops/s
Iteration   7: 125460.670 ops/s
Iteration   8: 123832.891 ops/s
Iteration   9: 116786.145 ops/s
Iteration  10: 127104.657 ops/s
Iteration  11: 120081.567 ops/s
Iteration  12: 127827.537 ops/s
Iteration  13: 119784.399 ops/s
Iteration  14: 121168.365 ops/s
Iteration  15: 127492.790 ops/s
Iteration  16: 119625.097 ops/s
Iteration  17: 121306.358 ops/s
Iteration  18: 125344.941 ops/s
Iteration  19: 123091.465 ops/s
Iteration  20: 125144.028 ops/s
Iteration  21: 119431.377 ops/s
Iteration  22: 124730.304 ops/s
Iteration  23: 124379.288 ops/s
Iteration  24: 118465.156 ops/s
Iteration  25: 126108.439 ops/s
Iteration  26: 118790.511 ops/s
Iteration  27: 120495.761 ops/s
Iteration  28: 125150.531 ops/s
Iteration  29: 123490.503 ops/s
Iteration  30: 118033.097 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_648._Benchmark.benchmark_Cluster_648":
  122342.258 ±(99.9%) 2147.634 ops/s [Average]
  (min, avg, max) = (116786.145, 122342.258, 127827.537), stdev = 3214.477
  CI (99.9%): [120194.624, 124489.892] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_648._Benchmark.benchmark_Cluster_648  thrpt   30  122342.258 ± 2147.634  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_649._Benchmark.benchmark_Cluster_649$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_649._Benchmark.benchmark_Cluster_649

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 46656.860 ops/s
# Warmup Iteration   2: 70507.128 ops/s
# Warmup Iteration   3: 37426.474 ops/s
# Warmup Iteration   4: 30269.394 ops/s
# Warmup Iteration   5: 27891.141 ops/s
# Warmup Iteration   6: 70625.157 ops/s
# Warmup Iteration   7: 100325.052 ops/s
# Warmup Iteration   8: 104043.838 ops/s
# Warmup Iteration   9: 102600.265 ops/s
# Warmup Iteration  10: 97191.334 ops/s
# Warmup Iteration  11: 99549.302 ops/s
# Warmup Iteration  12: 102575.934 ops/s
# Warmup Iteration  13: 104862.488 ops/s
# Warmup Iteration  14: 99094.143 ops/s
# Warmup Iteration  15: 103855.862 ops/s
# Warmup Iteration  16: 103676.025 ops/s
# Warmup Iteration  17: 107826.133 ops/s
# Warmup Iteration  18: 108417.235 ops/s
# Warmup Iteration  19: 107406.556 ops/s
# Warmup Iteration  20: 109137.905 ops/s
# Warmup Iteration  21: 106522.022 ops/s
# Warmup Iteration  22: 106122.038 ops/s
# Warmup Iteration  23: 110157.251 ops/s
# Warmup Iteration  24: 100560.210 ops/s
# Warmup Iteration  25: 107323.387 ops/s
# Warmup Iteration  26: 105913.966 ops/s
# Warmup Iteration  27: 107796.770 ops/s
# Warmup Iteration  28: 106824.158 ops/s
# Warmup Iteration  29: 112543.186 ops/s
# Warmup Iteration  30: 104808.759 ops/s
Iteration   1: 112962.322 ops/s
Iteration   2: 106130.677 ops/s
Iteration   3: 107748.655 ops/s
Iteration   4: 112491.924 ops/s
Iteration   5: 106058.731 ops/s
Iteration   6: 107426.872 ops/s
Iteration   7: 108751.611 ops/s
Iteration   8: 109451.607 ops/s
Iteration   9: 106242.037 ops/s
Iteration  10: 109589.372 ops/s
Iteration  11: 107973.634 ops/s
Iteration  12: 105436.726 ops/s
Iteration  13: 108136.138 ops/s
Iteration  14: 84249.697 ops/s
Iteration  15: 106504.497 ops/s
Iteration  16: 109554.592 ops/s
Iteration  17: 104787.473 ops/s
Iteration  18: 110432.431 ops/s
Iteration  19: 104258.003 ops/s
Iteration  20: 107975.795 ops/s
Iteration  21: 111542.069 ops/s
Iteration  22: 103190.418 ops/s
Iteration  23: 112934.759 ops/s
Iteration  24: 106519.849 ops/s
Iteration  25: 109857.155 ops/s
Iteration  26: 106905.912 ops/s
Iteration  27: 105882.416 ops/s
Iteration  28: 110641.649 ops/s
Iteration  29: 104752.012 ops/s
Iteration  30: 106610.471 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_649._Benchmark.benchmark_Cluster_649":
  107166.650 ±(99.9%) 3366.453 ops/s [Average]
  (min, avg, max) = (84249.697, 107166.650, 112962.322), stdev = 5038.749
  CI (99.9%): [103800.197, 110533.103] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_649._Benchmark.benchmark_Cluster_649  thrpt   30  107166.650 ± 3366.453  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_65._Benchmark.benchmark_Cluster_65$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_65._Benchmark.benchmark_Cluster_65

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1095.933 ops/s
# Warmup Iteration   2: 14028.889 ops/s
# Warmup Iteration   3: 20525.776 ops/s
# Warmup Iteration   4: 34805.717 ops/s
# Warmup Iteration   5: 48448.848 ops/s
# Warmup Iteration   6: 82923.005 ops/s
# Warmup Iteration   7: 82433.910 ops/s
# Warmup Iteration   8: 80576.565 ops/s
# Warmup Iteration   9: 81456.129 ops/s
# Warmup Iteration  10: 84499.729 ops/s
# Warmup Iteration  11: 87196.276 ops/s
# Warmup Iteration  12: 81689.197 ops/s
# Warmup Iteration  13: 85114.965 ops/s
# Warmup Iteration  14: 82030.701 ops/s
# Warmup Iteration  15: 84486.898 ops/s
# Warmup Iteration  16: 80669.544 ops/s
# Warmup Iteration  17: 82533.974 ops/s
# Warmup Iteration  18: 84391.776 ops/s
# Warmup Iteration  19: 82825.559 ops/s
# Warmup Iteration  20: 84828.211 ops/s
# Warmup Iteration  21: 82571.226 ops/s
# Warmup Iteration  22: 80976.191 ops/s
# Warmup Iteration  23: 84008.755 ops/s
# Warmup Iteration  24: 85466.182 ops/s
# Warmup Iteration  25: 86666.882 ops/s
# Warmup Iteration  26: 82404.695 ops/s
# Warmup Iteration  27: 86611.024 ops/s
# Warmup Iteration  28: 81247.890 ops/s
# Warmup Iteration  29: 82424.966 ops/s
# Warmup Iteration  30: 79564.709 ops/s
Iteration   1: 86394.835 ops/s
Iteration   2: 83300.968 ops/s
Iteration   3: 85388.001 ops/s
Iteration   4: 85167.510 ops/s
Iteration   5: 83330.089 ops/s
Iteration   6: 85650.867 ops/s
Iteration   7: 83567.879 ops/s
Iteration   8: 87534.224 ops/s
Iteration   9: 84699.329 ops/s
Iteration  10: 86560.137 ops/s
Iteration  11: 83347.362 ops/s
Iteration  12: 84021.706 ops/s
Iteration  13: 88147.065 ops/s
Iteration  14: 83726.901 ops/s
Iteration  15: 84246.970 ops/s
Iteration  16: 88016.737 ops/s
Iteration  17: 83676.832 ops/s
Iteration  18: 88195.665 ops/s
Iteration  19: 85964.597 ops/s
Iteration  20: 84352.875 ops/s
Iteration  21: 85068.968 ops/s
Iteration  22: 85636.880 ops/s
Iteration  23: 84194.409 ops/s
Iteration  24: 84442.275 ops/s
Iteration  25: 87951.047 ops/s
Iteration  26: 81816.680 ops/s
Iteration  27: 85179.480 ops/s
Iteration  28: 84665.351 ops/s
Iteration  29: 84292.608 ops/s
Iteration  30: 82200.149 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_65._Benchmark.benchmark_Cluster_65":
  85024.613 ±(99.9%) 1151.152 ops/s [Average]
  (min, avg, max) = (81816.680, 85024.613, 88195.665), stdev = 1722.990
  CI (99.9%): [83873.462, 86175.765] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_65._Benchmark.benchmark_Cluster_65  thrpt   30  85024.613 ± 1151.152  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_650._Benchmark.benchmark_Cluster_650$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_650._Benchmark.benchmark_Cluster_650

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18765.497 ops/s
# Warmup Iteration   2: 33578.790 ops/s
# Warmup Iteration   3: 29940.660 ops/s
# Warmup Iteration   4: 49722.685 ops/s
# Warmup Iteration   5: 38169.526 ops/s
# Warmup Iteration   6: 95959.181 ops/s
# Warmup Iteration   7: 120230.545 ops/s
# Warmup Iteration   8: 122519.232 ops/s
# Warmup Iteration   9: 122941.120 ops/s
# Warmup Iteration  10: 118730.308 ops/s
# Warmup Iteration  11: 124759.361 ops/s
# Warmup Iteration  12: 118939.403 ops/s
# Warmup Iteration  13: 120918.052 ops/s
# Warmup Iteration  14: 116741.169 ops/s
# Warmup Iteration  15: 122035.013 ops/s
# Warmup Iteration  16: 121373.369 ops/s
# Warmup Iteration  17: 127429.724 ops/s
# Warmup Iteration  18: 131144.084 ops/s
# Warmup Iteration  19: 127086.065 ops/s
# Warmup Iteration  20: 128854.580 ops/s
# Warmup Iteration  21: 130027.390 ops/s
# Warmup Iteration  22: 125715.352 ops/s
# Warmup Iteration  23: 131236.403 ops/s
# Warmup Iteration  24: 123227.294 ops/s
# Warmup Iteration  25: 126759.273 ops/s
# Warmup Iteration  26: 128103.233 ops/s
# Warmup Iteration  27: 125273.855 ops/s
# Warmup Iteration  28: 122834.192 ops/s
# Warmup Iteration  29: 121188.847 ops/s
# Warmup Iteration  30: 130783.641 ops/s
Iteration   1: 127699.301 ops/s
Iteration   2: 127574.516 ops/s
Iteration   3: 132065.857 ops/s
Iteration   4: 125971.744 ops/s
Iteration   5: 132260.101 ops/s
Iteration   6: 125375.464 ops/s
Iteration   7: 131453.114 ops/s
Iteration   8: 128232.027 ops/s
Iteration   9: 105334.388 ops/s
Iteration  10: 131842.982 ops/s
Iteration  11: 125175.833 ops/s
Iteration  12: 131396.132 ops/s
Iteration  13: 127264.266 ops/s
Iteration  14: 135082.972 ops/s
Iteration  15: 124211.107 ops/s
Iteration  16: 126451.707 ops/s
Iteration  17: 127581.085 ops/s
Iteration  18: 128155.777 ops/s
Iteration  19: 132147.051 ops/s
Iteration  20: 125349.859 ops/s
Iteration  21: 130743.924 ops/s
Iteration  22: 127087.105 ops/s
Iteration  23: 127173.462 ops/s
Iteration  24: 127901.880 ops/s
Iteration  25: 127982.777 ops/s
Iteration  26: 128555.602 ops/s
Iteration  27: 131349.980 ops/s
Iteration  28: 125224.897 ops/s
Iteration  29: 127602.950 ops/s
Iteration  30: 133470.109 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_650._Benchmark.benchmark_Cluster_650":
  127923.932 ±(99.9%) 3411.274 ops/s [Average]
  (min, avg, max) = (105334.388, 127923.932, 135082.972), stdev = 5105.834
  CI (99.9%): [124512.659, 131335.206] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_650._Benchmark.benchmark_Cluster_650  thrpt   30  127923.932 ± 3411.274  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_651._Benchmark.benchmark_Cluster_651$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_651._Benchmark.benchmark_Cluster_651

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10875.383 ops/s
# Warmup Iteration   2: 26380.929 ops/s
# Warmup Iteration   3: 27989.102 ops/s
# Warmup Iteration   4: 25078.426 ops/s
# Warmup Iteration   5: 38156.570 ops/s
# Warmup Iteration   6: 28998.210 ops/s
# Warmup Iteration   7: 32095.279 ops/s
# Warmup Iteration   8: 35242.055 ops/s
# Warmup Iteration   9: 35953.135 ops/s
# Warmup Iteration  10: 46324.564 ops/s
# Warmup Iteration  11: 90289.801 ops/s
# Warmup Iteration  12: 97800.959 ops/s
# Warmup Iteration  13: 100071.833 ops/s
# Warmup Iteration  14: 101540.692 ops/s
# Warmup Iteration  15: 97449.700 ops/s
# Warmup Iteration  16: 102023.873 ops/s
# Warmup Iteration  17: 104413.678 ops/s
# Warmup Iteration  18: 101119.460 ops/s
# Warmup Iteration  19: 101543.394 ops/s
# Warmup Iteration  20: 102152.676 ops/s
# Warmup Iteration  21: 105239.668 ops/s
# Warmup Iteration  22: 108497.212 ops/s
# Warmup Iteration  23: 103047.809 ops/s
# Warmup Iteration  24: 100726.212 ops/s
# Warmup Iteration  25: 102842.644 ops/s
# Warmup Iteration  26: 103971.653 ops/s
# Warmup Iteration  27: 104934.752 ops/s
# Warmup Iteration  28: 107406.628 ops/s
# Warmup Iteration  29: 102035.872 ops/s
# Warmup Iteration  30: 107302.902 ops/s
Iteration   1: 102349.197 ops/s
Iteration   2: 104237.525 ops/s
Iteration   3: 103283.714 ops/s
Iteration   4: 103574.849 ops/s
Iteration   5: 105857.958 ops/s
Iteration   6: 102887.640 ops/s
Iteration   7: 106358.367 ops/s
Iteration   8: 106782.237 ops/s
Iteration   9: 101475.552 ops/s
Iteration  10: 103983.215 ops/s
Iteration  11: 101806.129 ops/s
Iteration  12: 105412.971 ops/s
Iteration  13: 102236.275 ops/s
Iteration  14: 104517.928 ops/s
Iteration  15: 104812.890 ops/s
Iteration  16: 103625.790 ops/s
Iteration  17: 104057.414 ops/s
Iteration  18: 105242.590 ops/s
Iteration  19: 102270.949 ops/s
Iteration  20: 107383.429 ops/s
Iteration  21: 103010.115 ops/s
Iteration  22: 108944.638 ops/s
Iteration  23: 106243.702 ops/s
Iteration  24: 100484.100 ops/s
Iteration  25: 105059.637 ops/s
Iteration  26: 107197.318 ops/s
Iteration  27: 102680.867 ops/s
Iteration  28: 103246.107 ops/s
Iteration  29: 106337.577 ops/s
Iteration  30: 102153.188 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_651._Benchmark.benchmark_Cluster_651":
  104250.462 ±(99.9%) 1349.332 ops/s [Average]
  (min, avg, max) = (100484.100, 104250.462, 108944.638), stdev = 2019.617
  CI (99.9%): [102901.130, 105599.794] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_651._Benchmark.benchmark_Cluster_651  thrpt   30  104250.462 ± 1349.332  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_652._Benchmark.benchmark_Cluster_652$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_652._Benchmark.benchmark_Cluster_652

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20675.364 ops/s
# Warmup Iteration   2: 44464.164 ops/s
# Warmup Iteration   3: 94992.071 ops/s
# Warmup Iteration   4: 114178.978 ops/s
# Warmup Iteration   5: 110308.362 ops/s
# Warmup Iteration   6: 112685.482 ops/s
# Warmup Iteration   7: 103486.856 ops/s
# Warmup Iteration   8: 117500.858 ops/s
# Warmup Iteration   9: 115940.744 ops/s
# Warmup Iteration  10: 119755.916 ops/s
# Warmup Iteration  11: 114078.294 ops/s
# Warmup Iteration  12: 122010.710 ops/s
# Warmup Iteration  13: 120553.688 ops/s
# Warmup Iteration  14: 116441.316 ops/s
# Warmup Iteration  15: 118843.822 ops/s
# Warmup Iteration  16: 121225.854 ops/s
# Warmup Iteration  17: 122607.960 ops/s
# Warmup Iteration  18: 122462.211 ops/s
# Warmup Iteration  19: 127997.031 ops/s
# Warmup Iteration  20: 119714.880 ops/s
# Warmup Iteration  21: 128056.591 ops/s
# Warmup Iteration  22: 124230.592 ops/s
# Warmup Iteration  23: 120293.882 ops/s
# Warmup Iteration  24: 124808.836 ops/s
# Warmup Iteration  25: 127114.390 ops/s
# Warmup Iteration  26: 119979.847 ops/s
# Warmup Iteration  27: 124361.978 ops/s
# Warmup Iteration  28: 122895.645 ops/s
# Warmup Iteration  29: 126149.006 ops/s
# Warmup Iteration  30: 123248.316 ops/s
Iteration   1: 124638.463 ops/s
Iteration   2: 123257.714 ops/s
Iteration   3: 96702.901 ops/s
Iteration   4: 124537.315 ops/s
Iteration   5: 121021.274 ops/s
Iteration   6: 127726.329 ops/s
Iteration   7: 126451.336 ops/s
Iteration   8: 120134.267 ops/s
Iteration   9: 125784.990 ops/s
Iteration  10: 119369.304 ops/s
Iteration  11: 127311.409 ops/s
Iteration  12: 118371.405 ops/s
Iteration  13: 126043.829 ops/s
Iteration  14: 127314.532 ops/s
Iteration  15: 123001.852 ops/s
Iteration  16: 119454.075 ops/s
Iteration  17: 125008.789 ops/s
Iteration  18: 123521.858 ops/s
Iteration  19: 122258.335 ops/s
Iteration  20: 125358.887 ops/s
Iteration  21: 121192.783 ops/s
Iteration  22: 125236.960 ops/s
Iteration  23: 126002.074 ops/s
Iteration  24: 120787.129 ops/s
Iteration  25: 125182.238 ops/s
Iteration  26: 124309.357 ops/s
Iteration  27: 118412.846 ops/s
Iteration  28: 125459.599 ops/s
Iteration  29: 119002.123 ops/s
Iteration  30: 122775.050 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_652._Benchmark.benchmark_Cluster_652":
  122520.968 ±(99.9%) 3762.585 ops/s [Average]
  (min, avg, max) = (96702.901, 122520.968, 127726.329), stdev = 5631.660
  CI (99.9%): [118758.383, 126283.552] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_652._Benchmark.benchmark_Cluster_652  thrpt   30  122520.968 ± 3762.585  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_653._Benchmark.benchmark_Cluster_653$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_653._Benchmark.benchmark_Cluster_653

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19629.592 ops/s
# Warmup Iteration   2: 52670.968 ops/s
# Warmup Iteration   3: 78409.525 ops/s
# Warmup Iteration   4: 96413.029 ops/s
# Warmup Iteration   5: 98474.462 ops/s
# Warmup Iteration   6: 96444.389 ops/s
# Warmup Iteration   7: 94340.415 ops/s
# Warmup Iteration   8: 95784.642 ops/s
# Warmup Iteration   9: 92921.778 ops/s
# Warmup Iteration  10: 94937.965 ops/s
# Warmup Iteration  11: 99430.540 ops/s
# Warmup Iteration  12: 90274.205 ops/s
# Warmup Iteration  13: 100102.248 ops/s
# Warmup Iteration  14: 95568.057 ops/s
# Warmup Iteration  15: 98743.119 ops/s
# Warmup Iteration  16: 98424.893 ops/s
# Warmup Iteration  17: 103565.892 ops/s
# Warmup Iteration  18: 103174.594 ops/s
# Warmup Iteration  19: 100195.073 ops/s
# Warmup Iteration  20: 100017.651 ops/s
# Warmup Iteration  21: 106530.798 ops/s
# Warmup Iteration  22: 102178.722 ops/s
# Warmup Iteration  23: 97535.754 ops/s
# Warmup Iteration  24: 102854.731 ops/s
# Warmup Iteration  25: 104215.093 ops/s
# Warmup Iteration  26: 106884.899 ops/s
# Warmup Iteration  27: 97804.214 ops/s
# Warmup Iteration  28: 106277.479 ops/s
# Warmup Iteration  29: 100099.126 ops/s
# Warmup Iteration  30: 101027.138 ops/s
Iteration   1: 105244.911 ops/s
Iteration   2: 98118.558 ops/s
Iteration   3: 102175.644 ops/s
Iteration   4: 100266.017 ops/s
Iteration   5: 101082.671 ops/s
Iteration   6: 103355.724 ops/s
Iteration   7: 100183.493 ops/s
Iteration   8: 100150.214 ops/s
Iteration   9: 100947.498 ops/s
Iteration  10: 104274.224 ops/s
Iteration  11: 104576.353 ops/s
Iteration  12: 100862.951 ops/s
Iteration  13: 106115.277 ops/s
Iteration  14: 103043.449 ops/s
Iteration  15: 98096.344 ops/s
Iteration  16: 101640.770 ops/s
Iteration  17: 105826.916 ops/s
Iteration  18: 99691.823 ops/s
Iteration  19: 103503.507 ops/s
Iteration  20: 99567.097 ops/s
Iteration  21: 102635.064 ops/s
Iteration  22: 103930.628 ops/s
Iteration  23: 102300.404 ops/s
Iteration  24: 105529.563 ops/s
Iteration  25: 100454.306 ops/s
Iteration  26: 100594.446 ops/s
Iteration  27: 106009.765 ops/s
Iteration  28: 103713.893 ops/s
Iteration  29: 101366.209 ops/s
Iteration  30: 104546.901 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_653._Benchmark.benchmark_Cluster_653":
  102326.821 ±(99.9%) 1557.164 ops/s [Average]
  (min, avg, max) = (98096.344, 102326.821, 106115.277), stdev = 2330.690
  CI (99.9%): [100769.657, 103883.984] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_653._Benchmark.benchmark_Cluster_653  thrpt   30  102326.821 ± 1557.164  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_654._Benchmark.benchmark_Cluster_654$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_654._Benchmark.benchmark_Cluster_654

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4668.641 ops/s
# Warmup Iteration   2: 21510.264 ops/s
# Warmup Iteration   3: 17946.035 ops/s
# Warmup Iteration   4: 19215.194 ops/s
# Warmup Iteration   5: 16692.940 ops/s
# Warmup Iteration   6: 16632.607 ops/s
# Warmup Iteration   7: 16945.314 ops/s
# Warmup Iteration   8: 16978.795 ops/s
# Warmup Iteration   9: 17318.184 ops/s
# Warmup Iteration  10: 17926.102 ops/s
# Warmup Iteration  11: 17324.124 ops/s
# Warmup Iteration  12: 17092.214 ops/s
# Warmup Iteration  13: 17934.212 ops/s
# Warmup Iteration  14: 17175.886 ops/s
# Warmup Iteration  15: 17233.239 ops/s
# Warmup Iteration  16: 17215.725 ops/s
# Warmup Iteration  17: 17854.434 ops/s
# Warmup Iteration  18: 17041.223 ops/s
# Warmup Iteration  19: 17506.790 ops/s
# Warmup Iteration  20: 17622.323 ops/s
# Warmup Iteration  21: 17756.231 ops/s
# Warmup Iteration  22: 18429.075 ops/s
# Warmup Iteration  23: 17643.834 ops/s
# Warmup Iteration  24: 17921.189 ops/s
# Warmup Iteration  25: 17371.917 ops/s
# Warmup Iteration  26: 17787.272 ops/s
# Warmup Iteration  27: 17759.297 ops/s
# Warmup Iteration  28: 16911.591 ops/s
# Warmup Iteration  29: 17600.777 ops/s
# Warmup Iteration  30: 17542.501 ops/s
Iteration   1: 18496.762 ops/s
Iteration   2: 17343.465 ops/s
Iteration   3: 17518.524 ops/s
Iteration   4: 16599.518 ops/s
Iteration   5: 18207.090 ops/s
Iteration   6: 17652.475 ops/s
Iteration   7: 17615.462 ops/s
Iteration   8: 17614.220 ops/s
Iteration   9: 17653.196 ops/s
Iteration  10: 17105.975 ops/s
Iteration  11: 17800.137 ops/s
Iteration  12: 17469.518 ops/s
Iteration  13: 17420.845 ops/s
Iteration  14: 17704.810 ops/s
Iteration  15: 17360.111 ops/s
Iteration  16: 17939.463 ops/s
Iteration  17: 17458.557 ops/s
Iteration  18: 18057.916 ops/s
Iteration  19: 17279.135 ops/s
Iteration  20: 17552.386 ops/s
Iteration  21: 17342.134 ops/s
Iteration  22: 17280.379 ops/s
Iteration  23: 17076.653 ops/s
Iteration  24: 17490.604 ops/s
Iteration  25: 17569.635 ops/s
Iteration  26: 16961.538 ops/s
Iteration  27: 17842.753 ops/s
Iteration  28: 17557.174 ops/s
Iteration  29: 17569.786 ops/s
Iteration  30: 17763.196 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_654._Benchmark.benchmark_Cluster_654":
  17543.447 ±(99.9%) 246.872 ops/s [Average]
  (min, avg, max) = (16599.518, 17543.447, 18496.762), stdev = 369.507
  CI (99.9%): [17296.575, 17790.319] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_654._Benchmark.benchmark_Cluster_654  thrpt   30  17543.447 ± 246.872  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_655._Benchmark.benchmark_Cluster_655$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_655._Benchmark.benchmark_Cluster_655

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.702 ops/s
# Warmup Iteration   2: 11502.339 ops/s
# Warmup Iteration   3: 27034.401 ops/s
# Warmup Iteration   4: 41757.511 ops/s
# Warmup Iteration   5: 49789.027 ops/s
# Warmup Iteration   6: 41813.730 ops/s
# Warmup Iteration   7: 55061.678 ops/s
# Warmup Iteration   8: 85359.678 ops/s
# Warmup Iteration   9: 147551.654 ops/s
# Warmup Iteration  10: 155429.019 ops/s
# Warmup Iteration  11: 155524.355 ops/s
# Warmup Iteration  12: 151288.148 ops/s
# Warmup Iteration  13: 143820.128 ops/s
# Warmup Iteration  14: 151310.864 ops/s
# Warmup Iteration  15: 150420.603 ops/s
# Warmup Iteration  16: 150120.360 ops/s
# Warmup Iteration  17: 146456.448 ops/s
# Warmup Iteration  18: 155373.449 ops/s
# Warmup Iteration  19: 154471.405 ops/s
# Warmup Iteration  20: 140713.396 ops/s
# Warmup Iteration  21: 153876.380 ops/s
# Warmup Iteration  22: 147336.042 ops/s
# Warmup Iteration  23: 149163.296 ops/s
# Warmup Iteration  24: 146490.998 ops/s
# Warmup Iteration  25: 149152.446 ops/s
# Warmup Iteration  26: 158003.328 ops/s
# Warmup Iteration  27: 139331.496 ops/s
# Warmup Iteration  28: 153894.736 ops/s
# Warmup Iteration  29: 155718.360 ops/s
# Warmup Iteration  30: 149204.081 ops/s
Iteration   1: 157352.868 ops/s
Iteration   2: 150487.665 ops/s
Iteration   3: 156785.269 ops/s
Iteration   4: 154434.253 ops/s
Iteration   5: 151923.723 ops/s
Iteration   6: 151514.755 ops/s
Iteration   7: 157367.705 ops/s
Iteration   8: 152783.635 ops/s
Iteration   9: 152862.932 ops/s
Iteration  10: 156992.591 ops/s
Iteration  11: 149575.310 ops/s
Iteration  12: 157454.890 ops/s
Iteration  13: 154987.251 ops/s
Iteration  14: 152366.602 ops/s
Iteration  15: 150075.198 ops/s
Iteration  16: 156043.375 ops/s
Iteration  17: 150915.893 ops/s
Iteration  18: 156587.205 ops/s
Iteration  19: 147638.550 ops/s
Iteration  20: 148354.424 ops/s
Iteration  21: 151307.923 ops/s
Iteration  22: 152110.340 ops/s
Iteration  23: 154834.444 ops/s
Iteration  24: 155599.633 ops/s
Iteration  25: 158618.837 ops/s
Iteration  26: 149212.124 ops/s
Iteration  27: 157542.019 ops/s
Iteration  28: 152359.674 ops/s
Iteration  29: 149751.781 ops/s
Iteration  30: 156861.130 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_655._Benchmark.benchmark_Cluster_655":
  153490.067 ±(99.9%) 2150.177 ops/s [Average]
  (min, avg, max) = (147638.550, 153490.067, 158618.837), stdev = 3218.284
  CI (99.9%): [151339.890, 155640.244] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_655._Benchmark.benchmark_Cluster_655  thrpt   30  153490.067 ± 2150.177  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_656._Benchmark.benchmark_Cluster_656$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_656._Benchmark.benchmark_Cluster_656

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2236.188 ops/s
# Warmup Iteration   2: 18418.274 ops/s
# Warmup Iteration   3: 26188.115 ops/s
# Warmup Iteration   4: 45192.113 ops/s
# Warmup Iteration   5: 52868.124 ops/s
# Warmup Iteration   6: 49033.625 ops/s
# Warmup Iteration   7: 51297.689 ops/s
# Warmup Iteration   8: 53186.761 ops/s
# Warmup Iteration   9: 56293.788 ops/s
# Warmup Iteration  10: 52048.071 ops/s
# Warmup Iteration  11: 48501.046 ops/s
# Warmup Iteration  12: 52669.636 ops/s
# Warmup Iteration  13: 44170.426 ops/s
# Warmup Iteration  14: 49744.669 ops/s
# Warmup Iteration  15: 51462.585 ops/s
# Warmup Iteration  16: 50199.278 ops/s
# Warmup Iteration  17: 54244.729 ops/s
# Warmup Iteration  18: 58065.721 ops/s
# Warmup Iteration  19: 53919.256 ops/s
# Warmup Iteration  20: 53222.962 ops/s
# Warmup Iteration  21: 41448.234 ops/s
# Warmup Iteration  22: 50875.825 ops/s
# Warmup Iteration  23: 55218.459 ops/s
# Warmup Iteration  24: 53879.890 ops/s
# Warmup Iteration  25: 56279.673 ops/s
# Warmup Iteration  26: 54261.731 ops/s
# Warmup Iteration  27: 52721.386 ops/s
# Warmup Iteration  28: 51015.255 ops/s
# Warmup Iteration  29: 54601.625 ops/s
# Warmup Iteration  30: 54536.766 ops/s
Iteration   1: 58813.941 ops/s
Iteration   2: 52505.592 ops/s
Iteration   3: 53848.020 ops/s
Iteration   4: 52267.567 ops/s
Iteration   5: 50514.401 ops/s
Iteration   6: 52363.462 ops/s
Iteration   7: 51911.067 ops/s
Iteration   8: 53762.677 ops/s
Iteration   9: 54035.655 ops/s
Iteration  10: 48781.859 ops/s
Iteration  11: 47502.281 ops/s
Iteration  12: 51159.857 ops/s
Iteration  13: 47933.975 ops/s
Iteration  14: 48732.446 ops/s
Iteration  15: 48447.385 ops/s
Iteration  16: 51018.589 ops/s
Iteration  17: 51673.839 ops/s
Iteration  18: 54891.280 ops/s
Iteration  19: 52708.327 ops/s
Iteration  20: 51521.736 ops/s
Iteration  21: 52410.048 ops/s
Iteration  22: 57905.241 ops/s
Iteration  23: 49842.761 ops/s
Iteration  24: 53372.194 ops/s
Iteration  25: 50248.078 ops/s
Iteration  26: 53427.918 ops/s
Iteration  27: 54943.922 ops/s
Iteration  28: 50144.928 ops/s
Iteration  29: 48680.286 ops/s
Iteration  30: 52725.052 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_656._Benchmark.benchmark_Cluster_656":
  51936.479 ±(99.9%) 1803.307 ops/s [Average]
  (min, avg, max) = (47502.281, 51936.479, 58813.941), stdev = 2699.105
  CI (99.9%): [50133.173, 53739.786] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_656._Benchmark.benchmark_Cluster_656  thrpt   30  51936.479 ± 1803.307  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_657._Benchmark.benchmark_Cluster_657$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_657._Benchmark.benchmark_Cluster_657

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13625.916 ops/s
# Warmup Iteration   2: 44301.010 ops/s
# Warmup Iteration   3: 50371.654 ops/s
# Warmup Iteration   4: 109089.360 ops/s
# Warmup Iteration   5: 109645.175 ops/s
# Warmup Iteration   6: 127129.055 ops/s
# Warmup Iteration   7: 121556.031 ops/s
# Warmup Iteration   8: 129237.381 ops/s
# Warmup Iteration   9: 123912.935 ops/s
# Warmup Iteration  10: 120991.642 ops/s
# Warmup Iteration  11: 123305.744 ops/s
# Warmup Iteration  12: 118057.820 ops/s
# Warmup Iteration  13: 115470.991 ops/s
# Warmup Iteration  14: 126705.450 ops/s
# Warmup Iteration  15: 122384.912 ops/s
# Warmup Iteration  16: 130034.252 ops/s
# Warmup Iteration  17: 132773.056 ops/s
# Warmup Iteration  18: 129380.904 ops/s
# Warmup Iteration  19: 127663.483 ops/s
# Warmup Iteration  20: 133624.600 ops/s
# Warmup Iteration  21: 129409.438 ops/s
# Warmup Iteration  22: 133603.793 ops/s
# Warmup Iteration  23: 129561.185 ops/s
# Warmup Iteration  24: 127960.930 ops/s
# Warmup Iteration  25: 132362.876 ops/s
# Warmup Iteration  26: 130850.791 ops/s
# Warmup Iteration  27: 126355.730 ops/s
# Warmup Iteration  28: 136892.305 ops/s
# Warmup Iteration  29: 126151.446 ops/s
# Warmup Iteration  30: 138006.563 ops/s
Iteration   1: 134213.713 ops/s
Iteration   2: 127852.987 ops/s
Iteration   3: 134446.893 ops/s
Iteration   4: 133275.560 ops/s
Iteration   5: 128211.286 ops/s
Iteration   6: 136616.799 ops/s
Iteration   7: 131028.258 ops/s
Iteration   8: 133159.813 ops/s
Iteration   9: 130119.030 ops/s
Iteration  10: 131153.072 ops/s
Iteration  11: 132247.843 ops/s
Iteration  12: 131401.606 ops/s
Iteration  13: 129187.799 ops/s
Iteration  14: 127399.211 ops/s
Iteration  15: 130992.242 ops/s
Iteration  16: 127586.512 ops/s
Iteration  17: 129345.972 ops/s
Iteration  18: 132939.309 ops/s
Iteration  19: 122220.192 ops/s
Iteration  20: 131185.347 ops/s
Iteration  21: 103194.888 ops/s
Iteration  22: 127790.406 ops/s
Iteration  23: 130827.686 ops/s
Iteration  24: 123638.202 ops/s
Iteration  25: 130970.972 ops/s
Iteration  26: 126283.797 ops/s
Iteration  27: 128723.467 ops/s
Iteration  28: 129958.314 ops/s
Iteration  29: 124996.839 ops/s
Iteration  30: 136346.014 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_657._Benchmark.benchmark_Cluster_657":
  129243.801 ±(99.9%) 3988.605 ops/s [Average]
  (min, avg, max) = (103194.888, 129243.801, 136616.799), stdev = 5969.956
  CI (99.9%): [125255.196, 133232.406] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_657._Benchmark.benchmark_Cluster_657  thrpt   30  129243.801 ± 3988.605  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_658._Benchmark.benchmark_Cluster_658$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_658._Benchmark.benchmark_Cluster_658

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12155.763 ops/s
# Warmup Iteration   2: 31816.952 ops/s
# Warmup Iteration   3: 52217.648 ops/s
# Warmup Iteration   4: 105900.315 ops/s
# Warmup Iteration   5: 115432.549 ops/s
# Warmup Iteration   6: 113013.563 ops/s
# Warmup Iteration   7: 110405.702 ops/s
# Warmup Iteration   8: 108913.541 ops/s
# Warmup Iteration   9: 111960.807 ops/s
# Warmup Iteration  10: 114679.469 ops/s
# Warmup Iteration  11: 117053.030 ops/s
# Warmup Iteration  12: 117117.036 ops/s
# Warmup Iteration  13: 117830.957 ops/s
# Warmup Iteration  14: 115286.371 ops/s
# Warmup Iteration  15: 119557.095 ops/s
# Warmup Iteration  16: 108029.012 ops/s
# Warmup Iteration  17: 121078.089 ops/s
# Warmup Iteration  18: 117025.196 ops/s
# Warmup Iteration  19: 121152.182 ops/s
# Warmup Iteration  20: 121002.256 ops/s
# Warmup Iteration  21: 126683.809 ops/s
# Warmup Iteration  22: 117316.523 ops/s
# Warmup Iteration  23: 125060.064 ops/s
# Warmup Iteration  24: 121313.710 ops/s
# Warmup Iteration  25: 119387.772 ops/s
# Warmup Iteration  26: 122035.816 ops/s
# Warmup Iteration  27: 121629.487 ops/s
# Warmup Iteration  28: 124242.467 ops/s
# Warmup Iteration  29: 118548.415 ops/s
# Warmup Iteration  30: 122353.371 ops/s
Iteration   1: 125146.125 ops/s
Iteration   2: 120107.067 ops/s
Iteration   3: 127366.014 ops/s
Iteration   4: 122733.392 ops/s
Iteration   5: 120563.077 ops/s
Iteration   6: 123245.232 ops/s
Iteration   7: 123599.524 ops/s
Iteration   8: 118985.559 ops/s
Iteration   9: 126653.174 ops/s
Iteration  10: 119160.738 ops/s
Iteration  11: 123394.649 ops/s
Iteration  12: 120748.714 ops/s
Iteration  13: 120064.564 ops/s
Iteration  14: 120553.276 ops/s
Iteration  15: 124265.330 ops/s
Iteration  16: 119013.077 ops/s
Iteration  17: 118768.842 ops/s
Iteration  18: 126241.523 ops/s
Iteration  19: 119030.499 ops/s
Iteration  20: 123448.128 ops/s
Iteration  21: 119132.818 ops/s
Iteration  22: 125250.612 ops/s
Iteration  23: 117292.290 ops/s
Iteration  24: 120411.564 ops/s
Iteration  25: 124728.062 ops/s
Iteration  26: 116830.723 ops/s
Iteration  27: 126209.582 ops/s
Iteration  28: 118141.664 ops/s
Iteration  29: 117985.124 ops/s
Iteration  30: 120468.280 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_658._Benchmark.benchmark_Cluster_658":
  121651.308 ±(99.9%) 2059.629 ops/s [Average]
  (min, avg, max) = (116830.723, 121651.308, 127366.014), stdev = 3082.756
  CI (99.9%): [119591.678, 123710.937] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_658._Benchmark.benchmark_Cluster_658  thrpt   30  121651.308 ± 2059.629  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_659._Benchmark.benchmark_Cluster_659$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_659._Benchmark.benchmark_Cluster_659

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17289.590 ops/s
# Warmup Iteration   2: 77282.392 ops/s
# Warmup Iteration   3: 98350.338 ops/s
# Warmup Iteration   4: 89507.488 ops/s
# Warmup Iteration   5: 109230.963 ops/s
# Warmup Iteration   6: 99883.740 ops/s
# Warmup Iteration   7: 104894.924 ops/s
# Warmup Iteration   8: 111562.722 ops/s
# Warmup Iteration   9: 111725.251 ops/s
# Warmup Iteration  10: 105958.633 ops/s
# Warmup Iteration  11: 106684.093 ops/s
# Warmup Iteration  12: 90749.695 ops/s
# Warmup Iteration  13: 107646.740 ops/s
# Warmup Iteration  14: 110183.686 ops/s
# Warmup Iteration  15: 106969.167 ops/s
# Warmup Iteration  16: 110375.209 ops/s
# Warmup Iteration  17: 116154.628 ops/s
# Warmup Iteration  18: 108395.229 ops/s
# Warmup Iteration  19: 115515.164 ops/s
# Warmup Iteration  20: 112347.601 ops/s
# Warmup Iteration  21: 116155.537 ops/s
# Warmup Iteration  22: 111885.214 ops/s
# Warmup Iteration  23: 113440.162 ops/s
# Warmup Iteration  24: 115395.664 ops/s
# Warmup Iteration  25: 108036.602 ops/s
# Warmup Iteration  26: 116911.025 ops/s
# Warmup Iteration  27: 110653.662 ops/s
# Warmup Iteration  28: 111039.216 ops/s
# Warmup Iteration  29: 111549.678 ops/s
# Warmup Iteration  30: 113100.419 ops/s
Iteration   1: 114389.567 ops/s
Iteration   2: 110469.659 ops/s
Iteration   3: 113367.968 ops/s
Iteration   4: 111376.322 ops/s
Iteration   5: 113830.518 ops/s
Iteration   6: 117148.293 ops/s
Iteration   7: 109178.476 ops/s
Iteration   8: 114734.036 ops/s
Iteration   9: 111576.041 ops/s
Iteration  10: 111851.119 ops/s
Iteration  11: 111125.903 ops/s
Iteration  12: 113833.979 ops/s
Iteration  13: 113579.917 ops/s
Iteration  14: 109589.165 ops/s
Iteration  15: 113569.457 ops/s
Iteration  16: 109869.303 ops/s
Iteration  17: 115741.589 ops/s
Iteration  18: 110112.358 ops/s
Iteration  19: 107919.555 ops/s
Iteration  20: 117689.471 ops/s
Iteration  21: 109649.598 ops/s
Iteration  22: 111146.708 ops/s
Iteration  23: 116971.940 ops/s
Iteration  24: 109973.846 ops/s
Iteration  25: 114250.118 ops/s
Iteration  26: 115443.551 ops/s
Iteration  27: 107227.093 ops/s
Iteration  28: 109279.306 ops/s
Iteration  29: 109554.786 ops/s
Iteration  30: 110654.125 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_659._Benchmark.benchmark_Cluster_659":
  112170.126 ±(99.9%) 1885.352 ops/s [Average]
  (min, avg, max) = (107227.093, 112170.126, 117689.471), stdev = 2821.907
  CI (99.9%): [110284.773, 114055.478] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_659._Benchmark.benchmark_Cluster_659  thrpt   30  112170.126 ± 1885.352  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_66._Benchmark.benchmark_Cluster_66$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_66._Benchmark.benchmark_Cluster_66

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13615.967 ops/s
# Warmup Iteration   2: 41709.794 ops/s
# Warmup Iteration   3: 125287.746 ops/s
# Warmup Iteration   4: 144229.776 ops/s
# Warmup Iteration   5: 160501.774 ops/s
# Warmup Iteration   6: 173981.265 ops/s
# Warmup Iteration   7: 172590.138 ops/s
# Warmup Iteration   8: 182853.462 ops/s
# Warmup Iteration   9: 169142.956 ops/s
# Warmup Iteration  10: 178933.880 ops/s
# Warmup Iteration  11: 169868.861 ops/s
# Warmup Iteration  12: 176229.526 ops/s
# Warmup Iteration  13: 177602.248 ops/s
# Warmup Iteration  14: 175331.874 ops/s
# Warmup Iteration  15: 181005.921 ops/s
# Warmup Iteration  16: 177502.811 ops/s
# Warmup Iteration  17: 177066.438 ops/s
# Warmup Iteration  18: 184751.711 ops/s
# Warmup Iteration  19: 178000.192 ops/s
# Warmup Iteration  20: 180578.457 ops/s
# Warmup Iteration  21: 179012.209 ops/s
# Warmup Iteration  22: 180862.187 ops/s
# Warmup Iteration  23: 181845.798 ops/s
# Warmup Iteration  24: 176218.893 ops/s
# Warmup Iteration  25: 181058.073 ops/s
# Warmup Iteration  26: 186784.212 ops/s
# Warmup Iteration  27: 179809.904 ops/s
# Warmup Iteration  28: 185294.371 ops/s
# Warmup Iteration  29: 178130.767 ops/s
# Warmup Iteration  30: 185727.510 ops/s
Iteration   1: 161328.826 ops/s
Iteration   2: 163962.935 ops/s
Iteration   3: 182978.100 ops/s
Iteration   4: 179123.290 ops/s
Iteration   5: 181657.144 ops/s
Iteration   6: 174435.912 ops/s
Iteration   7: 184892.588 ops/s
Iteration   8: 180347.373 ops/s
Iteration   9: 182714.447 ops/s
Iteration  10: 182866.540 ops/s
Iteration  11: 184726.583 ops/s
Iteration  12: 184485.293 ops/s
Iteration  13: 180248.744 ops/s
Iteration  14: 184535.874 ops/s
Iteration  15: 182774.296 ops/s
Iteration  16: 191844.172 ops/s
Iteration  17: 187991.315 ops/s
Iteration  18: 176788.554 ops/s
Iteration  19: 185838.176 ops/s
Iteration  20: 175051.682 ops/s
Iteration  21: 184210.547 ops/s
Iteration  22: 178084.480 ops/s
Iteration  23: 180772.955 ops/s
Iteration  24: 177418.060 ops/s
Iteration  25: 185010.579 ops/s
Iteration  26: 186735.284 ops/s
Iteration  27: 182503.212 ops/s
Iteration  28: 184246.236 ops/s
Iteration  29: 171974.457 ops/s
Iteration  30: 182638.583 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_66._Benchmark.benchmark_Cluster_66":
  180739.541 ±(99.9%) 4317.404 ops/s [Average]
  (min, avg, max) = (161328.826, 180739.541, 191844.172), stdev = 6462.088
  CI (99.9%): [176422.137, 185056.946] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_66._Benchmark.benchmark_Cluster_66  thrpt   30  180739.541 ± 4317.404  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_660._Benchmark.benchmark_Cluster_660$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_660._Benchmark.benchmark_Cluster_660

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20080.788 ops/s
# Warmup Iteration   2: 34558.762 ops/s
# Warmup Iteration   3: 132800.377 ops/s
# Warmup Iteration   4: 131353.469 ops/s
# Warmup Iteration   5: 134736.704 ops/s
# Warmup Iteration   6: 145081.421 ops/s
# Warmup Iteration   7: 123244.310 ops/s
# Warmup Iteration   8: 142190.838 ops/s
# Warmup Iteration   9: 139972.838 ops/s
# Warmup Iteration  10: 147497.883 ops/s
# Warmup Iteration  11: 139461.949 ops/s
# Warmup Iteration  12: 140532.853 ops/s
# Warmup Iteration  13: 141405.271 ops/s
# Warmup Iteration  14: 146747.991 ops/s
# Warmup Iteration  15: 137490.586 ops/s
# Warmup Iteration  16: 141809.914 ops/s
# Warmup Iteration  17: 144289.234 ops/s
# Warmup Iteration  18: 148344.273 ops/s
# Warmup Iteration  19: 148940.814 ops/s
# Warmup Iteration  20: 146446.304 ops/s
# Warmup Iteration  21: 150868.285 ops/s
# Warmup Iteration  22: 145078.540 ops/s
# Warmup Iteration  23: 139735.166 ops/s
# Warmup Iteration  24: 147561.148 ops/s
# Warmup Iteration  25: 153675.863 ops/s
# Warmup Iteration  26: 141588.039 ops/s
# Warmup Iteration  27: 150890.212 ops/s
# Warmup Iteration  28: 145918.161 ops/s
# Warmup Iteration  29: 142760.527 ops/s
# Warmup Iteration  30: 147192.394 ops/s
Iteration   1: 149368.728 ops/s
Iteration   2: 150043.768 ops/s
Iteration   3: 145300.070 ops/s
Iteration   4: 145353.177 ops/s
Iteration   5: 150615.331 ops/s
Iteration   6: 143780.453 ops/s
Iteration   7: 145339.978 ops/s
Iteration   8: 153955.506 ops/s
Iteration   9: 142700.841 ops/s
Iteration  10: 151802.374 ops/s
Iteration  11: 141322.423 ops/s
Iteration  12: 145844.152 ops/s
Iteration  13: 154042.561 ops/s
Iteration  14: 144965.065 ops/s
Iteration  15: 146789.082 ops/s
Iteration  16: 143485.417 ops/s
Iteration  17: 147753.561 ops/s
Iteration  18: 153969.091 ops/s
Iteration  19: 145176.197 ops/s
Iteration  20: 148871.722 ops/s
Iteration  21: 143963.498 ops/s
Iteration  22: 150963.822 ops/s
Iteration  23: 143860.244 ops/s
Iteration  24: 149367.265 ops/s
Iteration  25: 147602.641 ops/s
Iteration  26: 152077.637 ops/s
Iteration  27: 144775.376 ops/s
Iteration  28: 147551.034 ops/s
Iteration  29: 150070.442 ops/s
Iteration  30: 142416.090 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_660._Benchmark.benchmark_Cluster_660":
  147437.585 ±(99.9%) 2446.177 ops/s [Average]
  (min, avg, max) = (141322.423, 147437.585, 154042.561), stdev = 3661.323
  CI (99.9%): [144991.407, 149883.762] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_660._Benchmark.benchmark_Cluster_660  thrpt   30  147437.585 ± 2446.177  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_661._Benchmark.benchmark_Cluster_661$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_661._Benchmark.benchmark_Cluster_661

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.826 ops/s
# Warmup Iteration   2: 4251.769 ops/s
# Warmup Iteration   3: 21223.253 ops/s
# Warmup Iteration   4: 25379.395 ops/s
# Warmup Iteration   5: 39386.020 ops/s
# Warmup Iteration   6: 38489.997 ops/s
# Warmup Iteration   7: 43063.217 ops/s
# Warmup Iteration   8: 36494.437 ops/s
# Warmup Iteration   9: 40666.637 ops/s
# Warmup Iteration  10: 78599.087 ops/s
# Warmup Iteration  11: 96952.461 ops/s
# Warmup Iteration  12: 108976.982 ops/s
# Warmup Iteration  13: 119823.983 ops/s
# Warmup Iteration  14: 114009.467 ops/s
# Warmup Iteration  15: 119417.323 ops/s
# Warmup Iteration  16: 116545.027 ops/s
# Warmup Iteration  17: 109630.933 ops/s
# Warmup Iteration  18: 117143.307 ops/s
# Warmup Iteration  19: 119981.090 ops/s
# Warmup Iteration  20: 116407.561 ops/s
# Warmup Iteration  21: 116032.395 ops/s
# Warmup Iteration  22: 113503.121 ops/s
# Warmup Iteration  23: 113411.094 ops/s
# Warmup Iteration  24: 117396.406 ops/s
# Warmup Iteration  25: 123586.270 ops/s
# Warmup Iteration  26: 117582.048 ops/s
# Warmup Iteration  27: 110050.914 ops/s
# Warmup Iteration  28: 119940.780 ops/s
# Warmup Iteration  29: 113947.581 ops/s
# Warmup Iteration  30: 121339.152 ops/s
Iteration   1: 116020.056 ops/s
Iteration   2: 119409.322 ops/s
Iteration   3: 117130.983 ops/s
Iteration   4: 118000.662 ops/s
Iteration   5: 113869.904 ops/s
Iteration   6: 116568.465 ops/s
Iteration   7: 117239.681 ops/s
Iteration   8: 115601.309 ops/s
Iteration   9: 121771.360 ops/s
Iteration  10: 115243.561 ops/s
Iteration  11: 118529.795 ops/s
Iteration  12: 121732.217 ops/s
Iteration  13: 117626.835 ops/s
Iteration  14: 118509.846 ops/s
Iteration  15: 114183.511 ops/s
Iteration  16: 119400.488 ops/s
Iteration  17: 117852.775 ops/s
Iteration  18: 116464.833 ops/s
Iteration  19: 117062.839 ops/s
Iteration  20: 121414.183 ops/s
Iteration  21: 113265.498 ops/s
Iteration  22: 118147.941 ops/s
Iteration  23: 114194.797 ops/s
Iteration  24: 116272.952 ops/s
Iteration  25: 118592.426 ops/s
Iteration  26: 115854.192 ops/s
Iteration  27: 123950.005 ops/s
Iteration  28: 119466.192 ops/s
Iteration  29: 118968.421 ops/s
Iteration  30: 121224.968 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_661._Benchmark.benchmark_Cluster_661":
  117785.667 ±(99.9%) 1720.616 ops/s [Average]
  (min, avg, max) = (113265.498, 117785.667, 123950.005), stdev = 2575.338
  CI (99.9%): [116065.051, 119506.284] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_661._Benchmark.benchmark_Cluster_661  thrpt   30  117785.667 ± 1720.616  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_662._Benchmark.benchmark_Cluster_662$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_662._Benchmark.benchmark_Cluster_662

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10137.781 ops/s
# Warmup Iteration   2: 50050.223 ops/s
# Warmup Iteration   3: 95848.685 ops/s
# Warmup Iteration   4: 127749.356 ops/s
# Warmup Iteration   5: 134050.124 ops/s
# Warmup Iteration   6: 131954.527 ops/s
# Warmup Iteration   7: 119372.891 ops/s
# Warmup Iteration   8: 125615.866 ops/s
# Warmup Iteration   9: 128707.034 ops/s
# Warmup Iteration  10: 138402.370 ops/s
# Warmup Iteration  11: 129716.901 ops/s
# Warmup Iteration  12: 136549.702 ops/s
# Warmup Iteration  13: 136454.260 ops/s
# Warmup Iteration  14: 127915.881 ops/s
# Warmup Iteration  15: 137413.478 ops/s
# Warmup Iteration  16: 127606.620 ops/s
# Warmup Iteration  17: 140145.908 ops/s
# Warmup Iteration  18: 133658.440 ops/s
# Warmup Iteration  19: 136175.470 ops/s
# Warmup Iteration  20: 139701.047 ops/s
# Warmup Iteration  21: 134035.352 ops/s
# Warmup Iteration  22: 137625.938 ops/s
# Warmup Iteration  23: 136101.644 ops/s
# Warmup Iteration  24: 132642.488 ops/s
# Warmup Iteration  25: 138166.425 ops/s
# Warmup Iteration  26: 134518.732 ops/s
# Warmup Iteration  27: 136906.354 ops/s
# Warmup Iteration  28: 135572.210 ops/s
# Warmup Iteration  29: 134072.579 ops/s
# Warmup Iteration  30: 140741.626 ops/s
Iteration   1: 137502.709 ops/s
Iteration   2: 142681.013 ops/s
Iteration   3: 139132.498 ops/s
Iteration   4: 133846.040 ops/s
Iteration   5: 140450.872 ops/s
Iteration   6: 130721.210 ops/s
Iteration   7: 139073.971 ops/s
Iteration   8: 131214.520 ops/s
Iteration   9: 137236.905 ops/s
Iteration  10: 137985.342 ops/s
Iteration  11: 133927.906 ops/s
Iteration  12: 140596.372 ops/s
Iteration  13: 132491.512 ops/s
Iteration  14: 136321.959 ops/s
Iteration  15: 135005.902 ops/s
Iteration  16: 133342.786 ops/s
Iteration  17: 140540.243 ops/s
Iteration  18: 132902.635 ops/s
Iteration  19: 137641.956 ops/s
Iteration  20: 138647.669 ops/s
Iteration  21: 133835.650 ops/s
Iteration  22: 139452.373 ops/s
Iteration  23: 136195.701 ops/s
Iteration  24: 137723.044 ops/s
Iteration  25: 132729.951 ops/s
Iteration  26: 134964.791 ops/s
Iteration  27: 139724.918 ops/s
Iteration  28: 134233.326 ops/s
Iteration  29: 135189.809 ops/s
Iteration  30: 108729.967 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_662._Benchmark.benchmark_Cluster_662":
  135468.118 ±(99.9%) 3956.181 ops/s [Average]
  (min, avg, max) = (108729.967, 135468.118, 142681.013), stdev = 5921.426
  CI (99.9%): [131511.937, 139424.299] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_662._Benchmark.benchmark_Cluster_662  thrpt   30  135468.118 ± 3956.181  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_663._Benchmark.benchmark_Cluster_663$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_663._Benchmark.benchmark_Cluster_663

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4172.427 ops/s
# Warmup Iteration   2: 26442.094 ops/s
# Warmup Iteration   3: 71227.408 ops/s
# Warmup Iteration   4: 62670.478 ops/s
# Warmup Iteration   5: 94110.494 ops/s
# Warmup Iteration   6: 96005.531 ops/s
# Warmup Iteration   7: 98792.989 ops/s
# Warmup Iteration   8: 95239.086 ops/s
# Warmup Iteration   9: 91738.123 ops/s
# Warmup Iteration  10: 88123.608 ops/s
# Warmup Iteration  11: 96637.789 ops/s
# Warmup Iteration  12: 92660.232 ops/s
# Warmup Iteration  13: 93897.716 ops/s
# Warmup Iteration  14: 97249.122 ops/s
# Warmup Iteration  15: 96703.347 ops/s
# Warmup Iteration  16: 100830.467 ops/s
# Warmup Iteration  17: 94278.251 ops/s
# Warmup Iteration  18: 98092.755 ops/s
# Warmup Iteration  19: 101502.342 ops/s
# Warmup Iteration  20: 94326.787 ops/s
# Warmup Iteration  21: 101807.370 ops/s
# Warmup Iteration  22: 97225.749 ops/s
# Warmup Iteration  23: 96676.234 ops/s
# Warmup Iteration  24: 93744.893 ops/s
# Warmup Iteration  25: 98654.383 ops/s
# Warmup Iteration  26: 93127.172 ops/s
# Warmup Iteration  27: 101248.925 ops/s
# Warmup Iteration  28: 99890.750 ops/s
# Warmup Iteration  29: 93036.963 ops/s
# Warmup Iteration  30: 100675.241 ops/s
Iteration   1: 97724.012 ops/s
Iteration   2: 97018.348 ops/s
Iteration   3: 96966.433 ops/s
Iteration   4: 100026.626 ops/s
Iteration   5: 97387.143 ops/s
Iteration   6: 96712.895 ops/s
Iteration   7: 96449.794 ops/s
Iteration   8: 97023.945 ops/s
Iteration   9: 100049.074 ops/s
Iteration  10: 99931.259 ops/s
Iteration  11: 95292.555 ops/s
Iteration  12: 100111.250 ops/s
Iteration  13: 95017.570 ops/s
Iteration  14: 99234.799 ops/s
Iteration  15: 101372.688 ops/s
Iteration  16: 94985.250 ops/s
Iteration  17: 98423.857 ops/s
Iteration  18: 100370.655 ops/s
Iteration  19: 96941.501 ops/s
Iteration  20: 100068.150 ops/s
Iteration  21: 93666.368 ops/s
Iteration  22: 94547.441 ops/s
Iteration  23: 100382.700 ops/s
Iteration  24: 97116.361 ops/s
Iteration  25: 98412.978 ops/s
Iteration  26: 97495.985 ops/s
Iteration  27: 101940.529 ops/s
Iteration  28: 96402.192 ops/s
Iteration  29: 95123.820 ops/s
Iteration  30: 100114.694 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_663._Benchmark.benchmark_Cluster_663":
  97877.029 ±(99.9%) 1475.048 ops/s [Average]
  (min, avg, max) = (93666.368, 97877.029, 101940.529), stdev = 2207.782
  CI (99.9%): [96401.981, 99352.077] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_663._Benchmark.benchmark_Cluster_663  thrpt   30  97877.029 ± 1475.048  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_664._Benchmark.benchmark_Cluster_664$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_664._Benchmark.benchmark_Cluster_664

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15034.522 ops/s
# Warmup Iteration   2: 46166.513 ops/s
# Warmup Iteration   3: 100472.210 ops/s
# Warmup Iteration   4: 137938.109 ops/s
# Warmup Iteration   5: 135878.442 ops/s
# Warmup Iteration   6: 137990.479 ops/s
# Warmup Iteration   7: 135969.458 ops/s
# Warmup Iteration   8: 137203.123 ops/s
# Warmup Iteration   9: 138265.850 ops/s
# Warmup Iteration  10: 143486.643 ops/s
# Warmup Iteration  11: 135910.407 ops/s
# Warmup Iteration  12: 131653.787 ops/s
# Warmup Iteration  13: 139190.374 ops/s
# Warmup Iteration  14: 143998.180 ops/s
# Warmup Iteration  15: 134498.873 ops/s
# Warmup Iteration  16: 144927.721 ops/s
# Warmup Iteration  17: 147153.973 ops/s
# Warmup Iteration  18: 139671.732 ops/s
# Warmup Iteration  19: 139636.146 ops/s
# Warmup Iteration  20: 144095.120 ops/s
# Warmup Iteration  21: 140648.827 ops/s
# Warmup Iteration  22: 152004.090 ops/s
# Warmup Iteration  23: 143899.362 ops/s
# Warmup Iteration  24: 141521.204 ops/s
# Warmup Iteration  25: 146379.541 ops/s
# Warmup Iteration  26: 139274.669 ops/s
# Warmup Iteration  27: 144714.308 ops/s
# Warmup Iteration  28: 143549.096 ops/s
# Warmup Iteration  29: 148813.180 ops/s
# Warmup Iteration  30: 138642.477 ops/s
Iteration   1: 141876.762 ops/s
Iteration   2: 147503.528 ops/s
Iteration   3: 140283.609 ops/s
Iteration   4: 142273.156 ops/s
Iteration   5: 148932.865 ops/s
Iteration   6: 140616.477 ops/s
Iteration   7: 144583.732 ops/s
Iteration   8: 140362.372 ops/s
Iteration   9: 146352.829 ops/s
Iteration  10: 142333.135 ops/s
Iteration  11: 145000.893 ops/s
Iteration  12: 147533.201 ops/s
Iteration  13: 141915.828 ops/s
Iteration  14: 146586.965 ops/s
Iteration  15: 141993.982 ops/s
Iteration  16: 140393.920 ops/s
Iteration  17: 151859.837 ops/s
Iteration  18: 142275.989 ops/s
Iteration  19: 143445.114 ops/s
Iteration  20: 147745.411 ops/s
Iteration  21: 139747.652 ops/s
Iteration  22: 147416.948 ops/s
Iteration  23: 138609.082 ops/s
Iteration  24: 119058.240 ops/s
Iteration  25: 144491.614 ops/s
Iteration  26: 144280.289 ops/s
Iteration  27: 148239.697 ops/s
Iteration  28: 141901.141 ops/s
Iteration  29: 143286.961 ops/s
Iteration  30: 148672.335 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_664._Benchmark.benchmark_Cluster_664":
  143319.119 ±(99.9%) 3771.106 ops/s [Average]
  (min, avg, max) = (119058.240, 143319.119, 151859.837), stdev = 5644.414
  CI (99.9%): [139548.013, 147090.224] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_664._Benchmark.benchmark_Cluster_664  thrpt   30  143319.119 ± 3771.106  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_665._Benchmark.benchmark_Cluster_665$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_665._Benchmark.benchmark_Cluster_665

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6249.875 ops/s
# Warmup Iteration   2: 27508.815 ops/s
# Warmup Iteration   3: 67400.152 ops/s
# Warmup Iteration   4: 108284.794 ops/s
# Warmup Iteration   5: 123926.290 ops/s
# Warmup Iteration   6: 109075.415 ops/s
# Warmup Iteration   7: 126981.117 ops/s
# Warmup Iteration   8: 126636.901 ops/s
# Warmup Iteration   9: 125461.821 ops/s
# Warmup Iteration  10: 126716.091 ops/s
# Warmup Iteration  11: 122791.797 ops/s
# Warmup Iteration  12: 126486.726 ops/s
# Warmup Iteration  13: 129083.046 ops/s
# Warmup Iteration  14: 123154.232 ops/s
# Warmup Iteration  15: 128848.929 ops/s
# Warmup Iteration  16: 121470.018 ops/s
# Warmup Iteration  17: 136910.367 ops/s
# Warmup Iteration  18: 138923.515 ops/s
# Warmup Iteration  19: 132370.953 ops/s
# Warmup Iteration  20: 133969.466 ops/s
# Warmup Iteration  21: 136053.140 ops/s
# Warmup Iteration  22: 135390.664 ops/s
# Warmup Iteration  23: 132823.447 ops/s
# Warmup Iteration  24: 131331.557 ops/s
# Warmup Iteration  25: 138529.976 ops/s
# Warmup Iteration  26: 129927.065 ops/s
# Warmup Iteration  27: 138044.551 ops/s
# Warmup Iteration  28: 131185.478 ops/s
# Warmup Iteration  29: 135091.042 ops/s
# Warmup Iteration  30: 138189.457 ops/s
Iteration   1: 133891.524 ops/s
Iteration   2: 130983.574 ops/s
Iteration   3: 137208.368 ops/s
Iteration   4: 131009.630 ops/s
Iteration   5: 133402.700 ops/s
Iteration   6: 139037.332 ops/s
Iteration   7: 138648.927 ops/s
Iteration   8: 131582.633 ops/s
Iteration   9: 135390.393 ops/s
Iteration  10: 133383.540 ops/s
Iteration  11: 135641.229 ops/s
Iteration  12: 129559.108 ops/s
Iteration  13: 134837.595 ops/s
Iteration  14: 137088.219 ops/s
Iteration  15: 133034.361 ops/s
Iteration  16: 130372.621 ops/s
Iteration  17: 130231.113 ops/s
Iteration  18: 135275.317 ops/s
Iteration  19: 131066.505 ops/s
Iteration  20: 131488.990 ops/s
Iteration  21: 137198.003 ops/s
Iteration  22: 130740.175 ops/s
Iteration  23: 134008.517 ops/s
Iteration  24: 132377.220 ops/s
Iteration  25: 136667.650 ops/s
Iteration  26: 133173.758 ops/s
Iteration  27: 131716.588 ops/s
Iteration  28: 131856.756 ops/s
Iteration  29: 130516.859 ops/s
Iteration  30: 136195.480 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_665._Benchmark.benchmark_Cluster_665":
  133586.156 ±(99.9%) 1815.943 ops/s [Average]
  (min, avg, max) = (129559.108, 133586.156, 139037.332), stdev = 2718.019
  CI (99.9%): [131770.213, 135402.099] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_665._Benchmark.benchmark_Cluster_665  thrpt   30  133586.156 ± 1815.943  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_666._Benchmark.benchmark_Cluster_666$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_666._Benchmark.benchmark_Cluster_666

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18096.960 ops/s
# Warmup Iteration   2: 37730.063 ops/s
# Warmup Iteration   3: 70004.113 ops/s
# Warmup Iteration   4: 108796.947 ops/s
# Warmup Iteration   5: 121007.537 ops/s
# Warmup Iteration   6: 121028.507 ops/s
# Warmup Iteration   7: 117876.984 ops/s
# Warmup Iteration   8: 114222.302 ops/s
# Warmup Iteration   9: 122810.910 ops/s
# Warmup Iteration  10: 119149.588 ops/s
# Warmup Iteration  11: 123699.910 ops/s
# Warmup Iteration  12: 123582.804 ops/s
# Warmup Iteration  13: 121588.222 ops/s
# Warmup Iteration  14: 125566.980 ops/s
# Warmup Iteration  15: 123912.579 ops/s
# Warmup Iteration  16: 116784.770 ops/s
# Warmup Iteration  17: 132419.466 ops/s
# Warmup Iteration  18: 122346.003 ops/s
# Warmup Iteration  19: 127086.687 ops/s
# Warmup Iteration  20: 123914.585 ops/s
# Warmup Iteration  21: 128105.833 ops/s
# Warmup Iteration  22: 123127.556 ops/s
# Warmup Iteration  23: 123199.852 ops/s
# Warmup Iteration  24: 124171.259 ops/s
# Warmup Iteration  25: 129100.574 ops/s
# Warmup Iteration  26: 124425.755 ops/s
# Warmup Iteration  27: 127542.825 ops/s
# Warmup Iteration  28: 122228.453 ops/s
# Warmup Iteration  29: 126174.876 ops/s
# Warmup Iteration  30: 126728.439 ops/s
Iteration   1: 124916.902 ops/s
Iteration   2: 129892.398 ops/s
Iteration   3: 121852.080 ops/s
Iteration   4: 124238.763 ops/s
Iteration   5: 124378.173 ops/s
Iteration   6: 127201.629 ops/s
Iteration   7: 118854.871 ops/s
Iteration   8: 126055.422 ops/s
Iteration   9: 131552.978 ops/s
Iteration  10: 119635.957 ops/s
Iteration  11: 127949.317 ops/s
Iteration  12: 122941.496 ops/s
Iteration  13: 124816.808 ops/s
Iteration  14: 127262.031 ops/s
Iteration  15: 127846.196 ops/s
Iteration  16: 123695.079 ops/s
Iteration  17: 125173.418 ops/s
Iteration  18: 119096.384 ops/s
Iteration  19: 115033.749 ops/s
Iteration  20: 127661.767 ops/s
Iteration  21: 124190.122 ops/s
Iteration  22: 126781.398 ops/s
Iteration  23: 121787.152 ops/s
Iteration  24: 128369.189 ops/s
Iteration  25: 120786.321 ops/s
Iteration  26: 125389.664 ops/s
Iteration  27: 127474.531 ops/s
Iteration  28: 124301.351 ops/s
Iteration  29: 124330.699 ops/s
Iteration  30: 127247.268 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_666._Benchmark.benchmark_Cluster_666":
  124690.437 ±(99.9%) 2393.160 ops/s [Average]
  (min, avg, max) = (115033.749, 124690.437, 131552.978), stdev = 3581.970
  CI (99.9%): [122297.277, 127083.597] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_666._Benchmark.benchmark_Cluster_666  thrpt   30  124690.437 ± 2393.160  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_667._Benchmark.benchmark_Cluster_667$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_667._Benchmark.benchmark_Cluster_667

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5048.785 ops/s
# Warmup Iteration   2: 28244.144 ops/s
# Warmup Iteration   3: 44153.075 ops/s
# Warmup Iteration   4: 53269.340 ops/s
# Warmup Iteration   5: 100942.939 ops/s
# Warmup Iteration   6: 95585.224 ops/s
# Warmup Iteration   7: 94610.188 ops/s
# Warmup Iteration   8: 99889.390 ops/s
# Warmup Iteration   9: 95005.906 ops/s
# Warmup Iteration  10: 97385.330 ops/s
# Warmup Iteration  11: 97790.534 ops/s
# Warmup Iteration  12: 94526.108 ops/s
# Warmup Iteration  13: 95297.813 ops/s
# Warmup Iteration  14: 97685.008 ops/s
# Warmup Iteration  15: 98131.615 ops/s
# Warmup Iteration  16: 98275.688 ops/s
# Warmup Iteration  17: 98193.639 ops/s
# Warmup Iteration  18: 103744.971 ops/s
# Warmup Iteration  19: 99074.853 ops/s
# Warmup Iteration  20: 99978.749 ops/s
# Warmup Iteration  21: 99053.794 ops/s
# Warmup Iteration  22: 100449.177 ops/s
# Warmup Iteration  23: 102233.686 ops/s
# Warmup Iteration  24: 96209.951 ops/s
# Warmup Iteration  25: 98350.998 ops/s
# Warmup Iteration  26: 102684.014 ops/s
# Warmup Iteration  27: 99008.837 ops/s
# Warmup Iteration  28: 102783.865 ops/s
# Warmup Iteration  29: 98047.306 ops/s
# Warmup Iteration  30: 100229.620 ops/s
Iteration   1: 102766.365 ops/s
Iteration   2: 96920.129 ops/s
Iteration   3: 100148.325 ops/s
Iteration   4: 99056.024 ops/s
Iteration   5: 103018.294 ops/s
Iteration   6: 101156.049 ops/s
Iteration   7: 96193.463 ops/s
Iteration   8: 99189.704 ops/s
Iteration   9: 98747.125 ops/s
Iteration  10: 96476.891 ops/s
Iteration  11: 102068.280 ops/s
Iteration  12: 99522.487 ops/s
Iteration  13: 104438.460 ops/s
Iteration  14: 100251.148 ops/s
Iteration  15: 94661.261 ops/s
Iteration  16: 97652.984 ops/s
Iteration  17: 104503.071 ops/s
Iteration  18: 99481.961 ops/s
Iteration  19: 100966.137 ops/s
Iteration  20: 106086.473 ops/s
Iteration  21: 97184.936 ops/s
Iteration  22: 103710.821 ops/s
Iteration  23: 98965.008 ops/s
Iteration  24: 102267.303 ops/s
Iteration  25: 104694.078 ops/s
Iteration  26: 100354.973 ops/s
Iteration  27: 102501.607 ops/s
Iteration  28: 98813.785 ops/s
Iteration  29: 103496.953 ops/s
Iteration  30: 103824.461 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_667._Benchmark.benchmark_Cluster_667":
  100637.285 ±(99.9%) 1949.185 ops/s [Average]
  (min, avg, max) = (94661.261, 100637.285, 106086.473), stdev = 2917.449
  CI (99.9%): [98688.100, 102586.470] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_667._Benchmark.benchmark_Cluster_667  thrpt   30  100637.285 ± 1949.185  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_668._Benchmark.benchmark_Cluster_668$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_668._Benchmark.benchmark_Cluster_668

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20615.955 ops/s
# Warmup Iteration   2: 56211.885 ops/s
# Warmup Iteration   3: 96901.355 ops/s
# Warmup Iteration   4: 112471.233 ops/s
# Warmup Iteration   5: 119314.085 ops/s
# Warmup Iteration   6: 109345.659 ops/s
# Warmup Iteration   7: 121347.788 ops/s
# Warmup Iteration   8: 120282.194 ops/s
# Warmup Iteration   9: 125362.302 ops/s
# Warmup Iteration  10: 118944.738 ops/s
# Warmup Iteration  11: 121817.492 ops/s
# Warmup Iteration  12: 121188.924 ops/s
# Warmup Iteration  13: 121065.914 ops/s
# Warmup Iteration  14: 124858.684 ops/s
# Warmup Iteration  15: 122323.813 ops/s
# Warmup Iteration  16: 126242.215 ops/s
# Warmup Iteration  17: 124274.701 ops/s
# Warmup Iteration  18: 126790.909 ops/s
# Warmup Iteration  19: 129146.415 ops/s
# Warmup Iteration  20: 127187.503 ops/s
# Warmup Iteration  21: 128933.119 ops/s
# Warmup Iteration  22: 124681.842 ops/s
# Warmup Iteration  23: 124983.708 ops/s
# Warmup Iteration  24: 127265.528 ops/s
# Warmup Iteration  25: 123562.681 ops/s
# Warmup Iteration  26: 128382.781 ops/s
# Warmup Iteration  27: 123680.687 ops/s
# Warmup Iteration  28: 128402.851 ops/s
# Warmup Iteration  29: 128692.942 ops/s
# Warmup Iteration  30: 122245.727 ops/s
Iteration   1: 130745.598 ops/s
Iteration   2: 123437.206 ops/s
Iteration   3: 128085.093 ops/s
Iteration   4: 125724.269 ops/s
Iteration   5: 126078.165 ops/s
Iteration   6: 129911.313 ops/s
Iteration   7: 120157.154 ops/s
Iteration   8: 128932.279 ops/s
Iteration   9: 121938.738 ops/s
Iteration  10: 126337.634 ops/s
Iteration  11: 128774.162 ops/s
Iteration  12: 122313.365 ops/s
Iteration  13: 104833.289 ops/s
Iteration  14: 126265.597 ops/s
Iteration  15: 129363.568 ops/s
Iteration  16: 124468.736 ops/s
Iteration  17: 125680.870 ops/s
Iteration  18: 125434.912 ops/s
Iteration  19: 126857.534 ops/s
Iteration  20: 130211.135 ops/s
Iteration  21: 124325.436 ops/s
Iteration  22: 130382.500 ops/s
Iteration  23: 125738.415 ops/s
Iteration  24: 126853.417 ops/s
Iteration  25: 126395.223 ops/s
Iteration  26: 129878.001 ops/s
Iteration  27: 126657.477 ops/s
Iteration  28: 127407.866 ops/s
Iteration  29: 129042.094 ops/s
Iteration  30: 125030.207 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_668._Benchmark.benchmark_Cluster_668":
  125908.709 ±(99.9%) 3188.408 ops/s [Average]
  (min, avg, max) = (104833.289, 125908.709, 130745.598), stdev = 4772.259
  CI (99.9%): [122720.301, 129097.116] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_668._Benchmark.benchmark_Cluster_668  thrpt   30  125908.709 ± 3188.408  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_669._Benchmark.benchmark_Cluster_669$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_669._Benchmark.benchmark_Cluster_669

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 21136.221 ops/s
# Warmup Iteration   2: 58047.332 ops/s
# Warmup Iteration   3: 160843.249 ops/s
# Warmup Iteration   4: 175167.487 ops/s
# Warmup Iteration   5: 169502.685 ops/s
# Warmup Iteration   6: 196719.261 ops/s
# Warmup Iteration   7: 189427.174 ops/s
# Warmup Iteration   8: 207912.957 ops/s
# Warmup Iteration   9: 191647.542 ops/s
# Warmup Iteration  10: 196246.773 ops/s
# Warmup Iteration  11: 190955.641 ops/s
# Warmup Iteration  12: 202681.892 ops/s
# Warmup Iteration  13: 197559.425 ops/s
# Warmup Iteration  14: 198792.047 ops/s
# Warmup Iteration  15: 194806.562 ops/s
# Warmup Iteration  16: 203106.894 ops/s
# Warmup Iteration  17: 200368.326 ops/s
# Warmup Iteration  18: 203847.939 ops/s
# Warmup Iteration  19: 200596.876 ops/s
# Warmup Iteration  20: 200073.336 ops/s
# Warmup Iteration  21: 211025.405 ops/s
# Warmup Iteration  22: 197883.035 ops/s
# Warmup Iteration  23: 201231.011 ops/s
# Warmup Iteration  24: 198969.474 ops/s
# Warmup Iteration  25: 199611.539 ops/s
# Warmup Iteration  26: 205229.925 ops/s
# Warmup Iteration  27: 205765.464 ops/s
# Warmup Iteration  28: 203490.375 ops/s
# Warmup Iteration  29: 209189.728 ops/s
# Warmup Iteration  30: 198338.350 ops/s
Iteration   1: 200903.465 ops/s
Iteration   2: 204086.571 ops/s
Iteration   3: 202468.755 ops/s
Iteration   4: 202924.456 ops/s
Iteration   5: 210286.155 ops/s
Iteration   6: 201986.787 ops/s
Iteration   7: 206665.068 ops/s
Iteration   8: 202064.972 ops/s
Iteration   9: 200258.398 ops/s
Iteration  10: 200977.351 ops/s
Iteration  11: 201595.468 ops/s
Iteration  12: 206882.342 ops/s
Iteration  13: 199124.832 ops/s
Iteration  14: 202197.503 ops/s
Iteration  15: 207540.543 ops/s
Iteration  16: 200505.254 ops/s
Iteration  17: 209211.727 ops/s
Iteration  18: 200758.585 ops/s
Iteration  19: 199245.725 ops/s
Iteration  20: 205914.376 ops/s
Iteration  21: 193204.388 ops/s
Iteration  22: 205972.214 ops/s
Iteration  23: 211090.148 ops/s
Iteration  24: 201951.160 ops/s
Iteration  25: 209009.372 ops/s
Iteration  26: 194397.513 ops/s
Iteration  27: 208859.310 ops/s
Iteration  28: 201096.753 ops/s
Iteration  29: 204394.831 ops/s
Iteration  30: 208859.334 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_669._Benchmark.benchmark_Cluster_669":
  203481.112 ±(99.9%) 2936.916 ops/s [Average]
  (min, avg, max) = (193204.388, 203481.112, 211090.148), stdev = 4395.838
  CI (99.9%): [200544.196, 206418.028] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_669._Benchmark.benchmark_Cluster_669  thrpt   30  203481.112 ± 2936.916  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_67._Benchmark.benchmark_Cluster_67$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_67._Benchmark.benchmark_Cluster_67

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 736.945 ops/s
# Warmup Iteration   2: 4802.737 ops/s
# Warmup Iteration   3: 15546.406 ops/s
# Warmup Iteration   4: 20647.139 ops/s
# Warmup Iteration   5: 24753.758 ops/s
# Warmup Iteration   6: 21092.969 ops/s
# Warmup Iteration   7: 32136.784 ops/s
# Warmup Iteration   8: 29101.012 ops/s
# Warmup Iteration   9: 28044.597 ops/s
# Warmup Iteration  10: 26138.937 ops/s
# Warmup Iteration  11: 29080.076 ops/s
# Warmup Iteration  12: 28967.104 ops/s
# Warmup Iteration  13: 27564.126 ops/s
# Warmup Iteration  14: 56784.976 ops/s
# Warmup Iteration  15: 75135.613 ops/s
# Warmup Iteration  16: 75783.752 ops/s
# Warmup Iteration  17: 74121.627 ops/s
# Warmup Iteration  18: 77363.729 ops/s
# Warmup Iteration  19: 74415.507 ops/s
# Warmup Iteration  20: 74182.372 ops/s
# Warmup Iteration  21: 75923.077 ops/s
# Warmup Iteration  22: 74439.349 ops/s
# Warmup Iteration  23: 78999.614 ops/s
# Warmup Iteration  24: 74793.147 ops/s
# Warmup Iteration  25: 74592.408 ops/s
# Warmup Iteration  26: 76597.287 ops/s
# Warmup Iteration  27: 75358.219 ops/s
# Warmup Iteration  28: 74530.286 ops/s
# Warmup Iteration  29: 77940.402 ops/s
# Warmup Iteration  30: 76254.199 ops/s
Iteration   1: 76134.177 ops/s
Iteration   2: 73941.443 ops/s
Iteration   3: 71001.295 ops/s
Iteration   4: 78801.524 ops/s
Iteration   5: 75489.629 ops/s
Iteration   6: 74009.137 ops/s
Iteration   7: 66619.064 ops/s
Iteration   8: 76892.445 ops/s
Iteration   9: 77670.157 ops/s
Iteration  10: 77725.363 ops/s
Iteration  11: 74933.841 ops/s
Iteration  12: 72473.535 ops/s
Iteration  13: 78806.153 ops/s
Iteration  14: 72995.054 ops/s
Iteration  15: 75270.290 ops/s
Iteration  16: 77934.883 ops/s
Iteration  17: 75971.569 ops/s
Iteration  18: 76360.241 ops/s
Iteration  19: 76418.978 ops/s
Iteration  20: 75644.538 ops/s
Iteration  21: 79418.530 ops/s
Iteration  22: 74190.973 ops/s
Iteration  23: 77682.066 ops/s
Iteration  24: 76405.087 ops/s
Iteration  25: 73983.678 ops/s
Iteration  26: 77089.748 ops/s
Iteration  27: 75937.269 ops/s
Iteration  28: 77089.944 ops/s
Iteration  29: 76344.661 ops/s
Iteration  30: 78913.903 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_67._Benchmark.benchmark_Cluster_67":
  75738.306 ±(99.9%) 1763.380 ops/s [Average]
  (min, avg, max) = (66619.064, 75738.306, 79418.530), stdev = 2639.345
  CI (99.9%): [73974.926, 77501.686] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_67._Benchmark.benchmark_Cluster_67  thrpt   30  75738.306 ± 1763.380  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_670._Benchmark.benchmark_Cluster_670$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_670._Benchmark.benchmark_Cluster_670

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.734 ops/s
# Warmup Iteration   2: 3382.091 ops/s
# Warmup Iteration   3: 16360.742 ops/s
# Warmup Iteration   4: 20874.352 ops/s
# Warmup Iteration   5: 28549.315 ops/s
# Warmup Iteration   6: 29603.349 ops/s
# Warmup Iteration   7: 31206.523 ops/s
# Warmup Iteration   8: 36477.927 ops/s
# Warmup Iteration   9: 68870.769 ops/s
# Warmup Iteration  10: 89144.176 ops/s
# Warmup Iteration  11: 83455.284 ops/s
# Warmup Iteration  12: 83909.934 ops/s
# Warmup Iteration  13: 84266.156 ops/s
# Warmup Iteration  14: 90350.414 ops/s
# Warmup Iteration  15: 91347.404 ops/s
# Warmup Iteration  16: 91444.298 ops/s
# Warmup Iteration  17: 91954.300 ops/s
# Warmup Iteration  18: 90318.490 ops/s
# Warmup Iteration  19: 86782.320 ops/s
# Warmup Iteration  20: 94347.180 ops/s
# Warmup Iteration  21: 88837.629 ops/s
# Warmup Iteration  22: 89734.271 ops/s
# Warmup Iteration  23: 95165.387 ops/s
# Warmup Iteration  24: 81308.135 ops/s
# Warmup Iteration  25: 90765.075 ops/s
# Warmup Iteration  26: 94536.198 ops/s
# Warmup Iteration  27: 93863.378 ops/s
# Warmup Iteration  28: 89585.865 ops/s
# Warmup Iteration  29: 90048.703 ops/s
# Warmup Iteration  30: 90144.039 ops/s
Iteration   1: 89825.480 ops/s
Iteration   2: 93536.835 ops/s
Iteration   3: 87980.961 ops/s
Iteration   4: 91122.292 ops/s
Iteration   5: 86647.416 ops/s
Iteration   6: 92677.436 ops/s
Iteration   7: 88570.727 ops/s
Iteration   8: 93337.698 ops/s
Iteration   9: 86016.477 ops/s
Iteration  10: 90828.617 ops/s
Iteration  11: 95405.482 ops/s
Iteration  12: 90129.711 ops/s
Iteration  13: 89920.807 ops/s
Iteration  14: 93807.095 ops/s
Iteration  15: 91773.514 ops/s
Iteration  16: 89174.786 ops/s
Iteration  17: 93490.167 ops/s
Iteration  18: 91245.961 ops/s
Iteration  19: 91698.170 ops/s
Iteration  20: 91546.879 ops/s
Iteration  21: 92623.499 ops/s
Iteration  22: 90800.548 ops/s
Iteration  23: 89134.768 ops/s
Iteration  24: 93933.421 ops/s
Iteration  25: 88443.173 ops/s
Iteration  26: 94307.804 ops/s
Iteration  27: 92407.366 ops/s
Iteration  28: 88977.039 ops/s
Iteration  29: 91011.020 ops/s
Iteration  30: 90342.272 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_670._Benchmark.benchmark_Cluster_670":
  91023.914 ±(99.9%) 1538.859 ops/s [Average]
  (min, avg, max) = (86016.477, 91023.914, 95405.482), stdev = 2303.291
  CI (99.9%): [89485.055, 92562.773] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_670._Benchmark.benchmark_Cluster_670  thrpt   30  91023.914 ± 1538.859  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_671._Benchmark.benchmark_Cluster_671$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_671._Benchmark.benchmark_Cluster_671

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2094.764 ops/s
# Warmup Iteration   2: 21401.276 ops/s
# Warmup Iteration   3: 31904.082 ops/s
# Warmup Iteration   4: 46849.630 ops/s
# Warmup Iteration   5: 40102.101 ops/s
# Warmup Iteration   6: 70504.092 ops/s
# Warmup Iteration   7: 108063.058 ops/s
# Warmup Iteration   8: 106515.855 ops/s
# Warmup Iteration   9: 105877.176 ops/s
# Warmup Iteration  10: 100479.003 ops/s
# Warmup Iteration  11: 104806.916 ops/s
# Warmup Iteration  12: 104475.163 ops/s
# Warmup Iteration  13: 107893.606 ops/s
# Warmup Iteration  14: 106109.196 ops/s
# Warmup Iteration  15: 106431.842 ops/s
# Warmup Iteration  16: 112413.811 ops/s
# Warmup Iteration  17: 114077.975 ops/s
# Warmup Iteration  18: 110889.426 ops/s
# Warmup Iteration  19: 117417.761 ops/s
# Warmup Iteration  20: 104780.991 ops/s
# Warmup Iteration  21: 117545.764 ops/s
# Warmup Iteration  22: 116266.969 ops/s
# Warmup Iteration  23: 117058.500 ops/s
# Warmup Iteration  24: 114770.310 ops/s
# Warmup Iteration  25: 112922.340 ops/s
# Warmup Iteration  26: 116809.554 ops/s
# Warmup Iteration  27: 113973.514 ops/s
# Warmup Iteration  28: 115903.106 ops/s
# Warmup Iteration  29: 115576.861 ops/s
# Warmup Iteration  30: 109422.140 ops/s
Iteration   1: 90721.498 ops/s
Iteration   2: 118753.549 ops/s
Iteration   3: 110537.944 ops/s
Iteration   4: 113657.244 ops/s
Iteration   5: 113779.057 ops/s
Iteration   6: 112117.049 ops/s
Iteration   7: 112836.112 ops/s
Iteration   8: 115714.482 ops/s
Iteration   9: 113594.619 ops/s
Iteration  10: 116259.367 ops/s
Iteration  11: 112382.134 ops/s
Iteration  12: 110048.536 ops/s
Iteration  13: 116433.408 ops/s
Iteration  14: 115468.609 ops/s
Iteration  15: 114000.811 ops/s
Iteration  16: 112281.576 ops/s
Iteration  17: 117014.671 ops/s
Iteration  18: 110390.247 ops/s
Iteration  19: 113339.774 ops/s
Iteration  20: 118201.939 ops/s
Iteration  21: 110520.775 ops/s
Iteration  22: 117239.675 ops/s
Iteration  23: 109979.159 ops/s
Iteration  24: 113830.536 ops/s
Iteration  25: 110296.547 ops/s
Iteration  26: 116793.319 ops/s
Iteration  27: 115477.067 ops/s
Iteration  28: 112083.436 ops/s
Iteration  29: 116754.962 ops/s
Iteration  30: 113875.230 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_671._Benchmark.benchmark_Cluster_671":
  113146.111 ±(99.9%) 3308.433 ops/s [Average]
  (min, avg, max) = (90721.498, 113146.111, 118753.549), stdev = 4951.908
  CI (99.9%): [109837.678, 116454.545] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_671._Benchmark.benchmark_Cluster_671  thrpt   30  113146.111 ± 3308.433  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_672._Benchmark.benchmark_Cluster_672$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_672._Benchmark.benchmark_Cluster_672

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4040.685 ops/s
# Warmup Iteration   2: 23927.145 ops/s
# Warmup Iteration   3: 39163.523 ops/s
# Warmup Iteration   4: 41190.596 ops/s
# Warmup Iteration   5: 86756.498 ops/s
# Warmup Iteration   6: 89918.401 ops/s
# Warmup Iteration   7: 98340.083 ops/s
# Warmup Iteration   8: 103096.371 ops/s
# Warmup Iteration   9: 99757.386 ops/s
# Warmup Iteration  10: 101749.424 ops/s
# Warmup Iteration  11: 102776.131 ops/s
# Warmup Iteration  12: 97956.118 ops/s
# Warmup Iteration  13: 103150.631 ops/s
# Warmup Iteration  14: 98910.694 ops/s
# Warmup Iteration  15: 102090.435 ops/s
# Warmup Iteration  16: 102630.470 ops/s
# Warmup Iteration  17: 102873.794 ops/s
# Warmup Iteration  18: 103236.393 ops/s
# Warmup Iteration  19: 107843.003 ops/s
# Warmup Iteration  20: 99201.554 ops/s
# Warmup Iteration  21: 108574.871 ops/s
# Warmup Iteration  22: 101897.700 ops/s
# Warmup Iteration  23: 105538.164 ops/s
# Warmup Iteration  24: 103254.647 ops/s
# Warmup Iteration  25: 105028.228 ops/s
# Warmup Iteration  26: 108850.671 ops/s
# Warmup Iteration  27: 102908.036 ops/s
# Warmup Iteration  28: 101410.539 ops/s
# Warmup Iteration  29: 108528.330 ops/s
# Warmup Iteration  30: 101252.701 ops/s
Iteration   1: 106688.077 ops/s
Iteration   2: 107027.941 ops/s
Iteration   3: 100947.556 ops/s
Iteration   4: 104402.537 ops/s
Iteration   5: 105975.817 ops/s
Iteration   6: 102999.024 ops/s
Iteration   7: 104657.180 ops/s
Iteration   8: 107004.669 ops/s
Iteration   9: 101387.216 ops/s
Iteration  10: 109312.061 ops/s
Iteration  11: 103729.991 ops/s
Iteration  12: 102701.695 ops/s
Iteration  13: 108770.083 ops/s
Iteration  14: 101493.505 ops/s
Iteration  15: 104925.173 ops/s
Iteration  16: 102911.610 ops/s
Iteration  17: 105495.325 ops/s
Iteration  18: 105601.951 ops/s
Iteration  19: 102037.640 ops/s
Iteration  20: 106539.855 ops/s
Iteration  21: 103651.052 ops/s
Iteration  22: 106426.057 ops/s
Iteration  23: 103078.316 ops/s
Iteration  24: 105768.775 ops/s
Iteration  25: 103902.365 ops/s
Iteration  26: 104194.793 ops/s
Iteration  27: 105865.793 ops/s
Iteration  28: 103112.844 ops/s
Iteration  29: 104334.368 ops/s
Iteration  30: 106627.167 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_672._Benchmark.benchmark_Cluster_672":
  104719.015 ±(99.9%) 1409.270 ops/s [Average]
  (min, avg, max) = (100947.556, 104719.015, 109312.061), stdev = 2109.329
  CI (99.9%): [103309.744, 106128.285] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_672._Benchmark.benchmark_Cluster_672  thrpt   30  104719.015 ± 1409.270  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_673._Benchmark.benchmark_Cluster_673$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_673._Benchmark.benchmark_Cluster_673

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6079.887 ops/s
# Warmup Iteration   2: 50965.257 ops/s
# Warmup Iteration   3: 68920.685 ops/s
# Warmup Iteration   4: 114675.459 ops/s
# Warmup Iteration   5: 134927.054 ops/s
# Warmup Iteration   6: 142812.970 ops/s
# Warmup Iteration   7: 122671.531 ops/s
# Warmup Iteration   8: 138837.257 ops/s
# Warmup Iteration   9: 133108.764 ops/s
# Warmup Iteration  10: 142665.945 ops/s
# Warmup Iteration  11: 141329.773 ops/s
# Warmup Iteration  12: 136630.912 ops/s
# Warmup Iteration  13: 140343.537 ops/s
# Warmup Iteration  14: 135781.446 ops/s
# Warmup Iteration  15: 140158.728 ops/s
# Warmup Iteration  16: 132941.787 ops/s
# Warmup Iteration  17: 146972.562 ops/s
# Warmup Iteration  18: 146609.782 ops/s
# Warmup Iteration  19: 138697.013 ops/s
# Warmup Iteration  20: 150104.715 ops/s
# Warmup Iteration  21: 140139.477 ops/s
# Warmup Iteration  22: 140919.671 ops/s
# Warmup Iteration  23: 149545.012 ops/s
# Warmup Iteration  24: 139821.752 ops/s
# Warmup Iteration  25: 118119.530 ops/s
# Warmup Iteration  26: 139771.520 ops/s
# Warmup Iteration  27: 147482.062 ops/s
# Warmup Iteration  28: 139989.719 ops/s
# Warmup Iteration  29: 147367.215 ops/s
# Warmup Iteration  30: 140343.817 ops/s
Iteration   1: 143103.890 ops/s
Iteration   2: 147864.855 ops/s
Iteration   3: 140944.756 ops/s
Iteration   4: 144380.584 ops/s
Iteration   5: 139629.429 ops/s
Iteration   6: 142846.629 ops/s
Iteration   7: 147732.480 ops/s
Iteration   8: 138317.586 ops/s
Iteration   9: 149581.913 ops/s
Iteration  10: 146975.617 ops/s
Iteration  11: 138696.221 ops/s
Iteration  12: 147168.345 ops/s
Iteration  13: 141502.634 ops/s
Iteration  14: 145951.176 ops/s
Iteration  15: 142081.037 ops/s
Iteration  16: 148590.838 ops/s
Iteration  17: 138790.474 ops/s
Iteration  18: 147370.766 ops/s
Iteration  19: 148347.731 ops/s
Iteration  20: 140297.692 ops/s
Iteration  21: 149318.086 ops/s
Iteration  22: 142343.996 ops/s
Iteration  23: 141456.825 ops/s
Iteration  24: 145351.506 ops/s
Iteration  25: 142395.760 ops/s
Iteration  26: 149090.429 ops/s
Iteration  27: 148646.928 ops/s
Iteration  28: 140183.632 ops/s
Iteration  29: 146414.005 ops/s
Iteration  30: 143459.455 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_673._Benchmark.benchmark_Cluster_673":
  144294.509 ±(99.9%) 2429.427 ops/s [Average]
  (min, avg, max) = (138317.586, 144294.509, 149581.913), stdev = 3636.252
  CI (99.9%): [141865.082, 146723.936] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_673._Benchmark.benchmark_Cluster_673  thrpt   30  144294.509 ± 2429.427  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_674._Benchmark.benchmark_Cluster_674$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_674._Benchmark.benchmark_Cluster_674

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.630 ops/s
# Warmup Iteration   2: 2637.943 ops/s
# Warmup Iteration   3: 20194.919 ops/s
# Warmup Iteration   4: 27705.787 ops/s
# Warmup Iteration   5: 29284.490 ops/s
# Warmup Iteration   6: 39981.332 ops/s
# Warmup Iteration   7: 38778.108 ops/s
# Warmup Iteration   8: 92275.122 ops/s
# Warmup Iteration   9: 101192.468 ops/s
# Warmup Iteration  10: 101440.473 ops/s
# Warmup Iteration  11: 105129.026 ops/s
# Warmup Iteration  12: 101662.383 ops/s
# Warmup Iteration  13: 105510.753 ops/s
# Warmup Iteration  14: 102134.612 ops/s
# Warmup Iteration  15: 99031.106 ops/s
# Warmup Iteration  16: 108605.445 ops/s
# Warmup Iteration  17: 101770.005 ops/s
# Warmup Iteration  18: 109759.022 ops/s
# Warmup Iteration  19: 106691.617 ops/s
# Warmup Iteration  20: 102862.663 ops/s
# Warmup Iteration  21: 106898.834 ops/s
# Warmup Iteration  22: 96286.880 ops/s
# Warmup Iteration  23: 110268.442 ops/s
# Warmup Iteration  24: 111137.466 ops/s
# Warmup Iteration  25: 108537.867 ops/s
# Warmup Iteration  26: 106648.025 ops/s
# Warmup Iteration  27: 99364.127 ops/s
# Warmup Iteration  28: 110181.556 ops/s
# Warmup Iteration  29: 104028.794 ops/s
# Warmup Iteration  30: 107406.818 ops/s
Iteration   1: 108062.550 ops/s
Iteration   2: 105548.550 ops/s
Iteration   3: 105894.058 ops/s
Iteration   4: 107331.307 ops/s
Iteration   5: 106209.934 ops/s
Iteration   6: 104842.366 ops/s
Iteration   7: 109609.024 ops/s
Iteration   8: 107273.517 ops/s
Iteration   9: 106993.588 ops/s
Iteration  10: 109522.646 ops/s
Iteration  11: 103776.320 ops/s
Iteration  12: 106369.987 ops/s
Iteration  13: 106779.149 ops/s
Iteration  14: 108107.695 ops/s
Iteration  15: 111098.750 ops/s
Iteration  16: 104887.871 ops/s
Iteration  17: 106085.446 ops/s
Iteration  18: 109719.545 ops/s
Iteration  19: 103578.583 ops/s
Iteration  20: 106672.116 ops/s
Iteration  21: 109931.154 ops/s
Iteration  22: 107434.519 ops/s
Iteration  23: 104330.034 ops/s
Iteration  24: 107387.511 ops/s
Iteration  25: 109165.540 ops/s
Iteration  26: 105136.100 ops/s
Iteration  27: 107137.415 ops/s
Iteration  28: 107962.646 ops/s
Iteration  29: 104198.983 ops/s
Iteration  30: 109218.720 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_674._Benchmark.benchmark_Cluster_674":
  107008.854 ±(99.9%) 1326.979 ops/s [Average]
  (min, avg, max) = (103578.583, 107008.854, 111098.750), stdev = 1986.159
  CI (99.9%): [105681.876, 108335.833] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_674._Benchmark.benchmark_Cluster_674  thrpt   30  107008.854 ± 1326.979  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_675._Benchmark.benchmark_Cluster_675$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_675._Benchmark.benchmark_Cluster_675

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10785.387 ops/s
# Warmup Iteration   2: 26398.031 ops/s
# Warmup Iteration   3: 57242.607 ops/s
# Warmup Iteration   4: 45312.418 ops/s
# Warmup Iteration   5: 76421.193 ops/s
# Warmup Iteration   6: 86141.527 ops/s
# Warmup Iteration   7: 72903.655 ops/s
# Warmup Iteration   8: 90388.009 ops/s
# Warmup Iteration   9: 90061.216 ops/s
# Warmup Iteration  10: 90035.443 ops/s
# Warmup Iteration  11: 90348.967 ops/s
# Warmup Iteration  12: 89474.172 ops/s
# Warmup Iteration  13: 88002.226 ops/s
# Warmup Iteration  14: 92383.697 ops/s
# Warmup Iteration  15: 86769.484 ops/s
# Warmup Iteration  16: 90853.672 ops/s
# Warmup Iteration  17: 94917.281 ops/s
# Warmup Iteration  18: 78024.130 ops/s
# Warmup Iteration  19: 88105.463 ops/s
# Warmup Iteration  20: 89637.226 ops/s
# Warmup Iteration  21: 92090.775 ops/s
# Warmup Iteration  22: 91071.275 ops/s
# Warmup Iteration  23: 93872.445 ops/s
# Warmup Iteration  24: 92207.637 ops/s
# Warmup Iteration  25: 91314.216 ops/s
# Warmup Iteration  26: 95875.892 ops/s
# Warmup Iteration  27: 92251.641 ops/s
# Warmup Iteration  28: 90068.725 ops/s
# Warmup Iteration  29: 94049.988 ops/s
# Warmup Iteration  30: 92784.584 ops/s
Iteration   1: 95162.377 ops/s
Iteration   2: 94299.014 ops/s
Iteration   3: 91237.157 ops/s
Iteration   4: 91199.522 ops/s
Iteration   5: 94006.292 ops/s
Iteration   6: 88471.887 ops/s
Iteration   7: 96105.153 ops/s
Iteration   8: 88131.812 ops/s
Iteration   9: 90438.074 ops/s
Iteration  10: 93744.880 ops/s
Iteration  11: 88799.549 ops/s
Iteration  12: 93933.570 ops/s
Iteration  13: 88765.850 ops/s
Iteration  14: 91640.154 ops/s
Iteration  15: 92936.283 ops/s
Iteration  16: 91821.871 ops/s
Iteration  17: 90642.807 ops/s
Iteration  18: 95900.106 ops/s
Iteration  19: 90886.896 ops/s
Iteration  20: 96923.477 ops/s
Iteration  21: 90197.648 ops/s
Iteration  22: 92858.351 ops/s
Iteration  23: 94664.684 ops/s
Iteration  24: 93283.265 ops/s
Iteration  25: 96894.018 ops/s
Iteration  26: 89213.492 ops/s
Iteration  27: 91537.791 ops/s
Iteration  28: 95691.926 ops/s
Iteration  29: 90322.082 ops/s
Iteration  30: 93198.018 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_675._Benchmark.benchmark_Cluster_675":
  92430.267 ±(99.9%) 1733.731 ops/s [Average]
  (min, avg, max) = (88131.812, 92430.267, 96923.477), stdev = 2594.968
  CI (99.9%): [90696.536, 94163.998] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_675._Benchmark.benchmark_Cluster_675  thrpt   30  92430.267 ± 1733.731  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_676._Benchmark.benchmark_Cluster_676$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_676._Benchmark.benchmark_Cluster_676

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.780 ops/s
# Warmup Iteration   2: 2146.863 ops/s
# Warmup Iteration   3: 15113.742 ops/s
# Warmup Iteration   4: 25284.539 ops/s
# Warmup Iteration   5: 35539.448 ops/s
# Warmup Iteration   6: 35859.160 ops/s
# Warmup Iteration   7: 29843.118 ops/s
# Warmup Iteration   8: 32488.255 ops/s
# Warmup Iteration   9: 43647.443 ops/s
# Warmup Iteration  10: 49728.342 ops/s
# Warmup Iteration  11: 40230.408 ops/s
# Warmup Iteration  12: 37289.648 ops/s
# Warmup Iteration  13: 98231.628 ops/s
# Warmup Iteration  14: 111615.231 ops/s
# Warmup Iteration  15: 117243.235 ops/s
# Warmup Iteration  16: 112645.790 ops/s
# Warmup Iteration  17: 106107.347 ops/s
# Warmup Iteration  18: 112846.542 ops/s
# Warmup Iteration  19: 112224.843 ops/s
# Warmup Iteration  20: 120621.278 ops/s
# Warmup Iteration  21: 113545.424 ops/s
# Warmup Iteration  22: 114736.739 ops/s
# Warmup Iteration  23: 116097.626 ops/s
# Warmup Iteration  24: 120342.235 ops/s
# Warmup Iteration  25: 108310.564 ops/s
# Warmup Iteration  26: 115803.904 ops/s
# Warmup Iteration  27: 115932.885 ops/s
# Warmup Iteration  28: 112312.710 ops/s
# Warmup Iteration  29: 116803.713 ops/s
# Warmup Iteration  30: 111463.884 ops/s
Iteration   1: 114222.855 ops/s
Iteration   2: 117442.333 ops/s
Iteration   3: 112129.985 ops/s
Iteration   4: 121125.575 ops/s
Iteration   5: 111389.531 ops/s
Iteration   6: 117299.772 ops/s
Iteration   7: 113912.074 ops/s
Iteration   8: 116243.224 ops/s
Iteration   9: 113812.897 ops/s
Iteration  10: 113964.127 ops/s
Iteration  11: 117231.640 ops/s
Iteration  12: 111120.050 ops/s
Iteration  13: 120001.034 ops/s
Iteration  14: 112492.909 ops/s
Iteration  15: 113954.414 ops/s
Iteration  16: 111927.300 ops/s
Iteration  17: 118165.113 ops/s
Iteration  18: 115480.947 ops/s
Iteration  19: 114703.171 ops/s
Iteration  20: 116479.590 ops/s
Iteration  21: 114130.611 ops/s
Iteration  22: 114939.533 ops/s
Iteration  23: 114690.080 ops/s
Iteration  24: 114242.970 ops/s
Iteration  25: 111649.766 ops/s
Iteration  26: 111360.831 ops/s
Iteration  27: 120979.152 ops/s
Iteration  28: 110915.410 ops/s
Iteration  29: 117133.316 ops/s
Iteration  30: 113916.154 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_676._Benchmark.benchmark_Cluster_676":
  114901.879 ±(99.9%) 1897.930 ops/s [Average]
  (min, avg, max) = (110915.410, 114901.879, 121125.575), stdev = 2840.733
  CI (99.9%): [113003.949, 116799.809] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_676._Benchmark.benchmark_Cluster_676  thrpt   30  114901.879 ± 1897.930  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_677._Benchmark.benchmark_Cluster_677$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_677._Benchmark.benchmark_Cluster_677

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5404.138 ops/s
# Warmup Iteration   2: 37391.512 ops/s
# Warmup Iteration   3: 86676.193 ops/s
# Warmup Iteration   4: 102072.524 ops/s
# Warmup Iteration   5: 120848.738 ops/s
# Warmup Iteration   6: 127291.145 ops/s
# Warmup Iteration   7: 130102.600 ops/s
# Warmup Iteration   8: 130166.543 ops/s
# Warmup Iteration   9: 127064.115 ops/s
# Warmup Iteration  10: 130246.490 ops/s
# Warmup Iteration  11: 133744.799 ops/s
# Warmup Iteration  12: 107996.209 ops/s
# Warmup Iteration  13: 129149.665 ops/s
# Warmup Iteration  14: 129624.563 ops/s
# Warmup Iteration  15: 134323.117 ops/s
# Warmup Iteration  16: 126346.831 ops/s
# Warmup Iteration  17: 132035.701 ops/s
# Warmup Iteration  18: 128352.827 ops/s
# Warmup Iteration  19: 129998.098 ops/s
# Warmup Iteration  20: 138402.250 ops/s
# Warmup Iteration  21: 126410.275 ops/s
# Warmup Iteration  22: 132287.066 ops/s
# Warmup Iteration  23: 129276.260 ops/s
# Warmup Iteration  24: 131978.365 ops/s
# Warmup Iteration  25: 133613.595 ops/s
# Warmup Iteration  26: 135244.253 ops/s
# Warmup Iteration  27: 129167.871 ops/s
# Warmup Iteration  28: 135253.074 ops/s
# Warmup Iteration  29: 130632.613 ops/s
# Warmup Iteration  30: 131116.967 ops/s
Iteration   1: 131375.196 ops/s
Iteration   2: 132495.837 ops/s
Iteration   3: 128832.822 ops/s
Iteration   4: 129845.321 ops/s
Iteration   5: 134185.887 ops/s
Iteration   6: 131627.924 ops/s
Iteration   7: 133896.347 ops/s
Iteration   8: 131135.712 ops/s
Iteration   9: 133887.533 ops/s
Iteration  10: 128551.651 ops/s
Iteration  11: 134355.646 ops/s
Iteration  12: 134703.370 ops/s
Iteration  13: 126477.234 ops/s
Iteration  14: 136099.398 ops/s
Iteration  15: 127240.640 ops/s
Iteration  16: 131408.820 ops/s
Iteration  17: 136880.654 ops/s
Iteration  18: 127547.409 ops/s
Iteration  19: 137449.484 ops/s
Iteration  20: 130065.121 ops/s
Iteration  21: 134190.995 ops/s
Iteration  22: 129203.724 ops/s
Iteration  23: 135439.151 ops/s
Iteration  24: 130835.727 ops/s
Iteration  25: 129959.902 ops/s
Iteration  26: 132891.180 ops/s
Iteration  27: 131143.186 ops/s
Iteration  28: 132864.479 ops/s
Iteration  29: 132909.448 ops/s
Iteration  30: 125792.440 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_677._Benchmark.benchmark_Cluster_677":
  131776.408 ±(99.9%) 2040.024 ops/s [Average]
  (min, avg, max) = (125792.440, 131776.408, 137449.484), stdev = 3053.412
  CI (99.9%): [129736.384, 133816.432] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_677._Benchmark.benchmark_Cluster_677  thrpt   30  131776.408 ± 2040.024  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_678._Benchmark.benchmark_Cluster_678$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_678._Benchmark.benchmark_Cluster_678

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1219.499 ops/s
# Warmup Iteration   2: 19649.167 ops/s
# Warmup Iteration   3: 33347.168 ops/s
# Warmup Iteration   4: 39100.466 ops/s
# Warmup Iteration   5: 64825.710 ops/s
# Warmup Iteration   6: 111250.155 ops/s
# Warmup Iteration   7: 103722.925 ops/s
# Warmup Iteration   8: 108071.938 ops/s
# Warmup Iteration   9: 110768.080 ops/s
# Warmup Iteration  10: 105149.924 ops/s
# Warmup Iteration  11: 101943.529 ops/s
# Warmup Iteration  12: 105334.217 ops/s
# Warmup Iteration  13: 103508.246 ops/s
# Warmup Iteration  14: 108496.163 ops/s
# Warmup Iteration  15: 107901.683 ops/s
# Warmup Iteration  16: 111234.966 ops/s
# Warmup Iteration  17: 107912.673 ops/s
# Warmup Iteration  18: 108280.391 ops/s
# Warmup Iteration  19: 111573.589 ops/s
# Warmup Iteration  20: 108824.058 ops/s
# Warmup Iteration  21: 111675.763 ops/s
# Warmup Iteration  22: 105652.331 ops/s
# Warmup Iteration  23: 111275.493 ops/s
# Warmup Iteration  24: 109951.065 ops/s
# Warmup Iteration  25: 108557.497 ops/s
# Warmup Iteration  26: 112339.830 ops/s
# Warmup Iteration  27: 106779.456 ops/s
# Warmup Iteration  28: 114093.826 ops/s
# Warmup Iteration  29: 105193.666 ops/s
# Warmup Iteration  30: 112350.751 ops/s
Iteration   1: 108425.573 ops/s
Iteration   2: 108618.988 ops/s
Iteration   3: 112516.193 ops/s
Iteration   4: 110650.456 ops/s
Iteration   5: 104976.733 ops/s
Iteration   6: 110213.454 ops/s
Iteration   7: 109683.370 ops/s
Iteration   8: 112650.572 ops/s
Iteration   9: 106187.424 ops/s
Iteration  10: 109350.339 ops/s
Iteration  11: 114070.866 ops/s
Iteration  12: 106770.741 ops/s
Iteration  13: 109711.529 ops/s
Iteration  14: 109940.791 ops/s
Iteration  15: 104578.105 ops/s
Iteration  16: 109977.289 ops/s
Iteration  17: 109122.248 ops/s
Iteration  18: 105124.014 ops/s
Iteration  19: 113143.491 ops/s
Iteration  20: 107790.579 ops/s
Iteration  21: 111151.563 ops/s
Iteration  22: 107768.127 ops/s
Iteration  23: 111856.738 ops/s
Iteration  24: 107849.813 ops/s
Iteration  25: 107255.356 ops/s
Iteration  26: 111043.069 ops/s
Iteration  27: 108464.159 ops/s
Iteration  28: 110791.640 ops/s
Iteration  29: 106954.916 ops/s
Iteration  30: 109307.167 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_678._Benchmark.benchmark_Cluster_678":
  109198.177 ±(99.9%) 1621.158 ops/s [Average]
  (min, avg, max) = (104578.105, 109198.177, 114070.866), stdev = 2426.473
  CI (99.9%): [107577.019, 110819.335] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_678._Benchmark.benchmark_Cluster_678  thrpt   30  109198.177 ± 1621.158  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_679._Benchmark.benchmark_Cluster_679$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_679._Benchmark.benchmark_Cluster_679

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6289.958 ops/s
# Warmup Iteration   2: 17593.170 ops/s
# Warmup Iteration   3: 24126.091 ops/s
# Warmup Iteration   4: 44038.417 ops/s
# Warmup Iteration   5: 72394.144 ops/s
# Warmup Iteration   6: 80929.614 ops/s
# Warmup Iteration   7: 63097.168 ops/s
# Warmup Iteration   8: 84801.541 ops/s
# Warmup Iteration   9: 81933.250 ops/s
# Warmup Iteration  10: 80409.819 ops/s
# Warmup Iteration  11: 79913.560 ops/s
# Warmup Iteration  12: 81432.188 ops/s
# Warmup Iteration  13: 82832.184 ops/s
# Warmup Iteration  14: 84710.324 ops/s
# Warmup Iteration  15: 82126.956 ops/s
# Warmup Iteration  16: 83867.142 ops/s
# Warmup Iteration  17: 77822.077 ops/s
# Warmup Iteration  18: 83500.137 ops/s
# Warmup Iteration  19: 83085.189 ops/s
# Warmup Iteration  20: 81500.451 ops/s
# Warmup Iteration  21: 77468.624 ops/s
# Warmup Iteration  22: 84558.935 ops/s
# Warmup Iteration  23: 82097.797 ops/s
# Warmup Iteration  24: 81804.556 ops/s
# Warmup Iteration  25: 83894.509 ops/s
# Warmup Iteration  26: 81842.473 ops/s
# Warmup Iteration  27: 85926.840 ops/s
# Warmup Iteration  28: 80555.379 ops/s
# Warmup Iteration  29: 85671.037 ops/s
# Warmup Iteration  30: 85990.824 ops/s
Iteration   1: 82020.813 ops/s
Iteration   2: 86676.142 ops/s
Iteration   3: 81478.665 ops/s
Iteration   4: 81163.359 ops/s
Iteration   5: 85051.902 ops/s
Iteration   6: 80686.139 ops/s
Iteration   7: 83319.721 ops/s
Iteration   8: 80677.942 ops/s
Iteration   9: 85464.575 ops/s
Iteration  10: 84975.540 ops/s
Iteration  11: 81622.013 ops/s
Iteration  12: 84981.314 ops/s
Iteration  13: 81094.936 ops/s
Iteration  14: 84652.182 ops/s
Iteration  15: 80924.744 ops/s
Iteration  16: 82968.019 ops/s
Iteration  17: 84588.523 ops/s
Iteration  18: 82264.033 ops/s
Iteration  19: 81028.008 ops/s
Iteration  20: 82700.408 ops/s
Iteration  21: 85283.730 ops/s
Iteration  22: 78204.561 ops/s
Iteration  23: 81803.884 ops/s
Iteration  24: 86689.401 ops/s
Iteration  25: 82746.523 ops/s
Iteration  26: 82359.735 ops/s
Iteration  27: 86811.627 ops/s
Iteration  28: 81079.748 ops/s
Iteration  29: 83942.829 ops/s
Iteration  30: 81836.811 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_679._Benchmark.benchmark_Cluster_679":
  82969.928 ±(99.9%) 1430.198 ops/s [Average]
  (min, avg, max) = (78204.561, 82969.928, 86811.627), stdev = 2140.653
  CI (99.9%): [81539.730, 84400.125] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_679._Benchmark.benchmark_Cluster_679  thrpt   30  82969.928 ± 1430.198  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_68._Benchmark.benchmark_Cluster_68$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_68._Benchmark.benchmark_Cluster_68

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4734.601 ops/s
# Warmup Iteration   2: 25680.263 ops/s
# Warmup Iteration   3: 32740.710 ops/s
# Warmup Iteration   4: 46043.102 ops/s
# Warmup Iteration   5: 65376.326 ops/s
# Warmup Iteration   6: 110454.914 ops/s
# Warmup Iteration   7: 114689.461 ops/s
# Warmup Iteration   8: 121034.373 ops/s
# Warmup Iteration   9: 118191.895 ops/s
# Warmup Iteration  10: 121618.844 ops/s
# Warmup Iteration  11: 127257.868 ops/s
# Warmup Iteration  12: 123738.008 ops/s
# Warmup Iteration  13: 129587.118 ops/s
# Warmup Iteration  14: 126347.945 ops/s
# Warmup Iteration  15: 121869.710 ops/s
# Warmup Iteration  16: 126456.545 ops/s
# Warmup Iteration  17: 127718.501 ops/s
# Warmup Iteration  18: 127166.250 ops/s
# Warmup Iteration  19: 127708.954 ops/s
# Warmup Iteration  20: 131335.907 ops/s
# Warmup Iteration  21: 130375.533 ops/s
# Warmup Iteration  22: 131375.532 ops/s
# Warmup Iteration  23: 132809.503 ops/s
# Warmup Iteration  24: 127840.815 ops/s
# Warmup Iteration  25: 130580.043 ops/s
# Warmup Iteration  26: 131877.090 ops/s
# Warmup Iteration  27: 129593.316 ops/s
# Warmup Iteration  28: 129974.227 ops/s
# Warmup Iteration  29: 127418.161 ops/s
# Warmup Iteration  30: 126975.936 ops/s
Iteration   1: 138764.080 ops/s
Iteration   2: 132050.072 ops/s
Iteration   3: 130843.687 ops/s
Iteration   4: 135301.008 ops/s
Iteration   5: 128586.592 ops/s
Iteration   6: 132372.264 ops/s
Iteration   7: 134461.994 ops/s
Iteration   8: 136258.768 ops/s
Iteration   9: 131736.150 ops/s
Iteration  10: 134879.910 ops/s
Iteration  11: 128543.048 ops/s
Iteration  12: 135901.053 ops/s
Iteration  13: 128838.194 ops/s
Iteration  14: 127492.087 ops/s
Iteration  15: 136500.433 ops/s
Iteration  16: 129953.780 ops/s
Iteration  17: 129901.441 ops/s
Iteration  18: 136315.591 ops/s
Iteration  19: 128462.440 ops/s
Iteration  20: 131354.940 ops/s
Iteration  21: 130385.390 ops/s
Iteration  22: 131653.105 ops/s
Iteration  23: 130766.888 ops/s
Iteration  24: 132062.558 ops/s
Iteration  25: 129259.066 ops/s
Iteration  26: 128115.683 ops/s
Iteration  27: 134876.230 ops/s
Iteration  28: 125566.434 ops/s
Iteration  29: 129371.950 ops/s
Iteration  30: 132301.892 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_68._Benchmark.benchmark_Cluster_68":
  131762.558 ±(99.9%) 2156.206 ops/s [Average]
  (min, avg, max) = (125566.434, 131762.558, 138764.080), stdev = 3227.308
  CI (99.9%): [129606.352, 133918.763] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_68._Benchmark.benchmark_Cluster_68  thrpt   30  131762.558 ± 2156.206  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_680._Benchmark.benchmark_Cluster_680$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_680._Benchmark.benchmark_Cluster_680

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4882.202 ops/s
# Warmup Iteration   2: 12943.558 ops/s
# Warmup Iteration   3: 28629.512 ops/s
# Warmup Iteration   4: 45585.934 ops/s
# Warmup Iteration   5: 82367.101 ops/s
# Warmup Iteration   6: 81320.365 ops/s
# Warmup Iteration   7: 82018.436 ops/s
# Warmup Iteration   8: 86454.384 ops/s
# Warmup Iteration   9: 82571.821 ops/s
# Warmup Iteration  10: 80542.614 ops/s
# Warmup Iteration  11: 85083.484 ops/s
# Warmup Iteration  12: 80662.179 ops/s
# Warmup Iteration  13: 84215.755 ops/s
# Warmup Iteration  14: 83491.501 ops/s
# Warmup Iteration  15: 81600.360 ops/s
# Warmup Iteration  16: 84967.473 ops/s
# Warmup Iteration  17: 80268.589 ops/s
# Warmup Iteration  18: 83499.477 ops/s
# Warmup Iteration  19: 79008.351 ops/s
# Warmup Iteration  20: 83164.211 ops/s
# Warmup Iteration  21: 82299.504 ops/s
# Warmup Iteration  22: 79897.742 ops/s
# Warmup Iteration  23: 86064.756 ops/s
# Warmup Iteration  24: 80156.396 ops/s
# Warmup Iteration  25: 80634.830 ops/s
# Warmup Iteration  26: 83753.932 ops/s
# Warmup Iteration  27: 79440.362 ops/s
# Warmup Iteration  28: 82644.981 ops/s
# Warmup Iteration  29: 79450.059 ops/s
# Warmup Iteration  30: 79364.785 ops/s
Iteration   1: 84620.616 ops/s
Iteration   2: 80310.287 ops/s
Iteration   3: 81116.531 ops/s
Iteration   4: 79590.463 ops/s
Iteration   5: 83420.408 ops/s
Iteration   6: 81993.688 ops/s
Iteration   7: 82012.711 ops/s
Iteration   8: 83803.751 ops/s
Iteration   9: 83105.217 ops/s
Iteration  10: 80450.580 ops/s
Iteration  11: 82730.955 ops/s
Iteration  12: 81672.404 ops/s
Iteration  13: 82225.483 ops/s
Iteration  14: 83069.203 ops/s
Iteration  15: 83637.074 ops/s
Iteration  16: 79959.365 ops/s
Iteration  17: 84603.200 ops/s
Iteration  18: 79685.136 ops/s
Iteration  19: 83449.094 ops/s
Iteration  20: 82469.457 ops/s
Iteration  21: 84232.997 ops/s
Iteration  22: 83782.132 ops/s
Iteration  23: 79570.074 ops/s
Iteration  24: 83804.420 ops/s
Iteration  25: 84197.818 ops/s
Iteration  26: 78724.429 ops/s
Iteration  27: 83971.882 ops/s
Iteration  28: 79962.824 ops/s
Iteration  29: 80247.801 ops/s
Iteration  30: 85044.276 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_680._Benchmark.benchmark_Cluster_680":
  82248.809 ±(99.9%) 1239.038 ops/s [Average]
  (min, avg, max) = (78724.429, 82248.809, 85044.276), stdev = 1854.533
  CI (99.9%): [81009.771, 83487.847] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_680._Benchmark.benchmark_Cluster_680  thrpt   30  82248.809 ± 1239.038  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_681._Benchmark.benchmark_Cluster_681$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_681._Benchmark.benchmark_Cluster_681

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2769.540 ops/s
# Warmup Iteration   2: 15519.422 ops/s
# Warmup Iteration   3: 23472.948 ops/s
# Warmup Iteration   4: 31291.728 ops/s
# Warmup Iteration   5: 36962.845 ops/s
# Warmup Iteration   6: 31985.342 ops/s
# Warmup Iteration   7: 46732.564 ops/s
# Warmup Iteration   8: 90730.872 ops/s
# Warmup Iteration   9: 89616.834 ops/s
# Warmup Iteration  10: 91077.429 ops/s
# Warmup Iteration  11: 86309.841 ops/s
# Warmup Iteration  12: 88673.741 ops/s
# Warmup Iteration  13: 89554.920 ops/s
# Warmup Iteration  14: 89168.960 ops/s
# Warmup Iteration  15: 85807.305 ops/s
# Warmup Iteration  16: 86144.898 ops/s
# Warmup Iteration  17: 88627.889 ops/s
# Warmup Iteration  18: 94285.782 ops/s
# Warmup Iteration  19: 89477.799 ops/s
# Warmup Iteration  20: 92234.229 ops/s
# Warmup Iteration  21: 90258.387 ops/s
# Warmup Iteration  22: 88702.261 ops/s
# Warmup Iteration  23: 95092.879 ops/s
# Warmup Iteration  24: 89542.265 ops/s
# Warmup Iteration  25: 84549.573 ops/s
# Warmup Iteration  26: 90455.754 ops/s
# Warmup Iteration  27: 90122.504 ops/s
# Warmup Iteration  28: 92608.604 ops/s
# Warmup Iteration  29: 93313.321 ops/s
# Warmup Iteration  30: 89021.502 ops/s
Iteration   1: 92038.046 ops/s
Iteration   2: 89806.239 ops/s
Iteration   3: 90509.092 ops/s
Iteration   4: 93704.566 ops/s
Iteration   5: 88634.610 ops/s
Iteration   6: 90157.859 ops/s
Iteration   7: 95175.698 ops/s
Iteration   8: 89026.776 ops/s
Iteration   9: 90175.374 ops/s
Iteration  10: 95016.926 ops/s
Iteration  11: 87926.040 ops/s
Iteration  12: 91903.279 ops/s
Iteration  13: 90097.546 ops/s
Iteration  14: 91021.041 ops/s
Iteration  15: 88325.427 ops/s
Iteration  16: 88007.083 ops/s
Iteration  17: 93677.326 ops/s
Iteration  18: 94147.638 ops/s
Iteration  19: 88549.837 ops/s
Iteration  20: 94260.446 ops/s
Iteration  21: 89343.632 ops/s
Iteration  22: 92436.978 ops/s
Iteration  23: 92128.367 ops/s
Iteration  24: 91831.400 ops/s
Iteration  25: 90680.273 ops/s
Iteration  26: 89346.608 ops/s
Iteration  27: 90198.694 ops/s
Iteration  28: 70468.538 ops/s
Iteration  29: 93559.874 ops/s
Iteration  30: 87292.142 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_681._Benchmark.benchmark_Cluster_681":
  90314.912 ±(99.9%) 2918.629 ops/s [Average]
  (min, avg, max) = (70468.538, 90314.912, 95175.698), stdev = 4368.466
  CI (99.9%): [87396.283, 93233.540] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_681._Benchmark.benchmark_Cluster_681  thrpt   30  90314.912 ± 2918.629  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_682._Benchmark.benchmark_Cluster_682$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_682._Benchmark.benchmark_Cluster_682

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6452.408 ops/s
# Warmup Iteration   2: 33331.450 ops/s
# Warmup Iteration   3: 106503.388 ops/s
# Warmup Iteration   4: 107428.105 ops/s
# Warmup Iteration   5: 123910.111 ops/s
# Warmup Iteration   6: 112603.671 ops/s
# Warmup Iteration   7: 116443.117 ops/s
# Warmup Iteration   8: 118358.493 ops/s
# Warmup Iteration   9: 114980.276 ops/s
# Warmup Iteration  10: 118632.307 ops/s
# Warmup Iteration  11: 116044.502 ops/s
# Warmup Iteration  12: 122145.533 ops/s
# Warmup Iteration  13: 116926.287 ops/s
# Warmup Iteration  14: 116646.706 ops/s
# Warmup Iteration  15: 122799.377 ops/s
# Warmup Iteration  16: 115242.045 ops/s
# Warmup Iteration  17: 120835.460 ops/s
# Warmup Iteration  18: 125749.966 ops/s
# Warmup Iteration  19: 117269.475 ops/s
# Warmup Iteration  20: 124347.568 ops/s
# Warmup Iteration  21: 119595.309 ops/s
# Warmup Iteration  22: 128032.874 ops/s
# Warmup Iteration  23: 124948.959 ops/s
# Warmup Iteration  24: 121085.790 ops/s
# Warmup Iteration  25: 123343.506 ops/s
# Warmup Iteration  26: 121186.154 ops/s
# Warmup Iteration  27: 126307.834 ops/s
# Warmup Iteration  28: 122022.315 ops/s
# Warmup Iteration  29: 124788.455 ops/s
# Warmup Iteration  30: 127508.494 ops/s
Iteration   1: 122143.421 ops/s
Iteration   2: 125969.719 ops/s
Iteration   3: 119532.774 ops/s
Iteration   4: 123521.314 ops/s
Iteration   5: 127078.395 ops/s
Iteration   6: 116906.886 ops/s
Iteration   7: 127138.340 ops/s
Iteration   8: 123760.611 ops/s
Iteration   9: 127940.499 ops/s
Iteration  10: 123183.959 ops/s
Iteration  11: 121148.067 ops/s
Iteration  12: 126385.728 ops/s
Iteration  13: 122913.706 ops/s
Iteration  14: 124345.928 ops/s
Iteration  15: 120829.084 ops/s
Iteration  16: 128778.846 ops/s
Iteration  17: 122123.075 ops/s
Iteration  18: 124031.513 ops/s
Iteration  19: 127215.997 ops/s
Iteration  20: 121494.327 ops/s
Iteration  21: 126971.022 ops/s
Iteration  22: 121083.980 ops/s
Iteration  23: 122336.099 ops/s
Iteration  24: 121809.006 ops/s
Iteration  25: 124310.938 ops/s
Iteration  26: 127913.874 ops/s
Iteration  27: 123966.961 ops/s
Iteration  28: 124214.711 ops/s
Iteration  29: 124439.205 ops/s
Iteration  30: 127622.308 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_682._Benchmark.benchmark_Cluster_682":
  124037.010 ±(99.9%) 1902.684 ops/s [Average]
  (min, avg, max) = (116906.886, 124037.010, 128778.846), stdev = 2847.848
  CI (99.9%): [122134.326, 125939.694] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_682._Benchmark.benchmark_Cluster_682  thrpt   30  124037.010 ± 1902.684  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_683._Benchmark.benchmark_Cluster_683$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_683._Benchmark.benchmark_Cluster_683

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15447.963 ops/s
# Warmup Iteration   2: 78591.240 ops/s
# Warmup Iteration   3: 117706.612 ops/s
# Warmup Iteration   4: 116850.868 ops/s
# Warmup Iteration   5: 110878.316 ops/s
# Warmup Iteration   6: 116602.044 ops/s
# Warmup Iteration   7: 118365.129 ops/s
# Warmup Iteration   8: 127291.861 ops/s
# Warmup Iteration   9: 130643.913 ops/s
# Warmup Iteration  10: 119776.748 ops/s
# Warmup Iteration  11: 131678.367 ops/s
# Warmup Iteration  12: 131721.669 ops/s
# Warmup Iteration  13: 125765.592 ops/s
# Warmup Iteration  14: 128354.636 ops/s
# Warmup Iteration  15: 129269.689 ops/s
# Warmup Iteration  16: 123845.785 ops/s
# Warmup Iteration  17: 136963.936 ops/s
# Warmup Iteration  18: 134960.714 ops/s
# Warmup Iteration  19: 138384.047 ops/s
# Warmup Iteration  20: 139518.803 ops/s
# Warmup Iteration  21: 132033.196 ops/s
# Warmup Iteration  22: 133805.668 ops/s
# Warmup Iteration  23: 138548.670 ops/s
# Warmup Iteration  24: 130450.946 ops/s
# Warmup Iteration  25: 137597.786 ops/s
# Warmup Iteration  26: 140900.588 ops/s
# Warmup Iteration  27: 131196.809 ops/s
# Warmup Iteration  28: 140077.493 ops/s
# Warmup Iteration  29: 139612.574 ops/s
# Warmup Iteration  30: 128391.179 ops/s
Iteration   1: 140272.555 ops/s
Iteration   2: 131448.130 ops/s
Iteration   3: 138640.415 ops/s
Iteration   4: 138386.738 ops/s
Iteration   5: 132071.513 ops/s
Iteration   6: 138503.358 ops/s
Iteration   7: 130238.191 ops/s
Iteration   8: 138636.427 ops/s
Iteration   9: 132228.801 ops/s
Iteration  10: 138063.576 ops/s
Iteration  11: 137809.687 ops/s
Iteration  12: 133641.407 ops/s
Iteration  13: 138721.464 ops/s
Iteration  14: 133740.204 ops/s
Iteration  15: 129952.367 ops/s
Iteration  16: 136076.831 ops/s
Iteration  17: 132495.221 ops/s
Iteration  18: 133776.827 ops/s
Iteration  19: 139465.194 ops/s
Iteration  20: 131163.582 ops/s
Iteration  21: 135835.741 ops/s
Iteration  22: 120568.129 ops/s
Iteration  23: 132835.224 ops/s
Iteration  24: 138817.792 ops/s
Iteration  25: 130053.414 ops/s
Iteration  26: 140382.689 ops/s
Iteration  27: 134538.968 ops/s
Iteration  28: 135760.229 ops/s
Iteration  29: 139317.492 ops/s
Iteration  30: 129737.611 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_683._Benchmark.benchmark_Cluster_683":
  134772.659 ±(99.9%) 2937.095 ops/s [Average]
  (min, avg, max) = (120568.129, 134772.659, 140382.689), stdev = 4396.106
  CI (99.9%): [131835.564, 137709.754] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_683._Benchmark.benchmark_Cluster_683  thrpt   30  134772.659 ± 2937.095  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_684._Benchmark.benchmark_Cluster_684$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_684._Benchmark.benchmark_Cluster_684

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3876.919 ops/s
# Warmup Iteration   2: 27021.398 ops/s
# Warmup Iteration   3: 43867.834 ops/s
# Warmup Iteration   4: 92612.107 ops/s
# Warmup Iteration   5: 88769.995 ops/s
# Warmup Iteration   6: 102828.192 ops/s
# Warmup Iteration   7: 104485.099 ops/s
# Warmup Iteration   8: 101886.684 ops/s
# Warmup Iteration   9: 94937.718 ops/s
# Warmup Iteration  10: 99406.282 ops/s
# Warmup Iteration  11: 103376.872 ops/s
# Warmup Iteration  12: 102854.664 ops/s
# Warmup Iteration  13: 101644.223 ops/s
# Warmup Iteration  14: 105441.143 ops/s
# Warmup Iteration  15: 100123.338 ops/s
# Warmup Iteration  16: 105252.061 ops/s
# Warmup Iteration  17: 106684.636 ops/s
# Warmup Iteration  18: 111262.801 ops/s
# Warmup Iteration  19: 105225.978 ops/s
# Warmup Iteration  20: 108930.318 ops/s
# Warmup Iteration  21: 111143.381 ops/s
# Warmup Iteration  22: 104506.220 ops/s
# Warmup Iteration  23: 107413.493 ops/s
# Warmup Iteration  24: 111992.843 ops/s
# Warmup Iteration  25: 112041.858 ops/s
# Warmup Iteration  26: 106429.717 ops/s
# Warmup Iteration  27: 112067.044 ops/s
# Warmup Iteration  28: 103502.833 ops/s
# Warmup Iteration  29: 109347.904 ops/s
# Warmup Iteration  30: 110806.319 ops/s
Iteration   1: 104292.877 ops/s
Iteration   2: 111198.142 ops/s
Iteration   3: 108286.923 ops/s
Iteration   4: 107716.926 ops/s
Iteration   5: 106877.033 ops/s
Iteration   6: 103781.387 ops/s
Iteration   7: 110080.437 ops/s
Iteration   8: 106788.966 ops/s
Iteration   9: 110585.836 ops/s
Iteration  10: 104744.846 ops/s
Iteration  11: 110174.862 ops/s
Iteration  12: 111482.935 ops/s
Iteration  13: 105644.534 ops/s
Iteration  14: 109306.792 ops/s
Iteration  15: 108559.415 ops/s
Iteration  16: 104291.643 ops/s
Iteration  17: 107939.726 ops/s
Iteration  18: 110757.817 ops/s
Iteration  19: 109623.523 ops/s
Iteration  20: 108812.645 ops/s
Iteration  21: 109720.417 ops/s
Iteration  22: 106879.143 ops/s
Iteration  23: 107859.705 ops/s
Iteration  24: 112731.972 ops/s
Iteration  25: 106981.284 ops/s
Iteration  26: 111068.126 ops/s
Iteration  27: 106683.998 ops/s
Iteration  28: 108619.884 ops/s
Iteration  29: 110422.840 ops/s
Iteration  30: 106016.912 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_684._Benchmark.benchmark_Cluster_684":
  108264.385 ±(99.9%) 1580.343 ops/s [Average]
  (min, avg, max) = (103781.387, 108264.385, 112731.972), stdev = 2365.383
  CI (99.9%): [106684.042, 109844.728] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_684._Benchmark.benchmark_Cluster_684  thrpt   30  108264.385 ± 1580.343  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_685._Benchmark.benchmark_Cluster_685$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_685._Benchmark.benchmark_Cluster_685

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5508.226 ops/s
# Warmup Iteration   2: 23589.695 ops/s
# Warmup Iteration   3: 53788.644 ops/s
# Warmup Iteration   4: 112838.548 ops/s
# Warmup Iteration   5: 111048.484 ops/s
# Warmup Iteration   6: 113197.976 ops/s
# Warmup Iteration   7: 108480.338 ops/s
# Warmup Iteration   8: 120172.323 ops/s
# Warmup Iteration   9: 119997.456 ops/s
# Warmup Iteration  10: 120042.612 ops/s
# Warmup Iteration  11: 125659.179 ops/s
# Warmup Iteration  12: 120851.600 ops/s
# Warmup Iteration  13: 119762.219 ops/s
# Warmup Iteration  14: 121792.722 ops/s
# Warmup Iteration  15: 118114.705 ops/s
# Warmup Iteration  16: 116433.836 ops/s
# Warmup Iteration  17: 123890.203 ops/s
# Warmup Iteration  18: 129564.643 ops/s
# Warmup Iteration  19: 126834.546 ops/s
# Warmup Iteration  20: 119003.717 ops/s
# Warmup Iteration  21: 124101.768 ops/s
# Warmup Iteration  22: 129105.183 ops/s
# Warmup Iteration  23: 119323.154 ops/s
# Warmup Iteration  24: 125331.276 ops/s
# Warmup Iteration  25: 118302.727 ops/s
# Warmup Iteration  26: 124787.513 ops/s
# Warmup Iteration  27: 122669.957 ops/s
# Warmup Iteration  28: 121128.998 ops/s
# Warmup Iteration  29: 125522.069 ops/s
# Warmup Iteration  30: 121592.204 ops/s
Iteration   1: 125116.276 ops/s
Iteration   2: 122403.559 ops/s
Iteration   3: 118716.542 ops/s
Iteration   4: 123212.722 ops/s
Iteration   5: 124619.824 ops/s
Iteration   6: 114476.230 ops/s
Iteration   7: 126663.089 ops/s
Iteration   8: 121744.864 ops/s
Iteration   9: 122462.923 ops/s
Iteration  10: 117370.483 ops/s
Iteration  11: 121969.832 ops/s
Iteration  12: 122003.288 ops/s
Iteration  13: 123178.504 ops/s
Iteration  14: 123689.983 ops/s
Iteration  15: 125058.865 ops/s
Iteration  16: 122778.799 ops/s
Iteration  17: 97701.648 ops/s
Iteration  18: 124795.966 ops/s
Iteration  19: 123779.815 ops/s
Iteration  20: 123048.468 ops/s
Iteration  21: 126665.412 ops/s
Iteration  22: 120520.804 ops/s
Iteration  23: 124902.322 ops/s
Iteration  24: 123695.137 ops/s
Iteration  25: 122665.701 ops/s
Iteration  26: 125088.705 ops/s
Iteration  27: 122990.319 ops/s
Iteration  28: 123913.469 ops/s
Iteration  29: 118905.748 ops/s
Iteration  30: 123813.430 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_685._Benchmark.benchmark_Cluster_685":
  121931.757 ±(99.9%) 3527.379 ops/s [Average]
  (min, avg, max) = (97701.648, 121931.757, 126665.412), stdev = 5279.615
  CI (99.9%): [118404.379, 125459.136] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_685._Benchmark.benchmark_Cluster_685  thrpt   30  121931.757 ± 3527.379  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_686._Benchmark.benchmark_Cluster_686$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_686._Benchmark.benchmark_Cluster_686

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1673.314 ops/s
# Warmup Iteration   2: 15087.298 ops/s
# Warmup Iteration   3: 21109.572 ops/s
# Warmup Iteration   4: 29442.623 ops/s
# Warmup Iteration   5: 34868.423 ops/s
# Warmup Iteration   6: 42198.076 ops/s
# Warmup Iteration   7: 45699.106 ops/s
# Warmup Iteration   8: 50501.884 ops/s
# Warmup Iteration   9: 84593.539 ops/s
# Warmup Iteration  10: 83120.729 ops/s
# Warmup Iteration  11: 87409.215 ops/s
# Warmup Iteration  12: 89817.049 ops/s
# Warmup Iteration  13: 93940.861 ops/s
# Warmup Iteration  14: 90678.058 ops/s
# Warmup Iteration  15: 90268.663 ops/s
# Warmup Iteration  16: 92077.392 ops/s
# Warmup Iteration  17: 89144.617 ops/s
# Warmup Iteration  18: 93353.535 ops/s
# Warmup Iteration  19: 95185.324 ops/s
# Warmup Iteration  20: 88491.550 ops/s
# Warmup Iteration  21: 95618.284 ops/s
# Warmup Iteration  22: 90808.961 ops/s
# Warmup Iteration  23: 93902.682 ops/s
# Warmup Iteration  24: 92797.781 ops/s
# Warmup Iteration  25: 92565.993 ops/s
# Warmup Iteration  26: 93680.180 ops/s
# Warmup Iteration  27: 92169.464 ops/s
# Warmup Iteration  28: 93864.628 ops/s
# Warmup Iteration  29: 94609.978 ops/s
# Warmup Iteration  30: 91849.549 ops/s
Iteration   1: 92391.374 ops/s
Iteration   2: 92265.380 ops/s
Iteration   3: 94833.597 ops/s
Iteration   4: 93819.083 ops/s
Iteration   5: 91496.472 ops/s
Iteration   6: 95413.193 ops/s
Iteration   7: 85252.486 ops/s
Iteration   8: 93482.267 ops/s
Iteration   9: 97091.176 ops/s
Iteration  10: 91762.942 ops/s
Iteration  11: 93459.113 ops/s
Iteration  12: 96497.514 ops/s
Iteration  13: 91616.877 ops/s
Iteration  14: 92301.044 ops/s
Iteration  15: 94359.332 ops/s
Iteration  16: 89781.383 ops/s
Iteration  17: 96299.941 ops/s
Iteration  18: 93348.104 ops/s
Iteration  19: 91136.878 ops/s
Iteration  20: 95928.755 ops/s
Iteration  21: 92049.639 ops/s
Iteration  22: 90672.766 ops/s
Iteration  23: 93530.687 ops/s
Iteration  24: 93192.043 ops/s
Iteration  25: 93331.769 ops/s
Iteration  26: 92714.652 ops/s
Iteration  27: 95967.309 ops/s
Iteration  28: 92207.145 ops/s
Iteration  29: 96888.755 ops/s
Iteration  30: 93469.153 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_686._Benchmark.benchmark_Cluster_686":
  93218.694 ±(99.9%) 1626.318 ops/s [Average]
  (min, avg, max) = (85252.486, 93218.694, 97091.176), stdev = 2434.196
  CI (99.9%): [91592.376, 94845.012] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_686._Benchmark.benchmark_Cluster_686  thrpt   30  93218.694 ± 1626.318  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_687._Benchmark.benchmark_Cluster_687$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_687._Benchmark.benchmark_Cluster_687

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5015.785 ops/s
# Warmup Iteration   2: 29937.593 ops/s
# Warmup Iteration   3: 47153.766 ops/s
# Warmup Iteration   4: 66229.044 ops/s
# Warmup Iteration   5: 90006.939 ops/s
# Warmup Iteration   6: 91910.349 ops/s
# Warmup Iteration   7: 91791.554 ops/s
# Warmup Iteration   8: 98663.525 ops/s
# Warmup Iteration   9: 94579.070 ops/s
# Warmup Iteration  10: 96313.980 ops/s
# Warmup Iteration  11: 98523.709 ops/s
# Warmup Iteration  12: 93389.512 ops/s
# Warmup Iteration  13: 94468.237 ops/s
# Warmup Iteration  14: 88386.175 ops/s
# Warmup Iteration  15: 98808.988 ops/s
# Warmup Iteration  16: 93884.310 ops/s
# Warmup Iteration  17: 97507.503 ops/s
# Warmup Iteration  18: 102489.669 ops/s
# Warmup Iteration  19: 101244.389 ops/s
# Warmup Iteration  20: 99587.006 ops/s
# Warmup Iteration  21: 104225.805 ops/s
# Warmup Iteration  22: 96299.958 ops/s
# Warmup Iteration  23: 103170.873 ops/s
# Warmup Iteration  24: 97795.482 ops/s
# Warmup Iteration  25: 100160.406 ops/s
# Warmup Iteration  26: 99025.254 ops/s
# Warmup Iteration  27: 104924.244 ops/s
# Warmup Iteration  28: 105130.675 ops/s
# Warmup Iteration  29: 97949.158 ops/s
# Warmup Iteration  30: 101521.214 ops/s
Iteration   1: 102047.643 ops/s
Iteration   2: 102556.831 ops/s
Iteration   3: 101734.821 ops/s
Iteration   4: 100065.447 ops/s
Iteration   5: 103862.567 ops/s
Iteration   6: 97244.019 ops/s
Iteration   7: 99897.229 ops/s
Iteration   8: 98798.195 ops/s
Iteration   9: 97457.075 ops/s
Iteration  10: 102513.267 ops/s
Iteration  11: 81402.769 ops/s
Iteration  12: 96244.758 ops/s
Iteration  13: 100818.622 ops/s
Iteration  14: 99293.067 ops/s
Iteration  15: 99460.087 ops/s
Iteration  16: 100864.714 ops/s
Iteration  17: 100664.376 ops/s
Iteration  18: 103496.018 ops/s
Iteration  19: 99605.459 ops/s
Iteration  20: 101336.537 ops/s
Iteration  21: 105295.935 ops/s
Iteration  22: 98606.033 ops/s
Iteration  23: 102651.347 ops/s
Iteration  24: 96005.530 ops/s
Iteration  25: 100517.652 ops/s
Iteration  26: 99089.747 ops/s
Iteration  27: 100635.604 ops/s
Iteration  28: 102178.529 ops/s
Iteration  29: 97824.370 ops/s
Iteration  30: 107209.967 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_687._Benchmark.benchmark_Cluster_687":
  99979.274 ±(99.9%) 2891.541 ops/s [Average]
  (min, avg, max) = (81402.769, 99979.274, 107209.967), stdev = 4327.922
  CI (99.9%): [97087.733, 102870.815] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_687._Benchmark.benchmark_Cluster_687  thrpt   30  99979.274 ± 2891.541  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_688._Benchmark.benchmark_Cluster_688$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_688._Benchmark.benchmark_Cluster_688

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16364.509 ops/s
# Warmup Iteration   2: 62150.566 ops/s
# Warmup Iteration   3: 118641.210 ops/s
# Warmup Iteration   4: 132556.322 ops/s
# Warmup Iteration   5: 132585.182 ops/s
# Warmup Iteration   6: 150863.762 ops/s
# Warmup Iteration   7: 141288.647 ops/s
# Warmup Iteration   8: 156695.740 ops/s
# Warmup Iteration   9: 149253.024 ops/s
# Warmup Iteration  10: 144727.046 ops/s
# Warmup Iteration  11: 151956.774 ops/s
# Warmup Iteration  12: 145607.005 ops/s
# Warmup Iteration  13: 151092.089 ops/s
# Warmup Iteration  14: 152928.291 ops/s
# Warmup Iteration  15: 147535.682 ops/s
# Warmup Iteration  16: 152611.625 ops/s
# Warmup Iteration  17: 152145.826 ops/s
# Warmup Iteration  18: 150963.649 ops/s
# Warmup Iteration  19: 157987.808 ops/s
# Warmup Iteration  20: 147774.927 ops/s
# Warmup Iteration  21: 160490.770 ops/s
# Warmup Iteration  22: 151126.613 ops/s
# Warmup Iteration  23: 148274.290 ops/s
# Warmup Iteration  24: 155205.438 ops/s
# Warmup Iteration  25: 150916.701 ops/s
# Warmup Iteration  26: 151261.108 ops/s
# Warmup Iteration  27: 150306.629 ops/s
# Warmup Iteration  28: 157577.895 ops/s
# Warmup Iteration  29: 149810.230 ops/s
# Warmup Iteration  30: 154321.626 ops/s
Iteration   1: 153634.733 ops/s
Iteration   2: 150912.661 ops/s
Iteration   3: 154612.428 ops/s
Iteration   4: 148779.479 ops/s
Iteration   5: 151396.609 ops/s
Iteration   6: 161451.083 ops/s
Iteration   7: 147947.860 ops/s
Iteration   8: 159038.379 ops/s
Iteration   9: 153553.541 ops/s
Iteration  10: 152846.751 ops/s
Iteration  11: 152607.234 ops/s
Iteration  12: 154680.247 ops/s
Iteration  13: 151899.745 ops/s
Iteration  14: 157619.060 ops/s
Iteration  15: 150693.701 ops/s
Iteration  16: 149252.823 ops/s
Iteration  17: 157024.435 ops/s
Iteration  18: 152929.361 ops/s
Iteration  19: 157530.300 ops/s
Iteration  20: 157396.373 ops/s
Iteration  21: 150827.507 ops/s
Iteration  22: 155855.710 ops/s
Iteration  23: 150055.688 ops/s
Iteration  24: 154816.486 ops/s
Iteration  25: 149311.318 ops/s
Iteration  26: 156712.296 ops/s
Iteration  27: 154051.411 ops/s
Iteration  28: 150005.643 ops/s
Iteration  29: 160939.243 ops/s
Iteration  30: 154770.720 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_688._Benchmark.benchmark_Cluster_688":
  153771.761 ±(99.9%) 2396.161 ops/s [Average]
  (min, avg, max) = (147947.860, 153771.761, 161451.083), stdev = 3586.461
  CI (99.9%): [151375.600, 156167.922] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_688._Benchmark.benchmark_Cluster_688  thrpt   30  153771.761 ± 2396.161  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_689._Benchmark.benchmark_Cluster_689$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_689._Benchmark.benchmark_Cluster_689

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2731.231 ops/s
# Warmup Iteration   2: 30212.814 ops/s
# Warmup Iteration   3: 34036.601 ops/s
# Warmup Iteration   4: 48061.789 ops/s
# Warmup Iteration   5: 77530.419 ops/s
# Warmup Iteration   6: 100087.419 ops/s
# Warmup Iteration   7: 114293.620 ops/s
# Warmup Iteration   8: 118339.826 ops/s
# Warmup Iteration   9: 113837.990 ops/s
# Warmup Iteration  10: 114475.947 ops/s
# Warmup Iteration  11: 117746.700 ops/s
# Warmup Iteration  12: 112973.826 ops/s
# Warmup Iteration  13: 117106.387 ops/s
# Warmup Iteration  14: 114176.209 ops/s
# Warmup Iteration  15: 118519.895 ops/s
# Warmup Iteration  16: 116066.218 ops/s
# Warmup Iteration  17: 117206.291 ops/s
# Warmup Iteration  18: 119040.085 ops/s
# Warmup Iteration  19: 115101.480 ops/s
# Warmup Iteration  20: 122035.866 ops/s
# Warmup Iteration  21: 115166.934 ops/s
# Warmup Iteration  22: 119433.712 ops/s
# Warmup Iteration  23: 117364.908 ops/s
# Warmup Iteration  24: 118687.031 ops/s
# Warmup Iteration  25: 122428.510 ops/s
# Warmup Iteration  26: 116271.347 ops/s
# Warmup Iteration  27: 113996.269 ops/s
# Warmup Iteration  28: 118557.562 ops/s
# Warmup Iteration  29: 117756.473 ops/s
# Warmup Iteration  30: 118333.198 ops/s
Iteration   1: 116781.540 ops/s
Iteration   2: 115600.139 ops/s
Iteration   3: 123134.521 ops/s
Iteration   4: 114412.127 ops/s
Iteration   5: 99137.914 ops/s
Iteration   6: 116913.496 ops/s
Iteration   7: 116696.233 ops/s
Iteration   8: 120003.523 ops/s
Iteration   9: 115998.309 ops/s
Iteration  10: 117048.775 ops/s
Iteration  11: 117797.498 ops/s
Iteration  12: 118790.823 ops/s
Iteration  13: 113528.582 ops/s
Iteration  14: 119464.945 ops/s
Iteration  15: 120578.637 ops/s
Iteration  16: 122324.733 ops/s
Iteration  17: 116412.624 ops/s
Iteration  18: 122670.033 ops/s
Iteration  19: 121454.635 ops/s
Iteration  20: 114058.983 ops/s
Iteration  21: 120999.694 ops/s
Iteration  22: 114755.329 ops/s
Iteration  23: 122558.407 ops/s
Iteration  24: 112700.988 ops/s
Iteration  25: 123216.920 ops/s
Iteration  26: 114400.637 ops/s
Iteration  27: 119940.578 ops/s
Iteration  28: 120850.750 ops/s
Iteration  29: 115060.466 ops/s
Iteration  30: 119310.402 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_689._Benchmark.benchmark_Cluster_689":
  117553.408 ±(99.9%) 3135.794 ops/s [Average]
  (min, avg, max) = (99137.914, 117553.408, 123216.920), stdev = 4693.509
  CI (99.9%): [114417.614, 120689.202] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_689._Benchmark.benchmark_Cluster_689  thrpt   30  117553.408 ± 3135.794  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_69._Benchmark.benchmark_Cluster_69$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_69._Benchmark.benchmark_Cluster_69

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11433.606 ops/s
# Warmup Iteration   2: 31094.045 ops/s
# Warmup Iteration   3: 34763.447 ops/s
# Warmup Iteration   4: 33830.287 ops/s
# Warmup Iteration   5: 34860.553 ops/s
# Warmup Iteration   6: 34766.078 ops/s
# Warmup Iteration   7: 98314.824 ops/s
# Warmup Iteration   8: 101709.238 ops/s
# Warmup Iteration   9: 109989.702 ops/s
# Warmup Iteration  10: 110836.849 ops/s
# Warmup Iteration  11: 105791.197 ops/s
# Warmup Iteration  12: 109897.459 ops/s
# Warmup Iteration  13: 111744.293 ops/s
# Warmup Iteration  14: 108257.677 ops/s
# Warmup Iteration  15: 109079.332 ops/s
# Warmup Iteration  16: 113530.975 ops/s
# Warmup Iteration  17: 114540.795 ops/s
# Warmup Iteration  18: 111400.476 ops/s
# Warmup Iteration  19: 115475.498 ops/s
# Warmup Iteration  20: 112564.648 ops/s
# Warmup Iteration  21: 119202.066 ops/s
# Warmup Iteration  22: 109233.374 ops/s
# Warmup Iteration  23: 112499.887 ops/s
# Warmup Iteration  24: 112943.009 ops/s
# Warmup Iteration  25: 116328.888 ops/s
# Warmup Iteration  26: 108003.838 ops/s
# Warmup Iteration  27: 117393.988 ops/s
# Warmup Iteration  28: 112662.155 ops/s
# Warmup Iteration  29: 115797.035 ops/s
# Warmup Iteration  30: 118979.075 ops/s
Iteration   1: 112474.505 ops/s
Iteration   2: 114153.485 ops/s
Iteration   3: 115564.314 ops/s
Iteration   4: 113835.732 ops/s
Iteration   5: 116193.541 ops/s
Iteration   6: 116070.385 ops/s
Iteration   7: 110110.815 ops/s
Iteration   8: 111847.127 ops/s
Iteration   9: 114192.492 ops/s
Iteration  10: 116204.274 ops/s
Iteration  11: 114985.633 ops/s
Iteration  12: 115127.252 ops/s
Iteration  13: 117182.306 ops/s
Iteration  14: 114651.507 ops/s
Iteration  15: 112941.697 ops/s
Iteration  16: 114333.010 ops/s
Iteration  17: 116686.885 ops/s
Iteration  18: 115502.618 ops/s
Iteration  19: 113802.733 ops/s
Iteration  20: 118306.756 ops/s
Iteration  21: 112115.670 ops/s
Iteration  22: 118777.466 ops/s
Iteration  23: 117212.547 ops/s
Iteration  24: 113323.959 ops/s
Iteration  25: 116968.777 ops/s
Iteration  26: 112295.665 ops/s
Iteration  27: 115569.196 ops/s
Iteration  28: 115534.822 ops/s
Iteration  29: 114941.434 ops/s
Iteration  30: 115293.227 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_69._Benchmark.benchmark_Cluster_69":
  114873.328 ±(99.9%) 1324.858 ops/s [Average]
  (min, avg, max) = (110110.815, 114873.328, 118777.466), stdev = 1982.986
  CI (99.9%): [113548.469, 116198.186] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_69._Benchmark.benchmark_Cluster_69  thrpt   30  114873.328 ± 1324.858  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_690._Benchmark.benchmark_Cluster_690$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_690._Benchmark.benchmark_Cluster_690

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7412.483 ops/s
# Warmup Iteration   2: 41363.486 ops/s
# Warmup Iteration   3: 96858.164 ops/s
# Warmup Iteration   4: 97791.289 ops/s
# Warmup Iteration   5: 117706.263 ops/s
# Warmup Iteration   6: 113020.442 ops/s
# Warmup Iteration   7: 126095.980 ops/s
# Warmup Iteration   8: 132757.190 ops/s
# Warmup Iteration   9: 127722.300 ops/s
# Warmup Iteration  10: 133758.375 ops/s
# Warmup Iteration  11: 124395.197 ops/s
# Warmup Iteration  12: 127548.697 ops/s
# Warmup Iteration  13: 129321.593 ops/s
# Warmup Iteration  14: 125394.502 ops/s
# Warmup Iteration  15: 131330.904 ops/s
# Warmup Iteration  16: 125974.431 ops/s
# Warmup Iteration  17: 132745.761 ops/s
# Warmup Iteration  18: 134119.119 ops/s
# Warmup Iteration  19: 131065.296 ops/s
# Warmup Iteration  20: 135897.750 ops/s
# Warmup Iteration  21: 130083.372 ops/s
# Warmup Iteration  22: 134473.728 ops/s
# Warmup Iteration  23: 130370.915 ops/s
# Warmup Iteration  24: 130647.294 ops/s
# Warmup Iteration  25: 132088.108 ops/s
# Warmup Iteration  26: 130692.753 ops/s
# Warmup Iteration  27: 132396.829 ops/s
# Warmup Iteration  28: 131808.502 ops/s
# Warmup Iteration  29: 121548.723 ops/s
# Warmup Iteration  30: 104725.565 ops/s
Iteration   1: 136147.924 ops/s
Iteration   2: 130779.939 ops/s
Iteration   3: 128591.779 ops/s
Iteration   4: 135631.639 ops/s
Iteration   5: 133276.460 ops/s
Iteration   6: 128801.624 ops/s
Iteration   7: 136667.590 ops/s
Iteration   8: 127783.345 ops/s
Iteration   9: 136816.603 ops/s
Iteration  10: 129216.742 ops/s
Iteration  11: 135152.799 ops/s
Iteration  12: 131615.905 ops/s
Iteration  13: 127652.250 ops/s
Iteration  14: 135435.695 ops/s
Iteration  15: 131630.508 ops/s
Iteration  16: 132202.988 ops/s
Iteration  17: 135140.428 ops/s
Iteration  18: 129118.023 ops/s
Iteration  19: 131304.194 ops/s
Iteration  20: 134809.267 ops/s
Iteration  21: 131965.114 ops/s
Iteration  22: 135240.274 ops/s
Iteration  23: 127584.188 ops/s
Iteration  24: 135109.087 ops/s
Iteration  25: 128093.735 ops/s
Iteration  26: 130852.785 ops/s
Iteration  27: 135206.139 ops/s
Iteration  28: 132654.583 ops/s
Iteration  29: 133163.657 ops/s
Iteration  30: 127737.933 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_690._Benchmark.benchmark_Cluster_690":
  132179.440 ±(99.9%) 2071.891 ops/s [Average]
  (min, avg, max) = (127584.188, 132179.440, 136816.603), stdev = 3101.109
  CI (99.9%): [130107.549, 134251.331] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_690._Benchmark.benchmark_Cluster_690  thrpt   30  132179.440 ± 2071.891  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_691._Benchmark.benchmark_Cluster_691$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_691._Benchmark.benchmark_Cluster_691

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15163.535 ops/s
# Warmup Iteration   2: 88444.330 ops/s
# Warmup Iteration   3: 117230.764 ops/s
# Warmup Iteration   4: 121788.832 ops/s
# Warmup Iteration   5: 133046.930 ops/s
# Warmup Iteration   6: 124191.749 ops/s
# Warmup Iteration   7: 130470.582 ops/s
# Warmup Iteration   8: 130389.980 ops/s
# Warmup Iteration   9: 133927.394 ops/s
# Warmup Iteration  10: 133294.984 ops/s
# Warmup Iteration  11: 128784.443 ops/s
# Warmup Iteration  12: 135457.950 ops/s
# Warmup Iteration  13: 128982.616 ops/s
# Warmup Iteration  14: 136844.487 ops/s
# Warmup Iteration  15: 132414.489 ops/s
# Warmup Iteration  16: 133374.048 ops/s
# Warmup Iteration  17: 133950.092 ops/s
# Warmup Iteration  18: 135883.713 ops/s
# Warmup Iteration  19: 136722.675 ops/s
# Warmup Iteration  20: 134576.965 ops/s
# Warmup Iteration  21: 138327.412 ops/s
# Warmup Iteration  22: 132884.208 ops/s
# Warmup Iteration  23: 135587.977 ops/s
# Warmup Iteration  24: 137815.128 ops/s
# Warmup Iteration  25: 132234.453 ops/s
# Warmup Iteration  26: 136377.422 ops/s
# Warmup Iteration  27: 135560.650 ops/s
# Warmup Iteration  28: 138963.687 ops/s
# Warmup Iteration  29: 129826.550 ops/s
# Warmup Iteration  30: 134925.067 ops/s
Iteration   1: 136610.304 ops/s
Iteration   2: 138083.388 ops/s
Iteration   3: 136664.592 ops/s
Iteration   4: 140807.537 ops/s
Iteration   5: 137874.668 ops/s
Iteration   6: 136280.040 ops/s
Iteration   7: 139876.682 ops/s
Iteration   8: 135144.896 ops/s
Iteration   9: 142577.871 ops/s
Iteration  10: 132959.426 ops/s
Iteration  11: 138146.972 ops/s
Iteration  12: 137024.735 ops/s
Iteration  13: 136443.692 ops/s
Iteration  14: 141524.498 ops/s
Iteration  15: 137541.556 ops/s
Iteration  16: 140334.613 ops/s
Iteration  17: 131388.187 ops/s
Iteration  18: 141052.227 ops/s
Iteration  19: 136197.123 ops/s
Iteration  20: 136185.760 ops/s
Iteration  21: 136740.284 ops/s
Iteration  22: 134025.453 ops/s
Iteration  23: 139965.827 ops/s
Iteration  24: 136910.525 ops/s
Iteration  25: 135046.628 ops/s
Iteration  26: 141911.726 ops/s
Iteration  27: 132961.468 ops/s
Iteration  28: 143391.999 ops/s
Iteration  29: 134491.081 ops/s
Iteration  30: 135686.313 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_691._Benchmark.benchmark_Cluster_691":
  137461.669 ±(99.9%) 2014.139 ops/s [Average]
  (min, avg, max) = (131388.187, 137461.669, 143391.999), stdev = 3014.669
  CI (99.9%): [135447.530, 139475.808] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_691._Benchmark.benchmark_Cluster_691  thrpt   30  137461.669 ± 2014.139  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_692._Benchmark.benchmark_Cluster_692$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_692._Benchmark.benchmark_Cluster_692

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6630.342 ops/s
# Warmup Iteration   2: 34322.505 ops/s
# Warmup Iteration   3: 77843.534 ops/s
# Warmup Iteration   4: 89107.421 ops/s
# Warmup Iteration   5: 108818.066 ops/s
# Warmup Iteration   6: 115169.896 ops/s
# Warmup Iteration   7: 115237.323 ops/s
# Warmup Iteration   8: 119977.273 ops/s
# Warmup Iteration   9: 109927.602 ops/s
# Warmup Iteration  10: 113414.728 ops/s
# Warmup Iteration  11: 114870.166 ops/s
# Warmup Iteration  12: 111585.994 ops/s
# Warmup Iteration  13: 115152.482 ops/s
# Warmup Iteration  14: 113300.635 ops/s
# Warmup Iteration  15: 113245.618 ops/s
# Warmup Iteration  16: 114662.428 ops/s
# Warmup Iteration  17: 116365.939 ops/s
# Warmup Iteration  18: 117102.447 ops/s
# Warmup Iteration  19: 120815.867 ops/s
# Warmup Iteration  20: 119513.140 ops/s
# Warmup Iteration  21: 124810.059 ops/s
# Warmup Iteration  22: 120371.774 ops/s
# Warmup Iteration  23: 115982.717 ops/s
# Warmup Iteration  24: 105433.140 ops/s
# Warmup Iteration  25: 116912.480 ops/s
# Warmup Iteration  26: 118876.687 ops/s
# Warmup Iteration  27: 117097.924 ops/s
# Warmup Iteration  28: 115620.507 ops/s
# Warmup Iteration  29: 119146.530 ops/s
# Warmup Iteration  30: 120240.452 ops/s
Iteration   1: 115505.972 ops/s
Iteration   2: 117675.049 ops/s
Iteration   3: 122051.561 ops/s
Iteration   4: 116842.681 ops/s
Iteration   5: 120726.320 ops/s
Iteration   6: 124785.505 ops/s
Iteration   7: 117299.630 ops/s
Iteration   8: 123734.224 ops/s
Iteration   9: 115014.883 ops/s
Iteration  10: 120152.309 ops/s
Iteration  11: 115956.918 ops/s
Iteration  12: 120454.733 ops/s
Iteration  13: 121002.985 ops/s
Iteration  14: 115584.212 ops/s
Iteration  15: 119624.246 ops/s
Iteration  16: 121487.017 ops/s
Iteration  17: 118313.775 ops/s
Iteration  18: 119231.120 ops/s
Iteration  19: 117043.704 ops/s
Iteration  20: 122474.482 ops/s
Iteration  21: 115854.656 ops/s
Iteration  22: 122483.777 ops/s
Iteration  23: 115158.893 ops/s
Iteration  24: 117670.678 ops/s
Iteration  25: 122538.236 ops/s
Iteration  26: 116172.274 ops/s
Iteration  27: 118519.720 ops/s
Iteration  28: 119323.464 ops/s
Iteration  29: 119318.032 ops/s
Iteration  30: 122959.182 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_692._Benchmark.benchmark_Cluster_692":
  119165.341 ±(99.9%) 1886.886 ops/s [Average]
  (min, avg, max) = (115014.883, 119165.341, 124785.505), stdev = 2824.202
  CI (99.9%): [117278.456, 121052.227] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_692._Benchmark.benchmark_Cluster_692  thrpt   30  119165.341 ± 1886.886  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_693._Benchmark.benchmark_Cluster_693$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_693._Benchmark.benchmark_Cluster_693

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11043.141 ops/s
# Warmup Iteration   2: 26268.663 ops/s
# Warmup Iteration   3: 23425.195 ops/s
# Warmup Iteration   4: 26468.400 ops/s
# Warmup Iteration   5: 31024.337 ops/s
# Warmup Iteration   6: 39799.885 ops/s
# Warmup Iteration   7: 75951.334 ops/s
# Warmup Iteration   8: 98336.612 ops/s
# Warmup Iteration   9: 91881.949 ops/s
# Warmup Iteration  10: 97466.733 ops/s
# Warmup Iteration  11: 99990.700 ops/s
# Warmup Iteration  12: 101471.546 ops/s
# Warmup Iteration  13: 98438.775 ops/s
# Warmup Iteration  14: 101908.897 ops/s
# Warmup Iteration  15: 98456.097 ops/s
# Warmup Iteration  16: 102342.765 ops/s
# Warmup Iteration  17: 103033.690 ops/s
# Warmup Iteration  18: 101770.553 ops/s
# Warmup Iteration  19: 103116.050 ops/s
# Warmup Iteration  20: 102682.742 ops/s
# Warmup Iteration  21: 107162.021 ops/s
# Warmup Iteration  22: 101564.257 ops/s
# Warmup Iteration  23: 107247.972 ops/s
# Warmup Iteration  24: 102735.968 ops/s
# Warmup Iteration  25: 103238.010 ops/s
# Warmup Iteration  26: 105825.191 ops/s
# Warmup Iteration  27: 101621.195 ops/s
# Warmup Iteration  28: 102232.666 ops/s
# Warmup Iteration  29: 106415.424 ops/s
# Warmup Iteration  30: 104029.880 ops/s
Iteration   1: 104397.165 ops/s
Iteration   2: 101529.870 ops/s
Iteration   3: 103840.891 ops/s
Iteration   4: 106406.703 ops/s
Iteration   5: 99827.610 ops/s
Iteration   6: 102021.412 ops/s
Iteration   7: 104937.921 ops/s
Iteration   8: 102331.620 ops/s
Iteration   9: 105770.900 ops/s
Iteration  10: 99816.647 ops/s
Iteration  11: 104739.068 ops/s
Iteration  12: 104894.098 ops/s
Iteration  13: 99613.757 ops/s
Iteration  14: 107024.070 ops/s
Iteration  15: 100429.766 ops/s
Iteration  16: 103428.366 ops/s
Iteration  17: 104218.237 ops/s
Iteration  18: 102291.651 ops/s
Iteration  19: 104076.827 ops/s
Iteration  20: 102380.751 ops/s
Iteration  21: 106651.394 ops/s
Iteration  22: 99138.402 ops/s
Iteration  23: 102160.802 ops/s
Iteration  24: 104353.846 ops/s
Iteration  25: 98908.157 ops/s
Iteration  26: 106667.645 ops/s
Iteration  27: 103058.469 ops/s
Iteration  28: 104426.381 ops/s
Iteration  29: 102447.178 ops/s
Iteration  30: 104177.038 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_693._Benchmark.benchmark_Cluster_693":
  103198.888 ±(99.9%) 1557.359 ops/s [Average]
  (min, avg, max) = (98908.157, 103198.888, 107024.070), stdev = 2330.982
  CI (99.9%): [101641.529, 104756.247] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_693._Benchmark.benchmark_Cluster_693  thrpt   30  103198.888 ± 1557.359  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_694._Benchmark.benchmark_Cluster_694$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_694._Benchmark.benchmark_Cluster_694

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.735 ops/s
# Warmup Iteration   2: 5377.616 ops/s
# Warmup Iteration   3: 32368.475 ops/s
# Warmup Iteration   4: 41713.832 ops/s
# Warmup Iteration   5: 48232.723 ops/s
# Warmup Iteration   6: 40692.616 ops/s
# Warmup Iteration   7: 62449.388 ops/s
# Warmup Iteration   8: 94492.313 ops/s
# Warmup Iteration   9: 132204.156 ops/s
# Warmup Iteration  10: 123600.792 ops/s
# Warmup Iteration  11: 125628.402 ops/s
# Warmup Iteration  12: 133491.997 ops/s
# Warmup Iteration  13: 126831.840 ops/s
# Warmup Iteration  14: 132992.550 ops/s
# Warmup Iteration  15: 125394.141 ops/s
# Warmup Iteration  16: 133978.264 ops/s
# Warmup Iteration  17: 128405.178 ops/s
# Warmup Iteration  18: 106411.709 ops/s
# Warmup Iteration  19: 134290.971 ops/s
# Warmup Iteration  20: 127300.962 ops/s
# Warmup Iteration  21: 130000.764 ops/s
# Warmup Iteration  22: 129718.758 ops/s
# Warmup Iteration  23: 130797.643 ops/s
# Warmup Iteration  24: 126084.978 ops/s
# Warmup Iteration  25: 131236.655 ops/s
# Warmup Iteration  26: 128424.082 ops/s
# Warmup Iteration  27: 134462.077 ops/s
# Warmup Iteration  28: 135636.821 ops/s
# Warmup Iteration  29: 136613.659 ops/s
# Warmup Iteration  30: 127509.382 ops/s
Iteration   1: 135289.036 ops/s
Iteration   2: 125001.439 ops/s
Iteration   3: 129773.022 ops/s
Iteration   4: 133404.371 ops/s
Iteration   5: 125971.372 ops/s
Iteration   6: 131742.694 ops/s
Iteration   7: 134494.491 ops/s
Iteration   8: 125907.254 ops/s
Iteration   9: 138676.550 ops/s
Iteration  10: 134008.821 ops/s
Iteration  11: 127261.766 ops/s
Iteration  12: 134043.733 ops/s
Iteration  13: 130479.099 ops/s
Iteration  14: 134874.174 ops/s
Iteration  15: 129576.350 ops/s
Iteration  16: 132803.088 ops/s
Iteration  17: 128647.217 ops/s
Iteration  18: 137624.562 ops/s
Iteration  19: 125573.540 ops/s
Iteration  20: 134724.901 ops/s
Iteration  21: 122816.996 ops/s
Iteration  22: 134663.982 ops/s
Iteration  23: 128415.635 ops/s
Iteration  24: 128781.882 ops/s
Iteration  25: 134281.801 ops/s
Iteration  26: 126880.584 ops/s
Iteration  27: 134233.239 ops/s
Iteration  28: 127996.821 ops/s
Iteration  29: 130044.469 ops/s
Iteration  30: 133345.284 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_694._Benchmark.benchmark_Cluster_694":
  131044.606 ±(99.9%) 2706.005 ops/s [Average]
  (min, avg, max) = (122816.996, 131044.606, 138676.550), stdev = 4050.221
  CI (99.9%): [128338.601, 133750.611] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_694._Benchmark.benchmark_Cluster_694  thrpt   30  131044.606 ± 2706.005  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_695._Benchmark.benchmark_Cluster_695$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_695._Benchmark.benchmark_Cluster_695

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 976.241 ops/s
# Warmup Iteration   2: 4490.911 ops/s
# Warmup Iteration   3: 20176.266 ops/s
# Warmup Iteration   4: 22592.960 ops/s
# Warmup Iteration   5: 23663.749 ops/s
# Warmup Iteration   6: 23424.747 ops/s
# Warmup Iteration   7: 22869.310 ops/s
# Warmup Iteration   8: 24742.868 ops/s
# Warmup Iteration   9: 26826.869 ops/s
# Warmup Iteration  10: 29616.091 ops/s
# Warmup Iteration  11: 32161.597 ops/s
# Warmup Iteration  12: 61827.979 ops/s
# Warmup Iteration  13: 74197.631 ops/s
# Warmup Iteration  14: 78116.222 ops/s
# Warmup Iteration  15: 75357.609 ops/s
# Warmup Iteration  16: 77620.131 ops/s
# Warmup Iteration  17: 77037.156 ops/s
# Warmup Iteration  18: 77363.604 ops/s
# Warmup Iteration  19: 77465.995 ops/s
# Warmup Iteration  20: 79453.533 ops/s
# Warmup Iteration  21: 75991.492 ops/s
# Warmup Iteration  22: 80255.815 ops/s
# Warmup Iteration  23: 81372.942 ops/s
# Warmup Iteration  24: 76845.490 ops/s
# Warmup Iteration  25: 75504.686 ops/s
# Warmup Iteration  26: 79373.850 ops/s
# Warmup Iteration  27: 75343.982 ops/s
# Warmup Iteration  28: 78262.013 ops/s
# Warmup Iteration  29: 78616.204 ops/s
# Warmup Iteration  30: 75542.632 ops/s
Iteration   1: 74675.563 ops/s
Iteration   2: 80436.002 ops/s
Iteration   3: 76314.507 ops/s
Iteration   4: 76392.215 ops/s
Iteration   5: 79650.911 ops/s
Iteration   6: 76010.736 ops/s
Iteration   7: 78669.104 ops/s
Iteration   8: 77890.356 ops/s
Iteration   9: 79006.649 ops/s
Iteration  10: 76764.626 ops/s
Iteration  11: 78502.297 ops/s
Iteration  12: 78997.968 ops/s
Iteration  13: 77165.613 ops/s
Iteration  14: 79009.150 ops/s
Iteration  15: 78560.934 ops/s
Iteration  16: 74718.983 ops/s
Iteration  17: 79790.439 ops/s
Iteration  18: 80478.701 ops/s
Iteration  19: 76873.515 ops/s
Iteration  20: 79412.415 ops/s
Iteration  21: 75849.330 ops/s
Iteration  22: 80367.423 ops/s
Iteration  23: 78629.416 ops/s
Iteration  24: 78572.944 ops/s
Iteration  25: 76535.001 ops/s
Iteration  26: 77235.765 ops/s
Iteration  27: 81282.251 ops/s
Iteration  28: 76271.799 ops/s
Iteration  29: 75864.454 ops/s
Iteration  30: 77737.718 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_695._Benchmark.benchmark_Cluster_695":
  77922.226 ±(99.9%) 1181.181 ops/s [Average]
  (min, avg, max) = (74675.563, 77922.226, 81282.251), stdev = 1767.936
  CI (99.9%): [76741.045, 79103.407] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_695._Benchmark.benchmark_Cluster_695  thrpt   30  77922.226 ± 1181.181  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_696._Benchmark.benchmark_Cluster_696$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_696._Benchmark.benchmark_Cluster_696

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7206.865 ops/s
# Warmup Iteration   2: 32984.586 ops/s
# Warmup Iteration   3: 70711.540 ops/s
# Warmup Iteration   4: 106189.382 ops/s
# Warmup Iteration   5: 112855.681 ops/s
# Warmup Iteration   6: 109565.997 ops/s
# Warmup Iteration   7: 105006.301 ops/s
# Warmup Iteration   8: 121482.357 ops/s
# Warmup Iteration   9: 121995.695 ops/s
# Warmup Iteration  10: 120310.276 ops/s
# Warmup Iteration  11: 119418.789 ops/s
# Warmup Iteration  12: 103609.390 ops/s
# Warmup Iteration  13: 117563.721 ops/s
# Warmup Iteration  14: 122780.164 ops/s
# Warmup Iteration  15: 122224.500 ops/s
# Warmup Iteration  16: 118407.176 ops/s
# Warmup Iteration  17: 121562.584 ops/s
# Warmup Iteration  18: 125801.911 ops/s
# Warmup Iteration  19: 124184.873 ops/s
# Warmup Iteration  20: 125439.594 ops/s
# Warmup Iteration  21: 122781.452 ops/s
# Warmup Iteration  22: 122476.291 ops/s
# Warmup Iteration  23: 126725.040 ops/s
# Warmup Iteration  24: 122877.196 ops/s
# Warmup Iteration  25: 120238.361 ops/s
# Warmup Iteration  26: 127809.485 ops/s
# Warmup Iteration  27: 124282.267 ops/s
# Warmup Iteration  28: 125535.307 ops/s
# Warmup Iteration  29: 119917.508 ops/s
# Warmup Iteration  30: 123387.125 ops/s
Iteration   1: 127334.976 ops/s
Iteration   2: 119099.609 ops/s
Iteration   3: 124265.493 ops/s
Iteration   4: 124389.029 ops/s
Iteration   5: 127916.386 ops/s
Iteration   6: 127630.977 ops/s
Iteration   7: 121499.745 ops/s
Iteration   8: 126894.623 ops/s
Iteration   9: 121395.887 ops/s
Iteration  10: 127262.592 ops/s
Iteration  11: 122345.372 ops/s
Iteration  12: 124549.988 ops/s
Iteration  13: 121250.631 ops/s
Iteration  14: 122665.459 ops/s
Iteration  15: 122564.209 ops/s
Iteration  16: 121488.758 ops/s
Iteration  17: 123986.114 ops/s
Iteration  18: 125016.749 ops/s
Iteration  19: 126753.058 ops/s
Iteration  20: 121806.525 ops/s
Iteration  21: 124111.881 ops/s
Iteration  22: 129552.725 ops/s
Iteration  23: 122992.963 ops/s
Iteration  24: 125511.938 ops/s
Iteration  25: 122028.563 ops/s
Iteration  26: 124961.782 ops/s
Iteration  27: 121057.024 ops/s
Iteration  28: 128754.640 ops/s
Iteration  29: 122037.995 ops/s
Iteration  30: 125237.457 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_696._Benchmark.benchmark_Cluster_696":
  124212.105 ±(99.9%) 1773.591 ops/s [Average]
  (min, avg, max) = (119099.609, 124212.105, 129552.725), stdev = 2654.627
  CI (99.9%): [122438.514, 125985.696] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_696._Benchmark.benchmark_Cluster_696  thrpt   30  124212.105 ± 1773.591  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_697._Benchmark.benchmark_Cluster_697$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_697._Benchmark.benchmark_Cluster_697

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1019.332 ops/s
# Warmup Iteration   2: 9091.426 ops/s
# Warmup Iteration   3: 18269.387 ops/s
# Warmup Iteration   4: 17026.871 ops/s
# Warmup Iteration   5: 29273.054 ops/s
# Warmup Iteration   6: 30345.751 ops/s
# Warmup Iteration   7: 33767.457 ops/s
# Warmup Iteration   8: 35762.845 ops/s
# Warmup Iteration   9: 30872.048 ops/s
# Warmup Iteration  10: 27379.908 ops/s
# Warmup Iteration  11: 65059.442 ops/s
# Warmup Iteration  12: 89282.748 ops/s
# Warmup Iteration  13: 84748.136 ops/s
# Warmup Iteration  14: 95807.012 ops/s
# Warmup Iteration  15: 89974.255 ops/s
# Warmup Iteration  16: 90627.649 ops/s
# Warmup Iteration  17: 95062.695 ops/s
# Warmup Iteration  18: 90488.618 ops/s
# Warmup Iteration  19: 92422.774 ops/s
# Warmup Iteration  20: 92320.551 ops/s
# Warmup Iteration  21: 91035.772 ops/s
# Warmup Iteration  22: 95879.429 ops/s
# Warmup Iteration  23: 89436.147 ops/s
# Warmup Iteration  24: 89210.080 ops/s
# Warmup Iteration  25: 94071.282 ops/s
# Warmup Iteration  26: 91187.983 ops/s
# Warmup Iteration  27: 95388.320 ops/s
# Warmup Iteration  28: 87464.629 ops/s
# Warmup Iteration  29: 93795.459 ops/s
# Warmup Iteration  30: 96499.134 ops/s
Iteration   1: 91069.541 ops/s
Iteration   2: 90791.775 ops/s
Iteration   3: 95824.251 ops/s
Iteration   4: 89005.334 ops/s
Iteration   5: 95676.768 ops/s
Iteration   6: 94331.272 ops/s
Iteration   7: 87926.148 ops/s
Iteration   8: 97078.947 ops/s
Iteration   9: 90547.037 ops/s
Iteration  10: 93791.649 ops/s
Iteration  11: 98422.655 ops/s
Iteration  12: 89414.237 ops/s
Iteration  13: 96551.203 ops/s
Iteration  14: 91146.407 ops/s
Iteration  15: 91505.381 ops/s
Iteration  16: 87424.507 ops/s
Iteration  17: 94975.408 ops/s
Iteration  18: 90987.478 ops/s
Iteration  19: 95012.359 ops/s
Iteration  20: 92866.350 ops/s
Iteration  21: 93223.862 ops/s
Iteration  22: 92963.533 ops/s
Iteration  23: 92212.591 ops/s
Iteration  24: 95544.437 ops/s
Iteration  25: 92599.442 ops/s
Iteration  26: 93861.553 ops/s
Iteration  27: 89284.946 ops/s
Iteration  28: 94113.333 ops/s
Iteration  29: 94362.676 ops/s
Iteration  30: 89785.083 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_697._Benchmark.benchmark_Cluster_697":
  92743.339 ±(99.9%) 1871.107 ops/s [Average]
  (min, avg, max) = (87424.507, 92743.339, 98422.655), stdev = 2800.585
  CI (99.9%): [90872.232, 94614.446] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_697._Benchmark.benchmark_Cluster_697  thrpt   30  92743.339 ± 1871.107  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_698._Benchmark.benchmark_Cluster_698$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_698._Benchmark.benchmark_Cluster_698

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 813.916 ops/s
# Warmup Iteration   2: 8174.541 ops/s
# Warmup Iteration   3: 21820.952 ops/s
# Warmup Iteration   4: 21746.839 ops/s
# Warmup Iteration   5: 24864.408 ops/s
# Warmup Iteration   6: 17166.078 ops/s
# Warmup Iteration   7: 25473.334 ops/s
# Warmup Iteration   8: 20606.684 ops/s
# Warmup Iteration   9: 22516.285 ops/s
# Warmup Iteration  10: 22120.405 ops/s
# Warmup Iteration  11: 24216.074 ops/s
# Warmup Iteration  12: 34815.733 ops/s
# Warmup Iteration  13: 61416.357 ops/s
# Warmup Iteration  14: 82973.476 ops/s
# Warmup Iteration  15: 85646.201 ops/s
# Warmup Iteration  16: 82202.570 ops/s
# Warmup Iteration  17: 85775.123 ops/s
# Warmup Iteration  18: 86613.955 ops/s
# Warmup Iteration  19: 85168.361 ops/s
# Warmup Iteration  20: 88898.534 ops/s
# Warmup Iteration  21: 82507.255 ops/s
# Warmup Iteration  22: 87717.112 ops/s
# Warmup Iteration  23: 82685.964 ops/s
# Warmup Iteration  24: 84706.048 ops/s
# Warmup Iteration  25: 84141.708 ops/s
# Warmup Iteration  26: 84483.206 ops/s
# Warmup Iteration  27: 86756.742 ops/s
# Warmup Iteration  28: 82690.378 ops/s
# Warmup Iteration  29: 85914.228 ops/s
# Warmup Iteration  30: 83826.604 ops/s
Iteration   1: 87238.222 ops/s
Iteration   2: 85215.387 ops/s
Iteration   3: 84706.443 ops/s
Iteration   4: 87997.530 ops/s
Iteration   5: 87641.924 ops/s
Iteration   6: 79460.939 ops/s
Iteration   7: 88505.031 ops/s
Iteration   8: 83710.400 ops/s
Iteration   9: 87599.404 ops/s
Iteration  10: 84643.598 ops/s
Iteration  11: 88431.247 ops/s
Iteration  12: 82297.045 ops/s
Iteration  13: 85567.059 ops/s
Iteration  14: 85601.886 ops/s
Iteration  15: 85652.679 ops/s
Iteration  16: 84255.224 ops/s
Iteration  17: 87488.121 ops/s
Iteration  18: 84523.472 ops/s
Iteration  19: 88994.105 ops/s
Iteration  20: 83225.128 ops/s
Iteration  21: 84797.902 ops/s
Iteration  22: 86503.501 ops/s
Iteration  23: 84774.837 ops/s
Iteration  24: 85715.214 ops/s
Iteration  25: 88148.756 ops/s
Iteration  26: 84509.709 ops/s
Iteration  27: 87574.050 ops/s
Iteration  28: 82569.689 ops/s
Iteration  29: 88117.850 ops/s
Iteration  30: 86321.626 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_698._Benchmark.benchmark_Cluster_698":
  85726.266 ±(99.9%) 1468.381 ops/s [Average]
  (min, avg, max) = (79460.939, 85726.266, 88994.105), stdev = 2197.804
  CI (99.9%): [84257.884, 87194.647] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_698._Benchmark.benchmark_Cluster_698  thrpt   30  85726.266 ± 1468.381  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_699._Benchmark.benchmark_Cluster_699$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_699._Benchmark.benchmark_Cluster_699

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1929.999 ops/s
# Warmup Iteration   2: 32522.034 ops/s
# Warmup Iteration   3: 42322.783 ops/s
# Warmup Iteration   4: 37649.880 ops/s
# Warmup Iteration   5: 47620.825 ops/s
# Warmup Iteration   6: 58741.941 ops/s
# Warmup Iteration   7: 42162.051 ops/s
# Warmup Iteration   8: 45699.681 ops/s
# Warmup Iteration   9: 57482.178 ops/s
# Warmup Iteration  10: 126564.632 ops/s
# Warmup Iteration  11: 118630.581 ops/s
# Warmup Iteration  12: 121285.066 ops/s
# Warmup Iteration  13: 123318.298 ops/s
# Warmup Iteration  14: 119183.365 ops/s
# Warmup Iteration  15: 125317.507 ops/s
# Warmup Iteration  16: 115746.457 ops/s
# Warmup Iteration  17: 121576.238 ops/s
# Warmup Iteration  18: 127334.241 ops/s
# Warmup Iteration  19: 126479.428 ops/s
# Warmup Iteration  20: 130562.590 ops/s
# Warmup Iteration  21: 125917.707 ops/s
# Warmup Iteration  22: 122192.521 ops/s
# Warmup Iteration  23: 131063.170 ops/s
# Warmup Iteration  24: 129931.819 ops/s
# Warmup Iteration  25: 120891.256 ops/s
# Warmup Iteration  26: 128803.616 ops/s
# Warmup Iteration  27: 120641.759 ops/s
# Warmup Iteration  28: 126857.248 ops/s
# Warmup Iteration  29: 122584.737 ops/s
# Warmup Iteration  30: 124460.005 ops/s
Iteration   1: 126610.621 ops/s
Iteration   2: 125754.047 ops/s
Iteration   3: 130202.410 ops/s
Iteration   4: 122778.772 ops/s
Iteration   5: 128116.094 ops/s
Iteration   6: 129119.496 ops/s
Iteration   7: 125526.912 ops/s
Iteration   8: 132422.597 ops/s
Iteration   9: 122190.897 ops/s
Iteration  10: 128299.660 ops/s
Iteration  11: 127229.504 ops/s
Iteration  12: 127553.921 ops/s
Iteration  13: 125612.895 ops/s
Iteration  14: 128594.668 ops/s
Iteration  15: 128734.157 ops/s
Iteration  16: 125013.790 ops/s
Iteration  17: 125556.194 ops/s
Iteration  18: 129505.919 ops/s
Iteration  19: 125077.340 ops/s
Iteration  20: 132947.737 ops/s
Iteration  21: 124253.813 ops/s
Iteration  22: 126979.476 ops/s
Iteration  23: 126253.782 ops/s
Iteration  24: 128320.314 ops/s
Iteration  25: 124064.295 ops/s
Iteration  26: 124724.759 ops/s
Iteration  27: 130889.115 ops/s
Iteration  28: 125099.853 ops/s
Iteration  29: 130126.768 ops/s
Iteration  30: 127625.484 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_699._Benchmark.benchmark_Cluster_699":
  127172.843 ±(99.9%) 1766.646 ops/s [Average]
  (min, avg, max) = (122190.897, 127172.843, 132947.737), stdev = 2644.233
  CI (99.9%): [125406.197, 128939.489] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_699._Benchmark.benchmark_Cluster_699  thrpt   30  127172.843 ± 1766.646  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_7._Benchmark.benchmark_Cluster_7$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_7._Benchmark.benchmark_Cluster_7

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3610.120 ops/s
# Warmup Iteration   2: 45910.995 ops/s
# Warmup Iteration   3: 102700.345 ops/s
# Warmup Iteration   4: 112667.854 ops/s
# Warmup Iteration   5: 148975.348 ops/s
# Warmup Iteration   6: 141667.530 ops/s
# Warmup Iteration   7: 150248.353 ops/s
# Warmup Iteration   8: 137385.380 ops/s
# Warmup Iteration   9: 145830.463 ops/s
# Warmup Iteration  10: 140558.271 ops/s
# Warmup Iteration  11: 138014.670 ops/s
# Warmup Iteration  12: 152857.621 ops/s
# Warmup Iteration  13: 147056.954 ops/s
# Warmup Iteration  14: 151454.767 ops/s
# Warmup Iteration  15: 145502.486 ops/s
# Warmup Iteration  16: 154687.831 ops/s
# Warmup Iteration  17: 154208.631 ops/s
# Warmup Iteration  18: 151446.214 ops/s
# Warmup Iteration  19: 153283.076 ops/s
# Warmup Iteration  20: 145273.645 ops/s
# Warmup Iteration  21: 157611.964 ops/s
# Warmup Iteration  22: 146807.702 ops/s
# Warmup Iteration  23: 151629.858 ops/s
# Warmup Iteration  24: 153453.100 ops/s
# Warmup Iteration  25: 150534.428 ops/s
# Warmup Iteration  26: 148283.696 ops/s
# Warmup Iteration  27: 152293.370 ops/s
# Warmup Iteration  28: 149957.336 ops/s
# Warmup Iteration  29: 149763.014 ops/s
# Warmup Iteration  30: 146849.572 ops/s
Iteration   1: 148633.818 ops/s
Iteration   2: 152769.166 ops/s
Iteration   3: 149194.083 ops/s
Iteration   4: 151077.312 ops/s
Iteration   5: 156436.004 ops/s
Iteration   6: 149151.773 ops/s
Iteration   7: 155884.896 ops/s
Iteration   8: 148925.066 ops/s
Iteration   9: 154749.842 ops/s
Iteration  10: 146251.072 ops/s
Iteration  11: 154614.362 ops/s
Iteration  12: 156434.445 ops/s
Iteration  13: 148190.335 ops/s
Iteration  14: 154947.103 ops/s
Iteration  15: 150518.366 ops/s
Iteration  16: 142950.786 ops/s
Iteration  17: 152620.725 ops/s
Iteration  18: 152388.170 ops/s
Iteration  19: 151573.004 ops/s
Iteration  20: 153243.488 ops/s
Iteration  21: 147497.377 ops/s
Iteration  22: 157417.283 ops/s
Iteration  23: 154017.878 ops/s
Iteration  24: 146552.304 ops/s
Iteration  25: 152831.320 ops/s
Iteration  26: 148798.280 ops/s
Iteration  27: 151640.692 ops/s
Iteration  28: 148594.307 ops/s
Iteration  29: 154644.537 ops/s
Iteration  30: 153553.355 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_7._Benchmark.benchmark_Cluster_7":
  151536.705 ±(99.9%) 2349.560 ops/s [Average]
  (min, avg, max) = (142950.786, 151536.705, 157417.283), stdev = 3516.711
  CI (99.9%): [149187.145, 153886.265] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score      Error  Units
Cluster_7._Benchmark.benchmark_Cluster_7  thrpt   30  151536.705 ± 2349.560  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_70._Benchmark.benchmark_Cluster_70$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_70._Benchmark.benchmark_Cluster_70

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8134.018 ops/s
# Warmup Iteration   2: 24656.060 ops/s
# Warmup Iteration   3: 27361.417 ops/s
# Warmup Iteration   4: 46867.355 ops/s
# Warmup Iteration   5: 54937.113 ops/s
# Warmup Iteration   6: 113021.624 ops/s
# Warmup Iteration   7: 121875.027 ops/s
# Warmup Iteration   8: 119729.826 ops/s
# Warmup Iteration   9: 130548.381 ops/s
# Warmup Iteration  10: 125107.901 ops/s
# Warmup Iteration  11: 129426.120 ops/s
# Warmup Iteration  12: 129091.119 ops/s
# Warmup Iteration  13: 126624.093 ops/s
# Warmup Iteration  14: 132164.823 ops/s
# Warmup Iteration  15: 125787.015 ops/s
# Warmup Iteration  16: 133579.958 ops/s
# Warmup Iteration  17: 130947.243 ops/s
# Warmup Iteration  18: 132496.207 ops/s
# Warmup Iteration  19: 135652.221 ops/s
# Warmup Iteration  20: 131937.431 ops/s
# Warmup Iteration  21: 139617.268 ops/s
# Warmup Iteration  22: 128010.128 ops/s
# Warmup Iteration  23: 136487.478 ops/s
# Warmup Iteration  24: 134308.996 ops/s
# Warmup Iteration  25: 133740.744 ops/s
# Warmup Iteration  26: 132804.259 ops/s
# Warmup Iteration  27: 135476.074 ops/s
# Warmup Iteration  28: 130716.074 ops/s
# Warmup Iteration  29: 137685.669 ops/s
# Warmup Iteration  30: 129980.510 ops/s
Iteration   1: 136893.986 ops/s
Iteration   2: 131586.007 ops/s
Iteration   3: 133755.188 ops/s
Iteration   4: 138125.877 ops/s
Iteration   5: 132782.790 ops/s
Iteration   6: 132842.113 ops/s
Iteration   7: 132086.544 ops/s
Iteration   8: 141321.147 ops/s
Iteration   9: 137332.170 ops/s
Iteration  10: 129059.609 ops/s
Iteration  11: 133742.400 ops/s
Iteration  12: 130371.622 ops/s
Iteration  13: 135127.109 ops/s
Iteration  14: 134905.948 ops/s
Iteration  15: 137222.571 ops/s
Iteration  16: 129672.464 ops/s
Iteration  17: 135376.680 ops/s
Iteration  18: 126200.450 ops/s
Iteration  19: 131547.831 ops/s
Iteration  20: 134235.889 ops/s
Iteration  21: 133401.505 ops/s
Iteration  22: 135066.957 ops/s
Iteration  23: 131422.008 ops/s
Iteration  24: 137190.649 ops/s
Iteration  25: 132606.494 ops/s
Iteration  26: 133305.641 ops/s
Iteration  27: 109575.450 ops/s
Iteration  28: 135746.053 ops/s
Iteration  29: 131051.091 ops/s
Iteration  30: 133162.543 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_70._Benchmark.benchmark_Cluster_70":
  132890.560 ±(99.9%) 3580.609 ops/s [Average]
  (min, avg, max) = (109575.450, 132890.560, 141321.147), stdev = 5359.288
  CI (99.9%): [129309.950, 136471.169] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_70._Benchmark.benchmark_Cluster_70  thrpt   30  132890.560 ± 3580.609  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_700._Benchmark.benchmark_Cluster_700$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_700._Benchmark.benchmark_Cluster_700

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7251.842 ops/s
# Warmup Iteration   2: 33547.193 ops/s
# Warmup Iteration   3: 60991.854 ops/s
# Warmup Iteration   4: 105190.504 ops/s
# Warmup Iteration   5: 98583.724 ops/s
# Warmup Iteration   6: 111156.268 ops/s
# Warmup Iteration   7: 108909.913 ops/s
# Warmup Iteration   8: 115246.992 ops/s
# Warmup Iteration   9: 120907.647 ops/s
# Warmup Iteration  10: 119469.526 ops/s
# Warmup Iteration  11: 120216.572 ops/s
# Warmup Iteration  12: 109678.825 ops/s
# Warmup Iteration  13: 120684.399 ops/s
# Warmup Iteration  14: 114837.524 ops/s
# Warmup Iteration  15: 118544.832 ops/s
# Warmup Iteration  16: 113290.904 ops/s
# Warmup Iteration  17: 121575.667 ops/s
# Warmup Iteration  18: 121291.762 ops/s
# Warmup Iteration  19: 118352.991 ops/s
# Warmup Iteration  20: 121498.772 ops/s
# Warmup Iteration  21: 117732.397 ops/s
# Warmup Iteration  22: 115925.424 ops/s
# Warmup Iteration  23: 121131.498 ops/s
# Warmup Iteration  24: 117712.283 ops/s
# Warmup Iteration  25: 125444.649 ops/s
# Warmup Iteration  26: 120114.341 ops/s
# Warmup Iteration  27: 116140.928 ops/s
# Warmup Iteration  28: 119087.120 ops/s
# Warmup Iteration  29: 121880.999 ops/s
# Warmup Iteration  30: 119055.744 ops/s
Iteration   1: 121355.014 ops/s
Iteration   2: 114604.507 ops/s
Iteration   3: 120495.563 ops/s
Iteration   4: 124604.121 ops/s
Iteration   5: 114149.192 ops/s
Iteration   6: 123574.762 ops/s
Iteration   7: 118622.031 ops/s
Iteration   8: 123931.662 ops/s
Iteration   9: 117442.535 ops/s
Iteration  10: 121646.019 ops/s
Iteration  11: 119098.663 ops/s
Iteration  12: 119575.072 ops/s
Iteration  13: 123250.012 ops/s
Iteration  14: 115236.022 ops/s
Iteration  15: 116482.272 ops/s
Iteration  16: 123413.682 ops/s
Iteration  17: 115154.954 ops/s
Iteration  18: 126115.267 ops/s
Iteration  19: 119746.891 ops/s
Iteration  20: 117057.261 ops/s
Iteration  21: 124256.520 ops/s
Iteration  22: 117874.982 ops/s
Iteration  23: 121919.035 ops/s
Iteration  24: 120764.645 ops/s
Iteration  25: 119488.762 ops/s
Iteration  26: 123907.282 ops/s
Iteration  27: 116216.738 ops/s
Iteration  28: 124338.742 ops/s
Iteration  29: 116053.208 ops/s
Iteration  30: 120825.713 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_700._Benchmark.benchmark_Cluster_700":
  120040.038 ±(99.9%) 2306.616 ops/s [Average]
  (min, avg, max) = (114149.192, 120040.038, 126115.267), stdev = 3452.435
  CI (99.9%): [117733.421, 122346.654] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_700._Benchmark.benchmark_Cluster_700  thrpt   30  120040.038 ± 2306.616  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_701._Benchmark.benchmark_Cluster_701$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_701._Benchmark.benchmark_Cluster_701

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1522.767 ops/s
# Warmup Iteration   2: 10433.848 ops/s
# Warmup Iteration   3: 20898.759 ops/s
# Warmup Iteration   4: 25866.290 ops/s
# Warmup Iteration   5: 32752.628 ops/s
# Warmup Iteration   6: 56388.351 ops/s
# Warmup Iteration   7: 103175.114 ops/s
# Warmup Iteration   8: 96331.493 ops/s
# Warmup Iteration   9: 107249.784 ops/s
# Warmup Iteration  10: 95198.704 ops/s
# Warmup Iteration  11: 101325.977 ops/s
# Warmup Iteration  12: 91786.832 ops/s
# Warmup Iteration  13: 105936.755 ops/s
# Warmup Iteration  14: 105869.306 ops/s
# Warmup Iteration  15: 103918.547 ops/s
# Warmup Iteration  16: 103344.382 ops/s
# Warmup Iteration  17: 104202.639 ops/s
# Warmup Iteration  18: 101563.586 ops/s
# Warmup Iteration  19: 108718.744 ops/s
# Warmup Iteration  20: 99318.172 ops/s
# Warmup Iteration  21: 107907.893 ops/s
# Warmup Iteration  22: 104271.072 ops/s
# Warmup Iteration  23: 104147.694 ops/s
# Warmup Iteration  24: 104904.213 ops/s
# Warmup Iteration  25: 105995.315 ops/s
# Warmup Iteration  26: 101947.722 ops/s
# Warmup Iteration  27: 107763.947 ops/s
# Warmup Iteration  28: 102200.225 ops/s
# Warmup Iteration  29: 106101.901 ops/s
# Warmup Iteration  30: 101238.732 ops/s
Iteration   1: 105294.139 ops/s
Iteration   2: 105957.456 ops/s
Iteration   3: 102077.653 ops/s
Iteration   4: 103694.874 ops/s
Iteration   5: 102859.502 ops/s
Iteration   6: 103585.346 ops/s
Iteration   7: 104759.181 ops/s
Iteration   8: 104524.827 ops/s
Iteration   9: 105056.781 ops/s
Iteration  10: 103615.815 ops/s
Iteration  11: 105758.335 ops/s
Iteration  12: 101193.212 ops/s
Iteration  13: 104118.547 ops/s
Iteration  14: 107811.998 ops/s
Iteration  15: 102035.539 ops/s
Iteration  16: 101093.573 ops/s
Iteration  17: 104911.891 ops/s
Iteration  18: 104408.347 ops/s
Iteration  19: 106449.572 ops/s
Iteration  20: 103126.333 ops/s
Iteration  21: 107919.048 ops/s
Iteration  22: 81818.454 ops/s
Iteration  23: 105969.259 ops/s
Iteration  24: 102735.521 ops/s
Iteration  25: 103198.491 ops/s
Iteration  26: 106706.516 ops/s
Iteration  27: 102153.098 ops/s
Iteration  28: 106642.400 ops/s
Iteration  29: 100400.653 ops/s
Iteration  30: 105114.662 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_701._Benchmark.benchmark_Cluster_701":
  103499.701 ±(99.9%) 3029.774 ops/s [Average]
  (min, avg, max) = (81818.454, 103499.701, 107919.048), stdev = 4534.823
  CI (99.9%): [100469.927, 106529.474] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_701._Benchmark.benchmark_Cluster_701  thrpt   30  103499.701 ± 3029.774  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_702._Benchmark.benchmark_Cluster_702$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_702._Benchmark.benchmark_Cluster_702

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1534.939 ops/s
# Warmup Iteration   2: 8919.543 ops/s
# Warmup Iteration   3: 13924.465 ops/s
# Warmup Iteration   4: 17349.647 ops/s
# Warmup Iteration   5: 17304.213 ops/s
# Warmup Iteration   6: 15389.812 ops/s
# Warmup Iteration   7: 14887.574 ops/s
# Warmup Iteration   8: 18390.413 ops/s
# Warmup Iteration   9: 13339.928 ops/s
# Warmup Iteration  10: 19078.251 ops/s
# Warmup Iteration  11: 30733.717 ops/s
# Warmup Iteration  12: 44725.729 ops/s
# Warmup Iteration  13: 43919.140 ops/s
# Warmup Iteration  14: 36092.671 ops/s
# Warmup Iteration  15: 48399.816 ops/s
# Warmup Iteration  16: 43634.188 ops/s
# Warmup Iteration  17: 44587.603 ops/s
# Warmup Iteration  18: 48791.873 ops/s
# Warmup Iteration  19: 44622.536 ops/s
# Warmup Iteration  20: 43723.466 ops/s
# Warmup Iteration  21: 45477.005 ops/s
# Warmup Iteration  22: 45053.227 ops/s
# Warmup Iteration  23: 38026.851 ops/s
# Warmup Iteration  24: 43960.541 ops/s
# Warmup Iteration  25: 43028.858 ops/s
# Warmup Iteration  26: 43405.300 ops/s
# Warmup Iteration  27: 44083.643 ops/s
# Warmup Iteration  28: 46086.000 ops/s
# Warmup Iteration  29: 43405.334 ops/s
# Warmup Iteration  30: 44536.140 ops/s
Iteration   1: 48079.637 ops/s
Iteration   2: 46450.897 ops/s
Iteration   3: 42906.667 ops/s
Iteration   4: 41895.439 ops/s
Iteration   5: 43247.450 ops/s
Iteration   6: 44141.928 ops/s
Iteration   7: 47056.976 ops/s
Iteration   8: 47704.714 ops/s
Iteration   9: 41186.372 ops/s
Iteration  10: 50563.908 ops/s
Iteration  11: 47774.783 ops/s
Iteration  12: 46219.954 ops/s
Iteration  13: 49303.517 ops/s
Iteration  14: 44385.811 ops/s
Iteration  15: 45277.920 ops/s
Iteration  16: 41034.102 ops/s
Iteration  17: 47429.279 ops/s
Iteration  18: 47582.057 ops/s
Iteration  19: 43445.115 ops/s
Iteration  20: 41578.526 ops/s
Iteration  21: 41126.937 ops/s
Iteration  22: 46656.060 ops/s
Iteration  23: 44200.618 ops/s
Iteration  24: 42668.723 ops/s
Iteration  25: 43575.828 ops/s
Iteration  26: 44760.256 ops/s
Iteration  27: 45560.892 ops/s
Iteration  28: 42806.481 ops/s
Iteration  29: 48145.819 ops/s
Iteration  30: 46560.023 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_702._Benchmark.benchmark_Cluster_702":
  45110.890 ±(99.9%) 1754.717 ops/s [Average]
  (min, avg, max) = (41034.102, 45110.890, 50563.908), stdev = 2626.378
  CI (99.9%): [43356.173, 46865.607] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_702._Benchmark.benchmark_Cluster_702  thrpt   30  45110.890 ± 1754.717  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_703._Benchmark.benchmark_Cluster_703$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_703._Benchmark.benchmark_Cluster_703

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5668.257 ops/s
# Warmup Iteration   2: 25346.668 ops/s
# Warmup Iteration   3: 27391.906 ops/s
# Warmup Iteration   4: 49425.450 ops/s
# Warmup Iteration   5: 96178.423 ops/s
# Warmup Iteration   6: 90424.885 ops/s
# Warmup Iteration   7: 88272.304 ops/s
# Warmup Iteration   8: 102513.248 ops/s
# Warmup Iteration   9: 90877.416 ops/s
# Warmup Iteration  10: 103371.919 ops/s
# Warmup Iteration  11: 98031.925 ops/s
# Warmup Iteration  12: 97721.308 ops/s
# Warmup Iteration  13: 100954.031 ops/s
# Warmup Iteration  14: 97738.218 ops/s
# Warmup Iteration  15: 102626.898 ops/s
# Warmup Iteration  16: 100693.427 ops/s
# Warmup Iteration  17: 102967.951 ops/s
# Warmup Iteration  18: 102209.926 ops/s
# Warmup Iteration  19: 101474.180 ops/s
# Warmup Iteration  20: 106835.357 ops/s
# Warmup Iteration  21: 101168.489 ops/s
# Warmup Iteration  22: 102569.176 ops/s
# Warmup Iteration  23: 100515.763 ops/s
# Warmup Iteration  24: 102050.095 ops/s
# Warmup Iteration  25: 106388.547 ops/s
# Warmup Iteration  26: 100585.393 ops/s
# Warmup Iteration  27: 100313.158 ops/s
# Warmup Iteration  28: 104840.799 ops/s
# Warmup Iteration  29: 101286.441 ops/s
# Warmup Iteration  30: 105093.621 ops/s
Iteration   1: 104558.829 ops/s
Iteration   2: 100785.175 ops/s
Iteration   3: 102045.051 ops/s
Iteration   4: 106810.113 ops/s
Iteration   5: 98297.983 ops/s
Iteration   6: 103355.445 ops/s
Iteration   7: 100386.300 ops/s
Iteration   8: 103104.128 ops/s
Iteration   9: 106141.686 ops/s
Iteration  10: 97427.069 ops/s
Iteration  11: 103024.690 ops/s
Iteration  12: 101209.959 ops/s
Iteration  13: 99254.615 ops/s
Iteration  14: 84062.904 ops/s
Iteration  15: 102305.180 ops/s
Iteration  16: 100524.847 ops/s
Iteration  17: 101044.549 ops/s
Iteration  18: 102244.350 ops/s
Iteration  19: 100992.076 ops/s
Iteration  20: 102946.921 ops/s
Iteration  21: 101075.184 ops/s
Iteration  22: 104862.169 ops/s
Iteration  23: 100840.021 ops/s
Iteration  24: 100900.635 ops/s
Iteration  25: 106043.638 ops/s
Iteration  26: 100360.057 ops/s
Iteration  27: 103228.307 ops/s
Iteration  28: 102664.538 ops/s
Iteration  29: 100573.690 ops/s
Iteration  30: 107243.287 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_703._Benchmark.benchmark_Cluster_703":
  101610.447 ±(99.9%) 2724.541 ops/s [Average]
  (min, avg, max) = (84062.904, 101610.447, 107243.287), stdev = 4077.966
  CI (99.9%): [98885.905, 104334.988] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_703._Benchmark.benchmark_Cluster_703  thrpt   30  101610.447 ± 2724.541  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_704._Benchmark.benchmark_Cluster_704$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_704._Benchmark.benchmark_Cluster_704

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5433.591 ops/s
# Warmup Iteration   2: 28116.165 ops/s
# Warmup Iteration   3: 73409.253 ops/s
# Warmup Iteration   4: 93794.456 ops/s
# Warmup Iteration   5: 96818.071 ops/s
# Warmup Iteration   6: 96403.130 ops/s
# Warmup Iteration   7: 90976.558 ops/s
# Warmup Iteration   8: 98687.296 ops/s
# Warmup Iteration   9: 93025.475 ops/s
# Warmup Iteration  10: 90237.448 ops/s
# Warmup Iteration  11: 93114.843 ops/s
# Warmup Iteration  12: 93288.420 ops/s
# Warmup Iteration  13: 96253.875 ops/s
# Warmup Iteration  14: 95122.320 ops/s
# Warmup Iteration  15: 93024.949 ops/s
# Warmup Iteration  16: 99189.217 ops/s
# Warmup Iteration  17: 95866.151 ops/s
# Warmup Iteration  18: 96825.568 ops/s
# Warmup Iteration  19: 96490.308 ops/s
# Warmup Iteration  20: 99064.976 ops/s
# Warmup Iteration  21: 106091.926 ops/s
# Warmup Iteration  22: 95115.004 ops/s
# Warmup Iteration  23: 102234.080 ops/s
# Warmup Iteration  24: 100063.373 ops/s
# Warmup Iteration  25: 100783.048 ops/s
# Warmup Iteration  26: 100327.619 ops/s
# Warmup Iteration  27: 99518.327 ops/s
# Warmup Iteration  28: 98254.279 ops/s
# Warmup Iteration  29: 102357.460 ops/s
# Warmup Iteration  30: 99444.807 ops/s
Iteration   1: 100695.324 ops/s
Iteration   2: 99212.621 ops/s
Iteration   3: 97948.842 ops/s
Iteration   4: 102425.253 ops/s
Iteration   5: 101597.676 ops/s
Iteration   6: 98379.857 ops/s
Iteration   7: 93591.455 ops/s
Iteration   8: 102329.761 ops/s
Iteration   9: 99721.695 ops/s
Iteration  10: 100225.045 ops/s
Iteration  11: 97540.649 ops/s
Iteration  12: 101577.482 ops/s
Iteration  13: 98015.658 ops/s
Iteration  14: 100845.954 ops/s
Iteration  15: 99959.336 ops/s
Iteration  16: 99892.997 ops/s
Iteration  17: 97890.817 ops/s
Iteration  18: 101659.325 ops/s
Iteration  19: 97682.731 ops/s
Iteration  20: 102231.779 ops/s
Iteration  21: 97938.614 ops/s
Iteration  22: 101670.774 ops/s
Iteration  23: 98868.279 ops/s
Iteration  24: 100248.583 ops/s
Iteration  25: 101453.483 ops/s
Iteration  26: 96752.562 ops/s
Iteration  27: 102690.871 ops/s
Iteration  28: 98740.955 ops/s
Iteration  29: 98578.604 ops/s
Iteration  30: 100552.478 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_704._Benchmark.benchmark_Cluster_704":
  99697.315 ±(99.9%) 1377.048 ops/s [Average]
  (min, avg, max) = (93591.455, 99697.315, 102690.871), stdev = 2061.101
  CI (99.9%): [98320.267, 101074.364] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_704._Benchmark.benchmark_Cluster_704  thrpt   30  99697.315 ± 1377.048  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_705._Benchmark.benchmark_Cluster_705$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_705._Benchmark.benchmark_Cluster_705

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11881.061 ops/s
# Warmup Iteration   2: 55481.808 ops/s
# Warmup Iteration   3: 58712.991 ops/s
# Warmup Iteration   4: 74575.106 ops/s
# Warmup Iteration   5: 84983.834 ops/s
# Warmup Iteration   6: 83248.347 ops/s
# Warmup Iteration   7: 83741.485 ops/s
# Warmup Iteration   8: 85342.681 ops/s
# Warmup Iteration   9: 80425.768 ops/s
# Warmup Iteration  10: 85993.426 ops/s
# Warmup Iteration  11: 81573.614 ops/s
# Warmup Iteration  12: 86188.546 ops/s
# Warmup Iteration  13: 82759.221 ops/s
# Warmup Iteration  14: 83239.967 ops/s
# Warmup Iteration  15: 84908.998 ops/s
# Warmup Iteration  16: 83736.188 ops/s
# Warmup Iteration  17: 86386.766 ops/s
# Warmup Iteration  18: 80193.344 ops/s
# Warmup Iteration  19: 86716.045 ops/s
# Warmup Iteration  20: 83475.976 ops/s
# Warmup Iteration  21: 85664.192 ops/s
# Warmup Iteration  22: 83128.421 ops/s
# Warmup Iteration  23: 83072.127 ops/s
# Warmup Iteration  24: 84691.697 ops/s
# Warmup Iteration  25: 82544.555 ops/s
# Warmup Iteration  26: 84603.532 ops/s
# Warmup Iteration  27: 84860.019 ops/s
# Warmup Iteration  28: 80879.655 ops/s
# Warmup Iteration  29: 85959.688 ops/s
# Warmup Iteration  30: 83924.731 ops/s
Iteration   1: 83487.177 ops/s
Iteration   2: 83645.068 ops/s
Iteration   3: 81573.995 ops/s
Iteration   4: 86491.581 ops/s
Iteration   5: 81808.917 ops/s
Iteration   6: 83069.414 ops/s
Iteration   7: 87666.086 ops/s
Iteration   8: 82812.803 ops/s
Iteration   9: 72759.691 ops/s
Iteration  10: 81342.126 ops/s
Iteration  11: 85790.293 ops/s
Iteration  12: 82948.395 ops/s
Iteration  13: 83770.230 ops/s
Iteration  14: 84646.467 ops/s
Iteration  15: 82027.781 ops/s
Iteration  16: 83663.359 ops/s
Iteration  17: 87001.454 ops/s
Iteration  18: 87899.644 ops/s
Iteration  19: 82693.212 ops/s
Iteration  20: 84988.434 ops/s
Iteration  21: 82922.422 ops/s
Iteration  22: 82782.416 ops/s
Iteration  23: 84494.547 ops/s
Iteration  24: 80792.672 ops/s
Iteration  25: 85900.211 ops/s
Iteration  26: 81977.649 ops/s
Iteration  27: 86122.394 ops/s
Iteration  28: 83468.383 ops/s
Iteration  29: 85635.981 ops/s
Iteration  30: 82261.665 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_705._Benchmark.benchmark_Cluster_705":
  83548.149 ±(99.9%) 1870.590 ops/s [Average]
  (min, avg, max) = (72759.691, 83548.149, 87899.644), stdev = 2799.811
  CI (99.9%): [81677.559, 85418.739] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_705._Benchmark.benchmark_Cluster_705  thrpt   30  83548.149 ± 1870.590  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_706._Benchmark.benchmark_Cluster_706$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_706._Benchmark.benchmark_Cluster_706

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1407.442 ops/s
# Warmup Iteration   2: 18015.787 ops/s
# Warmup Iteration   3: 26739.885 ops/s
# Warmup Iteration   4: 34369.172 ops/s
# Warmup Iteration   5: 50558.765 ops/s
# Warmup Iteration   6: 98355.024 ops/s
# Warmup Iteration   7: 103701.020 ops/s
# Warmup Iteration   8: 107845.765 ops/s
# Warmup Iteration   9: 101936.097 ops/s
# Warmup Iteration  10: 109465.056 ops/s
# Warmup Iteration  11: 105557.489 ops/s
# Warmup Iteration  12: 106563.538 ops/s
# Warmup Iteration  13: 102376.638 ops/s
# Warmup Iteration  14: 106538.298 ops/s
# Warmup Iteration  15: 108933.420 ops/s
# Warmup Iteration  16: 105833.538 ops/s
# Warmup Iteration  17: 108761.049 ops/s
# Warmup Iteration  18: 113410.877 ops/s
# Warmup Iteration  19: 105693.563 ops/s
# Warmup Iteration  20: 110503.015 ops/s
# Warmup Iteration  21: 104184.664 ops/s
# Warmup Iteration  22: 111926.031 ops/s
# Warmup Iteration  23: 108882.208 ops/s
# Warmup Iteration  24: 103181.416 ops/s
# Warmup Iteration  25: 112013.436 ops/s
# Warmup Iteration  26: 111812.760 ops/s
# Warmup Iteration  27: 109808.305 ops/s
# Warmup Iteration  28: 107169.051 ops/s
# Warmup Iteration  29: 110903.458 ops/s
# Warmup Iteration  30: 106022.804 ops/s
Iteration   1: 105865.209 ops/s
Iteration   2: 113229.787 ops/s
Iteration   3: 104895.197 ops/s
Iteration   4: 111766.987 ops/s
Iteration   5: 107913.553 ops/s
Iteration   6: 110769.239 ops/s
Iteration   7: 110914.657 ops/s
Iteration   8: 104980.547 ops/s
Iteration   9: 110578.009 ops/s
Iteration  10: 108191.865 ops/s
Iteration  11: 111998.557 ops/s
Iteration  12: 103355.480 ops/s
Iteration  13: 112395.946 ops/s
Iteration  14: 107567.190 ops/s
Iteration  15: 110586.497 ops/s
Iteration  16: 111137.352 ops/s
Iteration  17: 107102.251 ops/s
Iteration  18: 111101.764 ops/s
Iteration  19: 110102.819 ops/s
Iteration  20: 107628.369 ops/s
Iteration  21: 113688.977 ops/s
Iteration  22: 108203.087 ops/s
Iteration  23: 112359.817 ops/s
Iteration  24: 106853.306 ops/s
Iteration  25: 112103.010 ops/s
Iteration  26: 108334.405 ops/s
Iteration  27: 109928.502 ops/s
Iteration  28: 112754.313 ops/s
Iteration  29: 106830.059 ops/s
Iteration  30: 110278.375 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_706._Benchmark.benchmark_Cluster_706":
  109447.171 ±(99.9%) 1823.506 ops/s [Average]
  (min, avg, max) = (103355.480, 109447.171, 113688.977), stdev = 2729.338
  CI (99.9%): [107623.665, 111270.677] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_706._Benchmark.benchmark_Cluster_706  thrpt   30  109447.171 ± 1823.506  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_707._Benchmark.benchmark_Cluster_707$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_707._Benchmark.benchmark_Cluster_707

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7952.808 ops/s
# Warmup Iteration   2: 38046.801 ops/s
# Warmup Iteration   3: 74808.634 ops/s
# Warmup Iteration   4: 85646.726 ops/s
# Warmup Iteration   5: 109134.992 ops/s
# Warmup Iteration   6: 93657.561 ops/s
# Warmup Iteration   7: 112456.682 ops/s
# Warmup Iteration   8: 107934.202 ops/s
# Warmup Iteration   9: 109526.930 ops/s
# Warmup Iteration  10: 114267.149 ops/s
# Warmup Iteration  11: 107898.559 ops/s
# Warmup Iteration  12: 114184.715 ops/s
# Warmup Iteration  13: 105871.221 ops/s
# Warmup Iteration  14: 110275.626 ops/s
# Warmup Iteration  15: 114375.534 ops/s
# Warmup Iteration  16: 106935.922 ops/s
# Warmup Iteration  17: 114235.871 ops/s
# Warmup Iteration  18: 114441.546 ops/s
# Warmup Iteration  19: 114107.775 ops/s
# Warmup Iteration  20: 113215.528 ops/s
# Warmup Iteration  21: 114133.255 ops/s
# Warmup Iteration  22: 117836.152 ops/s
# Warmup Iteration  23: 111217.874 ops/s
# Warmup Iteration  24: 115355.558 ops/s
# Warmup Iteration  25: 116351.154 ops/s
# Warmup Iteration  26: 110307.313 ops/s
# Warmup Iteration  27: 119210.919 ops/s
# Warmup Iteration  28: 115930.615 ops/s
# Warmup Iteration  29: 111415.751 ops/s
# Warmup Iteration  30: 115200.194 ops/s
Iteration   1: 112740.434 ops/s
Iteration   2: 117192.203 ops/s
Iteration   3: 93052.393 ops/s
Iteration   4: 112043.385 ops/s
Iteration   5: 115324.145 ops/s
Iteration   6: 112318.261 ops/s
Iteration   7: 118149.683 ops/s
Iteration   8: 116824.287 ops/s
Iteration   9: 112890.425 ops/s
Iteration  10: 114032.392 ops/s
Iteration  11: 116018.514 ops/s
Iteration  12: 111389.876 ops/s
Iteration  13: 117803.753 ops/s
Iteration  14: 113399.728 ops/s
Iteration  15: 113428.131 ops/s
Iteration  16: 115891.045 ops/s
Iteration  17: 111101.156 ops/s
Iteration  18: 119119.096 ops/s
Iteration  19: 112381.717 ops/s
Iteration  20: 112199.451 ops/s
Iteration  21: 119005.658 ops/s
Iteration  22: 112133.588 ops/s
Iteration  23: 115544.290 ops/s
Iteration  24: 115461.319 ops/s
Iteration  25: 118001.458 ops/s
Iteration  26: 112592.400 ops/s
Iteration  27: 113577.596 ops/s
Iteration  28: 113827.222 ops/s
Iteration  29: 117014.208 ops/s
Iteration  30: 112268.222 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_707._Benchmark.benchmark_Cluster_707":
  113890.868 ±(99.9%) 3085.452 ops/s [Average]
  (min, avg, max) = (93052.393, 113890.868, 119119.096), stdev = 4618.160
  CI (99.9%): [110805.415, 116976.320] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_707._Benchmark.benchmark_Cluster_707  thrpt   30  113890.868 ± 3085.452  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_708._Benchmark.benchmark_Cluster_708$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_708._Benchmark.benchmark_Cluster_708

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2832.158 ops/s
# Warmup Iteration   2: 21782.735 ops/s
# Warmup Iteration   3: 22363.369 ops/s
# Warmup Iteration   4: 52271.702 ops/s
# Warmup Iteration   5: 42513.742 ops/s
# Warmup Iteration   6: 68369.075 ops/s
# Warmup Iteration   7: 70805.430 ops/s
# Warmup Iteration   8: 69004.390 ops/s
# Warmup Iteration   9: 66688.451 ops/s
# Warmup Iteration  10: 70343.070 ops/s
# Warmup Iteration  11: 69217.061 ops/s
# Warmup Iteration  12: 69024.880 ops/s
# Warmup Iteration  13: 72734.445 ops/s
# Warmup Iteration  14: 71929.750 ops/s
# Warmup Iteration  15: 74448.710 ops/s
# Warmup Iteration  16: 70224.030 ops/s
# Warmup Iteration  17: 75702.918 ops/s
# Warmup Iteration  18: 72333.459 ops/s
# Warmup Iteration  19: 74588.302 ops/s
# Warmup Iteration  20: 72241.502 ops/s
# Warmup Iteration  21: 73398.943 ops/s
# Warmup Iteration  22: 73643.347 ops/s
# Warmup Iteration  23: 70812.514 ops/s
# Warmup Iteration  24: 74590.337 ops/s
# Warmup Iteration  25: 72032.011 ops/s
# Warmup Iteration  26: 74303.485 ops/s
# Warmup Iteration  27: 70871.649 ops/s
# Warmup Iteration  28: 75095.025 ops/s
# Warmup Iteration  29: 73672.417 ops/s
# Warmup Iteration  30: 71977.957 ops/s
Iteration   1: 75600.619 ops/s
Iteration   2: 72390.357 ops/s
Iteration   3: 74328.825 ops/s
Iteration   4: 74228.156 ops/s
Iteration   5: 72827.923 ops/s
Iteration   6: 73112.210 ops/s
Iteration   7: 74602.100 ops/s
Iteration   8: 71809.725 ops/s
Iteration   9: 74109.781 ops/s
Iteration  10: 73283.067 ops/s
Iteration  11: 71702.521 ops/s
Iteration  12: 74994.034 ops/s
Iteration  13: 70890.699 ops/s
Iteration  14: 74404.861 ops/s
Iteration  15: 72734.027 ops/s
Iteration  16: 71983.803 ops/s
Iteration  17: 73635.994 ops/s
Iteration  18: 74996.233 ops/s
Iteration  19: 70772.402 ops/s
Iteration  20: 73656.891 ops/s
Iteration  21: 69842.001 ops/s
Iteration  22: 73624.176 ops/s
Iteration  23: 76154.812 ops/s
Iteration  24: 70220.454 ops/s
Iteration  25: 75599.267 ops/s
Iteration  26: 72192.292 ops/s
Iteration  27: 72114.530 ops/s
Iteration  28: 73569.084 ops/s
Iteration  29: 76956.721 ops/s
Iteration  30: 71325.306 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_708._Benchmark.benchmark_Cluster_708":
  73255.429 ±(99.9%) 1188.545 ops/s [Average]
  (min, avg, max) = (69842.001, 73255.429, 76956.721), stdev = 1778.958
  CI (99.9%): [72066.884, 74443.974] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_708._Benchmark.benchmark_Cluster_708  thrpt   30  73255.429 ± 1188.545  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_709._Benchmark.benchmark_Cluster_709$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_709._Benchmark.benchmark_Cluster_709

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5845.711 ops/s
# Warmup Iteration   2: 23122.562 ops/s
# Warmup Iteration   3: 36052.299 ops/s
# Warmup Iteration   4: 35586.777 ops/s
# Warmup Iteration   5: 78572.215 ops/s
# Warmup Iteration   6: 99570.457 ops/s
# Warmup Iteration   7: 103307.884 ops/s
# Warmup Iteration   8: 107507.459 ops/s
# Warmup Iteration   9: 106230.178 ops/s
# Warmup Iteration  10: 97920.745 ops/s
# Warmup Iteration  11: 104857.075 ops/s
# Warmup Iteration  12: 100390.877 ops/s
# Warmup Iteration  13: 105271.131 ops/s
# Warmup Iteration  14: 104902.633 ops/s
# Warmup Iteration  15: 104956.748 ops/s
# Warmup Iteration  16: 109165.204 ops/s
# Warmup Iteration  17: 105643.759 ops/s
# Warmup Iteration  18: 107649.710 ops/s
# Warmup Iteration  19: 112306.449 ops/s
# Warmup Iteration  20: 105694.534 ops/s
# Warmup Iteration  21: 113069.471 ops/s
# Warmup Iteration  22: 113049.395 ops/s
# Warmup Iteration  23: 107567.226 ops/s
# Warmup Iteration  24: 111745.352 ops/s
# Warmup Iteration  25: 108846.072 ops/s
# Warmup Iteration  26: 113472.656 ops/s
# Warmup Iteration  27: 92779.586 ops/s
# Warmup Iteration  28: 112583.245 ops/s
# Warmup Iteration  29: 106530.748 ops/s
# Warmup Iteration  30: 113114.091 ops/s
Iteration   1: 110169.627 ops/s
Iteration   2: 109423.124 ops/s
Iteration   3: 113097.008 ops/s
Iteration   4: 106609.760 ops/s
Iteration   5: 114415.737 ops/s
Iteration   6: 107200.253 ops/s
Iteration   7: 112800.874 ops/s
Iteration   8: 111600.168 ops/s
Iteration   9: 108219.303 ops/s
Iteration  10: 114655.462 ops/s
Iteration  11: 107464.509 ops/s
Iteration  12: 111371.459 ops/s
Iteration  13: 112870.055 ops/s
Iteration  14: 109122.225 ops/s
Iteration  15: 109125.096 ops/s
Iteration  16: 113485.849 ops/s
Iteration  17: 109997.518 ops/s
Iteration  18: 113383.892 ops/s
Iteration  19: 112396.121 ops/s
Iteration  20: 107351.021 ops/s
Iteration  21: 113783.862 ops/s
Iteration  22: 105048.714 ops/s
Iteration  23: 108239.988 ops/s
Iteration  24: 111616.059 ops/s
Iteration  25: 110730.434 ops/s
Iteration  26: 112853.681 ops/s
Iteration  27: 107661.541 ops/s
Iteration  28: 110044.249 ops/s
Iteration  29: 114535.826 ops/s
Iteration  30: 108772.039 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_709._Benchmark.benchmark_Cluster_709":
  110601.515 ±(99.9%) 1790.988 ops/s [Average]
  (min, avg, max) = (105048.714, 110601.515, 114655.462), stdev = 2680.667
  CI (99.9%): [108810.527, 112392.504] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_709._Benchmark.benchmark_Cluster_709  thrpt   30  110601.515 ± 1790.988  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_71._Benchmark.benchmark_Cluster_71$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_71._Benchmark.benchmark_Cluster_71

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11106.089 ops/s
# Warmup Iteration   2: 27274.489 ops/s
# Warmup Iteration   3: 74562.529 ops/s
# Warmup Iteration   4: 90625.124 ops/s
# Warmup Iteration   5: 111855.398 ops/s
# Warmup Iteration   6: 115391.731 ops/s
# Warmup Iteration   7: 111990.073 ops/s
# Warmup Iteration   8: 122010.931 ops/s
# Warmup Iteration   9: 111651.434 ops/s
# Warmup Iteration  10: 120702.900 ops/s
# Warmup Iteration  11: 117907.521 ops/s
# Warmup Iteration  12: 114903.437 ops/s
# Warmup Iteration  13: 122691.404 ops/s
# Warmup Iteration  14: 119042.746 ops/s
# Warmup Iteration  15: 116280.679 ops/s
# Warmup Iteration  16: 118281.643 ops/s
# Warmup Iteration  17: 119660.310 ops/s
# Warmup Iteration  18: 127772.642 ops/s
# Warmup Iteration  19: 122299.432 ops/s
# Warmup Iteration  20: 125778.149 ops/s
# Warmup Iteration  21: 120821.941 ops/s
# Warmup Iteration  22: 123116.700 ops/s
# Warmup Iteration  23: 126719.928 ops/s
# Warmup Iteration  24: 118355.998 ops/s
# Warmup Iteration  25: 121785.365 ops/s
# Warmup Iteration  26: 122405.139 ops/s
# Warmup Iteration  27: 124145.069 ops/s
# Warmup Iteration  28: 117067.402 ops/s
# Warmup Iteration  29: 123360.361 ops/s
# Warmup Iteration  30: 123255.381 ops/s
Iteration   1: 125181.453 ops/s
Iteration   2: 128917.473 ops/s
Iteration   3: 120074.889 ops/s
Iteration   4: 121909.759 ops/s
Iteration   5: 127959.152 ops/s
Iteration   6: 119215.298 ops/s
Iteration   7: 122598.940 ops/s
Iteration   8: 126021.924 ops/s
Iteration   9: 118132.494 ops/s
Iteration  10: 126815.614 ops/s
Iteration  11: 117451.667 ops/s
Iteration  12: 123441.186 ops/s
Iteration  13: 123858.480 ops/s
Iteration  14: 124031.221 ops/s
Iteration  15: 121438.956 ops/s
Iteration  16: 123114.503 ops/s
Iteration  17: 126185.428 ops/s
Iteration  18: 122354.462 ops/s
Iteration  19: 126942.236 ops/s
Iteration  20: 120904.849 ops/s
Iteration  21: 128076.528 ops/s
Iteration  22: 125248.114 ops/s
Iteration  23: 120562.828 ops/s
Iteration  24: 127808.931 ops/s
Iteration  25: 120797.508 ops/s
Iteration  26: 124253.070 ops/s
Iteration  27: 123913.224 ops/s
Iteration  28: 122772.031 ops/s
Iteration  29: 125057.723 ops/s
Iteration  30: 121274.063 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_71._Benchmark.benchmark_Cluster_71":
  123543.800 ±(99.9%) 2028.175 ops/s [Average]
  (min, avg, max) = (117451.667, 123543.800, 128917.473), stdev = 3035.677
  CI (99.9%): [121515.625, 125571.975] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_71._Benchmark.benchmark_Cluster_71  thrpt   30  123543.800 ± 2028.175  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_710._Benchmark.benchmark_Cluster_710$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_710._Benchmark.benchmark_Cluster_710

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1764.191 ops/s
# Warmup Iteration   2: 15774.206 ops/s
# Warmup Iteration   3: 25118.748 ops/s
# Warmup Iteration   4: 24202.860 ops/s
# Warmup Iteration   5: 33051.399 ops/s
# Warmup Iteration   6: 35172.865 ops/s
# Warmup Iteration   7: 91037.748 ops/s
# Warmup Iteration   8: 91512.952 ops/s
# Warmup Iteration   9: 85481.756 ops/s
# Warmup Iteration  10: 88886.183 ops/s
# Warmup Iteration  11: 86793.365 ops/s
# Warmup Iteration  12: 85701.989 ops/s
# Warmup Iteration  13: 86267.972 ops/s
# Warmup Iteration  14: 86913.925 ops/s
# Warmup Iteration  15: 90518.337 ops/s
# Warmup Iteration  16: 84503.284 ops/s
# Warmup Iteration  17: 87972.340 ops/s
# Warmup Iteration  18: 90031.425 ops/s
# Warmup Iteration  19: 91957.108 ops/s
# Warmup Iteration  20: 91037.526 ops/s
# Warmup Iteration  21: 91316.750 ops/s
# Warmup Iteration  22: 70626.447 ops/s
# Warmup Iteration  23: 93419.736 ops/s
# Warmup Iteration  24: 89637.425 ops/s
# Warmup Iteration  25: 91424.970 ops/s
# Warmup Iteration  26: 86616.061 ops/s
# Warmup Iteration  27: 84676.995 ops/s
# Warmup Iteration  28: 91331.050 ops/s
# Warmup Iteration  29: 91669.678 ops/s
# Warmup Iteration  30: 93445.161 ops/s
Iteration   1: 88209.474 ops/s
Iteration   2: 93849.609 ops/s
Iteration   3: 91654.775 ops/s
Iteration   4: 91277.189 ops/s
Iteration   5: 94914.723 ops/s
Iteration   6: 93533.298 ops/s
Iteration   7: 89308.471 ops/s
Iteration   8: 92725.007 ops/s
Iteration   9: 92132.669 ops/s
Iteration  10: 89818.051 ops/s
Iteration  11: 92653.106 ops/s
Iteration  12: 91874.222 ops/s
Iteration  13: 91721.229 ops/s
Iteration  14: 91909.471 ops/s
Iteration  15: 89380.925 ops/s
Iteration  16: 95812.184 ops/s
Iteration  17: 89185.863 ops/s
Iteration  18: 91211.304 ops/s
Iteration  19: 91163.878 ops/s
Iteration  20: 92799.049 ops/s
Iteration  21: 94667.229 ops/s
Iteration  22: 89646.969 ops/s
Iteration  23: 93890.523 ops/s
Iteration  24: 89444.621 ops/s
Iteration  25: 91276.940 ops/s
Iteration  26: 90426.203 ops/s
Iteration  27: 90748.337 ops/s
Iteration  28: 93638.384 ops/s
Iteration  29: 91541.428 ops/s
Iteration  30: 95046.573 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_710._Benchmark.benchmark_Cluster_710":
  91848.724 ±(99.9%) 1315.540 ops/s [Average]
  (min, avg, max) = (88209.474, 91848.724, 95812.184), stdev = 1969.039
  CI (99.9%): [90533.183, 93164.264] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_710._Benchmark.benchmark_Cluster_710  thrpt   30  91848.724 ± 1315.540  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_711._Benchmark.benchmark_Cluster_711$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_711._Benchmark.benchmark_Cluster_711

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4382.928 ops/s
# Warmup Iteration   2: 24301.851 ops/s
# Warmup Iteration   3: 23366.716 ops/s
# Warmup Iteration   4: 31721.619 ops/s
# Warmup Iteration   5: 37592.156 ops/s
# Warmup Iteration   6: 42100.617 ops/s
# Warmup Iteration   7: 101226.710 ops/s
# Warmup Iteration   8: 100144.460 ops/s
# Warmup Iteration   9: 104398.788 ops/s
# Warmup Iteration  10: 107212.033 ops/s
# Warmup Iteration  11: 109379.190 ops/s
# Warmup Iteration  12: 106430.582 ops/s
# Warmup Iteration  13: 104818.645 ops/s
# Warmup Iteration  14: 108883.061 ops/s
# Warmup Iteration  15: 109522.269 ops/s
# Warmup Iteration  16: 107879.307 ops/s
# Warmup Iteration  17: 110350.125 ops/s
# Warmup Iteration  18: 116174.320 ops/s
# Warmup Iteration  19: 111379.803 ops/s
# Warmup Iteration  20: 112175.401 ops/s
# Warmup Iteration  21: 112711.627 ops/s
# Warmup Iteration  22: 110734.588 ops/s
# Warmup Iteration  23: 113637.003 ops/s
# Warmup Iteration  24: 109746.474 ops/s
# Warmup Iteration  25: 112472.531 ops/s
# Warmup Iteration  26: 108249.881 ops/s
# Warmup Iteration  27: 109170.057 ops/s
# Warmup Iteration  28: 114490.663 ops/s
# Warmup Iteration  29: 110702.114 ops/s
# Warmup Iteration  30: 112812.312 ops/s
Iteration   1: 112158.906 ops/s
Iteration   2: 111882.972 ops/s
Iteration   3: 114668.078 ops/s
Iteration   4: 110686.667 ops/s
Iteration   5: 112112.619 ops/s
Iteration   6: 112096.142 ops/s
Iteration   7: 110477.965 ops/s
Iteration   8: 116070.115 ops/s
Iteration   9: 112720.070 ops/s
Iteration  10: 109481.629 ops/s
Iteration  11: 117084.147 ops/s
Iteration  12: 111797.560 ops/s
Iteration  13: 112964.144 ops/s
Iteration  14: 114175.088 ops/s
Iteration  15: 112251.096 ops/s
Iteration  16: 109131.033 ops/s
Iteration  17: 109268.420 ops/s
Iteration  18: 112251.014 ops/s
Iteration  19: 112910.882 ops/s
Iteration  20: 106870.468 ops/s
Iteration  21: 113516.090 ops/s
Iteration  22: 114555.296 ops/s
Iteration  23: 114102.361 ops/s
Iteration  24: 113578.153 ops/s
Iteration  25: 112425.061 ops/s
Iteration  26: 113806.991 ops/s
Iteration  27: 108995.800 ops/s
Iteration  28: 114624.239 ops/s
Iteration  29: 114152.292 ops/s
Iteration  30: 110277.448 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_711._Benchmark.benchmark_Cluster_711":
  112369.758 ±(99.9%) 1508.057 ops/s [Average]
  (min, avg, max) = (106870.468, 112369.758, 117084.147), stdev = 2257.189
  CI (99.9%): [110861.701, 113877.815] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_711._Benchmark.benchmark_Cluster_711  thrpt   30  112369.758 ± 1508.057  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_712._Benchmark.benchmark_Cluster_712$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_712._Benchmark.benchmark_Cluster_712

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 878.625 ops/s
# Warmup Iteration   2: 6462.145 ops/s
# Warmup Iteration   3: 23077.222 ops/s
# Warmup Iteration   4: 30850.752 ops/s
# Warmup Iteration   5: 31805.488 ops/s
# Warmup Iteration   6: 33095.310 ops/s
# Warmup Iteration   7: 35658.125 ops/s
# Warmup Iteration   8: 32295.122 ops/s
# Warmup Iteration   9: 73791.702 ops/s
# Warmup Iteration  10: 74028.049 ops/s
# Warmup Iteration  11: 75645.793 ops/s
# Warmup Iteration  12: 81867.960 ops/s
# Warmup Iteration  13: 79893.144 ops/s
# Warmup Iteration  14: 81153.913 ops/s
# Warmup Iteration  15: 80488.533 ops/s
# Warmup Iteration  16: 61009.918 ops/s
# Warmup Iteration  17: 80075.792 ops/s
# Warmup Iteration  18: 76915.475 ops/s
# Warmup Iteration  19: 80644.466 ops/s
# Warmup Iteration  20: 86169.562 ops/s
# Warmup Iteration  21: 77939.703 ops/s
# Warmup Iteration  22: 82270.160 ops/s
# Warmup Iteration  23: 78217.328 ops/s
# Warmup Iteration  24: 76208.390 ops/s
# Warmup Iteration  25: 82575.630 ops/s
# Warmup Iteration  26: 82400.590 ops/s
# Warmup Iteration  27: 83970.334 ops/s
# Warmup Iteration  28: 84035.161 ops/s
# Warmup Iteration  29: 84296.414 ops/s
# Warmup Iteration  30: 81317.207 ops/s
Iteration   1: 82443.365 ops/s
Iteration   2: 81142.677 ops/s
Iteration   3: 83775.104 ops/s
Iteration   4: 82079.493 ops/s
Iteration   5: 80053.369 ops/s
Iteration   6: 83505.254 ops/s
Iteration   7: 78185.753 ops/s
Iteration   8: 81731.872 ops/s
Iteration   9: 81186.157 ops/s
Iteration  10: 86111.858 ops/s
Iteration  11: 79873.510 ops/s
Iteration  12: 84071.574 ops/s
Iteration  13: 80303.419 ops/s
Iteration  14: 82863.266 ops/s
Iteration  15: 78392.584 ops/s
Iteration  16: 78259.470 ops/s
Iteration  17: 84204.011 ops/s
Iteration  18: 82064.962 ops/s
Iteration  19: 82181.166 ops/s
Iteration  20: 82128.433 ops/s
Iteration  21: 82296.157 ops/s
Iteration  22: 83370.301 ops/s
Iteration  23: 81481.165 ops/s
Iteration  24: 83574.254 ops/s
Iteration  25: 80005.067 ops/s
Iteration  26: 84311.828 ops/s
Iteration  27: 80709.818 ops/s
Iteration  28: 79958.124 ops/s
Iteration  29: 83562.420 ops/s
Iteration  30: 79118.260 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_712._Benchmark.benchmark_Cluster_712":
  81764.823 ±(99.9%) 1334.178 ops/s [Average]
  (min, avg, max) = (78185.753, 81764.823, 86111.858), stdev = 1996.935
  CI (99.9%): [80430.645, 83099.001] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_712._Benchmark.benchmark_Cluster_712  thrpt   30  81764.823 ± 1334.178  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_713._Benchmark.benchmark_Cluster_713$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_713._Benchmark.benchmark_Cluster_713

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2464.216 ops/s
# Warmup Iteration   2: 21899.614 ops/s
# Warmup Iteration   3: 31495.821 ops/s
# Warmup Iteration   4: 85817.981 ops/s
# Warmup Iteration   5: 90651.543 ops/s
# Warmup Iteration   6: 106070.450 ops/s
# Warmup Iteration   7: 106519.718 ops/s
# Warmup Iteration   8: 100451.081 ops/s
# Warmup Iteration   9: 100891.361 ops/s
# Warmup Iteration  10: 105698.523 ops/s
# Warmup Iteration  11: 110400.284 ops/s
# Warmup Iteration  12: 108241.206 ops/s
# Warmup Iteration  13: 109645.134 ops/s
# Warmup Iteration  14: 113145.224 ops/s
# Warmup Iteration  15: 107480.144 ops/s
# Warmup Iteration  16: 109888.426 ops/s
# Warmup Iteration  17: 108519.344 ops/s
# Warmup Iteration  18: 110360.758 ops/s
# Warmup Iteration  19: 106600.592 ops/s
# Warmup Iteration  20: 105262.651 ops/s
# Warmup Iteration  21: 111292.818 ops/s
# Warmup Iteration  22: 109885.732 ops/s
# Warmup Iteration  23: 105680.387 ops/s
# Warmup Iteration  24: 107526.945 ops/s
# Warmup Iteration  25: 105656.101 ops/s
# Warmup Iteration  26: 107629.531 ops/s
# Warmup Iteration  27: 110659.097 ops/s
# Warmup Iteration  28: 106110.436 ops/s
# Warmup Iteration  29: 107964.540 ops/s
# Warmup Iteration  30: 113290.678 ops/s
Iteration   1: 109056.928 ops/s
Iteration   2: 106275.629 ops/s
Iteration   3: 109187.778 ops/s
Iteration   4: 108299.394 ops/s
Iteration   5: 110572.751 ops/s
Iteration   6: 109407.243 ops/s
Iteration   7: 110787.010 ops/s
Iteration   8: 110493.303 ops/s
Iteration   9: 108279.891 ops/s
Iteration  10: 112853.492 ops/s
Iteration  11: 109140.316 ops/s
Iteration  12: 110313.104 ops/s
Iteration  13: 107547.458 ops/s
Iteration  14: 110572.730 ops/s
Iteration  15: 109349.658 ops/s
Iteration  16: 112723.591 ops/s
Iteration  17: 109221.121 ops/s
Iteration  18: 108094.378 ops/s
Iteration  19: 107594.126 ops/s
Iteration  20: 108344.554 ops/s
Iteration  21: 112671.230 ops/s
Iteration  22: 106386.397 ops/s
Iteration  23: 111433.061 ops/s
Iteration  24: 109729.158 ops/s
Iteration  25: 106640.835 ops/s
Iteration  26: 109372.305 ops/s
Iteration  27: 106143.370 ops/s
Iteration  28: 108858.081 ops/s
Iteration  29: 106804.064 ops/s
Iteration  30: 112375.034 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_713._Benchmark.benchmark_Cluster_713":
  109284.266 ±(99.9%) 1297.691 ops/s [Average]
  (min, avg, max) = (106143.370, 109284.266, 112853.492), stdev = 1942.323
  CI (99.9%): [107986.576, 110581.957] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_713._Benchmark.benchmark_Cluster_713  thrpt   30  109284.266 ± 1297.691  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_714._Benchmark.benchmark_Cluster_714$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_714._Benchmark.benchmark_Cluster_714

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12984.710 ops/s
# Warmup Iteration   2: 41917.370 ops/s
# Warmup Iteration   3: 100726.059 ops/s
# Warmup Iteration   4: 86643.884 ops/s
# Warmup Iteration   5: 109410.216 ops/s
# Warmup Iteration   6: 108631.203 ops/s
# Warmup Iteration   7: 109866.672 ops/s
# Warmup Iteration   8: 113152.138 ops/s
# Warmup Iteration   9: 106921.406 ops/s
# Warmup Iteration  10: 110426.364 ops/s
# Warmup Iteration  11: 88234.517 ops/s
# Warmup Iteration  12: 109997.969 ops/s
# Warmup Iteration  13: 105525.489 ops/s
# Warmup Iteration  14: 112023.809 ops/s
# Warmup Iteration  15: 111380.783 ops/s
# Warmup Iteration  16: 109268.813 ops/s
# Warmup Iteration  17: 110192.827 ops/s
# Warmup Iteration  18: 115584.683 ops/s
# Warmup Iteration  19: 110139.644 ops/s
# Warmup Iteration  20: 116071.768 ops/s
# Warmup Iteration  21: 110138.731 ops/s
# Warmup Iteration  22: 113766.275 ops/s
# Warmup Iteration  23: 118035.120 ops/s
# Warmup Iteration  24: 108442.811 ops/s
# Warmup Iteration  25: 119988.958 ops/s
# Warmup Iteration  26: 116097.579 ops/s
# Warmup Iteration  27: 106433.745 ops/s
# Warmup Iteration  28: 118825.864 ops/s
# Warmup Iteration  29: 113405.132 ops/s
# Warmup Iteration  30: 113721.050 ops/s
Iteration   1: 115607.297 ops/s
Iteration   2: 116301.641 ops/s
Iteration   3: 116137.809 ops/s
Iteration   4: 114516.592 ops/s
Iteration   5: 111447.929 ops/s
Iteration   6: 114840.965 ops/s
Iteration   7: 110438.685 ops/s
Iteration   8: 114150.575 ops/s
Iteration   9: 116717.885 ops/s
Iteration  10: 111258.408 ops/s
Iteration  11: 113405.203 ops/s
Iteration  12: 112348.639 ops/s
Iteration  13: 116726.580 ops/s
Iteration  14: 112369.030 ops/s
Iteration  15: 114087.655 ops/s
Iteration  16: 114892.544 ops/s
Iteration  17: 114073.501 ops/s
Iteration  18: 116364.391 ops/s
Iteration  19: 112982.129 ops/s
Iteration  20: 114191.418 ops/s
Iteration  21: 118248.884 ops/s
Iteration  22: 113243.931 ops/s
Iteration  23: 116992.661 ops/s
Iteration  24: 111714.740 ops/s
Iteration  25: 119779.436 ops/s
Iteration  26: 110052.966 ops/s
Iteration  27: 112271.643 ops/s
Iteration  28: 118836.636 ops/s
Iteration  29: 115808.332 ops/s
Iteration  30: 116621.527 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_714._Benchmark.benchmark_Cluster_714":
  114547.654 ±(99.9%) 1652.932 ops/s [Average]
  (min, avg, max) = (110052.966, 114547.654, 119779.436), stdev = 2474.031
  CI (99.9%): [112894.722, 116200.586] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_714._Benchmark.benchmark_Cluster_714  thrpt   30  114547.654 ± 1652.932  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_715._Benchmark.benchmark_Cluster_715$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_715._Benchmark.benchmark_Cluster_715

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17320.973 ops/s
# Warmup Iteration   2: 47598.045 ops/s
# Warmup Iteration   3: 98164.012 ops/s
# Warmup Iteration   4: 128358.111 ops/s
# Warmup Iteration   5: 144057.239 ops/s
# Warmup Iteration   6: 143813.198 ops/s
# Warmup Iteration   7: 130631.981 ops/s
# Warmup Iteration   8: 142542.919 ops/s
# Warmup Iteration   9: 136285.609 ops/s
# Warmup Iteration  10: 147440.215 ops/s
# Warmup Iteration  11: 144504.933 ops/s
# Warmup Iteration  12: 149192.093 ops/s
# Warmup Iteration  13: 138410.322 ops/s
# Warmup Iteration  14: 145070.125 ops/s
# Warmup Iteration  15: 143885.211 ops/s
# Warmup Iteration  16: 145886.179 ops/s
# Warmup Iteration  17: 147134.362 ops/s
# Warmup Iteration  18: 152131.515 ops/s
# Warmup Iteration  19: 152009.585 ops/s
# Warmup Iteration  20: 144156.408 ops/s
# Warmup Iteration  21: 154624.823 ops/s
# Warmup Iteration  22: 149435.795 ops/s
# Warmup Iteration  23: 152899.353 ops/s
# Warmup Iteration  24: 150865.464 ops/s
# Warmup Iteration  25: 149355.589 ops/s
# Warmup Iteration  26: 153069.325 ops/s
# Warmup Iteration  27: 145825.026 ops/s
# Warmup Iteration  28: 154352.763 ops/s
# Warmup Iteration  29: 147507.761 ops/s
# Warmup Iteration  30: 150906.502 ops/s
Iteration   1: 152934.793 ops/s
Iteration   2: 144584.220 ops/s
Iteration   3: 157328.430 ops/s
Iteration   4: 146023.240 ops/s
Iteration   5: 147782.475 ops/s
Iteration   6: 146679.100 ops/s
Iteration   7: 152347.275 ops/s
Iteration   8: 148191.719 ops/s
Iteration   9: 150381.356 ops/s
Iteration  10: 151422.453 ops/s
Iteration  11: 146373.630 ops/s
Iteration  12: 156745.741 ops/s
Iteration  13: 146426.779 ops/s
Iteration  14: 149497.635 ops/s
Iteration  15: 150843.394 ops/s
Iteration  16: 146770.605 ops/s
Iteration  17: 154465.727 ops/s
Iteration  18: 148947.279 ops/s
Iteration  19: 150022.301 ops/s
Iteration  20: 155503.682 ops/s
Iteration  21: 146882.483 ops/s
Iteration  22: 152183.441 ops/s
Iteration  23: 148927.229 ops/s
Iteration  24: 154648.389 ops/s
Iteration  25: 146886.471 ops/s
Iteration  26: 150416.618 ops/s
Iteration  27: 154132.454 ops/s
Iteration  28: 145963.746 ops/s
Iteration  29: 150754.858 ops/s
Iteration  30: 153691.588 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_715._Benchmark.benchmark_Cluster_715":
  150258.637 ±(99.9%) 2357.858 ops/s [Average]
  (min, avg, max) = (144584.220, 150258.637, 157328.430), stdev = 3529.131
  CI (99.9%): [147900.779, 152616.495] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_715._Benchmark.benchmark_Cluster_715  thrpt   30  150258.637 ± 2357.858  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_716._Benchmark.benchmark_Cluster_716$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_716._Benchmark.benchmark_Cluster_716

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8482.628 ops/s
# Warmup Iteration   2: 25954.096 ops/s
# Warmup Iteration   3: 47486.540 ops/s
# Warmup Iteration   4: 98511.167 ops/s
# Warmup Iteration   5: 89283.546 ops/s
# Warmup Iteration   6: 87340.862 ops/s
# Warmup Iteration   7: 105082.709 ops/s
# Warmup Iteration   8: 90423.692 ops/s
# Warmup Iteration   9: 96854.918 ops/s
# Warmup Iteration  10: 94860.068 ops/s
# Warmup Iteration  11: 100542.602 ops/s
# Warmup Iteration  12: 108617.054 ops/s
# Warmup Iteration  13: 103023.945 ops/s
# Warmup Iteration  14: 101335.314 ops/s
# Warmup Iteration  15: 104501.458 ops/s
# Warmup Iteration  16: 102182.896 ops/s
# Warmup Iteration  17: 111579.858 ops/s
# Warmup Iteration  18: 105248.235 ops/s
# Warmup Iteration  19: 108889.885 ops/s
# Warmup Iteration  20: 111746.615 ops/s
# Warmup Iteration  21: 108495.080 ops/s
# Warmup Iteration  22: 109220.355 ops/s
# Warmup Iteration  23: 110220.450 ops/s
# Warmup Iteration  24: 105439.007 ops/s
# Warmup Iteration  25: 107126.978 ops/s
# Warmup Iteration  26: 109327.171 ops/s
# Warmup Iteration  27: 106579.508 ops/s
# Warmup Iteration  28: 113088.662 ops/s
# Warmup Iteration  29: 110599.593 ops/s
# Warmup Iteration  30: 107946.686 ops/s
Iteration   1: 112232.277 ops/s
Iteration   2: 108384.899 ops/s
Iteration   3: 111995.455 ops/s
Iteration   4: 109802.370 ops/s
Iteration   5: 109715.182 ops/s
Iteration   6: 113322.149 ops/s
Iteration   7: 107267.116 ops/s
Iteration   8: 106493.846 ops/s
Iteration   9: 111078.151 ops/s
Iteration  10: 103351.040 ops/s
Iteration  11: 112625.096 ops/s
Iteration  12: 106457.515 ops/s
Iteration  13: 108413.753 ops/s
Iteration  14: 110007.716 ops/s
Iteration  15: 108833.965 ops/s
Iteration  16: 108554.557 ops/s
Iteration  17: 109419.637 ops/s
Iteration  18: 109094.293 ops/s
Iteration  19: 113010.425 ops/s
Iteration  20: 106717.320 ops/s
Iteration  21: 113665.501 ops/s
Iteration  22: 105802.303 ops/s
Iteration  23: 112726.779 ops/s
Iteration  24: 109634.846 ops/s
Iteration  25: 107359.628 ops/s
Iteration  26: 109664.927 ops/s
Iteration  27: 106534.181 ops/s
Iteration  28: 110197.801 ops/s
Iteration  29: 106106.401 ops/s
Iteration  30: 105254.684 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_716._Benchmark.benchmark_Cluster_716":
  109124.127 ±(99.9%) 1783.646 ops/s [Average]
  (min, avg, max) = (103351.040, 109124.127, 113665.501), stdev = 2669.677
  CI (99.9%): [107340.482, 110907.773] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_716._Benchmark.benchmark_Cluster_716  thrpt   30  109124.127 ± 1783.646  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_717._Benchmark.benchmark_Cluster_717$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_717._Benchmark.benchmark_Cluster_717

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7529.625 ops/s
# Warmup Iteration   2: 53100.231 ops/s
# Warmup Iteration   3: 66455.906 ops/s
# Warmup Iteration   4: 121207.485 ops/s
# Warmup Iteration   5: 172657.828 ops/s
# Warmup Iteration   6: 169428.136 ops/s
# Warmup Iteration   7: 184088.839 ops/s
# Warmup Iteration   8: 197225.886 ops/s
# Warmup Iteration   9: 193630.666 ops/s
# Warmup Iteration  10: 187114.553 ops/s
# Warmup Iteration  11: 193886.079 ops/s
# Warmup Iteration  12: 189352.712 ops/s
# Warmup Iteration  13: 187652.109 ops/s
# Warmup Iteration  14: 198940.783 ops/s
# Warmup Iteration  15: 196530.582 ops/s
# Warmup Iteration  16: 182117.466 ops/s
# Warmup Iteration  17: 195162.423 ops/s
# Warmup Iteration  18: 198340.701 ops/s
# Warmup Iteration  19: 182981.222 ops/s
# Warmup Iteration  20: 197522.308 ops/s
# Warmup Iteration  21: 186029.770 ops/s
# Warmup Iteration  22: 194854.033 ops/s
# Warmup Iteration  23: 199382.704 ops/s
# Warmup Iteration  24: 183769.812 ops/s
# Warmup Iteration  25: 182052.911 ops/s
# Warmup Iteration  26: 189896.596 ops/s
# Warmup Iteration  27: 188549.143 ops/s
# Warmup Iteration  28: 188704.004 ops/s
# Warmup Iteration  29: 194566.532 ops/s
# Warmup Iteration  30: 186770.789 ops/s
Iteration   1: 196893.109 ops/s
Iteration   2: 192564.820 ops/s
Iteration   3: 193745.055 ops/s
Iteration   4: 197359.914 ops/s
Iteration   5: 180745.125 ops/s
Iteration   6: 191921.933 ops/s
Iteration   7: 195680.639 ops/s
Iteration   8: 179327.320 ops/s
Iteration   9: 189881.603 ops/s
Iteration  10: 183999.032 ops/s
Iteration  11: 194547.029 ops/s
Iteration  12: 193850.355 ops/s
Iteration  13: 182263.362 ops/s
Iteration  14: 198630.002 ops/s
Iteration  15: 189406.948 ops/s
Iteration  16: 187992.571 ops/s
Iteration  17: 196965.950 ops/s
Iteration  18: 184475.856 ops/s
Iteration  19: 189370.040 ops/s
Iteration  20: 200530.363 ops/s
Iteration  21: 192572.736 ops/s
Iteration  22: 185230.946 ops/s
Iteration  23: 193855.672 ops/s
Iteration  24: 188789.495 ops/s
Iteration  25: 188062.948 ops/s
Iteration  26: 190425.808 ops/s
Iteration  27: 184251.572 ops/s
Iteration  28: 191468.396 ops/s
Iteration  29: 185916.540 ops/s
Iteration  30: 186433.018 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_717._Benchmark.benchmark_Cluster_717":
  190238.605 ±(99.9%) 3661.285 ops/s [Average]
  (min, avg, max) = (179327.320, 190238.605, 200530.363), stdev = 5480.040
  CI (99.9%): [186577.320, 193899.890] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_717._Benchmark.benchmark_Cluster_717  thrpt   30  190238.605 ± 3661.285  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_718._Benchmark.benchmark_Cluster_718$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_718._Benchmark.benchmark_Cluster_718

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5371.073 ops/s
# Warmup Iteration   2: 23694.952 ops/s
# Warmup Iteration   3: 55956.724 ops/s
# Warmup Iteration   4: 108567.967 ops/s
# Warmup Iteration   5: 129094.667 ops/s
# Warmup Iteration   6: 132779.068 ops/s
# Warmup Iteration   7: 140256.676 ops/s
# Warmup Iteration   8: 136730.917 ops/s
# Warmup Iteration   9: 140418.659 ops/s
# Warmup Iteration  10: 131078.890 ops/s
# Warmup Iteration  11: 139327.917 ops/s
# Warmup Iteration  12: 138047.149 ops/s
# Warmup Iteration  13: 135457.001 ops/s
# Warmup Iteration  14: 136286.608 ops/s
# Warmup Iteration  15: 145265.341 ops/s
# Warmup Iteration  16: 135137.278 ops/s
# Warmup Iteration  17: 146768.852 ops/s
# Warmup Iteration  18: 139049.031 ops/s
# Warmup Iteration  19: 145449.242 ops/s
# Warmup Iteration  20: 139559.186 ops/s
# Warmup Iteration  21: 143734.386 ops/s
# Warmup Iteration  22: 142249.270 ops/s
# Warmup Iteration  23: 140905.564 ops/s
# Warmup Iteration  24: 145120.044 ops/s
# Warmup Iteration  25: 142418.969 ops/s
# Warmup Iteration  26: 143963.431 ops/s
# Warmup Iteration  27: 144293.987 ops/s
# Warmup Iteration  28: 141909.148 ops/s
# Warmup Iteration  29: 145400.802 ops/s
# Warmup Iteration  30: 142151.594 ops/s
Iteration   1: 139980.097 ops/s
Iteration   2: 149033.192 ops/s
Iteration   3: 139311.386 ops/s
Iteration   4: 149549.332 ops/s
Iteration   5: 131208.612 ops/s
Iteration   6: 145136.321 ops/s
Iteration   7: 148887.032 ops/s
Iteration   8: 141712.227 ops/s
Iteration   9: 148073.360 ops/s
Iteration  10: 143406.580 ops/s
Iteration  11: 143076.853 ops/s
Iteration  12: 144453.948 ops/s
Iteration  13: 134306.445 ops/s
Iteration  14: 149497.807 ops/s
Iteration  15: 143749.195 ops/s
Iteration  16: 148425.565 ops/s
Iteration  17: 140259.696 ops/s
Iteration  18: 148005.306 ops/s
Iteration  19: 139493.121 ops/s
Iteration  20: 148590.183 ops/s
Iteration  21: 141401.922 ops/s
Iteration  22: 142990.822 ops/s
Iteration  23: 142821.412 ops/s
Iteration  24: 142036.201 ops/s
Iteration  25: 147962.424 ops/s
Iteration  26: 147522.107 ops/s
Iteration  27: 138162.575 ops/s
Iteration  28: 142889.317 ops/s
Iteration  29: 141917.583 ops/s
Iteration  30: 149065.714 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_718._Benchmark.benchmark_Cluster_718":
  143764.211 ±(99.9%) 3104.895 ops/s [Average]
  (min, avg, max) = (131208.612, 143764.211, 149549.332), stdev = 4647.261
  CI (99.9%): [140659.316, 146869.106] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_718._Benchmark.benchmark_Cluster_718  thrpt   30  143764.211 ± 3104.895  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_719._Benchmark.benchmark_Cluster_719$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_719._Benchmark.benchmark_Cluster_719

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19065.949 ops/s
# Warmup Iteration   2: 36274.001 ops/s
# Warmup Iteration   3: 60215.227 ops/s
# Warmup Iteration   4: 130295.949 ops/s
# Warmup Iteration   5: 140458.946 ops/s
# Warmup Iteration   6: 147706.109 ops/s
# Warmup Iteration   7: 141311.650 ops/s
# Warmup Iteration   8: 144945.252 ops/s
# Warmup Iteration   9: 140709.506 ops/s
# Warmup Iteration  10: 127275.016 ops/s
# Warmup Iteration  11: 140136.055 ops/s
# Warmup Iteration  12: 143606.534 ops/s
# Warmup Iteration  13: 141822.693 ops/s
# Warmup Iteration  14: 144810.735 ops/s
# Warmup Iteration  15: 144507.561 ops/s
# Warmup Iteration  16: 148247.656 ops/s
# Warmup Iteration  17: 155841.134 ops/s
# Warmup Iteration  18: 149193.447 ops/s
# Warmup Iteration  19: 155347.510 ops/s
# Warmup Iteration  20: 153275.814 ops/s
# Warmup Iteration  21: 159738.911 ops/s
# Warmup Iteration  22: 153271.663 ops/s
# Warmup Iteration  23: 152475.430 ops/s
# Warmup Iteration  24: 152219.402 ops/s
# Warmup Iteration  25: 156510.328 ops/s
# Warmup Iteration  26: 152012.311 ops/s
# Warmup Iteration  27: 153845.981 ops/s
# Warmup Iteration  28: 157966.074 ops/s
# Warmup Iteration  29: 147058.039 ops/s
# Warmup Iteration  30: 155794.158 ops/s
Iteration   1: 150777.304 ops/s
Iteration   2: 152861.755 ops/s
Iteration   3: 160008.585 ops/s
Iteration   4: 150098.446 ops/s
Iteration   5: 155303.236 ops/s
Iteration   6: 150290.807 ops/s
Iteration   7: 153034.559 ops/s
Iteration   8: 157267.558 ops/s
Iteration   9: 152740.766 ops/s
Iteration  10: 158196.942 ops/s
Iteration  11: 149636.800 ops/s
Iteration  12: 157448.523 ops/s
Iteration  13: 150702.423 ops/s
Iteration  14: 154254.616 ops/s
Iteration  15: 156492.615 ops/s
Iteration  16: 150158.806 ops/s
Iteration  17: 158774.507 ops/s
Iteration  18: 151501.964 ops/s
Iteration  19: 157044.645 ops/s
Iteration  20: 152091.051 ops/s
Iteration  21: 152269.984 ops/s
Iteration  22: 159608.427 ops/s
Iteration  23: 147547.778 ops/s
Iteration  24: 157276.482 ops/s
Iteration  25: 149034.322 ops/s
Iteration  26: 123913.412 ops/s
Iteration  27: 156616.864 ops/s
Iteration  28: 154244.656 ops/s
Iteration  29: 157253.950 ops/s
Iteration  30: 152634.035 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_719._Benchmark.benchmark_Cluster_719":
  152969.527 ±(99.9%) 4330.291 ops/s [Average]
  (min, avg, max) = (123913.412, 152969.527, 160008.585), stdev = 6481.377
  CI (99.9%): [148639.236, 157299.819] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_719._Benchmark.benchmark_Cluster_719  thrpt   30  152969.527 ± 4330.291  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_72._Benchmark.benchmark_Cluster_72$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_72._Benchmark.benchmark_Cluster_72

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 53976.741 ops/s
# Warmup Iteration   2: 125804.071 ops/s
# Warmup Iteration   3: 171027.687 ops/s
# Warmup Iteration   4: 175511.996 ops/s
# Warmup Iteration   5: 181221.402 ops/s
# Warmup Iteration   6: 172056.540 ops/s
# Warmup Iteration   7: 176932.628 ops/s
# Warmup Iteration   8: 173190.393 ops/s
# Warmup Iteration   9: 169236.429 ops/s
# Warmup Iteration  10: 182634.682 ops/s
# Warmup Iteration  11: 165019.838 ops/s
# Warmup Iteration  12: 176466.938 ops/s
# Warmup Iteration  13: 176865.322 ops/s
# Warmup Iteration  14: 175982.928 ops/s
# Warmup Iteration  15: 171920.647 ops/s
# Warmup Iteration  16: 174529.265 ops/s
# Warmup Iteration  17: 194023.813 ops/s
# Warmup Iteration  18: 185206.329 ops/s
# Warmup Iteration  19: 189743.103 ops/s
# Warmup Iteration  20: 181350.960 ops/s
# Warmup Iteration  21: 195797.433 ops/s
# Warmup Iteration  22: 182233.869 ops/s
# Warmup Iteration  23: 190857.808 ops/s
# Warmup Iteration  24: 183928.802 ops/s
# Warmup Iteration  25: 184867.108 ops/s
# Warmup Iteration  26: 194888.983 ops/s
# Warmup Iteration  27: 180650.805 ops/s
# Warmup Iteration  28: 187772.737 ops/s
# Warmup Iteration  29: 189378.180 ops/s
# Warmup Iteration  30: 181519.552 ops/s
Iteration   1: 196679.721 ops/s
Iteration   2: 191761.019 ops/s
Iteration   3: 183700.278 ops/s
Iteration   4: 193683.774 ops/s
Iteration   5: 190301.824 ops/s
Iteration   6: 184821.264 ops/s
Iteration   7: 195507.173 ops/s
Iteration   8: 179905.359 ops/s
Iteration   9: 191752.550 ops/s
Iteration  10: 184777.165 ops/s
Iteration  11: 187988.683 ops/s
Iteration  12: 193475.449 ops/s
Iteration  13: 186082.582 ops/s
Iteration  14: 191397.104 ops/s
Iteration  15: 191449.783 ops/s
Iteration  16: 181540.159 ops/s
Iteration  17: 188889.769 ops/s
Iteration  18: 194018.572 ops/s
Iteration  19: 182404.200 ops/s
Iteration  20: 193660.739 ops/s
Iteration  21: 183442.658 ops/s
Iteration  22: 192923.740 ops/s
Iteration  23: 184609.107 ops/s
Iteration  24: 188846.659 ops/s
Iteration  25: 183187.637 ops/s
Iteration  26: 186751.569 ops/s
Iteration  27: 193542.039 ops/s
Iteration  28: 185250.215 ops/s
Iteration  29: 185993.701 ops/s
Iteration  30: 189785.301 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_72._Benchmark.benchmark_Cluster_72":
  188604.326 ±(99.9%) 3083.480 ops/s [Average]
  (min, avg, max) = (179905.359, 188604.326, 196679.721), stdev = 4615.208
  CI (99.9%): [185520.846, 191687.806] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_72._Benchmark.benchmark_Cluster_72  thrpt   30  188604.326 ± 3083.480  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_720._Benchmark.benchmark_Cluster_720$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_720._Benchmark.benchmark_Cluster_720

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8519.962 ops/s
# Warmup Iteration   2: 33158.599 ops/s
# Warmup Iteration   3: 39388.513 ops/s
# Warmup Iteration   4: 104954.844 ops/s
# Warmup Iteration   5: 101698.564 ops/s
# Warmup Iteration   6: 113603.457 ops/s
# Warmup Iteration   7: 117433.694 ops/s
# Warmup Iteration   8: 101998.847 ops/s
# Warmup Iteration   9: 123859.342 ops/s
# Warmup Iteration  10: 112845.274 ops/s
# Warmup Iteration  11: 115923.298 ops/s
# Warmup Iteration  12: 121973.270 ops/s
# Warmup Iteration  13: 116730.881 ops/s
# Warmup Iteration  14: 118822.166 ops/s
# Warmup Iteration  15: 119051.633 ops/s
# Warmup Iteration  16: 117917.585 ops/s
# Warmup Iteration  17: 124531.438 ops/s
# Warmup Iteration  18: 124709.243 ops/s
# Warmup Iteration  19: 121993.364 ops/s
# Warmup Iteration  20: 127881.677 ops/s
# Warmup Iteration  21: 121964.804 ops/s
# Warmup Iteration  22: 126391.450 ops/s
# Warmup Iteration  23: 127577.545 ops/s
# Warmup Iteration  24: 121038.170 ops/s
# Warmup Iteration  25: 125184.888 ops/s
# Warmup Iteration  26: 123073.949 ops/s
# Warmup Iteration  27: 121578.021 ops/s
# Warmup Iteration  28: 123628.396 ops/s
# Warmup Iteration  29: 120882.228 ops/s
# Warmup Iteration  30: 127606.052 ops/s
Iteration   1: 122408.158 ops/s
Iteration   2: 124263.382 ops/s
Iteration   3: 120390.038 ops/s
Iteration   4: 123727.412 ops/s
Iteration   5: 128228.598 ops/s
Iteration   6: 120415.599 ops/s
Iteration   7: 125726.104 ops/s
Iteration   8: 121555.200 ops/s
Iteration   9: 122944.733 ops/s
Iteration  10: 126105.950 ops/s
Iteration  11: 120773.663 ops/s
Iteration  12: 127815.192 ops/s
Iteration  13: 121275.553 ops/s
Iteration  14: 118572.066 ops/s
Iteration  15: 129521.842 ops/s
Iteration  16: 116937.208 ops/s
Iteration  17: 128933.115 ops/s
Iteration  18: 119878.843 ops/s
Iteration  19: 126239.113 ops/s
Iteration  20: 122244.777 ops/s
Iteration  21: 104338.415 ops/s
Iteration  22: 127469.959 ops/s
Iteration  23: 123072.323 ops/s
Iteration  24: 125711.875 ops/s
Iteration  25: 121248.646 ops/s
Iteration  26: 125792.188 ops/s
Iteration  27: 121558.827 ops/s
Iteration  28: 126046.669 ops/s
Iteration  29: 120923.071 ops/s
Iteration  30: 122456.983 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_720._Benchmark.benchmark_Cluster_720":
  122885.850 ±(99.9%) 3164.349 ops/s [Average]
  (min, avg, max) = (104338.415, 122885.850, 129521.842), stdev = 4736.249
  CI (99.9%): [119721.501, 126050.199] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_720._Benchmark.benchmark_Cluster_720  thrpt   30  122885.850 ± 3164.349  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_721._Benchmark.benchmark_Cluster_721$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_721._Benchmark.benchmark_Cluster_721

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5980.678 ops/s
# Warmup Iteration   2: 23971.878 ops/s
# Warmup Iteration   3: 45160.200 ops/s
# Warmup Iteration   4: 47852.462 ops/s
# Warmup Iteration   5: 88489.431 ops/s
# Warmup Iteration   6: 91863.942 ops/s
# Warmup Iteration   7: 102765.011 ops/s
# Warmup Iteration   8: 96883.041 ops/s
# Warmup Iteration   9: 101929.620 ops/s
# Warmup Iteration  10: 101282.216 ops/s
# Warmup Iteration  11: 98799.793 ops/s
# Warmup Iteration  12: 102087.834 ops/s
# Warmup Iteration  13: 96626.624 ops/s
# Warmup Iteration  14: 100548.540 ops/s
# Warmup Iteration  15: 99494.688 ops/s
# Warmup Iteration  16: 100724.982 ops/s
# Warmup Iteration  17: 104345.589 ops/s
# Warmup Iteration  18: 101059.479 ops/s
# Warmup Iteration  19: 106925.043 ops/s
# Warmup Iteration  20: 104096.108 ops/s
# Warmup Iteration  21: 103354.907 ops/s
# Warmup Iteration  22: 106261.498 ops/s
# Warmup Iteration  23: 104277.157 ops/s
# Warmup Iteration  24: 105067.550 ops/s
# Warmup Iteration  25: 101182.304 ops/s
# Warmup Iteration  26: 104740.458 ops/s
# Warmup Iteration  27: 104895.353 ops/s
# Warmup Iteration  28: 102218.900 ops/s
# Warmup Iteration  29: 109088.135 ops/s
# Warmup Iteration  30: 109139.023 ops/s
Iteration   1: 103193.642 ops/s
Iteration   2: 107195.176 ops/s
Iteration   3: 101596.676 ops/s
Iteration   4: 103560.038 ops/s
Iteration   5: 107622.636 ops/s
Iteration   6: 99747.003 ops/s
Iteration   7: 103939.557 ops/s
Iteration   8: 100356.573 ops/s
Iteration   9: 103070.854 ops/s
Iteration  10: 103890.339 ops/s
Iteration  11: 102680.033 ops/s
Iteration  12: 106417.858 ops/s
Iteration  13: 102865.804 ops/s
Iteration  14: 107003.614 ops/s
Iteration  15: 107553.901 ops/s
Iteration  16: 102429.110 ops/s
Iteration  17: 104830.457 ops/s
Iteration  18: 104550.693 ops/s
Iteration  19: 103146.597 ops/s
Iteration  20: 104599.227 ops/s
Iteration  21: 101953.644 ops/s
Iteration  22: 98300.193 ops/s
Iteration  23: 105370.623 ops/s
Iteration  24: 100855.496 ops/s
Iteration  25: 105922.577 ops/s
Iteration  26: 100824.930 ops/s
Iteration  27: 109646.418 ops/s
Iteration  28: 103695.211 ops/s
Iteration  29: 100205.563 ops/s
Iteration  30: 103393.318 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_721._Benchmark.benchmark_Cluster_721":
  103680.592 ±(99.9%) 1768.392 ops/s [Average]
  (min, avg, max) = (98300.193, 103680.592, 109646.418), stdev = 2646.845
  CI (99.9%): [101912.200, 105448.984] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_721._Benchmark.benchmark_Cluster_721  thrpt   30  103680.592 ± 1768.392  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_722._Benchmark.benchmark_Cluster_722$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_722._Benchmark.benchmark_Cluster_722

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17678.634 ops/s
# Warmup Iteration   2: 51233.471 ops/s
# Warmup Iteration   3: 92129.675 ops/s
# Warmup Iteration   4: 124942.118 ops/s
# Warmup Iteration   5: 131854.929 ops/s
# Warmup Iteration   6: 124236.640 ops/s
# Warmup Iteration   7: 135055.702 ops/s
# Warmup Iteration   8: 133498.513 ops/s
# Warmup Iteration   9: 129458.993 ops/s
# Warmup Iteration  10: 135323.786 ops/s
# Warmup Iteration  11: 128247.520 ops/s
# Warmup Iteration  12: 132900.942 ops/s
# Warmup Iteration  13: 136293.530 ops/s
# Warmup Iteration  14: 128897.731 ops/s
# Warmup Iteration  15: 136458.083 ops/s
# Warmup Iteration  16: 129435.374 ops/s
# Warmup Iteration  17: 135489.189 ops/s
# Warmup Iteration  18: 138945.365 ops/s
# Warmup Iteration  19: 135306.110 ops/s
# Warmup Iteration  20: 141042.025 ops/s
# Warmup Iteration  21: 131977.376 ops/s
# Warmup Iteration  22: 135321.483 ops/s
# Warmup Iteration  23: 144585.419 ops/s
# Warmup Iteration  24: 135444.521 ops/s
# Warmup Iteration  25: 137515.233 ops/s
# Warmup Iteration  26: 140161.355 ops/s
# Warmup Iteration  27: 134453.335 ops/s
# Warmup Iteration  28: 142876.007 ops/s
# Warmup Iteration  29: 143349.242 ops/s
# Warmup Iteration  30: 128168.788 ops/s
Iteration   1: 142892.504 ops/s
Iteration   2: 136229.350 ops/s
Iteration   3: 140916.612 ops/s
Iteration   4: 142407.799 ops/s
Iteration   5: 137118.011 ops/s
Iteration   6: 135700.874 ops/s
Iteration   7: 141756.693 ops/s
Iteration   8: 136257.725 ops/s
Iteration   9: 139336.836 ops/s
Iteration  10: 141083.277 ops/s
Iteration  11: 135269.610 ops/s
Iteration  12: 142369.077 ops/s
Iteration  13: 134995.348 ops/s
Iteration  14: 136026.269 ops/s
Iteration  15: 111359.272 ops/s
Iteration  16: 141046.086 ops/s
Iteration  17: 138285.307 ops/s
Iteration  18: 133503.703 ops/s
Iteration  19: 142026.811 ops/s
Iteration  20: 132828.442 ops/s
Iteration  21: 141937.090 ops/s
Iteration  22: 134581.289 ops/s
Iteration  23: 138737.979 ops/s
Iteration  24: 143289.994 ops/s
Iteration  25: 141148.069 ops/s
Iteration  26: 134242.357 ops/s
Iteration  27: 137008.121 ops/s
Iteration  28: 140897.128 ops/s
Iteration  29: 134275.786 ops/s
Iteration  30: 135413.950 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_722._Benchmark.benchmark_Cluster_722":
  137431.379 ±(99.9%) 3945.257 ops/s [Average]
  (min, avg, max) = (111359.272, 137431.379, 143289.994), stdev = 5905.075
  CI (99.9%): [133486.122, 141376.636] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_722._Benchmark.benchmark_Cluster_722  thrpt   30  137431.379 ± 3945.257  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_723._Benchmark.benchmark_Cluster_723$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_723._Benchmark.benchmark_Cluster_723

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10149.048 ops/s
# Warmup Iteration   2: 36873.765 ops/s
# Warmup Iteration   3: 82819.757 ops/s
# Warmup Iteration   4: 78289.303 ops/s
# Warmup Iteration   5: 85800.215 ops/s
# Warmup Iteration   6: 97262.418 ops/s
# Warmup Iteration   7: 107762.364 ops/s
# Warmup Iteration   8: 113642.564 ops/s
# Warmup Iteration   9: 106939.389 ops/s
# Warmup Iteration  10: 112277.807 ops/s
# Warmup Iteration  11: 112911.592 ops/s
# Warmup Iteration  12: 106358.172 ops/s
# Warmup Iteration  13: 111281.339 ops/s
# Warmup Iteration  14: 109310.104 ops/s
# Warmup Iteration  15: 110622.811 ops/s
# Warmup Iteration  16: 106901.128 ops/s
# Warmup Iteration  17: 114976.679 ops/s
# Warmup Iteration  18: 116604.327 ops/s
# Warmup Iteration  19: 119053.339 ops/s
# Warmup Iteration  20: 112014.183 ops/s
# Warmup Iteration  21: 119120.227 ops/s
# Warmup Iteration  22: 110902.609 ops/s
# Warmup Iteration  23: 114559.367 ops/s
# Warmup Iteration  24: 118126.554 ops/s
# Warmup Iteration  25: 113087.358 ops/s
# Warmup Iteration  26: 115176.419 ops/s
# Warmup Iteration  27: 116648.666 ops/s
# Warmup Iteration  28: 118805.106 ops/s
# Warmup Iteration  29: 112312.009 ops/s
# Warmup Iteration  30: 121192.339 ops/s
Iteration   1: 111656.953 ops/s
Iteration   2: 117586.773 ops/s
Iteration   3: 115034.298 ops/s
Iteration   4: 114623.471 ops/s
Iteration   5: 115141.481 ops/s
Iteration   6: 114711.432 ops/s
Iteration   7: 113586.441 ops/s
Iteration   8: 118327.211 ops/s
Iteration   9: 114437.765 ops/s
Iteration  10: 114342.158 ops/s
Iteration  11: 112620.132 ops/s
Iteration  12: 114365.247 ops/s
Iteration  13: 111064.108 ops/s
Iteration  14: 115936.026 ops/s
Iteration  15: 113386.990 ops/s
Iteration  16: 120707.581 ops/s
Iteration  17: 112970.371 ops/s
Iteration  18: 120600.977 ops/s
Iteration  19: 113344.838 ops/s
Iteration  20: 115002.861 ops/s
Iteration  21: 111399.953 ops/s
Iteration  22: 117133.627 ops/s
Iteration  23: 113732.783 ops/s
Iteration  24: 114312.197 ops/s
Iteration  25: 121213.002 ops/s
Iteration  26: 111621.841 ops/s
Iteration  27: 120635.561 ops/s
Iteration  28: 112257.121 ops/s
Iteration  29: 114451.488 ops/s
Iteration  30: 118301.157 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_723._Benchmark.benchmark_Cluster_723":
  115150.195 ±(99.9%) 1950.563 ops/s [Average]
  (min, avg, max) = (111064.108, 115150.195, 121213.002), stdev = 2919.511
  CI (99.9%): [113199.632, 117100.758] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_723._Benchmark.benchmark_Cluster_723  thrpt   30  115150.195 ± 1950.563  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_724._Benchmark.benchmark_Cluster_724$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_724._Benchmark.benchmark_Cluster_724

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10706.525 ops/s
# Warmup Iteration   2: 83579.649 ops/s
# Warmup Iteration   3: 72808.625 ops/s
# Warmup Iteration   4: 110033.291 ops/s
# Warmup Iteration   5: 109129.260 ops/s
# Warmup Iteration   6: 121969.182 ops/s
# Warmup Iteration   7: 115133.672 ops/s
# Warmup Iteration   8: 119930.627 ops/s
# Warmup Iteration   9: 120395.004 ops/s
# Warmup Iteration  10: 115737.434 ops/s
# Warmup Iteration  11: 123032.765 ops/s
# Warmup Iteration  12: 116044.540 ops/s
# Warmup Iteration  13: 117697.398 ops/s
# Warmup Iteration  14: 118095.733 ops/s
# Warmup Iteration  15: 121398.778 ops/s
# Warmup Iteration  16: 119050.848 ops/s
# Warmup Iteration  17: 120239.470 ops/s
# Warmup Iteration  18: 128221.231 ops/s
# Warmup Iteration  19: 122431.399 ops/s
# Warmup Iteration  20: 125149.357 ops/s
# Warmup Iteration  21: 128380.284 ops/s
# Warmup Iteration  22: 121652.489 ops/s
# Warmup Iteration  23: 123551.873 ops/s
# Warmup Iteration  24: 123585.374 ops/s
# Warmup Iteration  25: 121275.095 ops/s
# Warmup Iteration  26: 127903.438 ops/s
# Warmup Iteration  27: 121958.240 ops/s
# Warmup Iteration  28: 125679.512 ops/s
# Warmup Iteration  29: 124332.224 ops/s
# Warmup Iteration  30: 122481.870 ops/s
Iteration   1: 122491.836 ops/s
Iteration   2: 127787.986 ops/s
Iteration   3: 125421.988 ops/s
Iteration   4: 122346.264 ops/s
Iteration   5: 128008.051 ops/s
Iteration   6: 122705.715 ops/s
Iteration   7: 122962.306 ops/s
Iteration   8: 125648.892 ops/s
Iteration   9: 124640.111 ops/s
Iteration  10: 106015.634 ops/s
Iteration  11: 122340.669 ops/s
Iteration  12: 125917.393 ops/s
Iteration  13: 122688.740 ops/s
Iteration  14: 124354.393 ops/s
Iteration  15: 126100.699 ops/s
Iteration  16: 120266.844 ops/s
Iteration  17: 124599.114 ops/s
Iteration  18: 123435.751 ops/s
Iteration  19: 122325.189 ops/s
Iteration  20: 127248.786 ops/s
Iteration  21: 122611.743 ops/s
Iteration  22: 127807.303 ops/s
Iteration  23: 120120.350 ops/s
Iteration  24: 124547.633 ops/s
Iteration  25: 122099.264 ops/s
Iteration  26: 124605.413 ops/s
Iteration  27: 128855.019 ops/s
Iteration  28: 123621.077 ops/s
Iteration  29: 122721.156 ops/s
Iteration  30: 121936.482 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_724._Benchmark.benchmark_Cluster_724":
  123541.060 ±(99.9%) 2679.547 ops/s [Average]
  (min, avg, max) = (106015.634, 123541.060, 128855.019), stdev = 4010.620
  CI (99.9%): [120861.513, 126220.607] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_724._Benchmark.benchmark_Cluster_724  thrpt   30  123541.060 ± 2679.547  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_725._Benchmark.benchmark_Cluster_725$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_725._Benchmark.benchmark_Cluster_725

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3768.949 ops/s
# Warmup Iteration   2: 36633.106 ops/s
# Warmup Iteration   3: 108257.664 ops/s
# Warmup Iteration   4: 107037.852 ops/s
# Warmup Iteration   5: 110241.282 ops/s
# Warmup Iteration   6: 114327.805 ops/s
# Warmup Iteration   7: 115525.347 ops/s
# Warmup Iteration   8: 116731.095 ops/s
# Warmup Iteration   9: 118584.638 ops/s
# Warmup Iteration  10: 117309.485 ops/s
# Warmup Iteration  11: 117435.876 ops/s
# Warmup Iteration  12: 109395.954 ops/s
# Warmup Iteration  13: 122859.980 ops/s
# Warmup Iteration  14: 115232.427 ops/s
# Warmup Iteration  15: 116704.843 ops/s
# Warmup Iteration  16: 118163.928 ops/s
# Warmup Iteration  17: 123168.642 ops/s
# Warmup Iteration  18: 128510.601 ops/s
# Warmup Iteration  19: 121099.596 ops/s
# Warmup Iteration  20: 120852.391 ops/s
# Warmup Iteration  21: 127843.890 ops/s
# Warmup Iteration  22: 120847.269 ops/s
# Warmup Iteration  23: 125620.192 ops/s
# Warmup Iteration  24: 126005.882 ops/s
# Warmup Iteration  25: 122799.527 ops/s
# Warmup Iteration  26: 124078.661 ops/s
# Warmup Iteration  27: 120056.294 ops/s
# Warmup Iteration  28: 127165.361 ops/s
# Warmup Iteration  29: 119271.236 ops/s
# Warmup Iteration  30: 123427.576 ops/s
Iteration   1: 120934.982 ops/s
Iteration   2: 123536.255 ops/s
Iteration   3: 126707.336 ops/s
Iteration   4: 118405.323 ops/s
Iteration   5: 123686.069 ops/s
Iteration   6: 120935.155 ops/s
Iteration   7: 122557.197 ops/s
Iteration   8: 126827.015 ops/s
Iteration   9: 120386.571 ops/s
Iteration  10: 123393.939 ops/s
Iteration  11: 121588.472 ops/s
Iteration  12: 125278.550 ops/s
Iteration  13: 123801.522 ops/s
Iteration  14: 120315.584 ops/s
Iteration  15: 127670.195 ops/s
Iteration  16: 118834.685 ops/s
Iteration  17: 125243.147 ops/s
Iteration  18: 123235.893 ops/s
Iteration  19: 125284.740 ops/s
Iteration  20: 120205.036 ops/s
Iteration  21: 117228.324 ops/s
Iteration  22: 128118.329 ops/s
Iteration  23: 118609.588 ops/s
Iteration  24: 126802.685 ops/s
Iteration  25: 127160.974 ops/s
Iteration  26: 121632.446 ops/s
Iteration  27: 127319.789 ops/s
Iteration  28: 120150.802 ops/s
Iteration  29: 122474.491 ops/s
Iteration  30: 120089.634 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_725._Benchmark.benchmark_Cluster_725":
  122947.158 ±(99.9%) 2098.695 ops/s [Average]
  (min, avg, max) = (117228.324, 122947.158, 128118.329), stdev = 3141.228
  CI (99.9%): [120848.463, 125045.852] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_725._Benchmark.benchmark_Cluster_725  thrpt   30  122947.158 ± 2098.695  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_726._Benchmark.benchmark_Cluster_726$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_726._Benchmark.benchmark_Cluster_726

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 28811.064 ops/s
# Warmup Iteration   2: 96494.847 ops/s
# Warmup Iteration   3: 120861.480 ops/s
# Warmup Iteration   4: 355722.491 ops/s
# Warmup Iteration   5: 342414.380 ops/s
# Warmup Iteration   6: 367526.549 ops/s
# Warmup Iteration   7: 353638.154 ops/s
# Warmup Iteration   8: 333568.591 ops/s
# Warmup Iteration   9: 366241.531 ops/s
# Warmup Iteration  10: 315646.443 ops/s
# Warmup Iteration  11: 332981.274 ops/s
# Warmup Iteration  12: 327184.093 ops/s
# Warmup Iteration  13: 352757.049 ops/s
# Warmup Iteration  14: 358209.820 ops/s
# Warmup Iteration  15: 344700.258 ops/s
# Warmup Iteration  16: 365239.100 ops/s
# Warmup Iteration  17: 359371.993 ops/s
# Warmup Iteration  18: 355750.561 ops/s
# Warmup Iteration  19: 374858.469 ops/s
# Warmup Iteration  20: 324578.632 ops/s
# Warmup Iteration  21: 375235.417 ops/s
# Warmup Iteration  22: 374922.867 ops/s
# Warmup Iteration  23: 375031.403 ops/s
# Warmup Iteration  24: 355938.842 ops/s
# Warmup Iteration  25: 355968.838 ops/s
# Warmup Iteration  26: 354645.700 ops/s
# Warmup Iteration  27: 368646.193 ops/s
# Warmup Iteration  28: 354154.640 ops/s
# Warmup Iteration  29: 358918.244 ops/s
# Warmup Iteration  30: 376566.593 ops/s
Iteration   1: 348611.055 ops/s
Iteration   2: 369148.730 ops/s
Iteration   3: 361997.364 ops/s
Iteration   4: 287203.731 ops/s
Iteration   5: 370990.749 ops/s
Iteration   6: 362325.419 ops/s
Iteration   7: 366630.358 ops/s
Iteration   8: 361236.163 ops/s
Iteration   9: 367092.380 ops/s
Iteration  10: 364466.012 ops/s
Iteration  11: 356703.280 ops/s
Iteration  12: 370195.361 ops/s
Iteration  13: 358464.678 ops/s
Iteration  14: 364580.787 ops/s
Iteration  15: 354548.801 ops/s
Iteration  16: 368824.495 ops/s
Iteration  17: 361046.421 ops/s
Iteration  18: 364483.853 ops/s
Iteration  19: 365053.847 ops/s
Iteration  20: 360294.344 ops/s
Iteration  21: 374437.751 ops/s
Iteration  22: 357693.677 ops/s
Iteration  23: 361217.838 ops/s
Iteration  24: 362945.872 ops/s
Iteration  25: 368631.282 ops/s
Iteration  26: 363550.089 ops/s
Iteration  27: 359505.800 ops/s
Iteration  28: 356745.788 ops/s
Iteration  29: 370410.479 ops/s
Iteration  30: 358370.627 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_726._Benchmark.benchmark_Cluster_726":
  360580.234 ±(99.9%) 9982.453 ops/s [Average]
  (min, avg, max) = (287203.731, 360580.234, 374437.751), stdev = 14941.267
  CI (99.9%): [350597.781, 370562.688] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_726._Benchmark.benchmark_Cluster_726  thrpt   30  360580.234 ± 9982.453  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_727._Benchmark.benchmark_Cluster_727$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_727._Benchmark.benchmark_Cluster_727

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2233.451 ops/s
# Warmup Iteration   2: 30949.327 ops/s
# Warmup Iteration   3: 41890.434 ops/s
# Warmup Iteration   4: 74119.900 ops/s
# Warmup Iteration   5: 104779.377 ops/s
# Warmup Iteration   6: 102329.820 ops/s
# Warmup Iteration   7: 108341.384 ops/s
# Warmup Iteration   8: 104975.657 ops/s
# Warmup Iteration   9: 106772.581 ops/s
# Warmup Iteration  10: 105726.779 ops/s
# Warmup Iteration  11: 109705.034 ops/s
# Warmup Iteration  12: 113181.320 ops/s
# Warmup Iteration  13: 99785.094 ops/s
# Warmup Iteration  14: 110018.113 ops/s
# Warmup Iteration  15: 107143.210 ops/s
# Warmup Iteration  16: 111564.708 ops/s
# Warmup Iteration  17: 113445.806 ops/s
# Warmup Iteration  18: 115699.333 ops/s
# Warmup Iteration  19: 117226.423 ops/s
# Warmup Iteration  20: 107655.248 ops/s
# Warmup Iteration  21: 116218.485 ops/s
# Warmup Iteration  22: 111178.296 ops/s
# Warmup Iteration  23: 113994.945 ops/s
# Warmup Iteration  24: 109682.098 ops/s
# Warmup Iteration  25: 114916.603 ops/s
# Warmup Iteration  26: 112986.002 ops/s
# Warmup Iteration  27: 111101.307 ops/s
# Warmup Iteration  28: 115630.736 ops/s
# Warmup Iteration  29: 111326.229 ops/s
# Warmup Iteration  30: 113589.029 ops/s
Iteration   1: 111033.582 ops/s
Iteration   2: 113681.742 ops/s
Iteration   3: 110357.189 ops/s
Iteration   4: 111982.383 ops/s
Iteration   5: 113614.066 ops/s
Iteration   6: 108613.897 ops/s
Iteration   7: 114612.303 ops/s
Iteration   8: 110845.034 ops/s
Iteration   9: 113839.277 ops/s
Iteration  10: 115253.513 ops/s
Iteration  11: 110373.310 ops/s
Iteration  12: 117039.524 ops/s
Iteration  13: 106662.286 ops/s
Iteration  14: 114335.189 ops/s
Iteration  15: 116288.893 ops/s
Iteration  16: 107629.905 ops/s
Iteration  17: 116452.751 ops/s
Iteration  18: 116808.211 ops/s
Iteration  19: 108261.007 ops/s
Iteration  20: 115384.181 ops/s
Iteration  21: 112223.600 ops/s
Iteration  22: 114965.627 ops/s
Iteration  23: 110216.758 ops/s
Iteration  24: 113321.408 ops/s
Iteration  25: 112789.332 ops/s
Iteration  26: 112885.312 ops/s
Iteration  27: 111169.569 ops/s
Iteration  28: 108760.071 ops/s
Iteration  29: 113245.339 ops/s
Iteration  30: 109290.347 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_727._Benchmark.benchmark_Cluster_727":
  112397.854 ±(99.9%) 1926.117 ops/s [Average]
  (min, avg, max) = (106662.286, 112397.854, 117039.524), stdev = 2882.921
  CI (99.9%): [110471.737, 114323.971] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_727._Benchmark.benchmark_Cluster_727  thrpt   30  112397.854 ± 1926.117  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_728._Benchmark.benchmark_Cluster_728$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_728._Benchmark.benchmark_Cluster_728

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 30587.236 ops/s
# Warmup Iteration   2: 106133.563 ops/s
# Warmup Iteration   3: 117171.879 ops/s
# Warmup Iteration   4: 130339.340 ops/s
# Warmup Iteration   5: 130986.572 ops/s
# Warmup Iteration   6: 133102.407 ops/s
# Warmup Iteration   7: 136668.505 ops/s
# Warmup Iteration   8: 129956.239 ops/s
# Warmup Iteration   9: 133986.092 ops/s
# Warmup Iteration  10: 136060.363 ops/s
# Warmup Iteration  11: 125963.551 ops/s
# Warmup Iteration  12: 134397.889 ops/s
# Warmup Iteration  13: 127805.919 ops/s
# Warmup Iteration  14: 135788.891 ops/s
# Warmup Iteration  15: 128482.733 ops/s
# Warmup Iteration  16: 133574.615 ops/s
# Warmup Iteration  17: 144318.713 ops/s
# Warmup Iteration  18: 134973.811 ops/s
# Warmup Iteration  19: 143264.648 ops/s
# Warmup Iteration  20: 133337.756 ops/s
# Warmup Iteration  21: 141729.134 ops/s
# Warmup Iteration  22: 138308.142 ops/s
# Warmup Iteration  23: 138793.065 ops/s
# Warmup Iteration  24: 137523.741 ops/s
# Warmup Iteration  25: 141798.152 ops/s
# Warmup Iteration  26: 137903.186 ops/s
# Warmup Iteration  27: 137435.836 ops/s
# Warmup Iteration  28: 137361.283 ops/s
# Warmup Iteration  29: 99776.832 ops/s
# Warmup Iteration  30: 136473.188 ops/s
Iteration   1: 138197.519 ops/s
Iteration   2: 139522.947 ops/s
Iteration   3: 136897.655 ops/s
Iteration   4: 142347.579 ops/s
Iteration   5: 135258.311 ops/s
Iteration   6: 139674.166 ops/s
Iteration   7: 138570.427 ops/s
Iteration   8: 140238.147 ops/s
Iteration   9: 139740.165 ops/s
Iteration  10: 138003.536 ops/s
Iteration  11: 133799.363 ops/s
Iteration  12: 143798.240 ops/s
Iteration  13: 136502.389 ops/s
Iteration  14: 138138.783 ops/s
Iteration  15: 139198.431 ops/s
Iteration  16: 136556.089 ops/s
Iteration  17: 141494.578 ops/s
Iteration  18: 135473.043 ops/s
Iteration  19: 142280.136 ops/s
Iteration  20: 142706.975 ops/s
Iteration  21: 134129.598 ops/s
Iteration  22: 144841.389 ops/s
Iteration  23: 132690.634 ops/s
Iteration  24: 138170.943 ops/s
Iteration  25: 142016.301 ops/s
Iteration  26: 135769.800 ops/s
Iteration  27: 139984.590 ops/s
Iteration  28: 138118.196 ops/s
Iteration  29: 133304.224 ops/s
Iteration  30: 144390.888 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_728._Benchmark.benchmark_Cluster_728":
  138727.168 ±(99.9%) 2217.162 ops/s [Average]
  (min, avg, max) = (132690.634, 138727.168, 144841.389), stdev = 3318.544
  CI (99.9%): [136510.006, 140944.330] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_728._Benchmark.benchmark_Cluster_728  thrpt   30  138727.168 ± 2217.162  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_729._Benchmark.benchmark_Cluster_729$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_729._Benchmark.benchmark_Cluster_729

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 934.619 ops/s
# Warmup Iteration   2: 13248.103 ops/s
# Warmup Iteration   3: 48373.382 ops/s
# Warmup Iteration   4: 54011.085 ops/s
# Warmup Iteration   5: 119218.262 ops/s
# Warmup Iteration   6: 113653.047 ops/s
# Warmup Iteration   7: 129755.853 ops/s
# Warmup Iteration   8: 129461.505 ops/s
# Warmup Iteration   9: 134236.742 ops/s
# Warmup Iteration  10: 141286.357 ops/s
# Warmup Iteration  11: 136999.981 ops/s
# Warmup Iteration  12: 132655.418 ops/s
# Warmup Iteration  13: 139763.540 ops/s
# Warmup Iteration  14: 134150.771 ops/s
# Warmup Iteration  15: 133843.831 ops/s
# Warmup Iteration  16: 138283.952 ops/s
# Warmup Iteration  17: 134131.025 ops/s
# Warmup Iteration  18: 146138.922 ops/s
# Warmup Iteration  19: 140405.901 ops/s
# Warmup Iteration  20: 138107.279 ops/s
# Warmup Iteration  21: 143216.945 ops/s
# Warmup Iteration  22: 136825.330 ops/s
# Warmup Iteration  23: 136830.954 ops/s
# Warmup Iteration  24: 141580.966 ops/s
# Warmup Iteration  25: 138660.712 ops/s
# Warmup Iteration  26: 137130.689 ops/s
# Warmup Iteration  27: 140526.531 ops/s
# Warmup Iteration  28: 138518.084 ops/s
# Warmup Iteration  29: 138544.143 ops/s
# Warmup Iteration  30: 137030.215 ops/s
Iteration   1: 135772.383 ops/s
Iteration   2: 144420.194 ops/s
Iteration   3: 134426.254 ops/s
Iteration   4: 137992.897 ops/s
Iteration   5: 140348.666 ops/s
Iteration   6: 134929.106 ops/s
Iteration   7: 141899.510 ops/s
Iteration   8: 144290.649 ops/s
Iteration   9: 134758.859 ops/s
Iteration  10: 144402.398 ops/s
Iteration  11: 134044.448 ops/s
Iteration  12: 139229.066 ops/s
Iteration  13: 135678.026 ops/s
Iteration  14: 132263.546 ops/s
Iteration  15: 137345.241 ops/s
Iteration  16: 139993.760 ops/s
Iteration  17: 133429.540 ops/s
Iteration  18: 142091.459 ops/s
Iteration  19: 138130.022 ops/s
Iteration  20: 139865.788 ops/s
Iteration  21: 136085.782 ops/s
Iteration  22: 144225.665 ops/s
Iteration  23: 135400.203 ops/s
Iteration  24: 139066.503 ops/s
Iteration  25: 138834.855 ops/s
Iteration  26: 138509.891 ops/s
Iteration  27: 138845.877 ops/s
Iteration  28: 142681.147 ops/s
Iteration  29: 135587.516 ops/s
Iteration  30: 142403.778 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_729._Benchmark.benchmark_Cluster_729":
  138565.101 ±(99.9%) 2388.698 ops/s [Average]
  (min, avg, max) = (132263.546, 138565.101, 144420.194), stdev = 3575.291
  CI (99.9%): [136176.403, 140953.799] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_729._Benchmark.benchmark_Cluster_729  thrpt   30  138565.101 ± 2388.698  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_73._Benchmark.benchmark_Cluster_73$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_73._Benchmark.benchmark_Cluster_73

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1456.332 ops/s
# Warmup Iteration   2: 23035.996 ops/s
# Warmup Iteration   3: 34644.154 ops/s
# Warmup Iteration   4: 31813.532 ops/s
# Warmup Iteration   5: 50919.860 ops/s
# Warmup Iteration   6: 31867.752 ops/s
# Warmup Iteration   7: 44427.632 ops/s
# Warmup Iteration   8: 40765.530 ops/s
# Warmup Iteration   9: 105607.492 ops/s
# Warmup Iteration  10: 109778.356 ops/s
# Warmup Iteration  11: 109190.832 ops/s
# Warmup Iteration  12: 103844.859 ops/s
# Warmup Iteration  13: 109995.024 ops/s
# Warmup Iteration  14: 113474.586 ops/s
# Warmup Iteration  15: 117491.291 ops/s
# Warmup Iteration  16: 106740.987 ops/s
# Warmup Iteration  17: 117850.693 ops/s
# Warmup Iteration  18: 119639.971 ops/s
# Warmup Iteration  19: 110299.535 ops/s
# Warmup Iteration  20: 118326.702 ops/s
# Warmup Iteration  21: 112028.139 ops/s
# Warmup Iteration  22: 113078.812 ops/s
# Warmup Iteration  23: 91723.865 ops/s
# Warmup Iteration  24: 112505.386 ops/s
# Warmup Iteration  25: 113999.351 ops/s
# Warmup Iteration  26: 117943.675 ops/s
# Warmup Iteration  27: 113453.987 ops/s
# Warmup Iteration  28: 109018.538 ops/s
# Warmup Iteration  29: 116308.600 ops/s
# Warmup Iteration  30: 110899.394 ops/s
Iteration   1: 115338.048 ops/s
Iteration   2: 116941.115 ops/s
Iteration   3: 114177.341 ops/s
Iteration   4: 116282.474 ops/s
Iteration   5: 113148.956 ops/s
Iteration   6: 115883.290 ops/s
Iteration   7: 111687.497 ops/s
Iteration   8: 113009.288 ops/s
Iteration   9: 116350.945 ops/s
Iteration  10: 111595.989 ops/s
Iteration  11: 116539.237 ops/s
Iteration  12: 113703.251 ops/s
Iteration  13: 117630.796 ops/s
Iteration  14: 113448.898 ops/s
Iteration  15: 111845.547 ops/s
Iteration  16: 117478.792 ops/s
Iteration  17: 111719.320 ops/s
Iteration  18: 118703.615 ops/s
Iteration  19: 118242.722 ops/s
Iteration  20: 110448.253 ops/s
Iteration  21: 120650.015 ops/s
Iteration  22: 110866.426 ops/s
Iteration  23: 115403.233 ops/s
Iteration  24: 113696.045 ops/s
Iteration  25: 114618.963 ops/s
Iteration  26: 116952.273 ops/s
Iteration  27: 110351.612 ops/s
Iteration  28: 115971.215 ops/s
Iteration  29: 112998.327 ops/s
Iteration  30: 108989.027 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_73._Benchmark.benchmark_Cluster_73":
  114489.084 ±(99.9%) 1896.340 ops/s [Average]
  (min, avg, max) = (108989.027, 114489.084, 120650.015), stdev = 2838.352
  CI (99.9%): [112592.744, 116385.423] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_73._Benchmark.benchmark_Cluster_73  thrpt   30  114489.084 ± 1896.340  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_730._Benchmark.benchmark_Cluster_730$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_730._Benchmark.benchmark_Cluster_730

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2370.531 ops/s
# Warmup Iteration   2: 18139.897 ops/s
# Warmup Iteration   3: 24609.479 ops/s
# Warmup Iteration   4: 31724.028 ops/s
# Warmup Iteration   5: 43036.374 ops/s
# Warmup Iteration   6: 45320.681 ops/s
# Warmup Iteration   7: 104052.102 ops/s
# Warmup Iteration   8: 104514.463 ops/s
# Warmup Iteration   9: 113682.210 ops/s
# Warmup Iteration  10: 116359.389 ops/s
# Warmup Iteration  11: 111465.713 ops/s
# Warmup Iteration  12: 117077.468 ops/s
# Warmup Iteration  13: 113075.401 ops/s
# Warmup Iteration  14: 115532.595 ops/s
# Warmup Iteration  15: 113643.641 ops/s
# Warmup Iteration  16: 116859.196 ops/s
# Warmup Iteration  17: 115239.391 ops/s
# Warmup Iteration  18: 117642.260 ops/s
# Warmup Iteration  19: 122095.812 ops/s
# Warmup Iteration  20: 112004.976 ops/s
# Warmup Iteration  21: 118377.103 ops/s
# Warmup Iteration  22: 117033.657 ops/s
# Warmup Iteration  23: 120110.479 ops/s
# Warmup Iteration  24: 118788.354 ops/s
# Warmup Iteration  25: 111177.192 ops/s
# Warmup Iteration  26: 118587.753 ops/s
# Warmup Iteration  27: 114355.808 ops/s
# Warmup Iteration  28: 116036.904 ops/s
# Warmup Iteration  29: 122994.253 ops/s
# Warmup Iteration  30: 112982.129 ops/s
Iteration   1: 121569.318 ops/s
Iteration   2: 113317.923 ops/s
Iteration   3: 120402.710 ops/s
Iteration   4: 117687.168 ops/s
Iteration   5: 115923.108 ops/s
Iteration   6: 118755.456 ops/s
Iteration   7: 115327.172 ops/s
Iteration   8: 119601.223 ops/s
Iteration   9: 113588.153 ops/s
Iteration  10: 116278.928 ops/s
Iteration  11: 117869.891 ops/s
Iteration  12: 114027.272 ops/s
Iteration  13: 118791.375 ops/s
Iteration  14: 120144.528 ops/s
Iteration  15: 112032.377 ops/s
Iteration  16: 117824.198 ops/s
Iteration  17: 115219.811 ops/s
Iteration  18: 119148.713 ops/s
Iteration  19: 112221.570 ops/s
Iteration  20: 119656.532 ops/s
Iteration  21: 114866.406 ops/s
Iteration  22: 118878.056 ops/s
Iteration  23: 118999.063 ops/s
Iteration  24: 116962.095 ops/s
Iteration  25: 120993.388 ops/s
Iteration  26: 115901.163 ops/s
Iteration  27: 121363.315 ops/s
Iteration  28: 112466.495 ops/s
Iteration  29: 120275.375 ops/s
Iteration  30: 112412.477 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_730._Benchmark.benchmark_Cluster_730":
  117083.509 ±(99.9%) 1994.966 ops/s [Average]
  (min, avg, max) = (112032.377, 117083.509, 121569.318), stdev = 2985.972
  CI (99.9%): [115088.543, 119078.475] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_730._Benchmark.benchmark_Cluster_730  thrpt   30  117083.509 ± 1994.966  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_731._Benchmark.benchmark_Cluster_731$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_731._Benchmark.benchmark_Cluster_731

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 597.843 ops/s
# Warmup Iteration   2: 8381.945 ops/s
# Warmup Iteration   3: 20374.280 ops/s
# Warmup Iteration   4: 25096.054 ops/s
# Warmup Iteration   5: 29310.945 ops/s
# Warmup Iteration   6: 35086.591 ops/s
# Warmup Iteration   7: 60690.483 ops/s
# Warmup Iteration   8: 88938.480 ops/s
# Warmup Iteration   9: 92246.876 ops/s
# Warmup Iteration  10: 91099.549 ops/s
# Warmup Iteration  11: 87330.456 ops/s
# Warmup Iteration  12: 93558.758 ops/s
# Warmup Iteration  13: 88438.052 ops/s
# Warmup Iteration  14: 91534.780 ops/s
# Warmup Iteration  15: 91497.778 ops/s
# Warmup Iteration  16: 89931.701 ops/s
# Warmup Iteration  17: 74825.096 ops/s
# Warmup Iteration  18: 93085.633 ops/s
# Warmup Iteration  19: 93054.682 ops/s
# Warmup Iteration  20: 87556.236 ops/s
# Warmup Iteration  21: 93943.811 ops/s
# Warmup Iteration  22: 86903.157 ops/s
# Warmup Iteration  23: 92288.583 ops/s
# Warmup Iteration  24: 92674.653 ops/s
# Warmup Iteration  25: 91305.681 ops/s
# Warmup Iteration  26: 87777.026 ops/s
# Warmup Iteration  27: 92217.230 ops/s
# Warmup Iteration  28: 94574.747 ops/s
# Warmup Iteration  29: 90523.282 ops/s
# Warmup Iteration  30: 91635.974 ops/s
Iteration   1: 91345.335 ops/s
Iteration   2: 88924.692 ops/s
Iteration   3: 89480.381 ops/s
Iteration   4: 89278.179 ops/s
Iteration   5: 94125.995 ops/s
Iteration   6: 87193.809 ops/s
Iteration   7: 94301.285 ops/s
Iteration   8: 88603.768 ops/s
Iteration   9: 89967.939 ops/s
Iteration  10: 91118.754 ops/s
Iteration  11: 91076.949 ops/s
Iteration  12: 91969.400 ops/s
Iteration  13: 90763.083 ops/s
Iteration  14: 91637.631 ops/s
Iteration  15: 91818.544 ops/s
Iteration  16: 88280.223 ops/s
Iteration  17: 88945.831 ops/s
Iteration  18: 92209.556 ops/s
Iteration  19: 89076.406 ops/s
Iteration  20: 92774.171 ops/s
Iteration  21: 88881.305 ops/s
Iteration  22: 93980.306 ops/s
Iteration  23: 90020.227 ops/s
Iteration  24: 91916.370 ops/s
Iteration  25: 90700.504 ops/s
Iteration  26: 86885.320 ops/s
Iteration  27: 93298.497 ops/s
Iteration  28: 87923.791 ops/s
Iteration  29: 92501.665 ops/s
Iteration  30: 92728.629 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_731._Benchmark.benchmark_Cluster_731":
  90724.285 ±(99.9%) 1379.218 ops/s [Average]
  (min, avg, max) = (86885.320, 90724.285, 94301.285), stdev = 2064.349
  CI (99.9%): [89345.067, 92103.503] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_731._Benchmark.benchmark_Cluster_731  thrpt   30  90724.285 ± 1379.218  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_732._Benchmark.benchmark_Cluster_732$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_732._Benchmark.benchmark_Cluster_732

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5671.357 ops/s
# Warmup Iteration   2: 36034.835 ops/s
# Warmup Iteration   3: 61424.284 ops/s
# Warmup Iteration   4: 109185.301 ops/s
# Warmup Iteration   5: 111667.560 ops/s
# Warmup Iteration   6: 115444.915 ops/s
# Warmup Iteration   7: 113745.565 ops/s
# Warmup Iteration   8: 128605.648 ops/s
# Warmup Iteration   9: 125656.710 ops/s
# Warmup Iteration  10: 121851.545 ops/s
# Warmup Iteration  11: 127712.876 ops/s
# Warmup Iteration  12: 128260.641 ops/s
# Warmup Iteration  13: 126634.419 ops/s
# Warmup Iteration  14: 126883.682 ops/s
# Warmup Iteration  15: 126503.839 ops/s
# Warmup Iteration  16: 130025.235 ops/s
# Warmup Iteration  17: 126191.454 ops/s
# Warmup Iteration  18: 130286.226 ops/s
# Warmup Iteration  19: 139665.489 ops/s
# Warmup Iteration  20: 136105.597 ops/s
# Warmup Iteration  21: 127108.511 ops/s
# Warmup Iteration  22: 131087.602 ops/s
# Warmup Iteration  23: 138028.880 ops/s
# Warmup Iteration  24: 128228.400 ops/s
# Warmup Iteration  25: 130067.324 ops/s
# Warmup Iteration  26: 136128.328 ops/s
# Warmup Iteration  27: 130467.694 ops/s
# Warmup Iteration  28: 136201.308 ops/s
# Warmup Iteration  29: 131776.333 ops/s
# Warmup Iteration  30: 130899.467 ops/s
Iteration   1: 134291.998 ops/s
Iteration   2: 127917.556 ops/s
Iteration   3: 134995.727 ops/s
Iteration   4: 126864.798 ops/s
Iteration   5: 127279.915 ops/s
Iteration   6: 134173.441 ops/s
Iteration   7: 130408.157 ops/s
Iteration   8: 129608.276 ops/s
Iteration   9: 134932.343 ops/s
Iteration  10: 132326.821 ops/s
Iteration  11: 135286.623 ops/s
Iteration  12: 130591.547 ops/s
Iteration  13: 128165.652 ops/s
Iteration  14: 130840.837 ops/s
Iteration  15: 140624.121 ops/s
Iteration  16: 132593.071 ops/s
Iteration  17: 129712.695 ops/s
Iteration  18: 132801.720 ops/s
Iteration  19: 129627.706 ops/s
Iteration  20: 131693.523 ops/s
Iteration  21: 137606.181 ops/s
Iteration  22: 125718.199 ops/s
Iteration  23: 137324.143 ops/s
Iteration  24: 129561.326 ops/s
Iteration  25: 133095.082 ops/s
Iteration  26: 131497.607 ops/s
Iteration  27: 130692.312 ops/s
Iteration  28: 136675.805 ops/s
Iteration  29: 128442.881 ops/s
Iteration  30: 132449.989 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_732._Benchmark.benchmark_Cluster_732":
  131926.668 ±(99.9%) 2351.638 ops/s [Average]
  (min, avg, max) = (125718.199, 131926.668, 140624.121), stdev = 3519.821
  CI (99.9%): [129575.031, 134278.306] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_732._Benchmark.benchmark_Cluster_732  thrpt   30  131926.668 ± 2351.638  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_733._Benchmark.benchmark_Cluster_733$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_733._Benchmark.benchmark_Cluster_733

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12514.840 ops/s
# Warmup Iteration   2: 55739.438 ops/s
# Warmup Iteration   3: 84250.613 ops/s
# Warmup Iteration   4: 112802.347 ops/s
# Warmup Iteration   5: 114960.979 ops/s
# Warmup Iteration   6: 113392.226 ops/s
# Warmup Iteration   7: 112570.489 ops/s
# Warmup Iteration   8: 112231.046 ops/s
# Warmup Iteration   9: 110490.462 ops/s
# Warmup Iteration  10: 113022.741 ops/s
# Warmup Iteration  11: 100281.681 ops/s
# Warmup Iteration  12: 84608.511 ops/s
# Warmup Iteration  13: 112460.084 ops/s
# Warmup Iteration  14: 110067.885 ops/s
# Warmup Iteration  15: 116845.956 ops/s
# Warmup Iteration  16: 108511.985 ops/s
# Warmup Iteration  17: 123590.180 ops/s
# Warmup Iteration  18: 119563.833 ops/s
# Warmup Iteration  19: 121280.674 ops/s
# Warmup Iteration  20: 120515.688 ops/s
# Warmup Iteration  21: 115390.987 ops/s
# Warmup Iteration  22: 119238.517 ops/s
# Warmup Iteration  23: 123780.556 ops/s
# Warmup Iteration  24: 123163.647 ops/s
# Warmup Iteration  25: 115980.104 ops/s
# Warmup Iteration  26: 125923.906 ops/s
# Warmup Iteration  27: 119274.139 ops/s
# Warmup Iteration  28: 120154.602 ops/s
# Warmup Iteration  29: 122149.204 ops/s
# Warmup Iteration  30: 115900.124 ops/s
Iteration   1: 119247.005 ops/s
Iteration   2: 122698.315 ops/s
Iteration   3: 116028.842 ops/s
Iteration   4: 119822.100 ops/s
Iteration   5: 118059.814 ops/s
Iteration   6: 120970.402 ops/s
Iteration   7: 126152.353 ops/s
Iteration   8: 122598.997 ops/s
Iteration   9: 118775.760 ops/s
Iteration  10: 125718.129 ops/s
Iteration  11: 114910.159 ops/s
Iteration  12: 121945.442 ops/s
Iteration  13: 122085.314 ops/s
Iteration  14: 114741.458 ops/s
Iteration  15: 117936.918 ops/s
Iteration  16: 120810.336 ops/s
Iteration  17: 118607.138 ops/s
Iteration  18: 116817.717 ops/s
Iteration  19: 126124.261 ops/s
Iteration  20: 117491.836 ops/s
Iteration  21: 123852.361 ops/s
Iteration  22: 125263.934 ops/s
Iteration  23: 118018.634 ops/s
Iteration  24: 125599.947 ops/s
Iteration  25: 117805.224 ops/s
Iteration  26: 119710.512 ops/s
Iteration  27: 121752.542 ops/s
Iteration  28: 114795.642 ops/s
Iteration  29: 122963.307 ops/s
Iteration  30: 116604.080 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_733._Benchmark.benchmark_Cluster_733":
  120263.616 ±(99.9%) 2356.421 ops/s [Average]
  (min, avg, max) = (114741.458, 120263.616, 126152.353), stdev = 3526.981
  CI (99.9%): [117907.195, 122620.037] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_733._Benchmark.benchmark_Cluster_733  thrpt   30  120263.616 ± 2356.421  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_734._Benchmark.benchmark_Cluster_734$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_734._Benchmark.benchmark_Cluster_734

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5515.049 ops/s
# Warmup Iteration   2: 21531.940 ops/s
# Warmup Iteration   3: 24219.082 ops/s
# Warmup Iteration   4: 52915.756 ops/s
# Warmup Iteration   5: 76318.408 ops/s
# Warmup Iteration   6: 95408.312 ops/s
# Warmup Iteration   7: 101677.291 ops/s
# Warmup Iteration   8: 100860.934 ops/s
# Warmup Iteration   9: 91208.828 ops/s
# Warmup Iteration  10: 97625.356 ops/s
# Warmup Iteration  11: 101887.646 ops/s
# Warmup Iteration  12: 105082.236 ops/s
# Warmup Iteration  13: 96229.160 ops/s
# Warmup Iteration  14: 100615.339 ops/s
# Warmup Iteration  15: 105771.410 ops/s
# Warmup Iteration  16: 98887.013 ops/s
# Warmup Iteration  17: 105677.248 ops/s
# Warmup Iteration  18: 102465.570 ops/s
# Warmup Iteration  19: 108676.655 ops/s
# Warmup Iteration  20: 107011.704 ops/s
# Warmup Iteration  21: 98806.211 ops/s
# Warmup Iteration  22: 106500.567 ops/s
# Warmup Iteration  23: 103305.174 ops/s
# Warmup Iteration  24: 97827.176 ops/s
# Warmup Iteration  25: 106944.096 ops/s
# Warmup Iteration  26: 106134.389 ops/s
# Warmup Iteration  27: 105489.359 ops/s
# Warmup Iteration  28: 104200.392 ops/s
# Warmup Iteration  29: 104544.553 ops/s
# Warmup Iteration  30: 103202.547 ops/s
Iteration   1: 105059.647 ops/s
Iteration   2: 106075.090 ops/s
Iteration   3: 103936.160 ops/s
Iteration   4: 109324.117 ops/s
Iteration   5: 101993.214 ops/s
Iteration   6: 98659.821 ops/s
Iteration   7: 102923.395 ops/s
Iteration   8: 102896.934 ops/s
Iteration   9: 107800.109 ops/s
Iteration  10: 103906.930 ops/s
Iteration  11: 104029.706 ops/s
Iteration  12: 110125.933 ops/s
Iteration  13: 102605.940 ops/s
Iteration  14: 104379.208 ops/s
Iteration  15: 105047.200 ops/s
Iteration  16: 107811.495 ops/s
Iteration  17: 104227.475 ops/s
Iteration  18: 108695.102 ops/s
Iteration  19: 102609.376 ops/s
Iteration  20: 107828.304 ops/s
Iteration  21: 106526.665 ops/s
Iteration  22: 101531.330 ops/s
Iteration  23: 107663.605 ops/s
Iteration  24: 101510.952 ops/s
Iteration  25: 105986.058 ops/s
Iteration  26: 101871.803 ops/s
Iteration  27: 104191.508 ops/s
Iteration  28: 104094.921 ops/s
Iteration  29: 103014.158 ops/s
Iteration  30: 107175.359 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_734._Benchmark.benchmark_Cluster_734":
  104783.384 ±(99.9%) 1799.304 ops/s [Average]
  (min, avg, max) = (98659.821, 104783.384, 110125.933), stdev = 2693.114
  CI (99.9%): [102984.079, 106582.688] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_734._Benchmark.benchmark_Cluster_734  thrpt   30  104783.384 ± 1799.304  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_735._Benchmark.benchmark_Cluster_735$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_735._Benchmark.benchmark_Cluster_735

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2352.439 ops/s
# Warmup Iteration   2: 21392.192 ops/s
# Warmup Iteration   3: 31967.521 ops/s
# Warmup Iteration   4: 38111.810 ops/s
# Warmup Iteration   5: 51677.694 ops/s
# Warmup Iteration   6: 93077.982 ops/s
# Warmup Iteration   7: 98737.296 ops/s
# Warmup Iteration   8: 103737.009 ops/s
# Warmup Iteration   9: 104299.184 ops/s
# Warmup Iteration  10: 108434.950 ops/s
# Warmup Iteration  11: 109047.371 ops/s
# Warmup Iteration  12: 101550.028 ops/s
# Warmup Iteration  13: 106243.412 ops/s
# Warmup Iteration  14: 99682.060 ops/s
# Warmup Iteration  15: 109541.272 ops/s
# Warmup Iteration  16: 107180.568 ops/s
# Warmup Iteration  17: 101877.838 ops/s
# Warmup Iteration  18: 109979.700 ops/s
# Warmup Iteration  19: 111123.664 ops/s
# Warmup Iteration  20: 104820.217 ops/s
# Warmup Iteration  21: 109845.933 ops/s
# Warmup Iteration  22: 106763.228 ops/s
# Warmup Iteration  23: 105816.403 ops/s
# Warmup Iteration  24: 108919.581 ops/s
# Warmup Iteration  25: 104434.619 ops/s
# Warmup Iteration  26: 107758.845 ops/s
# Warmup Iteration  27: 107271.358 ops/s
# Warmup Iteration  28: 110747.803 ops/s
# Warmup Iteration  29: 105267.929 ops/s
# Warmup Iteration  30: 111264.536 ops/s
Iteration   1: 106134.796 ops/s
Iteration   2: 108586.762 ops/s
Iteration   3: 107293.674 ops/s
Iteration   4: 108928.070 ops/s
Iteration   5: 110157.820 ops/s
Iteration   6: 104589.806 ops/s
Iteration   7: 114570.245 ops/s
Iteration   8: 109490.658 ops/s
Iteration   9: 107537.367 ops/s
Iteration  10: 109991.008 ops/s
Iteration  11: 106091.316 ops/s
Iteration  12: 108795.731 ops/s
Iteration  13: 109208.601 ops/s
Iteration  14: 104952.075 ops/s
Iteration  15: 105681.941 ops/s
Iteration  16: 111074.577 ops/s
Iteration  17: 109236.224 ops/s
Iteration  18: 104850.314 ops/s
Iteration  19: 113627.757 ops/s
Iteration  20: 102532.481 ops/s
Iteration  21: 102530.336 ops/s
Iteration  22: 112215.357 ops/s
Iteration  23: 104705.784 ops/s
Iteration  24: 111499.680 ops/s
Iteration  25: 108584.034 ops/s
Iteration  26: 106918.160 ops/s
Iteration  27: 109016.010 ops/s
Iteration  28: 108556.593 ops/s
Iteration  29: 107677.151 ops/s
Iteration  30: 107047.974 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_735._Benchmark.benchmark_Cluster_735":
  108069.410 ±(99.9%) 1955.401 ops/s [Average]
  (min, avg, max) = (102530.336, 108069.410, 114570.245), stdev = 2926.753
  CI (99.9%): [106114.009, 110024.811] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_735._Benchmark.benchmark_Cluster_735  thrpt   30  108069.410 ± 1955.401  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_736._Benchmark.benchmark_Cluster_736$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_736._Benchmark.benchmark_Cluster_736

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 21884.969 ops/s
# Warmup Iteration   2: 71207.685 ops/s
# Warmup Iteration   3: 122433.575 ops/s
# Warmup Iteration   4: 171169.056 ops/s
# Warmup Iteration   5: 183741.202 ops/s
# Warmup Iteration   6: 190461.432 ops/s
# Warmup Iteration   7: 187108.885 ops/s
# Warmup Iteration   8: 182867.846 ops/s
# Warmup Iteration   9: 178908.090 ops/s
# Warmup Iteration  10: 182649.759 ops/s
# Warmup Iteration  11: 191758.821 ops/s
# Warmup Iteration  12: 194084.719 ops/s
# Warmup Iteration  13: 181790.624 ops/s
# Warmup Iteration  14: 196179.437 ops/s
# Warmup Iteration  15: 187102.339 ops/s
# Warmup Iteration  16: 186076.409 ops/s
# Warmup Iteration  17: 206663.527 ops/s
# Warmup Iteration  18: 193792.291 ops/s
# Warmup Iteration  19: 197659.715 ops/s
# Warmup Iteration  20: 198842.901 ops/s
# Warmup Iteration  21: 202762.898 ops/s
# Warmup Iteration  22: 194110.717 ops/s
# Warmup Iteration  23: 206636.026 ops/s
# Warmup Iteration  24: 194019.388 ops/s
# Warmup Iteration  25: 195881.146 ops/s
# Warmup Iteration  26: 206449.210 ops/s
# Warmup Iteration  27: 193009.970 ops/s
# Warmup Iteration  28: 196961.946 ops/s
# Warmup Iteration  29: 193593.136 ops/s
# Warmup Iteration  30: 203980.391 ops/s
Iteration   1: 196897.735 ops/s
Iteration   2: 190122.879 ops/s
Iteration   3: 199287.777 ops/s
Iteration   4: 195369.337 ops/s
Iteration   5: 200961.440 ops/s
Iteration   6: 196864.156 ops/s
Iteration   7: 192899.380 ops/s
Iteration   8: 204004.892 ops/s
Iteration   9: 195605.747 ops/s
Iteration  10: 205870.479 ops/s
Iteration  11: 206086.565 ops/s
Iteration  12: 192862.846 ops/s
Iteration  13: 204958.330 ops/s
Iteration  14: 202918.165 ops/s
Iteration  15: 197809.380 ops/s
Iteration  16: 193372.566 ops/s
Iteration  17: 206461.020 ops/s
Iteration  18: 201262.172 ops/s
Iteration  19: 193004.896 ops/s
Iteration  20: 199030.766 ops/s
Iteration  21: 198962.558 ops/s
Iteration  22: 196121.350 ops/s
Iteration  23: 203594.049 ops/s
Iteration  24: 190868.317 ops/s
Iteration  25: 201790.903 ops/s
Iteration  26: 191087.682 ops/s
Iteration  27: 198436.189 ops/s
Iteration  28: 197318.774 ops/s
Iteration  29: 197478.686 ops/s
Iteration  30: 205100.637 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_736._Benchmark.benchmark_Cluster_736":
  198546.989 ±(99.9%) 3275.113 ops/s [Average]
  (min, avg, max) = (190122.879, 198546.989, 206461.020), stdev = 4902.036
  CI (99.9%): [195271.876, 201822.102] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_736._Benchmark.benchmark_Cluster_736  thrpt   30  198546.989 ± 3275.113  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_737._Benchmark.benchmark_Cluster_737$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_737._Benchmark.benchmark_Cluster_737

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 22778.912 ops/s
# Warmup Iteration   2: 66937.270 ops/s
# Warmup Iteration   3: 117097.358 ops/s
# Warmup Iteration   4: 113456.242 ops/s
# Warmup Iteration   5: 117221.647 ops/s
# Warmup Iteration   6: 115855.552 ops/s
# Warmup Iteration   7: 117561.962 ops/s
# Warmup Iteration   8: 116831.898 ops/s
# Warmup Iteration   9: 114786.923 ops/s
# Warmup Iteration  10: 117817.872 ops/s
# Warmup Iteration  11: 116488.056 ops/s
# Warmup Iteration  12: 117363.333 ops/s
# Warmup Iteration  13: 117643.350 ops/s
# Warmup Iteration  14: 118475.867 ops/s
# Warmup Iteration  15: 121656.266 ops/s
# Warmup Iteration  16: 116642.029 ops/s
# Warmup Iteration  17: 124710.817 ops/s
# Warmup Iteration  18: 124494.102 ops/s
# Warmup Iteration  19: 127986.940 ops/s
# Warmup Iteration  20: 121383.014 ops/s
# Warmup Iteration  21: 126266.866 ops/s
# Warmup Iteration  22: 125960.354 ops/s
# Warmup Iteration  23: 119938.128 ops/s
# Warmup Iteration  24: 125635.179 ops/s
# Warmup Iteration  25: 124202.365 ops/s
# Warmup Iteration  26: 124499.756 ops/s
# Warmup Iteration  27: 128316.538 ops/s
# Warmup Iteration  28: 120637.732 ops/s
# Warmup Iteration  29: 129974.424 ops/s
# Warmup Iteration  30: 121956.804 ops/s
Iteration   1: 123785.821 ops/s
Iteration   2: 125827.339 ops/s
Iteration   3: 119731.531 ops/s
Iteration   4: 124858.878 ops/s
Iteration   5: 127549.088 ops/s
Iteration   6: 122383.345 ops/s
Iteration   7: 125505.343 ops/s
Iteration   8: 130160.383 ops/s
Iteration   9: 124664.089 ops/s
Iteration  10: 120014.489 ops/s
Iteration  11: 123386.245 ops/s
Iteration  12: 128436.181 ops/s
Iteration  13: 124121.501 ops/s
Iteration  14: 123350.222 ops/s
Iteration  15: 129289.183 ops/s
Iteration  16: 120787.428 ops/s
Iteration  17: 125322.885 ops/s
Iteration  18: 126837.188 ops/s
Iteration  19: 120517.282 ops/s
Iteration  20: 128230.307 ops/s
Iteration  21: 122173.855 ops/s
Iteration  22: 130647.744 ops/s
Iteration  23: 125472.027 ops/s
Iteration  24: 126162.616 ops/s
Iteration  25: 124051.129 ops/s
Iteration  26: 130652.120 ops/s
Iteration  27: 128047.302 ops/s
Iteration  28: 120644.975 ops/s
Iteration  29: 124201.913 ops/s
Iteration  30: 123090.683 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_737._Benchmark.benchmark_Cluster_737":
  124996.770 ±(99.9%) 2112.868 ops/s [Average]
  (min, avg, max) = (119731.531, 124996.770, 130652.120), stdev = 3162.442
  CI (99.9%): [122883.902, 127109.638] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_737._Benchmark.benchmark_Cluster_737  thrpt   30  124996.770 ± 2112.868  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_738._Benchmark.benchmark_Cluster_738$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_738._Benchmark.benchmark_Cluster_738

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8613.400 ops/s
# Warmup Iteration   2: 28102.615 ops/s
# Warmup Iteration   3: 29159.350 ops/s
# Warmup Iteration   4: 24856.289 ops/s
# Warmup Iteration   5: 19288.347 ops/s
# Warmup Iteration   6: 18947.075 ops/s
# Warmup Iteration   7: 19369.589 ops/s
# Warmup Iteration   8: 27424.941 ops/s
# Warmup Iteration   9: 19528.661 ops/s
# Warmup Iteration  10: 19704.813 ops/s
# Warmup Iteration  11: 19486.674 ops/s
# Warmup Iteration  12: 19986.426 ops/s
# Warmup Iteration  13: 20185.586 ops/s
# Warmup Iteration  14: 19365.447 ops/s
# Warmup Iteration  15: 19434.377 ops/s
# Warmup Iteration  16: 19147.508 ops/s
# Warmup Iteration  17: 20650.815 ops/s
# Warmup Iteration  18: 19435.504 ops/s
# Warmup Iteration  19: 20244.122 ops/s
# Warmup Iteration  20: 19428.501 ops/s
# Warmup Iteration  21: 19874.818 ops/s
# Warmup Iteration  22: 19859.874 ops/s
# Warmup Iteration  23: 19494.080 ops/s
# Warmup Iteration  24: 19101.070 ops/s
# Warmup Iteration  25: 19854.650 ops/s
# Warmup Iteration  26: 19617.893 ops/s
# Warmup Iteration  27: 19484.165 ops/s
# Warmup Iteration  28: 20475.289 ops/s
# Warmup Iteration  29: 19293.283 ops/s
# Warmup Iteration  30: 19536.053 ops/s
Iteration   1: 19557.522 ops/s
Iteration   2: 19795.301 ops/s
Iteration   3: 19778.369 ops/s
Iteration   4: 19506.947 ops/s
Iteration   5: 19133.912 ops/s
Iteration   6: 20452.062 ops/s
Iteration   7: 32909.194 ops/s
Iteration   8: 20830.896 ops/s
Iteration   9: 19632.936 ops/s
Iteration  10: 20248.892 ops/s
Iteration  11: 19712.369 ops/s
Iteration  12: 19694.140 ops/s
Iteration  13: 19925.775 ops/s
Iteration  14: 19429.057 ops/s
Iteration  15: 19163.252 ops/s
Iteration  16: 19493.452 ops/s
Iteration  17: 20033.677 ops/s
Iteration  18: 20042.453 ops/s
Iteration  19: 20839.626 ops/s
Iteration  20: 19440.499 ops/s
Iteration  21: 19537.262 ops/s
Iteration  22: 19953.735 ops/s
Iteration  23: 20275.250 ops/s
Iteration  24: 19374.834 ops/s
Iteration  25: 20184.478 ops/s
Iteration  26: 27416.476 ops/s
Iteration  27: 19340.517 ops/s
Iteration  28: 19479.994 ops/s
Iteration  29: 19544.214 ops/s
Iteration  30: 21727.325 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_738._Benchmark.benchmark_Cluster_738":
  20548.480 ±(99.9%) 1848.937 ops/s [Average]
  (min, avg, max) = (19133.912, 20548.480, 32909.194), stdev = 2767.403
  CI (99.9%): [18699.543, 22397.418] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_738._Benchmark.benchmark_Cluster_738  thrpt   30  20548.480 ± 1848.937  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_739._Benchmark.benchmark_Cluster_739$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_739._Benchmark.benchmark_Cluster_739

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2355.182 ops/s
# Warmup Iteration   2: 11501.215 ops/s
# Warmup Iteration   3: 13926.599 ops/s
# Warmup Iteration   4: 16449.975 ops/s
# Warmup Iteration   5: 24356.120 ops/s
# Warmup Iteration   6: 17554.160 ops/s
# Warmup Iteration   7: 25704.588 ops/s
# Warmup Iteration   8: 31858.640 ops/s
# Warmup Iteration   9: 33276.228 ops/s
# Warmup Iteration  10: 37832.533 ops/s
# Warmup Iteration  11: 37080.562 ops/s
# Warmup Iteration  12: 35040.695 ops/s
# Warmup Iteration  13: 34581.180 ops/s
# Warmup Iteration  14: 35670.641 ops/s
# Warmup Iteration  15: 34732.886 ops/s
# Warmup Iteration  16: 35574.645 ops/s
# Warmup Iteration  17: 38386.179 ops/s
# Warmup Iteration  18: 34456.605 ops/s
# Warmup Iteration  19: 37277.651 ops/s
# Warmup Iteration  20: 36758.500 ops/s
# Warmup Iteration  21: 36411.770 ops/s
# Warmup Iteration  22: 35700.511 ops/s
# Warmup Iteration  23: 35275.927 ops/s
# Warmup Iteration  24: 35500.028 ops/s
# Warmup Iteration  25: 37240.241 ops/s
# Warmup Iteration  26: 36180.390 ops/s
# Warmup Iteration  27: 38764.276 ops/s
# Warmup Iteration  28: 36809.220 ops/s
# Warmup Iteration  29: 36447.585 ops/s
# Warmup Iteration  30: 35444.560 ops/s
Iteration   1: 33961.155 ops/s
Iteration   2: 36980.393 ops/s
Iteration   3: 35646.257 ops/s
Iteration   4: 36216.761 ops/s
Iteration   5: 34998.739 ops/s
Iteration   6: 37736.292 ops/s
Iteration   7: 35525.270 ops/s
Iteration   8: 38534.537 ops/s
Iteration   9: 36922.689 ops/s
Iteration  10: 38242.215 ops/s
Iteration  11: 35940.993 ops/s
Iteration  12: 34517.606 ops/s
Iteration  13: 33646.654 ops/s
Iteration  14: 37711.196 ops/s
Iteration  15: 34717.853 ops/s
Iteration  16: 38646.096 ops/s
Iteration  17: 36203.422 ops/s
Iteration  18: 38042.574 ops/s
Iteration  19: 34065.993 ops/s
Iteration  20: 36298.242 ops/s
Iteration  21: 35076.784 ops/s
Iteration  22: 35322.322 ops/s
Iteration  23: 36543.848 ops/s
Iteration  24: 35032.387 ops/s
Iteration  25: 30923.690 ops/s
Iteration  26: 36377.168 ops/s
Iteration  27: 38286.585 ops/s
Iteration  28: 35459.979 ops/s
Iteration  29: 32953.036 ops/s
Iteration  30: 37650.153 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_739._Benchmark.benchmark_Cluster_739":
  35939.363 ±(99.9%) 1209.642 ops/s [Average]
  (min, avg, max) = (30923.690, 35939.363, 38646.096), stdev = 1810.535
  CI (99.9%): [34729.721, 37149.005] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_739._Benchmark.benchmark_Cluster_739  thrpt   30  35939.363 ± 1209.642  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_74._Benchmark.benchmark_Cluster_74$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_74._Benchmark.benchmark_Cluster_74

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3622.343 ops/s
# Warmup Iteration   2: 27731.724 ops/s
# Warmup Iteration   3: 39763.056 ops/s
# Warmup Iteration   4: 71941.624 ops/s
# Warmup Iteration   5: 118068.709 ops/s
# Warmup Iteration   6: 139365.245 ops/s
# Warmup Iteration   7: 141590.990 ops/s
# Warmup Iteration   8: 142256.729 ops/s
# Warmup Iteration   9: 143149.043 ops/s
# Warmup Iteration  10: 139868.025 ops/s
# Warmup Iteration  11: 146209.030 ops/s
# Warmup Iteration  12: 141316.212 ops/s
# Warmup Iteration  13: 139735.618 ops/s
# Warmup Iteration  14: 147971.396 ops/s
# Warmup Iteration  15: 139539.424 ops/s
# Warmup Iteration  16: 146766.375 ops/s
# Warmup Iteration  17: 146304.917 ops/s
# Warmup Iteration  18: 142626.133 ops/s
# Warmup Iteration  19: 143271.489 ops/s
# Warmup Iteration  20: 150426.445 ops/s
# Warmup Iteration  21: 142841.901 ops/s
# Warmup Iteration  22: 142468.578 ops/s
# Warmup Iteration  23: 150945.658 ops/s
# Warmup Iteration  24: 140672.969 ops/s
# Warmup Iteration  25: 145747.346 ops/s
# Warmup Iteration  26: 146932.400 ops/s
# Warmup Iteration  27: 137428.240 ops/s
# Warmup Iteration  28: 149795.364 ops/s
# Warmup Iteration  29: 143167.350 ops/s
# Warmup Iteration  30: 133848.934 ops/s
Iteration   1: 147341.091 ops/s
Iteration   2: 150905.988 ops/s
Iteration   3: 141588.891 ops/s
Iteration   4: 143625.739 ops/s
Iteration   5: 148566.618 ops/s
Iteration   6: 142514.146 ops/s
Iteration   7: 148674.086 ops/s
Iteration   8: 143116.834 ops/s
Iteration   9: 148305.949 ops/s
Iteration  10: 143607.904 ops/s
Iteration  11: 146442.023 ops/s
Iteration  12: 147387.151 ops/s
Iteration  13: 142492.104 ops/s
Iteration  14: 142744.020 ops/s
Iteration  15: 150218.816 ops/s
Iteration  16: 146350.213 ops/s
Iteration  17: 143554.573 ops/s
Iteration  18: 144893.806 ops/s
Iteration  19: 125849.165 ops/s
Iteration  20: 138746.896 ops/s
Iteration  21: 144299.910 ops/s
Iteration  22: 139787.124 ops/s
Iteration  23: 140249.550 ops/s
Iteration  24: 146090.749 ops/s
Iteration  25: 144482.024 ops/s
Iteration  26: 152327.592 ops/s
Iteration  27: 140358.808 ops/s
Iteration  28: 152474.085 ops/s
Iteration  29: 140901.478 ops/s
Iteration  30: 141596.781 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_74._Benchmark.benchmark_Cluster_74":
  144316.470 ±(99.9%) 3411.280 ops/s [Average]
  (min, avg, max) = (125849.165, 144316.470, 152474.085), stdev = 5105.843
  CI (99.9%): [140905.191, 147727.750] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_74._Benchmark.benchmark_Cluster_74  thrpt   30  144316.470 ± 3411.280  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_740._Benchmark.benchmark_Cluster_740$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_740._Benchmark.benchmark_Cluster_740

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 850.729 ops/s
# Warmup Iteration   2: 3699.419 ops/s
# Warmup Iteration   3: 14328.732 ops/s
# Warmup Iteration   4: 27750.598 ops/s
# Warmup Iteration   5: 35387.602 ops/s
# Warmup Iteration   6: 34512.964 ops/s
# Warmup Iteration   7: 40142.783 ops/s
# Warmup Iteration   8: 26963.640 ops/s
# Warmup Iteration   9: 34931.973 ops/s
# Warmup Iteration  10: 36548.006 ops/s
# Warmup Iteration  11: 34909.936 ops/s
# Warmup Iteration  12: 31348.643 ops/s
# Warmup Iteration  13: 34604.353 ops/s
# Warmup Iteration  14: 28490.581 ops/s
# Warmup Iteration  15: 69813.688 ops/s
# Warmup Iteration  16: 92074.873 ops/s
# Warmup Iteration  17: 97383.327 ops/s
# Warmup Iteration  18: 91540.499 ops/s
# Warmup Iteration  19: 92692.148 ops/s
# Warmup Iteration  20: 97003.347 ops/s
# Warmup Iteration  21: 91240.877 ops/s
# Warmup Iteration  22: 95815.989 ops/s
# Warmup Iteration  23: 91610.014 ops/s
# Warmup Iteration  24: 93646.076 ops/s
# Warmup Iteration  25: 92148.405 ops/s
# Warmup Iteration  26: 93218.537 ops/s
# Warmup Iteration  27: 94064.711 ops/s
# Warmup Iteration  28: 94397.883 ops/s
# Warmup Iteration  29: 93889.203 ops/s
# Warmup Iteration  30: 92614.403 ops/s
Iteration   1: 96146.585 ops/s
Iteration   2: 97109.004 ops/s
Iteration   3: 91405.313 ops/s
Iteration   4: 96138.622 ops/s
Iteration   5: 92651.378 ops/s
Iteration   6: 95173.453 ops/s
Iteration   7: 90642.576 ops/s
Iteration   8: 93104.607 ops/s
Iteration   9: 95052.113 ops/s
Iteration  10: 92740.541 ops/s
Iteration  11: 97857.237 ops/s
Iteration  12: 91101.039 ops/s
Iteration  13: 93857.304 ops/s
Iteration  14: 95355.427 ops/s
Iteration  15: 93943.324 ops/s
Iteration  16: 93627.147 ops/s
Iteration  17: 88938.505 ops/s
Iteration  18: 95347.710 ops/s
Iteration  19: 96379.477 ops/s
Iteration  20: 92509.473 ops/s
Iteration  21: 98311.495 ops/s
Iteration  22: 94169.368 ops/s
Iteration  23: 95976.420 ops/s
Iteration  24: 94404.489 ops/s
Iteration  25: 95036.711 ops/s
Iteration  26: 96408.564 ops/s
Iteration  27: 94840.860 ops/s
Iteration  28: 93819.010 ops/s
Iteration  29: 98421.038 ops/s
Iteration  30: 93775.879 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_740._Benchmark.benchmark_Cluster_740":
  94474.822 ±(99.9%) 1505.640 ops/s [Average]
  (min, avg, max) = (88938.505, 94474.822, 98421.038), stdev = 2253.571
  CI (99.9%): [92969.182, 95980.462] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_740._Benchmark.benchmark_Cluster_740  thrpt   30  94474.822 ± 1505.640  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_741._Benchmark.benchmark_Cluster_741$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_741._Benchmark.benchmark_Cluster_741

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1661.190 ops/s
# Warmup Iteration   2: 11854.806 ops/s
# Warmup Iteration   3: 29043.474 ops/s
# Warmup Iteration   4: 66674.162 ops/s
# Warmup Iteration   5: 75307.387 ops/s
# Warmup Iteration   6: 81076.187 ops/s
# Warmup Iteration   7: 79749.932 ops/s
# Warmup Iteration   8: 84355.549 ops/s
# Warmup Iteration   9: 82468.376 ops/s
# Warmup Iteration  10: 81234.024 ops/s
# Warmup Iteration  11: 83514.142 ops/s
# Warmup Iteration  12: 83058.884 ops/s
# Warmup Iteration  13: 82777.029 ops/s
# Warmup Iteration  14: 85701.434 ops/s
# Warmup Iteration  15: 78243.015 ops/s
# Warmup Iteration  16: 80294.954 ops/s
# Warmup Iteration  17: 81250.093 ops/s
# Warmup Iteration  18: 84223.682 ops/s
# Warmup Iteration  19: 80788.540 ops/s
# Warmup Iteration  20: 83429.516 ops/s
# Warmup Iteration  21: 86902.696 ops/s
# Warmup Iteration  22: 81628.307 ops/s
# Warmup Iteration  23: 85814.401 ops/s
# Warmup Iteration  24: 87592.349 ops/s
# Warmup Iteration  25: 82224.575 ops/s
# Warmup Iteration  26: 86050.394 ops/s
# Warmup Iteration  27: 86800.816 ops/s
# Warmup Iteration  28: 83944.971 ops/s
# Warmup Iteration  29: 86330.943 ops/s
# Warmup Iteration  30: 82748.202 ops/s
Iteration   1: 87184.085 ops/s
Iteration   2: 86662.484 ops/s
Iteration   3: 82512.554 ops/s
Iteration   4: 85699.337 ops/s
Iteration   5: 82194.523 ops/s
Iteration   6: 84961.991 ops/s
Iteration   7: 85787.082 ops/s
Iteration   8: 81215.095 ops/s
Iteration   9: 83911.640 ops/s
Iteration  10: 82090.487 ops/s
Iteration  11: 84364.029 ops/s
Iteration  12: 84380.573 ops/s
Iteration  13: 76963.667 ops/s
Iteration  14: 76120.845 ops/s
Iteration  15: 85765.498 ops/s
Iteration  16: 83651.105 ops/s
Iteration  17: 84662.299 ops/s
Iteration  18: 83584.102 ops/s
Iteration  19: 82802.990 ops/s
Iteration  20: 86317.855 ops/s
Iteration  21: 82044.383 ops/s
Iteration  22: 83096.378 ops/s
Iteration  23: 84366.050 ops/s
Iteration  24: 83455.448 ops/s
Iteration  25: 86479.656 ops/s
Iteration  26: 80879.195 ops/s
Iteration  27: 83646.072 ops/s
Iteration  28: 83421.131 ops/s
Iteration  29: 82886.549 ops/s
Iteration  30: 85505.357 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_741._Benchmark.benchmark_Cluster_741":
  83553.749 ±(99.9%) 1676.453 ops/s [Average]
  (min, avg, max) = (76120.845, 83553.749, 87184.085), stdev = 2509.236
  CI (99.9%): [81877.296, 85230.202] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_741._Benchmark.benchmark_Cluster_741  thrpt   30  83553.749 ± 1676.453  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_742._Benchmark.benchmark_Cluster_742$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_742._Benchmark.benchmark_Cluster_742

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5227.623 ops/s
# Warmup Iteration   2: 45690.957 ops/s
# Warmup Iteration   3: 52546.681 ops/s
# Warmup Iteration   4: 47887.170 ops/s
# Warmup Iteration   5: 102977.461 ops/s
# Warmup Iteration   6: 108999.589 ops/s
# Warmup Iteration   7: 95840.227 ops/s
# Warmup Iteration   8: 111593.610 ops/s
# Warmup Iteration   9: 114141.314 ops/s
# Warmup Iteration  10: 107458.727 ops/s
# Warmup Iteration  11: 107776.171 ops/s
# Warmup Iteration  12: 113013.608 ops/s
# Warmup Iteration  13: 111320.996 ops/s
# Warmup Iteration  14: 109741.382 ops/s
# Warmup Iteration  15: 113098.758 ops/s
# Warmup Iteration  16: 112984.532 ops/s
# Warmup Iteration  17: 111047.463 ops/s
# Warmup Iteration  18: 108677.417 ops/s
# Warmup Iteration  19: 112980.242 ops/s
# Warmup Iteration  20: 108733.507 ops/s
# Warmup Iteration  21: 108683.582 ops/s
# Warmup Iteration  22: 114927.571 ops/s
# Warmup Iteration  23: 110192.871 ops/s
# Warmup Iteration  24: 110218.355 ops/s
# Warmup Iteration  25: 109428.302 ops/s
# Warmup Iteration  26: 109033.507 ops/s
# Warmup Iteration  27: 112839.746 ops/s
# Warmup Iteration  28: 108128.721 ops/s
# Warmup Iteration  29: 111963.443 ops/s
# Warmup Iteration  30: 107708.302 ops/s
Iteration   1: 108649.038 ops/s
Iteration   2: 111634.603 ops/s
Iteration   3: 108431.117 ops/s
Iteration   4: 109985.273 ops/s
Iteration   5: 107675.487 ops/s
Iteration   6: 112607.863 ops/s
Iteration   7: 110383.416 ops/s
Iteration   8: 114250.503 ops/s
Iteration   9: 111805.919 ops/s
Iteration  10: 108257.705 ops/s
Iteration  11: 112462.449 ops/s
Iteration  12: 107098.883 ops/s
Iteration  13: 109521.904 ops/s
Iteration  14: 110896.044 ops/s
Iteration  15: 109161.836 ops/s
Iteration  16: 109084.996 ops/s
Iteration  17: 114518.400 ops/s
Iteration  18: 108784.755 ops/s
Iteration  19: 111818.785 ops/s
Iteration  20: 116757.350 ops/s
Iteration  21: 113801.053 ops/s
Iteration  22: 106599.567 ops/s
Iteration  23: 113059.890 ops/s
Iteration  24: 109364.395 ops/s
Iteration  25: 115311.103 ops/s
Iteration  26: 108555.975 ops/s
Iteration  27: 110988.313 ops/s
Iteration  28: 114908.455 ops/s
Iteration  29: 107190.899 ops/s
Iteration  30: 111543.509 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_742._Benchmark.benchmark_Cluster_742":
  110836.983 ±(99.9%) 1806.358 ops/s [Average]
  (min, avg, max) = (106599.567, 110836.983, 116757.350), stdev = 2703.672
  CI (99.9%): [109030.625, 112643.341] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_742._Benchmark.benchmark_Cluster_742  thrpt   30  110836.983 ± 1806.358  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_743._Benchmark.benchmark_Cluster_743$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_743._Benchmark.benchmark_Cluster_743

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13163.918 ops/s
# Warmup Iteration   2: 42757.931 ops/s
# Warmup Iteration   3: 85053.690 ops/s
# Warmup Iteration   4: 102168.565 ops/s
# Warmup Iteration   5: 111202.980 ops/s
# Warmup Iteration   6: 107951.879 ops/s
# Warmup Iteration   7: 107442.997 ops/s
# Warmup Iteration   8: 111961.328 ops/s
# Warmup Iteration   9: 105305.792 ops/s
# Warmup Iteration  10: 112832.761 ops/s
# Warmup Iteration  11: 109951.233 ops/s
# Warmup Iteration  12: 107013.906 ops/s
# Warmup Iteration  13: 112119.817 ops/s
# Warmup Iteration  14: 107836.550 ops/s
# Warmup Iteration  15: 109218.397 ops/s
# Warmup Iteration  16: 114269.451 ops/s
# Warmup Iteration  17: 106584.841 ops/s
# Warmup Iteration  18: 110631.843 ops/s
# Warmup Iteration  19: 107431.157 ops/s
# Warmup Iteration  20: 113131.329 ops/s
# Warmup Iteration  21: 109326.794 ops/s
# Warmup Iteration  22: 108739.610 ops/s
# Warmup Iteration  23: 110712.101 ops/s
# Warmup Iteration  24: 108960.974 ops/s
# Warmup Iteration  25: 107265.196 ops/s
# Warmup Iteration  26: 110873.630 ops/s
# Warmup Iteration  27: 107296.548 ops/s
# Warmup Iteration  28: 108493.668 ops/s
# Warmup Iteration  29: 111869.992 ops/s
# Warmup Iteration  30: 106921.333 ops/s
Iteration   1: 109591.376 ops/s
Iteration   2: 108383.215 ops/s
Iteration   3: 109365.051 ops/s
Iteration   4: 108552.414 ops/s
Iteration   5: 111480.641 ops/s
Iteration   6: 105599.678 ops/s
Iteration   7: 109644.341 ops/s
Iteration   8: 88599.383 ops/s
Iteration   9: 110933.534 ops/s
Iteration  10: 109305.383 ops/s
Iteration  11: 111459.852 ops/s
Iteration  12: 106298.470 ops/s
Iteration  13: 111277.102 ops/s
Iteration  14: 104277.520 ops/s
Iteration  15: 107325.056 ops/s
Iteration  16: 105357.212 ops/s
Iteration  17: 113128.032 ops/s
Iteration  18: 107495.329 ops/s
Iteration  19: 114144.365 ops/s
Iteration  20: 113153.546 ops/s
Iteration  21: 108538.132 ops/s
Iteration  22: 109086.496 ops/s
Iteration  23: 113300.734 ops/s
Iteration  24: 106329.658 ops/s
Iteration  25: 111200.799 ops/s
Iteration  26: 110203.777 ops/s
Iteration  27: 108713.304 ops/s
Iteration  28: 112248.741 ops/s
Iteration  29: 106670.044 ops/s
Iteration  30: 105255.445 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_743._Benchmark.benchmark_Cluster_743":
  108563.954 ±(99.9%) 3078.392 ops/s [Average]
  (min, avg, max) = (88599.383, 108563.954, 114144.365), stdev = 4607.593
  CI (99.9%): [105485.562, 111642.347] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_743._Benchmark.benchmark_Cluster_743  thrpt   30  108563.954 ± 3078.392  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_744._Benchmark.benchmark_Cluster_744$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_744._Benchmark.benchmark_Cluster_744

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5250.051 ops/s
# Warmup Iteration   2: 20550.787 ops/s
# Warmup Iteration   3: 19557.965 ops/s
# Warmup Iteration   4: 22447.796 ops/s
# Warmup Iteration   5: 21111.179 ops/s
# Warmup Iteration   6: 27411.458 ops/s
# Warmup Iteration   7: 20418.157 ops/s
# Warmup Iteration   8: 19900.651 ops/s
# Warmup Iteration   9: 20273.210 ops/s
# Warmup Iteration  10: 20572.972 ops/s
# Warmup Iteration  11: 19890.678 ops/s
# Warmup Iteration  12: 20711.838 ops/s
# Warmup Iteration  13: 20570.920 ops/s
# Warmup Iteration  14: 20106.802 ops/s
# Warmup Iteration  15: 19717.647 ops/s
# Warmup Iteration  16: 20898.051 ops/s
# Warmup Iteration  17: 20252.435 ops/s
# Warmup Iteration  18: 20114.561 ops/s
# Warmup Iteration  19: 20530.388 ops/s
# Warmup Iteration  20: 20205.435 ops/s
# Warmup Iteration  21: 20428.298 ops/s
# Warmup Iteration  22: 20350.592 ops/s
# Warmup Iteration  23: 20043.305 ops/s
# Warmup Iteration  24: 19920.243 ops/s
# Warmup Iteration  25: 20707.686 ops/s
# Warmup Iteration  26: 19811.682 ops/s
# Warmup Iteration  27: 19693.253 ops/s
# Warmup Iteration  28: 20247.383 ops/s
# Warmup Iteration  29: 20360.542 ops/s
# Warmup Iteration  30: 19900.380 ops/s
Iteration   1: 20655.463 ops/s
Iteration   2: 20359.167 ops/s
Iteration   3: 20884.071 ops/s
Iteration   4: 20816.568 ops/s
Iteration   5: 20340.847 ops/s
Iteration   6: 20609.009 ops/s
Iteration   7: 20647.914 ops/s
Iteration   8: 20557.982 ops/s
Iteration   9: 20126.854 ops/s
Iteration  10: 21566.800 ops/s
Iteration  11: 20419.528 ops/s
Iteration  12: 20426.016 ops/s
Iteration  13: 20247.662 ops/s
Iteration  14: 20436.463 ops/s
Iteration  15: 19635.514 ops/s
Iteration  16: 20134.623 ops/s
Iteration  17: 19521.289 ops/s
Iteration  18: 20414.423 ops/s
Iteration  19: 20395.570 ops/s
Iteration  20: 20496.373 ops/s
Iteration  21: 20110.160 ops/s
Iteration  22: 20019.622 ops/s
Iteration  23: 20117.026 ops/s
Iteration  24: 20243.933 ops/s
Iteration  25: 20388.211 ops/s
Iteration  26: 20709.454 ops/s
Iteration  27: 20359.338 ops/s
Iteration  28: 20052.933 ops/s
Iteration  29: 20219.768 ops/s
Iteration  30: 19941.576 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_744._Benchmark.benchmark_Cluster_744":
  20361.805 ±(99.9%) 255.964 ops/s [Average]
  (min, avg, max) = (19521.289, 20361.805, 21566.800), stdev = 383.115
  CI (99.9%): [20105.841, 20617.769] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_744._Benchmark.benchmark_Cluster_744  thrpt   30  20361.805 ± 255.964  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_745._Benchmark.benchmark_Cluster_745$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_745._Benchmark.benchmark_Cluster_745

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4146.794 ops/s
# Warmup Iteration   2: 23379.091 ops/s
# Warmup Iteration   3: 17622.379 ops/s
# Warmup Iteration   4: 17750.266 ops/s
# Warmup Iteration   5: 22631.143 ops/s
# Warmup Iteration   6: 17571.929 ops/s
# Warmup Iteration   7: 16656.750 ops/s
# Warmup Iteration   8: 18106.153 ops/s
# Warmup Iteration   9: 17264.485 ops/s
# Warmup Iteration  10: 17533.301 ops/s
# Warmup Iteration  11: 17165.024 ops/s
# Warmup Iteration  12: 17737.008 ops/s
# Warmup Iteration  13: 16789.861 ops/s
# Warmup Iteration  14: 17496.779 ops/s
# Warmup Iteration  15: 17908.464 ops/s
# Warmup Iteration  16: 18088.116 ops/s
# Warmup Iteration  17: 18141.943 ops/s
# Warmup Iteration  18: 18261.275 ops/s
# Warmup Iteration  19: 17718.455 ops/s
# Warmup Iteration  20: 17498.727 ops/s
# Warmup Iteration  21: 17782.956 ops/s
# Warmup Iteration  22: 16875.845 ops/s
# Warmup Iteration  23: 17032.298 ops/s
# Warmup Iteration  24: 16949.418 ops/s
# Warmup Iteration  25: 16818.945 ops/s
# Warmup Iteration  26: 16275.754 ops/s
# Warmup Iteration  27: 16876.313 ops/s
# Warmup Iteration  28: 17462.342 ops/s
# Warmup Iteration  29: 16814.141 ops/s
# Warmup Iteration  30: 17732.574 ops/s
Iteration   1: 21406.124 ops/s
Iteration   2: 17656.851 ops/s
Iteration   3: 21595.260 ops/s
Iteration   4: 17360.571 ops/s
Iteration   5: 17548.282 ops/s
Iteration   6: 17890.253 ops/s
Iteration   7: 17391.820 ops/s
Iteration   8: 17936.216 ops/s
Iteration   9: 17811.420 ops/s
Iteration  10: 17462.772 ops/s
Iteration  11: 17933.800 ops/s
Iteration  12: 17400.815 ops/s
Iteration  13: 17152.970 ops/s
Iteration  14: 17676.734 ops/s
Iteration  15: 17385.342 ops/s
Iteration  16: 17974.496 ops/s
Iteration  17: 17547.609 ops/s
Iteration  18: 18337.857 ops/s
Iteration  19: 17709.758 ops/s
Iteration  20: 18202.351 ops/s
Iteration  21: 17918.124 ops/s
Iteration  22: 17582.621 ops/s
Iteration  23: 17565.630 ops/s
Iteration  24: 18421.171 ops/s
Iteration  25: 17458.502 ops/s
Iteration  26: 17520.815 ops/s
Iteration  27: 16945.356 ops/s
Iteration  28: 17439.267 ops/s
Iteration  29: 17596.733 ops/s
Iteration  30: 17606.841 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_745._Benchmark.benchmark_Cluster_745":
  17914.545 ±(99.9%) 685.969 ops/s [Average]
  (min, avg, max) = (16945.356, 17914.545, 21595.260), stdev = 1026.727
  CI (99.9%): [17228.576, 18600.515] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_745._Benchmark.benchmark_Cluster_745  thrpt   30  17914.545 ± 685.969  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_746._Benchmark.benchmark_Cluster_746$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_746._Benchmark.benchmark_Cluster_746

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7491.851 ops/s
# Warmup Iteration   2: 33900.024 ops/s
# Warmup Iteration   3: 36035.148 ops/s
# Warmup Iteration   4: 38422.435 ops/s
# Warmup Iteration   5: 32917.865 ops/s
# Warmup Iteration   6: 48855.948 ops/s
# Warmup Iteration   7: 46361.951 ops/s
# Warmup Iteration   8: 47139.017 ops/s
# Warmup Iteration   9: 47193.754 ops/s
# Warmup Iteration  10: 36987.038 ops/s
# Warmup Iteration  11: 50680.501 ops/s
# Warmup Iteration  12: 45590.835 ops/s
# Warmup Iteration  13: 29804.321 ops/s
# Warmup Iteration  14: 52636.012 ops/s
# Warmup Iteration  15: 104706.631 ops/s
# Warmup Iteration  16: 123411.234 ops/s
# Warmup Iteration  17: 125332.493 ops/s
# Warmup Iteration  18: 119372.813 ops/s
# Warmup Iteration  19: 122630.978 ops/s
# Warmup Iteration  20: 118855.672 ops/s
# Warmup Iteration  21: 116842.945 ops/s
# Warmup Iteration  22: 124780.743 ops/s
# Warmup Iteration  23: 123600.574 ops/s
# Warmup Iteration  24: 126467.431 ops/s
# Warmup Iteration  25: 124266.811 ops/s
# Warmup Iteration  26: 123656.469 ops/s
# Warmup Iteration  27: 125291.943 ops/s
# Warmup Iteration  28: 122133.552 ops/s
# Warmup Iteration  29: 126538.905 ops/s
# Warmup Iteration  30: 128269.011 ops/s
Iteration   1: 120465.320 ops/s
Iteration   2: 126622.885 ops/s
Iteration   3: 119861.675 ops/s
Iteration   4: 128055.552 ops/s
Iteration   5: 120381.154 ops/s
Iteration   6: 122480.689 ops/s
Iteration   7: 129238.986 ops/s
Iteration   8: 120223.852 ops/s
Iteration   9: 127526.536 ops/s
Iteration  10: 119927.699 ops/s
Iteration  11: 125627.034 ops/s
Iteration  12: 122881.297 ops/s
Iteration  13: 120720.138 ops/s
Iteration  14: 126692.057 ops/s
Iteration  15: 125189.722 ops/s
Iteration  16: 119659.018 ops/s
Iteration  17: 126628.565 ops/s
Iteration  18: 123451.103 ops/s
Iteration  19: 124145.340 ops/s
Iteration  20: 121369.701 ops/s
Iteration  21: 122598.711 ops/s
Iteration  22: 128818.771 ops/s
Iteration  23: 121733.068 ops/s
Iteration  24: 123897.991 ops/s
Iteration  25: 124404.562 ops/s
Iteration  26: 123018.972 ops/s
Iteration  27: 124680.748 ops/s
Iteration  28: 121763.976 ops/s
Iteration  29: 123825.541 ops/s
Iteration  30: 123143.510 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_746._Benchmark.benchmark_Cluster_746":
  123634.472 ±(99.9%) 1877.735 ops/s [Average]
  (min, avg, max) = (119659.018, 123634.472, 129238.986), stdev = 2810.505
  CI (99.9%): [121756.738, 125512.207] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_746._Benchmark.benchmark_Cluster_746  thrpt   30  123634.472 ± 1877.735  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_747._Benchmark.benchmark_Cluster_747$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_747._Benchmark.benchmark_Cluster_747

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4078.511 ops/s
# Warmup Iteration   2: 27559.888 ops/s
# Warmup Iteration   3: 40120.069 ops/s
# Warmup Iteration   4: 45742.876 ops/s
# Warmup Iteration   5: 76108.768 ops/s
# Warmup Iteration   6: 113466.736 ops/s
# Warmup Iteration   7: 110881.778 ops/s
# Warmup Iteration   8: 109332.643 ops/s
# Warmup Iteration   9: 117101.351 ops/s
# Warmup Iteration  10: 112594.468 ops/s
# Warmup Iteration  11: 107376.207 ops/s
# Warmup Iteration  12: 111620.312 ops/s
# Warmup Iteration  13: 107159.496 ops/s
# Warmup Iteration  14: 118907.034 ops/s
# Warmup Iteration  15: 111935.028 ops/s
# Warmup Iteration  16: 113103.591 ops/s
# Warmup Iteration  17: 118667.813 ops/s
# Warmup Iteration  18: 112563.269 ops/s
# Warmup Iteration  19: 117834.885 ops/s
# Warmup Iteration  20: 119124.693 ops/s
# Warmup Iteration  21: 119797.054 ops/s
# Warmup Iteration  22: 117897.427 ops/s
# Warmup Iteration  23: 117988.184 ops/s
# Warmup Iteration  24: 119196.467 ops/s
# Warmup Iteration  25: 118414.869 ops/s
# Warmup Iteration  26: 120995.061 ops/s
# Warmup Iteration  27: 95509.617 ops/s
# Warmup Iteration  28: 118720.347 ops/s
# Warmup Iteration  29: 117623.714 ops/s
# Warmup Iteration  30: 115164.147 ops/s
Iteration   1: 122743.875 ops/s
Iteration   2: 121540.944 ops/s
Iteration   3: 121156.981 ops/s
Iteration   4: 118680.119 ops/s
Iteration   5: 118262.180 ops/s
Iteration   6: 123872.323 ops/s
Iteration   7: 112910.149 ops/s
Iteration   8: 123787.085 ops/s
Iteration   9: 115644.060 ops/s
Iteration  10: 119910.837 ops/s
Iteration  11: 122975.772 ops/s
Iteration  12: 115263.619 ops/s
Iteration  13: 122638.307 ops/s
Iteration  14: 118857.901 ops/s
Iteration  15: 118274.705 ops/s
Iteration  16: 122831.250 ops/s
Iteration  17: 115815.538 ops/s
Iteration  18: 119749.687 ops/s
Iteration  19: 115461.493 ops/s
Iteration  20: 123545.783 ops/s
Iteration  21: 117060.822 ops/s
Iteration  22: 119478.522 ops/s
Iteration  23: 123887.121 ops/s
Iteration  24: 118069.287 ops/s
Iteration  25: 118652.044 ops/s
Iteration  26: 115987.135 ops/s
Iteration  27: 119573.716 ops/s
Iteration  28: 124003.402 ops/s
Iteration  29: 122405.664 ops/s
Iteration  30: 116649.091 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_747._Benchmark.benchmark_Cluster_747":
  119656.314 ±(99.9%) 2117.226 ops/s [Average]
  (min, avg, max) = (112910.149, 119656.314, 124003.402), stdev = 3168.964
  CI (99.9%): [117539.088, 121773.539] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_747._Benchmark.benchmark_Cluster_747  thrpt   30  119656.314 ± 2117.226  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_748._Benchmark.benchmark_Cluster_748$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_748._Benchmark.benchmark_Cluster_748

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15171.546 ops/s
# Warmup Iteration   2: 45566.427 ops/s
# Warmup Iteration   3: 67417.128 ops/s
# Warmup Iteration   4: 89599.176 ops/s
# Warmup Iteration   5: 95390.131 ops/s
# Warmup Iteration   6: 83078.877 ops/s
# Warmup Iteration   7: 95575.889 ops/s
# Warmup Iteration   8: 100732.433 ops/s
# Warmup Iteration   9: 95628.071 ops/s
# Warmup Iteration  10: 94500.532 ops/s
# Warmup Iteration  11: 99752.191 ops/s
# Warmup Iteration  12: 95791.237 ops/s
# Warmup Iteration  13: 100688.659 ops/s
# Warmup Iteration  14: 94763.961 ops/s
# Warmup Iteration  15: 99841.426 ops/s
# Warmup Iteration  16: 97410.930 ops/s
# Warmup Iteration  17: 99221.095 ops/s
# Warmup Iteration  18: 102346.048 ops/s
# Warmup Iteration  19: 100715.670 ops/s
# Warmup Iteration  20: 103512.600 ops/s
# Warmup Iteration  21: 105269.718 ops/s
# Warmup Iteration  22: 99961.719 ops/s
# Warmup Iteration  23: 99161.584 ops/s
# Warmup Iteration  24: 102780.827 ops/s
# Warmup Iteration  25: 98933.198 ops/s
# Warmup Iteration  26: 101371.425 ops/s
# Warmup Iteration  27: 103290.041 ops/s
# Warmup Iteration  28: 95909.832 ops/s
# Warmup Iteration  29: 100370.635 ops/s
# Warmup Iteration  30: 105103.956 ops/s
Iteration   1: 97813.400 ops/s
Iteration   2: 103029.813 ops/s
Iteration   3: 99472.954 ops/s
Iteration   4: 102590.012 ops/s
Iteration   5: 104216.672 ops/s
Iteration   6: 101018.109 ops/s
Iteration   7: 104409.101 ops/s
Iteration   8: 99382.317 ops/s
Iteration   9: 104678.005 ops/s
Iteration  10: 101859.807 ops/s
Iteration  11: 99598.620 ops/s
Iteration  12: 104436.523 ops/s
Iteration  13: 99587.619 ops/s
Iteration  14: 104182.036 ops/s
Iteration  15: 101743.007 ops/s
Iteration  16: 99391.989 ops/s
Iteration  17: 101985.241 ops/s
Iteration  18: 99749.626 ops/s
Iteration  19: 100895.540 ops/s
Iteration  20: 101657.112 ops/s
Iteration  21: 103260.552 ops/s
Iteration  22: 100012.338 ops/s
Iteration  23: 101298.323 ops/s
Iteration  24: 106121.558 ops/s
Iteration  25: 100999.102 ops/s
Iteration  26: 98691.329 ops/s
Iteration  27: 103788.754 ops/s
Iteration  28: 99092.210 ops/s
Iteration  29: 105210.189 ops/s
Iteration  30: 98911.165 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_748._Benchmark.benchmark_Cluster_748":
  101636.101 ±(99.9%) 1514.910 ops/s [Average]
  (min, avg, max) = (97813.400, 101636.101, 106121.558), stdev = 2267.445
  CI (99.9%): [100121.191, 103151.010] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_748._Benchmark.benchmark_Cluster_748  thrpt   30  101636.101 ± 1514.910  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_749._Benchmark.benchmark_Cluster_749$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_749._Benchmark.benchmark_Cluster_749

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.663 ops/s
# Warmup Iteration   2: 4116.122 ops/s
# Warmup Iteration   3: 29315.188 ops/s
# Warmup Iteration   4: 28531.591 ops/s
# Warmup Iteration   5: 34372.037 ops/s
# Warmup Iteration   6: 34101.742 ops/s
# Warmup Iteration   7: 26122.055 ops/s
# Warmup Iteration   8: 40886.122 ops/s
# Warmup Iteration   9: 33592.103 ops/s
# Warmup Iteration  10: 35313.636 ops/s
# Warmup Iteration  11: 55568.892 ops/s
# Warmup Iteration  12: 54799.565 ops/s
# Warmup Iteration  13: 125088.840 ops/s
# Warmup Iteration  14: 116068.872 ops/s
# Warmup Iteration  15: 123192.750 ops/s
# Warmup Iteration  16: 116919.426 ops/s
# Warmup Iteration  17: 119686.130 ops/s
# Warmup Iteration  18: 118013.974 ops/s
# Warmup Iteration  19: 117826.943 ops/s
# Warmup Iteration  20: 122266.996 ops/s
# Warmup Iteration  21: 92553.350 ops/s
# Warmup Iteration  22: 120390.911 ops/s
# Warmup Iteration  23: 119188.407 ops/s
# Warmup Iteration  24: 123187.285 ops/s
# Warmup Iteration  25: 120676.565 ops/s
# Warmup Iteration  26: 117745.508 ops/s
# Warmup Iteration  27: 119982.674 ops/s
# Warmup Iteration  28: 114533.133 ops/s
# Warmup Iteration  29: 124115.266 ops/s
# Warmup Iteration  30: 118073.087 ops/s
Iteration   1: 121850.292 ops/s
Iteration   2: 119736.937 ops/s
Iteration   3: 127189.895 ops/s
Iteration   4: 125690.025 ops/s
Iteration   5: 113273.779 ops/s
Iteration   6: 126174.314 ops/s
Iteration   7: 118133.050 ops/s
Iteration   8: 118738.554 ops/s
Iteration   9: 126054.887 ops/s
Iteration  10: 119155.561 ops/s
Iteration  11: 118716.297 ops/s
Iteration  12: 120060.723 ops/s
Iteration  13: 122199.582 ops/s
Iteration  14: 118440.101 ops/s
Iteration  15: 117749.265 ops/s
Iteration  16: 124718.806 ops/s
Iteration  17: 118812.426 ops/s
Iteration  18: 122451.754 ops/s
Iteration  19: 115336.505 ops/s
Iteration  20: 118772.788 ops/s
Iteration  21: 125933.774 ops/s
Iteration  22: 115611.361 ops/s
Iteration  23: 122690.158 ops/s
Iteration  24: 119799.532 ops/s
Iteration  25: 119301.226 ops/s
Iteration  26: 119025.891 ops/s
Iteration  27: 123304.732 ops/s
Iteration  28: 118043.620 ops/s
Iteration  29: 125853.829 ops/s
Iteration  30: 121910.343 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_749._Benchmark.benchmark_Cluster_749":
  120824.334 ±(99.9%) 2404.998 ops/s [Average]
  (min, avg, max) = (113273.779, 120824.334, 127189.895), stdev = 3599.688
  CI (99.9%): [118419.336, 123229.331] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_749._Benchmark.benchmark_Cluster_749  thrpt   30  120824.334 ± 2404.998  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_75._Benchmark.benchmark_Cluster_75$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_75._Benchmark.benchmark_Cluster_75

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6527.692 ops/s
# Warmup Iteration   2: 30688.693 ops/s
# Warmup Iteration   3: 69150.616 ops/s
# Warmup Iteration   4: 58299.619 ops/s
# Warmup Iteration   5: 123266.955 ops/s
# Warmup Iteration   6: 110045.336 ops/s
# Warmup Iteration   7: 113840.488 ops/s
# Warmup Iteration   8: 112597.680 ops/s
# Warmup Iteration   9: 124800.043 ops/s
# Warmup Iteration  10: 118650.069 ops/s
# Warmup Iteration  11: 121301.219 ops/s
# Warmup Iteration  12: 123715.792 ops/s
# Warmup Iteration  13: 122907.437 ops/s
# Warmup Iteration  14: 122280.196 ops/s
# Warmup Iteration  15: 117168.518 ops/s
# Warmup Iteration  16: 120999.433 ops/s
# Warmup Iteration  17: 120620.830 ops/s
# Warmup Iteration  18: 122306.629 ops/s
# Warmup Iteration  19: 127509.211 ops/s
# Warmup Iteration  20: 122428.051 ops/s
# Warmup Iteration  21: 124616.889 ops/s
# Warmup Iteration  22: 123098.408 ops/s
# Warmup Iteration  23: 123010.956 ops/s
# Warmup Iteration  24: 123262.520 ops/s
# Warmup Iteration  25: 119111.748 ops/s
# Warmup Iteration  26: 127446.938 ops/s
# Warmup Iteration  27: 120887.464 ops/s
# Warmup Iteration  28: 125127.381 ops/s
# Warmup Iteration  29: 121451.616 ops/s
# Warmup Iteration  30: 119347.694 ops/s
Iteration   1: 128537.008 ops/s
Iteration   2: 117791.826 ops/s
Iteration   3: 125754.568 ops/s
Iteration   4: 122173.795 ops/s
Iteration   5: 121806.147 ops/s
Iteration   6: 127757.551 ops/s
Iteration   7: 119053.678 ops/s
Iteration   8: 127513.160 ops/s
Iteration   9: 122302.974 ops/s
Iteration  10: 124115.849 ops/s
Iteration  11: 124003.332 ops/s
Iteration  12: 119522.945 ops/s
Iteration  13: 127250.356 ops/s
Iteration  14: 124773.001 ops/s
Iteration  15: 118622.163 ops/s
Iteration  16: 121801.217 ops/s
Iteration  17: 126966.682 ops/s
Iteration  18: 122506.370 ops/s
Iteration  19: 124288.458 ops/s
Iteration  20: 123755.151 ops/s
Iteration  21: 120953.929 ops/s
Iteration  22: 127473.371 ops/s
Iteration  23: 118432.514 ops/s
Iteration  24: 128679.625 ops/s
Iteration  25: 121052.530 ops/s
Iteration  26: 124868.479 ops/s
Iteration  27: 125511.054 ops/s
Iteration  28: 122257.900 ops/s
Iteration  29: 119872.890 ops/s
Iteration  30: 129483.728 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_75._Benchmark.benchmark_Cluster_75":
  123629.408 ±(99.9%) 2261.579 ops/s [Average]
  (min, avg, max) = (117791.826, 123629.408, 129483.728), stdev = 3385.026
  CI (99.9%): [121367.829, 125890.988] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_75._Benchmark.benchmark_Cluster_75  thrpt   30  123629.408 ± 2261.579  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_750._Benchmark.benchmark_Cluster_750$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_750._Benchmark.benchmark_Cluster_750

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.842 ops/s
# Warmup Iteration   2: 13333.375 ops/s
# Warmup Iteration   3: 28675.186 ops/s
# Warmup Iteration   4: 40630.601 ops/s
# Warmup Iteration   5: 39638.169 ops/s
# Warmup Iteration   6: 113696.266 ops/s
# Warmup Iteration   7: 122727.744 ops/s
# Warmup Iteration   8: 116340.604 ops/s
# Warmup Iteration   9: 123081.033 ops/s
# Warmup Iteration  10: 124259.504 ops/s
# Warmup Iteration  11: 113439.539 ops/s
# Warmup Iteration  12: 122111.760 ops/s
# Warmup Iteration  13: 114332.710 ops/s
# Warmup Iteration  14: 116458.931 ops/s
# Warmup Iteration  15: 104593.761 ops/s
# Warmup Iteration  16: 118242.231 ops/s
# Warmup Iteration  17: 129743.346 ops/s
# Warmup Iteration  18: 124980.748 ops/s
# Warmup Iteration  19: 118194.212 ops/s
# Warmup Iteration  20: 119398.928 ops/s
# Warmup Iteration  21: 120757.837 ops/s
# Warmup Iteration  22: 125789.748 ops/s
# Warmup Iteration  23: 121905.523 ops/s
# Warmup Iteration  24: 122009.080 ops/s
# Warmup Iteration  25: 123504.675 ops/s
# Warmup Iteration  26: 117531.361 ops/s
# Warmup Iteration  27: 123412.931 ops/s
# Warmup Iteration  28: 119296.183 ops/s
# Warmup Iteration  29: 123467.135 ops/s
# Warmup Iteration  30: 129197.790 ops/s
Iteration   1: 119910.495 ops/s
Iteration   2: 121977.009 ops/s
Iteration   3: 123998.348 ops/s
Iteration   4: 121841.260 ops/s
Iteration   5: 124627.154 ops/s
Iteration   6: 119881.927 ops/s
Iteration   7: 125923.217 ops/s
Iteration   8: 125975.333 ops/s
Iteration   9: 119489.346 ops/s
Iteration  10: 126190.922 ops/s
Iteration  11: 121127.590 ops/s
Iteration  12: 127870.101 ops/s
Iteration  13: 123861.429 ops/s
Iteration  14: 118289.277 ops/s
Iteration  15: 121530.691 ops/s
Iteration  16: 125163.084 ops/s
Iteration  17: 120689.569 ops/s
Iteration  18: 125769.234 ops/s
Iteration  19: 122691.572 ops/s
Iteration  20: 123534.480 ops/s
Iteration  21: 124507.286 ops/s
Iteration  22: 124199.228 ops/s
Iteration  23: 124322.769 ops/s
Iteration  24: 124252.293 ops/s
Iteration  25: 121956.317 ops/s
Iteration  26: 123922.732 ops/s
Iteration  27: 125023.488 ops/s
Iteration  28: 123510.401 ops/s
Iteration  29: 127594.406 ops/s
Iteration  30: 119423.177 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_750._Benchmark.benchmark_Cluster_750":
  123301.804 ±(99.9%) 1664.887 ops/s [Average]
  (min, avg, max) = (118289.277, 123301.804, 127870.101), stdev = 2491.924
  CI (99.9%): [121636.918, 124966.691] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_750._Benchmark.benchmark_Cluster_750  thrpt   30  123301.804 ± 1664.887  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_751._Benchmark.benchmark_Cluster_751$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_751._Benchmark.benchmark_Cluster_751

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.829 ops/s
# Warmup Iteration   2: 4223.773 ops/s
# Warmup Iteration   3: 20051.716 ops/s
# Warmup Iteration   4: 25454.842 ops/s
# Warmup Iteration   5: 38327.957 ops/s
# Warmup Iteration   6: 36605.502 ops/s
# Warmup Iteration   7: 75967.347 ops/s
# Warmup Iteration   8: 94141.524 ops/s
# Warmup Iteration   9: 96650.872 ops/s
# Warmup Iteration  10: 102592.786 ops/s
# Warmup Iteration  11: 95725.161 ops/s
# Warmup Iteration  12: 97289.908 ops/s
# Warmup Iteration  13: 98764.695 ops/s
# Warmup Iteration  14: 95848.229 ops/s
# Warmup Iteration  15: 99432.473 ops/s
# Warmup Iteration  16: 94004.637 ops/s
# Warmup Iteration  17: 96635.100 ops/s
# Warmup Iteration  18: 97945.385 ops/s
# Warmup Iteration  19: 93053.289 ops/s
# Warmup Iteration  20: 99678.975 ops/s
# Warmup Iteration  21: 101566.428 ops/s
# Warmup Iteration  22: 93204.107 ops/s
# Warmup Iteration  23: 98902.640 ops/s
# Warmup Iteration  24: 98514.413 ops/s
# Warmup Iteration  25: 96703.672 ops/s
# Warmup Iteration  26: 98693.755 ops/s
# Warmup Iteration  27: 95292.606 ops/s
# Warmup Iteration  28: 99714.590 ops/s
# Warmup Iteration  29: 96996.518 ops/s
# Warmup Iteration  30: 95144.468 ops/s
Iteration   1: 99225.078 ops/s
Iteration   2: 94590.969 ops/s
Iteration   3: 98387.964 ops/s
Iteration   4: 99859.588 ops/s
Iteration   5: 95243.630 ops/s
Iteration   6: 101265.196 ops/s
Iteration   7: 96062.682 ops/s
Iteration   8: 100788.992 ops/s
Iteration   9: 95613.873 ops/s
Iteration  10: 92707.819 ops/s
Iteration  11: 99967.075 ops/s
Iteration  12: 95611.834 ops/s
Iteration  13: 96594.222 ops/s
Iteration  14: 99511.239 ops/s
Iteration  15: 101827.025 ops/s
Iteration  16: 96128.899 ops/s
Iteration  17: 95196.074 ops/s
Iteration  18: 100122.018 ops/s
Iteration  19: 94440.638 ops/s
Iteration  20: 98779.687 ops/s
Iteration  21: 93290.825 ops/s
Iteration  22: 98972.411 ops/s
Iteration  23: 92838.496 ops/s
Iteration  24: 97267.160 ops/s
Iteration  25: 95927.387 ops/s
Iteration  26: 97946.927 ops/s
Iteration  27: 99818.342 ops/s
Iteration  28: 95353.019 ops/s
Iteration  29: 101796.717 ops/s
Iteration  30: 95594.975 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_751._Benchmark.benchmark_Cluster_751":
  97357.692 ±(99.9%) 1800.352 ops/s [Average]
  (min, avg, max) = (92707.819, 97357.692, 101827.025), stdev = 2694.683
  CI (99.9%): [95557.340, 99158.045] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_751._Benchmark.benchmark_Cluster_751  thrpt   30  97357.692 ± 1800.352  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_752._Benchmark.benchmark_Cluster_752$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_752._Benchmark.benchmark_Cluster_752

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18040.182 ops/s
# Warmup Iteration   2: 85930.850 ops/s
# Warmup Iteration   3: 100329.691 ops/s
# Warmup Iteration   4: 107526.272 ops/s
# Warmup Iteration   5: 118979.314 ops/s
# Warmup Iteration   6: 112913.757 ops/s
# Warmup Iteration   7: 113254.764 ops/s
# Warmup Iteration   8: 112355.807 ops/s
# Warmup Iteration   9: 90516.880 ops/s
# Warmup Iteration  10: 116721.269 ops/s
# Warmup Iteration  11: 113137.388 ops/s
# Warmup Iteration  12: 113031.349 ops/s
# Warmup Iteration  13: 114151.031 ops/s
# Warmup Iteration  14: 112380.972 ops/s
# Warmup Iteration  15: 111798.541 ops/s
# Warmup Iteration  16: 120103.750 ops/s
# Warmup Iteration  17: 116829.129 ops/s
# Warmup Iteration  18: 118887.629 ops/s
# Warmup Iteration  19: 120313.481 ops/s
# Warmup Iteration  20: 123994.080 ops/s
# Warmup Iteration  21: 115169.775 ops/s
# Warmup Iteration  22: 120114.890 ops/s
# Warmup Iteration  23: 118498.761 ops/s
# Warmup Iteration  24: 115747.103 ops/s
# Warmup Iteration  25: 124946.897 ops/s
# Warmup Iteration  26: 116820.556 ops/s
# Warmup Iteration  27: 122311.294 ops/s
# Warmup Iteration  28: 116096.787 ops/s
# Warmup Iteration  29: 120670.639 ops/s
# Warmup Iteration  30: 122194.020 ops/s
Iteration   1: 116744.209 ops/s
Iteration   2: 125675.044 ops/s
Iteration   3: 121236.065 ops/s
Iteration   4: 111845.297 ops/s
Iteration   5: 123097.453 ops/s
Iteration   6: 122291.600 ops/s
Iteration   7: 116016.400 ops/s
Iteration   8: 122104.445 ops/s
Iteration   9: 124321.644 ops/s
Iteration  10: 113711.149 ops/s
Iteration  11: 121263.355 ops/s
Iteration  12: 116975.563 ops/s
Iteration  13: 123743.586 ops/s
Iteration  14: 123076.998 ops/s
Iteration  15: 117864.015 ops/s
Iteration  16: 115980.268 ops/s
Iteration  17: 124035.687 ops/s
Iteration  18: 118555.307 ops/s
Iteration  19: 118564.944 ops/s
Iteration  20: 122339.246 ops/s
Iteration  21: 118525.751 ops/s
Iteration  22: 122982.512 ops/s
Iteration  23: 116684.557 ops/s
Iteration  24: 121545.571 ops/s
Iteration  25: 122580.938 ops/s
Iteration  26: 121482.142 ops/s
Iteration  27: 120627.683 ops/s
Iteration  28: 117124.607 ops/s
Iteration  29: 122504.591 ops/s
Iteration  30: 115585.700 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_752._Benchmark.benchmark_Cluster_752":
  119969.544 ±(99.9%) 2330.171 ops/s [Average]
  (min, avg, max) = (111845.297, 119969.544, 125675.044), stdev = 3487.690
  CI (99.9%): [117639.374, 122299.715] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_752._Benchmark.benchmark_Cluster_752  thrpt   30  119969.544 ± 2330.171  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_753._Benchmark.benchmark_Cluster_753$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_753._Benchmark.benchmark_Cluster_753

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9867.308 ops/s
# Warmup Iteration   2: 26280.741 ops/s
# Warmup Iteration   3: 63864.802 ops/s
# Warmup Iteration   4: 89042.415 ops/s
# Warmup Iteration   5: 92418.162 ops/s
# Warmup Iteration   6: 98578.549 ops/s
# Warmup Iteration   7: 101087.131 ops/s
# Warmup Iteration   8: 103579.674 ops/s
# Warmup Iteration   9: 99469.403 ops/s
# Warmup Iteration  10: 103151.779 ops/s
# Warmup Iteration  11: 102164.740 ops/s
# Warmup Iteration  12: 104761.024 ops/s
# Warmup Iteration  13: 99198.425 ops/s
# Warmup Iteration  14: 101587.714 ops/s
# Warmup Iteration  15: 100428.893 ops/s
# Warmup Iteration  16: 102382.787 ops/s
# Warmup Iteration  17: 103656.964 ops/s
# Warmup Iteration  18: 105221.617 ops/s
# Warmup Iteration  19: 106581.622 ops/s
# Warmup Iteration  20: 100627.257 ops/s
# Warmup Iteration  21: 108475.879 ops/s
# Warmup Iteration  22: 104977.613 ops/s
# Warmup Iteration  23: 103636.345 ops/s
# Warmup Iteration  24: 106271.597 ops/s
# Warmup Iteration  25: 103315.893 ops/s
# Warmup Iteration  26: 107361.142 ops/s
# Warmup Iteration  27: 102522.097 ops/s
# Warmup Iteration  28: 97415.666 ops/s
# Warmup Iteration  29: 106274.709 ops/s
# Warmup Iteration  30: 106708.547 ops/s
Iteration   1: 110948.569 ops/s
Iteration   2: 107785.182 ops/s
Iteration   3: 103773.501 ops/s
Iteration   4: 106370.038 ops/s
Iteration   5: 103975.921 ops/s
Iteration   6: 105269.647 ops/s
Iteration   7: 103412.312 ops/s
Iteration   8: 106086.869 ops/s
Iteration   9: 107317.312 ops/s
Iteration  10: 107625.404 ops/s
Iteration  11: 104022.859 ops/s
Iteration  12: 107531.663 ops/s
Iteration  13: 105962.674 ops/s
Iteration  14: 104445.253 ops/s
Iteration  15: 108613.845 ops/s
Iteration  16: 104640.552 ops/s
Iteration  17: 104206.767 ops/s
Iteration  18: 109452.624 ops/s
Iteration  19: 103602.080 ops/s
Iteration  20: 105356.497 ops/s
Iteration  21: 109115.211 ops/s
Iteration  22: 102237.995 ops/s
Iteration  23: 107555.582 ops/s
Iteration  24: 102967.754 ops/s
Iteration  25: 109206.541 ops/s
Iteration  26: 104418.517 ops/s
Iteration  27: 107581.013 ops/s
Iteration  28: 103090.570 ops/s
Iteration  29: 104640.909 ops/s
Iteration  30: 109290.213 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_753._Benchmark.benchmark_Cluster_753":
  106016.796 ±(99.9%) 1564.495 ops/s [Average]
  (min, avg, max) = (102237.995, 106016.796, 110948.569), stdev = 2341.663
  CI (99.9%): [104452.300, 107581.291] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_753._Benchmark.benchmark_Cluster_753  thrpt   30  106016.796 ± 1564.495  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_754._Benchmark.benchmark_Cluster_754$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_754._Benchmark.benchmark_Cluster_754

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4736.126 ops/s
# Warmup Iteration   2: 18940.201 ops/s
# Warmup Iteration   3: 26778.455 ops/s
# Warmup Iteration   4: 54772.914 ops/s
# Warmup Iteration   5: 69361.670 ops/s
# Warmup Iteration   6: 65161.564 ops/s
# Warmup Iteration   7: 71326.449 ops/s
# Warmup Iteration   8: 73528.750 ops/s
# Warmup Iteration   9: 71596.332 ops/s
# Warmup Iteration  10: 61754.757 ops/s
# Warmup Iteration  11: 80420.845 ops/s
# Warmup Iteration  12: 63343.847 ops/s
# Warmup Iteration  13: 73757.558 ops/s
# Warmup Iteration  14: 76074.869 ops/s
# Warmup Iteration  15: 77544.250 ops/s
# Warmup Iteration  16: 69124.187 ops/s
# Warmup Iteration  17: 75832.205 ops/s
# Warmup Iteration  18: 62861.777 ops/s
# Warmup Iteration  19: 67100.327 ops/s
# Warmup Iteration  20: 59306.431 ops/s
# Warmup Iteration  21: 66122.574 ops/s
# Warmup Iteration  22: 69032.761 ops/s
# Warmup Iteration  23: 79246.572 ops/s
# Warmup Iteration  24: 71729.972 ops/s
# Warmup Iteration  25: 78693.207 ops/s
# Warmup Iteration  26: 69639.377 ops/s
# Warmup Iteration  27: 72019.660 ops/s
# Warmup Iteration  28: 72953.013 ops/s
# Warmup Iteration  29: 74674.568 ops/s
# Warmup Iteration  30: 73055.131 ops/s
Iteration   1: 69030.703 ops/s
Iteration   2: 75222.603 ops/s
Iteration   3: 74857.257 ops/s
Iteration   4: 79139.744 ops/s
Iteration   5: 75335.015 ops/s
Iteration   6: 76099.092 ops/s
Iteration   7: 72505.994 ops/s
Iteration   8: 73461.692 ops/s
Iteration   9: 75331.446 ops/s
Iteration  10: 66267.586 ops/s
Iteration  11: 76852.879 ops/s
Iteration  12: 78747.554 ops/s
Iteration  13: 62536.232 ops/s
Iteration  14: 64020.993 ops/s
Iteration  15: 68894.170 ops/s
Iteration  16: 77299.960 ops/s
Iteration  17: 70776.397 ops/s
Iteration  18: 78147.701 ops/s
Iteration  19: 72942.434 ops/s
Iteration  20: 66884.147 ops/s
Iteration  21: 74549.558 ops/s
Iteration  22: 68276.514 ops/s
Iteration  23: 70577.704 ops/s
Iteration  24: 77554.501 ops/s
Iteration  25: 66714.062 ops/s
Iteration  26: 63331.113 ops/s
Iteration  27: 77130.639 ops/s
Iteration  28: 87106.615 ops/s
Iteration  29: 71490.098 ops/s
Iteration  30: 64174.663 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_754._Benchmark.benchmark_Cluster_754":
  72508.636 ±(99.9%) 3811.075 ops/s [Average]
  (min, avg, max) = (62536.232, 72508.636, 87106.615), stdev = 5704.238
  CI (99.9%): [68697.561, 76319.710] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_754._Benchmark.benchmark_Cluster_754  thrpt   30  72508.636 ± 3811.075  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_755._Benchmark.benchmark_Cluster_755$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_755._Benchmark.benchmark_Cluster_755

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7568.135 ops/s
# Warmup Iteration   2: 18735.357 ops/s
# Warmup Iteration   3: 19846.553 ops/s
# Warmup Iteration   4: 10157.350 ops/s
# Warmup Iteration   5: 28921.575 ops/s
# Warmup Iteration   6: 12576.727 ops/s
# Warmup Iteration   7: 14420.854 ops/s
# Warmup Iteration   8: 23267.311 ops/s
# Warmup Iteration   9: 25324.638 ops/s
# Warmup Iteration  10: 7132.857 ops/s
# Warmup Iteration  11: 3401.575 ops/s
# Warmup Iteration  12: 4482.146 ops/s
# Warmup Iteration  13: 4535.874 ops/s
# Warmup Iteration  14: 3818.878 ops/s
# Warmup Iteration  15: 5746.063 ops/s
# Warmup Iteration  16: 3010.205 ops/s
# Warmup Iteration  17: 4207.491 ops/s
# Warmup Iteration  18: 1573.986 ops/s
# Warmup Iteration  19: 3726.358 ops/s
# Warmup Iteration  20: 3015.016 ops/s
# Warmup Iteration  21: 3791.229 ops/s
# Warmup Iteration  22: 4326.599 ops/s
# Warmup Iteration  23: 3859.081 ops/s
# Warmup Iteration  24: 3670.361 ops/s
# Warmup Iteration  25: 1297.383 ops/s
# Warmup Iteration  26: 3185.256 ops/s
# Warmup Iteration  27: 3277.776 ops/s
# Warmup Iteration  28: 3364.908 ops/s
# Warmup Iteration  29: 3445.635 ops/s
# Warmup Iteration  30: 1036.190 ops/s
Iteration   1: 3890.223 ops/s
Iteration   2: 2486.426 ops/s
Iteration   3: 5079.974 ops/s
Iteration   4: 3992.606 ops/s
Iteration   5: 1632.653 ops/s
Iteration   6: 4279.992 ops/s
Iteration   7: 3235.793 ops/s
Iteration   8: 3675.038 ops/s
Iteration   9: 3251.603 ops/s
Iteration  10: 1113.678 ops/s
Iteration  11: 2927.832 ops/s
Iteration  12: 2840.802 ops/s
Iteration  13: 4013.144 ops/s
Iteration  14: 1628.403 ops/s
Iteration  15: 2097.674 ops/s
Iteration  16: 3180.777 ops/s
Iteration  17: 5125.906 ops/s
Iteration  18: 1620.011 ops/s
Iteration  19: 2958.722 ops/s
Iteration  20: 3785.279 ops/s
Iteration  21: 3169.175 ops/s
Iteration  22: 1514.259 ops/s
Iteration  23: 3684.120 ops/s
Iteration  24: 2432.220 ops/s
Iteration  25: 3608.238 ops/s
Iteration  26: 2670.468 ops/s
Iteration  27: 1044.600 ops/s
Iteration  28: 2847.052 ops/s
Iteration  29: 3496.597 ops/s
Iteration  30: 3783.151 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_755._Benchmark.benchmark_Cluster_755":
  3035.547 ±(99.9%) 712.810 ops/s [Average]
  (min, avg, max) = (1044.600, 3035.547, 5125.906), stdev = 1066.900
  CI (99.9%): [2322.737, 3748.357] (assumes normal distribution)


# Run complete. Total time: 00:01:34

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt     Score     Error  Units
Cluster_755._Benchmark.benchmark_Cluster_755  thrpt   30  3035.547 ± 712.810  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_756._Benchmark.benchmark_Cluster_756$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_756._Benchmark.benchmark_Cluster_756

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.733 ops/s
# Warmup Iteration   2: 4945.850 ops/s
# Warmup Iteration   3: 21059.955 ops/s
# Warmup Iteration   4: 21980.710 ops/s
# Warmup Iteration   5: 26151.076 ops/s
# Warmup Iteration   6: 27032.754 ops/s
# Warmup Iteration   7: 22723.020 ops/s
# Warmup Iteration   8: 34279.070 ops/s
# Warmup Iteration   9: 28121.452 ops/s
# Warmup Iteration  10: 35579.866 ops/s
# Warmup Iteration  11: 26033.702 ops/s
# Warmup Iteration  12: 35576.614 ops/s
# Warmup Iteration  13: 84602.439 ops/s
# Warmup Iteration  14: 89627.897 ops/s
# Warmup Iteration  15: 90360.522 ops/s
# Warmup Iteration  16: 87361.862 ops/s
# Warmup Iteration  17: 84722.278 ops/s
# Warmup Iteration  18: 86610.523 ops/s
# Warmup Iteration  19: 93829.483 ops/s
# Warmup Iteration  20: 86550.737 ops/s
# Warmup Iteration  21: 91112.330 ops/s
# Warmup Iteration  22: 89815.742 ops/s
# Warmup Iteration  23: 87662.096 ops/s
# Warmup Iteration  24: 91902.910 ops/s
# Warmup Iteration  25: 89005.677 ops/s
# Warmup Iteration  26: 94601.149 ops/s
# Warmup Iteration  27: 95230.724 ops/s
# Warmup Iteration  28: 89422.401 ops/s
# Warmup Iteration  29: 88188.159 ops/s
# Warmup Iteration  30: 91538.234 ops/s
Iteration   1: 89453.040 ops/s
Iteration   2: 98710.544 ops/s
Iteration   3: 92002.983 ops/s
Iteration   4: 88404.930 ops/s
Iteration   5: 91302.330 ops/s
Iteration   6: 93089.286 ops/s
Iteration   7: 87454.015 ops/s
Iteration   8: 91533.651 ops/s
Iteration   9: 91721.052 ops/s
Iteration  10: 93402.423 ops/s
Iteration  11: 90599.908 ops/s
Iteration  12: 87028.807 ops/s
Iteration  13: 95107.569 ops/s
Iteration  14: 90307.994 ops/s
Iteration  15: 91113.761 ops/s
Iteration  16: 92266.113 ops/s
Iteration  17: 85809.468 ops/s
Iteration  18: 90964.981 ops/s
Iteration  19: 95832.854 ops/s
Iteration  20: 92575.362 ops/s
Iteration  21: 86862.986 ops/s
Iteration  22: 89630.488 ops/s
Iteration  23: 91909.361 ops/s
Iteration  24: 88445.373 ops/s
Iteration  25: 90440.820 ops/s
Iteration  26: 91108.089 ops/s
Iteration  27: 88741.298 ops/s
Iteration  28: 90081.561 ops/s
Iteration  29: 89751.937 ops/s
Iteration  30: 88644.589 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_756._Benchmark.benchmark_Cluster_756":
  90809.919 ±(99.9%) 1838.122 ops/s [Average]
  (min, avg, max) = (85809.468, 90809.919, 98710.544), stdev = 2751.214
  CI (99.9%): [88971.798, 92648.041] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_756._Benchmark.benchmark_Cluster_756  thrpt   30  90809.919 ± 1838.122  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_757._Benchmark.benchmark_Cluster_757$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_757._Benchmark.benchmark_Cluster_757

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16783.318 ops/s
# Warmup Iteration   2: 46103.217 ops/s
# Warmup Iteration   3: 73689.146 ops/s
# Warmup Iteration   4: 114923.729 ops/s
# Warmup Iteration   5: 111199.400 ops/s
# Warmup Iteration   6: 111543.438 ops/s
# Warmup Iteration   7: 120737.169 ops/s
# Warmup Iteration   8: 115822.987 ops/s
# Warmup Iteration   9: 121452.033 ops/s
# Warmup Iteration  10: 121824.666 ops/s
# Warmup Iteration  11: 122678.582 ops/s
# Warmup Iteration  12: 122940.310 ops/s
# Warmup Iteration  13: 127150.909 ops/s
# Warmup Iteration  14: 129048.167 ops/s
# Warmup Iteration  15: 122225.029 ops/s
# Warmup Iteration  16: 123592.032 ops/s
# Warmup Iteration  17: 128843.732 ops/s
# Warmup Iteration  18: 127371.621 ops/s
# Warmup Iteration  19: 132103.415 ops/s
# Warmup Iteration  20: 118663.995 ops/s
# Warmup Iteration  21: 112668.831 ops/s
# Warmup Iteration  22: 127574.721 ops/s
# Warmup Iteration  23: 129703.640 ops/s
# Warmup Iteration  24: 126368.793 ops/s
# Warmup Iteration  25: 127052.996 ops/s
# Warmup Iteration  26: 131382.916 ops/s
# Warmup Iteration  27: 129481.857 ops/s
# Warmup Iteration  28: 124631.302 ops/s
# Warmup Iteration  29: 131962.330 ops/s
# Warmup Iteration  30: 123970.298 ops/s
Iteration   1: 127302.577 ops/s
Iteration   2: 131183.644 ops/s
Iteration   3: 124792.392 ops/s
Iteration   4: 131975.930 ops/s
Iteration   5: 131319.995 ops/s
Iteration   6: 127386.859 ops/s
Iteration   7: 128843.722 ops/s
Iteration   8: 131618.792 ops/s
Iteration   9: 129244.595 ops/s
Iteration  10: 133855.506 ops/s
Iteration  11: 126185.029 ops/s
Iteration  12: 133979.869 ops/s
Iteration  13: 127618.277 ops/s
Iteration  14: 132161.345 ops/s
Iteration  15: 132706.639 ops/s
Iteration  16: 125111.696 ops/s
Iteration  17: 132532.445 ops/s
Iteration  18: 128868.285 ops/s
Iteration  19: 126769.733 ops/s
Iteration  20: 137980.871 ops/s
Iteration  21: 123665.794 ops/s
Iteration  22: 132951.248 ops/s
Iteration  23: 128701.935 ops/s
Iteration  24: 131443.916 ops/s
Iteration  25: 132871.186 ops/s
Iteration  26: 125254.628 ops/s
Iteration  27: 134042.335 ops/s
Iteration  28: 130706.340 ops/s
Iteration  29: 127182.086 ops/s
Iteration  30: 133972.577 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_757._Benchmark.benchmark_Cluster_757":
  130074.342 ±(99.9%) 2305.101 ops/s [Average]
  (min, avg, max) = (123665.794, 130074.342, 137980.871), stdev = 3450.168
  CI (99.9%): [127769.240, 132379.443] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_757._Benchmark.benchmark_Cluster_757  thrpt   30  130074.342 ± 2305.101  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_758._Benchmark.benchmark_Cluster_758$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_758._Benchmark.benchmark_Cluster_758

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 28376.356 ops/s
# Warmup Iteration   2: 77190.784 ops/s
# Warmup Iteration   3: 96997.361 ops/s
# Warmup Iteration   4: 113887.230 ops/s
# Warmup Iteration   5: 101299.833 ops/s
# Warmup Iteration   6: 115869.512 ops/s
# Warmup Iteration   7: 120115.369 ops/s
# Warmup Iteration   8: 98895.528 ops/s
# Warmup Iteration   9: 120342.129 ops/s
# Warmup Iteration  10: 117974.085 ops/s
# Warmup Iteration  11: 112150.382 ops/s
# Warmup Iteration  12: 122076.064 ops/s
# Warmup Iteration  13: 114734.383 ops/s
# Warmup Iteration  14: 115125.768 ops/s
# Warmup Iteration  15: 121903.571 ops/s
# Warmup Iteration  16: 114472.539 ops/s
# Warmup Iteration  17: 124604.690 ops/s
# Warmup Iteration  18: 119909.313 ops/s
# Warmup Iteration  19: 124410.457 ops/s
# Warmup Iteration  20: 119418.704 ops/s
# Warmup Iteration  21: 122187.199 ops/s
# Warmup Iteration  22: 120424.049 ops/s
# Warmup Iteration  23: 128271.512 ops/s
# Warmup Iteration  24: 123920.481 ops/s
# Warmup Iteration  25: 119450.467 ops/s
# Warmup Iteration  26: 123127.244 ops/s
# Warmup Iteration  27: 122043.482 ops/s
# Warmup Iteration  28: 120614.226 ops/s
# Warmup Iteration  29: 124590.851 ops/s
# Warmup Iteration  30: 118823.726 ops/s
Iteration   1: 128037.373 ops/s
Iteration   2: 119001.110 ops/s
Iteration   3: 123740.943 ops/s
Iteration   4: 116144.034 ops/s
Iteration   5: 122821.755 ops/s
Iteration   6: 120029.011 ops/s
Iteration   7: 124921.528 ops/s
Iteration   8: 113615.894 ops/s
Iteration   9: 122513.859 ops/s
Iteration  10: 119741.032 ops/s
Iteration  11: 121592.726 ops/s
Iteration  12: 118376.355 ops/s
Iteration  13: 119239.638 ops/s
Iteration  14: 126524.567 ops/s
Iteration  15: 120499.763 ops/s
Iteration  16: 114753.511 ops/s
Iteration  17: 122223.423 ops/s
Iteration  18: 119311.674 ops/s
Iteration  19: 124778.718 ops/s
Iteration  20: 124706.902 ops/s
Iteration  21: 120168.307 ops/s
Iteration  22: 125473.982 ops/s
Iteration  23: 116938.104 ops/s
Iteration  24: 124657.544 ops/s
Iteration  25: 121082.066 ops/s
Iteration  26: 123194.797 ops/s
Iteration  27: 119374.843 ops/s
Iteration  28: 120562.595 ops/s
Iteration  29: 127621.424 ops/s
Iteration  30: 116892.481 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_758._Benchmark.benchmark_Cluster_758":
  121284.665 ±(99.9%) 2455.339 ops/s [Average]
  (min, avg, max) = (113615.894, 121284.665, 128037.373), stdev = 3675.036
  CI (99.9%): [118829.327, 123740.004] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_758._Benchmark.benchmark_Cluster_758  thrpt   30  121284.665 ± 2455.339  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_759._Benchmark.benchmark_Cluster_759$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_759._Benchmark.benchmark_Cluster_759

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17215.124 ops/s
# Warmup Iteration   2: 79812.224 ops/s
# Warmup Iteration   3: 94601.426 ops/s
# Warmup Iteration   4: 107170.566 ops/s
# Warmup Iteration   5: 112039.025 ops/s
# Warmup Iteration   6: 111171.869 ops/s
# Warmup Iteration   7: 118986.669 ops/s
# Warmup Iteration   8: 117945.710 ops/s
# Warmup Iteration   9: 115038.818 ops/s
# Warmup Iteration  10: 114660.644 ops/s
# Warmup Iteration  11: 117012.197 ops/s
# Warmup Iteration  12: 115060.762 ops/s
# Warmup Iteration  13: 113383.357 ops/s
# Warmup Iteration  14: 119356.892 ops/s
# Warmup Iteration  15: 86191.520 ops/s
# Warmup Iteration  16: 115420.075 ops/s
# Warmup Iteration  17: 117173.675 ops/s
# Warmup Iteration  18: 123661.534 ops/s
# Warmup Iteration  19: 118927.617 ops/s
# Warmup Iteration  20: 114785.854 ops/s
# Warmup Iteration  21: 120421.752 ops/s
# Warmup Iteration  22: 119742.595 ops/s
# Warmup Iteration  23: 120911.625 ops/s
# Warmup Iteration  24: 115375.694 ops/s
# Warmup Iteration  25: 117229.652 ops/s
# Warmup Iteration  26: 118246.452 ops/s
# Warmup Iteration  27: 118132.123 ops/s
# Warmup Iteration  28: 121919.691 ops/s
# Warmup Iteration  29: 118296.724 ops/s
# Warmup Iteration  30: 115075.207 ops/s
Iteration   1: 119463.812 ops/s
Iteration   2: 119215.980 ops/s
Iteration   3: 118509.471 ops/s
Iteration   4: 115246.592 ops/s
Iteration   5: 117054.283 ops/s
Iteration   6: 118787.678 ops/s
Iteration   7: 120513.799 ops/s
Iteration   8: 119540.768 ops/s
Iteration   9: 119557.572 ops/s
Iteration  10: 119835.633 ops/s
Iteration  11: 118402.250 ops/s
Iteration  12: 122803.251 ops/s
Iteration  13: 115916.099 ops/s
Iteration  14: 121549.059 ops/s
Iteration  15: 116035.879 ops/s
Iteration  16: 117734.679 ops/s
Iteration  17: 119680.572 ops/s
Iteration  18: 116998.247 ops/s
Iteration  19: 117716.467 ops/s
Iteration  20: 122394.094 ops/s
Iteration  21: 116960.318 ops/s
Iteration  22: 122830.703 ops/s
Iteration  23: 115505.676 ops/s
Iteration  24: 123950.401 ops/s
Iteration  25: 120587.860 ops/s
Iteration  26: 116567.195 ops/s
Iteration  27: 117562.261 ops/s
Iteration  28: 115962.769 ops/s
Iteration  29: 120395.586 ops/s
Iteration  30: 122839.119 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_759._Benchmark.benchmark_Cluster_759":
  119003.936 ±(99.9%) 1631.064 ops/s [Average]
  (min, avg, max) = (115246.592, 119003.936, 123950.401), stdev = 2441.300
  CI (99.9%): [117372.872, 120634.999] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_759._Benchmark.benchmark_Cluster_759  thrpt   30  119003.936 ± 1631.064  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_76._Benchmark.benchmark_Cluster_76$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_76._Benchmark.benchmark_Cluster_76

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12859.956 ops/s
# Warmup Iteration   2: 77413.992 ops/s
# Warmup Iteration   3: 101697.037 ops/s
# Warmup Iteration   4: 118608.492 ops/s
# Warmup Iteration   5: 121917.904 ops/s
# Warmup Iteration   6: 111061.697 ops/s
# Warmup Iteration   7: 114609.116 ops/s
# Warmup Iteration   8: 127185.873 ops/s
# Warmup Iteration   9: 107128.968 ops/s
# Warmup Iteration  10: 127434.041 ops/s
# Warmup Iteration  11: 124175.899 ops/s
# Warmup Iteration  12: 120916.692 ops/s
# Warmup Iteration  13: 128925.444 ops/s
# Warmup Iteration  14: 121549.366 ops/s
# Warmup Iteration  15: 124738.941 ops/s
# Warmup Iteration  16: 123051.547 ops/s
# Warmup Iteration  17: 126738.208 ops/s
# Warmup Iteration  18: 131451.404 ops/s
# Warmup Iteration  19: 125069.175 ops/s
# Warmup Iteration  20: 130869.299 ops/s
# Warmup Iteration  21: 126937.163 ops/s
# Warmup Iteration  22: 129448.727 ops/s
# Warmup Iteration  23: 123343.262 ops/s
# Warmup Iteration  24: 124756.727 ops/s
# Warmup Iteration  25: 127436.180 ops/s
# Warmup Iteration  26: 127092.365 ops/s
# Warmup Iteration  27: 130758.661 ops/s
# Warmup Iteration  28: 129235.851 ops/s
# Warmup Iteration  29: 127607.233 ops/s
# Warmup Iteration  30: 127352.542 ops/s
Iteration   1: 128215.648 ops/s
Iteration   2: 131333.093 ops/s
Iteration   3: 124891.380 ops/s
Iteration   4: 130309.946 ops/s
Iteration   5: 131257.157 ops/s
Iteration   6: 123557.735 ops/s
Iteration   7: 128754.033 ops/s
Iteration   8: 124633.450 ops/s
Iteration   9: 128257.647 ops/s
Iteration  10: 127931.287 ops/s
Iteration  11: 130041.589 ops/s
Iteration  12: 125954.596 ops/s
Iteration  13: 129423.349 ops/s
Iteration  14: 126404.841 ops/s
Iteration  15: 126670.263 ops/s
Iteration  16: 129467.586 ops/s
Iteration  17: 126019.833 ops/s
Iteration  18: 126937.407 ops/s
Iteration  19: 126788.211 ops/s
Iteration  20: 127520.601 ops/s
Iteration  21: 130993.155 ops/s
Iteration  22: 122880.586 ops/s
Iteration  23: 131210.630 ops/s
Iteration  24: 126005.612 ops/s
Iteration  25: 126880.928 ops/s
Iteration  26: 130899.896 ops/s
Iteration  27: 125223.388 ops/s
Iteration  28: 129337.073 ops/s
Iteration  29: 126765.222 ops/s
Iteration  30: 126664.077 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_76._Benchmark.benchmark_Cluster_76":
  127707.674 ±(99.9%) 1576.276 ops/s [Average]
  (min, avg, max) = (122880.586, 127707.674, 131333.093), stdev = 2359.296
  CI (99.9%): [126131.398, 129283.950] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_76._Benchmark.benchmark_Cluster_76  thrpt   30  127707.674 ± 1576.276  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_760._Benchmark.benchmark_Cluster_760$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_760._Benchmark.benchmark_Cluster_760

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 44747.458 ops/s
# Warmup Iteration   2: 177322.410 ops/s
# Warmup Iteration   3: 247140.826 ops/s
# Warmup Iteration   4: 250583.672 ops/s
# Warmup Iteration   5: 261474.323 ops/s
# Warmup Iteration   6: 246860.399 ops/s
# Warmup Iteration   7: 250143.399 ops/s
# Warmup Iteration   8: 261786.284 ops/s
# Warmup Iteration   9: 211807.257 ops/s
# Warmup Iteration  10: 237897.347 ops/s
# Warmup Iteration  11: 248074.470 ops/s
# Warmup Iteration  12: 246873.090 ops/s
# Warmup Iteration  13: 263856.761 ops/s
# Warmup Iteration  14: 249462.176 ops/s
# Warmup Iteration  15: 263567.150 ops/s
# Warmup Iteration  16: 255219.980 ops/s
# Warmup Iteration  17: 266808.017 ops/s
# Warmup Iteration  18: 274873.945 ops/s
# Warmup Iteration  19: 260794.679 ops/s
# Warmup Iteration  20: 275214.756 ops/s
# Warmup Iteration  21: 258748.002 ops/s
# Warmup Iteration  22: 270737.323 ops/s
# Warmup Iteration  23: 273826.544 ops/s
# Warmup Iteration  24: 267314.184 ops/s
# Warmup Iteration  25: 275862.965 ops/s
# Warmup Iteration  26: 278515.733 ops/s
# Warmup Iteration  27: 262408.310 ops/s
# Warmup Iteration  28: 279210.673 ops/s
# Warmup Iteration  29: 261030.099 ops/s
# Warmup Iteration  30: 271148.145 ops/s
Iteration   1: 264101.914 ops/s
Iteration   2: 267042.552 ops/s
Iteration   3: 274807.983 ops/s
Iteration   4: 259323.979 ops/s
Iteration   5: 257241.840 ops/s
Iteration   6: 276318.876 ops/s
Iteration   7: 263382.964 ops/s
Iteration   8: 275207.184 ops/s
Iteration   9: 279121.775 ops/s
Iteration  10: 267249.773 ops/s
Iteration  11: 270629.379 ops/s
Iteration  12: 262706.171 ops/s
Iteration  13: 272451.157 ops/s
Iteration  14: 261904.386 ops/s
Iteration  15: 269098.515 ops/s
Iteration  16: 275972.264 ops/s
Iteration  17: 267596.281 ops/s
Iteration  18: 276344.190 ops/s
Iteration  19: 259253.014 ops/s
Iteration  20: 266764.116 ops/s
Iteration  21: 272258.892 ops/s
Iteration  22: 261068.764 ops/s
Iteration  23: 267718.233 ops/s
Iteration  24: 264958.573 ops/s
Iteration  25: 269384.822 ops/s
Iteration  26: 276459.466 ops/s
Iteration  27: 261340.846 ops/s
Iteration  28: 267207.911 ops/s
Iteration  29: 264637.750 ops/s
Iteration  30: 278032.778 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_760._Benchmark.benchmark_Cluster_760":
  268319.545 ±(99.9%) 4165.994 ops/s [Average]
  (min, avg, max) = (257241.840, 268319.545, 279121.775), stdev = 6235.465
  CI (99.9%): [264153.551, 272485.539] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_760._Benchmark.benchmark_Cluster_760  thrpt   30  268319.545 ± 4165.994  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_761._Benchmark.benchmark_Cluster_761$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_761._Benchmark.benchmark_Cluster_761

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13530.842 ops/s
# Warmup Iteration   2: 36190.554 ops/s
# Warmup Iteration   3: 68831.003 ops/s
# Warmup Iteration   4: 82710.121 ops/s
# Warmup Iteration   5: 76916.724 ops/s
# Warmup Iteration   6: 85343.705 ops/s
# Warmup Iteration   7: 90700.156 ops/s
# Warmup Iteration   8: 91108.725 ops/s
# Warmup Iteration   9: 88762.009 ops/s
# Warmup Iteration  10: 90818.404 ops/s
# Warmup Iteration  11: 88445.538 ops/s
# Warmup Iteration  12: 89155.091 ops/s
# Warmup Iteration  13: 89920.486 ops/s
# Warmup Iteration  14: 88909.320 ops/s
# Warmup Iteration  15: 91754.951 ops/s
# Warmup Iteration  16: 87984.589 ops/s
# Warmup Iteration  17: 91104.333 ops/s
# Warmup Iteration  18: 93645.120 ops/s
# Warmup Iteration  19: 92649.989 ops/s
# Warmup Iteration  20: 95936.468 ops/s
# Warmup Iteration  21: 90511.991 ops/s
# Warmup Iteration  22: 94670.634 ops/s
# Warmup Iteration  23: 91877.682 ops/s
# Warmup Iteration  24: 92950.427 ops/s
# Warmup Iteration  25: 94834.569 ops/s
# Warmup Iteration  26: 91013.283 ops/s
# Warmup Iteration  27: 94156.572 ops/s
# Warmup Iteration  28: 91402.266 ops/s
# Warmup Iteration  29: 95838.532 ops/s
# Warmup Iteration  30: 95924.936 ops/s
Iteration   1: 90675.723 ops/s
Iteration   2: 96373.324 ops/s
Iteration   3: 91167.262 ops/s
Iteration   4: 95263.868 ops/s
Iteration   5: 94838.541 ops/s
Iteration   6: 91691.205 ops/s
Iteration   7: 97227.701 ops/s
Iteration   8: 92488.394 ops/s
Iteration   9: 90329.950 ops/s
Iteration  10: 93446.994 ops/s
Iteration  11: 95862.064 ops/s
Iteration  12: 91900.746 ops/s
Iteration  13: 95004.603 ops/s
Iteration  14: 90581.258 ops/s
Iteration  15: 92489.885 ops/s
Iteration  16: 94512.621 ops/s
Iteration  17: 92844.848 ops/s
Iteration  18: 94764.274 ops/s
Iteration  19: 93251.699 ops/s
Iteration  20: 97653.375 ops/s
Iteration  21: 89763.657 ops/s
Iteration  22: 95114.238 ops/s
Iteration  23: 92827.726 ops/s
Iteration  24: 93593.126 ops/s
Iteration  25: 96079.786 ops/s
Iteration  26: 89649.053 ops/s
Iteration  27: 93237.681 ops/s
Iteration  28: 94397.887 ops/s
Iteration  29: 95863.678 ops/s
Iteration  30: 96038.002 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_761._Benchmark.benchmark_Cluster_761":
  93631.106 ±(99.9%) 1499.216 ops/s [Average]
  (min, avg, max) = (89649.053, 93631.106, 97653.375), stdev = 2243.956
  CI (99.9%): [92131.889, 95130.322] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_761._Benchmark.benchmark_Cluster_761  thrpt   30  93631.106 ± 1499.216  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_762._Benchmark.benchmark_Cluster_762$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_762._Benchmark.benchmark_Cluster_762

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18050.332 ops/s
# Warmup Iteration   2: 65527.526 ops/s
# Warmup Iteration   3: 99573.859 ops/s
# Warmup Iteration   4: 98309.836 ops/s
# Warmup Iteration   5: 114652.406 ops/s
# Warmup Iteration   6: 123201.313 ops/s
# Warmup Iteration   7: 118844.619 ops/s
# Warmup Iteration   8: 122187.902 ops/s
# Warmup Iteration   9: 116529.190 ops/s
# Warmup Iteration  10: 111422.420 ops/s
# Warmup Iteration  11: 120087.971 ops/s
# Warmup Iteration  12: 121868.894 ops/s
# Warmup Iteration  13: 122270.741 ops/s
# Warmup Iteration  14: 118745.362 ops/s
# Warmup Iteration  15: 123832.212 ops/s
# Warmup Iteration  16: 121978.905 ops/s
# Warmup Iteration  17: 121242.902 ops/s
# Warmup Iteration  18: 122759.277 ops/s
# Warmup Iteration  19: 125055.605 ops/s
# Warmup Iteration  20: 127773.108 ops/s
# Warmup Iteration  21: 124857.361 ops/s
# Warmup Iteration  22: 124073.921 ops/s
# Warmup Iteration  23: 125834.216 ops/s
# Warmup Iteration  24: 121546.122 ops/s
# Warmup Iteration  25: 126361.878 ops/s
# Warmup Iteration  26: 123042.486 ops/s
# Warmup Iteration  27: 124662.609 ops/s
# Warmup Iteration  28: 122746.014 ops/s
# Warmup Iteration  29: 123838.059 ops/s
# Warmup Iteration  30: 125874.430 ops/s
Iteration   1: 121364.556 ops/s
Iteration   2: 120059.983 ops/s
Iteration   3: 125365.895 ops/s
Iteration   4: 121946.851 ops/s
Iteration   5: 125773.232 ops/s
Iteration   6: 121851.007 ops/s
Iteration   7: 130140.409 ops/s
Iteration   8: 122355.920 ops/s
Iteration   9: 125812.855 ops/s
Iteration  10: 126309.907 ops/s
Iteration  11: 122155.762 ops/s
Iteration  12: 130502.342 ops/s
Iteration  13: 122447.119 ops/s
Iteration  14: 123635.273 ops/s
Iteration  15: 128976.263 ops/s
Iteration  16: 124663.701 ops/s
Iteration  17: 126011.783 ops/s
Iteration  18: 124357.276 ops/s
Iteration  19: 128108.128 ops/s
Iteration  20: 119721.258 ops/s
Iteration  21: 127043.806 ops/s
Iteration  22: 121189.213 ops/s
Iteration  23: 124115.071 ops/s
Iteration  24: 124777.805 ops/s
Iteration  25: 123061.444 ops/s
Iteration  26: 128757.861 ops/s
Iteration  27: 119238.606 ops/s
Iteration  28: 127971.434 ops/s
Iteration  29: 128956.374 ops/s
Iteration  30: 121310.250 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_762._Benchmark.benchmark_Cluster_762":
  124599.379 ±(99.9%) 2144.931 ops/s [Average]
  (min, avg, max) = (119238.606, 124599.379, 130502.342), stdev = 3210.432
  CI (99.9%): [122454.449, 126744.310] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_762._Benchmark.benchmark_Cluster_762  thrpt   30  124599.379 ± 2144.931  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_763._Benchmark.benchmark_Cluster_763$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_763._Benchmark.benchmark_Cluster_763

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15329.461 ops/s
# Warmup Iteration   2: 40381.389 ops/s
# Warmup Iteration   3: 115869.377 ops/s
# Warmup Iteration   4: 115035.678 ops/s
# Warmup Iteration   5: 130659.716 ops/s
# Warmup Iteration   6: 120698.264 ops/s
# Warmup Iteration   7: 128573.145 ops/s
# Warmup Iteration   8: 136145.671 ops/s
# Warmup Iteration   9: 127619.205 ops/s
# Warmup Iteration  10: 132398.314 ops/s
# Warmup Iteration  11: 133623.773 ops/s
# Warmup Iteration  12: 128374.000 ops/s
# Warmup Iteration  13: 129656.011 ops/s
# Warmup Iteration  14: 133877.024 ops/s
# Warmup Iteration  15: 128771.813 ops/s
# Warmup Iteration  16: 136458.364 ops/s
# Warmup Iteration  17: 131672.929 ops/s
# Warmup Iteration  18: 136563.363 ops/s
# Warmup Iteration  19: 123744.066 ops/s
# Warmup Iteration  20: 136466.591 ops/s
# Warmup Iteration  21: 129773.615 ops/s
# Warmup Iteration  22: 133590.459 ops/s
# Warmup Iteration  23: 135918.659 ops/s
# Warmup Iteration  24: 128053.978 ops/s
# Warmup Iteration  25: 136640.220 ops/s
# Warmup Iteration  26: 128858.030 ops/s
# Warmup Iteration  27: 135797.696 ops/s
# Warmup Iteration  28: 135792.726 ops/s
# Warmup Iteration  29: 130525.965 ops/s
# Warmup Iteration  30: 135178.801 ops/s
Iteration   1: 130496.674 ops/s
Iteration   2: 133688.919 ops/s
Iteration   3: 138178.680 ops/s
Iteration   4: 132301.566 ops/s
Iteration   5: 129925.140 ops/s
Iteration   6: 128638.468 ops/s
Iteration   7: 134124.250 ops/s
Iteration   8: 141521.266 ops/s
Iteration   9: 135830.984 ops/s
Iteration  10: 130954.154 ops/s
Iteration  11: 135767.283 ops/s
Iteration  12: 133276.545 ops/s
Iteration  13: 132919.659 ops/s
Iteration  14: 134047.684 ops/s
Iteration  15: 129737.988 ops/s
Iteration  16: 134615.692 ops/s
Iteration  17: 140941.906 ops/s
Iteration  18: 127247.629 ops/s
Iteration  19: 138003.846 ops/s
Iteration  20: 130945.609 ops/s
Iteration  21: 134524.976 ops/s
Iteration  22: 137334.611 ops/s
Iteration  23: 129735.470 ops/s
Iteration  24: 135890.682 ops/s
Iteration  25: 137845.424 ops/s
Iteration  26: 130363.493 ops/s
Iteration  27: 138376.703 ops/s
Iteration  28: 133936.951 ops/s
Iteration  29: 128554.882 ops/s
Iteration  30: 135301.513 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_763._Benchmark.benchmark_Cluster_763":
  133834.288 ±(99.9%) 2483.269 ops/s [Average]
  (min, avg, max) = (127247.629, 133834.288, 141521.266), stdev = 3716.841
  CI (99.9%): [131351.019, 136317.558] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_763._Benchmark.benchmark_Cluster_763  thrpt   30  133834.288 ± 2483.269  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_764._Benchmark.benchmark_Cluster_764$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_764._Benchmark.benchmark_Cluster_764

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3146.729 ops/s
# Warmup Iteration   2: 30748.497 ops/s
# Warmup Iteration   3: 46500.467 ops/s
# Warmup Iteration   4: 68383.415 ops/s
# Warmup Iteration   5: 133427.367 ops/s
# Warmup Iteration   6: 124975.021 ops/s
# Warmup Iteration   7: 127502.794 ops/s
# Warmup Iteration   8: 137216.083 ops/s
# Warmup Iteration   9: 143081.382 ops/s
# Warmup Iteration  10: 133467.582 ops/s
# Warmup Iteration  11: 137432.978 ops/s
# Warmup Iteration  12: 140635.737 ops/s
# Warmup Iteration  13: 135856.448 ops/s
# Warmup Iteration  14: 141599.083 ops/s
# Warmup Iteration  15: 133388.515 ops/s
# Warmup Iteration  16: 139236.676 ops/s
# Warmup Iteration  17: 142659.228 ops/s
# Warmup Iteration  18: 136870.891 ops/s
# Warmup Iteration  19: 137429.976 ops/s
# Warmup Iteration  20: 136051.870 ops/s
# Warmup Iteration  21: 141092.503 ops/s
# Warmup Iteration  22: 138007.429 ops/s
# Warmup Iteration  23: 134333.044 ops/s
# Warmup Iteration  24: 136033.227 ops/s
# Warmup Iteration  25: 142599.191 ops/s
# Warmup Iteration  26: 134039.500 ops/s
# Warmup Iteration  27: 142111.200 ops/s
# Warmup Iteration  28: 134290.218 ops/s
# Warmup Iteration  29: 143987.116 ops/s
# Warmup Iteration  30: 139374.626 ops/s
Iteration   1: 136389.001 ops/s
Iteration   2: 143631.473 ops/s
Iteration   3: 137903.882 ops/s
Iteration   4: 137200.517 ops/s
Iteration   5: 139591.845 ops/s
Iteration   6: 136456.114 ops/s
Iteration   7: 138138.513 ops/s
Iteration   8: 145231.341 ops/s
Iteration   9: 142973.175 ops/s
Iteration  10: 134295.718 ops/s
Iteration  11: 140530.184 ops/s
Iteration  12: 138003.996 ops/s
Iteration  13: 142906.962 ops/s
Iteration  14: 133676.454 ops/s
Iteration  15: 135152.271 ops/s
Iteration  16: 142582.290 ops/s
Iteration  17: 135564.994 ops/s
Iteration  18: 144221.819 ops/s
Iteration  19: 139972.026 ops/s
Iteration  20: 134429.916 ops/s
Iteration  21: 139228.729 ops/s
Iteration  22: 134555.465 ops/s
Iteration  23: 140757.836 ops/s
Iteration  24: 134516.158 ops/s
Iteration  25: 134561.132 ops/s
Iteration  26: 140113.371 ops/s
Iteration  27: 134759.094 ops/s
Iteration  28: 138371.202 ops/s
Iteration  29: 139944.149 ops/s
Iteration  30: 138493.975 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_764._Benchmark.benchmark_Cluster_764":
  138471.787 ±(99.9%) 2245.524 ops/s [Average]
  (min, avg, max) = (133676.454, 138471.787, 145231.341), stdev = 3360.995
  CI (99.9%): [136226.263, 140717.311] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_764._Benchmark.benchmark_Cluster_764  thrpt   30  138471.787 ± 2245.524  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_765._Benchmark.benchmark_Cluster_765$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_765._Benchmark.benchmark_Cluster_765

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15042.223 ops/s
# Warmup Iteration   2: 70512.562 ops/s
# Warmup Iteration   3: 98165.605 ops/s
# Warmup Iteration   4: 96428.055 ops/s
# Warmup Iteration   5: 98797.081 ops/s
# Warmup Iteration   6: 99382.332 ops/s
# Warmup Iteration   7: 104997.140 ops/s
# Warmup Iteration   8: 110153.457 ops/s
# Warmup Iteration   9: 104602.291 ops/s
# Warmup Iteration  10: 108798.344 ops/s
# Warmup Iteration  11: 108769.651 ops/s
# Warmup Iteration  12: 111279.935 ops/s
# Warmup Iteration  13: 103734.168 ops/s
# Warmup Iteration  14: 111068.386 ops/s
# Warmup Iteration  15: 106226.560 ops/s
# Warmup Iteration  16: 109068.318 ops/s
# Warmup Iteration  17: 109559.437 ops/s
# Warmup Iteration  18: 109354.478 ops/s
# Warmup Iteration  19: 114715.789 ops/s
# Warmup Iteration  20: 106329.433 ops/s
# Warmup Iteration  21: 114556.229 ops/s
# Warmup Iteration  22: 107649.728 ops/s
# Warmup Iteration  23: 112802.889 ops/s
# Warmup Iteration  24: 107993.891 ops/s
# Warmup Iteration  25: 108125.454 ops/s
# Warmup Iteration  26: 111616.113 ops/s
# Warmup Iteration  27: 109587.257 ops/s
# Warmup Iteration  28: 107115.934 ops/s
# Warmup Iteration  29: 114167.894 ops/s
# Warmup Iteration  30: 107836.968 ops/s
Iteration   1: 109177.197 ops/s
Iteration   2: 114003.829 ops/s
Iteration   3: 108084.220 ops/s
Iteration   4: 108580.155 ops/s
Iteration   5: 112360.477 ops/s
Iteration   6: 107374.674 ops/s
Iteration   7: 114264.627 ops/s
Iteration   8: 107510.712 ops/s
Iteration   9: 113453.025 ops/s
Iteration  10: 109894.869 ops/s
Iteration  11: 109240.055 ops/s
Iteration  12: 114315.938 ops/s
Iteration  13: 109592.068 ops/s
Iteration  14: 106955.380 ops/s
Iteration  15: 109005.055 ops/s
Iteration  16: 114267.415 ops/s
Iteration  17: 107087.313 ops/s
Iteration  18: 112162.643 ops/s
Iteration  19: 111308.512 ops/s
Iteration  20: 109759.436 ops/s
Iteration  21: 110711.911 ops/s
Iteration  22: 107598.589 ops/s
Iteration  23: 114550.245 ops/s
Iteration  24: 108268.138 ops/s
Iteration  25: 91910.014 ops/s
Iteration  26: 111536.287 ops/s
Iteration  27: 105819.377 ops/s
Iteration  28: 110481.820 ops/s
Iteration  29: 109048.438 ops/s
Iteration  30: 109339.887 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_765._Benchmark.benchmark_Cluster_765":
  109588.743 ±(99.9%) 2794.947 ops/s [Average]
  (min, avg, max) = (91910.014, 109588.743, 114550.245), stdev = 4183.346
  CI (99.9%): [106793.796, 112383.691] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_765._Benchmark.benchmark_Cluster_765  thrpt   30  109588.743 ± 2794.947  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_766._Benchmark.benchmark_Cluster_766$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_766._Benchmark.benchmark_Cluster_766

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1140.334 ops/s
# Warmup Iteration   2: 3606.806 ops/s
# Warmup Iteration   3: 14567.392 ops/s
# Warmup Iteration   4: 34604.639 ops/s
# Warmup Iteration   5: 28477.244 ops/s
# Warmup Iteration   6: 33627.573 ops/s
# Warmup Iteration   7: 46364.514 ops/s
# Warmup Iteration   8: 92225.488 ops/s
# Warmup Iteration   9: 93117.509 ops/s
# Warmup Iteration  10: 104149.307 ops/s
# Warmup Iteration  11: 101966.424 ops/s
# Warmup Iteration  12: 105005.321 ops/s
# Warmup Iteration  13: 109454.920 ops/s
# Warmup Iteration  14: 100718.821 ops/s
# Warmup Iteration  15: 106743.798 ops/s
# Warmup Iteration  16: 101767.061 ops/s
# Warmup Iteration  17: 103995.597 ops/s
# Warmup Iteration  18: 108237.462 ops/s
# Warmup Iteration  19: 101492.963 ops/s
# Warmup Iteration  20: 107992.150 ops/s
# Warmup Iteration  21: 102812.513 ops/s
# Warmup Iteration  22: 106280.225 ops/s
# Warmup Iteration  23: 102359.243 ops/s
# Warmup Iteration  24: 103675.914 ops/s
# Warmup Iteration  25: 106002.988 ops/s
# Warmup Iteration  26: 103664.436 ops/s
# Warmup Iteration  27: 105888.832 ops/s
# Warmup Iteration  28: 108891.590 ops/s
# Warmup Iteration  29: 102064.347 ops/s
# Warmup Iteration  30: 103806.895 ops/s
Iteration   1: 108781.017 ops/s
Iteration   2: 100445.685 ops/s
Iteration   3: 108369.991 ops/s
Iteration   4: 100281.019 ops/s
Iteration   5: 104466.748 ops/s
Iteration   6: 106469.411 ops/s
Iteration   7: 99151.743 ops/s
Iteration   8: 108929.902 ops/s
Iteration   9: 107900.556 ops/s
Iteration  10: 99498.427 ops/s
Iteration  11: 109335.509 ops/s
Iteration  12: 108606.881 ops/s
Iteration  13: 108983.101 ops/s
Iteration  14: 101286.232 ops/s
Iteration  15: 100711.220 ops/s
Iteration  16: 104853.753 ops/s
Iteration  17: 104112.012 ops/s
Iteration  18: 106343.563 ops/s
Iteration  19: 106397.066 ops/s
Iteration  20: 103191.870 ops/s
Iteration  21: 103288.280 ops/s
Iteration  22: 102615.986 ops/s
Iteration  23: 106420.782 ops/s
Iteration  24: 102012.054 ops/s
Iteration  25: 106350.486 ops/s
Iteration  26: 105656.492 ops/s
Iteration  27: 103318.489 ops/s
Iteration  28: 104847.159 ops/s
Iteration  29: 102105.500 ops/s
Iteration  30: 104028.003 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_766._Benchmark.benchmark_Cluster_766":
  104625.298 ±(99.9%) 2064.501 ops/s [Average]
  (min, avg, max) = (99151.743, 104625.298, 109335.509), stdev = 3090.048
  CI (99.9%): [102560.797, 106689.799] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_766._Benchmark.benchmark_Cluster_766  thrpt   30  104625.298 ± 2064.501  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_767._Benchmark.benchmark_Cluster_767$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_767._Benchmark.benchmark_Cluster_767

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10809.459 ops/s
# Warmup Iteration   2: 31257.198 ops/s
# Warmup Iteration   3: 29634.304 ops/s
# Warmup Iteration   4: 34251.239 ops/s
# Warmup Iteration   5: 70010.593 ops/s
# Warmup Iteration   6: 108035.922 ops/s
# Warmup Iteration   7: 105748.799 ops/s
# Warmup Iteration   8: 109679.396 ops/s
# Warmup Iteration   9: 106459.297 ops/s
# Warmup Iteration  10: 109598.789 ops/s
# Warmup Iteration  11: 105863.461 ops/s
# Warmup Iteration  12: 106365.746 ops/s
# Warmup Iteration  13: 111853.287 ops/s
# Warmup Iteration  14: 102836.637 ops/s
# Warmup Iteration  15: 111877.419 ops/s
# Warmup Iteration  16: 110844.477 ops/s
# Warmup Iteration  17: 114606.436 ops/s
# Warmup Iteration  18: 110995.539 ops/s
# Warmup Iteration  19: 115576.309 ops/s
# Warmup Iteration  20: 113181.796 ops/s
# Warmup Iteration  21: 115042.630 ops/s
# Warmup Iteration  22: 113817.821 ops/s
# Warmup Iteration  23: 109596.893 ops/s
# Warmup Iteration  24: 118148.160 ops/s
# Warmup Iteration  25: 113135.522 ops/s
# Warmup Iteration  26: 117643.792 ops/s
# Warmup Iteration  27: 112627.419 ops/s
# Warmup Iteration  28: 116440.098 ops/s
# Warmup Iteration  29: 112185.476 ops/s
# Warmup Iteration  30: 109391.343 ops/s
Iteration   1: 119947.684 ops/s
Iteration   2: 114335.936 ops/s
Iteration   3: 119255.867 ops/s
Iteration   4: 113714.932 ops/s
Iteration   5: 118485.076 ops/s
Iteration   6: 113166.624 ops/s
Iteration   7: 118594.307 ops/s
Iteration   8: 114150.304 ops/s
Iteration   9: 119982.413 ops/s
Iteration  10: 116861.460 ops/s
Iteration  11: 111832.269 ops/s
Iteration  12: 116057.844 ops/s
Iteration  13: 114761.053 ops/s
Iteration  14: 115148.482 ops/s
Iteration  15: 113405.407 ops/s
Iteration  16: 120117.708 ops/s
Iteration  17: 117039.309 ops/s
Iteration  18: 112326.290 ops/s
Iteration  19: 91669.054 ops/s
Iteration  20: 111948.991 ops/s
Iteration  21: 117146.993 ops/s
Iteration  22: 116293.128 ops/s
Iteration  23: 114328.436 ops/s
Iteration  24: 121424.662 ops/s
Iteration  25: 107224.319 ops/s
Iteration  26: 116384.882 ops/s
Iteration  27: 114532.250 ops/s
Iteration  28: 111686.473 ops/s
Iteration  29: 116348.858 ops/s
Iteration  30: 112583.292 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_767._Benchmark.benchmark_Cluster_767":
  114691.810 ±(99.9%) 3581.678 ops/s [Average]
  (min, avg, max) = (91669.054, 114691.810, 121424.662), stdev = 5360.887
  CI (99.9%): [111110.132, 118273.488] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_767._Benchmark.benchmark_Cluster_767  thrpt   30  114691.810 ± 3581.678  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_768._Benchmark.benchmark_Cluster_768$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_768._Benchmark.benchmark_Cluster_768

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6485.954 ops/s
# Warmup Iteration   2: 35043.281 ops/s
# Warmup Iteration   3: 31707.826 ops/s
# Warmup Iteration   4: 36845.791 ops/s
# Warmup Iteration   5: 71620.331 ops/s
# Warmup Iteration   6: 98080.497 ops/s
# Warmup Iteration   7: 101535.495 ops/s
# Warmup Iteration   8: 105523.179 ops/s
# Warmup Iteration   9: 104507.082 ops/s
# Warmup Iteration  10: 100903.425 ops/s
# Warmup Iteration  11: 102801.678 ops/s
# Warmup Iteration  12: 102161.881 ops/s
# Warmup Iteration  13: 101194.911 ops/s
# Warmup Iteration  14: 93419.145 ops/s
# Warmup Iteration  15: 99719.876 ops/s
# Warmup Iteration  16: 104597.573 ops/s
# Warmup Iteration  17: 106206.518 ops/s
# Warmup Iteration  18: 106271.110 ops/s
# Warmup Iteration  19: 112239.923 ops/s
# Warmup Iteration  20: 104062.948 ops/s
# Warmup Iteration  21: 107751.745 ops/s
# Warmup Iteration  22: 108161.827 ops/s
# Warmup Iteration  23: 102511.369 ops/s
# Warmup Iteration  24: 107117.085 ops/s
# Warmup Iteration  25: 108318.240 ops/s
# Warmup Iteration  26: 103627.833 ops/s
# Warmup Iteration  27: 107575.317 ops/s
# Warmup Iteration  28: 106565.414 ops/s
# Warmup Iteration  29: 107412.544 ops/s
# Warmup Iteration  30: 112347.334 ops/s
Iteration   1: 105153.434 ops/s
Iteration   2: 109316.372 ops/s
Iteration   3: 103382.100 ops/s
Iteration   4: 106626.387 ops/s
Iteration   5: 111028.762 ops/s
Iteration   6: 104792.606 ops/s
Iteration   7: 110781.913 ops/s
Iteration   8: 104748.065 ops/s
Iteration   9: 108782.615 ops/s
Iteration  10: 108807.711 ops/s
Iteration  11: 102271.816 ops/s
Iteration  12: 108756.623 ops/s
Iteration  13: 106208.496 ops/s
Iteration  14: 101685.494 ops/s
Iteration  15: 106770.192 ops/s
Iteration  16: 109750.432 ops/s
Iteration  17: 106309.071 ops/s
Iteration  18: 111863.809 ops/s
Iteration  19: 108510.785 ops/s
Iteration  20: 106830.087 ops/s
Iteration  21: 108926.554 ops/s
Iteration  22: 105177.112 ops/s
Iteration  23: 108083.116 ops/s
Iteration  24: 107019.251 ops/s
Iteration  25: 111378.043 ops/s
Iteration  26: 109386.071 ops/s
Iteration  27: 109541.682 ops/s
Iteration  28: 107149.411 ops/s
Iteration  29: 106116.383 ops/s
Iteration  30: 112699.452 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_768._Benchmark.benchmark_Cluster_768":
  107595.128 ±(99.9%) 1838.064 ops/s [Average]
  (min, avg, max) = (101685.494, 107595.128, 112699.452), stdev = 2751.129
  CI (99.9%): [105757.064, 109433.193] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_768._Benchmark.benchmark_Cluster_768  thrpt   30  107595.128 ± 1838.064  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_769._Benchmark.benchmark_Cluster_769$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_769._Benchmark.benchmark_Cluster_769

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6501.989 ops/s
# Warmup Iteration   2: 36645.193 ops/s
# Warmup Iteration   3: 57323.765 ops/s
# Warmup Iteration   4: 107720.248 ops/s
# Warmup Iteration   5: 105988.528 ops/s
# Warmup Iteration   6: 114715.740 ops/s
# Warmup Iteration   7: 120945.676 ops/s
# Warmup Iteration   8: 120622.335 ops/s
# Warmup Iteration   9: 122507.830 ops/s
# Warmup Iteration  10: 120012.546 ops/s
# Warmup Iteration  11: 117246.289 ops/s
# Warmup Iteration  12: 125227.743 ops/s
# Warmup Iteration  13: 118963.768 ops/s
# Warmup Iteration  14: 123382.064 ops/s
# Warmup Iteration  15: 116111.706 ops/s
# Warmup Iteration  16: 119065.932 ops/s
# Warmup Iteration  17: 127503.239 ops/s
# Warmup Iteration  18: 121808.447 ops/s
# Warmup Iteration  19: 124149.506 ops/s
# Warmup Iteration  20: 122616.999 ops/s
# Warmup Iteration  21: 123263.674 ops/s
# Warmup Iteration  22: 122404.591 ops/s
# Warmup Iteration  23: 121115.539 ops/s
# Warmup Iteration  24: 121321.909 ops/s
# Warmup Iteration  25: 128447.834 ops/s
# Warmup Iteration  26: 117512.698 ops/s
# Warmup Iteration  27: 127306.170 ops/s
# Warmup Iteration  28: 116777.112 ops/s
# Warmup Iteration  29: 122283.212 ops/s
# Warmup Iteration  30: 125104.869 ops/s
Iteration   1: 119501.426 ops/s
Iteration   2: 122298.914 ops/s
Iteration   3: 120782.920 ops/s
Iteration   4: 119997.879 ops/s
Iteration   5: 117582.817 ops/s
Iteration   6: 121452.433 ops/s
Iteration   7: 126761.403 ops/s
Iteration   8: 116671.744 ops/s
Iteration   9: 126037.465 ops/s
Iteration  10: 120993.451 ops/s
Iteration  11: 124305.515 ops/s
Iteration  12: 123719.151 ops/s
Iteration  13: 112377.742 ops/s
Iteration  14: 104413.931 ops/s
Iteration  15: 122036.501 ops/s
Iteration  16: 124762.628 ops/s
Iteration  17: 123794.704 ops/s
Iteration  18: 119144.447 ops/s
Iteration  19: 126740.191 ops/s
Iteration  20: 121840.725 ops/s
Iteration  21: 124003.728 ops/s
Iteration  22: 122333.130 ops/s
Iteration  23: 124714.509 ops/s
Iteration  24: 120048.668 ops/s
Iteration  25: 127878.342 ops/s
Iteration  26: 122142.407 ops/s
Iteration  27: 123930.781 ops/s
Iteration  28: 124366.807 ops/s
Iteration  29: 118460.614 ops/s
Iteration  30: 121518.015 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_769._Benchmark.benchmark_Cluster_769":
  121487.100 ±(99.9%) 3078.512 ops/s [Average]
  (min, avg, max) = (104413.931, 121487.100, 127878.342), stdev = 4607.772
  CI (99.9%): [118408.588, 124565.612] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_769._Benchmark.benchmark_Cluster_769  thrpt   30  121487.100 ± 3078.512  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_77._Benchmark.benchmark_Cluster_77$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_77._Benchmark.benchmark_Cluster_77

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6266.861 ops/s
# Warmup Iteration   2: 36636.734 ops/s
# Warmup Iteration   3: 54185.277 ops/s
# Warmup Iteration   4: 111733.603 ops/s
# Warmup Iteration   5: 113955.649 ops/s
# Warmup Iteration   6: 117808.993 ops/s
# Warmup Iteration   7: 114836.793 ops/s
# Warmup Iteration   8: 117598.556 ops/s
# Warmup Iteration   9: 118905.520 ops/s
# Warmup Iteration  10: 113220.537 ops/s
# Warmup Iteration  11: 113459.123 ops/s
# Warmup Iteration  12: 119506.036 ops/s
# Warmup Iteration  13: 118687.643 ops/s
# Warmup Iteration  14: 122499.881 ops/s
# Warmup Iteration  15: 121287.178 ops/s
# Warmup Iteration  16: 115085.539 ops/s
# Warmup Iteration  17: 122956.153 ops/s
# Warmup Iteration  18: 117724.262 ops/s
# Warmup Iteration  19: 122088.306 ops/s
# Warmup Iteration  20: 118346.396 ops/s
# Warmup Iteration  21: 120495.291 ops/s
# Warmup Iteration  22: 123239.216 ops/s
# Warmup Iteration  23: 124171.451 ops/s
# Warmup Iteration  24: 121592.251 ops/s
# Warmup Iteration  25: 125953.271 ops/s
# Warmup Iteration  26: 123360.735 ops/s
# Warmup Iteration  27: 126023.317 ops/s
# Warmup Iteration  28: 122436.955 ops/s
# Warmup Iteration  29: 122272.343 ops/s
# Warmup Iteration  30: 124655.105 ops/s
Iteration   1: 121925.773 ops/s
Iteration   2: 127714.671 ops/s
Iteration   3: 125409.535 ops/s
Iteration   4: 120304.292 ops/s
Iteration   5: 122316.951 ops/s
Iteration   6: 121703.836 ops/s
Iteration   7: 126356.608 ops/s
Iteration   8: 126901.979 ops/s
Iteration   9: 120344.459 ops/s
Iteration  10: 126091.862 ops/s
Iteration  11: 121553.868 ops/s
Iteration  12: 122548.248 ops/s
Iteration  13: 122106.255 ops/s
Iteration  14: 123905.303 ops/s
Iteration  15: 123414.127 ops/s
Iteration  16: 123701.035 ops/s
Iteration  17: 125745.400 ops/s
Iteration  18: 122628.116 ops/s
Iteration  19: 122542.031 ops/s
Iteration  20: 125911.039 ops/s
Iteration  21: 122041.297 ops/s
Iteration  22: 127082.932 ops/s
Iteration  23: 121820.261 ops/s
Iteration  24: 124755.928 ops/s
Iteration  25: 120062.180 ops/s
Iteration  26: 129634.795 ops/s
Iteration  27: 121535.918 ops/s
Iteration  28: 116261.970 ops/s
Iteration  29: 124067.136 ops/s
Iteration  30: 123008.987 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_77._Benchmark.benchmark_Cluster_77":
  123446.560 ±(99.9%) 1840.431 ops/s [Average]
  (min, avg, max) = (116261.970, 123446.560, 129634.795), stdev = 2754.670
  CI (99.9%): [121606.129, 125286.990] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_77._Benchmark.benchmark_Cluster_77  thrpt   30  123446.560 ± 1840.431  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_770._Benchmark.benchmark_Cluster_770$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_770._Benchmark.benchmark_Cluster_770

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9466.482 ops/s
# Warmup Iteration   2: 38185.489 ops/s
# Warmup Iteration   3: 78038.167 ops/s
# Warmup Iteration   4: 100722.566 ops/s
# Warmup Iteration   5: 104664.720 ops/s
# Warmup Iteration   6: 104119.473 ops/s
# Warmup Iteration   7: 103379.799 ops/s
# Warmup Iteration   8: 105669.017 ops/s
# Warmup Iteration   9: 100672.888 ops/s
# Warmup Iteration  10: 103365.730 ops/s
# Warmup Iteration  11: 100432.115 ops/s
# Warmup Iteration  12: 105064.950 ops/s
# Warmup Iteration  13: 105040.873 ops/s
# Warmup Iteration  14: 99608.519 ops/s
# Warmup Iteration  15: 105828.889 ops/s
# Warmup Iteration  16: 110982.479 ops/s
# Warmup Iteration  17: 106831.844 ops/s
# Warmup Iteration  18: 112903.813 ops/s
# Warmup Iteration  19: 114705.275 ops/s
# Warmup Iteration  20: 108315.039 ops/s
# Warmup Iteration  21: 112067.620 ops/s
# Warmup Iteration  22: 107271.802 ops/s
# Warmup Iteration  23: 108048.532 ops/s
# Warmup Iteration  24: 111324.694 ops/s
# Warmup Iteration  25: 108101.881 ops/s
# Warmup Iteration  26: 110648.611 ops/s
# Warmup Iteration  27: 108639.900 ops/s
# Warmup Iteration  28: 108065.202 ops/s
# Warmup Iteration  29: 111388.675 ops/s
# Warmup Iteration  30: 107400.472 ops/s
Iteration   1: 113082.873 ops/s
Iteration   2: 107606.684 ops/s
Iteration   3: 110188.209 ops/s
Iteration   4: 113754.889 ops/s
Iteration   5: 105531.657 ops/s
Iteration   6: 106875.188 ops/s
Iteration   7: 107645.541 ops/s
Iteration   8: 76210.838 ops/s
Iteration   9: 110018.600 ops/s
Iteration  10: 111816.575 ops/s
Iteration  11: 110945.619 ops/s
Iteration  12: 107665.410 ops/s
Iteration  13: 110588.091 ops/s
Iteration  14: 108835.536 ops/s
Iteration  15: 113611.548 ops/s
Iteration  16: 114288.410 ops/s
Iteration  17: 109818.283 ops/s
Iteration  18: 109184.390 ops/s
Iteration  19: 106183.847 ops/s
Iteration  20: 111518.524 ops/s
Iteration  21: 111824.055 ops/s
Iteration  22: 108867.885 ops/s
Iteration  23: 112121.319 ops/s
Iteration  24: 105836.042 ops/s
Iteration  25: 112763.596 ops/s
Iteration  26: 106696.901 ops/s
Iteration  27: 108772.941 ops/s
Iteration  28: 109078.144 ops/s
Iteration  29: 106234.970 ops/s
Iteration  30: 116467.864 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_770._Benchmark.benchmark_Cluster_770":
  108801.148 ±(99.9%) 4519.352 ops/s [Average]
  (min, avg, max) = (76210.838, 108801.148, 116467.864), stdev = 6764.353
  CI (99.9%): [104281.796, 113320.499] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_770._Benchmark.benchmark_Cluster_770  thrpt   30  108801.148 ± 4519.352  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_771._Benchmark.benchmark_Cluster_771$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_771._Benchmark.benchmark_Cluster_771

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6926.049 ops/s
# Warmup Iteration   2: 24810.113 ops/s
# Warmup Iteration   3: 29991.915 ops/s
# Warmup Iteration   4: 32304.577 ops/s
# Warmup Iteration   5: 65525.789 ops/s
# Warmup Iteration   6: 114318.364 ops/s
# Warmup Iteration   7: 103718.007 ops/s
# Warmup Iteration   8: 118979.706 ops/s
# Warmup Iteration   9: 103476.245 ops/s
# Warmup Iteration  10: 118030.147 ops/s
# Warmup Iteration  11: 114847.139 ops/s
# Warmup Iteration  12: 112194.243 ops/s
# Warmup Iteration  13: 118517.320 ops/s
# Warmup Iteration  14: 119144.002 ops/s
# Warmup Iteration  15: 115345.234 ops/s
# Warmup Iteration  16: 116533.690 ops/s
# Warmup Iteration  17: 119013.167 ops/s
# Warmup Iteration  18: 123349.132 ops/s
# Warmup Iteration  19: 122062.958 ops/s
# Warmup Iteration  20: 120535.153 ops/s
# Warmup Iteration  21: 126632.346 ops/s
# Warmup Iteration  22: 118663.685 ops/s
# Warmup Iteration  23: 120482.837 ops/s
# Warmup Iteration  24: 125668.690 ops/s
# Warmup Iteration  25: 121962.668 ops/s
# Warmup Iteration  26: 121158.033 ops/s
# Warmup Iteration  27: 121837.841 ops/s
# Warmup Iteration  28: 118679.122 ops/s
# Warmup Iteration  29: 125857.904 ops/s
# Warmup Iteration  30: 117199.187 ops/s
Iteration   1: 126252.414 ops/s
Iteration   2: 120951.724 ops/s
Iteration   3: 121152.812 ops/s
Iteration   4: 122194.794 ops/s
Iteration   5: 120294.813 ops/s
Iteration   6: 123282.465 ops/s
Iteration   7: 122926.135 ops/s
Iteration   8: 121466.798 ops/s
Iteration   9: 126198.823 ops/s
Iteration  10: 119759.160 ops/s
Iteration  11: 128245.078 ops/s
Iteration  12: 123066.434 ops/s
Iteration  13: 121808.309 ops/s
Iteration  14: 125384.945 ops/s
Iteration  15: 123049.568 ops/s
Iteration  16: 121826.874 ops/s
Iteration  17: 125574.082 ops/s
Iteration  18: 119783.446 ops/s
Iteration  19: 126993.677 ops/s
Iteration  20: 126162.024 ops/s
Iteration  21: 119837.835 ops/s
Iteration  22: 119414.859 ops/s
Iteration  23: 129443.237 ops/s
Iteration  24: 117858.131 ops/s
Iteration  25: 125499.862 ops/s
Iteration  26: 124070.483 ops/s
Iteration  27: 123136.823 ops/s
Iteration  28: 119491.544 ops/s
Iteration  29: 124749.068 ops/s
Iteration  30: 124797.483 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_771._Benchmark.benchmark_Cluster_771":
  123155.790 ±(99.9%) 1939.304 ops/s [Average]
  (min, avg, max) = (117858.131, 123155.790, 129443.237), stdev = 2902.659
  CI (99.9%): [121216.486, 125095.094] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_771._Benchmark.benchmark_Cluster_771  thrpt   30  123155.790 ± 1939.304  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_772._Benchmark.benchmark_Cluster_772$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_772._Benchmark.benchmark_Cluster_772

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 987.982 ops/s
# Warmup Iteration   2: 9352.917 ops/s
# Warmup Iteration   3: 28121.845 ops/s
# Warmup Iteration   4: 38536.163 ops/s
# Warmup Iteration   5: 47020.310 ops/s
# Warmup Iteration   6: 61619.948 ops/s
# Warmup Iteration   7: 90562.838 ops/s
# Warmup Iteration   8: 96617.598 ops/s
# Warmup Iteration   9: 93455.057 ops/s
# Warmup Iteration  10: 96850.998 ops/s
# Warmup Iteration  11: 94901.939 ops/s
# Warmup Iteration  12: 93749.735 ops/s
# Warmup Iteration  13: 95855.272 ops/s
# Warmup Iteration  14: 92617.298 ops/s
# Warmup Iteration  15: 92490.280 ops/s
# Warmup Iteration  16: 100144.611 ops/s
# Warmup Iteration  17: 98223.213 ops/s
# Warmup Iteration  18: 97498.786 ops/s
# Warmup Iteration  19: 90619.329 ops/s
# Warmup Iteration  20: 101480.697 ops/s
# Warmup Iteration  21: 97895.918 ops/s
# Warmup Iteration  22: 97151.055 ops/s
# Warmup Iteration  23: 99020.021 ops/s
# Warmup Iteration  24: 95763.908 ops/s
# Warmup Iteration  25: 95763.528 ops/s
# Warmup Iteration  26: 97681.100 ops/s
# Warmup Iteration  27: 97588.002 ops/s
# Warmup Iteration  28: 93102.341 ops/s
# Warmup Iteration  29: 98545.270 ops/s
# Warmup Iteration  30: 97236.505 ops/s
Iteration   1: 100438.659 ops/s
Iteration   2: 97812.455 ops/s
Iteration   3: 77646.889 ops/s
Iteration   4: 100785.517 ops/s
Iteration   5: 95300.054 ops/s
Iteration   6: 99328.976 ops/s
Iteration   7: 95292.462 ops/s
Iteration   8: 101802.630 ops/s
Iteration   9: 96487.363 ops/s
Iteration  10: 101339.586 ops/s
Iteration  11: 94579.395 ops/s
Iteration  12: 98130.247 ops/s
Iteration  13: 98120.985 ops/s
Iteration  14: 97907.531 ops/s
Iteration  15: 96686.669 ops/s
Iteration  16: 100981.409 ops/s
Iteration  17: 95041.677 ops/s
Iteration  18: 98201.826 ops/s
Iteration  19: 102875.926 ops/s
Iteration  20: 95831.564 ops/s
Iteration  21: 100715.677 ops/s
Iteration  22: 96185.475 ops/s
Iteration  23: 98060.531 ops/s
Iteration  24: 100308.083 ops/s
Iteration  25: 93905.161 ops/s
Iteration  26: 98216.385 ops/s
Iteration  27: 99866.651 ops/s
Iteration  28: 96768.008 ops/s
Iteration  29: 102744.902 ops/s
Iteration  30: 95780.138 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_772._Benchmark.benchmark_Cluster_772":
  97571.428 ±(99.9%) 3017.746 ops/s [Average]
  (min, avg, max) = (77646.889, 97571.428, 102875.926), stdev = 4516.820
  CI (99.9%): [94553.682, 100589.173] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_772._Benchmark.benchmark_Cluster_772  thrpt   30  97571.428 ± 3017.746  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_773._Benchmark.benchmark_Cluster_773$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_773._Benchmark.benchmark_Cluster_773

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1940.969 ops/s
# Warmup Iteration   2: 6818.107 ops/s
# Warmup Iteration   3: 10353.926 ops/s
# Warmup Iteration   4: 7767.706 ops/s
# Warmup Iteration   5: 7703.849 ops/s
# Warmup Iteration   6: 15169.061 ops/s
# Warmup Iteration   7: 18934.977 ops/s
# Warmup Iteration   8: 25987.146 ops/s
# Warmup Iteration   9: 26535.577 ops/s
# Warmup Iteration  10: 27952.270 ops/s
# Warmup Iteration  11: 30459.336 ops/s
# Warmup Iteration  12: 27706.192 ops/s
# Warmup Iteration  13: 28224.892 ops/s
# Warmup Iteration  14: 29830.208 ops/s
# Warmup Iteration  15: 27971.596 ops/s
# Warmup Iteration  16: 28041.389 ops/s
# Warmup Iteration  17: 27824.976 ops/s
# Warmup Iteration  18: 28883.703 ops/s
# Warmup Iteration  19: 29089.144 ops/s
# Warmup Iteration  20: 31411.903 ops/s
# Warmup Iteration  21: 28663.256 ops/s
# Warmup Iteration  22: 28317.848 ops/s
# Warmup Iteration  23: 30470.265 ops/s
# Warmup Iteration  24: 25342.594 ops/s
# Warmup Iteration  25: 30914.786 ops/s
# Warmup Iteration  26: 28595.640 ops/s
# Warmup Iteration  27: 30062.244 ops/s
# Warmup Iteration  28: 31028.225 ops/s
# Warmup Iteration  29: 32634.743 ops/s
# Warmup Iteration  30: 29922.048 ops/s
Iteration   1: 30765.915 ops/s
Iteration   2: 30890.663 ops/s
Iteration   3: 28777.531 ops/s
Iteration   4: 29670.529 ops/s
Iteration   5: 28220.327 ops/s
Iteration   6: 28323.648 ops/s
Iteration   7: 31159.461 ops/s
Iteration   8: 27775.201 ops/s
Iteration   9: 31571.223 ops/s
Iteration  10: 29193.908 ops/s
Iteration  11: 32085.819 ops/s
Iteration  12: 31138.740 ops/s
Iteration  13: 30124.737 ops/s
Iteration  14: 29469.317 ops/s
Iteration  15: 30189.510 ops/s
Iteration  16: 26427.011 ops/s
Iteration  17: 28380.263 ops/s
Iteration  18: 30087.259 ops/s
Iteration  19: 29911.630 ops/s
Iteration  20: 29712.240 ops/s
Iteration  21: 29820.000 ops/s
Iteration  22: 30939.647 ops/s
Iteration  23: 30511.066 ops/s
Iteration  24: 27823.262 ops/s
Iteration  25: 31595.647 ops/s
Iteration  26: 26758.834 ops/s
Iteration  27: 29821.842 ops/s
Iteration  28: 29275.501 ops/s
Iteration  29: 25348.563 ops/s
Iteration  30: 29600.828 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_773._Benchmark.benchmark_Cluster_773":
  29512.337 ±(99.9%) 1067.430 ops/s [Average]
  (min, avg, max) = (25348.563, 29512.337, 32085.819), stdev = 1597.679
  CI (99.9%): [28444.908, 30579.767] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_773._Benchmark.benchmark_Cluster_773  thrpt   30  29512.337 ± 1067.430  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_774._Benchmark.benchmark_Cluster_774$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_774._Benchmark.benchmark_Cluster_774

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 964.900 ops/s
# Warmup Iteration   2: 8732.483 ops/s
# Warmup Iteration   3: 21625.612 ops/s
# Warmup Iteration   4: 23377.527 ops/s
# Warmup Iteration   5: 26635.275 ops/s
# Warmup Iteration   6: 27041.869 ops/s
# Warmup Iteration   7: 35182.547 ops/s
# Warmup Iteration   8: 45993.156 ops/s
# Warmup Iteration   9: 38405.439 ops/s
# Warmup Iteration  10: 67485.333 ops/s
# Warmup Iteration  11: 76456.561 ops/s
# Warmup Iteration  12: 82648.747 ops/s
# Warmup Iteration  13: 83812.780 ops/s
# Warmup Iteration  14: 83114.794 ops/s
# Warmup Iteration  15: 86032.088 ops/s
# Warmup Iteration  16: 80941.308 ops/s
# Warmup Iteration  17: 86688.725 ops/s
# Warmup Iteration  18: 84735.400 ops/s
# Warmup Iteration  19: 85416.527 ops/s
# Warmup Iteration  20: 87787.846 ops/s
# Warmup Iteration  21: 81361.660 ops/s
# Warmup Iteration  22: 87188.383 ops/s
# Warmup Iteration  23: 85322.600 ops/s
# Warmup Iteration  24: 84269.142 ops/s
# Warmup Iteration  25: 69063.163 ops/s
# Warmup Iteration  26: 86157.344 ops/s
# Warmup Iteration  27: 85734.013 ops/s
# Warmup Iteration  28: 84462.587 ops/s
# Warmup Iteration  29: 85794.216 ops/s
# Warmup Iteration  30: 82430.222 ops/s
Iteration   1: 86460.505 ops/s
Iteration   2: 86736.882 ops/s
Iteration   3: 83530.037 ops/s
Iteration   4: 86325.142 ops/s
Iteration   5: 83989.759 ops/s
Iteration   6: 86652.763 ops/s
Iteration   7: 84857.990 ops/s
Iteration   8: 86363.212 ops/s
Iteration   9: 85122.273 ops/s
Iteration  10: 87736.373 ops/s
Iteration  11: 82458.547 ops/s
Iteration  12: 84984.981 ops/s
Iteration  13: 88507.863 ops/s
Iteration  14: 83081.833 ops/s
Iteration  15: 84141.370 ops/s
Iteration  16: 83835.989 ops/s
Iteration  17: 88737.444 ops/s
Iteration  18: 87740.633 ops/s
Iteration  19: 86574.457 ops/s
Iteration  20: 86627.320 ops/s
Iteration  21: 84667.394 ops/s
Iteration  22: 88242.711 ops/s
Iteration  23: 83739.700 ops/s
Iteration  24: 85039.854 ops/s
Iteration  25: 85057.148 ops/s
Iteration  26: 85455.449 ops/s
Iteration  27: 85182.400 ops/s
Iteration  28: 84926.252 ops/s
Iteration  29: 84810.500 ops/s
Iteration  30: 89031.805 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_774._Benchmark.benchmark_Cluster_774":
  85687.286 ±(99.9%) 1163.362 ops/s [Average]
  (min, avg, max) = (82458.547, 85687.286, 89031.805), stdev = 1741.266
  CI (99.9%): [84523.924, 86850.648] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_774._Benchmark.benchmark_Cluster_774  thrpt   30  85687.286 ± 1163.362  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_775._Benchmark.benchmark_Cluster_775$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_775._Benchmark.benchmark_Cluster_775

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6599.244 ops/s
# Warmup Iteration   2: 26511.768 ops/s
# Warmup Iteration   3: 51738.696 ops/s
# Warmup Iteration   4: 56794.777 ops/s
# Warmup Iteration   5: 97540.713 ops/s
# Warmup Iteration   6: 103251.819 ops/s
# Warmup Iteration   7: 106756.366 ops/s
# Warmup Iteration   8: 107114.375 ops/s
# Warmup Iteration   9: 112313.640 ops/s
# Warmup Iteration  10: 109751.325 ops/s
# Warmup Iteration  11: 110025.708 ops/s
# Warmup Iteration  12: 115385.458 ops/s
# Warmup Iteration  13: 108860.935 ops/s
# Warmup Iteration  14: 115242.029 ops/s
# Warmup Iteration  15: 110202.857 ops/s
# Warmup Iteration  16: 115098.383 ops/s
# Warmup Iteration  17: 114876.810 ops/s
# Warmup Iteration  18: 114440.949 ops/s
# Warmup Iteration  19: 118919.934 ops/s
# Warmup Iteration  20: 114055.354 ops/s
# Warmup Iteration  21: 123271.884 ops/s
# Warmup Iteration  22: 116345.830 ops/s
# Warmup Iteration  23: 115564.711 ops/s
# Warmup Iteration  24: 114186.444 ops/s
# Warmup Iteration  25: 120970.638 ops/s
# Warmup Iteration  26: 113480.353 ops/s
# Warmup Iteration  27: 117780.477 ops/s
# Warmup Iteration  28: 113897.758 ops/s
# Warmup Iteration  29: 115874.976 ops/s
# Warmup Iteration  30: 117016.823 ops/s
Iteration   1: 115615.622 ops/s
Iteration   2: 114822.790 ops/s
Iteration   3: 114256.307 ops/s
Iteration   4: 117239.939 ops/s
Iteration   5: 119054.622 ops/s
Iteration   6: 113975.925 ops/s
Iteration   7: 120213.310 ops/s
Iteration   8: 114431.464 ops/s
Iteration   9: 120786.441 ops/s
Iteration  10: 112621.003 ops/s
Iteration  11: 116902.828 ops/s
Iteration  12: 117221.049 ops/s
Iteration  13: 113781.261 ops/s
Iteration  14: 119448.011 ops/s
Iteration  15: 113775.263 ops/s
Iteration  16: 117427.001 ops/s
Iteration  17: 118234.491 ops/s
Iteration  18: 115246.824 ops/s
Iteration  19: 118719.263 ops/s
Iteration  20: 115139.916 ops/s
Iteration  21: 121051.153 ops/s
Iteration  22: 116289.108 ops/s
Iteration  23: 116356.295 ops/s
Iteration  24: 120149.056 ops/s
Iteration  25: 115366.534 ops/s
Iteration  26: 117636.459 ops/s
Iteration  27: 118940.907 ops/s
Iteration  28: 111789.755 ops/s
Iteration  29: 120521.896 ops/s
Iteration  30: 114410.669 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_775._Benchmark.benchmark_Cluster_775":
  116714.172 ±(99.9%) 1727.777 ops/s [Average]
  (min, avg, max) = (111789.755, 116714.172, 121051.153), stdev = 2586.055
  CI (99.9%): [114986.395, 118441.949] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_775._Benchmark.benchmark_Cluster_775  thrpt   30  116714.172 ± 1727.777  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_776._Benchmark.benchmark_Cluster_776$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_776._Benchmark.benchmark_Cluster_776

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3697.311 ops/s
# Warmup Iteration   2: 30370.903 ops/s
# Warmup Iteration   3: 40581.875 ops/s
# Warmup Iteration   4: 62920.034 ops/s
# Warmup Iteration   5: 112826.089 ops/s
# Warmup Iteration   6: 109331.419 ops/s
# Warmup Iteration   7: 111939.722 ops/s
# Warmup Iteration   8: 126438.559 ops/s
# Warmup Iteration   9: 110473.952 ops/s
# Warmup Iteration  10: 118409.111 ops/s
# Warmup Iteration  11: 117246.582 ops/s
# Warmup Iteration  12: 126350.307 ops/s
# Warmup Iteration  13: 120343.762 ops/s
# Warmup Iteration  14: 123624.250 ops/s
# Warmup Iteration  15: 118292.721 ops/s
# Warmup Iteration  16: 125315.016 ops/s
# Warmup Iteration  17: 128514.061 ops/s
# Warmup Iteration  18: 122228.681 ops/s
# Warmup Iteration  19: 91951.782 ops/s
# Warmup Iteration  20: 126489.738 ops/s
# Warmup Iteration  21: 124241.170 ops/s
# Warmup Iteration  22: 129817.449 ops/s
# Warmup Iteration  23: 126172.570 ops/s
# Warmup Iteration  24: 123585.114 ops/s
# Warmup Iteration  25: 125890.914 ops/s
# Warmup Iteration  26: 124452.123 ops/s
# Warmup Iteration  27: 132039.983 ops/s
# Warmup Iteration  28: 128509.812 ops/s
# Warmup Iteration  29: 121895.505 ops/s
# Warmup Iteration  30: 129793.551 ops/s
Iteration   1: 121176.339 ops/s
Iteration   2: 124127.955 ops/s
Iteration   3: 130876.197 ops/s
Iteration   4: 121960.072 ops/s
Iteration   5: 126740.680 ops/s
Iteration   6: 125820.047 ops/s
Iteration   7: 130062.130 ops/s
Iteration   8: 124534.081 ops/s
Iteration   9: 126303.363 ops/s
Iteration  10: 127298.817 ops/s
Iteration  11: 125274.551 ops/s
Iteration  12: 132703.213 ops/s
Iteration  13: 126766.125 ops/s
Iteration  14: 120148.960 ops/s
Iteration  15: 126632.112 ops/s
Iteration  16: 123732.532 ops/s
Iteration  17: 128119.132 ops/s
Iteration  18: 123167.529 ops/s
Iteration  19: 131652.791 ops/s
Iteration  20: 125422.490 ops/s
Iteration  21: 125366.370 ops/s
Iteration  22: 129987.769 ops/s
Iteration  23: 120921.222 ops/s
Iteration  24: 126298.288 ops/s
Iteration  25: 124174.057 ops/s
Iteration  26: 128900.055 ops/s
Iteration  27: 125324.002 ops/s
Iteration  28: 122993.681 ops/s
Iteration  29: 128919.668 ops/s
Iteration  30: 124225.392 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_776._Benchmark.benchmark_Cluster_776":
  125987.654 ±(99.9%) 2125.827 ops/s [Average]
  (min, avg, max) = (120148.960, 125987.654, 132703.213), stdev = 3181.838
  CI (99.9%): [123861.827, 128113.481] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_776._Benchmark.benchmark_Cluster_776  thrpt   30  125987.654 ± 2125.827  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_777._Benchmark.benchmark_Cluster_777$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_777._Benchmark.benchmark_Cluster_777

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4741.850 ops/s
# Warmup Iteration   2: 22125.485 ops/s
# Warmup Iteration   3: 44203.201 ops/s
# Warmup Iteration   4: 79151.350 ops/s
# Warmup Iteration   5: 100119.296 ops/s
# Warmup Iteration   6: 103237.371 ops/s
# Warmup Iteration   7: 97248.040 ops/s
# Warmup Iteration   8: 103587.892 ops/s
# Warmup Iteration   9: 107571.076 ops/s
# Warmup Iteration  10: 104063.243 ops/s
# Warmup Iteration  11: 105319.044 ops/s
# Warmup Iteration  12: 105500.566 ops/s
# Warmup Iteration  13: 99805.504 ops/s
# Warmup Iteration  14: 104865.947 ops/s
# Warmup Iteration  15: 101972.013 ops/s
# Warmup Iteration  16: 108583.177 ops/s
# Warmup Iteration  17: 111066.853 ops/s
# Warmup Iteration  18: 107323.581 ops/s
# Warmup Iteration  19: 109235.703 ops/s
# Warmup Iteration  20: 107066.358 ops/s
# Warmup Iteration  21: 107304.748 ops/s
# Warmup Iteration  22: 102885.728 ops/s
# Warmup Iteration  23: 108698.718 ops/s
# Warmup Iteration  24: 111970.110 ops/s
# Warmup Iteration  25: 108255.985 ops/s
# Warmup Iteration  26: 111971.682 ops/s
# Warmup Iteration  27: 112389.276 ops/s
# Warmup Iteration  28: 113453.346 ops/s
# Warmup Iteration  29: 105802.366 ops/s
# Warmup Iteration  30: 111590.591 ops/s
Iteration   1: 107917.987 ops/s
Iteration   2: 107081.257 ops/s
Iteration   3: 113480.158 ops/s
Iteration   4: 110956.474 ops/s
Iteration   5: 113417.950 ops/s
Iteration   6: 104046.003 ops/s
Iteration   7: 111402.243 ops/s
Iteration   8: 101635.160 ops/s
Iteration   9: 112006.616 ops/s
Iteration  10: 112460.023 ops/s
Iteration  11: 108601.290 ops/s
Iteration  12: 109375.985 ops/s
Iteration  13: 109140.218 ops/s
Iteration  14: 110173.089 ops/s
Iteration  15: 112864.337 ops/s
Iteration  16: 105917.874 ops/s
Iteration  17: 108664.692 ops/s
Iteration  18: 116166.273 ops/s
Iteration  19: 105430.084 ops/s
Iteration  20: 113201.169 ops/s
Iteration  21: 107161.838 ops/s
Iteration  22: 109378.712 ops/s
Iteration  23: 110852.529 ops/s
Iteration  24: 107110.555 ops/s
Iteration  25: 112241.736 ops/s
Iteration  26: 109239.758 ops/s
Iteration  27: 111289.915 ops/s
Iteration  28: 110255.894 ops/s
Iteration  29: 110337.276 ops/s
Iteration  30: 106179.458 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_777._Benchmark.benchmark_Cluster_777":
  109599.552 ±(99.9%) 2108.009 ops/s [Average]
  (min, avg, max) = (101635.160, 109599.552, 116166.273), stdev = 3155.168
  CI (99.9%): [107491.543, 111707.560] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_777._Benchmark.benchmark_Cluster_777  thrpt   30  109599.552 ± 2108.009  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_778._Benchmark.benchmark_Cluster_778$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_778._Benchmark.benchmark_Cluster_778

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2013.455 ops/s
# Warmup Iteration   2: 30471.461 ops/s
# Warmup Iteration   3: 85444.746 ops/s
# Warmup Iteration   4: 105334.639 ops/s
# Warmup Iteration   5: 100330.619 ops/s
# Warmup Iteration   6: 103654.405 ops/s
# Warmup Iteration   7: 105552.840 ops/s
# Warmup Iteration   8: 106546.187 ops/s
# Warmup Iteration   9: 113001.609 ops/s
# Warmup Iteration  10: 106932.911 ops/s
# Warmup Iteration  11: 105651.917 ops/s
# Warmup Iteration  12: 112159.729 ops/s
# Warmup Iteration  13: 105500.451 ops/s
# Warmup Iteration  14: 88104.825 ops/s
# Warmup Iteration  15: 108289.160 ops/s
# Warmup Iteration  16: 113113.361 ops/s
# Warmup Iteration  17: 109157.777 ops/s
# Warmup Iteration  18: 117519.461 ops/s
# Warmup Iteration  19: 106362.529 ops/s
# Warmup Iteration  20: 112553.167 ops/s
# Warmup Iteration  21: 110107.697 ops/s
# Warmup Iteration  22: 113131.431 ops/s
# Warmup Iteration  23: 108692.787 ops/s
# Warmup Iteration  24: 111388.151 ops/s
# Warmup Iteration  25: 115926.652 ops/s
# Warmup Iteration  26: 104221.295 ops/s
# Warmup Iteration  27: 115003.636 ops/s
# Warmup Iteration  28: 108566.675 ops/s
# Warmup Iteration  29: 109049.840 ops/s
# Warmup Iteration  30: 109642.818 ops/s
Iteration   1: 117470.942 ops/s
Iteration   2: 116343.663 ops/s
Iteration   3: 111193.917 ops/s
Iteration   4: 113138.185 ops/s
Iteration   5: 115423.091 ops/s
Iteration   6: 110266.296 ops/s
Iteration   7: 111924.436 ops/s
Iteration   8: 112659.825 ops/s
Iteration   9: 116146.972 ops/s
Iteration  10: 118405.608 ops/s
Iteration  11: 108617.235 ops/s
Iteration  12: 115826.696 ops/s
Iteration  13: 111505.033 ops/s
Iteration  14: 115668.351 ops/s
Iteration  15: 116616.555 ops/s
Iteration  16: 107863.945 ops/s
Iteration  17: 119476.772 ops/s
Iteration  18: 117991.999 ops/s
Iteration  19: 109721.311 ops/s
Iteration  20: 113296.712 ops/s
Iteration  21: 115215.095 ops/s
Iteration  22: 110891.338 ops/s
Iteration  23: 111105.369 ops/s
Iteration  24: 115590.142 ops/s
Iteration  25: 111699.422 ops/s
Iteration  26: 116222.957 ops/s
Iteration  27: 115462.630 ops/s
Iteration  28: 113899.008 ops/s
Iteration  29: 116022.308 ops/s
Iteration  30: 114697.705 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_778._Benchmark.benchmark_Cluster_778":
  114012.117 ±(99.9%) 2007.403 ops/s [Average]
  (min, avg, max) = (107863.945, 114012.117, 119476.772), stdev = 3004.587
  CI (99.9%): [112004.714, 116019.521] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_778._Benchmark.benchmark_Cluster_778  thrpt   30  114012.117 ± 2007.403  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_779._Benchmark.benchmark_Cluster_779$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_779._Benchmark.benchmark_Cluster_779

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 804.662 ops/s
# Warmup Iteration   2: 13750.563 ops/s
# Warmup Iteration   3: 34605.964 ops/s
# Warmup Iteration   4: 47654.938 ops/s
# Warmup Iteration   5: 92369.196 ops/s
# Warmup Iteration   6: 92535.950 ops/s
# Warmup Iteration   7: 90250.189 ops/s
# Warmup Iteration   8: 88570.061 ops/s
# Warmup Iteration   9: 97045.536 ops/s
# Warmup Iteration  10: 95784.117 ops/s
# Warmup Iteration  11: 99149.688 ops/s
# Warmup Iteration  12: 93498.635 ops/s
# Warmup Iteration  13: 96904.343 ops/s
# Warmup Iteration  14: 98960.389 ops/s
# Warmup Iteration  15: 94251.854 ops/s
# Warmup Iteration  16: 95086.582 ops/s
# Warmup Iteration  17: 94344.921 ops/s
# Warmup Iteration  18: 97182.711 ops/s
# Warmup Iteration  19: 95446.419 ops/s
# Warmup Iteration  20: 94746.628 ops/s
# Warmup Iteration  21: 100770.989 ops/s
# Warmup Iteration  22: 96684.700 ops/s
# Warmup Iteration  23: 95644.449 ops/s
# Warmup Iteration  24: 97713.175 ops/s
# Warmup Iteration  25: 96024.440 ops/s
# Warmup Iteration  26: 97213.197 ops/s
# Warmup Iteration  27: 95338.952 ops/s
# Warmup Iteration  28: 97640.704 ops/s
# Warmup Iteration  29: 95785.099 ops/s
# Warmup Iteration  30: 96038.729 ops/s
Iteration   1: 92630.158 ops/s
Iteration   2: 95857.717 ops/s
Iteration   3: 96423.465 ops/s
Iteration   4: 93406.497 ops/s
Iteration   5: 95231.444 ops/s
Iteration   6: 96973.468 ops/s
Iteration   7: 95494.419 ops/s
Iteration   8: 97845.968 ops/s
Iteration   9: 94276.962 ops/s
Iteration  10: 96467.910 ops/s
Iteration  11: 95775.944 ops/s
Iteration  12: 96034.097 ops/s
Iteration  13: 101877.305 ops/s
Iteration  14: 93631.371 ops/s
Iteration  15: 95406.031 ops/s
Iteration  16: 99589.630 ops/s
Iteration  17: 93137.915 ops/s
Iteration  18: 98855.067 ops/s
Iteration  19: 96364.337 ops/s
Iteration  20: 96020.745 ops/s
Iteration  21: 98339.739 ops/s
Iteration  22: 94081.144 ops/s
Iteration  23: 98667.286 ops/s
Iteration  24: 96002.805 ops/s
Iteration  25: 93219.866 ops/s
Iteration  26: 99965.369 ops/s
Iteration  27: 97001.643 ops/s
Iteration  28: 97928.600 ops/s
Iteration  29: 99308.552 ops/s
Iteration  30: 94315.972 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_779._Benchmark.benchmark_Cluster_779":
  96337.714 ±(99.9%) 1526.548 ops/s [Average]
  (min, avg, max) = (92630.158, 96337.714, 101877.305), stdev = 2284.865
  CI (99.9%): [94811.166, 97864.262] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_779._Benchmark.benchmark_Cluster_779  thrpt   30  96337.714 ± 1526.548  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_78._Benchmark.benchmark_Cluster_78$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_78._Benchmark.benchmark_Cluster_78

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4882.214 ops/s
# Warmup Iteration   2: 31733.062 ops/s
# Warmup Iteration   3: 74716.936 ops/s
# Warmup Iteration   4: 106754.738 ops/s
# Warmup Iteration   5: 109333.802 ops/s
# Warmup Iteration   6: 116882.728 ops/s
# Warmup Iteration   7: 104968.218 ops/s
# Warmup Iteration   8: 91537.273 ops/s
# Warmup Iteration   9: 109348.864 ops/s
# Warmup Iteration  10: 117059.221 ops/s
# Warmup Iteration  11: 113922.419 ops/s
# Warmup Iteration  12: 114722.272 ops/s
# Warmup Iteration  13: 115593.421 ops/s
# Warmup Iteration  14: 112556.953 ops/s
# Warmup Iteration  15: 120420.023 ops/s
# Warmup Iteration  16: 109176.856 ops/s
# Warmup Iteration  17: 121125.056 ops/s
# Warmup Iteration  18: 115514.045 ops/s
# Warmup Iteration  19: 116986.226 ops/s
# Warmup Iteration  20: 117812.832 ops/s
# Warmup Iteration  21: 123473.605 ops/s
# Warmup Iteration  22: 116011.827 ops/s
# Warmup Iteration  23: 118608.864 ops/s
# Warmup Iteration  24: 119999.969 ops/s
# Warmup Iteration  25: 118650.467 ops/s
# Warmup Iteration  26: 114882.968 ops/s
# Warmup Iteration  27: 125309.680 ops/s
# Warmup Iteration  28: 117964.634 ops/s
# Warmup Iteration  29: 121516.595 ops/s
# Warmup Iteration  30: 117335.452 ops/s
Iteration   1: 118952.598 ops/s
Iteration   2: 123384.346 ops/s
Iteration   3: 118267.293 ops/s
Iteration   4: 117185.772 ops/s
Iteration   5: 120359.654 ops/s
Iteration   6: 117525.292 ops/s
Iteration   7: 123595.323 ops/s
Iteration   8: 121142.139 ops/s
Iteration   9: 113087.992 ops/s
Iteration  10: 120351.084 ops/s
Iteration  11: 117635.234 ops/s
Iteration  12: 118075.532 ops/s
Iteration  13: 119494.155 ops/s
Iteration  14: 116010.085 ops/s
Iteration  15: 119623.138 ops/s
Iteration  16: 119388.533 ops/s
Iteration  17: 114862.694 ops/s
Iteration  18: 121844.037 ops/s
Iteration  19: 121037.602 ops/s
Iteration  20: 120988.153 ops/s
Iteration  21: 121970.397 ops/s
Iteration  22: 116413.566 ops/s
Iteration  23: 122853.218 ops/s
Iteration  24: 112205.276 ops/s
Iteration  25: 120508.775 ops/s
Iteration  26: 114052.626 ops/s
Iteration  27: 119503.497 ops/s
Iteration  28: 120009.502 ops/s
Iteration  29: 121141.309 ops/s
Iteration  30: 118586.078 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_78._Benchmark.benchmark_Cluster_78":
  119001.830 ±(99.9%) 1940.427 ops/s [Average]
  (min, avg, max) = (112205.276, 119001.830, 123595.323), stdev = 2904.340
  CI (99.9%): [117061.403, 120942.257] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_78._Benchmark.benchmark_Cluster_78  thrpt   30  119001.830 ± 1940.427  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_780._Benchmark.benchmark_Cluster_780$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_780._Benchmark.benchmark_Cluster_780

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 601.556 ops/s
# Warmup Iteration   2: 5434.831 ops/s
# Warmup Iteration   3: 12993.484 ops/s
# Warmup Iteration   4: 13165.343 ops/s
# Warmup Iteration   5: 17671.948 ops/s
# Warmup Iteration   6: 23596.512 ops/s
# Warmup Iteration   7: 39285.420 ops/s
# Warmup Iteration   8: 41138.643 ops/s
# Warmup Iteration   9: 46002.909 ops/s
# Warmup Iteration  10: 41544.152 ops/s
# Warmup Iteration  11: 42459.975 ops/s
# Warmup Iteration  12: 39658.744 ops/s
# Warmup Iteration  13: 41064.182 ops/s
# Warmup Iteration  14: 47884.972 ops/s
# Warmup Iteration  15: 46563.284 ops/s
# Warmup Iteration  16: 50347.560 ops/s
# Warmup Iteration  17: 41725.373 ops/s
# Warmup Iteration  18: 47448.266 ops/s
# Warmup Iteration  19: 45338.449 ops/s
# Warmup Iteration  20: 44389.776 ops/s
# Warmup Iteration  21: 42261.777 ops/s
# Warmup Iteration  22: 45120.992 ops/s
# Warmup Iteration  23: 45114.889 ops/s
# Warmup Iteration  24: 45376.672 ops/s
# Warmup Iteration  25: 43981.963 ops/s
# Warmup Iteration  26: 46358.743 ops/s
# Warmup Iteration  27: 45819.919 ops/s
# Warmup Iteration  28: 42212.925 ops/s
# Warmup Iteration  29: 42159.397 ops/s
# Warmup Iteration  30: 46614.026 ops/s
Iteration   1: 45855.400 ops/s
Iteration   2: 45711.436 ops/s
Iteration   3: 40307.532 ops/s
Iteration   4: 47938.778 ops/s
Iteration   5: 48500.421 ops/s
Iteration   6: 46063.054 ops/s
Iteration   7: 44698.094 ops/s
Iteration   8: 43429.115 ops/s
Iteration   9: 43886.321 ops/s
Iteration  10: 45420.140 ops/s
Iteration  11: 47650.530 ops/s
Iteration  12: 41763.309 ops/s
Iteration  13: 45321.023 ops/s
Iteration  14: 44027.337 ops/s
Iteration  15: 41691.623 ops/s
Iteration  16: 41810.693 ops/s
Iteration  17: 41923.814 ops/s
Iteration  18: 43177.177 ops/s
Iteration  19: 43425.608 ops/s
Iteration  20: 40541.021 ops/s
Iteration  21: 42868.451 ops/s
Iteration  22: 46539.691 ops/s
Iteration  23: 44713.901 ops/s
Iteration  24: 44820.716 ops/s
Iteration  25: 43934.315 ops/s
Iteration  26: 39179.436 ops/s
Iteration  27: 42254.291 ops/s
Iteration  28: 43805.497 ops/s
Iteration  29: 42518.155 ops/s
Iteration  30: 44546.169 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_780._Benchmark.benchmark_Cluster_780":
  43944.102 ±(99.9%) 1509.286 ops/s [Average]
  (min, avg, max) = (39179.436, 43944.102, 48500.421), stdev = 2259.028
  CI (99.9%): [42434.816, 45453.387] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_780._Benchmark.benchmark_Cluster_780  thrpt   30  43944.102 ± 1509.286  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_781._Benchmark.benchmark_Cluster_781$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_781._Benchmark.benchmark_Cluster_781

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4228.599 ops/s
# Warmup Iteration   2: 30457.278 ops/s
# Warmup Iteration   3: 41633.933 ops/s
# Warmup Iteration   4: 68826.542 ops/s
# Warmup Iteration   5: 99716.762 ops/s
# Warmup Iteration   6: 95602.971 ops/s
# Warmup Iteration   7: 111057.311 ops/s
# Warmup Iteration   8: 99379.058 ops/s
# Warmup Iteration   9: 115776.501 ops/s
# Warmup Iteration  10: 109088.150 ops/s
# Warmup Iteration  11: 113812.037 ops/s
# Warmup Iteration  12: 113306.640 ops/s
# Warmup Iteration  13: 111539.625 ops/s
# Warmup Iteration  14: 109603.164 ops/s
# Warmup Iteration  15: 113478.423 ops/s
# Warmup Iteration  16: 110141.991 ops/s
# Warmup Iteration  17: 118707.631 ops/s
# Warmup Iteration  18: 120724.656 ops/s
# Warmup Iteration  19: 119314.174 ops/s
# Warmup Iteration  20: 121697.971 ops/s
# Warmup Iteration  21: 117105.708 ops/s
# Warmup Iteration  22: 121742.162 ops/s
# Warmup Iteration  23: 119332.077 ops/s
# Warmup Iteration  24: 116253.580 ops/s
# Warmup Iteration  25: 123676.030 ops/s
# Warmup Iteration  26: 116792.205 ops/s
# Warmup Iteration  27: 124052.140 ops/s
# Warmup Iteration  28: 115983.344 ops/s
# Warmup Iteration  29: 120406.000 ops/s
# Warmup Iteration  30: 124118.692 ops/s
Iteration   1: 114602.690 ops/s
Iteration   2: 120766.045 ops/s
Iteration   3: 124698.673 ops/s
Iteration   4: 116810.032 ops/s
Iteration   5: 121644.100 ops/s
Iteration   6: 119167.731 ops/s
Iteration   7: 118403.444 ops/s
Iteration   8: 119265.252 ops/s
Iteration   9: 118164.237 ops/s
Iteration  10: 120203.921 ops/s
Iteration  11: 116711.349 ops/s
Iteration  12: 121137.416 ops/s
Iteration  13: 113913.460 ops/s
Iteration  14: 117286.806 ops/s
Iteration  15: 121319.382 ops/s
Iteration  16: 120396.229 ops/s
Iteration  17: 114237.648 ops/s
Iteration  18: 123000.307 ops/s
Iteration  19: 117904.308 ops/s
Iteration  20: 121443.271 ops/s
Iteration  21: 122547.420 ops/s
Iteration  22: 119114.537 ops/s
Iteration  23: 120120.317 ops/s
Iteration  24: 116746.764 ops/s
Iteration  25: 121988.593 ops/s
Iteration  26: 118301.552 ops/s
Iteration  27: 121707.554 ops/s
Iteration  28: 118151.518 ops/s
Iteration  29: 117917.648 ops/s
Iteration  30: 123707.692 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_781._Benchmark.benchmark_Cluster_781":
  119379.330 ±(99.9%) 1825.628 ops/s [Average]
  (min, avg, max) = (113913.460, 119379.330, 124698.673), stdev = 2732.515
  CI (99.9%): [117553.701, 121204.958] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_781._Benchmark.benchmark_Cluster_781  thrpt   30  119379.330 ± 1825.628  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_782._Benchmark.benchmark_Cluster_782$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_782._Benchmark.benchmark_Cluster_782

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1396.520 ops/s
# Warmup Iteration   2: 16390.315 ops/s
# Warmup Iteration   3: 25121.258 ops/s
# Warmup Iteration   4: 27829.130 ops/s
# Warmup Iteration   5: 28651.519 ops/s
# Warmup Iteration   6: 83758.099 ops/s
# Warmup Iteration   7: 94664.336 ops/s
# Warmup Iteration   8: 92680.560 ops/s
# Warmup Iteration   9: 94899.160 ops/s
# Warmup Iteration  10: 92872.052 ops/s
# Warmup Iteration  11: 92555.224 ops/s
# Warmup Iteration  12: 93242.686 ops/s
# Warmup Iteration  13: 89540.897 ops/s
# Warmup Iteration  14: 89112.037 ops/s
# Warmup Iteration  15: 99460.269 ops/s
# Warmup Iteration  16: 93343.549 ops/s
# Warmup Iteration  17: 97192.165 ops/s
# Warmup Iteration  18: 99100.393 ops/s
# Warmup Iteration  19: 95140.238 ops/s
# Warmup Iteration  20: 97153.741 ops/s
# Warmup Iteration  21: 97622.561 ops/s
# Warmup Iteration  22: 94897.657 ops/s
# Warmup Iteration  23: 100055.429 ops/s
# Warmup Iteration  24: 96777.266 ops/s
# Warmup Iteration  25: 96545.302 ops/s
# Warmup Iteration  26: 99683.946 ops/s
# Warmup Iteration  27: 90405.786 ops/s
# Warmup Iteration  28: 91216.320 ops/s
# Warmup Iteration  29: 100389.105 ops/s
# Warmup Iteration  30: 95111.710 ops/s
Iteration   1: 99518.837 ops/s
Iteration   2: 98009.864 ops/s
Iteration   3: 96409.697 ops/s
Iteration   4: 102491.044 ops/s
Iteration   5: 99555.739 ops/s
Iteration   6: 96212.461 ops/s
Iteration   7: 100357.448 ops/s
Iteration   8: 95054.651 ops/s
Iteration   9: 95024.503 ops/s
Iteration  10: 100774.005 ops/s
Iteration  11: 95936.502 ops/s
Iteration  12: 98953.055 ops/s
Iteration  13: 100097.972 ops/s
Iteration  14: 97607.119 ops/s
Iteration  15: 92707.993 ops/s
Iteration  16: 97185.826 ops/s
Iteration  17: 103074.709 ops/s
Iteration  18: 96210.072 ops/s
Iteration  19: 99735.834 ops/s
Iteration  20: 96895.264 ops/s
Iteration  21: 103236.768 ops/s
Iteration  22: 99671.843 ops/s
Iteration  23: 95627.337 ops/s
Iteration  24: 101640.033 ops/s
Iteration  25: 95054.048 ops/s
Iteration  26: 100453.225 ops/s
Iteration  27: 80037.847 ops/s
Iteration  28: 95767.377 ops/s
Iteration  29: 99525.085 ops/s
Iteration  30: 96223.063 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_782._Benchmark.benchmark_Cluster_782":
  97634.974 ±(99.9%) 2845.099 ops/s [Average]
  (min, avg, max) = (80037.847, 97634.974, 103236.768), stdev = 4258.410
  CI (99.9%): [94789.875, 100480.073] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_782._Benchmark.benchmark_Cluster_782  thrpt   30  97634.974 ± 2845.099  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_783._Benchmark.benchmark_Cluster_783$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_783._Benchmark.benchmark_Cluster_783

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6592.556 ops/s
# Warmup Iteration   2: 32632.010 ops/s
# Warmup Iteration   3: 28091.909 ops/s
# Warmup Iteration   4: 43021.858 ops/s
# Warmup Iteration   5: 85409.885 ops/s
# Warmup Iteration   6: 107309.162 ops/s
# Warmup Iteration   7: 112215.328 ops/s
# Warmup Iteration   8: 119465.330 ops/s
# Warmup Iteration   9: 118030.334 ops/s
# Warmup Iteration  10: 117903.877 ops/s
# Warmup Iteration  11: 118251.010 ops/s
# Warmup Iteration  12: 112530.100 ops/s
# Warmup Iteration  13: 119710.417 ops/s
# Warmup Iteration  14: 110816.764 ops/s
# Warmup Iteration  15: 119125.284 ops/s
# Warmup Iteration  16: 111461.373 ops/s
# Warmup Iteration  17: 131211.744 ops/s
# Warmup Iteration  18: 130085.749 ops/s
# Warmup Iteration  19: 124797.106 ops/s
# Warmup Iteration  20: 125497.999 ops/s
# Warmup Iteration  21: 132778.131 ops/s
# Warmup Iteration  22: 127900.323 ops/s
# Warmup Iteration  23: 126512.847 ops/s
# Warmup Iteration  24: 124839.248 ops/s
# Warmup Iteration  25: 119928.064 ops/s
# Warmup Iteration  26: 129574.985 ops/s
# Warmup Iteration  27: 124508.380 ops/s
# Warmup Iteration  28: 122795.276 ops/s
# Warmup Iteration  29: 126997.413 ops/s
# Warmup Iteration  30: 131057.756 ops/s
Iteration   1: 127147.069 ops/s
Iteration   2: 128102.115 ops/s
Iteration   3: 125030.255 ops/s
Iteration   4: 126133.402 ops/s
Iteration   5: 128363.953 ops/s
Iteration   6: 124793.990 ops/s
Iteration   7: 129520.637 ops/s
Iteration   8: 124281.069 ops/s
Iteration   9: 126861.592 ops/s
Iteration  10: 125702.903 ops/s
Iteration  11: 125217.649 ops/s
Iteration  12: 123770.840 ops/s
Iteration  13: 125018.694 ops/s
Iteration  14: 121083.148 ops/s
Iteration  15: 121867.520 ops/s
Iteration  16: 127098.569 ops/s
Iteration  17: 125105.939 ops/s
Iteration  18: 125939.956 ops/s
Iteration  19: 120805.219 ops/s
Iteration  20: 125869.224 ops/s
Iteration  21: 127305.857 ops/s
Iteration  22: 123395.700 ops/s
Iteration  23: 127369.658 ops/s
Iteration  24: 123159.480 ops/s
Iteration  25: 126785.297 ops/s
Iteration  26: 134454.337 ops/s
Iteration  27: 123833.638 ops/s
Iteration  28: 129931.032 ops/s
Iteration  29: 130209.773 ops/s
Iteration  30: 124877.587 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_783._Benchmark.benchmark_Cluster_783":
  125967.870 ±(99.9%) 1907.331 ops/s [Average]
  (min, avg, max) = (120805.219, 125967.870, 134454.337), stdev = 2854.804
  CI (99.9%): [124060.539, 127875.202] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_783._Benchmark.benchmark_Cluster_783  thrpt   30  125967.870 ± 1907.331  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_784._Benchmark.benchmark_Cluster_784$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_784._Benchmark.benchmark_Cluster_784

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.739 ops/s
# Warmup Iteration   2: 8383.901 ops/s
# Warmup Iteration   3: 33957.085 ops/s
# Warmup Iteration   4: 22361.054 ops/s
# Warmup Iteration   5: 41904.593 ops/s
# Warmup Iteration   6: 31848.349 ops/s
# Warmup Iteration   7: 76356.404 ops/s
# Warmup Iteration   8: 102687.697 ops/s
# Warmup Iteration   9: 105801.657 ops/s
# Warmup Iteration  10: 105071.472 ops/s
# Warmup Iteration  11: 101675.340 ops/s
# Warmup Iteration  12: 102179.847 ops/s
# Warmup Iteration  13: 107189.259 ops/s
# Warmup Iteration  14: 102144.829 ops/s
# Warmup Iteration  15: 100126.093 ops/s
# Warmup Iteration  16: 108724.307 ops/s
# Warmup Iteration  17: 100648.798 ops/s
# Warmup Iteration  18: 109569.789 ops/s
# Warmup Iteration  19: 109593.789 ops/s
# Warmup Iteration  20: 101315.598 ops/s
# Warmup Iteration  21: 108148.738 ops/s
# Warmup Iteration  22: 102493.389 ops/s
# Warmup Iteration  23: 108087.859 ops/s
# Warmup Iteration  24: 102831.871 ops/s
# Warmup Iteration  25: 109588.128 ops/s
# Warmup Iteration  26: 102790.625 ops/s
# Warmup Iteration  27: 105742.366 ops/s
# Warmup Iteration  28: 98034.624 ops/s
# Warmup Iteration  29: 106334.188 ops/s
# Warmup Iteration  30: 104930.822 ops/s
Iteration   1: 103593.610 ops/s
Iteration   2: 107951.160 ops/s
Iteration   3: 101439.682 ops/s
Iteration   4: 107196.227 ops/s
Iteration   5: 102748.951 ops/s
Iteration   6: 102626.406 ops/s
Iteration   7: 107644.190 ops/s
Iteration   8: 103087.601 ops/s
Iteration   9: 106415.952 ops/s
Iteration  10: 102698.495 ops/s
Iteration  11: 103139.751 ops/s
Iteration  12: 104135.770 ops/s
Iteration  13: 101959.262 ops/s
Iteration  14: 107705.872 ops/s
Iteration  15: 106416.335 ops/s
Iteration  16: 107136.246 ops/s
Iteration  17: 101849.063 ops/s
Iteration  18: 107182.052 ops/s
Iteration  19: 103997.140 ops/s
Iteration  20: 86826.624 ops/s
Iteration  21: 107049.232 ops/s
Iteration  22: 103603.236 ops/s
Iteration  23: 105728.469 ops/s
Iteration  24: 100971.930 ops/s
Iteration  25: 107189.964 ops/s
Iteration  26: 104882.915 ops/s
Iteration  27: 102763.969 ops/s
Iteration  28: 106171.463 ops/s
Iteration  29: 103923.280 ops/s
Iteration  30: 103898.102 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_784._Benchmark.benchmark_Cluster_784":
  104064.432 ±(99.9%) 2603.464 ops/s [Average]
  (min, avg, max) = (86826.624, 104064.432, 107951.160), stdev = 3896.743
  CI (99.9%): [101460.968, 106667.896] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_784._Benchmark.benchmark_Cluster_784  thrpt   30  104064.432 ± 2603.464  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_785._Benchmark.benchmark_Cluster_785$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_785._Benchmark.benchmark_Cluster_785

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2725.478 ops/s
# Warmup Iteration   2: 21280.923 ops/s
# Warmup Iteration   3: 34003.633 ops/s
# Warmup Iteration   4: 25404.314 ops/s
# Warmup Iteration   5: 49075.080 ops/s
# Warmup Iteration   6: 88887.201 ops/s
# Warmup Iteration   7: 84386.252 ops/s
# Warmup Iteration   8: 97692.127 ops/s
# Warmup Iteration   9: 92264.224 ops/s
# Warmup Iteration  10: 94362.742 ops/s
# Warmup Iteration  11: 96555.595 ops/s
# Warmup Iteration  12: 95402.862 ops/s
# Warmup Iteration  13: 97236.220 ops/s
# Warmup Iteration  14: 95219.694 ops/s
# Warmup Iteration  15: 95924.351 ops/s
# Warmup Iteration  16: 96927.393 ops/s
# Warmup Iteration  17: 95388.545 ops/s
# Warmup Iteration  18: 99852.442 ops/s
# Warmup Iteration  19: 94158.297 ops/s
# Warmup Iteration  20: 102199.253 ops/s
# Warmup Iteration  21: 101883.873 ops/s
# Warmup Iteration  22: 98346.999 ops/s
# Warmup Iteration  23: 96020.249 ops/s
# Warmup Iteration  24: 98293.766 ops/s
# Warmup Iteration  25: 97933.640 ops/s
# Warmup Iteration  26: 97942.133 ops/s
# Warmup Iteration  27: 99498.695 ops/s
# Warmup Iteration  28: 101525.208 ops/s
# Warmup Iteration  29: 97554.713 ops/s
# Warmup Iteration  30: 101489.430 ops/s
Iteration   1: 97100.143 ops/s
Iteration   2: 99660.544 ops/s
Iteration   3: 97004.845 ops/s
Iteration   4: 98352.462 ops/s
Iteration   5: 97235.413 ops/s
Iteration   6: 98849.111 ops/s
Iteration   7: 99805.421 ops/s
Iteration   8: 96136.827 ops/s
Iteration   9: 102771.113 ops/s
Iteration  10: 97180.209 ops/s
Iteration  11: 95037.621 ops/s
Iteration  12: 103210.630 ops/s
Iteration  13: 95333.363 ops/s
Iteration  14: 100451.301 ops/s
Iteration  15: 100126.233 ops/s
Iteration  16: 96843.602 ops/s
Iteration  17: 96566.015 ops/s
Iteration  18: 100199.243 ops/s
Iteration  19: 98224.860 ops/s
Iteration  20: 101198.223 ops/s
Iteration  21: 96140.472 ops/s
Iteration  22: 98663.556 ops/s
Iteration  23: 97447.764 ops/s
Iteration  24: 96498.800 ops/s
Iteration  25: 101389.356 ops/s
Iteration  26: 95350.406 ops/s
Iteration  27: 100709.123 ops/s
Iteration  28: 98330.618 ops/s
Iteration  29: 99814.292 ops/s
Iteration  30: 96720.224 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_785._Benchmark.benchmark_Cluster_785":
  98411.726 ±(99.9%) 1470.517 ops/s [Average]
  (min, avg, max) = (95037.621, 98411.726, 103210.630), stdev = 2201.000
  CI (99.9%): [96941.210, 99882.243] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_785._Benchmark.benchmark_Cluster_785  thrpt   30  98411.726 ± 1470.517  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_786._Benchmark.benchmark_Cluster_786$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_786._Benchmark.benchmark_Cluster_786

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7794.599 ops/s
# Warmup Iteration   2: 41835.753 ops/s
# Warmup Iteration   3: 74785.658 ops/s
# Warmup Iteration   4: 69242.682 ops/s
# Warmup Iteration   5: 116369.109 ops/s
# Warmup Iteration   6: 113482.022 ops/s
# Warmup Iteration   7: 119484.849 ops/s
# Warmup Iteration   8: 118404.617 ops/s
# Warmup Iteration   9: 114768.583 ops/s
# Warmup Iteration  10: 121984.762 ops/s
# Warmup Iteration  11: 113326.066 ops/s
# Warmup Iteration  12: 119077.442 ops/s
# Warmup Iteration  13: 114814.613 ops/s
# Warmup Iteration  14: 118614.754 ops/s
# Warmup Iteration  15: 122321.662 ops/s
# Warmup Iteration  16: 116071.252 ops/s
# Warmup Iteration  17: 122503.144 ops/s
# Warmup Iteration  18: 127099.107 ops/s
# Warmup Iteration  19: 122235.722 ops/s
# Warmup Iteration  20: 126545.570 ops/s
# Warmup Iteration  21: 121226.456 ops/s
# Warmup Iteration  22: 124314.943 ops/s
# Warmup Iteration  23: 122701.702 ops/s
# Warmup Iteration  24: 119434.296 ops/s
# Warmup Iteration  25: 126698.625 ops/s
# Warmup Iteration  26: 120372.388 ops/s
# Warmup Iteration  27: 127003.110 ops/s
# Warmup Iteration  28: 123108.214 ops/s
# Warmup Iteration  29: 127989.958 ops/s
# Warmup Iteration  30: 120651.659 ops/s
Iteration   1: 125663.725 ops/s
Iteration   2: 121705.452 ops/s
Iteration   3: 124117.901 ops/s
Iteration   4: 125381.187 ops/s
Iteration   5: 123367.474 ops/s
Iteration   6: 125815.936 ops/s
Iteration   7: 128503.831 ops/s
Iteration   8: 119016.949 ops/s
Iteration   9: 126502.004 ops/s
Iteration  10: 124051.275 ops/s
Iteration  11: 126401.860 ops/s
Iteration  12: 125092.281 ops/s
Iteration  13: 126837.714 ops/s
Iteration  14: 106773.185 ops/s
Iteration  15: 116000.971 ops/s
Iteration  16: 127199.896 ops/s
Iteration  17: 122323.971 ops/s
Iteration  18: 126831.979 ops/s
Iteration  19: 120187.907 ops/s
Iteration  20: 128437.756 ops/s
Iteration  21: 128067.426 ops/s
Iteration  22: 121533.217 ops/s
Iteration  23: 127047.627 ops/s
Iteration  24: 127521.828 ops/s
Iteration  25: 121693.051 ops/s
Iteration  26: 122219.174 ops/s
Iteration  27: 128801.228 ops/s
Iteration  28: 122147.442 ops/s
Iteration  29: 129346.666 ops/s
Iteration  30: 123408.227 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_786._Benchmark.benchmark_Cluster_786":
  124066.638 ±(99.9%) 3049.558 ops/s [Average]
  (min, avg, max) = (106773.185, 124066.638, 129346.666), stdev = 4564.435
  CI (99.9%): [121017.080, 127116.196] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_786._Benchmark.benchmark_Cluster_786  thrpt   30  124066.638 ± 3049.558  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_787._Benchmark.benchmark_Cluster_787$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_787._Benchmark.benchmark_Cluster_787

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20941.949 ops/s
# Warmup Iteration   2: 98103.925 ops/s
# Warmup Iteration   3: 148093.512 ops/s
# Warmup Iteration   4: 148222.245 ops/s
# Warmup Iteration   5: 164048.337 ops/s
# Warmup Iteration   6: 160537.328 ops/s
# Warmup Iteration   7: 163038.164 ops/s
# Warmup Iteration   8: 170035.519 ops/s
# Warmup Iteration   9: 164233.383 ops/s
# Warmup Iteration  10: 169690.877 ops/s
# Warmup Iteration  11: 166336.909 ops/s
# Warmup Iteration  12: 166361.760 ops/s
# Warmup Iteration  13: 161225.222 ops/s
# Warmup Iteration  14: 173208.935 ops/s
# Warmup Iteration  15: 159517.119 ops/s
# Warmup Iteration  16: 165222.405 ops/s
# Warmup Iteration  17: 176185.483 ops/s
# Warmup Iteration  18: 174046.597 ops/s
# Warmup Iteration  19: 178193.410 ops/s
# Warmup Iteration  20: 171279.188 ops/s
# Warmup Iteration  21: 174213.818 ops/s
# Warmup Iteration  22: 172201.652 ops/s
# Warmup Iteration  23: 178529.674 ops/s
# Warmup Iteration  24: 175178.361 ops/s
# Warmup Iteration  25: 171645.213 ops/s
# Warmup Iteration  26: 177682.998 ops/s
# Warmup Iteration  27: 172534.379 ops/s
# Warmup Iteration  28: 176412.911 ops/s
# Warmup Iteration  29: 172355.197 ops/s
# Warmup Iteration  30: 178655.413 ops/s
Iteration   1: 169980.731 ops/s
Iteration   2: 170510.536 ops/s
Iteration   3: 177049.319 ops/s
Iteration   4: 177991.231 ops/s
Iteration   5: 178950.864 ops/s
Iteration   6: 172949.021 ops/s
Iteration   7: 165513.084 ops/s
Iteration   8: 173210.691 ops/s
Iteration   9: 170592.101 ops/s
Iteration  10: 176156.919 ops/s
Iteration  11: 174839.046 ops/s
Iteration  12: 175977.993 ops/s
Iteration  13: 172381.021 ops/s
Iteration  14: 172700.590 ops/s
Iteration  15: 178164.913 ops/s
Iteration  16: 179641.987 ops/s
Iteration  17: 172970.134 ops/s
Iteration  18: 180501.044 ops/s
Iteration  19: 170405.596 ops/s
Iteration  20: 168936.008 ops/s
Iteration  21: 169062.215 ops/s
Iteration  22: 169473.142 ops/s
Iteration  23: 183815.587 ops/s
Iteration  24: 170982.467 ops/s
Iteration  25: 177063.728 ops/s
Iteration  26: 182174.842 ops/s
Iteration  27: 173897.768 ops/s
Iteration  28: 176706.012 ops/s
Iteration  29: 170911.745 ops/s
Iteration  30: 178370.060 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_787._Benchmark.benchmark_Cluster_787":
  174396.013 ±(99.9%) 2951.316 ops/s [Average]
  (min, avg, max) = (165513.084, 174396.013, 183815.587), stdev = 4417.391
  CI (99.9%): [171444.697, 177347.329] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_787._Benchmark.benchmark_Cluster_787  thrpt   30  174396.013 ± 2951.316  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_788._Benchmark.benchmark_Cluster_788$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_788._Benchmark.benchmark_Cluster_788

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 38743.939 ops/s
# Warmup Iteration   2: 77234.880 ops/s
# Warmup Iteration   3: 151748.383 ops/s
# Warmup Iteration   4: 358444.373 ops/s
# Warmup Iteration   5: 360357.637 ops/s
# Warmup Iteration   6: 365781.324 ops/s
# Warmup Iteration   7: 377284.757 ops/s
# Warmup Iteration   8: 338949.959 ops/s
# Warmup Iteration   9: 377549.041 ops/s
# Warmup Iteration  10: 385625.673 ops/s
# Warmup Iteration  11: 353501.421 ops/s
# Warmup Iteration  12: 370135.084 ops/s
# Warmup Iteration  13: 358202.168 ops/s
# Warmup Iteration  14: 356257.734 ops/s
# Warmup Iteration  15: 365836.688 ops/s
# Warmup Iteration  16: 365307.596 ops/s
# Warmup Iteration  17: 382786.806 ops/s
# Warmup Iteration  18: 377250.858 ops/s
# Warmup Iteration  19: 361583.367 ops/s
# Warmup Iteration  20: 387028.747 ops/s
# Warmup Iteration  21: 367363.561 ops/s
# Warmup Iteration  22: 379045.958 ops/s
# Warmup Iteration  23: 381610.995 ops/s
# Warmup Iteration  24: 352745.626 ops/s
# Warmup Iteration  25: 391130.516 ops/s
# Warmup Iteration  26: 378632.901 ops/s
# Warmup Iteration  27: 359811.820 ops/s
# Warmup Iteration  28: 379158.311 ops/s
# Warmup Iteration  29: 373381.463 ops/s
# Warmup Iteration  30: 384082.921 ops/s
Iteration   1: 377322.373 ops/s
Iteration   2: 375078.121 ops/s
Iteration   3: 397323.705 ops/s
Iteration   4: 365092.240 ops/s
Iteration   5: 382937.664 ops/s
Iteration   6: 376774.954 ops/s
Iteration   7: 375098.275 ops/s
Iteration   8: 390866.228 ops/s
Iteration   9: 279052.989 ops/s
Iteration  10: 363091.960 ops/s
Iteration  11: 369920.980 ops/s
Iteration  12: 386514.910 ops/s
Iteration  13: 378344.445 ops/s
Iteration  14: 373453.615 ops/s
Iteration  15: 380042.348 ops/s
Iteration  16: 380105.619 ops/s
Iteration  17: 391684.896 ops/s
Iteration  18: 372228.033 ops/s
Iteration  19: 388056.165 ops/s
Iteration  20: 386303.511 ops/s
Iteration  21: 370150.549 ops/s
Iteration  22: 383894.773 ops/s
Iteration  23: 372538.655 ops/s
Iteration  24: 382245.406 ops/s
Iteration  25: 375562.534 ops/s
Iteration  26: 378934.740 ops/s
Iteration  27: 395805.910 ops/s
Iteration  28: 379972.770 ops/s
Iteration  29: 364868.255 ops/s
Iteration  30: 390862.175 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_788._Benchmark.benchmark_Cluster_788":
  376137.627 ±(99.9%) 13604.976 ops/s [Average]
  (min, avg, max) = (279052.989, 376137.627, 397323.705), stdev = 20363.289
  CI (99.9%): [362532.651, 389742.603] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score       Error  Units
Cluster_788._Benchmark.benchmark_Cluster_788  thrpt   30  376137.627 ± 13604.976  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_789._Benchmark.benchmark_Cluster_789$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_789._Benchmark.benchmark_Cluster_789

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3041.759 ops/s
# Warmup Iteration   2: 35199.636 ops/s
# Warmup Iteration   3: 80977.462 ops/s
# Warmup Iteration   4: 107345.646 ops/s
# Warmup Iteration   5: 116087.585 ops/s
# Warmup Iteration   6: 110247.724 ops/s
# Warmup Iteration   7: 109730.586 ops/s
# Warmup Iteration   8: 113883.599 ops/s
# Warmup Iteration   9: 111966.062 ops/s
# Warmup Iteration  10: 113140.446 ops/s
# Warmup Iteration  11: 116443.620 ops/s
# Warmup Iteration  12: 109702.512 ops/s
# Warmup Iteration  13: 113272.218 ops/s
# Warmup Iteration  14: 112046.749 ops/s
# Warmup Iteration  15: 117363.115 ops/s
# Warmup Iteration  16: 112267.241 ops/s
# Warmup Iteration  17: 116403.638 ops/s
# Warmup Iteration  18: 116706.414 ops/s
# Warmup Iteration  19: 118510.306 ops/s
# Warmup Iteration  20: 115919.217 ops/s
# Warmup Iteration  21: 113420.325 ops/s
# Warmup Iteration  22: 123425.080 ops/s
# Warmup Iteration  23: 121800.099 ops/s
# Warmup Iteration  24: 114698.289 ops/s
# Warmup Iteration  25: 120213.555 ops/s
# Warmup Iteration  26: 119127.707 ops/s
# Warmup Iteration  27: 119816.711 ops/s
# Warmup Iteration  28: 115950.422 ops/s
# Warmup Iteration  29: 120060.590 ops/s
# Warmup Iteration  30: 119574.412 ops/s
Iteration   1: 116444.229 ops/s
Iteration   2: 119677.985 ops/s
Iteration   3: 117176.348 ops/s
Iteration   4: 118524.824 ops/s
Iteration   5: 117388.227 ops/s
Iteration   6: 117921.528 ops/s
Iteration   7: 116083.468 ops/s
Iteration   8: 122627.768 ops/s
Iteration   9: 116732.395 ops/s
Iteration  10: 121702.452 ops/s
Iteration  11: 113610.846 ops/s
Iteration  12: 119156.289 ops/s
Iteration  13: 118328.838 ops/s
Iteration  14: 117831.230 ops/s
Iteration  15: 115956.637 ops/s
Iteration  16: 100628.591 ops/s
Iteration  17: 116132.356 ops/s
Iteration  18: 118388.418 ops/s
Iteration  19: 116425.295 ops/s
Iteration  20: 121645.914 ops/s
Iteration  21: 116782.358 ops/s
Iteration  22: 119038.267 ops/s
Iteration  23: 122517.174 ops/s
Iteration  24: 116591.529 ops/s
Iteration  25: 118533.566 ops/s
Iteration  26: 120760.308 ops/s
Iteration  27: 119220.654 ops/s
Iteration  28: 117262.858 ops/s
Iteration  29: 114849.470 ops/s
Iteration  30: 117707.977 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_789._Benchmark.benchmark_Cluster_789":
  117521.593 ±(99.9%) 2575.956 ops/s [Average]
  (min, avg, max) = (100628.591, 117521.593, 122627.768), stdev = 3855.569
  CI (99.9%): [114945.638, 120097.549] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_789._Benchmark.benchmark_Cluster_789  thrpt   30  117521.593 ± 2575.956  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_79._Benchmark.benchmark_Cluster_79$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_79._Benchmark.benchmark_Cluster_79

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5515.357 ops/s
# Warmup Iteration   2: 19311.627 ops/s
# Warmup Iteration   3: 34215.682 ops/s
# Warmup Iteration   4: 45759.049 ops/s
# Warmup Iteration   5: 30118.678 ops/s
# Warmup Iteration   6: 51503.342 ops/s
# Warmup Iteration   7: 55577.311 ops/s
# Warmup Iteration   8: 65388.711 ops/s
# Warmup Iteration   9: 68651.354 ops/s
# Warmup Iteration  10: 64775.364 ops/s
# Warmup Iteration  11: 65451.636 ops/s
# Warmup Iteration  12: 68875.321 ops/s
# Warmup Iteration  13: 64991.062 ops/s
# Warmup Iteration  14: 67474.229 ops/s
# Warmup Iteration  15: 64870.963 ops/s
# Warmup Iteration  16: 64423.264 ops/s
# Warmup Iteration  17: 69800.703 ops/s
# Warmup Iteration  18: 69388.287 ops/s
# Warmup Iteration  19: 71032.765 ops/s
# Warmup Iteration  20: 70565.240 ops/s
# Warmup Iteration  21: 70633.537 ops/s
# Warmup Iteration  22: 66541.401 ops/s
# Warmup Iteration  23: 71715.369 ops/s
# Warmup Iteration  24: 67649.958 ops/s
# Warmup Iteration  25: 68616.411 ops/s
# Warmup Iteration  26: 70348.588 ops/s
# Warmup Iteration  27: 66558.312 ops/s
# Warmup Iteration  28: 70231.708 ops/s
# Warmup Iteration  29: 69696.968 ops/s
# Warmup Iteration  30: 66681.781 ops/s
Iteration   1: 71153.350 ops/s
Iteration   2: 69552.094 ops/s
Iteration   3: 69283.928 ops/s
Iteration   4: 68605.181 ops/s
Iteration   5: 68740.852 ops/s
Iteration   6: 71053.352 ops/s
Iteration   7: 67988.797 ops/s
Iteration   8: 70194.727 ops/s
Iteration   9: 69526.695 ops/s
Iteration  10: 71543.953 ops/s
Iteration  11: 70412.187 ops/s
Iteration  12: 67981.828 ops/s
Iteration  13: 71547.673 ops/s
Iteration  14: 67687.984 ops/s
Iteration  15: 68460.509 ops/s
Iteration  16: 69292.131 ops/s
Iteration  17: 68466.265 ops/s
Iteration  18: 69203.433 ops/s
Iteration  19: 70669.427 ops/s
Iteration  20: 71163.033 ops/s
Iteration  21: 67601.822 ops/s
Iteration  22: 67090.998 ops/s
Iteration  23: 70023.363 ops/s
Iteration  24: 68847.452 ops/s
Iteration  25: 71476.557 ops/s
Iteration  26: 67170.789 ops/s
Iteration  27: 69744.443 ops/s
Iteration  28: 69471.457 ops/s
Iteration  29: 70677.629 ops/s
Iteration  30: 68209.629 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_79._Benchmark.benchmark_Cluster_79":
  69428.051 ±(99.9%) 902.697 ops/s [Average]
  (min, avg, max) = (67090.998, 69428.051, 71547.673), stdev = 1351.114
  CI (99.9%): [68525.354, 70330.748] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score     Error  Units
Cluster_79._Benchmark.benchmark_Cluster_79  thrpt   30  69428.051 ± 902.697  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_790._Benchmark.benchmark_Cluster_790$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_790._Benchmark.benchmark_Cluster_790

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1584.319 ops/s
# Warmup Iteration   2: 32743.161 ops/s
# Warmup Iteration   3: 64542.309 ops/s
# Warmup Iteration   4: 91059.668 ops/s
# Warmup Iteration   5: 100657.622 ops/s
# Warmup Iteration   6: 99627.573 ops/s
# Warmup Iteration   7: 106558.475 ops/s
# Warmup Iteration   8: 113299.987 ops/s
# Warmup Iteration   9: 108043.511 ops/s
# Warmup Iteration  10: 109237.847 ops/s
# Warmup Iteration  11: 109868.795 ops/s
# Warmup Iteration  12: 108274.332 ops/s
# Warmup Iteration  13: 106044.565 ops/s
# Warmup Iteration  14: 113808.737 ops/s
# Warmup Iteration  15: 107097.145 ops/s
# Warmup Iteration  16: 111456.010 ops/s
# Warmup Iteration  17: 106271.760 ops/s
# Warmup Iteration  18: 108128.188 ops/s
# Warmup Iteration  19: 112317.906 ops/s
# Warmup Iteration  20: 106934.096 ops/s
# Warmup Iteration  21: 112335.497 ops/s
# Warmup Iteration  22: 105586.389 ops/s
# Warmup Iteration  23: 110013.410 ops/s
# Warmup Iteration  24: 109454.721 ops/s
# Warmup Iteration  25: 111706.674 ops/s
# Warmup Iteration  26: 110657.820 ops/s
# Warmup Iteration  27: 108389.644 ops/s
# Warmup Iteration  28: 112479.531 ops/s
# Warmup Iteration  29: 108552.479 ops/s
# Warmup Iteration  30: 89067.849 ops/s
Iteration   1: 113064.672 ops/s
Iteration   2: 108328.304 ops/s
Iteration   3: 114570.800 ops/s
Iteration   4: 107222.014 ops/s
Iteration   5: 109795.674 ops/s
Iteration   6: 109592.936 ops/s
Iteration   7: 106885.258 ops/s
Iteration   8: 115206.888 ops/s
Iteration   9: 107850.172 ops/s
Iteration  10: 113971.059 ops/s
Iteration  11: 106784.661 ops/s
Iteration  12: 113189.270 ops/s
Iteration  13: 107909.332 ops/s
Iteration  14: 107770.867 ops/s
Iteration  15: 113347.068 ops/s
Iteration  16: 111792.696 ops/s
Iteration  17: 103856.135 ops/s
Iteration  18: 115155.384 ops/s
Iteration  19: 107045.598 ops/s
Iteration  20: 109124.601 ops/s
Iteration  21: 112398.689 ops/s
Iteration  22: 109133.913 ops/s
Iteration  23: 112011.843 ops/s
Iteration  24: 106433.720 ops/s
Iteration  25: 111752.752 ops/s
Iteration  26: 106651.412 ops/s
Iteration  27: 108703.888 ops/s
Iteration  28: 111725.427 ops/s
Iteration  29: 111648.462 ops/s
Iteration  30: 106654.813 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_790._Benchmark.benchmark_Cluster_790":
  109985.944 ±(99.9%) 2047.674 ops/s [Average]
  (min, avg, max) = (103856.135, 109985.944, 115206.888), stdev = 3064.862
  CI (99.9%): [107938.270, 112033.617] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_790._Benchmark.benchmark_Cluster_790  thrpt   30  109985.944 ± 2047.674  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_791._Benchmark.benchmark_Cluster_791$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_791._Benchmark.benchmark_Cluster_791

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6802.397 ops/s
# Warmup Iteration   2: 33398.491 ops/s
# Warmup Iteration   3: 40972.734 ops/s
# Warmup Iteration   4: 45812.018 ops/s
# Warmup Iteration   5: 43805.452 ops/s
# Warmup Iteration   6: 91142.624 ops/s
# Warmup Iteration   7: 113570.141 ops/s
# Warmup Iteration   8: 100075.961 ops/s
# Warmup Iteration   9: 116624.039 ops/s
# Warmup Iteration  10: 109085.131 ops/s
# Warmup Iteration  11: 111677.057 ops/s
# Warmup Iteration  12: 114881.313 ops/s
# Warmup Iteration  13: 111651.410 ops/s
# Warmup Iteration  14: 115539.829 ops/s
# Warmup Iteration  15: 111280.060 ops/s
# Warmup Iteration  16: 111425.937 ops/s
# Warmup Iteration  17: 119328.310 ops/s
# Warmup Iteration  18: 116762.463 ops/s
# Warmup Iteration  19: 114750.994 ops/s
# Warmup Iteration  20: 117821.031 ops/s
# Warmup Iteration  21: 122047.493 ops/s
# Warmup Iteration  22: 113163.796 ops/s
# Warmup Iteration  23: 120887.426 ops/s
# Warmup Iteration  24: 116520.556 ops/s
# Warmup Iteration  25: 114558.611 ops/s
# Warmup Iteration  26: 121902.275 ops/s
# Warmup Iteration  27: 120451.975 ops/s
# Warmup Iteration  28: 114012.625 ops/s
# Warmup Iteration  29: 119908.121 ops/s
# Warmup Iteration  30: 118103.963 ops/s
Iteration   1: 115758.255 ops/s
Iteration   2: 121699.621 ops/s
Iteration   3: 114950.202 ops/s
Iteration   4: 121129.277 ops/s
Iteration   5: 112165.752 ops/s
Iteration   6: 121418.219 ops/s
Iteration   7: 117761.389 ops/s
Iteration   8: 116048.075 ops/s
Iteration   9: 120209.042 ops/s
Iteration  10: 114143.582 ops/s
Iteration  11: 120966.162 ops/s
Iteration  12: 114163.572 ops/s
Iteration  13: 119621.717 ops/s
Iteration  14: 116544.226 ops/s
Iteration  15: 114253.903 ops/s
Iteration  16: 118689.815 ops/s
Iteration  17: 114758.793 ops/s
Iteration  18: 117218.568 ops/s
Iteration  19: 112458.496 ops/s
Iteration  20: 113816.688 ops/s
Iteration  21: 119871.978 ops/s
Iteration  22: 112139.219 ops/s
Iteration  23: 118803.196 ops/s
Iteration  24: 117846.325 ops/s
Iteration  25: 120747.107 ops/s
Iteration  26: 113735.582 ops/s
Iteration  27: 117345.893 ops/s
Iteration  28: 119349.752 ops/s
Iteration  29: 119814.261 ops/s
Iteration  30: 112549.332 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_791._Benchmark.benchmark_Cluster_791":
  116999.267 ±(99.9%) 2071.215 ops/s [Average]
  (min, avg, max) = (112139.219, 116999.267, 121699.621), stdev = 3100.097
  CI (99.9%): [114928.052, 119070.481] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_791._Benchmark.benchmark_Cluster_791  thrpt   30  116999.267 ± 2071.215  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_792._Benchmark.benchmark_Cluster_792$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_792._Benchmark.benchmark_Cluster_792

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3675.107 ops/s
# Warmup Iteration   2: 28033.798 ops/s
# Warmup Iteration   3: 50871.844 ops/s
# Warmup Iteration   4: 92006.080 ops/s
# Warmup Iteration   5: 108458.404 ops/s
# Warmup Iteration   6: 109573.865 ops/s
# Warmup Iteration   7: 103987.486 ops/s
# Warmup Iteration   8: 110363.770 ops/s
# Warmup Iteration   9: 110653.884 ops/s
# Warmup Iteration  10: 105132.599 ops/s
# Warmup Iteration  11: 106216.793 ops/s
# Warmup Iteration  12: 109292.954 ops/s
# Warmup Iteration  13: 108045.649 ops/s
# Warmup Iteration  14: 109475.699 ops/s
# Warmup Iteration  15: 104308.135 ops/s
# Warmup Iteration  16: 104274.651 ops/s
# Warmup Iteration  17: 111596.230 ops/s
# Warmup Iteration  18: 114898.653 ops/s
# Warmup Iteration  19: 112700.190 ops/s
# Warmup Iteration  20: 111691.501 ops/s
# Warmup Iteration  21: 115804.139 ops/s
# Warmup Iteration  22: 111702.352 ops/s
# Warmup Iteration  23: 109908.720 ops/s
# Warmup Iteration  24: 105322.020 ops/s
# Warmup Iteration  25: 100414.145 ops/s
# Warmup Iteration  26: 110178.952 ops/s
# Warmup Iteration  27: 112998.458 ops/s
# Warmup Iteration  28: 112811.064 ops/s
# Warmup Iteration  29: 105222.350 ops/s
# Warmup Iteration  30: 114715.636 ops/s
Iteration   1: 115955.584 ops/s
Iteration   2: 107717.693 ops/s
Iteration   3: 114324.719 ops/s
Iteration   4: 110057.056 ops/s
Iteration   5: 115338.797 ops/s
Iteration   6: 115913.062 ops/s
Iteration   7: 108391.472 ops/s
Iteration   8: 119261.696 ops/s
Iteration   9: 117223.159 ops/s
Iteration  10: 109682.720 ops/s
Iteration  11: 113324.697 ops/s
Iteration  12: 112656.196 ops/s
Iteration  13: 115769.301 ops/s
Iteration  14: 112276.390 ops/s
Iteration  15: 113244.012 ops/s
Iteration  16: 116694.570 ops/s
Iteration  17: 112305.283 ops/s
Iteration  18: 117028.260 ops/s
Iteration  19: 110943.781 ops/s
Iteration  20: 113844.176 ops/s
Iteration  21: 112679.123 ops/s
Iteration  22: 113428.728 ops/s
Iteration  23: 116360.729 ops/s
Iteration  24: 110390.986 ops/s
Iteration  25: 114805.312 ops/s
Iteration  26: 111844.154 ops/s
Iteration  27: 115181.901 ops/s
Iteration  28: 112930.201 ops/s
Iteration  29: 112036.328 ops/s
Iteration  30: 116524.742 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_792._Benchmark.benchmark_Cluster_792":
  113604.494 ±(99.9%) 1857.718 ops/s [Average]
  (min, avg, max) = (107717.693, 113604.494, 119261.696), stdev = 2780.545
  CI (99.9%): [111746.776, 115462.213] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_792._Benchmark.benchmark_Cluster_792  thrpt   30  113604.494 ± 1857.718  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_793._Benchmark.benchmark_Cluster_793$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_793._Benchmark.benchmark_Cluster_793

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7624.538 ops/s
# Warmup Iteration   2: 33156.090 ops/s
# Warmup Iteration   3: 78148.348 ops/s
# Warmup Iteration   4: 100241.438 ops/s
# Warmup Iteration   5: 105441.363 ops/s
# Warmup Iteration   6: 100474.372 ops/s
# Warmup Iteration   7: 101060.641 ops/s
# Warmup Iteration   8: 105533.896 ops/s
# Warmup Iteration   9: 101044.601 ops/s
# Warmup Iteration  10: 102114.142 ops/s
# Warmup Iteration  11: 101239.302 ops/s
# Warmup Iteration  12: 101384.540 ops/s
# Warmup Iteration  13: 103581.301 ops/s
# Warmup Iteration  14: 102300.089 ops/s
# Warmup Iteration  15: 104331.787 ops/s
# Warmup Iteration  16: 108912.654 ops/s
# Warmup Iteration  17: 113321.183 ops/s
# Warmup Iteration  18: 109834.858 ops/s
# Warmup Iteration  19: 106586.935 ops/s
# Warmup Iteration  20: 111480.428 ops/s
# Warmup Iteration  21: 113830.154 ops/s
# Warmup Iteration  22: 107403.984 ops/s
# Warmup Iteration  23: 115676.787 ops/s
# Warmup Iteration  24: 104581.057 ops/s
# Warmup Iteration  25: 107971.789 ops/s
# Warmup Iteration  26: 102825.881 ops/s
# Warmup Iteration  27: 110189.303 ops/s
# Warmup Iteration  28: 107925.398 ops/s
# Warmup Iteration  29: 114398.547 ops/s
# Warmup Iteration  30: 109644.095 ops/s
Iteration   1: 121662.095 ops/s
Iteration   2: 108265.193 ops/s
Iteration   3: 107634.496 ops/s
Iteration   4: 111640.133 ops/s
Iteration   5: 106703.846 ops/s
Iteration   6: 112946.299 ops/s
Iteration   7: 110102.894 ops/s
Iteration   8: 107889.117 ops/s
Iteration   9: 110470.716 ops/s
Iteration  10: 109778.260 ops/s
Iteration  11: 110944.654 ops/s
Iteration  12: 107651.338 ops/s
Iteration  13: 108987.979 ops/s
Iteration  14: 109521.410 ops/s
Iteration  15: 107733.112 ops/s
Iteration  16: 110795.791 ops/s
Iteration  17: 107864.513 ops/s
Iteration  18: 111941.098 ops/s
Iteration  19: 106819.488 ops/s
Iteration  20: 106931.551 ops/s
Iteration  21: 110103.988 ops/s
Iteration  22: 104469.760 ops/s
Iteration  23: 112129.965 ops/s
Iteration  24: 109234.036 ops/s
Iteration  25: 111252.610 ops/s
Iteration  26: 110443.122 ops/s
Iteration  27: 109563.314 ops/s
Iteration  28: 110236.814 ops/s
Iteration  29: 106205.691 ops/s
Iteration  30: 107495.025 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_793._Benchmark.benchmark_Cluster_793":
  109580.610 ±(99.9%) 2023.447 ops/s [Average]
  (min, avg, max) = (104469.760, 109580.610, 121662.095), stdev = 3028.601
  CI (99.9%): [107557.163, 111604.057] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_793._Benchmark.benchmark_Cluster_793  thrpt   30  109580.610 ± 2023.447  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_794._Benchmark.benchmark_Cluster_794$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_794._Benchmark.benchmark_Cluster_794

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2379.092 ops/s
# Warmup Iteration   2: 18059.636 ops/s
# Warmup Iteration   3: 24916.414 ops/s
# Warmup Iteration   4: 21868.731 ops/s
# Warmup Iteration   5: 25238.833 ops/s
# Warmup Iteration   6: 26515.601 ops/s
# Warmup Iteration   7: 18292.786 ops/s
# Warmup Iteration   8: 27158.751 ops/s
# Warmup Iteration   9: 66657.481 ops/s
# Warmup Iteration  10: 72745.752 ops/s
# Warmup Iteration  11: 73613.291 ops/s
# Warmup Iteration  12: 68035.972 ops/s
# Warmup Iteration  13: 71873.675 ops/s
# Warmup Iteration  14: 68888.519 ops/s
# Warmup Iteration  15: 75892.994 ops/s
# Warmup Iteration  16: 72606.531 ops/s
# Warmup Iteration  17: 80086.487 ops/s
# Warmup Iteration  18: 74289.426 ops/s
# Warmup Iteration  19: 65520.470 ops/s
# Warmup Iteration  20: 76337.032 ops/s
# Warmup Iteration  21: 74052.495 ops/s
# Warmup Iteration  22: 78602.981 ops/s
# Warmup Iteration  23: 77214.631 ops/s
# Warmup Iteration  24: 74202.958 ops/s
# Warmup Iteration  25: 77227.339 ops/s
# Warmup Iteration  26: 77490.068 ops/s
# Warmup Iteration  27: 77358.559 ops/s
# Warmup Iteration  28: 77843.860 ops/s
# Warmup Iteration  29: 75377.367 ops/s
# Warmup Iteration  30: 78438.030 ops/s
Iteration   1: 73643.141 ops/s
Iteration   2: 72607.870 ops/s
Iteration   3: 78916.013 ops/s
Iteration   4: 72551.690 ops/s
Iteration   5: 75804.937 ops/s
Iteration   6: 73403.451 ops/s
Iteration   7: 76428.824 ops/s
Iteration   8: 77141.485 ops/s
Iteration   9: 73576.244 ops/s
Iteration  10: 79323.001 ops/s
Iteration  11: 73081.563 ops/s
Iteration  12: 76098.586 ops/s
Iteration  13: 77834.392 ops/s
Iteration  14: 74337.119 ops/s
Iteration  15: 74263.364 ops/s
Iteration  16: 78943.948 ops/s
Iteration  17: 75364.861 ops/s
Iteration  18: 80009.962 ops/s
Iteration  19: 74158.511 ops/s
Iteration  20: 73538.415 ops/s
Iteration  21: 78605.081 ops/s
Iteration  22: 74847.131 ops/s
Iteration  23: 80277.750 ops/s
Iteration  24: 73971.734 ops/s
Iteration  25: 75565.883 ops/s
Iteration  26: 79116.113 ops/s
Iteration  27: 75718.900 ops/s
Iteration  28: 75056.010 ops/s
Iteration  29: 78014.161 ops/s
Iteration  30: 76520.108 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_794._Benchmark.benchmark_Cluster_794":
  75957.342 ±(99.9%) 1572.173 ops/s [Average]
  (min, avg, max) = (72551.690, 75957.342, 80277.750), stdev = 2353.155
  CI (99.9%): [74385.168, 77529.515] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_794._Benchmark.benchmark_Cluster_794  thrpt   30  75957.342 ± 1572.173  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_795._Benchmark.benchmark_Cluster_795$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_795._Benchmark.benchmark_Cluster_795

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1238.981 ops/s
# Warmup Iteration   2: 19270.238 ops/s
# Warmup Iteration   3: 32655.396 ops/s
# Warmup Iteration   4: 29051.071 ops/s
# Warmup Iteration   5: 44252.386 ops/s
# Warmup Iteration   6: 79458.285 ops/s
# Warmup Iteration   7: 80340.776 ops/s
# Warmup Iteration   8: 75189.619 ops/s
# Warmup Iteration   9: 88594.301 ops/s
# Warmup Iteration  10: 81927.215 ops/s
# Warmup Iteration  11: 87626.069 ops/s
# Warmup Iteration  12: 86415.225 ops/s
# Warmup Iteration  13: 89160.778 ops/s
# Warmup Iteration  14: 86629.019 ops/s
# Warmup Iteration  15: 89704.711 ops/s
# Warmup Iteration  16: 83001.782 ops/s
# Warmup Iteration  17: 87528.530 ops/s
# Warmup Iteration  18: 91875.793 ops/s
# Warmup Iteration  19: 86018.558 ops/s
# Warmup Iteration  20: 88109.888 ops/s
# Warmup Iteration  21: 86146.031 ops/s
# Warmup Iteration  22: 88790.143 ops/s
# Warmup Iteration  23: 86343.015 ops/s
# Warmup Iteration  24: 87319.937 ops/s
# Warmup Iteration  25: 90923.739 ops/s
# Warmup Iteration  26: 84403.205 ops/s
# Warmup Iteration  27: 90834.058 ops/s
# Warmup Iteration  28: 85241.589 ops/s
# Warmup Iteration  29: 87557.314 ops/s
# Warmup Iteration  30: 89885.712 ops/s
Iteration   1: 86140.690 ops/s
Iteration   2: 90542.739 ops/s
Iteration   3: 86614.671 ops/s
Iteration   4: 85486.855 ops/s
Iteration   5: 90244.980 ops/s
Iteration   6: 85980.453 ops/s
Iteration   7: 87932.524 ops/s
Iteration   8: 87363.720 ops/s
Iteration   9: 88216.576 ops/s
Iteration  10: 87545.678 ops/s
Iteration  11: 85775.227 ops/s
Iteration  12: 90047.791 ops/s
Iteration  13: 87447.324 ops/s
Iteration  14: 87031.550 ops/s
Iteration  15: 88680.435 ops/s
Iteration  16: 86654.486 ops/s
Iteration  17: 87255.063 ops/s
Iteration  18: 86743.772 ops/s
Iteration  19: 91109.656 ops/s
Iteration  20: 86400.634 ops/s
Iteration  21: 86202.388 ops/s
Iteration  22: 88745.388 ops/s
Iteration  23: 87461.529 ops/s
Iteration  24: 88676.616 ops/s
Iteration  25: 88126.323 ops/s
Iteration  26: 84945.627 ops/s
Iteration  27: 87842.034 ops/s
Iteration  28: 90868.161 ops/s
Iteration  29: 84702.096 ops/s
Iteration  30: 89609.961 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_795._Benchmark.benchmark_Cluster_795":
  87679.832 ±(99.9%) 1160.418 ops/s [Average]
  (min, avg, max) = (84702.096, 87679.832, 91109.656), stdev = 1736.859
  CI (99.9%): [86519.414, 88840.250] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_795._Benchmark.benchmark_Cluster_795  thrpt   30  87679.832 ± 1160.418  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_796._Benchmark.benchmark_Cluster_796$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_796._Benchmark.benchmark_Cluster_796

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2123.060 ops/s
# Warmup Iteration   2: 18528.724 ops/s
# Warmup Iteration   3: 24689.789 ops/s
# Warmup Iteration   4: 23435.182 ops/s
# Warmup Iteration   5: 37365.118 ops/s
# Warmup Iteration   6: 62562.024 ops/s
# Warmup Iteration   7: 90850.972 ops/s
# Warmup Iteration   8: 92877.488 ops/s
# Warmup Iteration   9: 89007.497 ops/s
# Warmup Iteration  10: 91351.294 ops/s
# Warmup Iteration  11: 91008.019 ops/s
# Warmup Iteration  12: 90293.649 ops/s
# Warmup Iteration  13: 67926.727 ops/s
# Warmup Iteration  14: 86223.302 ops/s
# Warmup Iteration  15: 86616.546 ops/s
# Warmup Iteration  16: 94952.246 ops/s
# Warmup Iteration  17: 90527.786 ops/s
# Warmup Iteration  18: 91814.238 ops/s
# Warmup Iteration  19: 90102.448 ops/s
# Warmup Iteration  20: 95167.967 ops/s
# Warmup Iteration  21: 93022.307 ops/s
# Warmup Iteration  22: 93372.813 ops/s
# Warmup Iteration  23: 92641.076 ops/s
# Warmup Iteration  24: 89465.634 ops/s
# Warmup Iteration  25: 91034.435 ops/s
# Warmup Iteration  26: 96197.769 ops/s
# Warmup Iteration  27: 87318.010 ops/s
# Warmup Iteration  28: 94328.127 ops/s
# Warmup Iteration  29: 90761.140 ops/s
# Warmup Iteration  30: 94326.097 ops/s
Iteration   1: 93625.268 ops/s
Iteration   2: 90149.083 ops/s
Iteration   3: 90842.158 ops/s
Iteration   4: 95356.380 ops/s
Iteration   5: 89603.214 ops/s
Iteration   6: 93161.304 ops/s
Iteration   7: 91011.602 ops/s
Iteration   8: 90577.362 ops/s
Iteration   9: 94778.904 ops/s
Iteration  10: 90940.925 ops/s
Iteration  11: 95629.911 ops/s
Iteration  12: 89960.836 ops/s
Iteration  13: 94413.294 ops/s
Iteration  14: 94539.037 ops/s
Iteration  15: 90876.292 ops/s
Iteration  16: 91649.515 ops/s
Iteration  17: 91912.274 ops/s
Iteration  18: 94994.837 ops/s
Iteration  19: 90565.814 ops/s
Iteration  20: 93485.791 ops/s
Iteration  21: 90455.013 ops/s
Iteration  22: 91347.227 ops/s
Iteration  23: 91002.962 ops/s
Iteration  24: 94883.870 ops/s
Iteration  25: 94163.092 ops/s
Iteration  26: 90696.494 ops/s
Iteration  27: 94947.637 ops/s
Iteration  28: 92130.287 ops/s
Iteration  29: 93231.804 ops/s
Iteration  30: 90366.569 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_796._Benchmark.benchmark_Cluster_796":
  92376.625 ±(99.9%) 1295.167 ops/s [Average]
  (min, avg, max) = (89603.214, 92376.625, 95629.911), stdev = 1938.545
  CI (99.9%): [91081.458, 93671.792] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_796._Benchmark.benchmark_Cluster_796  thrpt   30  92376.625 ± 1295.167  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_797._Benchmark.benchmark_Cluster_797$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_797._Benchmark.benchmark_Cluster_797

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7289.282 ops/s
# Warmup Iteration   2: 29036.001 ops/s
# Warmup Iteration   3: 42783.661 ops/s
# Warmup Iteration   4: 91011.470 ops/s
# Warmup Iteration   5: 98453.186 ops/s
# Warmup Iteration   6: 93346.215 ops/s
# Warmup Iteration   7: 113139.786 ops/s
# Warmup Iteration   8: 105126.860 ops/s
# Warmup Iteration   9: 112844.809 ops/s
# Warmup Iteration  10: 108693.369 ops/s
# Warmup Iteration  11: 108088.565 ops/s
# Warmup Iteration  12: 114509.875 ops/s
# Warmup Iteration  13: 107082.717 ops/s
# Warmup Iteration  14: 112015.269 ops/s
# Warmup Iteration  15: 109182.394 ops/s
# Warmup Iteration  16: 109209.640 ops/s
# Warmup Iteration  17: 116230.375 ops/s
# Warmup Iteration  18: 110722.513 ops/s
# Warmup Iteration  19: 117160.856 ops/s
# Warmup Iteration  20: 113663.484 ops/s
# Warmup Iteration  21: 111912.696 ops/s
# Warmup Iteration  22: 114486.359 ops/s
# Warmup Iteration  23: 109791.904 ops/s
# Warmup Iteration  24: 115650.893 ops/s
# Warmup Iteration  25: 111667.177 ops/s
# Warmup Iteration  26: 111397.317 ops/s
# Warmup Iteration  27: 113051.872 ops/s
# Warmup Iteration  28: 115140.309 ops/s
# Warmup Iteration  29: 111534.230 ops/s
# Warmup Iteration  30: 112229.049 ops/s
Iteration   1: 110982.948 ops/s
Iteration   2: 94234.853 ops/s
Iteration   3: 108803.952 ops/s
Iteration   4: 110772.407 ops/s
Iteration   5: 114137.356 ops/s
Iteration   6: 109752.202 ops/s
Iteration   7: 113792.998 ops/s
Iteration   8: 115308.490 ops/s
Iteration   9: 110790.980 ops/s
Iteration  10: 118790.235 ops/s
Iteration  11: 115864.985 ops/s
Iteration  12: 108585.954 ops/s
Iteration  13: 114055.087 ops/s
Iteration  14: 117627.020 ops/s
Iteration  15: 114240.791 ops/s
Iteration  16: 108802.943 ops/s
Iteration  17: 113275.487 ops/s
Iteration  18: 109521.521 ops/s
Iteration  19: 117277.689 ops/s
Iteration  20: 110855.833 ops/s
Iteration  21: 116355.536 ops/s
Iteration  22: 113456.798 ops/s
Iteration  23: 112100.233 ops/s
Iteration  24: 114987.104 ops/s
Iteration  25: 108661.341 ops/s
Iteration  26: 116434.857 ops/s
Iteration  27: 110389.784 ops/s
Iteration  28: 115378.335 ops/s
Iteration  29: 112851.301 ops/s
Iteration  30: 113075.903 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_797._Benchmark.benchmark_Cluster_797":
  112372.164 ±(99.9%) 3005.706 ops/s [Average]
  (min, avg, max) = (94234.853, 112372.164, 118790.235), stdev = 4498.799
  CI (99.9%): [109366.459, 115377.870] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_797._Benchmark.benchmark_Cluster_797  thrpt   30  112372.164 ± 3005.706  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_798._Benchmark.benchmark_Cluster_798$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_798._Benchmark.benchmark_Cluster_798

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2666.879 ops/s
# Warmup Iteration   2: 40509.759 ops/s
# Warmup Iteration   3: 71645.708 ops/s
# Warmup Iteration   4: 125773.460 ops/s
# Warmup Iteration   5: 144610.776 ops/s
# Warmup Iteration   6: 134930.239 ops/s
# Warmup Iteration   7: 141293.753 ops/s
# Warmup Iteration   8: 140056.430 ops/s
# Warmup Iteration   9: 136361.023 ops/s
# Warmup Iteration  10: 145990.828 ops/s
# Warmup Iteration  11: 143219.634 ops/s
# Warmup Iteration  12: 135928.297 ops/s
# Warmup Iteration  13: 145867.956 ops/s
# Warmup Iteration  14: 134146.473 ops/s
# Warmup Iteration  15: 140546.688 ops/s
# Warmup Iteration  16: 135229.802 ops/s
# Warmup Iteration  17: 149778.216 ops/s
# Warmup Iteration  18: 148270.471 ops/s
# Warmup Iteration  19: 147007.671 ops/s
# Warmup Iteration  20: 147471.891 ops/s
# Warmup Iteration  21: 144633.568 ops/s
# Warmup Iteration  22: 144796.907 ops/s
# Warmup Iteration  23: 150239.812 ops/s
# Warmup Iteration  24: 139882.597 ops/s
# Warmup Iteration  25: 141420.656 ops/s
# Warmup Iteration  26: 151479.436 ops/s
# Warmup Iteration  27: 144435.650 ops/s
# Warmup Iteration  28: 137134.634 ops/s
# Warmup Iteration  29: 148623.465 ops/s
# Warmup Iteration  30: 149230.154 ops/s
Iteration   1: 139653.012 ops/s
Iteration   2: 143674.253 ops/s
Iteration   3: 146077.979 ops/s
Iteration   4: 144429.856 ops/s
Iteration   5: 141670.295 ops/s
Iteration   6: 150782.289 ops/s
Iteration   7: 151269.085 ops/s
Iteration   8: 143494.339 ops/s
Iteration   9: 150781.825 ops/s
Iteration  10: 140301.747 ops/s
Iteration  11: 148007.405 ops/s
Iteration  12: 153309.157 ops/s
Iteration  13: 141024.388 ops/s
Iteration  14: 146194.240 ops/s
Iteration  15: 143735.672 ops/s
Iteration  16: 145062.750 ops/s
Iteration  17: 147767.044 ops/s
Iteration  18: 143679.747 ops/s
Iteration  19: 149940.176 ops/s
Iteration  20: 138328.269 ops/s
Iteration  21: 147370.317 ops/s
Iteration  22: 150436.289 ops/s
Iteration  23: 143084.941 ops/s
Iteration  24: 149845.970 ops/s
Iteration  25: 142132.459 ops/s
Iteration  26: 150431.830 ops/s
Iteration  27: 144184.965 ops/s
Iteration  28: 150026.646 ops/s
Iteration  29: 145394.994 ops/s
Iteration  30: 138434.682 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_798._Benchmark.benchmark_Cluster_798":
  145684.221 ±(99.9%) 2784.882 ops/s [Average]
  (min, avg, max) = (138328.269, 145684.221, 153309.157), stdev = 4168.280
  CI (99.9%): [142899.339, 148469.102] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_798._Benchmark.benchmark_Cluster_798  thrpt   30  145684.221 ± 2784.882  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_799._Benchmark.benchmark_Cluster_799$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_799._Benchmark.benchmark_Cluster_799

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10290.849 ops/s
# Warmup Iteration   2: 25675.370 ops/s
# Warmup Iteration   3: 20672.468 ops/s
# Warmup Iteration   4: 26926.040 ops/s
# Warmup Iteration   5: 19882.319 ops/s
# Warmup Iteration   6: 19344.480 ops/s
# Warmup Iteration   7: 20959.447 ops/s
# Warmup Iteration   8: 19288.874 ops/s
# Warmup Iteration   9: 20369.936 ops/s
# Warmup Iteration  10: 20177.580 ops/s
# Warmup Iteration  11: 20533.395 ops/s
# Warmup Iteration  12: 20573.240 ops/s
# Warmup Iteration  13: 19933.154 ops/s
# Warmup Iteration  14: 20874.304 ops/s
# Warmup Iteration  15: 20854.825 ops/s
# Warmup Iteration  16: 20462.773 ops/s
# Warmup Iteration  17: 20283.689 ops/s
# Warmup Iteration  18: 20651.796 ops/s
# Warmup Iteration  19: 19950.293 ops/s
# Warmup Iteration  20: 20435.842 ops/s
# Warmup Iteration  21: 20367.306 ops/s
# Warmup Iteration  22: 20445.445 ops/s
# Warmup Iteration  23: 20636.359 ops/s
# Warmup Iteration  24: 21204.367 ops/s
# Warmup Iteration  25: 19919.045 ops/s
# Warmup Iteration  26: 20645.787 ops/s
# Warmup Iteration  27: 20619.920 ops/s
# Warmup Iteration  28: 19869.764 ops/s
# Warmup Iteration  29: 21205.269 ops/s
# Warmup Iteration  30: 20315.883 ops/s
Iteration   1: 20697.786 ops/s
Iteration   2: 20686.307 ops/s
Iteration   3: 20227.442 ops/s
Iteration   4: 20059.291 ops/s
Iteration   5: 20486.412 ops/s
Iteration   6: 20294.274 ops/s
Iteration   7: 20590.007 ops/s
Iteration   8: 20184.654 ops/s
Iteration   9: 20251.280 ops/s
Iteration  10: 20667.111 ops/s
Iteration  11: 19865.028 ops/s
Iteration  12: 20531.604 ops/s
Iteration  13: 19672.339 ops/s
Iteration  14: 20347.270 ops/s
Iteration  15: 19806.278 ops/s
Iteration  16: 20654.359 ops/s
Iteration  17: 20415.711 ops/s
Iteration  18: 20973.997 ops/s
Iteration  19: 20412.591 ops/s
Iteration  20: 19951.030 ops/s
Iteration  21: 20061.033 ops/s
Iteration  22: 20481.044 ops/s
Iteration  23: 19999.920 ops/s
Iteration  24: 20829.610 ops/s
Iteration  25: 20051.708 ops/s
Iteration  26: 20460.417 ops/s
Iteration  27: 20825.977 ops/s
Iteration  28: 20321.924 ops/s
Iteration  29: 22079.508 ops/s
Iteration  30: 19587.364 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_799._Benchmark.benchmark_Cluster_799":
  20382.443 ±(99.9%) 317.424 ops/s [Average]
  (min, avg, max) = (19587.364, 20382.443, 22079.508), stdev = 475.105
  CI (99.9%): [20065.019, 20699.866] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_799._Benchmark.benchmark_Cluster_799  thrpt   30  20382.443 ± 317.424  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_8._Benchmark.benchmark_Cluster_8$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_8._Benchmark.benchmark_Cluster_8

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5686.501 ops/s
# Warmup Iteration   2: 27789.948 ops/s
# Warmup Iteration   3: 33276.047 ops/s
# Warmup Iteration   4: 73940.863 ops/s
# Warmup Iteration   5: 94551.737 ops/s
# Warmup Iteration   6: 111699.518 ops/s
# Warmup Iteration   7: 111210.368 ops/s
# Warmup Iteration   8: 103684.647 ops/s
# Warmup Iteration   9: 110018.267 ops/s
# Warmup Iteration  10: 103700.993 ops/s
# Warmup Iteration  11: 98979.692 ops/s
# Warmup Iteration  12: 102979.989 ops/s
# Warmup Iteration  13: 107793.468 ops/s
# Warmup Iteration  14: 108986.184 ops/s
# Warmup Iteration  15: 104373.115 ops/s
# Warmup Iteration  16: 110069.242 ops/s
# Warmup Iteration  17: 108497.241 ops/s
# Warmup Iteration  18: 111952.747 ops/s
# Warmup Iteration  19: 114459.836 ops/s
# Warmup Iteration  20: 108621.592 ops/s
# Warmup Iteration  21: 113487.032 ops/s
# Warmup Iteration  22: 105659.468 ops/s
# Warmup Iteration  23: 109935.021 ops/s
# Warmup Iteration  24: 108174.196 ops/s
# Warmup Iteration  25: 110757.589 ops/s
# Warmup Iteration  26: 114783.576 ops/s
# Warmup Iteration  27: 108738.453 ops/s
# Warmup Iteration  28: 111459.633 ops/s
# Warmup Iteration  29: 110674.682 ops/s
# Warmup Iteration  30: 113553.874 ops/s
Iteration   1: 113113.433 ops/s
Iteration   2: 109637.949 ops/s
Iteration   3: 108283.583 ops/s
Iteration   4: 116344.917 ops/s
Iteration   5: 107060.189 ops/s
Iteration   6: 113129.370 ops/s
Iteration   7: 110694.019 ops/s
Iteration   8: 111716.287 ops/s
Iteration   9: 109402.865 ops/s
Iteration  10: 111316.151 ops/s
Iteration  11: 108013.403 ops/s
Iteration  12: 114136.283 ops/s
Iteration  13: 110215.178 ops/s
Iteration  14: 109450.519 ops/s
Iteration  15: 110315.012 ops/s
Iteration  16: 114580.393 ops/s
Iteration  17: 109737.600 ops/s
Iteration  18: 108990.849 ops/s
Iteration  19: 108204.602 ops/s
Iteration  20: 113643.631 ops/s
Iteration  21: 108640.704 ops/s
Iteration  22: 114340.231 ops/s
Iteration  23: 108925.604 ops/s
Iteration  24: 114310.160 ops/s
Iteration  25: 113468.269 ops/s
Iteration  26: 109213.165 ops/s
Iteration  27: 112098.998 ops/s
Iteration  28: 110162.590 ops/s
Iteration  29: 112716.442 ops/s
Iteration  30: 110035.785 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_8._Benchmark.benchmark_Cluster_8":
  111063.273 ±(99.9%) 1608.125 ops/s [Average]
  (min, avg, max) = (107060.189, 111063.273, 116344.917), stdev = 2406.965
  CI (99.9%): [109455.148, 112671.397] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score      Error  Units
Cluster_8._Benchmark.benchmark_Cluster_8  thrpt   30  111063.273 ± 1608.125  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_80._Benchmark.benchmark_Cluster_80$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_80._Benchmark.benchmark_Cluster_80

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8209.498 ops/s
# Warmup Iteration   2: 24394.760 ops/s
# Warmup Iteration   3: 69285.300 ops/s
# Warmup Iteration   4: 84592.871 ops/s
# Warmup Iteration   5: 95465.536 ops/s
# Warmup Iteration   6: 98586.963 ops/s
# Warmup Iteration   7: 105219.124 ops/s
# Warmup Iteration   8: 109438.856 ops/s
# Warmup Iteration   9: 104643.313 ops/s
# Warmup Iteration  10: 109333.276 ops/s
# Warmup Iteration  11: 102155.594 ops/s
# Warmup Iteration  12: 108782.446 ops/s
# Warmup Iteration  13: 111115.255 ops/s
# Warmup Iteration  14: 102278.777 ops/s
# Warmup Iteration  15: 106860.943 ops/s
# Warmup Iteration  16: 107312.944 ops/s
# Warmup Iteration  17: 107337.648 ops/s
# Warmup Iteration  18: 111686.724 ops/s
# Warmup Iteration  19: 109173.085 ops/s
# Warmup Iteration  20: 107941.069 ops/s
# Warmup Iteration  21: 114135.606 ops/s
# Warmup Iteration  22: 109517.618 ops/s
# Warmup Iteration  23: 104859.402 ops/s
# Warmup Iteration  24: 108832.149 ops/s
# Warmup Iteration  25: 109917.109 ops/s
# Warmup Iteration  26: 108451.172 ops/s
# Warmup Iteration  27: 111429.899 ops/s
# Warmup Iteration  28: 106898.990 ops/s
# Warmup Iteration  29: 107136.711 ops/s
# Warmup Iteration  30: 107114.964 ops/s
Iteration   1: 110813.053 ops/s
Iteration   2: 107489.742 ops/s
Iteration   3: 111321.916 ops/s
Iteration   4: 111013.627 ops/s
Iteration   5: 106506.122 ops/s
Iteration   6: 110980.617 ops/s
Iteration   7: 109232.539 ops/s
Iteration   8: 109971.179 ops/s
Iteration   9: 112908.943 ops/s
Iteration  10: 106917.378 ops/s
Iteration  11: 114974.436 ops/s
Iteration  12: 111507.469 ops/s
Iteration  13: 106803.900 ops/s
Iteration  14: 113360.483 ops/s
Iteration  15: 103726.539 ops/s
Iteration  16: 108927.643 ops/s
Iteration  17: 111269.708 ops/s
Iteration  18: 108397.553 ops/s
Iteration  19: 111689.062 ops/s
Iteration  20: 106385.422 ops/s
Iteration  21: 113153.558 ops/s
Iteration  22: 111486.865 ops/s
Iteration  23: 104453.811 ops/s
Iteration  24: 111378.987 ops/s
Iteration  25: 108837.724 ops/s
Iteration  26: 114604.253 ops/s
Iteration  27: 105963.309 ops/s
Iteration  28: 110767.797 ops/s
Iteration  29: 109882.029 ops/s
Iteration  30: 108288.564 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_80._Benchmark.benchmark_Cluster_80":
  109767.141 ±(99.9%) 1906.569 ops/s [Average]
  (min, avg, max) = (103726.539, 109767.141, 114974.436), stdev = 2853.663
  CI (99.9%): [107860.572, 111673.710] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_80._Benchmark.benchmark_Cluster_80  thrpt   30  109767.141 ± 1906.569  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_800._Benchmark.benchmark_Cluster_800$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_800._Benchmark.benchmark_Cluster_800

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1077.281 ops/s
# Warmup Iteration   2: 15034.302 ops/s
# Warmup Iteration   3: 16995.130 ops/s
# Warmup Iteration   4: 36494.294 ops/s
# Warmup Iteration   5: 30494.242 ops/s
# Warmup Iteration   6: 46245.397 ops/s
# Warmup Iteration   7: 42561.478 ops/s
# Warmup Iteration   8: 46689.239 ops/s
# Warmup Iteration   9: 44654.577 ops/s
# Warmup Iteration  10: 50026.975 ops/s
# Warmup Iteration  11: 53154.558 ops/s
# Warmup Iteration  12: 53367.773 ops/s
# Warmup Iteration  13: 51751.589 ops/s
# Warmup Iteration  14: 54602.850 ops/s
# Warmup Iteration  15: 57439.759 ops/s
# Warmup Iteration  16: 51885.450 ops/s
# Warmup Iteration  17: 54726.950 ops/s
# Warmup Iteration  18: 47700.456 ops/s
# Warmup Iteration  19: 48582.394 ops/s
# Warmup Iteration  20: 53501.171 ops/s
# Warmup Iteration  21: 54785.301 ops/s
# Warmup Iteration  22: 50864.054 ops/s
# Warmup Iteration  23: 51444.467 ops/s
# Warmup Iteration  24: 54831.972 ops/s
# Warmup Iteration  25: 47835.697 ops/s
# Warmup Iteration  26: 49344.004 ops/s
# Warmup Iteration  27: 55646.330 ops/s
# Warmup Iteration  28: 49543.752 ops/s
# Warmup Iteration  29: 52348.803 ops/s
# Warmup Iteration  30: 54752.181 ops/s
Iteration   1: 57174.626 ops/s
Iteration   2: 53279.420 ops/s
Iteration   3: 48650.660 ops/s
Iteration   4: 51622.594 ops/s
Iteration   5: 56706.276 ops/s
Iteration   6: 52870.077 ops/s
Iteration   7: 56207.486 ops/s
Iteration   8: 51205.012 ops/s
Iteration   9: 50313.075 ops/s
Iteration  10: 56035.373 ops/s
Iteration  11: 54878.718 ops/s
Iteration  12: 54861.544 ops/s
Iteration  13: 52013.349 ops/s
Iteration  14: 57508.405 ops/s
Iteration  15: 52543.162 ops/s
Iteration  16: 55874.340 ops/s
Iteration  17: 53589.937 ops/s
Iteration  18: 57658.167 ops/s
Iteration  19: 51724.998 ops/s
Iteration  20: 57632.320 ops/s
Iteration  21: 54395.491 ops/s
Iteration  22: 50626.903 ops/s
Iteration  23: 56456.165 ops/s
Iteration  24: 51743.680 ops/s
Iteration  25: 39805.853 ops/s
Iteration  26: 52275.945 ops/s
Iteration  27: 54975.954 ops/s
Iteration  28: 54364.903 ops/s
Iteration  29: 54450.346 ops/s
Iteration  30: 51688.315 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_800._Benchmark.benchmark_Cluster_800":
  53437.770 ±(99.9%) 2365.279 ops/s [Average]
  (min, avg, max) = (39805.853, 53437.770, 57658.167), stdev = 3540.239
  CI (99.9%): [51072.491, 55803.049] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_800._Benchmark.benchmark_Cluster_800  thrpt   30  53437.770 ± 2365.279  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_801._Benchmark.benchmark_Cluster_801$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_801._Benchmark.benchmark_Cluster_801

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1237.327 ops/s
# Warmup Iteration   2: 6860.741 ops/s
# Warmup Iteration   3: 23992.125 ops/s
# Warmup Iteration   4: 25147.632 ops/s
# Warmup Iteration   5: 24720.727 ops/s
# Warmup Iteration   6: 44643.849 ops/s
# Warmup Iteration   7: 35629.598 ops/s
# Warmup Iteration   8: 71170.832 ops/s
# Warmup Iteration   9: 79979.805 ops/s
# Warmup Iteration  10: 80555.213 ops/s
# Warmup Iteration  11: 77932.612 ops/s
# Warmup Iteration  12: 80416.160 ops/s
# Warmup Iteration  13: 81553.042 ops/s
# Warmup Iteration  14: 82020.981 ops/s
# Warmup Iteration  15: 79240.730 ops/s
# Warmup Iteration  16: 81878.453 ops/s
# Warmup Iteration  17: 84904.688 ops/s
# Warmup Iteration  18: 82690.974 ops/s
# Warmup Iteration  19: 87472.027 ops/s
# Warmup Iteration  20: 83605.601 ops/s
# Warmup Iteration  21: 80367.842 ops/s
# Warmup Iteration  22: 87782.075 ops/s
# Warmup Iteration  23: 80586.282 ops/s
# Warmup Iteration  24: 86573.037 ops/s
# Warmup Iteration  25: 84526.303 ops/s
# Warmup Iteration  26: 76510.527 ops/s
# Warmup Iteration  27: 84187.405 ops/s
# Warmup Iteration  28: 82865.882 ops/s
# Warmup Iteration  29: 82883.036 ops/s
# Warmup Iteration  30: 86308.869 ops/s
Iteration   1: 82807.010 ops/s
Iteration   2: 83122.443 ops/s
Iteration   3: 86310.461 ops/s
Iteration   4: 86002.026 ops/s
Iteration   5: 80628.424 ops/s
Iteration   6: 81912.505 ops/s
Iteration   7: 85788.630 ops/s
Iteration   8: 79422.268 ops/s
Iteration   9: 86699.478 ops/s
Iteration  10: 85378.307 ops/s
Iteration  11: 81871.808 ops/s
Iteration  12: 86583.743 ops/s
Iteration  13: 82482.860 ops/s
Iteration  14: 84124.174 ops/s
Iteration  15: 84524.842 ops/s
Iteration  16: 84809.285 ops/s
Iteration  17: 83280.388 ops/s
Iteration  18: 85466.629 ops/s
Iteration  19: 81939.180 ops/s
Iteration  20: 86760.372 ops/s
Iteration  21: 81684.093 ops/s
Iteration  22: 87138.547 ops/s
Iteration  23: 81475.986 ops/s
Iteration  24: 85685.068 ops/s
Iteration  25: 86349.390 ops/s
Iteration  26: 81516.712 ops/s
Iteration  27: 86142.074 ops/s
Iteration  28: 81750.913 ops/s
Iteration  29: 82311.303 ops/s
Iteration  30: 85025.275 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_801._Benchmark.benchmark_Cluster_801":
  83966.473 ±(99.9%) 1463.872 ops/s [Average]
  (min, avg, max) = (79422.268, 83966.473, 87138.547), stdev = 2191.055
  CI (99.9%): [82502.601, 85430.345] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_801._Benchmark.benchmark_Cluster_801  thrpt   30  83966.473 ± 1463.872  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_802._Benchmark.benchmark_Cluster_802$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_802._Benchmark.benchmark_Cluster_802

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14303.745 ops/s
# Warmup Iteration   2: 28165.575 ops/s
# Warmup Iteration   3: 37672.009 ops/s
# Warmup Iteration   4: 34256.980 ops/s
# Warmup Iteration   5: 51746.431 ops/s
# Warmup Iteration   6: 45389.408 ops/s
# Warmup Iteration   7: 125148.877 ops/s
# Warmup Iteration   8: 104352.748 ops/s
# Warmup Iteration   9: 132057.839 ops/s
# Warmup Iteration  10: 123995.805 ops/s
# Warmup Iteration  11: 128927.413 ops/s
# Warmup Iteration  12: 128081.316 ops/s
# Warmup Iteration  13: 123791.945 ops/s
# Warmup Iteration  14: 125325.730 ops/s
# Warmup Iteration  15: 129458.231 ops/s
# Warmup Iteration  16: 124921.465 ops/s
# Warmup Iteration  17: 134689.302 ops/s
# Warmup Iteration  18: 125710.424 ops/s
# Warmup Iteration  19: 133493.685 ops/s
# Warmup Iteration  20: 135237.282 ops/s
# Warmup Iteration  21: 124808.862 ops/s
# Warmup Iteration  22: 131459.953 ops/s
# Warmup Iteration  23: 128332.083 ops/s
# Warmup Iteration  24: 131701.704 ops/s
# Warmup Iteration  25: 130227.231 ops/s
# Warmup Iteration  26: 128902.046 ops/s
# Warmup Iteration  27: 135070.570 ops/s
# Warmup Iteration  28: 138024.475 ops/s
# Warmup Iteration  29: 127540.325 ops/s
# Warmup Iteration  30: 130613.983 ops/s
Iteration   1: 133594.307 ops/s
Iteration   2: 126158.198 ops/s
Iteration   3: 131260.666 ops/s
Iteration   4: 129430.671 ops/s
Iteration   5: 126121.404 ops/s
Iteration   6: 134643.492 ops/s
Iteration   7: 129039.138 ops/s
Iteration   8: 129518.215 ops/s
Iteration   9: 132921.899 ops/s
Iteration  10: 135354.840 ops/s
Iteration  11: 128003.408 ops/s
Iteration  12: 129642.409 ops/s
Iteration  13: 133826.023 ops/s
Iteration  14: 129190.720 ops/s
Iteration  15: 130593.378 ops/s
Iteration  16: 130232.716 ops/s
Iteration  17: 128978.680 ops/s
Iteration  18: 110405.783 ops/s
Iteration  19: 129597.214 ops/s
Iteration  20: 125765.627 ops/s
Iteration  21: 130825.944 ops/s
Iteration  22: 132921.090 ops/s
Iteration  23: 128884.180 ops/s
Iteration  24: 133173.504 ops/s
Iteration  25: 128632.768 ops/s
Iteration  26: 135132.701 ops/s
Iteration  27: 131038.124 ops/s
Iteration  28: 133106.705 ops/s
Iteration  29: 137977.920 ops/s
Iteration  30: 127188.610 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_802._Benchmark.benchmark_Cluster_802":
  130105.344 ±(99.9%) 3182.804 ops/s [Average]
  (min, avg, max) = (110405.783, 130105.344, 137977.920), stdev = 4763.871
  CI (99.9%): [126922.540, 133288.148] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_802._Benchmark.benchmark_Cluster_802  thrpt   30  130105.344 ± 3182.804  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_803._Benchmark.benchmark_Cluster_803$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_803._Benchmark.benchmark_Cluster_803

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16703.668 ops/s
# Warmup Iteration   2: 85533.858 ops/s
# Warmup Iteration   3: 99163.282 ops/s
# Warmup Iteration   4: 107561.165 ops/s
# Warmup Iteration   5: 106158.565 ops/s
# Warmup Iteration   6: 109978.490 ops/s
# Warmup Iteration   7: 110253.313 ops/s
# Warmup Iteration   8: 112790.568 ops/s
# Warmup Iteration   9: 110151.950 ops/s
# Warmup Iteration  10: 108025.342 ops/s
# Warmup Iteration  11: 114875.702 ops/s
# Warmup Iteration  12: 113803.471 ops/s
# Warmup Iteration  13: 110847.113 ops/s
# Warmup Iteration  14: 110184.771 ops/s
# Warmup Iteration  15: 113182.615 ops/s
# Warmup Iteration  16: 109349.924 ops/s
# Warmup Iteration  17: 112974.764 ops/s
# Warmup Iteration  18: 110051.762 ops/s
# Warmup Iteration  19: 110230.604 ops/s
# Warmup Iteration  20: 112741.756 ops/s
# Warmup Iteration  21: 109237.220 ops/s
# Warmup Iteration  22: 111511.044 ops/s
# Warmup Iteration  23: 113446.093 ops/s
# Warmup Iteration  24: 109558.298 ops/s
# Warmup Iteration  25: 113712.737 ops/s
# Warmup Iteration  26: 108888.023 ops/s
# Warmup Iteration  27: 111056.032 ops/s
# Warmup Iteration  28: 113071.852 ops/s
# Warmup Iteration  29: 111229.377 ops/s
# Warmup Iteration  30: 113259.989 ops/s
Iteration   1: 109560.397 ops/s
Iteration   2: 111916.027 ops/s
Iteration   3: 109327.237 ops/s
Iteration   4: 111510.262 ops/s
Iteration   5: 112570.651 ops/s
Iteration   6: 110989.006 ops/s
Iteration   7: 109743.672 ops/s
Iteration   8: 112703.615 ops/s
Iteration   9: 109661.735 ops/s
Iteration  10: 113603.971 ops/s
Iteration  11: 108728.117 ops/s
Iteration  12: 115455.431 ops/s
Iteration  13: 109151.001 ops/s
Iteration  14: 109991.412 ops/s
Iteration  15: 111272.967 ops/s
Iteration  16: 113198.374 ops/s
Iteration  17: 107331.707 ops/s
Iteration  18: 111058.572 ops/s
Iteration  19: 109812.465 ops/s
Iteration  20: 111289.738 ops/s
Iteration  21: 110896.663 ops/s
Iteration  22: 108131.110 ops/s
Iteration  23: 110623.960 ops/s
Iteration  24: 115456.131 ops/s
Iteration  25: 108113.656 ops/s
Iteration  26: 113698.045 ops/s
Iteration  27: 108633.767 ops/s
Iteration  28: 115431.310 ops/s
Iteration  29: 113465.820 ops/s
Iteration  30: 106575.848 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_803._Benchmark.benchmark_Cluster_803":
  110996.756 ±(99.9%) 1596.245 ops/s [Average]
  (min, avg, max) = (106575.848, 110996.756, 115456.131), stdev = 2389.185
  CI (99.9%): [109400.510, 112593.001] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_803._Benchmark.benchmark_Cluster_803  thrpt   30  110996.756 ± 1596.245  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_804._Benchmark.benchmark_Cluster_804$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_804._Benchmark.benchmark_Cluster_804

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3475.525 ops/s
# Warmup Iteration   2: 22376.224 ops/s
# Warmup Iteration   3: 37514.568 ops/s
# Warmup Iteration   4: 40699.083 ops/s
# Warmup Iteration   5: 32373.738 ops/s
# Warmup Iteration   6: 87306.974 ops/s
# Warmup Iteration   7: 87641.926 ops/s
# Warmup Iteration   8: 97009.954 ops/s
# Warmup Iteration   9: 100030.980 ops/s
# Warmup Iteration  10: 93651.096 ops/s
# Warmup Iteration  11: 91378.566 ops/s
# Warmup Iteration  12: 95941.705 ops/s
# Warmup Iteration  13: 97310.014 ops/s
# Warmup Iteration  14: 100550.871 ops/s
# Warmup Iteration  15: 94559.348 ops/s
# Warmup Iteration  16: 99464.581 ops/s
# Warmup Iteration  17: 100539.627 ops/s
# Warmup Iteration  18: 94534.022 ops/s
# Warmup Iteration  19: 99157.090 ops/s
# Warmup Iteration  20: 102788.420 ops/s
# Warmup Iteration  21: 97978.059 ops/s
# Warmup Iteration  22: 103837.757 ops/s
# Warmup Iteration  23: 97680.840 ops/s
# Warmup Iteration  24: 99027.388 ops/s
# Warmup Iteration  25: 102616.964 ops/s
# Warmup Iteration  26: 100858.857 ops/s
# Warmup Iteration  27: 104207.061 ops/s
# Warmup Iteration  28: 97311.835 ops/s
# Warmup Iteration  29: 102356.278 ops/s
# Warmup Iteration  30: 103193.413 ops/s
Iteration   1: 100988.966 ops/s
Iteration   2: 100958.789 ops/s
Iteration   3: 98993.323 ops/s
Iteration   4: 101432.822 ops/s
Iteration   5: 101719.045 ops/s
Iteration   6: 100699.478 ops/s
Iteration   7: 101595.581 ops/s
Iteration   8: 99648.893 ops/s
Iteration   9: 101182.966 ops/s
Iteration  10: 100500.618 ops/s
Iteration  11: 99738.447 ops/s
Iteration  12: 100473.587 ops/s
Iteration  13: 84523.807 ops/s
Iteration  14: 98661.194 ops/s
Iteration  15: 99545.729 ops/s
Iteration  16: 103355.827 ops/s
Iteration  17: 97172.121 ops/s
Iteration  18: 101133.914 ops/s
Iteration  19: 99552.264 ops/s
Iteration  20: 102071.539 ops/s
Iteration  21: 97865.096 ops/s
Iteration  22: 104152.406 ops/s
Iteration  23: 99306.007 ops/s
Iteration  24: 99575.270 ops/s
Iteration  25: 103361.443 ops/s
Iteration  26: 98165.342 ops/s
Iteration  27: 100230.495 ops/s
Iteration  28: 98263.154 ops/s
Iteration  29: 100295.560 ops/s
Iteration  30: 104158.929 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_804._Benchmark.benchmark_Cluster_804":
  99977.420 ±(99.9%) 2277.990 ops/s [Average]
  (min, avg, max) = (84523.807, 99977.420, 104158.929), stdev = 3409.588
  CI (99.9%): [97699.431, 102255.410] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_804._Benchmark.benchmark_Cluster_804  thrpt   30  99977.420 ± 2277.990  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_805._Benchmark.benchmark_Cluster_805$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_805._Benchmark.benchmark_Cluster_805

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 89756.607 ops/s
# Warmup Iteration   2: 154830.442 ops/s
# Warmup Iteration   3: 161032.914 ops/s
# Warmup Iteration   4: 166968.600 ops/s
# Warmup Iteration   5: 166118.009 ops/s
# Warmup Iteration   6: 163779.583 ops/s
# Warmup Iteration   7: 158869.578 ops/s
# Warmup Iteration   8: 161644.052 ops/s
# Warmup Iteration   9: 163417.442 ops/s
# Warmup Iteration  10: 167867.500 ops/s
# Warmup Iteration  11: 158854.032 ops/s
# Warmup Iteration  12: 173664.018 ops/s
# Warmup Iteration  13: 168698.954 ops/s
# Warmup Iteration  14: 163632.967 ops/s
# Warmup Iteration  15: 164377.226 ops/s
# Warmup Iteration  16: 169850.167 ops/s
# Warmup Iteration  17: 171199.655 ops/s
# Warmup Iteration  18: 172578.213 ops/s
# Warmup Iteration  19: 180829.818 ops/s
# Warmup Iteration  20: 168165.057 ops/s
# Warmup Iteration  21: 179142.456 ops/s
# Warmup Iteration  22: 173818.641 ops/s
# Warmup Iteration  23: 167485.048 ops/s
# Warmup Iteration  24: 172520.171 ops/s
# Warmup Iteration  25: 174907.970 ops/s
# Warmup Iteration  26: 173982.295 ops/s
# Warmup Iteration  27: 179562.687 ops/s
# Warmup Iteration  28: 171258.621 ops/s
# Warmup Iteration  29: 177270.587 ops/s
# Warmup Iteration  30: 180753.287 ops/s
Iteration   1: 172609.389 ops/s
Iteration   2: 169154.603 ops/s
Iteration   3: 179371.558 ops/s
Iteration   4: 168083.965 ops/s
Iteration   5: 174036.196 ops/s
Iteration   6: 172308.464 ops/s
Iteration   7: 168752.567 ops/s
Iteration   8: 181397.422 ops/s
Iteration   9: 172244.743 ops/s
Iteration  10: 174452.427 ops/s
Iteration  11: 180510.768 ops/s
Iteration  12: 173153.665 ops/s
Iteration  13: 174408.429 ops/s
Iteration  14: 173597.334 ops/s
Iteration  15: 172988.122 ops/s
Iteration  16: 181398.487 ops/s
Iteration  17: 176523.237 ops/s
Iteration  18: 170841.562 ops/s
Iteration  19: 177257.447 ops/s
Iteration  20: 173610.045 ops/s
Iteration  21: 168863.874 ops/s
Iteration  22: 177348.864 ops/s
Iteration  23: 173090.028 ops/s
Iteration  24: 181168.771 ops/s
Iteration  25: 176018.848 ops/s
Iteration  26: 180078.146 ops/s
Iteration  27: 177454.409 ops/s
Iteration  28: 173814.372 ops/s
Iteration  29: 178905.861 ops/s
Iteration  30: 171671.448 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_805._Benchmark.benchmark_Cluster_805":
  174837.168 ±(99.9%) 2647.098 ops/s [Average]
  (min, avg, max) = (168083.965, 174837.168, 181398.487), stdev = 3962.052
  CI (99.9%): [172190.070, 177484.266] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_805._Benchmark.benchmark_Cluster_805  thrpt   30  174837.168 ± 2647.098  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_806._Benchmark.benchmark_Cluster_806$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_806._Benchmark.benchmark_Cluster_806

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.842 ops/s
# Warmup Iteration   2: 7178.006 ops/s
# Warmup Iteration   3: 28697.984 ops/s
# Warmup Iteration   4: 46237.554 ops/s
# Warmup Iteration   5: 57040.476 ops/s
# Warmup Iteration   6: 41740.637 ops/s
# Warmup Iteration   7: 120643.701 ops/s
# Warmup Iteration   8: 145433.817 ops/s
# Warmup Iteration   9: 159947.035 ops/s
# Warmup Iteration  10: 151647.285 ops/s
# Warmup Iteration  11: 150130.661 ops/s
# Warmup Iteration  12: 157923.562 ops/s
# Warmup Iteration  13: 150755.755 ops/s
# Warmup Iteration  14: 152765.143 ops/s
# Warmup Iteration  15: 152493.100 ops/s
# Warmup Iteration  16: 151661.359 ops/s
# Warmup Iteration  17: 155376.481 ops/s
# Warmup Iteration  18: 148789.521 ops/s
# Warmup Iteration  19: 153698.131 ops/s
# Warmup Iteration  20: 162434.362 ops/s
# Warmup Iteration  21: 147353.655 ops/s
# Warmup Iteration  22: 159173.057 ops/s
# Warmup Iteration  23: 151572.747 ops/s
# Warmup Iteration  24: 148009.840 ops/s
# Warmup Iteration  25: 158587.527 ops/s
# Warmup Iteration  26: 149650.860 ops/s
# Warmup Iteration  27: 149416.149 ops/s
# Warmup Iteration  28: 158288.528 ops/s
# Warmup Iteration  29: 149487.023 ops/s
# Warmup Iteration  30: 159715.647 ops/s
Iteration   1: 154319.049 ops/s
Iteration   2: 155886.828 ops/s
Iteration   3: 151476.435 ops/s
Iteration   4: 151025.454 ops/s
Iteration   5: 160602.214 ops/s
Iteration   6: 150594.656 ops/s
Iteration   7: 123284.186 ops/s
Iteration   8: 154888.376 ops/s
Iteration   9: 152634.786 ops/s
Iteration  10: 156024.628 ops/s
Iteration  11: 150879.552 ops/s
Iteration  12: 149112.578 ops/s
Iteration  13: 152164.547 ops/s
Iteration  14: 154033.821 ops/s
Iteration  15: 151963.221 ops/s
Iteration  16: 155544.799 ops/s
Iteration  17: 149382.753 ops/s
Iteration  18: 157529.123 ops/s
Iteration  19: 147417.397 ops/s
Iteration  20: 149751.584 ops/s
Iteration  21: 153543.181 ops/s
Iteration  22: 157180.060 ops/s
Iteration  23: 157022.615 ops/s
Iteration  24: 151212.267 ops/s
Iteration  25: 159106.066 ops/s
Iteration  26: 157626.833 ops/s
Iteration  27: 150055.735 ops/s
Iteration  28: 158776.659 ops/s
Iteration  29: 154680.337 ops/s
Iteration  30: 156319.513 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_806._Benchmark.benchmark_Cluster_806":
  152801.308 ±(99.9%) 4352.073 ops/s [Average]
  (min, avg, max) = (123284.186, 152801.308, 160602.214), stdev = 6513.978
  CI (99.9%): [148449.236, 157153.381] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_806._Benchmark.benchmark_Cluster_806  thrpt   30  152801.308 ± 4352.073  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_807._Benchmark.benchmark_Cluster_807$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_807._Benchmark.benchmark_Cluster_807

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.739 ops/s
# Warmup Iteration   2: 15360.651 ops/s
# Warmup Iteration   3: 31443.638 ops/s
# Warmup Iteration   4: 46263.771 ops/s
# Warmup Iteration   5: 52435.201 ops/s
# Warmup Iteration   6: 78025.832 ops/s
# Warmup Iteration   7: 138289.099 ops/s
# Warmup Iteration   8: 138162.901 ops/s
# Warmup Iteration   9: 156780.021 ops/s
# Warmup Iteration  10: 152170.846 ops/s
# Warmup Iteration  11: 146156.754 ops/s
# Warmup Iteration  12: 157760.224 ops/s
# Warmup Iteration  13: 147092.803 ops/s
# Warmup Iteration  14: 155639.380 ops/s
# Warmup Iteration  15: 151266.986 ops/s
# Warmup Iteration  16: 152889.344 ops/s
# Warmup Iteration  17: 154334.757 ops/s
# Warmup Iteration  18: 151689.674 ops/s
# Warmup Iteration  19: 155743.743 ops/s
# Warmup Iteration  20: 150278.128 ops/s
# Warmup Iteration  21: 151489.200 ops/s
# Warmup Iteration  22: 154395.111 ops/s
# Warmup Iteration  23: 146915.883 ops/s
# Warmup Iteration  24: 150806.605 ops/s
# Warmup Iteration  25: 157599.207 ops/s
# Warmup Iteration  26: 144894.856 ops/s
# Warmup Iteration  27: 151393.551 ops/s
# Warmup Iteration  28: 154060.153 ops/s
# Warmup Iteration  29: 149019.604 ops/s
# Warmup Iteration  30: 155756.534 ops/s
Iteration   1: 146388.082 ops/s
Iteration   2: 154666.172 ops/s
Iteration   3: 151464.069 ops/s
Iteration   4: 154989.409 ops/s
Iteration   5: 156217.377 ops/s
Iteration   6: 149580.060 ops/s
Iteration   7: 156826.077 ops/s
Iteration   8: 150190.511 ops/s
Iteration   9: 154648.884 ops/s
Iteration  10: 153433.902 ops/s
Iteration  11: 157041.293 ops/s
Iteration  12: 152466.687 ops/s
Iteration  13: 147004.294 ops/s
Iteration  14: 152346.862 ops/s
Iteration  15: 151301.593 ops/s
Iteration  16: 151951.394 ops/s
Iteration  17: 154787.845 ops/s
Iteration  18: 150042.307 ops/s
Iteration  19: 158389.378 ops/s
Iteration  20: 151876.946 ops/s
Iteration  21: 151938.666 ops/s
Iteration  22: 157751.943 ops/s
Iteration  23: 148513.211 ops/s
Iteration  24: 158687.302 ops/s
Iteration  25: 151841.145 ops/s
Iteration  26: 151297.569 ops/s
Iteration  27: 155572.194 ops/s
Iteration  28: 153172.210 ops/s
Iteration  29: 152304.701 ops/s
Iteration  30: 156417.375 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_807._Benchmark.benchmark_Cluster_807":
  153103.649 ±(99.9%) 2143.263 ops/s [Average]
  (min, avg, max) = (146388.082, 153103.649, 158687.302), stdev = 3207.935
  CI (99.9%): [150960.386, 155246.911] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_807._Benchmark.benchmark_Cluster_807  thrpt   30  153103.649 ± 2143.263  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_808._Benchmark.benchmark_Cluster_808$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_808._Benchmark.benchmark_Cluster_808

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5594.463 ops/s
# Warmup Iteration   2: 43422.703 ops/s
# Warmup Iteration   3: 82238.534 ops/s
# Warmup Iteration   4: 92140.090 ops/s
# Warmup Iteration   5: 107438.471 ops/s
# Warmup Iteration   6: 107405.105 ops/s
# Warmup Iteration   7: 111106.524 ops/s
# Warmup Iteration   8: 104204.015 ops/s
# Warmup Iteration   9: 107523.870 ops/s
# Warmup Iteration  10: 107215.181 ops/s
# Warmup Iteration  11: 112952.933 ops/s
# Warmup Iteration  12: 107726.984 ops/s
# Warmup Iteration  13: 111854.496 ops/s
# Warmup Iteration  14: 109953.743 ops/s
# Warmup Iteration  15: 108358.568 ops/s
# Warmup Iteration  16: 113029.152 ops/s
# Warmup Iteration  17: 113240.591 ops/s
# Warmup Iteration  18: 118311.797 ops/s
# Warmup Iteration  19: 112788.025 ops/s
# Warmup Iteration  20: 119481.442 ops/s
# Warmup Iteration  21: 111734.284 ops/s
# Warmup Iteration  22: 114506.217 ops/s
# Warmup Iteration  23: 118601.787 ops/s
# Warmup Iteration  24: 112347.854 ops/s
# Warmup Iteration  25: 111703.530 ops/s
# Warmup Iteration  26: 118443.417 ops/s
# Warmup Iteration  27: 116727.502 ops/s
# Warmup Iteration  28: 114044.633 ops/s
# Warmup Iteration  29: 114132.141 ops/s
# Warmup Iteration  30: 110918.989 ops/s
Iteration   1: 85495.645 ops/s
Iteration   2: 116777.856 ops/s
Iteration   3: 115069.464 ops/s
Iteration   4: 112500.458 ops/s
Iteration   5: 120167.173 ops/s
Iteration   6: 110660.870 ops/s
Iteration   7: 120209.881 ops/s
Iteration   8: 117707.552 ops/s
Iteration   9: 115447.566 ops/s
Iteration  10: 119122.870 ops/s
Iteration  11: 114389.496 ops/s
Iteration  12: 117766.250 ops/s
Iteration  13: 114562.473 ops/s
Iteration  14: 111065.451 ops/s
Iteration  15: 118602.243 ops/s
Iteration  16: 111943.068 ops/s
Iteration  17: 115849.055 ops/s
Iteration  18: 116740.527 ops/s
Iteration  19: 113165.361 ops/s
Iteration  20: 119177.293 ops/s
Iteration  21: 109512.447 ops/s
Iteration  22: 113577.519 ops/s
Iteration  23: 112783.122 ops/s
Iteration  24: 118757.964 ops/s
Iteration  25: 114418.757 ops/s
Iteration  26: 113165.392 ops/s
Iteration  27: 116106.603 ops/s
Iteration  28: 114818.634 ops/s
Iteration  29: 116615.027 ops/s
Iteration  30: 115228.190 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_808._Benchmark.benchmark_Cluster_808":
  114380.140 ±(99.9%) 4105.371 ops/s [Average]
  (min, avg, max) = (85495.645, 114380.140, 120209.881), stdev = 6144.726
  CI (99.9%): [110274.769, 118485.511] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_808._Benchmark.benchmark_Cluster_808  thrpt   30  114380.140 ± 4105.371  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_809._Benchmark.benchmark_Cluster_809$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_809._Benchmark.benchmark_Cluster_809

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6796.519 ops/s
# Warmup Iteration   2: 25874.377 ops/s
# Warmup Iteration   3: 24222.677 ops/s
# Warmup Iteration   4: 30676.492 ops/s
# Warmup Iteration   5: 79372.053 ops/s
# Warmup Iteration   6: 84738.389 ops/s
# Warmup Iteration   7: 103631.851 ops/s
# Warmup Iteration   8: 94072.447 ops/s
# Warmup Iteration   9: 105541.632 ops/s
# Warmup Iteration  10: 104395.288 ops/s
# Warmup Iteration  11: 108464.513 ops/s
# Warmup Iteration  12: 104222.461 ops/s
# Warmup Iteration  13: 104281.825 ops/s
# Warmup Iteration  14: 106203.846 ops/s
# Warmup Iteration  15: 104337.719 ops/s
# Warmup Iteration  16: 104759.197 ops/s
# Warmup Iteration  17: 110249.348 ops/s
# Warmup Iteration  18: 108936.999 ops/s
# Warmup Iteration  19: 112562.963 ops/s
# Warmup Iteration  20: 105828.770 ops/s
# Warmup Iteration  21: 112537.499 ops/s
# Warmup Iteration  22: 108787.575 ops/s
# Warmup Iteration  23: 106260.350 ops/s
# Warmup Iteration  24: 111444.395 ops/s
# Warmup Iteration  25: 111262.296 ops/s
# Warmup Iteration  26: 107040.417 ops/s
# Warmup Iteration  27: 108720.141 ops/s
# Warmup Iteration  28: 110451.448 ops/s
# Warmup Iteration  29: 108447.034 ops/s
# Warmup Iteration  30: 106826.451 ops/s
Iteration   1: 109837.522 ops/s
Iteration   2: 110315.819 ops/s
Iteration   3: 107402.230 ops/s
Iteration   4: 109355.977 ops/s
Iteration   5: 105881.712 ops/s
Iteration   6: 108683.798 ops/s
Iteration   7: 113225.184 ops/s
Iteration   8: 109809.337 ops/s
Iteration   9: 104883.616 ops/s
Iteration  10: 112828.691 ops/s
Iteration  11: 107885.693 ops/s
Iteration  12: 111976.930 ops/s
Iteration  13: 112922.397 ops/s
Iteration  14: 106610.545 ops/s
Iteration  15: 106468.483 ops/s
Iteration  16: 107303.804 ops/s
Iteration  17: 111998.627 ops/s
Iteration  18: 108269.048 ops/s
Iteration  19: 112537.978 ops/s
Iteration  20: 105366.911 ops/s
Iteration  21: 110671.779 ops/s
Iteration  22: 113308.705 ops/s
Iteration  23: 106332.986 ops/s
Iteration  24: 111272.499 ops/s
Iteration  25: 106282.908 ops/s
Iteration  26: 114659.965 ops/s
Iteration  27: 108310.643 ops/s
Iteration  28: 109384.299 ops/s
Iteration  29: 108951.180 ops/s
Iteration  30: 109275.090 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_809._Benchmark.benchmark_Cluster_809":
  109400.478 ±(99.9%) 1796.671 ops/s [Average]
  (min, avg, max) = (104883.616, 109400.478, 114659.965), stdev = 2689.173
  CI (99.9%): [107603.807, 111197.150] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_809._Benchmark.benchmark_Cluster_809  thrpt   30  109400.478 ± 1796.671  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_81._Benchmark.benchmark_Cluster_81$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_81._Benchmark.benchmark_Cluster_81

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4670.206 ops/s
# Warmup Iteration   2: 17709.382 ops/s
# Warmup Iteration   3: 20736.106 ops/s
# Warmup Iteration   4: 35390.564 ops/s
# Warmup Iteration   5: 22096.652 ops/s
# Warmup Iteration   6: 18772.350 ops/s
# Warmup Iteration   7: 42648.350 ops/s
# Warmup Iteration   8: 38455.925 ops/s
# Warmup Iteration   9: 51463.249 ops/s
# Warmup Iteration  10: 44343.774 ops/s
# Warmup Iteration  11: 45724.065 ops/s
# Warmup Iteration  12: 50251.762 ops/s
# Warmup Iteration  13: 42717.524 ops/s
# Warmup Iteration  14: 51996.049 ops/s
# Warmup Iteration  15: 54336.827 ops/s
# Warmup Iteration  16: 52857.159 ops/s
# Warmup Iteration  17: 51935.302 ops/s
# Warmup Iteration  18: 52378.078 ops/s
# Warmup Iteration  19: 50066.313 ops/s
# Warmup Iteration  20: 49078.276 ops/s
# Warmup Iteration  21: 55016.606 ops/s
# Warmup Iteration  22: 51538.192 ops/s
# Warmup Iteration  23: 47709.749 ops/s
# Warmup Iteration  24: 51993.622 ops/s
# Warmup Iteration  25: 45984.831 ops/s
# Warmup Iteration  26: 49695.014 ops/s
# Warmup Iteration  27: 55108.796 ops/s
# Warmup Iteration  28: 48876.472 ops/s
# Warmup Iteration  29: 52741.503 ops/s
# Warmup Iteration  30: 54969.671 ops/s
Iteration   1: 49543.724 ops/s
Iteration   2: 53705.361 ops/s
Iteration   3: 49565.931 ops/s
Iteration   4: 52018.989 ops/s
Iteration   5: 54574.509 ops/s
Iteration   6: 52317.184 ops/s
Iteration   7: 57132.162 ops/s
Iteration   8: 51122.549 ops/s
Iteration   9: 52814.358 ops/s
Iteration  10: 49732.827 ops/s
Iteration  11: 52643.768 ops/s
Iteration  12: 49687.495 ops/s
Iteration  13: 54562.236 ops/s
Iteration  14: 50754.682 ops/s
Iteration  15: 54743.533 ops/s
Iteration  16: 56127.199 ops/s
Iteration  17: 52731.371 ops/s
Iteration  18: 52339.628 ops/s
Iteration  19: 54533.432 ops/s
Iteration  20: 53044.290 ops/s
Iteration  21: 52941.346 ops/s
Iteration  22: 52421.401 ops/s
Iteration  23: 52665.795 ops/s
Iteration  24: 49161.026 ops/s
Iteration  25: 53894.582 ops/s
Iteration  26: 53242.815 ops/s
Iteration  27: 50338.239 ops/s
Iteration  28: 50460.509 ops/s
Iteration  29: 56242.210 ops/s
Iteration  30: 50103.354 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_81._Benchmark.benchmark_Cluster_81":
  52505.550 ±(99.9%) 1440.783 ops/s [Average]
  (min, avg, max) = (49161.026, 52505.550, 57132.162), stdev = 2156.496
  CI (99.9%): [51064.767, 53946.333] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_81._Benchmark.benchmark_Cluster_81  thrpt   30  52505.550 ± 1440.783  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_810._Benchmark.benchmark_Cluster_810$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_810._Benchmark.benchmark_Cluster_810

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16158.546 ops/s
# Warmup Iteration   2: 34510.322 ops/s
# Warmup Iteration   3: 35216.862 ops/s
# Warmup Iteration   4: 33854.682 ops/s
# Warmup Iteration   5: 99765.097 ops/s
# Warmup Iteration   6: 101182.097 ops/s
# Warmup Iteration   7: 105495.593 ops/s
# Warmup Iteration   8: 102528.888 ops/s
# Warmup Iteration   9: 112749.914 ops/s
# Warmup Iteration  10: 110744.820 ops/s
# Warmup Iteration  11: 114076.462 ops/s
# Warmup Iteration  12: 112942.007 ops/s
# Warmup Iteration  13: 118688.774 ops/s
# Warmup Iteration  14: 117088.784 ops/s
# Warmup Iteration  15: 112277.740 ops/s
# Warmup Iteration  16: 116321.687 ops/s
# Warmup Iteration  17: 118880.762 ops/s
# Warmup Iteration  18: 122078.441 ops/s
# Warmup Iteration  19: 115613.594 ops/s
# Warmup Iteration  20: 122717.894 ops/s
# Warmup Iteration  21: 117642.226 ops/s
# Warmup Iteration  22: 116490.471 ops/s
# Warmup Iteration  23: 125917.055 ops/s
# Warmup Iteration  24: 115128.155 ops/s
# Warmup Iteration  25: 121117.271 ops/s
# Warmup Iteration  26: 114544.083 ops/s
# Warmup Iteration  27: 122503.222 ops/s
# Warmup Iteration  28: 115163.540 ops/s
# Warmup Iteration  29: 120562.771 ops/s
# Warmup Iteration  30: 121184.954 ops/s
Iteration   1: 116272.585 ops/s
Iteration   2: 119584.178 ops/s
Iteration   3: 121460.996 ops/s
Iteration   4: 114968.052 ops/s
Iteration   5: 120840.199 ops/s
Iteration   6: 116809.364 ops/s
Iteration   7: 120332.090 ops/s
Iteration   8: 126929.162 ops/s
Iteration   9: 115774.000 ops/s
Iteration  10: 120378.355 ops/s
Iteration  11: 118184.665 ops/s
Iteration  12: 122784.131 ops/s
Iteration  13: 116064.759 ops/s
Iteration  14: 120821.288 ops/s
Iteration  15: 121505.117 ops/s
Iteration  16: 123559.805 ops/s
Iteration  17: 118279.030 ops/s
Iteration  18: 122860.996 ops/s
Iteration  19: 114392.914 ops/s
Iteration  20: 122694.374 ops/s
Iteration  21: 116350.105 ops/s
Iteration  22: 116327.738 ops/s
Iteration  23: 122898.328 ops/s
Iteration  24: 118848.267 ops/s
Iteration  25: 122647.070 ops/s
Iteration  26: 118929.250 ops/s
Iteration  27: 121942.339 ops/s
Iteration  28: 117113.790 ops/s
Iteration  29: 119236.656 ops/s
Iteration  30: 116000.349 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_810._Benchmark.benchmark_Cluster_810":
  119492.998 ±(99.9%) 2061.815 ops/s [Average]
  (min, avg, max) = (114392.914, 119492.998, 126929.162), stdev = 3086.027
  CI (99.9%): [117431.184, 121554.813] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_810._Benchmark.benchmark_Cluster_810  thrpt   30  119492.998 ± 2061.815  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_811._Benchmark.benchmark_Cluster_811$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_811._Benchmark.benchmark_Cluster_811

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4283.991 ops/s
# Warmup Iteration   2: 34817.482 ops/s
# Warmup Iteration   3: 53158.788 ops/s
# Warmup Iteration   4: 86293.816 ops/s
# Warmup Iteration   5: 132650.496 ops/s
# Warmup Iteration   6: 136913.904 ops/s
# Warmup Iteration   7: 130148.775 ops/s
# Warmup Iteration   8: 137944.809 ops/s
# Warmup Iteration   9: 139008.504 ops/s
# Warmup Iteration  10: 129760.275 ops/s
# Warmup Iteration  11: 137143.060 ops/s
# Warmup Iteration  12: 129663.108 ops/s
# Warmup Iteration  13: 137900.652 ops/s
# Warmup Iteration  14: 134872.930 ops/s
# Warmup Iteration  15: 138303.887 ops/s
# Warmup Iteration  16: 131116.657 ops/s
# Warmup Iteration  17: 137151.483 ops/s
# Warmup Iteration  18: 100391.826 ops/s
# Warmup Iteration  19: 136303.584 ops/s
# Warmup Iteration  20: 132402.792 ops/s
# Warmup Iteration  21: 128845.187 ops/s
# Warmup Iteration  22: 136912.647 ops/s
# Warmup Iteration  23: 138553.320 ops/s
# Warmup Iteration  24: 138651.975 ops/s
# Warmup Iteration  25: 140154.060 ops/s
# Warmup Iteration  26: 135947.198 ops/s
# Warmup Iteration  27: 135938.979 ops/s
# Warmup Iteration  28: 142594.211 ops/s
# Warmup Iteration  29: 132446.812 ops/s
# Warmup Iteration  30: 140048.018 ops/s
Iteration   1: 136669.575 ops/s
Iteration   2: 131190.927 ops/s
Iteration   3: 138079.478 ops/s
Iteration   4: 135026.801 ops/s
Iteration   5: 144482.861 ops/s
Iteration   6: 135099.527 ops/s
Iteration   7: 137094.507 ops/s
Iteration   8: 137444.099 ops/s
Iteration   9: 138147.252 ops/s
Iteration  10: 140659.759 ops/s
Iteration  11: 137533.872 ops/s
Iteration  12: 137480.760 ops/s
Iteration  13: 135240.408 ops/s
Iteration  14: 132325.251 ops/s
Iteration  15: 134618.484 ops/s
Iteration  16: 141306.854 ops/s
Iteration  17: 133647.086 ops/s
Iteration  18: 144353.683 ops/s
Iteration  19: 142609.378 ops/s
Iteration  20: 136120.851 ops/s
Iteration  21: 145082.151 ops/s
Iteration  22: 132841.354 ops/s
Iteration  23: 138662.524 ops/s
Iteration  24: 137040.024 ops/s
Iteration  25: 140189.125 ops/s
Iteration  26: 138828.302 ops/s
Iteration  27: 141794.388 ops/s
Iteration  28: 136800.310 ops/s
Iteration  29: 140260.863 ops/s
Iteration  30: 140494.753 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_811._Benchmark.benchmark_Cluster_811":
  138037.507 ±(99.9%) 2396.589 ops/s [Average]
  (min, avg, max) = (131190.927, 138037.507, 145082.151), stdev = 3587.102
  CI (99.9%): [135640.918, 140434.096] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_811._Benchmark.benchmark_Cluster_811  thrpt   30  138037.507 ± 2396.589  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_812._Benchmark.benchmark_Cluster_812$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_812._Benchmark.benchmark_Cluster_812

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2224.601 ops/s
# Warmup Iteration   2: 16068.876 ops/s
# Warmup Iteration   3: 15968.923 ops/s
# Warmup Iteration   4: 29714.492 ops/s
# Warmup Iteration   5: 21614.783 ops/s
# Warmup Iteration   6: 20126.657 ops/s
# Warmup Iteration   7: 37638.989 ops/s
# Warmup Iteration   8: 35328.035 ops/s
# Warmup Iteration   9: 35235.726 ops/s
# Warmup Iteration  10: 37765.690 ops/s
# Warmup Iteration  11: 38489.346 ops/s
# Warmup Iteration  12: 34802.744 ops/s
# Warmup Iteration  13: 35053.069 ops/s
# Warmup Iteration  14: 36085.459 ops/s
# Warmup Iteration  15: 34738.401 ops/s
# Warmup Iteration  16: 37586.933 ops/s
# Warmup Iteration  17: 37775.027 ops/s
# Warmup Iteration  18: 35439.962 ops/s
# Warmup Iteration  19: 38159.768 ops/s
# Warmup Iteration  20: 35730.149 ops/s
# Warmup Iteration  21: 35753.497 ops/s
# Warmup Iteration  22: 37798.412 ops/s
# Warmup Iteration  23: 38573.508 ops/s
# Warmup Iteration  24: 35445.662 ops/s
# Warmup Iteration  25: 38340.043 ops/s
# Warmup Iteration  26: 37158.392 ops/s
# Warmup Iteration  27: 39405.061 ops/s
# Warmup Iteration  28: 36752.886 ops/s
# Warmup Iteration  29: 38484.753 ops/s
# Warmup Iteration  30: 37334.029 ops/s
Iteration   1: 35614.028 ops/s
Iteration   2: 38964.347 ops/s
Iteration   3: 40645.024 ops/s
Iteration   4: 38190.826 ops/s
Iteration   5: 37135.520 ops/s
Iteration   6: 38456.820 ops/s
Iteration   7: 40189.997 ops/s
Iteration   8: 37250.115 ops/s
Iteration   9: 37278.679 ops/s
Iteration  10: 37221.036 ops/s
Iteration  11: 37694.187 ops/s
Iteration  12: 37458.379 ops/s
Iteration  13: 36777.708 ops/s
Iteration  14: 38360.235 ops/s
Iteration  15: 39675.007 ops/s
Iteration  16: 35992.967 ops/s
Iteration  17: 38837.777 ops/s
Iteration  18: 36360.479 ops/s
Iteration  19: 36408.325 ops/s
Iteration  20: 37249.433 ops/s
Iteration  21: 36106.717 ops/s
Iteration  22: 38709.828 ops/s
Iteration  23: 36218.744 ops/s
Iteration  24: 34999.469 ops/s
Iteration  25: 37045.873 ops/s
Iteration  26: 36814.786 ops/s
Iteration  27: 36600.907 ops/s
Iteration  28: 38561.285 ops/s
Iteration  29: 38269.386 ops/s
Iteration  30: 36164.098 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_812._Benchmark.benchmark_Cluster_812":
  37508.399 ±(99.9%) 907.232 ops/s [Average]
  (min, avg, max) = (34999.469, 37508.399, 40645.024), stdev = 1357.902
  CI (99.9%): [36601.167, 38415.631] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_812._Benchmark.benchmark_Cluster_812  thrpt   30  37508.399 ± 907.232  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_813._Benchmark.benchmark_Cluster_813$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_813._Benchmark.benchmark_Cluster_813

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.771 ops/s
# Warmup Iteration   2: 10014.089 ops/s
# Warmup Iteration   3: 38222.847 ops/s
# Warmup Iteration   4: 31039.017 ops/s
# Warmup Iteration   5: 36129.563 ops/s
# Warmup Iteration   6: 48720.499 ops/s
# Warmup Iteration   7: 61692.319 ops/s
# Warmup Iteration   8: 44730.776 ops/s
# Warmup Iteration   9: 119654.894 ops/s
# Warmup Iteration  10: 122261.773 ops/s
# Warmup Iteration  11: 119563.501 ops/s
# Warmup Iteration  12: 104210.877 ops/s
# Warmup Iteration  13: 124422.471 ops/s
# Warmup Iteration  14: 124949.029 ops/s
# Warmup Iteration  15: 133065.209 ops/s
# Warmup Iteration  16: 126755.643 ops/s
# Warmup Iteration  17: 132580.030 ops/s
# Warmup Iteration  18: 129926.883 ops/s
# Warmup Iteration  19: 130538.550 ops/s
# Warmup Iteration  20: 130763.183 ops/s
# Warmup Iteration  21: 130985.086 ops/s
# Warmup Iteration  22: 135872.981 ops/s
# Warmup Iteration  23: 133817.012 ops/s
# Warmup Iteration  24: 129496.928 ops/s
# Warmup Iteration  25: 126590.379 ops/s
# Warmup Iteration  26: 135616.611 ops/s
# Warmup Iteration  27: 129834.846 ops/s
# Warmup Iteration  28: 125734.574 ops/s
# Warmup Iteration  29: 132791.952 ops/s
# Warmup Iteration  30: 129592.058 ops/s
Iteration   1: 134764.126 ops/s
Iteration   2: 132882.920 ops/s
Iteration   3: 125638.365 ops/s
Iteration   4: 128363.608 ops/s
Iteration   5: 125566.588 ops/s
Iteration   6: 131017.910 ops/s
Iteration   7: 134581.759 ops/s
Iteration   8: 129463.223 ops/s
Iteration   9: 130296.603 ops/s
Iteration  10: 136569.666 ops/s
Iteration  11: 126975.617 ops/s
Iteration  12: 132061.567 ops/s
Iteration  13: 127976.759 ops/s
Iteration  14: 132175.636 ops/s
Iteration  15: 130480.974 ops/s
Iteration  16: 129240.223 ops/s
Iteration  17: 135403.251 ops/s
Iteration  18: 127076.068 ops/s
Iteration  19: 135288.579 ops/s
Iteration  20: 127958.502 ops/s
Iteration  21: 131415.585 ops/s
Iteration  22: 128709.328 ops/s
Iteration  23: 133122.152 ops/s
Iteration  24: 134759.600 ops/s
Iteration  25: 122429.674 ops/s
Iteration  26: 135855.649 ops/s
Iteration  27: 127976.485 ops/s
Iteration  28: 129035.088 ops/s
Iteration  29: 136116.319 ops/s
Iteration  30: 131224.943 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_813._Benchmark.benchmark_Cluster_813":
  130814.226 ±(99.9%) 2426.615 ops/s [Average]
  (min, avg, max) = (122429.674, 130814.226, 136569.666), stdev = 3632.043
  CI (99.9%): [128387.611, 133240.840] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_813._Benchmark.benchmark_Cluster_813  thrpt   30  130814.226 ± 2426.615  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_814._Benchmark.benchmark_Cluster_814$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_814._Benchmark.benchmark_Cluster_814

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.835 ops/s
# Warmup Iteration   2: 7446.155 ops/s
# Warmup Iteration   3: 27867.944 ops/s
# Warmup Iteration   4: 39865.156 ops/s
# Warmup Iteration   5: 40121.641 ops/s
# Warmup Iteration   6: 61557.401 ops/s
# Warmup Iteration   7: 66703.664 ops/s
# Warmup Iteration   8: 59268.801 ops/s
# Warmup Iteration   9: 80063.058 ops/s
# Warmup Iteration  10: 65069.716 ops/s
# Warmup Iteration  11: 67742.047 ops/s
# Warmup Iteration  12: 181300.272 ops/s
# Warmup Iteration  13: 188213.120 ops/s
# Warmup Iteration  14: 203059.711 ops/s
# Warmup Iteration  15: 194047.702 ops/s
# Warmup Iteration  16: 201455.715 ops/s
# Warmup Iteration  17: 192899.740 ops/s
# Warmup Iteration  18: 198746.671 ops/s
# Warmup Iteration  19: 202081.496 ops/s
# Warmup Iteration  20: 193830.231 ops/s
# Warmup Iteration  21: 206758.176 ops/s
# Warmup Iteration  22: 193633.767 ops/s
# Warmup Iteration  23: 196657.327 ops/s
# Warmup Iteration  24: 194163.401 ops/s
# Warmup Iteration  25: 202899.323 ops/s
# Warmup Iteration  26: 194866.575 ops/s
# Warmup Iteration  27: 199962.832 ops/s
# Warmup Iteration  28: 196326.421 ops/s
# Warmup Iteration  29: 201230.999 ops/s
# Warmup Iteration  30: 196707.080 ops/s
Iteration   1: 198587.587 ops/s
Iteration   2: 204876.194 ops/s
Iteration   3: 192559.799 ops/s
Iteration   4: 202055.807 ops/s
Iteration   5: 199221.977 ops/s
Iteration   6: 197971.755 ops/s
Iteration   7: 206520.081 ops/s
Iteration   8: 190232.341 ops/s
Iteration   9: 200755.663 ops/s
Iteration  10: 196957.774 ops/s
Iteration  11: 201392.216 ops/s
Iteration  12: 206937.636 ops/s
Iteration  13: 192858.127 ops/s
Iteration  14: 203537.614 ops/s
Iteration  15: 196368.312 ops/s
Iteration  16: 191352.284 ops/s
Iteration  17: 205877.309 ops/s
Iteration  18: 193975.181 ops/s
Iteration  19: 194902.709 ops/s
Iteration  20: 194813.142 ops/s
Iteration  21: 202724.786 ops/s
Iteration  22: 192711.181 ops/s
Iteration  23: 189919.876 ops/s
Iteration  24: 200009.199 ops/s
Iteration  25: 195351.958 ops/s
Iteration  26: 204138.326 ops/s
Iteration  27: 202342.010 ops/s
Iteration  28: 193853.196 ops/s
Iteration  29: 204111.651 ops/s
Iteration  30: 194749.027 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_814._Benchmark.benchmark_Cluster_814":
  198388.824 ±(99.9%) 3451.314 ops/s [Average]
  (min, avg, max) = (189919.876, 198388.824, 206937.636), stdev = 5165.765
  CI (99.9%): [194937.510, 201840.138] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_814._Benchmark.benchmark_Cluster_814  thrpt   30  198388.824 ± 3451.314  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_815._Benchmark.benchmark_Cluster_815$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_815._Benchmark.benchmark_Cluster_815

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.827 ops/s
# Warmup Iteration   2: 6915.690 ops/s
# Warmup Iteration   3: 22150.920 ops/s
# Warmup Iteration   4: 32165.459 ops/s
# Warmup Iteration   5: 34612.611 ops/s
# Warmup Iteration   6: 37203.550 ops/s
# Warmup Iteration   7: 51214.519 ops/s
# Warmup Iteration   8: 58232.300 ops/s
# Warmup Iteration   9: 44523.172 ops/s
# Warmup Iteration  10: 64581.261 ops/s
# Warmup Iteration  11: 126887.045 ops/s
# Warmup Iteration  12: 123689.845 ops/s
# Warmup Iteration  13: 122159.666 ops/s
# Warmup Iteration  14: 121822.015 ops/s
# Warmup Iteration  15: 128887.539 ops/s
# Warmup Iteration  16: 132507.509 ops/s
# Warmup Iteration  17: 119989.747 ops/s
# Warmup Iteration  18: 135366.902 ops/s
# Warmup Iteration  19: 129121.984 ops/s
# Warmup Iteration  20: 133308.294 ops/s
# Warmup Iteration  21: 135421.958 ops/s
# Warmup Iteration  22: 130308.185 ops/s
# Warmup Iteration  23: 129930.012 ops/s
# Warmup Iteration  24: 129502.655 ops/s
# Warmup Iteration  25: 131110.016 ops/s
# Warmup Iteration  26: 129984.535 ops/s
# Warmup Iteration  27: 136657.386 ops/s
# Warmup Iteration  28: 129080.263 ops/s
# Warmup Iteration  29: 134033.569 ops/s
# Warmup Iteration  30: 129256.539 ops/s
Iteration   1: 134559.805 ops/s
Iteration   2: 132027.674 ops/s
Iteration   3: 132255.735 ops/s
Iteration   4: 130644.425 ops/s
Iteration   5: 130895.641 ops/s
Iteration   6: 131701.899 ops/s
Iteration   7: 136708.047 ops/s
Iteration   8: 135702.205 ops/s
Iteration   9: 134511.380 ops/s
Iteration  10: 129686.386 ops/s
Iteration  11: 133028.771 ops/s
Iteration  12: 127928.230 ops/s
Iteration  13: 135669.188 ops/s
Iteration  14: 131490.807 ops/s
Iteration  15: 134625.985 ops/s
Iteration  16: 129291.951 ops/s
Iteration  17: 135757.964 ops/s
Iteration  18: 130368.162 ops/s
Iteration  19: 128764.800 ops/s
Iteration  20: 136911.052 ops/s
Iteration  21: 130653.221 ops/s
Iteration  22: 133161.987 ops/s
Iteration  23: 129427.189 ops/s
Iteration  24: 129759.887 ops/s
Iteration  25: 134842.782 ops/s
Iteration  26: 134612.193 ops/s
Iteration  27: 123774.280 ops/s
Iteration  28: 136346.057 ops/s
Iteration  29: 129690.324 ops/s
Iteration  30: 132519.003 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_815._Benchmark.benchmark_Cluster_815":
  132243.901 ±(99.9%) 2054.894 ops/s [Average]
  (min, avg, max) = (123774.280, 132243.901, 136911.052), stdev = 3075.669
  CI (99.9%): [130189.007, 134298.795] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_815._Benchmark.benchmark_Cluster_815  thrpt   30  132243.901 ± 2054.894  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_816._Benchmark.benchmark_Cluster_816$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_816._Benchmark.benchmark_Cluster_816

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10733.576 ops/s
# Warmup Iteration   2: 32936.139 ops/s
# Warmup Iteration   3: 42563.061 ops/s
# Warmup Iteration   4: 107958.397 ops/s
# Warmup Iteration   5: 149832.980 ops/s
# Warmup Iteration   6: 152981.179 ops/s
# Warmup Iteration   7: 149473.775 ops/s
# Warmup Iteration   8: 147983.842 ops/s
# Warmup Iteration   9: 152956.883 ops/s
# Warmup Iteration  10: 152604.818 ops/s
# Warmup Iteration  11: 146162.070 ops/s
# Warmup Iteration  12: 149380.413 ops/s
# Warmup Iteration  13: 147914.133 ops/s
# Warmup Iteration  14: 156158.117 ops/s
# Warmup Iteration  15: 149107.818 ops/s
# Warmup Iteration  16: 154925.019 ops/s
# Warmup Iteration  17: 163028.591 ops/s
# Warmup Iteration  18: 149438.451 ops/s
# Warmup Iteration  19: 163974.369 ops/s
# Warmup Iteration  20: 158167.675 ops/s
# Warmup Iteration  21: 161613.473 ops/s
# Warmup Iteration  22: 167083.310 ops/s
# Warmup Iteration  23: 150411.102 ops/s
# Warmup Iteration  24: 149688.962 ops/s
# Warmup Iteration  25: 167254.624 ops/s
# Warmup Iteration  26: 158155.859 ops/s
# Warmup Iteration  27: 161442.785 ops/s
# Warmup Iteration  28: 155711.269 ops/s
# Warmup Iteration  29: 157950.020 ops/s
# Warmup Iteration  30: 166819.264 ops/s
Iteration   1: 159319.742 ops/s
Iteration   2: 162503.466 ops/s
Iteration   3: 163550.567 ops/s
Iteration   4: 153908.352 ops/s
Iteration   5: 164289.479 ops/s
Iteration   6: 153436.080 ops/s
Iteration   7: 161697.334 ops/s
Iteration   8: 163616.739 ops/s
Iteration   9: 158151.117 ops/s
Iteration  10: 163451.806 ops/s
Iteration  11: 156661.358 ops/s
Iteration  12: 161778.231 ops/s
Iteration  13: 158971.750 ops/s
Iteration  14: 157845.914 ops/s
Iteration  15: 163669.989 ops/s
Iteration  16: 157468.135 ops/s
Iteration  17: 157670.194 ops/s
Iteration  18: 165428.692 ops/s
Iteration  19: 152931.464 ops/s
Iteration  20: 161092.931 ops/s
Iteration  21: 156862.759 ops/s
Iteration  22: 158641.319 ops/s
Iteration  23: 164095.077 ops/s
Iteration  24: 156500.819 ops/s
Iteration  25: 162939.877 ops/s
Iteration  26: 157016.936 ops/s
Iteration  27: 162328.277 ops/s
Iteration  28: 160341.427 ops/s
Iteration  29: 157838.367 ops/s
Iteration  30: 162190.843 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_816._Benchmark.benchmark_Cluster_816":
  159873.301 ±(99.9%) 2314.209 ops/s [Average]
  (min, avg, max) = (152931.464, 159873.301, 165428.692), stdev = 3463.799
  CI (99.9%): [157559.093, 162187.510] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_816._Benchmark.benchmark_Cluster_816  thrpt   30  159873.301 ± 2314.209  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_817._Benchmark.benchmark_Cluster_817$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_817._Benchmark.benchmark_Cluster_817

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15458.518 ops/s
# Warmup Iteration   2: 33831.122 ops/s
# Warmup Iteration   3: 42295.341 ops/s
# Warmup Iteration   4: 44075.305 ops/s
# Warmup Iteration   5: 101826.208 ops/s
# Warmup Iteration   6: 114996.575 ops/s
# Warmup Iteration   7: 123204.293 ops/s
# Warmup Iteration   8: 116164.526 ops/s
# Warmup Iteration   9: 116231.262 ops/s
# Warmup Iteration  10: 126443.986 ops/s
# Warmup Iteration  11: 125916.058 ops/s
# Warmup Iteration  12: 125253.595 ops/s
# Warmup Iteration  13: 122332.823 ops/s
# Warmup Iteration  14: 128670.650 ops/s
# Warmup Iteration  15: 117839.555 ops/s
# Warmup Iteration  16: 127648.953 ops/s
# Warmup Iteration  17: 126287.487 ops/s
# Warmup Iteration  18: 129872.693 ops/s
# Warmup Iteration  19: 131609.712 ops/s
# Warmup Iteration  20: 127882.033 ops/s
# Warmup Iteration  21: 130236.203 ops/s
# Warmup Iteration  22: 127189.116 ops/s
# Warmup Iteration  23: 130772.303 ops/s
# Warmup Iteration  24: 126040.395 ops/s
# Warmup Iteration  25: 128130.706 ops/s
# Warmup Iteration  26: 130440.422 ops/s
# Warmup Iteration  27: 125906.692 ops/s
# Warmup Iteration  28: 130068.467 ops/s
# Warmup Iteration  29: 127847.148 ops/s
# Warmup Iteration  30: 126598.390 ops/s
Iteration   1: 135408.292 ops/s
Iteration   2: 130924.587 ops/s
Iteration   3: 128007.619 ops/s
Iteration   4: 128602.788 ops/s
Iteration   5: 130491.701 ops/s
Iteration   6: 126215.817 ops/s
Iteration   7: 130201.858 ops/s
Iteration   8: 124993.384 ops/s
Iteration   9: 128027.436 ops/s
Iteration  10: 129879.363 ops/s
Iteration  11: 130489.849 ops/s
Iteration  12: 126403.477 ops/s
Iteration  13: 128979.181 ops/s
Iteration  14: 129506.631 ops/s
Iteration  15: 132555.977 ops/s
Iteration  16: 126551.612 ops/s
Iteration  17: 126482.499 ops/s
Iteration  18: 133675.095 ops/s
Iteration  19: 127741.235 ops/s
Iteration  20: 132542.126 ops/s
Iteration  21: 124696.135 ops/s
Iteration  22: 128102.332 ops/s
Iteration  23: 130737.805 ops/s
Iteration  24: 123581.480 ops/s
Iteration  25: 134126.061 ops/s
Iteration  26: 125201.323 ops/s
Iteration  27: 127199.264 ops/s
Iteration  28: 131365.594 ops/s
Iteration  29: 126740.577 ops/s
Iteration  30: 128565.452 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_817._Benchmark.benchmark_Cluster_817":
  128933.218 ±(99.9%) 1968.323 ops/s [Average]
  (min, avg, max) = (123581.480, 128933.218, 135408.292), stdev = 2946.094
  CI (99.9%): [126964.895, 130901.541] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_817._Benchmark.benchmark_Cluster_817  thrpt   30  128933.218 ± 1968.323  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_818._Benchmark.benchmark_Cluster_818$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_818._Benchmark.benchmark_Cluster_818

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2140.056 ops/s
# Warmup Iteration   2: 23488.034 ops/s
# Warmup Iteration   3: 34769.691 ops/s
# Warmup Iteration   4: 59749.772 ops/s
# Warmup Iteration   5: 82379.528 ops/s
# Warmup Iteration   6: 85160.020 ops/s
# Warmup Iteration   7: 89662.877 ops/s
# Warmup Iteration   8: 87651.455 ops/s
# Warmup Iteration   9: 92436.769 ops/s
# Warmup Iteration  10: 86866.080 ops/s
# Warmup Iteration  11: 81166.076 ops/s
# Warmup Iteration  12: 90307.896 ops/s
# Warmup Iteration  13: 88971.524 ops/s
# Warmup Iteration  14: 90499.078 ops/s
# Warmup Iteration  15: 85991.411 ops/s
# Warmup Iteration  16: 93046.483 ops/s
# Warmup Iteration  17: 87017.250 ops/s
# Warmup Iteration  18: 90467.752 ops/s
# Warmup Iteration  19: 93217.435 ops/s
# Warmup Iteration  20: 92576.397 ops/s
# Warmup Iteration  21: 93388.730 ops/s
# Warmup Iteration  22: 93977.365 ops/s
# Warmup Iteration  23: 90115.387 ops/s
# Warmup Iteration  24: 91057.146 ops/s
# Warmup Iteration  25: 94736.230 ops/s
# Warmup Iteration  26: 92948.944 ops/s
# Warmup Iteration  27: 89247.611 ops/s
# Warmup Iteration  28: 94782.064 ops/s
# Warmup Iteration  29: 88903.275 ops/s
# Warmup Iteration  30: 93715.881 ops/s
Iteration   1: 93218.991 ops/s
Iteration   2: 87716.118 ops/s
Iteration   3: 89244.036 ops/s
Iteration   4: 92006.680 ops/s
Iteration   5: 90299.978 ops/s
Iteration   6: 94474.664 ops/s
Iteration   7: 95886.986 ops/s
Iteration   8: 90872.214 ops/s
Iteration   9: 95912.762 ops/s
Iteration  10: 88701.684 ops/s
Iteration  11: 93188.505 ops/s
Iteration  12: 92304.372 ops/s
Iteration  13: 91896.843 ops/s
Iteration  14: 94199.497 ops/s
Iteration  15: 95770.352 ops/s
Iteration  16: 90967.815 ops/s
Iteration  17: 95171.873 ops/s
Iteration  18: 93171.284 ops/s
Iteration  19: 89440.377 ops/s
Iteration  20: 93699.724 ops/s
Iteration  21: 90672.753 ops/s
Iteration  22: 94681.358 ops/s
Iteration  23: 90411.072 ops/s
Iteration  24: 91344.740 ops/s
Iteration  25: 95665.408 ops/s
Iteration  26: 70559.095 ops/s
Iteration  27: 91014.916 ops/s
Iteration  28: 89363.766 ops/s
Iteration  29: 92129.764 ops/s
Iteration  30: 89635.903 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_818._Benchmark.benchmark_Cluster_818":
  91454.118 ±(99.9%) 3067.111 ops/s [Average]
  (min, avg, max) = (70559.095, 91454.118, 95912.762), stdev = 4590.708
  CI (99.9%): [88387.006, 94521.229] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_818._Benchmark.benchmark_Cluster_818  thrpt   30  91454.118 ± 3067.111  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_819._Benchmark.benchmark_Cluster_819$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_819._Benchmark.benchmark_Cluster_819

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 881.282 ops/s
# Warmup Iteration   2: 6989.310 ops/s
# Warmup Iteration   3: 21051.612 ops/s
# Warmup Iteration   4: 18646.515 ops/s
# Warmup Iteration   5: 23078.199 ops/s
# Warmup Iteration   6: 24605.860 ops/s
# Warmup Iteration   7: 38201.547 ops/s
# Warmup Iteration   8: 37213.394 ops/s
# Warmup Iteration   9: 50846.871 ops/s
# Warmup Iteration  10: 82669.390 ops/s
# Warmup Iteration  11: 83925.162 ops/s
# Warmup Iteration  12: 86300.715 ops/s
# Warmup Iteration  13: 87462.140 ops/s
# Warmup Iteration  14: 85095.249 ops/s
# Warmup Iteration  15: 87607.016 ops/s
# Warmup Iteration  16: 84470.346 ops/s
# Warmup Iteration  17: 94964.759 ops/s
# Warmup Iteration  18: 89077.061 ops/s
# Warmup Iteration  19: 90112.476 ops/s
# Warmup Iteration  20: 90852.232 ops/s
# Warmup Iteration  21: 85460.531 ops/s
# Warmup Iteration  22: 93199.782 ops/s
# Warmup Iteration  23: 89652.073 ops/s
# Warmup Iteration  24: 88304.252 ops/s
# Warmup Iteration  25: 94006.922 ops/s
# Warmup Iteration  26: 93744.040 ops/s
# Warmup Iteration  27: 87362.990 ops/s
# Warmup Iteration  28: 92263.618 ops/s
# Warmup Iteration  29: 88812.558 ops/s
# Warmup Iteration  30: 91042.657 ops/s
Iteration   1: 89452.392 ops/s
Iteration   2: 90109.976 ops/s
Iteration   3: 89946.821 ops/s
Iteration   4: 89552.312 ops/s
Iteration   5: 91995.647 ops/s
Iteration   6: 88139.152 ops/s
Iteration   7: 92641.949 ops/s
Iteration   8: 90928.488 ops/s
Iteration   9: 91579.863 ops/s
Iteration  10: 88023.407 ops/s
Iteration  11: 90878.983 ops/s
Iteration  12: 89505.070 ops/s
Iteration  13: 90417.695 ops/s
Iteration  14: 88238.773 ops/s
Iteration  15: 91193.997 ops/s
Iteration  16: 89060.465 ops/s
Iteration  17: 93538.456 ops/s
Iteration  18: 87773.117 ops/s
Iteration  19: 89329.624 ops/s
Iteration  20: 92032.237 ops/s
Iteration  21: 88241.959 ops/s
Iteration  22: 91535.952 ops/s
Iteration  23: 87706.350 ops/s
Iteration  24: 89460.154 ops/s
Iteration  25: 89657.989 ops/s
Iteration  26: 92171.250 ops/s
Iteration  27: 87526.186 ops/s
Iteration  28: 92997.180 ops/s
Iteration  29: 88513.209 ops/s
Iteration  30: 92077.069 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_819._Benchmark.benchmark_Cluster_819":
  90140.858 ±(99.9%) 1162.068 ops/s [Average]
  (min, avg, max) = (87526.186, 90140.858, 93538.456), stdev = 1739.328
  CI (99.9%): [88978.790, 91302.925] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_819._Benchmark.benchmark_Cluster_819  thrpt   30  90140.858 ± 1162.068  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_82._Benchmark.benchmark_Cluster_82$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_82._Benchmark.benchmark_Cluster_82

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3446.481 ops/s
# Warmup Iteration   2: 15093.450 ops/s
# Warmup Iteration   3: 23502.498 ops/s
# Warmup Iteration   4: 38196.447 ops/s
# Warmup Iteration   5: 41576.720 ops/s
# Warmup Iteration   6: 53628.505 ops/s
# Warmup Iteration   7: 92445.013 ops/s
# Warmup Iteration   8: 85468.835 ops/s
# Warmup Iteration   9: 97168.434 ops/s
# Warmup Iteration  10: 96740.029 ops/s
# Warmup Iteration  11: 95968.533 ops/s
# Warmup Iteration  12: 94344.194 ops/s
# Warmup Iteration  13: 93046.251 ops/s
# Warmup Iteration  14: 92389.902 ops/s
# Warmup Iteration  15: 89911.706 ops/s
# Warmup Iteration  16: 96977.818 ops/s
# Warmup Iteration  17: 100775.867 ops/s
# Warmup Iteration  18: 96110.853 ops/s
# Warmup Iteration  19: 98536.094 ops/s
# Warmup Iteration  20: 97296.946 ops/s
# Warmup Iteration  21: 100926.419 ops/s
# Warmup Iteration  22: 98290.186 ops/s
# Warmup Iteration  23: 95269.612 ops/s
# Warmup Iteration  24: 97644.548 ops/s
# Warmup Iteration  25: 93662.149 ops/s
# Warmup Iteration  26: 97041.662 ops/s
# Warmup Iteration  27: 98147.447 ops/s
# Warmup Iteration  28: 95549.796 ops/s
# Warmup Iteration  29: 100363.660 ops/s
# Warmup Iteration  30: 96618.670 ops/s
Iteration   1: 96043.721 ops/s
Iteration   2: 98880.933 ops/s
Iteration   3: 95386.299 ops/s
Iteration   4: 98458.876 ops/s
Iteration   5: 102089.136 ops/s
Iteration   6: 101456.475 ops/s
Iteration   7: 94283.032 ops/s
Iteration   8: 96825.211 ops/s
Iteration   9: 97907.479 ops/s
Iteration  10: 95869.014 ops/s
Iteration  11: 98578.380 ops/s
Iteration  12: 98811.832 ops/s
Iteration  13: 99128.138 ops/s
Iteration  14: 96414.850 ops/s
Iteration  15: 94707.180 ops/s
Iteration  16: 99291.322 ops/s
Iteration  17: 94581.087 ops/s
Iteration  18: 98084.326 ops/s
Iteration  19: 82041.936 ops/s
Iteration  20: 96159.153 ops/s
Iteration  21: 98413.907 ops/s
Iteration  22: 96663.079 ops/s
Iteration  23: 99306.190 ops/s
Iteration  24: 96869.500 ops/s
Iteration  25: 96612.498 ops/s
Iteration  26: 98755.432 ops/s
Iteration  27: 97371.385 ops/s
Iteration  28: 97783.671 ops/s
Iteration  29: 95989.455 ops/s
Iteration  30: 96713.170 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_82._Benchmark.benchmark_Cluster_82":
  96982.556 ±(99.9%) 2252.448 ops/s [Average]
  (min, avg, max) = (82041.936, 96982.556, 102089.136), stdev = 3371.359
  CI (99.9%): [94730.107, 99235.004] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_82._Benchmark.benchmark_Cluster_82  thrpt   30  96982.556 ± 2252.448  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_820._Benchmark.benchmark_Cluster_820$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_820._Benchmark.benchmark_Cluster_820

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12304.176 ops/s
# Warmup Iteration   2: 26156.134 ops/s
# Warmup Iteration   3: 67409.088 ops/s
# Warmup Iteration   4: 108271.372 ops/s
# Warmup Iteration   5: 111781.720 ops/s
# Warmup Iteration   6: 111433.018 ops/s
# Warmup Iteration   7: 108534.094 ops/s
# Warmup Iteration   8: 110812.280 ops/s
# Warmup Iteration   9: 107937.877 ops/s
# Warmup Iteration  10: 108451.378 ops/s
# Warmup Iteration  11: 112257.679 ops/s
# Warmup Iteration  12: 110274.374 ops/s
# Warmup Iteration  13: 113160.466 ops/s
# Warmup Iteration  14: 111748.461 ops/s
# Warmup Iteration  15: 115798.911 ops/s
# Warmup Iteration  16: 114436.501 ops/s
# Warmup Iteration  17: 114185.206 ops/s
# Warmup Iteration  18: 115128.836 ops/s
# Warmup Iteration  19: 113517.705 ops/s
# Warmup Iteration  20: 116083.007 ops/s
# Warmup Iteration  21: 114313.196 ops/s
# Warmup Iteration  22: 114169.688 ops/s
# Warmup Iteration  23: 118298.128 ops/s
# Warmup Iteration  24: 111381.687 ops/s
# Warmup Iteration  25: 113553.476 ops/s
# Warmup Iteration  26: 113642.776 ops/s
# Warmup Iteration  27: 118085.799 ops/s
# Warmup Iteration  28: 110770.959 ops/s
# Warmup Iteration  29: 116577.643 ops/s
# Warmup Iteration  30: 112375.553 ops/s
Iteration   1: 120049.029 ops/s
Iteration   2: 118009.879 ops/s
Iteration   3: 116681.309 ops/s
Iteration   4: 120486.410 ops/s
Iteration   5: 116346.369 ops/s
Iteration   6: 113996.661 ops/s
Iteration   7: 112787.746 ops/s
Iteration   8: 118530.028 ops/s
Iteration   9: 111586.749 ops/s
Iteration  10: 117172.776 ops/s
Iteration  11: 113469.571 ops/s
Iteration  12: 117947.224 ops/s
Iteration  13: 112944.689 ops/s
Iteration  14: 116705.132 ops/s
Iteration  15: 116706.178 ops/s
Iteration  16: 114801.511 ops/s
Iteration  17: 114494.781 ops/s
Iteration  18: 119531.943 ops/s
Iteration  19: 115055.429 ops/s
Iteration  20: 118384.054 ops/s
Iteration  21: 112154.492 ops/s
Iteration  22: 117411.501 ops/s
Iteration  23: 119916.043 ops/s
Iteration  24: 114049.764 ops/s
Iteration  25: 116983.172 ops/s
Iteration  26: 116184.353 ops/s
Iteration  27: 116479.605 ops/s
Iteration  28: 115609.582 ops/s
Iteration  29: 112334.083 ops/s
Iteration  30: 116238.774 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_820._Benchmark.benchmark_Cluster_820":
  116101.628 ±(99.9%) 1648.241 ops/s [Average]
  (min, avg, max) = (111586.749, 116101.628, 120486.410), stdev = 2467.009
  CI (99.9%): [114453.387, 117749.868] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_820._Benchmark.benchmark_Cluster_820  thrpt   30  116101.628 ± 1648.241  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_821._Benchmark.benchmark_Cluster_821$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_821._Benchmark.benchmark_Cluster_821

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 939.175 ops/s
# Warmup Iteration   2: 3414.530 ops/s
# Warmup Iteration   3: 16608.534 ops/s
# Warmup Iteration   4: 19885.925 ops/s
# Warmup Iteration   5: 19339.902 ops/s
# Warmup Iteration   6: 27293.604 ops/s
# Warmup Iteration   7: 30502.984 ops/s
# Warmup Iteration   8: 40132.759 ops/s
# Warmup Iteration   9: 38655.545 ops/s
# Warmup Iteration  10: 31161.603 ops/s
# Warmup Iteration  11: 30657.231 ops/s
# Warmup Iteration  12: 58922.016 ops/s
# Warmup Iteration  13: 70884.883 ops/s
# Warmup Iteration  14: 84050.659 ops/s
# Warmup Iteration  15: 81492.355 ops/s
# Warmup Iteration  16: 86740.218 ops/s
# Warmup Iteration  17: 81471.915 ops/s
# Warmup Iteration  18: 78741.820 ops/s
# Warmup Iteration  19: 89149.583 ops/s
# Warmup Iteration  20: 84507.659 ops/s
# Warmup Iteration  21: 87667.061 ops/s
# Warmup Iteration  22: 85098.002 ops/s
# Warmup Iteration  23: 86425.462 ops/s
# Warmup Iteration  24: 89593.117 ops/s
# Warmup Iteration  25: 86986.658 ops/s
# Warmup Iteration  26: 85113.327 ops/s
# Warmup Iteration  27: 85165.167 ops/s
# Warmup Iteration  28: 86565.250 ops/s
# Warmup Iteration  29: 86540.522 ops/s
# Warmup Iteration  30: 87971.579 ops/s
Iteration   1: 85227.250 ops/s
Iteration   2: 88164.126 ops/s
Iteration   3: 85987.322 ops/s
Iteration   4: 84386.492 ops/s
Iteration   5: 86630.812 ops/s
Iteration   6: 84994.952 ops/s
Iteration   7: 86409.481 ops/s
Iteration   8: 86564.717 ops/s
Iteration   9: 82688.281 ops/s
Iteration  10: 87452.384 ops/s
Iteration  11: 86119.503 ops/s
Iteration  12: 88086.629 ops/s
Iteration  13: 75374.054 ops/s
Iteration  14: 75439.092 ops/s
Iteration  15: 86421.972 ops/s
Iteration  16: 82936.852 ops/s
Iteration  17: 87873.181 ops/s
Iteration  18: 81603.626 ops/s
Iteration  19: 85987.350 ops/s
Iteration  20: 88907.049 ops/s
Iteration  21: 84741.203 ops/s
Iteration  22: 87856.227 ops/s
Iteration  23: 86522.675 ops/s
Iteration  24: 87016.134 ops/s
Iteration  25: 85649.404 ops/s
Iteration  26: 87906.622 ops/s
Iteration  27: 87588.270 ops/s
Iteration  28: 80557.078 ops/s
Iteration  29: 87627.928 ops/s
Iteration  30: 85934.479 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_821._Benchmark.benchmark_Cluster_821":
  85288.505 ±(99.9%) 2227.056 ops/s [Average]
  (min, avg, max) = (75374.054, 85288.505, 88907.049), stdev = 3333.353
  CI (99.9%): [83061.448, 87515.561] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_821._Benchmark.benchmark_Cluster_821  thrpt   30  85288.505 ± 2227.056  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_822._Benchmark.benchmark_Cluster_822$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_822._Benchmark.benchmark_Cluster_822

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.691 ops/s
# Warmup Iteration   2: 3086.835 ops/s
# Warmup Iteration   3: 17352.979 ops/s
# Warmup Iteration   4: 21978.599 ops/s
# Warmup Iteration   5: 25011.862 ops/s
# Warmup Iteration   6: 36932.154 ops/s
# Warmup Iteration   7: 37698.402 ops/s
# Warmup Iteration   8: 40043.937 ops/s
# Warmup Iteration   9: 44121.818 ops/s
# Warmup Iteration  10: 40162.538 ops/s
# Warmup Iteration  11: 41653.925 ops/s
# Warmup Iteration  12: 32007.992 ops/s
# Warmup Iteration  13: 74360.492 ops/s
# Warmup Iteration  14: 108819.338 ops/s
# Warmup Iteration  15: 111315.369 ops/s
# Warmup Iteration  16: 104122.052 ops/s
# Warmup Iteration  17: 108786.603 ops/s
# Warmup Iteration  18: 115075.780 ops/s
# Warmup Iteration  19: 107497.963 ops/s
# Warmup Iteration  20: 113702.511 ops/s
# Warmup Iteration  21: 109103.928 ops/s
# Warmup Iteration  22: 109387.895 ops/s
# Warmup Iteration  23: 106897.288 ops/s
# Warmup Iteration  24: 106940.582 ops/s
# Warmup Iteration  25: 116791.723 ops/s
# Warmup Iteration  26: 101548.080 ops/s
# Warmup Iteration  27: 114110.271 ops/s
# Warmup Iteration  28: 110512.674 ops/s
# Warmup Iteration  29: 108027.053 ops/s
# Warmup Iteration  30: 109056.889 ops/s
Iteration   1: 107876.864 ops/s
Iteration   2: 112006.688 ops/s
Iteration   3: 109638.113 ops/s
Iteration   4: 113876.816 ops/s
Iteration   5: 113596.552 ops/s
Iteration   6: 109369.944 ops/s
Iteration   7: 115676.814 ops/s
Iteration   8: 113917.085 ops/s
Iteration   9: 109588.842 ops/s
Iteration  10: 112052.748 ops/s
Iteration  11: 108807.336 ops/s
Iteration  12: 111654.248 ops/s
Iteration  13: 109935.871 ops/s
Iteration  14: 110372.869 ops/s
Iteration  15: 113568.030 ops/s
Iteration  16: 109505.973 ops/s
Iteration  17: 112350.028 ops/s
Iteration  18: 110655.368 ops/s
Iteration  19: 113885.171 ops/s
Iteration  20: 115120.657 ops/s
Iteration  21: 113481.947 ops/s
Iteration  22: 111182.967 ops/s
Iteration  23: 114257.019 ops/s
Iteration  24: 108749.469 ops/s
Iteration  25: 111600.138 ops/s
Iteration  26: 114591.519 ops/s
Iteration  27: 108730.282 ops/s
Iteration  28: 111959.341 ops/s
Iteration  29: 112626.394 ops/s
Iteration  30: 107284.243 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_822._Benchmark.benchmark_Cluster_822":
  111597.311 ±(99.9%) 1537.406 ops/s [Average]
  (min, avg, max) = (107284.243, 111597.311, 115676.814), stdev = 2301.117
  CI (99.9%): [110059.905, 113134.717] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_822._Benchmark.benchmark_Cluster_822  thrpt   30  111597.311 ± 1537.406  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_823._Benchmark.benchmark_Cluster_823$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_823._Benchmark.benchmark_Cluster_823

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2675.509 ops/s
# Warmup Iteration   2: 20308.871 ops/s
# Warmup Iteration   3: 29321.700 ops/s
# Warmup Iteration   4: 33960.131 ops/s
# Warmup Iteration   5: 39118.996 ops/s
# Warmup Iteration   6: 50063.799 ops/s
# Warmup Iteration   7: 83822.830 ops/s
# Warmup Iteration   8: 90915.471 ops/s
# Warmup Iteration   9: 93991.424 ops/s
# Warmup Iteration  10: 95525.191 ops/s
# Warmup Iteration  11: 93974.050 ops/s
# Warmup Iteration  12: 91628.007 ops/s
# Warmup Iteration  13: 96662.265 ops/s
# Warmup Iteration  14: 92631.109 ops/s
# Warmup Iteration  15: 96798.381 ops/s
# Warmup Iteration  16: 97122.577 ops/s
# Warmup Iteration  17: 92658.878 ops/s
# Warmup Iteration  18: 97444.449 ops/s
# Warmup Iteration  19: 95120.118 ops/s
# Warmup Iteration  20: 98456.065 ops/s
# Warmup Iteration  21: 92591.826 ops/s
# Warmup Iteration  22: 97081.283 ops/s
# Warmup Iteration  23: 95917.048 ops/s
# Warmup Iteration  24: 93085.547 ops/s
# Warmup Iteration  25: 99800.499 ops/s
# Warmup Iteration  26: 93333.415 ops/s
# Warmup Iteration  27: 94171.150 ops/s
# Warmup Iteration  28: 99440.997 ops/s
# Warmup Iteration  29: 94562.331 ops/s
# Warmup Iteration  30: 100986.075 ops/s
Iteration   1: 93427.919 ops/s
Iteration   2: 95698.661 ops/s
Iteration   3: 99721.212 ops/s
Iteration   4: 93693.353 ops/s
Iteration   5: 94395.455 ops/s
Iteration   6: 99198.985 ops/s
Iteration   7: 77586.552 ops/s
Iteration   8: 99951.820 ops/s
Iteration   9: 95511.785 ops/s
Iteration  10: 92813.290 ops/s
Iteration  11: 99036.598 ops/s
Iteration  12: 94694.726 ops/s
Iteration  13: 99121.519 ops/s
Iteration  14: 92685.167 ops/s
Iteration  15: 95486.509 ops/s
Iteration  16: 100444.790 ops/s
Iteration  17: 92408.244 ops/s
Iteration  18: 95831.611 ops/s
Iteration  19: 95955.504 ops/s
Iteration  20: 98927.329 ops/s
Iteration  21: 93973.840 ops/s
Iteration  22: 96103.579 ops/s
Iteration  23: 99175.775 ops/s
Iteration  24: 94452.720 ops/s
Iteration  25: 100970.296 ops/s
Iteration  26: 93832.475 ops/s
Iteration  27: 98974.106 ops/s
Iteration  28: 95653.496 ops/s
Iteration  29: 94442.632 ops/s
Iteration  30: 97633.349 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_823._Benchmark.benchmark_Cluster_823":
  95726.777 ±(99.9%) 2868.949 ops/s [Average]
  (min, avg, max) = (77586.552, 95726.777, 100970.296), stdev = 4294.108
  CI (99.9%): [92857.828, 98595.725] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_823._Benchmark.benchmark_Cluster_823  thrpt   30  95726.777 ± 2868.949  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_824._Benchmark.benchmark_Cluster_824$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_824._Benchmark.benchmark_Cluster_824

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12363.168 ops/s
# Warmup Iteration   2: 49818.230 ops/s
# Warmup Iteration   3: 82867.426 ops/s
# Warmup Iteration   4: 84269.714 ops/s
# Warmup Iteration   5: 83467.357 ops/s
# Warmup Iteration   6: 93174.636 ops/s
# Warmup Iteration   7: 92091.024 ops/s
# Warmup Iteration   8: 96046.541 ops/s
# Warmup Iteration   9: 91006.571 ops/s
# Warmup Iteration  10: 91154.411 ops/s
# Warmup Iteration  11: 92324.889 ops/s
# Warmup Iteration  12: 90944.771 ops/s
# Warmup Iteration  13: 92408.616 ops/s
# Warmup Iteration  14: 91847.428 ops/s
# Warmup Iteration  15: 94293.352 ops/s
# Warmup Iteration  16: 91555.047 ops/s
# Warmup Iteration  17: 95831.660 ops/s
# Warmup Iteration  18: 97872.068 ops/s
# Warmup Iteration  19: 92483.140 ops/s
# Warmup Iteration  20: 96783.783 ops/s
# Warmup Iteration  21: 96018.551 ops/s
# Warmup Iteration  22: 93966.018 ops/s
# Warmup Iteration  23: 96994.072 ops/s
# Warmup Iteration  24: 97425.718 ops/s
# Warmup Iteration  25: 92597.206 ops/s
# Warmup Iteration  26: 96354.523 ops/s
# Warmup Iteration  27: 94248.772 ops/s
# Warmup Iteration  28: 96466.032 ops/s
# Warmup Iteration  29: 100135.923 ops/s
# Warmup Iteration  30: 92686.793 ops/s
Iteration   1: 101718.409 ops/s
Iteration   2: 98851.912 ops/s
Iteration   3: 92660.458 ops/s
Iteration   4: 98399.854 ops/s
Iteration   5: 93918.006 ops/s
Iteration   6: 94099.992 ops/s
Iteration   7: 100073.749 ops/s
Iteration   8: 92484.730 ops/s
Iteration   9: 99302.038 ops/s
Iteration  10: 93179.860 ops/s
Iteration  11: 97454.046 ops/s
Iteration  12: 101343.720 ops/s
Iteration  13: 96524.944 ops/s
Iteration  14: 94294.486 ops/s
Iteration  15: 95954.732 ops/s
Iteration  16: 96906.181 ops/s
Iteration  17: 96966.426 ops/s
Iteration  18: 99230.601 ops/s
Iteration  19: 97724.941 ops/s
Iteration  20: 95878.413 ops/s
Iteration  21: 100380.544 ops/s
Iteration  22: 92115.886 ops/s
Iteration  23: 96008.736 ops/s
Iteration  24: 101163.187 ops/s
Iteration  25: 94349.945 ops/s
Iteration  26: 98553.717 ops/s
Iteration  27: 94264.183 ops/s
Iteration  28: 96576.822 ops/s
Iteration  29: 98640.863 ops/s
Iteration  30: 93350.092 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_824._Benchmark.benchmark_Cluster_824":
  96745.716 ±(99.9%) 1895.300 ops/s [Average]
  (min, avg, max) = (92115.886, 96745.716, 101718.409), stdev = 2836.796
  CI (99.9%): [94850.416, 98641.016] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_824._Benchmark.benchmark_Cluster_824  thrpt   30  96745.716 ± 1895.300  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_825._Benchmark.benchmark_Cluster_825$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_825._Benchmark.benchmark_Cluster_825

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3696.298 ops/s
# Warmup Iteration   2: 22987.518 ops/s
# Warmup Iteration   3: 35028.480 ops/s
# Warmup Iteration   4: 44922.865 ops/s
# Warmup Iteration   5: 56491.059 ops/s
# Warmup Iteration   6: 92137.560 ops/s
# Warmup Iteration   7: 93450.816 ops/s
# Warmup Iteration   8: 93955.539 ops/s
# Warmup Iteration   9: 91705.300 ops/s
# Warmup Iteration  10: 94484.284 ops/s
# Warmup Iteration  11: 90002.260 ops/s
# Warmup Iteration  12: 94158.380 ops/s
# Warmup Iteration  13: 91620.101 ops/s
# Warmup Iteration  14: 95554.393 ops/s
# Warmup Iteration  15: 91489.525 ops/s
# Warmup Iteration  16: 94839.906 ops/s
# Warmup Iteration  17: 98736.003 ops/s
# Warmup Iteration  18: 97387.735 ops/s
# Warmup Iteration  19: 94906.330 ops/s
# Warmup Iteration  20: 98105.480 ops/s
# Warmup Iteration  21: 98745.481 ops/s
# Warmup Iteration  22: 96973.542 ops/s
# Warmup Iteration  23: 100031.503 ops/s
# Warmup Iteration  24: 94770.985 ops/s
# Warmup Iteration  25: 95198.601 ops/s
# Warmup Iteration  26: 102650.753 ops/s
# Warmup Iteration  27: 96636.506 ops/s
# Warmup Iteration  28: 98547.423 ops/s
# Warmup Iteration  29: 94836.019 ops/s
# Warmup Iteration  30: 100783.731 ops/s
Iteration   1: 92265.090 ops/s
Iteration   2: 82636.959 ops/s
Iteration   3: 101590.040 ops/s
Iteration   4: 95472.156 ops/s
Iteration   5: 100809.594 ops/s
Iteration   6: 95973.627 ops/s
Iteration   7: 96951.523 ops/s
Iteration   8: 99254.203 ops/s
Iteration   9: 94489.846 ops/s
Iteration  10: 99679.440 ops/s
Iteration  11: 101436.919 ops/s
Iteration  12: 95402.224 ops/s
Iteration  13: 99878.193 ops/s
Iteration  14: 96212.262 ops/s
Iteration  15: 97555.625 ops/s
Iteration  16: 99914.435 ops/s
Iteration  17: 97047.673 ops/s
Iteration  18: 99187.438 ops/s
Iteration  19: 97245.181 ops/s
Iteration  20: 96431.505 ops/s
Iteration  21: 96722.956 ops/s
Iteration  22: 97726.890 ops/s
Iteration  23: 100022.758 ops/s
Iteration  24: 95361.744 ops/s
Iteration  25: 98689.868 ops/s
Iteration  26: 96847.544 ops/s
Iteration  27: 96052.401 ops/s
Iteration  28: 98267.140 ops/s
Iteration  29: 98705.061 ops/s
Iteration  30: 95416.362 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_825._Benchmark.benchmark_Cluster_825":
  97108.222 ±(99.9%) 2335.064 ops/s [Average]
  (min, avg, max) = (82636.959, 97108.222, 101590.040), stdev = 3495.015
  CI (99.9%): [94773.158, 99443.286] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_825._Benchmark.benchmark_Cluster_825  thrpt   30  97108.222 ± 2335.064  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_826._Benchmark.benchmark_Cluster_826$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_826._Benchmark.benchmark_Cluster_826

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8608.701 ops/s
# Warmup Iteration   2: 54609.970 ops/s
# Warmup Iteration   3: 55252.141 ops/s
# Warmup Iteration   4: 98332.416 ops/s
# Warmup Iteration   5: 92156.196 ops/s
# Warmup Iteration   6: 102393.599 ops/s
# Warmup Iteration   7: 101023.727 ops/s
# Warmup Iteration   8: 100686.337 ops/s
# Warmup Iteration   9: 100301.199 ops/s
# Warmup Iteration  10: 98895.296 ops/s
# Warmup Iteration  11: 99622.177 ops/s
# Warmup Iteration  12: 98613.630 ops/s
# Warmup Iteration  13: 103645.196 ops/s
# Warmup Iteration  14: 98706.212 ops/s
# Warmup Iteration  15: 101952.900 ops/s
# Warmup Iteration  16: 103046.972 ops/s
# Warmup Iteration  17: 99524.360 ops/s
# Warmup Iteration  18: 108625.723 ops/s
# Warmup Iteration  19: 109136.689 ops/s
# Warmup Iteration  20: 99864.256 ops/s
# Warmup Iteration  21: 106669.634 ops/s
# Warmup Iteration  22: 108185.324 ops/s
# Warmup Iteration  23: 101861.846 ops/s
# Warmup Iteration  24: 108162.863 ops/s
# Warmup Iteration  25: 102490.180 ops/s
# Warmup Iteration  26: 107386.522 ops/s
# Warmup Iteration  27: 99674.231 ops/s
# Warmup Iteration  28: 104799.196 ops/s
# Warmup Iteration  29: 105225.675 ops/s
# Warmup Iteration  30: 102560.661 ops/s
Iteration   1: 105434.447 ops/s
Iteration   2: 100061.835 ops/s
Iteration   3: 106599.052 ops/s
Iteration   4: 101903.082 ops/s
Iteration   5: 101641.511 ops/s
Iteration   6: 105320.728 ops/s
Iteration   7: 102405.946 ops/s
Iteration   8: 104910.846 ops/s
Iteration   9: 104064.572 ops/s
Iteration  10: 102722.778 ops/s
Iteration  11: 105111.021 ops/s
Iteration  12: 105139.246 ops/s
Iteration  13: 105283.805 ops/s
Iteration  14: 100689.214 ops/s
Iteration  15: 102871.348 ops/s
Iteration  16: 108247.618 ops/s
Iteration  17: 101004.238 ops/s
Iteration  18: 105920.053 ops/s
Iteration  19: 102614.427 ops/s
Iteration  20: 102907.891 ops/s
Iteration  21: 105422.555 ops/s
Iteration  22: 101833.663 ops/s
Iteration  23: 106911.599 ops/s
Iteration  24: 99722.299 ops/s
Iteration  25: 108688.444 ops/s
Iteration  26: 102970.114 ops/s
Iteration  27: 105847.976 ops/s
Iteration  28: 104030.075 ops/s
Iteration  29: 106676.420 ops/s
Iteration  30: 103522.692 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_826._Benchmark.benchmark_Cluster_826":
  104015.983 ±(99.9%) 1562.425 ops/s [Average]
  (min, avg, max) = (99722.299, 104015.983, 108688.444), stdev = 2338.565
  CI (99.9%): [102453.558, 105578.408] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_826._Benchmark.benchmark_Cluster_826  thrpt   30  104015.983 ± 1562.425  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_827._Benchmark.benchmark_Cluster_827$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_827._Benchmark.benchmark_Cluster_827

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15271.832 ops/s
# Warmup Iteration   2: 52592.239 ops/s
# Warmup Iteration   3: 98659.655 ops/s
# Warmup Iteration   4: 171918.016 ops/s
# Warmup Iteration   5: 195529.937 ops/s
# Warmup Iteration   6: 176359.909 ops/s
# Warmup Iteration   7: 201360.474 ops/s
# Warmup Iteration   8: 201997.802 ops/s
# Warmup Iteration   9: 201900.386 ops/s
# Warmup Iteration  10: 206305.895 ops/s
# Warmup Iteration  11: 193862.257 ops/s
# Warmup Iteration  12: 204053.295 ops/s
# Warmup Iteration  13: 198809.557 ops/s
# Warmup Iteration  14: 201243.071 ops/s
# Warmup Iteration  15: 194554.561 ops/s
# Warmup Iteration  16: 201670.456 ops/s
# Warmup Iteration  17: 203296.850 ops/s
# Warmup Iteration  18: 200328.082 ops/s
# Warmup Iteration  19: 211718.723 ops/s
# Warmup Iteration  20: 203737.366 ops/s
# Warmup Iteration  21: 208175.363 ops/s
# Warmup Iteration  22: 204219.632 ops/s
# Warmup Iteration  23: 201316.998 ops/s
# Warmup Iteration  24: 200966.828 ops/s
# Warmup Iteration  25: 209025.184 ops/s
# Warmup Iteration  26: 165499.836 ops/s
# Warmup Iteration  27: 207863.999 ops/s
# Warmup Iteration  28: 201676.855 ops/s
# Warmup Iteration  29: 210641.157 ops/s
# Warmup Iteration  30: 201958.864 ops/s
Iteration   1: 206805.542 ops/s
Iteration   2: 202124.281 ops/s
Iteration   3: 201060.011 ops/s
Iteration   4: 213148.630 ops/s
Iteration   5: 193183.663 ops/s
Iteration   6: 207095.518 ops/s
Iteration   7: 202399.619 ops/s
Iteration   8: 202638.526 ops/s
Iteration   9: 218707.616 ops/s
Iteration  10: 203436.784 ops/s
Iteration  11: 206658.321 ops/s
Iteration  12: 203644.887 ops/s
Iteration  13: 211822.493 ops/s
Iteration  14: 209872.769 ops/s
Iteration  15: 198816.112 ops/s
Iteration  16: 211209.882 ops/s
Iteration  17: 201784.695 ops/s
Iteration  18: 210851.602 ops/s
Iteration  19: 202744.371 ops/s
Iteration  20: 202148.220 ops/s
Iteration  21: 214222.826 ops/s
Iteration  22: 206346.585 ops/s
Iteration  23: 208090.619 ops/s
Iteration  24: 204445.074 ops/s
Iteration  25: 205405.042 ops/s
Iteration  26: 199502.655 ops/s
Iteration  27: 215405.868 ops/s
Iteration  28: 210179.222 ops/s
Iteration  29: 201088.328 ops/s
Iteration  30: 209459.274 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_827._Benchmark.benchmark_Cluster_827":
  206143.301 ±(99.9%) 3738.115 ops/s [Average]
  (min, avg, max) = (193183.663, 206143.301, 218707.616), stdev = 5595.035
  CI (99.9%): [202405.186, 209881.416] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_827._Benchmark.benchmark_Cluster_827  thrpt   30  206143.301 ± 3738.115  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_828._Benchmark.benchmark_Cluster_828$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_828._Benchmark.benchmark_Cluster_828

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14938.073 ops/s
# Warmup Iteration   2: 71956.874 ops/s
# Warmup Iteration   3: 195078.025 ops/s
# Warmup Iteration   4: 188833.228 ops/s
# Warmup Iteration   5: 203722.501 ops/s
# Warmup Iteration   6: 197002.884 ops/s
# Warmup Iteration   7: 201673.697 ops/s
# Warmup Iteration   8: 192229.926 ops/s
# Warmup Iteration   9: 200248.430 ops/s
# Warmup Iteration  10: 190672.922 ops/s
# Warmup Iteration  11: 194819.505 ops/s
# Warmup Iteration  12: 195173.286 ops/s
# Warmup Iteration  13: 193972.164 ops/s
# Warmup Iteration  14: 199648.947 ops/s
# Warmup Iteration  15: 187320.645 ops/s
# Warmup Iteration  16: 206875.729 ops/s
# Warmup Iteration  17: 190966.794 ops/s
# Warmup Iteration  18: 210467.011 ops/s
# Warmup Iteration  19: 210840.605 ops/s
# Warmup Iteration  20: 203552.300 ops/s
# Warmup Iteration  21: 215304.201 ops/s
# Warmup Iteration  22: 199480.441 ops/s
# Warmup Iteration  23: 211448.466 ops/s
# Warmup Iteration  24: 204149.807 ops/s
# Warmup Iteration  25: 214027.379 ops/s
# Warmup Iteration  26: 203491.795 ops/s
# Warmup Iteration  27: 209161.347 ops/s
# Warmup Iteration  28: 213886.216 ops/s
# Warmup Iteration  29: 201207.309 ops/s
# Warmup Iteration  30: 210966.394 ops/s
Iteration   1: 206608.915 ops/s
Iteration   2: 208836.685 ops/s
Iteration   3: 202164.130 ops/s
Iteration   4: 204633.690 ops/s
Iteration   5: 203647.715 ops/s
Iteration   6: 208909.859 ops/s
Iteration   7: 201461.837 ops/s
Iteration   8: 209198.422 ops/s
Iteration   9: 220201.715 ops/s
Iteration  10: 209549.285 ops/s
Iteration  11: 200991.191 ops/s
Iteration  12: 210232.218 ops/s
Iteration  13: 200068.679 ops/s
Iteration  14: 203738.115 ops/s
Iteration  15: 212734.285 ops/s
Iteration  16: 203873.752 ops/s
Iteration  17: 211103.289 ops/s
Iteration  18: 202241.807 ops/s
Iteration  19: 210501.889 ops/s
Iteration  20: 208904.094 ops/s
Iteration  21: 204849.505 ops/s
Iteration  22: 206795.980 ops/s
Iteration  23: 211689.987 ops/s
Iteration  24: 202749.118 ops/s
Iteration  25: 210412.478 ops/s
Iteration  26: 200363.769 ops/s
Iteration  27: 207598.805 ops/s
Iteration  28: 213690.050 ops/s
Iteration  29: 200226.197 ops/s
Iteration  30: 211602.267 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_828._Benchmark.benchmark_Cluster_828":
  206985.991 ±(99.9%) 3234.124 ops/s [Average]
  (min, avg, max) = (200068.679, 206985.991, 220201.715), stdev = 4840.684
  CI (99.9%): [203751.867, 210220.115] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_828._Benchmark.benchmark_Cluster_828  thrpt   30  206985.991 ± 3234.124  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_829._Benchmark.benchmark_Cluster_829$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_829._Benchmark.benchmark_Cluster_829

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10238.063 ops/s
# Warmup Iteration   2: 36781.878 ops/s
# Warmup Iteration   3: 101125.533 ops/s
# Warmup Iteration   4: 84489.431 ops/s
# Warmup Iteration   5: 110358.514 ops/s
# Warmup Iteration   6: 113503.826 ops/s
# Warmup Iteration   7: 109820.544 ops/s
# Warmup Iteration   8: 112070.609 ops/s
# Warmup Iteration   9: 108153.267 ops/s
# Warmup Iteration  10: 110939.497 ops/s
# Warmup Iteration  11: 112423.576 ops/s
# Warmup Iteration  12: 105637.735 ops/s
# Warmup Iteration  13: 102807.565 ops/s
# Warmup Iteration  14: 110959.936 ops/s
# Warmup Iteration  15: 109026.164 ops/s
# Warmup Iteration  16: 109778.050 ops/s
# Warmup Iteration  17: 112308.938 ops/s
# Warmup Iteration  18: 115843.223 ops/s
# Warmup Iteration  19: 113719.360 ops/s
# Warmup Iteration  20: 115878.668 ops/s
# Warmup Iteration  21: 99131.041 ops/s
# Warmup Iteration  22: 110398.309 ops/s
# Warmup Iteration  23: 119716.303 ops/s
# Warmup Iteration  24: 111711.243 ops/s
# Warmup Iteration  25: 109392.866 ops/s
# Warmup Iteration  26: 115434.769 ops/s
# Warmup Iteration  27: 117527.744 ops/s
# Warmup Iteration  28: 108906.745 ops/s
# Warmup Iteration  29: 119255.773 ops/s
# Warmup Iteration  30: 111219.860 ops/s
Iteration   1: 117796.081 ops/s
Iteration   2: 117557.866 ops/s
Iteration   3: 111131.249 ops/s
Iteration   4: 115050.239 ops/s
Iteration   5: 110684.550 ops/s
Iteration   6: 112531.638 ops/s
Iteration   7: 115083.683 ops/s
Iteration   8: 113374.289 ops/s
Iteration   9: 118871.461 ops/s
Iteration  10: 107849.767 ops/s
Iteration  11: 116942.710 ops/s
Iteration  12: 111380.421 ops/s
Iteration  13: 113486.804 ops/s
Iteration  14: 114787.243 ops/s
Iteration  15: 113580.869 ops/s
Iteration  16: 111423.336 ops/s
Iteration  17: 115997.116 ops/s
Iteration  18: 117278.294 ops/s
Iteration  19: 112318.379 ops/s
Iteration  20: 115086.585 ops/s
Iteration  21: 114706.824 ops/s
Iteration  22: 113207.343 ops/s
Iteration  23: 116050.110 ops/s
Iteration  24: 116188.766 ops/s
Iteration  25: 112375.334 ops/s
Iteration  26: 116840.106 ops/s
Iteration  27: 111926.209 ops/s
Iteration  28: 111907.855 ops/s
Iteration  29: 117252.631 ops/s
Iteration  30: 111394.191 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_829._Benchmark.benchmark_Cluster_829":
  114135.398 ±(99.9%) 1758.760 ops/s [Average]
  (min, avg, max) = (107849.767, 114135.398, 118871.461), stdev = 2632.429
  CI (99.9%): [112376.638, 115894.158] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_829._Benchmark.benchmark_Cluster_829  thrpt   30  114135.398 ± 1758.760  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_83._Benchmark.benchmark_Cluster_83$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_83._Benchmark.benchmark_Cluster_83

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20343.302 ops/s
# Warmup Iteration   2: 50814.413 ops/s
# Warmup Iteration   3: 102161.805 ops/s
# Warmup Iteration   4: 129538.382 ops/s
# Warmup Iteration   5: 128982.091 ops/s
# Warmup Iteration   6: 131457.719 ops/s
# Warmup Iteration   7: 128175.390 ops/s
# Warmup Iteration   8: 132204.570 ops/s
# Warmup Iteration   9: 136184.912 ops/s
# Warmup Iteration  10: 138171.415 ops/s
# Warmup Iteration  11: 133230.867 ops/s
# Warmup Iteration  12: 140962.016 ops/s
# Warmup Iteration  13: 133675.988 ops/s
# Warmup Iteration  14: 146015.256 ops/s
# Warmup Iteration  15: 134821.303 ops/s
# Warmup Iteration  16: 137381.209 ops/s
# Warmup Iteration  17: 144384.482 ops/s
# Warmup Iteration  18: 142896.874 ops/s
# Warmup Iteration  19: 148189.175 ops/s
# Warmup Iteration  20: 140172.918 ops/s
# Warmup Iteration  21: 148203.061 ops/s
# Warmup Iteration  22: 146260.699 ops/s
# Warmup Iteration  23: 140193.761 ops/s
# Warmup Iteration  24: 148888.262 ops/s
# Warmup Iteration  25: 144802.252 ops/s
# Warmup Iteration  26: 138884.254 ops/s
# Warmup Iteration  27: 146715.577 ops/s
# Warmup Iteration  28: 145977.658 ops/s
# Warmup Iteration  29: 145001.407 ops/s
# Warmup Iteration  30: 140278.014 ops/s
Iteration   1: 146960.337 ops/s
Iteration   2: 144471.772 ops/s
Iteration   3: 144653.433 ops/s
Iteration   4: 149650.302 ops/s
Iteration   5: 148612.482 ops/s
Iteration   6: 140885.779 ops/s
Iteration   7: 143759.814 ops/s
Iteration   8: 148853.722 ops/s
Iteration   9: 140566.492 ops/s
Iteration  10: 146568.033 ops/s
Iteration  11: 143493.562 ops/s
Iteration  12: 141803.325 ops/s
Iteration  13: 145160.228 ops/s
Iteration  14: 144666.228 ops/s
Iteration  15: 140770.064 ops/s
Iteration  16: 146768.247 ops/s
Iteration  17: 140797.484 ops/s
Iteration  18: 153224.009 ops/s
Iteration  19: 142558.566 ops/s
Iteration  20: 146207.460 ops/s
Iteration  21: 145449.336 ops/s
Iteration  22: 143630.712 ops/s
Iteration  23: 149295.496 ops/s
Iteration  24: 141693.511 ops/s
Iteration  25: 151667.179 ops/s
Iteration  26: 139823.540 ops/s
Iteration  27: 144688.596 ops/s
Iteration  28: 144458.190 ops/s
Iteration  29: 148402.829 ops/s
Iteration  30: 142809.291 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_83._Benchmark.benchmark_Cluster_83":
  145078.334 ±(99.9%) 2287.652 ops/s [Average]
  (min, avg, max) = (139823.540, 145078.334, 153224.009), stdev = 3424.049
  CI (99.9%): [142790.682, 147365.986] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_83._Benchmark.benchmark_Cluster_83  thrpt   30  145078.334 ± 2287.652  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_830._Benchmark.benchmark_Cluster_830$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_830._Benchmark.benchmark_Cluster_830

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16240.268 ops/s
# Warmup Iteration   2: 77338.974 ops/s
# Warmup Iteration   3: 111273.018 ops/s
# Warmup Iteration   4: 125386.011 ops/s
# Warmup Iteration   5: 130159.641 ops/s
# Warmup Iteration   6: 125442.854 ops/s
# Warmup Iteration   7: 125830.863 ops/s
# Warmup Iteration   8: 128871.783 ops/s
# Warmup Iteration   9: 121963.475 ops/s
# Warmup Iteration  10: 125339.101 ops/s
# Warmup Iteration  11: 125509.001 ops/s
# Warmup Iteration  12: 130429.976 ops/s
# Warmup Iteration  13: 118453.910 ops/s
# Warmup Iteration  14: 127857.600 ops/s
# Warmup Iteration  15: 120300.129 ops/s
# Warmup Iteration  16: 100215.694 ops/s
# Warmup Iteration  17: 135163.490 ops/s
# Warmup Iteration  18: 127961.879 ops/s
# Warmup Iteration  19: 136765.125 ops/s
# Warmup Iteration  20: 137735.863 ops/s
# Warmup Iteration  21: 135490.811 ops/s
# Warmup Iteration  22: 139721.418 ops/s
# Warmup Iteration  23: 135434.832 ops/s
# Warmup Iteration  24: 136115.660 ops/s
# Warmup Iteration  25: 135344.035 ops/s
# Warmup Iteration  26: 140314.306 ops/s
# Warmup Iteration  27: 135569.424 ops/s
# Warmup Iteration  28: 140598.703 ops/s
# Warmup Iteration  29: 134936.163 ops/s
# Warmup Iteration  30: 135243.978 ops/s
Iteration   1: 138383.510 ops/s
Iteration   2: 137333.411 ops/s
Iteration   3: 139867.567 ops/s
Iteration   4: 135352.676 ops/s
Iteration   5: 137336.726 ops/s
Iteration   6: 137187.140 ops/s
Iteration   7: 137761.544 ops/s
Iteration   8: 141652.513 ops/s
Iteration   9: 133736.312 ops/s
Iteration  10: 136470.628 ops/s
Iteration  11: 138961.699 ops/s
Iteration  12: 134298.401 ops/s
Iteration  13: 140317.202 ops/s
Iteration  14: 134678.964 ops/s
Iteration  15: 140680.525 ops/s
Iteration  16: 139712.838 ops/s
Iteration  17: 136202.068 ops/s
Iteration  18: 142972.802 ops/s
Iteration  19: 132920.418 ops/s
Iteration  20: 138535.646 ops/s
Iteration  21: 133165.453 ops/s
Iteration  22: 137103.259 ops/s
Iteration  23: 137598.015 ops/s
Iteration  24: 137009.211 ops/s
Iteration  25: 139705.857 ops/s
Iteration  26: 134783.539 ops/s
Iteration  27: 141140.558 ops/s
Iteration  28: 133979.676 ops/s
Iteration  29: 133782.345 ops/s
Iteration  30: 136608.125 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_830._Benchmark.benchmark_Cluster_830":
  137307.954 ±(99.9%) 1803.260 ops/s [Average]
  (min, avg, max) = (132920.418, 137307.954, 142972.802), stdev = 2699.034
  CI (99.9%): [135504.695, 139111.214] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_830._Benchmark.benchmark_Cluster_830  thrpt   30  137307.954 ± 1803.260  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_831._Benchmark.benchmark_Cluster_831$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_831._Benchmark.benchmark_Cluster_831

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4642.314 ops/s
# Warmup Iteration   2: 35225.529 ops/s
# Warmup Iteration   3: 29546.668 ops/s
# Warmup Iteration   4: 44253.756 ops/s
# Warmup Iteration   5: 82829.287 ops/s
# Warmup Iteration   6: 128157.916 ops/s
# Warmup Iteration   7: 132519.708 ops/s
# Warmup Iteration   8: 131329.947 ops/s
# Warmup Iteration   9: 123946.514 ops/s
# Warmup Iteration  10: 123538.963 ops/s
# Warmup Iteration  11: 133208.446 ops/s
# Warmup Iteration  12: 138108.271 ops/s
# Warmup Iteration  13: 131196.465 ops/s
# Warmup Iteration  14: 130842.539 ops/s
# Warmup Iteration  15: 139715.513 ops/s
# Warmup Iteration  16: 131357.813 ops/s
# Warmup Iteration  17: 138271.819 ops/s
# Warmup Iteration  18: 132637.794 ops/s
# Warmup Iteration  19: 143450.906 ops/s
# Warmup Iteration  20: 136063.868 ops/s
# Warmup Iteration  21: 138709.052 ops/s
# Warmup Iteration  22: 139525.810 ops/s
# Warmup Iteration  23: 136255.903 ops/s
# Warmup Iteration  24: 135523.710 ops/s
# Warmup Iteration  25: 139646.752 ops/s
# Warmup Iteration  26: 138173.010 ops/s
# Warmup Iteration  27: 137461.163 ops/s
# Warmup Iteration  28: 135051.763 ops/s
# Warmup Iteration  29: 136777.973 ops/s
# Warmup Iteration  30: 138702.426 ops/s
Iteration   1: 139883.941 ops/s
Iteration   2: 138554.522 ops/s
Iteration   3: 136687.014 ops/s
Iteration   4: 135486.548 ops/s
Iteration   5: 140104.600 ops/s
Iteration   6: 137387.844 ops/s
Iteration   7: 138377.984 ops/s
Iteration   8: 136880.159 ops/s
Iteration   9: 137861.077 ops/s
Iteration  10: 136325.022 ops/s
Iteration  11: 131129.407 ops/s
Iteration  12: 138854.666 ops/s
Iteration  13: 134771.835 ops/s
Iteration  14: 138806.791 ops/s
Iteration  15: 136473.447 ops/s
Iteration  16: 134013.864 ops/s
Iteration  17: 134129.840 ops/s
Iteration  18: 135755.359 ops/s
Iteration  19: 138846.566 ops/s
Iteration  20: 136170.832 ops/s
Iteration  21: 140493.155 ops/s
Iteration  22: 134725.940 ops/s
Iteration  23: 142065.427 ops/s
Iteration  24: 142972.297 ops/s
Iteration  25: 130479.903 ops/s
Iteration  26: 141733.312 ops/s
Iteration  27: 140595.746 ops/s
Iteration  28: 143932.122 ops/s
Iteration  29: 133863.551 ops/s
Iteration  30: 142688.782 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_831._Benchmark.benchmark_Cluster_831":
  137668.385 ±(99.9%) 2249.078 ops/s [Average]
  (min, avg, max) = (130479.903, 137668.385, 143932.122), stdev = 3366.315
  CI (99.9%): [135419.307, 139917.463] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_831._Benchmark.benchmark_Cluster_831  thrpt   30  137668.385 ± 2249.078  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_832._Benchmark.benchmark_Cluster_832$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_832._Benchmark.benchmark_Cluster_832

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3871.207 ops/s
# Warmup Iteration   2: 24864.519 ops/s
# Warmup Iteration   3: 35086.624 ops/s
# Warmup Iteration   4: 73953.350 ops/s
# Warmup Iteration   5: 104687.928 ops/s
# Warmup Iteration   6: 97454.388 ops/s
# Warmup Iteration   7: 122410.125 ops/s
# Warmup Iteration   8: 113863.578 ops/s
# Warmup Iteration   9: 112738.264 ops/s
# Warmup Iteration  10: 96735.500 ops/s
# Warmup Iteration  11: 115394.158 ops/s
# Warmup Iteration  12: 117887.540 ops/s
# Warmup Iteration  13: 116327.361 ops/s
# Warmup Iteration  14: 117607.521 ops/s
# Warmup Iteration  15: 114879.836 ops/s
# Warmup Iteration  16: 114238.846 ops/s
# Warmup Iteration  17: 126379.250 ops/s
# Warmup Iteration  18: 124548.992 ops/s
# Warmup Iteration  19: 119155.613 ops/s
# Warmup Iteration  20: 124845.745 ops/s
# Warmup Iteration  21: 118461.487 ops/s
# Warmup Iteration  22: 125467.633 ops/s
# Warmup Iteration  23: 121498.798 ops/s
# Warmup Iteration  24: 117236.214 ops/s
# Warmup Iteration  25: 122717.996 ops/s
# Warmup Iteration  26: 126284.557 ops/s
# Warmup Iteration  27: 120332.815 ops/s
# Warmup Iteration  28: 123297.450 ops/s
# Warmup Iteration  29: 118768.510 ops/s
# Warmup Iteration  30: 123237.920 ops/s
Iteration   1: 123158.999 ops/s
Iteration   2: 120626.953 ops/s
Iteration   3: 124116.038 ops/s
Iteration   4: 117739.244 ops/s
Iteration   5: 121630.937 ops/s
Iteration   6: 120264.835 ops/s
Iteration   7: 118617.420 ops/s
Iteration   8: 122510.343 ops/s
Iteration   9: 116383.218 ops/s
Iteration  10: 124363.171 ops/s
Iteration  11: 118113.017 ops/s
Iteration  12: 126165.224 ops/s
Iteration  13: 120486.161 ops/s
Iteration  14: 121773.195 ops/s
Iteration  15: 124096.587 ops/s
Iteration  16: 119140.908 ops/s
Iteration  17: 124168.609 ops/s
Iteration  18: 119353.789 ops/s
Iteration  19: 123145.831 ops/s
Iteration  20: 121563.266 ops/s
Iteration  21: 120888.106 ops/s
Iteration  22: 124968.813 ops/s
Iteration  23: 116237.231 ops/s
Iteration  24: 122908.187 ops/s
Iteration  25: 121668.700 ops/s
Iteration  26: 115864.153 ops/s
Iteration  27: 125355.394 ops/s
Iteration  28: 122380.448 ops/s
Iteration  29: 125122.153 ops/s
Iteration  30: 120022.195 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_832._Benchmark.benchmark_Cluster_832":
  121427.771 ±(99.9%) 1903.928 ops/s [Average]
  (min, avg, max) = (115864.153, 121427.771, 126165.224), stdev = 2849.711
  CI (99.9%): [119523.842, 123331.699] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_832._Benchmark.benchmark_Cluster_832  thrpt   30  121427.771 ± 1903.928  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_833._Benchmark.benchmark_Cluster_833$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_833._Benchmark.benchmark_Cluster_833

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3442.751 ops/s
# Warmup Iteration   2: 30156.363 ops/s
# Warmup Iteration   3: 40163.084 ops/s
# Warmup Iteration   4: 103874.155 ops/s
# Warmup Iteration   5: 115564.634 ops/s
# Warmup Iteration   6: 124218.482 ops/s
# Warmup Iteration   7: 129172.134 ops/s
# Warmup Iteration   8: 124421.274 ops/s
# Warmup Iteration   9: 140156.659 ops/s
# Warmup Iteration  10: 139238.070 ops/s
# Warmup Iteration  11: 135268.803 ops/s
# Warmup Iteration  12: 129312.361 ops/s
# Warmup Iteration  13: 139817.053 ops/s
# Warmup Iteration  14: 131526.763 ops/s
# Warmup Iteration  15: 135747.478 ops/s
# Warmup Iteration  16: 129234.399 ops/s
# Warmup Iteration  17: 132129.227 ops/s
# Warmup Iteration  18: 140256.407 ops/s
# Warmup Iteration  19: 135896.338 ops/s
# Warmup Iteration  20: 142534.996 ops/s
# Warmup Iteration  21: 138733.626 ops/s
# Warmup Iteration  22: 139648.800 ops/s
# Warmup Iteration  23: 139713.199 ops/s
# Warmup Iteration  24: 136731.705 ops/s
# Warmup Iteration  25: 140304.836 ops/s
# Warmup Iteration  26: 143625.040 ops/s
# Warmup Iteration  27: 132261.813 ops/s
# Warmup Iteration  28: 142343.704 ops/s
# Warmup Iteration  29: 136744.953 ops/s
# Warmup Iteration  30: 138954.888 ops/s
Iteration   1: 139666.386 ops/s
Iteration   2: 136681.691 ops/s
Iteration   3: 142792.771 ops/s
Iteration   4: 137699.667 ops/s
Iteration   5: 143049.677 ops/s
Iteration   6: 138783.952 ops/s
Iteration   7: 138779.566 ops/s
Iteration   8: 142913.865 ops/s
Iteration   9: 140181.413 ops/s
Iteration  10: 139633.332 ops/s
Iteration  11: 139133.456 ops/s
Iteration  12: 145427.299 ops/s
Iteration  13: 141431.363 ops/s
Iteration  14: 138060.761 ops/s
Iteration  15: 136068.046 ops/s
Iteration  16: 147875.992 ops/s
Iteration  17: 133546.665 ops/s
Iteration  18: 144552.461 ops/s
Iteration  19: 137028.233 ops/s
Iteration  20: 140862.225 ops/s
Iteration  21: 136194.270 ops/s
Iteration  22: 141514.320 ops/s
Iteration  23: 140899.588 ops/s
Iteration  24: 137310.348 ops/s
Iteration  25: 139179.628 ops/s
Iteration  26: 138673.437 ops/s
Iteration  27: 140088.273 ops/s
Iteration  28: 135350.171 ops/s
Iteration  29: 137063.163 ops/s
Iteration  30: 140436.096 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_833._Benchmark.benchmark_Cluster_833":
  139695.937 ±(99.9%) 2096.362 ops/s [Average]
  (min, avg, max) = (133546.665, 139695.937, 147875.992), stdev = 3137.736
  CI (99.9%): [137599.575, 141792.299] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_833._Benchmark.benchmark_Cluster_833  thrpt   30  139695.937 ± 2096.362  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_834._Benchmark.benchmark_Cluster_834$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_834._Benchmark.benchmark_Cluster_834

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 32036.137 ops/s
# Warmup Iteration   2: 108446.683 ops/s
# Warmup Iteration   3: 110690.489 ops/s
# Warmup Iteration   4: 92297.953 ops/s
# Warmup Iteration   5: 121437.928 ops/s
# Warmup Iteration   6: 115128.780 ops/s
# Warmup Iteration   7: 116460.023 ops/s
# Warmup Iteration   8: 120792.424 ops/s
# Warmup Iteration   9: 113671.002 ops/s
# Warmup Iteration  10: 120843.101 ops/s
# Warmup Iteration  11: 118004.092 ops/s
# Warmup Iteration  12: 116704.607 ops/s
# Warmup Iteration  13: 118866.929 ops/s
# Warmup Iteration  14: 110207.234 ops/s
# Warmup Iteration  15: 119993.613 ops/s
# Warmup Iteration  16: 117415.415 ops/s
# Warmup Iteration  17: 125697.673 ops/s
# Warmup Iteration  18: 128672.789 ops/s
# Warmup Iteration  19: 123173.552 ops/s
# Warmup Iteration  20: 130196.821 ops/s
# Warmup Iteration  21: 122781.054 ops/s
# Warmup Iteration  22: 124496.368 ops/s
# Warmup Iteration  23: 121712.125 ops/s
# Warmup Iteration  24: 120616.022 ops/s
# Warmup Iteration  25: 129684.507 ops/s
# Warmup Iteration  26: 121739.671 ops/s
# Warmup Iteration  27: 128120.600 ops/s
# Warmup Iteration  28: 127609.379 ops/s
# Warmup Iteration  29: 124766.804 ops/s
# Warmup Iteration  30: 127340.259 ops/s
Iteration   1: 125029.199 ops/s
Iteration   2: 126795.706 ops/s
Iteration   3: 123332.038 ops/s
Iteration   4: 123027.085 ops/s
Iteration   5: 126281.728 ops/s
Iteration   6: 120900.533 ops/s
Iteration   7: 130031.386 ops/s
Iteration   8: 120090.898 ops/s
Iteration   9: 126909.718 ops/s
Iteration  10: 126970.227 ops/s
Iteration  11: 125002.815 ops/s
Iteration  12: 128501.091 ops/s
Iteration  13: 124733.227 ops/s
Iteration  14: 125917.400 ops/s
Iteration  15: 130014.365 ops/s
Iteration  16: 122552.444 ops/s
Iteration  17: 126050.839 ops/s
Iteration  18: 126897.119 ops/s
Iteration  19: 124333.642 ops/s
Iteration  20: 129852.053 ops/s
Iteration  21: 124501.901 ops/s
Iteration  22: 121861.321 ops/s
Iteration  23: 127237.859 ops/s
Iteration  24: 124833.494 ops/s
Iteration  25: 119574.698 ops/s
Iteration  26: 129765.118 ops/s
Iteration  27: 122329.735 ops/s
Iteration  28: 124889.787 ops/s
Iteration  29: 121046.628 ops/s
Iteration  30: 123897.843 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_834._Benchmark.benchmark_Cluster_834":
  125105.397 ±(99.9%) 1958.562 ops/s [Average]
  (min, avg, max) = (119574.698, 125105.397, 130031.386), stdev = 2931.484
  CI (99.9%): [123146.834, 127063.959] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_834._Benchmark.benchmark_Cluster_834  thrpt   30  125105.397 ± 1958.562  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_835._Benchmark.benchmark_Cluster_835$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_835._Benchmark.benchmark_Cluster_835

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 21052.607 ops/s
# Warmup Iteration   2: 67874.855 ops/s
# Warmup Iteration   3: 110604.427 ops/s
# Warmup Iteration   4: 116510.511 ops/s
# Warmup Iteration   5: 121813.667 ops/s
# Warmup Iteration   6: 129671.220 ops/s
# Warmup Iteration   7: 111968.713 ops/s
# Warmup Iteration   8: 134977.023 ops/s
# Warmup Iteration   9: 128502.344 ops/s
# Warmup Iteration  10: 129614.100 ops/s
# Warmup Iteration  11: 129114.807 ops/s
# Warmup Iteration  12: 130298.260 ops/s
# Warmup Iteration  13: 135788.037 ops/s
# Warmup Iteration  14: 132297.453 ops/s
# Warmup Iteration  15: 130082.782 ops/s
# Warmup Iteration  16: 132708.730 ops/s
# Warmup Iteration  17: 134636.271 ops/s
# Warmup Iteration  18: 142056.344 ops/s
# Warmup Iteration  19: 136899.049 ops/s
# Warmup Iteration  20: 138314.593 ops/s
# Warmup Iteration  21: 141874.670 ops/s
# Warmup Iteration  22: 137249.816 ops/s
# Warmup Iteration  23: 141160.331 ops/s
# Warmup Iteration  24: 141467.515 ops/s
# Warmup Iteration  25: 138348.785 ops/s
# Warmup Iteration  26: 131820.108 ops/s
# Warmup Iteration  27: 140724.320 ops/s
# Warmup Iteration  28: 134184.024 ops/s
# Warmup Iteration  29: 134540.440 ops/s
# Warmup Iteration  30: 142157.814 ops/s
Iteration   1: 136220.506 ops/s
Iteration   2: 136266.516 ops/s
Iteration   3: 133593.082 ops/s
Iteration   4: 141072.251 ops/s
Iteration   5: 135504.512 ops/s
Iteration   6: 137535.707 ops/s
Iteration   7: 141266.238 ops/s
Iteration   8: 134877.792 ops/s
Iteration   9: 138408.839 ops/s
Iteration  10: 138081.017 ops/s
Iteration  11: 141715.316 ops/s
Iteration  12: 136455.827 ops/s
Iteration  13: 135800.501 ops/s
Iteration  14: 138435.746 ops/s
Iteration  15: 136549.700 ops/s
Iteration  16: 134920.822 ops/s
Iteration  17: 139203.311 ops/s
Iteration  18: 136647.210 ops/s
Iteration  19: 142900.918 ops/s
Iteration  20: 140471.487 ops/s
Iteration  21: 133230.373 ops/s
Iteration  22: 144364.661 ops/s
Iteration  23: 141417.698 ops/s
Iteration  24: 133015.303 ops/s
Iteration  25: 140045.467 ops/s
Iteration  26: 136313.702 ops/s
Iteration  27: 137252.737 ops/s
Iteration  28: 131897.342 ops/s
Iteration  29: 138030.880 ops/s
Iteration  30: 139500.944 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_835._Benchmark.benchmark_Cluster_835":
  137699.880 ±(99.9%) 2047.780 ops/s [Average]
  (min, avg, max) = (131897.342, 137699.880, 144364.661), stdev = 3065.021
  CI (99.9%): [135652.100, 139747.660] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_835._Benchmark.benchmark_Cluster_835  thrpt   30  137699.880 ± 2047.780  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_836._Benchmark.benchmark_Cluster_836$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_836._Benchmark.benchmark_Cluster_836

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11834.126 ops/s
# Warmup Iteration   2: 39783.697 ops/s
# Warmup Iteration   3: 54157.965 ops/s
# Warmup Iteration   4: 101226.801 ops/s
# Warmup Iteration   5: 115354.649 ops/s
# Warmup Iteration   6: 122961.675 ops/s
# Warmup Iteration   7: 117992.942 ops/s
# Warmup Iteration   8: 120530.874 ops/s
# Warmup Iteration   9: 126874.820 ops/s
# Warmup Iteration  10: 120550.788 ops/s
# Warmup Iteration  11: 123055.791 ops/s
# Warmup Iteration  12: 121479.051 ops/s
# Warmup Iteration  13: 121291.422 ops/s
# Warmup Iteration  14: 123854.545 ops/s
# Warmup Iteration  15: 120753.957 ops/s
# Warmup Iteration  16: 123753.228 ops/s
# Warmup Iteration  17: 128652.987 ops/s
# Warmup Iteration  18: 131246.969 ops/s
# Warmup Iteration  19: 126845.198 ops/s
# Warmup Iteration  20: 129009.673 ops/s
# Warmup Iteration  21: 133544.223 ops/s
# Warmup Iteration  22: 128628.353 ops/s
# Warmup Iteration  23: 120696.302 ops/s
# Warmup Iteration  24: 128860.806 ops/s
# Warmup Iteration  25: 128900.386 ops/s
# Warmup Iteration  26: 128728.936 ops/s
# Warmup Iteration  27: 127094.725 ops/s
# Warmup Iteration  28: 120141.414 ops/s
# Warmup Iteration  29: 130657.646 ops/s
# Warmup Iteration  30: 127302.276 ops/s
Iteration   1: 130106.782 ops/s
Iteration   2: 129999.528 ops/s
Iteration   3: 127502.352 ops/s
Iteration   4: 132781.617 ops/s
Iteration   5: 126836.206 ops/s
Iteration   6: 124672.966 ops/s
Iteration   7: 133102.604 ops/s
Iteration   8: 131831.871 ops/s
Iteration   9: 122039.283 ops/s
Iteration  10: 131612.360 ops/s
Iteration  11: 126967.674 ops/s
Iteration  12: 128361.442 ops/s
Iteration  13: 134827.705 ops/s
Iteration  14: 130782.433 ops/s
Iteration  15: 131066.081 ops/s
Iteration  16: 129105.013 ops/s
Iteration  17: 127131.021 ops/s
Iteration  18: 129943.423 ops/s
Iteration  19: 125134.043 ops/s
Iteration  20: 128957.811 ops/s
Iteration  21: 123980.812 ops/s
Iteration  22: 126245.219 ops/s
Iteration  23: 130631.416 ops/s
Iteration  24: 127236.967 ops/s
Iteration  25: 132050.520 ops/s
Iteration  26: 123769.492 ops/s
Iteration  27: 132660.789 ops/s
Iteration  28: 126962.011 ops/s
Iteration  29: 129108.074 ops/s
Iteration  30: 134291.024 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_836._Benchmark.benchmark_Cluster_836":
  128989.951 ±(99.9%) 2178.613 ops/s [Average]
  (min, avg, max) = (122039.283, 128989.951, 134827.705), stdev = 3260.846
  CI (99.9%): [126811.338, 131168.564] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_836._Benchmark.benchmark_Cluster_836  thrpt   30  128989.951 ± 2178.613  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_837._Benchmark.benchmark_Cluster_837$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_837._Benchmark.benchmark_Cluster_837

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 69811.406 ops/s
# Warmup Iteration   2: 210182.393 ops/s
# Warmup Iteration   3: 227181.893 ops/s
# Warmup Iteration   4: 245673.464 ops/s
# Warmup Iteration   5: 244834.766 ops/s
# Warmup Iteration   6: 249226.245 ops/s
# Warmup Iteration   7: 242342.752 ops/s
# Warmup Iteration   8: 240631.170 ops/s
# Warmup Iteration   9: 250911.211 ops/s
# Warmup Iteration  10: 251793.814 ops/s
# Warmup Iteration  11: 234539.745 ops/s
# Warmup Iteration  12: 249152.961 ops/s
# Warmup Iteration  13: 240961.479 ops/s
# Warmup Iteration  14: 241591.728 ops/s
# Warmup Iteration  15: 248103.020 ops/s
# Warmup Iteration  16: 244225.505 ops/s
# Warmup Iteration  17: 250466.456 ops/s
# Warmup Iteration  18: 255599.748 ops/s
# Warmup Iteration  19: 254314.862 ops/s
# Warmup Iteration  20: 264047.527 ops/s
# Warmup Iteration  21: 247017.748 ops/s
# Warmup Iteration  22: 251751.524 ops/s
# Warmup Iteration  23: 237901.371 ops/s
# Warmup Iteration  24: 233693.035 ops/s
# Warmup Iteration  25: 256577.695 ops/s
# Warmup Iteration  26: 253749.795 ops/s
# Warmup Iteration  27: 256836.875 ops/s
# Warmup Iteration  28: 249585.961 ops/s
# Warmup Iteration  29: 263469.219 ops/s
# Warmup Iteration  30: 249768.623 ops/s
Iteration   1: 257256.170 ops/s
Iteration   2: 260037.480 ops/s
Iteration   3: 246925.175 ops/s
Iteration   4: 264319.115 ops/s
Iteration   5: 245445.173 ops/s
Iteration   6: 264506.615 ops/s
Iteration   7: 261254.060 ops/s
Iteration   8: 249771.537 ops/s
Iteration   9: 258184.088 ops/s
Iteration  10: 251223.024 ops/s
Iteration  11: 262424.668 ops/s
Iteration  12: 259535.503 ops/s
Iteration  13: 249786.703 ops/s
Iteration  14: 259112.357 ops/s
Iteration  15: 257099.179 ops/s
Iteration  16: 253747.585 ops/s
Iteration  17: 259553.147 ops/s
Iteration  18: 248805.686 ops/s
Iteration  19: 246885.283 ops/s
Iteration  20: 265934.660 ops/s
Iteration  21: 252870.081 ops/s
Iteration  22: 255017.850 ops/s
Iteration  23: 247915.027 ops/s
Iteration  24: 255604.978 ops/s
Iteration  25: 198951.258 ops/s
Iteration  26: 252461.880 ops/s
Iteration  27: 254929.559 ops/s
Iteration  28: 251376.820 ops/s
Iteration  29: 246474.595 ops/s
Iteration  30: 263658.996 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_837._Benchmark.benchmark_Cluster_837":
  253368.942 ±(99.9%) 7953.073 ops/s [Average]
  (min, avg, max) = (198951.258, 253368.942, 265934.660), stdev = 11903.786
  CI (99.9%): [245415.869, 261322.014] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_837._Benchmark.benchmark_Cluster_837  thrpt   30  253368.942 ± 7953.073  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_838._Benchmark.benchmark_Cluster_838$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_838._Benchmark.benchmark_Cluster_838

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14583.881 ops/s
# Warmup Iteration   2: 32972.730 ops/s
# Warmup Iteration   3: 24780.034 ops/s
# Warmup Iteration   4: 28461.317 ops/s
# Warmup Iteration   5: 27158.001 ops/s
# Warmup Iteration   6: 54774.179 ops/s
# Warmup Iteration   7: 74747.973 ops/s
# Warmup Iteration   8: 92895.289 ops/s
# Warmup Iteration   9: 114418.373 ops/s
# Warmup Iteration  10: 99836.233 ops/s
# Warmup Iteration  11: 107229.997 ops/s
# Warmup Iteration  12: 116102.659 ops/s
# Warmup Iteration  13: 109703.463 ops/s
# Warmup Iteration  14: 115401.938 ops/s
# Warmup Iteration  15: 110079.624 ops/s
# Warmup Iteration  16: 111363.061 ops/s
# Warmup Iteration  17: 121936.433 ops/s
# Warmup Iteration  18: 113102.840 ops/s
# Warmup Iteration  19: 121247.792 ops/s
# Warmup Iteration  20: 113793.073 ops/s
# Warmup Iteration  21: 118835.584 ops/s
# Warmup Iteration  22: 119306.075 ops/s
# Warmup Iteration  23: 114276.118 ops/s
# Warmup Iteration  24: 119840.743 ops/s
# Warmup Iteration  25: 114201.171 ops/s
# Warmup Iteration  26: 117752.617 ops/s
# Warmup Iteration  27: 118885.605 ops/s
# Warmup Iteration  28: 113768.769 ops/s
# Warmup Iteration  29: 117524.344 ops/s
# Warmup Iteration  30: 115281.733 ops/s
Iteration   1: 119258.085 ops/s
Iteration   2: 114049.428 ops/s
Iteration   3: 115487.989 ops/s
Iteration   4: 117713.113 ops/s
Iteration   5: 117445.841 ops/s
Iteration   6: 118998.178 ops/s
Iteration   7: 116495.815 ops/s
Iteration   8: 119046.715 ops/s
Iteration   9: 115616.529 ops/s
Iteration  10: 119458.855 ops/s
Iteration  11: 115566.704 ops/s
Iteration  12: 115260.818 ops/s
Iteration  13: 117239.603 ops/s
Iteration  14: 115854.113 ops/s
Iteration  15: 114013.430 ops/s
Iteration  16: 117792.507 ops/s
Iteration  17: 112214.005 ops/s
Iteration  18: 123575.052 ops/s
Iteration  19: 114349.260 ops/s
Iteration  20: 118625.669 ops/s
Iteration  21: 117463.743 ops/s
Iteration  22: 116226.252 ops/s
Iteration  23: 118178.761 ops/s
Iteration  24: 116678.567 ops/s
Iteration  25: 117888.961 ops/s
Iteration  26: 116512.504 ops/s
Iteration  27: 120524.692 ops/s
Iteration  28: 115135.309 ops/s
Iteration  29: 116333.202 ops/s
Iteration  30: 119565.217 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_838._Benchmark.benchmark_Cluster_838":
  117085.631 ±(99.9%) 1524.732 ops/s [Average]
  (min, avg, max) = (112214.005, 117085.631, 123575.052), stdev = 2282.147
  CI (99.9%): [115560.899, 118610.363] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_838._Benchmark.benchmark_Cluster_838  thrpt   30  117085.631 ± 1524.732  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_839._Benchmark.benchmark_Cluster_839$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_839._Benchmark.benchmark_Cluster_839

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 563.861 ops/s
# Warmup Iteration   2: 14775.126 ops/s
# Warmup Iteration   3: 24090.039 ops/s
# Warmup Iteration   4: 38179.942 ops/s
# Warmup Iteration   5: 37796.653 ops/s
# Warmup Iteration   6: 84425.759 ops/s
# Warmup Iteration   7: 117814.912 ops/s
# Warmup Iteration   8: 114479.954 ops/s
# Warmup Iteration   9: 105530.803 ops/s
# Warmup Iteration  10: 120061.058 ops/s
# Warmup Iteration  11: 113134.616 ops/s
# Warmup Iteration  12: 120138.820 ops/s
# Warmup Iteration  13: 116604.068 ops/s
# Warmup Iteration  14: 116720.888 ops/s
# Warmup Iteration  15: 118396.183 ops/s
# Warmup Iteration  16: 115081.966 ops/s
# Warmup Iteration  17: 116330.274 ops/s
# Warmup Iteration  18: 115790.610 ops/s
# Warmup Iteration  19: 117665.302 ops/s
# Warmup Iteration  20: 113286.229 ops/s
# Warmup Iteration  21: 115980.109 ops/s
# Warmup Iteration  22: 117309.432 ops/s
# Warmup Iteration  23: 109781.069 ops/s
# Warmup Iteration  24: 115608.836 ops/s
# Warmup Iteration  25: 117599.790 ops/s
# Warmup Iteration  26: 114791.152 ops/s
# Warmup Iteration  27: 117052.515 ops/s
# Warmup Iteration  28: 121463.454 ops/s
# Warmup Iteration  29: 114175.930 ops/s
# Warmup Iteration  30: 120052.908 ops/s
Iteration   1: 121887.870 ops/s
Iteration   2: 112982.859 ops/s
Iteration   3: 117829.096 ops/s
Iteration   4: 115284.458 ops/s
Iteration   5: 121847.214 ops/s
Iteration   6: 112141.139 ops/s
Iteration   7: 117932.716 ops/s
Iteration   8: 119304.793 ops/s
Iteration   9: 118711.438 ops/s
Iteration  10: 118707.327 ops/s
Iteration  11: 115705.487 ops/s
Iteration  12: 120405.583 ops/s
Iteration  13: 114591.275 ops/s
Iteration  14: 118475.296 ops/s
Iteration  15: 119110.681 ops/s
Iteration  16: 115197.454 ops/s
Iteration  17: 120873.177 ops/s
Iteration  18: 122813.573 ops/s
Iteration  19: 108867.052 ops/s
Iteration  20: 99730.607 ops/s
Iteration  21: 120842.185 ops/s
Iteration  22: 115926.725 ops/s
Iteration  23: 119637.368 ops/s
Iteration  24: 110409.007 ops/s
Iteration  25: 124858.108 ops/s
Iteration  26: 112214.945 ops/s
Iteration  27: 118607.720 ops/s
Iteration  28: 115878.829 ops/s
Iteration  29: 113225.536 ops/s
Iteration  30: 116233.465 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_839._Benchmark.benchmark_Cluster_839":
  116674.433 ±(99.9%) 3309.027 ops/s [Average]
  (min, avg, max) = (99730.607, 116674.433, 124858.108), stdev = 4952.796
  CI (99.9%): [113365.406, 119983.460] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_839._Benchmark.benchmark_Cluster_839  thrpt   30  116674.433 ± 3309.027  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_84._Benchmark.benchmark_Cluster_84$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_84._Benchmark.benchmark_Cluster_84

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13537.022 ops/s
# Warmup Iteration   2: 48710.404 ops/s
# Warmup Iteration   3: 52762.428 ops/s
# Warmup Iteration   4: 109233.038 ops/s
# Warmup Iteration   5: 149492.749 ops/s
# Warmup Iteration   6: 140454.163 ops/s
# Warmup Iteration   7: 139188.402 ops/s
# Warmup Iteration   8: 153489.078 ops/s
# Warmup Iteration   9: 146029.259 ops/s
# Warmup Iteration  10: 149814.063 ops/s
# Warmup Iteration  11: 147858.787 ops/s
# Warmup Iteration  12: 149480.726 ops/s
# Warmup Iteration  13: 150635.782 ops/s
# Warmup Iteration  14: 145647.591 ops/s
# Warmup Iteration  15: 146810.051 ops/s
# Warmup Iteration  16: 154757.648 ops/s
# Warmup Iteration  17: 151002.324 ops/s
# Warmup Iteration  18: 155440.617 ops/s
# Warmup Iteration  19: 145613.141 ops/s
# Warmup Iteration  20: 156605.857 ops/s
# Warmup Iteration  21: 160743.303 ops/s
# Warmup Iteration  22: 152047.486 ops/s
# Warmup Iteration  23: 159965.599 ops/s
# Warmup Iteration  24: 150648.690 ops/s
# Warmup Iteration  25: 161248.652 ops/s
# Warmup Iteration  26: 154435.597 ops/s
# Warmup Iteration  27: 153433.908 ops/s
# Warmup Iteration  28: 163918.451 ops/s
# Warmup Iteration  29: 147638.158 ops/s
# Warmup Iteration  30: 158781.388 ops/s
Iteration   1: 153940.374 ops/s
Iteration   2: 155934.533 ops/s
Iteration   3: 159678.434 ops/s
Iteration   4: 154105.641 ops/s
Iteration   5: 162838.644 ops/s
Iteration   6: 162129.216 ops/s
Iteration   7: 150778.674 ops/s
Iteration   8: 162244.601 ops/s
Iteration   9: 153195.889 ops/s
Iteration  10: 155020.588 ops/s
Iteration  11: 158127.978 ops/s
Iteration  12: 156838.026 ops/s
Iteration  13: 157162.303 ops/s
Iteration  14: 158828.541 ops/s
Iteration  15: 159192.059 ops/s
Iteration  16: 153160.510 ops/s
Iteration  17: 162193.751 ops/s
Iteration  18: 161774.880 ops/s
Iteration  19: 154756.551 ops/s
Iteration  20: 158187.069 ops/s
Iteration  21: 153017.640 ops/s
Iteration  22: 161849.763 ops/s
Iteration  23: 153534.678 ops/s
Iteration  24: 152200.103 ops/s
Iteration  25: 158659.332 ops/s
Iteration  26: 158055.353 ops/s
Iteration  27: 148199.799 ops/s
Iteration  28: 151466.690 ops/s
Iteration  29: 158825.028 ops/s
Iteration  30: 158223.247 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_84._Benchmark.benchmark_Cluster_84":
  156803.996 ±(99.9%) 2606.875 ops/s [Average]
  (min, avg, max) = (148199.799, 156803.996, 162838.644), stdev = 3901.848
  CI (99.9%): [154197.121, 159410.871] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_84._Benchmark.benchmark_Cluster_84  thrpt   30  156803.996 ± 2606.875  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_840._Benchmark.benchmark_Cluster_840$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_840._Benchmark.benchmark_Cluster_840

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1491.040 ops/s
# Warmup Iteration   2: 9968.787 ops/s
# Warmup Iteration   3: 18708.624 ops/s
# Warmup Iteration   4: 24564.216 ops/s
# Warmup Iteration   5: 30478.350 ops/s
# Warmup Iteration   6: 41503.143 ops/s
# Warmup Iteration   7: 48156.057 ops/s
# Warmup Iteration   8: 56552.848 ops/s
# Warmup Iteration   9: 60515.943 ops/s
# Warmup Iteration  10: 61128.367 ops/s
# Warmup Iteration  11: 59019.417 ops/s
# Warmup Iteration  12: 58790.459 ops/s
# Warmup Iteration  13: 61838.340 ops/s
# Warmup Iteration  14: 61862.129 ops/s
# Warmup Iteration  15: 61007.385 ops/s
# Warmup Iteration  16: 56370.251 ops/s
# Warmup Iteration  17: 60701.661 ops/s
# Warmup Iteration  18: 62421.722 ops/s
# Warmup Iteration  19: 65410.877 ops/s
# Warmup Iteration  20: 60650.071 ops/s
# Warmup Iteration  21: 63332.703 ops/s
# Warmup Iteration  22: 60338.752 ops/s
# Warmup Iteration  23: 61076.391 ops/s
# Warmup Iteration  24: 60047.968 ops/s
# Warmup Iteration  25: 61557.457 ops/s
# Warmup Iteration  26: 56697.004 ops/s
# Warmup Iteration  27: 62395.663 ops/s
# Warmup Iteration  28: 59879.016 ops/s
# Warmup Iteration  29: 57487.217 ops/s
# Warmup Iteration  30: 63149.978 ops/s
Iteration   1: 60178.849 ops/s
Iteration   2: 62545.331 ops/s
Iteration   3: 58817.138 ops/s
Iteration   4: 59427.741 ops/s
Iteration   5: 63251.434 ops/s
Iteration   6: 63179.177 ops/s
Iteration   7: 61408.134 ops/s
Iteration   8: 62916.478 ops/s
Iteration   9: 58957.122 ops/s
Iteration  10: 64644.954 ops/s
Iteration  11: 58890.751 ops/s
Iteration  12: 64388.952 ops/s
Iteration  13: 56312.063 ops/s
Iteration  14: 61711.983 ops/s
Iteration  15: 66603.293 ops/s
Iteration  16: 60014.609 ops/s
Iteration  17: 62639.320 ops/s
Iteration  18: 60313.520 ops/s
Iteration  19: 63685.139 ops/s
Iteration  20: 60607.621 ops/s
Iteration  21: 61841.586 ops/s
Iteration  22: 63315.963 ops/s
Iteration  23: 61607.802 ops/s
Iteration  24: 66972.781 ops/s
Iteration  25: 65891.669 ops/s
Iteration  26: 61782.233 ops/s
Iteration  27: 61289.594 ops/s
Iteration  28: 65120.776 ops/s
Iteration  29: 61990.538 ops/s
Iteration  30: 59548.257 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_840._Benchmark.benchmark_Cluster_840":
  61995.160 ±(99.9%) 1663.691 ops/s [Average]
  (min, avg, max) = (56312.063, 61995.160, 66972.781), stdev = 2490.135
  CI (99.9%): [60331.469, 63658.852] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_840._Benchmark.benchmark_Cluster_840  thrpt   30  61995.160 ± 1663.691  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_841._Benchmark.benchmark_Cluster_841$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_841._Benchmark.benchmark_Cluster_841

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7940.474 ops/s
# Warmup Iteration   2: 36896.320 ops/s
# Warmup Iteration   3: 36337.394 ops/s
# Warmup Iteration   4: 40156.277 ops/s
# Warmup Iteration   5: 46494.131 ops/s
# Warmup Iteration   6: 61181.319 ops/s
# Warmup Iteration   7: 64013.248 ops/s
# Warmup Iteration   8: 128657.585 ops/s
# Warmup Iteration   9: 137536.210 ops/s
# Warmup Iteration  10: 132733.887 ops/s
# Warmup Iteration  11: 138127.833 ops/s
# Warmup Iteration  12: 137280.103 ops/s
# Warmup Iteration  13: 145760.547 ops/s
# Warmup Iteration  14: 137129.645 ops/s
# Warmup Iteration  15: 146836.927 ops/s
# Warmup Iteration  16: 133434.584 ops/s
# Warmup Iteration  17: 143065.843 ops/s
# Warmup Iteration  18: 143091.574 ops/s
# Warmup Iteration  19: 148736.256 ops/s
# Warmup Iteration  20: 153411.211 ops/s
# Warmup Iteration  21: 147852.459 ops/s
# Warmup Iteration  22: 144044.570 ops/s
# Warmup Iteration  23: 151756.979 ops/s
# Warmup Iteration  24: 145527.112 ops/s
# Warmup Iteration  25: 135474.823 ops/s
# Warmup Iteration  26: 151822.014 ops/s
# Warmup Iteration  27: 148316.023 ops/s
# Warmup Iteration  28: 144665.955 ops/s
# Warmup Iteration  29: 152414.065 ops/s
# Warmup Iteration  30: 144801.019 ops/s
Iteration   1: 148237.013 ops/s
Iteration   2: 146697.094 ops/s
Iteration   3: 152027.248 ops/s
Iteration   4: 147957.369 ops/s
Iteration   5: 145474.784 ops/s
Iteration   6: 144745.434 ops/s
Iteration   7: 149453.436 ops/s
Iteration   8: 144870.876 ops/s
Iteration   9: 153182.705 ops/s
Iteration  10: 148074.585 ops/s
Iteration  11: 145688.104 ops/s
Iteration  12: 150490.005 ops/s
Iteration  13: 145337.024 ops/s
Iteration  14: 147249.047 ops/s
Iteration  15: 145797.325 ops/s
Iteration  16: 152005.901 ops/s
Iteration  17: 147017.147 ops/s
Iteration  18: 149907.988 ops/s
Iteration  19: 154068.332 ops/s
Iteration  20: 138249.964 ops/s
Iteration  21: 155678.382 ops/s
Iteration  22: 149414.630 ops/s
Iteration  23: 138064.632 ops/s
Iteration  24: 146857.921 ops/s
Iteration  25: 144552.550 ops/s
Iteration  26: 144862.854 ops/s
Iteration  27: 151135.125 ops/s
Iteration  28: 145982.943 ops/s
Iteration  29: 151511.688 ops/s
Iteration  30: 142373.482 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_841._Benchmark.benchmark_Cluster_841":
  147565.520 ±(99.9%) 2732.911 ops/s [Average]
  (min, avg, max) = (138064.632, 147565.520, 155678.382), stdev = 4090.493
  CI (99.9%): [144832.608, 150298.431] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_841._Benchmark.benchmark_Cluster_841  thrpt   30  147565.520 ± 2732.911  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_842._Benchmark.benchmark_Cluster_842$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_842._Benchmark.benchmark_Cluster_842

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2326.001 ops/s
# Warmup Iteration   2: 21724.727 ops/s
# Warmup Iteration   3: 29382.035 ops/s
# Warmup Iteration   4: 39457.806 ops/s
# Warmup Iteration   5: 46845.165 ops/s
# Warmup Iteration   6: 40743.581 ops/s
# Warmup Iteration   7: 42281.463 ops/s
# Warmup Iteration   8: 91168.352 ops/s
# Warmup Iteration   9: 103789.635 ops/s
# Warmup Iteration  10: 96773.712 ops/s
# Warmup Iteration  11: 99586.203 ops/s
# Warmup Iteration  12: 96942.107 ops/s
# Warmup Iteration  13: 98123.198 ops/s
# Warmup Iteration  14: 100597.576 ops/s
# Warmup Iteration  15: 100813.362 ops/s
# Warmup Iteration  16: 101127.944 ops/s
# Warmup Iteration  17: 103338.162 ops/s
# Warmup Iteration  18: 107508.456 ops/s
# Warmup Iteration  19: 103583.080 ops/s
# Warmup Iteration  20: 106054.673 ops/s
# Warmup Iteration  21: 103722.636 ops/s
# Warmup Iteration  22: 104914.661 ops/s
# Warmup Iteration  23: 108603.733 ops/s
# Warmup Iteration  24: 101352.788 ops/s
# Warmup Iteration  25: 104286.480 ops/s
# Warmup Iteration  26: 108696.829 ops/s
# Warmup Iteration  27: 102036.345 ops/s
# Warmup Iteration  28: 107154.170 ops/s
# Warmup Iteration  29: 108289.629 ops/s
# Warmup Iteration  30: 101987.690 ops/s
Iteration   1: 108170.903 ops/s
Iteration   2: 108323.235 ops/s
Iteration   3: 103041.992 ops/s
Iteration   4: 105324.766 ops/s
Iteration   5: 105822.999 ops/s
Iteration   6: 103985.041 ops/s
Iteration   7: 92491.679 ops/s
Iteration   8: 106514.201 ops/s
Iteration   9: 103294.519 ops/s
Iteration  10: 98343.390 ops/s
Iteration  11: 105955.923 ops/s
Iteration  12: 106875.373 ops/s
Iteration  13: 100293.318 ops/s
Iteration  14: 104026.381 ops/s
Iteration  15: 104440.278 ops/s
Iteration  16: 109566.686 ops/s
Iteration  17: 103816.928 ops/s
Iteration  18: 106501.569 ops/s
Iteration  19: 106973.836 ops/s
Iteration  20: 103806.234 ops/s
Iteration  21: 109484.928 ops/s
Iteration  22: 103377.810 ops/s
Iteration  23: 104702.514 ops/s
Iteration  24: 110147.623 ops/s
Iteration  25: 103907.236 ops/s
Iteration  26: 109352.235 ops/s
Iteration  27: 102890.586 ops/s
Iteration  28: 102662.234 ops/s
Iteration  29: 108389.521 ops/s
Iteration  30: 106431.283 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_842._Benchmark.benchmark_Cluster_842":
  104963.841 ±(99.9%) 2428.870 ops/s [Average]
  (min, avg, max) = (92491.679, 104963.841, 110147.623), stdev = 3635.419
  CI (99.9%): [102534.970, 107392.711] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_842._Benchmark.benchmark_Cluster_842  thrpt   30  104963.841 ± 2428.870  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_843._Benchmark.benchmark_Cluster_843$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_843._Benchmark.benchmark_Cluster_843

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.739 ops/s
# Warmup Iteration   2: 3863.076 ops/s
# Warmup Iteration   3: 16458.725 ops/s
# Warmup Iteration   4: 21245.670 ops/s
# Warmup Iteration   5: 28801.558 ops/s
# Warmup Iteration   6: 31008.962 ops/s
# Warmup Iteration   7: 48674.793 ops/s
# Warmup Iteration   8: 37880.468 ops/s
# Warmup Iteration   9: 33021.241 ops/s
# Warmup Iteration  10: 37348.940 ops/s
# Warmup Iteration  11: 96605.636 ops/s
# Warmup Iteration  12: 115910.930 ops/s
# Warmup Iteration  13: 115582.892 ops/s
# Warmup Iteration  14: 114091.154 ops/s
# Warmup Iteration  15: 119844.848 ops/s
# Warmup Iteration  16: 127377.066 ops/s
# Warmup Iteration  17: 122390.722 ops/s
# Warmup Iteration  18: 118175.948 ops/s
# Warmup Iteration  19: 123706.513 ops/s
# Warmup Iteration  20: 116430.554 ops/s
# Warmup Iteration  21: 121656.283 ops/s
# Warmup Iteration  22: 121470.702 ops/s
# Warmup Iteration  23: 119268.759 ops/s
# Warmup Iteration  24: 117883.456 ops/s
# Warmup Iteration  25: 113544.942 ops/s
# Warmup Iteration  26: 110160.065 ops/s
# Warmup Iteration  27: 127682.236 ops/s
# Warmup Iteration  28: 118617.269 ops/s
# Warmup Iteration  29: 123022.333 ops/s
# Warmup Iteration  30: 123352.777 ops/s
Iteration   1: 118171.465 ops/s
Iteration   2: 122333.351 ops/s
Iteration   3: 127096.689 ops/s
Iteration   4: 118622.237 ops/s
Iteration   5: 117528.625 ops/s
Iteration   6: 126334.010 ops/s
Iteration   7: 122539.360 ops/s
Iteration   8: 120752.150 ops/s
Iteration   9: 116097.714 ops/s
Iteration  10: 123161.358 ops/s
Iteration  11: 124934.860 ops/s
Iteration  12: 127978.589 ops/s
Iteration  13: 119665.550 ops/s
Iteration  14: 121769.259 ops/s
Iteration  15: 121957.270 ops/s
Iteration  16: 116995.965 ops/s
Iteration  17: 126491.558 ops/s
Iteration  18: 124639.047 ops/s
Iteration  19: 118852.242 ops/s
Iteration  20: 124827.878 ops/s
Iteration  21: 125732.348 ops/s
Iteration  22: 117382.280 ops/s
Iteration  23: 124956.158 ops/s
Iteration  24: 121677.860 ops/s
Iteration  25: 121084.905 ops/s
Iteration  26: 123166.819 ops/s
Iteration  27: 121511.442 ops/s
Iteration  28: 121405.905 ops/s
Iteration  29: 120099.845 ops/s
Iteration  30: 119059.580 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_843._Benchmark.benchmark_Cluster_843":
  121894.211 ±(99.9%) 2176.345 ops/s [Average]
  (min, avg, max) = (116097.714, 121894.211, 127978.589), stdev = 3257.451
  CI (99.9%): [119717.865, 124070.556] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_843._Benchmark.benchmark_Cluster_843  thrpt   30  121894.211 ± 2176.345  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_844._Benchmark.benchmark_Cluster_844$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_844._Benchmark.benchmark_Cluster_844

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.734 ops/s
# Warmup Iteration   2: 4531.718 ops/s
# Warmup Iteration   3: 21638.688 ops/s
# Warmup Iteration   4: 25952.898 ops/s
# Warmup Iteration   5: 30944.293 ops/s
# Warmup Iteration   6: 48962.150 ops/s
# Warmup Iteration   7: 48714.469 ops/s
# Warmup Iteration   8: 57602.447 ops/s
# Warmup Iteration   9: 47577.774 ops/s
# Warmup Iteration  10: 53476.431 ops/s
# Warmup Iteration  11: 44225.845 ops/s
# Warmup Iteration  12: 54398.736 ops/s
# Warmup Iteration  13: 107297.551 ops/s
# Warmup Iteration  14: 109977.895 ops/s
# Warmup Iteration  15: 120278.069 ops/s
# Warmup Iteration  16: 121806.964 ops/s
# Warmup Iteration  17: 120443.698 ops/s
# Warmup Iteration  18: 121886.271 ops/s
# Warmup Iteration  19: 121951.327 ops/s
# Warmup Iteration  20: 114973.113 ops/s
# Warmup Iteration  21: 120508.434 ops/s
# Warmup Iteration  22: 119265.974 ops/s
# Warmup Iteration  23: 113168.317 ops/s
# Warmup Iteration  24: 119821.690 ops/s
# Warmup Iteration  25: 124585.874 ops/s
# Warmup Iteration  26: 113768.382 ops/s
# Warmup Iteration  27: 123154.800 ops/s
# Warmup Iteration  28: 121270.974 ops/s
# Warmup Iteration  29: 122277.721 ops/s
# Warmup Iteration  30: 87173.252 ops/s
Iteration   1: 117687.491 ops/s
Iteration   2: 124325.116 ops/s
Iteration   3: 119290.830 ops/s
Iteration   4: 114977.323 ops/s
Iteration   5: 118574.439 ops/s
Iteration   6: 124047.013 ops/s
Iteration   7: 119043.929 ops/s
Iteration   8: 121012.088 ops/s
Iteration   9: 119354.341 ops/s
Iteration  10: 121736.931 ops/s
Iteration  11: 123539.484 ops/s
Iteration  12: 118253.228 ops/s
Iteration  13: 120304.338 ops/s
Iteration  14: 127320.696 ops/s
Iteration  15: 120053.015 ops/s
Iteration  16: 126311.084 ops/s
Iteration  17: 119154.920 ops/s
Iteration  18: 126766.046 ops/s
Iteration  19: 118752.230 ops/s
Iteration  20: 119340.544 ops/s
Iteration  21: 122724.216 ops/s
Iteration  22: 121780.158 ops/s
Iteration  23: 115935.754 ops/s
Iteration  24: 117591.460 ops/s
Iteration  25: 120974.063 ops/s
Iteration  26: 125201.711 ops/s
Iteration  27: 122434.576 ops/s
Iteration  28: 123965.647 ops/s
Iteration  29: 124745.120 ops/s
Iteration  30: 118995.329 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_844._Benchmark.benchmark_Cluster_844":
  121139.771 ±(99.9%) 2142.680 ops/s [Average]
  (min, avg, max) = (114977.323, 121139.771, 127320.696), stdev = 3207.063
  CI (99.9%): [118997.090, 123282.451] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_844._Benchmark.benchmark_Cluster_844  thrpt   30  121139.771 ± 2142.680  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_845._Benchmark.benchmark_Cluster_845$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_845._Benchmark.benchmark_Cluster_845

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7720.857 ops/s
# Warmup Iteration   2: 36321.513 ops/s
# Warmup Iteration   3: 69841.911 ops/s
# Warmup Iteration   4: 99035.963 ops/s
# Warmup Iteration   5: 119489.940 ops/s
# Warmup Iteration   6: 110932.182 ops/s
# Warmup Iteration   7: 114858.614 ops/s
# Warmup Iteration   8: 105365.606 ops/s
# Warmup Iteration   9: 115310.548 ops/s
# Warmup Iteration  10: 120953.143 ops/s
# Warmup Iteration  11: 114003.408 ops/s
# Warmup Iteration  12: 116427.908 ops/s
# Warmup Iteration  13: 119150.856 ops/s
# Warmup Iteration  14: 115120.010 ops/s
# Warmup Iteration  15: 114452.952 ops/s
# Warmup Iteration  16: 119380.563 ops/s
# Warmup Iteration  17: 118267.877 ops/s
# Warmup Iteration  18: 123145.594 ops/s
# Warmup Iteration  19: 117638.511 ops/s
# Warmup Iteration  20: 123951.828 ops/s
# Warmup Iteration  21: 118477.531 ops/s
# Warmup Iteration  22: 116177.774 ops/s
# Warmup Iteration  23: 121006.416 ops/s
# Warmup Iteration  24: 117893.139 ops/s
# Warmup Iteration  25: 121904.735 ops/s
# Warmup Iteration  26: 124974.896 ops/s
# Warmup Iteration  27: 125751.233 ops/s
# Warmup Iteration  28: 120372.965 ops/s
# Warmup Iteration  29: 120007.519 ops/s
# Warmup Iteration  30: 125277.998 ops/s
Iteration   1: 119545.911 ops/s
Iteration   2: 127095.809 ops/s
Iteration   3: 122607.729 ops/s
Iteration   4: 119044.863 ops/s
Iteration   5: 126416.596 ops/s
Iteration   6: 120163.400 ops/s
Iteration   7: 126549.299 ops/s
Iteration   8: 122731.887 ops/s
Iteration   9: 118852.858 ops/s
Iteration  10: 119661.884 ops/s
Iteration  11: 125528.082 ops/s
Iteration  12: 125688.778 ops/s
Iteration  13: 120071.837 ops/s
Iteration  14: 126448.683 ops/s
Iteration  15: 121892.177 ops/s
Iteration  16: 122537.578 ops/s
Iteration  17: 118173.702 ops/s
Iteration  18: 125725.308 ops/s
Iteration  19: 120546.301 ops/s
Iteration  20: 127465.468 ops/s
Iteration  21: 125802.470 ops/s
Iteration  22: 117710.657 ops/s
Iteration  23: 121472.956 ops/s
Iteration  24: 120566.022 ops/s
Iteration  25: 122804.807 ops/s
Iteration  26: 125346.887 ops/s
Iteration  27: 123746.690 ops/s
Iteration  28: 117368.098 ops/s
Iteration  29: 123586.957 ops/s
Iteration  30: 123593.666 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_845._Benchmark.benchmark_Cluster_845":
  122624.912 ±(99.9%) 2060.495 ops/s [Average]
  (min, avg, max) = (117368.098, 122624.912, 127465.468), stdev = 3084.053
  CI (99.9%): [120564.417, 124685.407] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_845._Benchmark.benchmark_Cluster_845  thrpt   30  122624.912 ± 2060.495  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_846._Benchmark.benchmark_Cluster_846$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_846._Benchmark.benchmark_Cluster_846

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5509.085 ops/s
# Warmup Iteration   2: 21573.006 ops/s
# Warmup Iteration   3: 31783.635 ops/s
# Warmup Iteration   4: 31000.565 ops/s
# Warmup Iteration   5: 36330.243 ops/s
# Warmup Iteration   6: 28819.006 ops/s
# Warmup Iteration   7: 41790.983 ops/s
# Warmup Iteration   8: 46814.972 ops/s
# Warmup Iteration   9: 92155.736 ops/s
# Warmup Iteration  10: 85255.938 ops/s
# Warmup Iteration  11: 104289.603 ops/s
# Warmup Iteration  12: 98726.664 ops/s
# Warmup Iteration  13: 104862.375 ops/s
# Warmup Iteration  14: 104405.157 ops/s
# Warmup Iteration  15: 96394.824 ops/s
# Warmup Iteration  16: 105863.163 ops/s
# Warmup Iteration  17: 101875.257 ops/s
# Warmup Iteration  18: 101419.986 ops/s
# Warmup Iteration  19: 104073.264 ops/s
# Warmup Iteration  20: 98648.439 ops/s
# Warmup Iteration  21: 106191.029 ops/s
# Warmup Iteration  22: 107002.541 ops/s
# Warmup Iteration  23: 99792.859 ops/s
# Warmup Iteration  24: 78799.795 ops/s
# Warmup Iteration  25: 97597.261 ops/s
# Warmup Iteration  26: 101690.167 ops/s
# Warmup Iteration  27: 103072.252 ops/s
# Warmup Iteration  28: 103744.613 ops/s
# Warmup Iteration  29: 105799.619 ops/s
# Warmup Iteration  30: 101487.404 ops/s
Iteration   1: 105720.853 ops/s
Iteration   2: 104815.320 ops/s
Iteration   3: 104740.459 ops/s
Iteration   4: 99608.860 ops/s
Iteration   5: 104805.340 ops/s
Iteration   6: 105924.089 ops/s
Iteration   7: 101405.304 ops/s
Iteration   8: 106302.695 ops/s
Iteration   9: 100853.630 ops/s
Iteration  10: 106198.167 ops/s
Iteration  11: 102832.404 ops/s
Iteration  12: 105966.458 ops/s
Iteration  13: 101295.743 ops/s
Iteration  14: 107710.217 ops/s
Iteration  15: 105222.307 ops/s
Iteration  16: 102714.196 ops/s
Iteration  17: 105543.953 ops/s
Iteration  18: 103713.270 ops/s
Iteration  19: 102961.774 ops/s
Iteration  20: 105583.211 ops/s
Iteration  21: 102540.574 ops/s
Iteration  22: 107332.009 ops/s
Iteration  23: 100183.181 ops/s
Iteration  24: 106625.913 ops/s
Iteration  25: 106784.785 ops/s
Iteration  26: 101190.946 ops/s
Iteration  27: 105889.926 ops/s
Iteration  28: 101131.833 ops/s
Iteration  29: 103284.362 ops/s
Iteration  30: 101168.647 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_846._Benchmark.benchmark_Cluster_846":
  104001.681 ±(99.9%) 1572.985 ops/s [Average]
  (min, avg, max) = (99608.860, 104001.681, 107710.217), stdev = 2354.370
  CI (99.9%): [102428.696, 105574.666] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_846._Benchmark.benchmark_Cluster_846  thrpt   30  104001.681 ± 1572.985  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_847._Benchmark.benchmark_Cluster_847$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_847._Benchmark.benchmark_Cluster_847

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3795.845 ops/s
# Warmup Iteration   2: 36181.393 ops/s
# Warmup Iteration   3: 26038.480 ops/s
# Warmup Iteration   4: 58017.898 ops/s
# Warmup Iteration   5: 99974.168 ops/s
# Warmup Iteration   6: 106220.956 ops/s
# Warmup Iteration   7: 110534.079 ops/s
# Warmup Iteration   8: 109282.103 ops/s
# Warmup Iteration   9: 105781.263 ops/s
# Warmup Iteration  10: 112737.769 ops/s
# Warmup Iteration  11: 109747.521 ops/s
# Warmup Iteration  12: 107918.914 ops/s
# Warmup Iteration  13: 109373.157 ops/s
# Warmup Iteration  14: 106582.598 ops/s
# Warmup Iteration  15: 113935.978 ops/s
# Warmup Iteration  16: 107062.281 ops/s
# Warmup Iteration  17: 119278.097 ops/s
# Warmup Iteration  18: 118606.039 ops/s
# Warmup Iteration  19: 113918.083 ops/s
# Warmup Iteration  20: 120355.363 ops/s
# Warmup Iteration  21: 115631.603 ops/s
# Warmup Iteration  22: 117625.434 ops/s
# Warmup Iteration  23: 121607.363 ops/s
# Warmup Iteration  24: 117059.054 ops/s
# Warmup Iteration  25: 110562.824 ops/s
# Warmup Iteration  26: 122419.159 ops/s
# Warmup Iteration  27: 122114.061 ops/s
# Warmup Iteration  28: 114954.371 ops/s
# Warmup Iteration  29: 117582.100 ops/s
# Warmup Iteration  30: 120973.467 ops/s
Iteration   1: 115965.847 ops/s
Iteration   2: 118954.973 ops/s
Iteration   3: 121880.177 ops/s
Iteration   4: 115365.533 ops/s
Iteration   5: 119360.452 ops/s
Iteration   6: 114969.777 ops/s
Iteration   7: 118022.096 ops/s
Iteration   8: 114844.216 ops/s
Iteration   9: 121824.487 ops/s
Iteration  10: 116947.988 ops/s
Iteration  11: 116147.562 ops/s
Iteration  12: 122457.612 ops/s
Iteration  13: 114589.849 ops/s
Iteration  14: 115175.470 ops/s
Iteration  15: 120179.587 ops/s
Iteration  16: 115329.595 ops/s
Iteration  17: 111415.073 ops/s
Iteration  18: 122060.765 ops/s
Iteration  19: 114453.287 ops/s
Iteration  20: 120304.026 ops/s
Iteration  21: 119667.775 ops/s
Iteration  22: 114801.639 ops/s
Iteration  23: 117951.081 ops/s
Iteration  24: 119487.569 ops/s
Iteration  25: 113749.657 ops/s
Iteration  26: 120383.304 ops/s
Iteration  27: 114769.525 ops/s
Iteration  28: 118226.326 ops/s
Iteration  29: 114137.211 ops/s
Iteration  30: 117924.145 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_847._Benchmark.benchmark_Cluster_847":
  117378.220 ±(99.9%) 1958.069 ops/s [Average]
  (min, avg, max) = (111415.073, 117378.220, 122457.612), stdev = 2930.746
  CI (99.9%): [115420.151, 119336.289] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_847._Benchmark.benchmark_Cluster_847  thrpt   30  117378.220 ± 1958.069  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_848._Benchmark.benchmark_Cluster_848$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_848._Benchmark.benchmark_Cluster_848

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.694 ops/s
# Warmup Iteration   2: 2336.379 ops/s
# Warmup Iteration   3: 4462.521 ops/s
# Warmup Iteration   4: 17185.812 ops/s
# Warmup Iteration   5: 21160.130 ops/s
# Warmup Iteration   6: 27656.833 ops/s
# Warmup Iteration   7: 21477.385 ops/s
# Warmup Iteration   8: 26586.913 ops/s
# Warmup Iteration   9: 19577.080 ops/s
# Warmup Iteration  10: 33392.922 ops/s
# Warmup Iteration  11: 31262.775 ops/s
# Warmup Iteration  12: 36767.150 ops/s
# Warmup Iteration  13: 30146.021 ops/s
# Warmup Iteration  14: 37963.992 ops/s
# Warmup Iteration  15: 32041.573 ops/s
# Warmup Iteration  16: 39081.889 ops/s
# Warmup Iteration  17: 42663.793 ops/s
# Warmup Iteration  18: 89205.931 ops/s
# Warmup Iteration  19: 85544.105 ops/s
# Warmup Iteration  20: 90024.468 ops/s
# Warmup Iteration  21: 86255.432 ops/s
# Warmup Iteration  22: 85570.336 ops/s
# Warmup Iteration  23: 92084.416 ops/s
# Warmup Iteration  24: 91426.569 ops/s
# Warmup Iteration  25: 84287.072 ops/s
# Warmup Iteration  26: 90165.990 ops/s
# Warmup Iteration  27: 85465.817 ops/s
# Warmup Iteration  28: 89097.559 ops/s
# Warmup Iteration  29: 86979.536 ops/s
# Warmup Iteration  30: 88735.587 ops/s
Iteration   1: 90142.385 ops/s
Iteration   2: 85939.610 ops/s
Iteration   3: 88589.123 ops/s
Iteration   4: 87156.588 ops/s
Iteration   5: 87101.081 ops/s
Iteration   6: 91101.586 ops/s
Iteration   7: 85731.353 ops/s
Iteration   8: 89908.466 ops/s
Iteration   9: 87539.986 ops/s
Iteration  10: 89722.972 ops/s
Iteration  11: 90032.930 ops/s
Iteration  12: 88994.988 ops/s
Iteration  13: 85741.131 ops/s
Iteration  14: 90520.437 ops/s
Iteration  15: 83460.222 ops/s
Iteration  16: 88703.715 ops/s
Iteration  17: 84697.324 ops/s
Iteration  18: 88282.917 ops/s
Iteration  19: 89861.824 ops/s
Iteration  20: 85631.225 ops/s
Iteration  21: 89990.500 ops/s
Iteration  22: 88696.719 ops/s
Iteration  23: 85972.474 ops/s
Iteration  24: 90547.791 ops/s
Iteration  25: 86568.078 ops/s
Iteration  26: 89630.490 ops/s
Iteration  27: 89778.832 ops/s
Iteration  28: 86702.438 ops/s
Iteration  29: 87206.108 ops/s
Iteration  30: 89796.271 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_848._Benchmark.benchmark_Cluster_848":
  88124.985 ±(99.9%) 1347.885 ops/s [Average]
  (min, avg, max) = (83460.222, 88124.985, 91101.586), stdev = 2017.451
  CI (99.9%): [86777.101, 89472.870] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_848._Benchmark.benchmark_Cluster_848  thrpt   30  88124.985 ± 1347.885  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_849._Benchmark.benchmark_Cluster_849$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_849._Benchmark.benchmark_Cluster_849

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1679.778 ops/s
# Warmup Iteration   2: 16809.438 ops/s
# Warmup Iteration   3: 23120.955 ops/s
# Warmup Iteration   4: 27682.714 ops/s
# Warmup Iteration   5: 28626.072 ops/s
# Warmup Iteration   6: 35611.740 ops/s
# Warmup Iteration   7: 39629.680 ops/s
# Warmup Iteration   8: 38286.359 ops/s
# Warmup Iteration   9: 30685.385 ops/s
# Warmup Iteration  10: 46224.141 ops/s
# Warmup Iteration  11: 80401.489 ops/s
# Warmup Iteration  12: 89260.355 ops/s
# Warmup Iteration  13: 87719.356 ops/s
# Warmup Iteration  14: 91242.044 ops/s
# Warmup Iteration  15: 84105.994 ops/s
# Warmup Iteration  16: 89074.764 ops/s
# Warmup Iteration  17: 89895.553 ops/s
# Warmup Iteration  18: 92878.325 ops/s
# Warmup Iteration  19: 89846.654 ops/s
# Warmup Iteration  20: 94630.522 ops/s
# Warmup Iteration  21: 90266.404 ops/s
# Warmup Iteration  22: 94672.514 ops/s
# Warmup Iteration  23: 90085.309 ops/s
# Warmup Iteration  24: 90813.526 ops/s
# Warmup Iteration  25: 94419.827 ops/s
# Warmup Iteration  26: 91560.583 ops/s
# Warmup Iteration  27: 91419.295 ops/s
# Warmup Iteration  28: 93651.214 ops/s
# Warmup Iteration  29: 90957.377 ops/s
# Warmup Iteration  30: 91730.733 ops/s
Iteration   1: 92403.691 ops/s
Iteration   2: 88784.831 ops/s
Iteration   3: 93482.881 ops/s
Iteration   4: 92145.247 ops/s
Iteration   5: 89855.392 ops/s
Iteration   6: 96620.012 ops/s
Iteration   7: 90340.431 ops/s
Iteration   8: 91588.291 ops/s
Iteration   9: 90399.222 ops/s
Iteration  10: 89482.466 ops/s
Iteration  11: 95314.115 ops/s
Iteration  12: 95423.546 ops/s
Iteration  13: 89371.708 ops/s
Iteration  14: 96354.156 ops/s
Iteration  15: 88286.795 ops/s
Iteration  16: 92044.512 ops/s
Iteration  17: 95047.142 ops/s
Iteration  18: 94631.133 ops/s
Iteration  19: 86227.293 ops/s
Iteration  20: 94085.088 ops/s
Iteration  21: 92624.505 ops/s
Iteration  22: 91073.648 ops/s
Iteration  23: 95265.959 ops/s
Iteration  24: 88772.650 ops/s
Iteration  25: 95697.994 ops/s
Iteration  26: 89457.887 ops/s
Iteration  27: 93765.551 ops/s
Iteration  28: 89853.001 ops/s
Iteration  29: 92789.044 ops/s
Iteration  30: 92960.347 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_849._Benchmark.benchmark_Cluster_849":
  92138.285 ±(99.9%) 1831.360 ops/s [Average]
  (min, avg, max) = (86227.293, 92138.285, 96620.012), stdev = 2741.094
  CI (99.9%): [90306.924, 93969.645] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_849._Benchmark.benchmark_Cluster_849  thrpt   30  92138.285 ± 1831.360  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_85._Benchmark.benchmark_Cluster_85$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_85._Benchmark.benchmark_Cluster_85

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.689 ops/s
# Warmup Iteration   2: 5127.941 ops/s
# Warmup Iteration   3: 29884.331 ops/s
# Warmup Iteration   4: 45150.713 ops/s
# Warmup Iteration   5: 56896.297 ops/s
# Warmup Iteration   6: 49738.136 ops/s
# Warmup Iteration   7: 68314.163 ops/s
# Warmup Iteration   8: 48119.395 ops/s
# Warmup Iteration   9: 78536.735 ops/s
# Warmup Iteration  10: 83872.015 ops/s
# Warmup Iteration  11: 145406.640 ops/s
# Warmup Iteration  12: 136152.009 ops/s
# Warmup Iteration  13: 146250.775 ops/s
# Warmup Iteration  14: 149451.921 ops/s
# Warmup Iteration  15: 147953.814 ops/s
# Warmup Iteration  16: 152680.416 ops/s
# Warmup Iteration  17: 144413.601 ops/s
# Warmup Iteration  18: 152623.658 ops/s
# Warmup Iteration  19: 146750.118 ops/s
# Warmup Iteration  20: 145530.764 ops/s
# Warmup Iteration  21: 153450.481 ops/s
# Warmup Iteration  22: 145834.405 ops/s
# Warmup Iteration  23: 151620.004 ops/s
# Warmup Iteration  24: 147100.353 ops/s
# Warmup Iteration  25: 150493.041 ops/s
# Warmup Iteration  26: 151792.449 ops/s
# Warmup Iteration  27: 144391.707 ops/s
# Warmup Iteration  28: 147803.387 ops/s
# Warmup Iteration  29: 153087.434 ops/s
# Warmup Iteration  30: 144330.114 ops/s
Iteration   1: 148003.896 ops/s
Iteration   2: 146102.045 ops/s
Iteration   3: 149002.035 ops/s
Iteration   4: 150322.955 ops/s
Iteration   5: 148074.554 ops/s
Iteration   6: 151254.943 ops/s
Iteration   7: 145588.392 ops/s
Iteration   8: 154359.446 ops/s
Iteration   9: 143542.348 ops/s
Iteration  10: 149293.946 ops/s
Iteration  11: 146671.471 ops/s
Iteration  12: 155530.610 ops/s
Iteration  13: 146135.441 ops/s
Iteration  14: 146075.765 ops/s
Iteration  15: 149365.787 ops/s
Iteration  16: 148580.008 ops/s
Iteration  17: 150850.898 ops/s
Iteration  18: 146319.521 ops/s
Iteration  19: 148223.139 ops/s
Iteration  20: 153408.925 ops/s
Iteration  21: 148344.006 ops/s
Iteration  22: 150716.909 ops/s
Iteration  23: 146257.221 ops/s
Iteration  24: 154568.979 ops/s
Iteration  25: 153830.859 ops/s
Iteration  26: 148437.674 ops/s
Iteration  27: 152818.165 ops/s
Iteration  28: 148896.415 ops/s
Iteration  29: 149231.668 ops/s
Iteration  30: 148627.862 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_85._Benchmark.benchmark_Cluster_85":
  149281.196 ±(99.9%) 2004.664 ops/s [Average]
  (min, avg, max) = (143542.348, 149281.196, 155530.610), stdev = 3000.487
  CI (99.9%): [147276.532, 151285.860] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_85._Benchmark.benchmark_Cluster_85  thrpt   30  149281.196 ± 2004.664  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_850._Benchmark.benchmark_Cluster_850$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_850._Benchmark.benchmark_Cluster_850

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2263.842 ops/s
# Warmup Iteration   2: 26079.841 ops/s
# Warmup Iteration   3: 36836.420 ops/s
# Warmup Iteration   4: 40410.040 ops/s
# Warmup Iteration   5: 44773.953 ops/s
# Warmup Iteration   6: 43045.018 ops/s
# Warmup Iteration   7: 41489.235 ops/s
# Warmup Iteration   8: 51379.521 ops/s
# Warmup Iteration   9: 102192.431 ops/s
# Warmup Iteration  10: 109375.527 ops/s
# Warmup Iteration  11: 101711.741 ops/s
# Warmup Iteration  12: 107075.844 ops/s
# Warmup Iteration  13: 104472.317 ops/s
# Warmup Iteration  14: 105055.649 ops/s
# Warmup Iteration  15: 107407.475 ops/s
# Warmup Iteration  16: 102306.709 ops/s
# Warmup Iteration  17: 110252.172 ops/s
# Warmup Iteration  18: 107053.035 ops/s
# Warmup Iteration  19: 104362.810 ops/s
# Warmup Iteration  20: 108194.651 ops/s
# Warmup Iteration  21: 112844.532 ops/s
# Warmup Iteration  22: 110469.268 ops/s
# Warmup Iteration  23: 112473.925 ops/s
# Warmup Iteration  24: 108007.820 ops/s
# Warmup Iteration  25: 107468.222 ops/s
# Warmup Iteration  26: 110395.366 ops/s
# Warmup Iteration  27: 109915.535 ops/s
# Warmup Iteration  28: 114245.684 ops/s
# Warmup Iteration  29: 113535.782 ops/s
# Warmup Iteration  30: 106971.010 ops/s
Iteration   1: 115942.182 ops/s
Iteration   2: 115134.176 ops/s
Iteration   3: 105896.681 ops/s
Iteration   4: 113469.774 ops/s
Iteration   5: 108578.427 ops/s
Iteration   6: 111341.599 ops/s
Iteration   7: 114505.628 ops/s
Iteration   8: 108017.410 ops/s
Iteration   9: 113903.932 ops/s
Iteration  10: 108893.059 ops/s
Iteration  11: 107604.409 ops/s
Iteration  12: 105375.730 ops/s
Iteration  13: 110045.998 ops/s
Iteration  14: 109766.585 ops/s
Iteration  15: 111011.964 ops/s
Iteration  16: 110285.532 ops/s
Iteration  17: 113703.928 ops/s
Iteration  18: 111583.392 ops/s
Iteration  19: 115043.220 ops/s
Iteration  20: 108224.111 ops/s
Iteration  21: 115895.147 ops/s
Iteration  22: 109589.462 ops/s
Iteration  23: 114824.872 ops/s
Iteration  24: 112161.654 ops/s
Iteration  25: 109005.584 ops/s
Iteration  26: 115680.414 ops/s
Iteration  27: 108334.500 ops/s
Iteration  28: 115087.114 ops/s
Iteration  29: 110481.467 ops/s
Iteration  30: 111244.460 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_850._Benchmark.benchmark_Cluster_850":
  111354.414 ±(99.9%) 2074.871 ops/s [Average]
  (min, avg, max) = (105375.730, 111354.414, 115942.182), stdev = 3105.570
  CI (99.9%): [109279.542, 113429.285] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_850._Benchmark.benchmark_Cluster_850  thrpt   30  111354.414 ± 2074.871  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_851._Benchmark.benchmark_Cluster_851$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_851._Benchmark.benchmark_Cluster_851

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1823.113 ops/s
# Warmup Iteration   2: 15226.931 ops/s
# Warmup Iteration   3: 22202.966 ops/s
# Warmup Iteration   4: 24301.487 ops/s
# Warmup Iteration   5: 23393.962 ops/s
# Warmup Iteration   6: 37671.091 ops/s
# Warmup Iteration   7: 79154.736 ops/s
# Warmup Iteration   8: 80289.974 ops/s
# Warmup Iteration   9: 79766.454 ops/s
# Warmup Iteration  10: 77638.548 ops/s
# Warmup Iteration  11: 80370.383 ops/s
# Warmup Iteration  12: 81830.402 ops/s
# Warmup Iteration  13: 80539.201 ops/s
# Warmup Iteration  14: 81626.339 ops/s
# Warmup Iteration  15: 77686.510 ops/s
# Warmup Iteration  16: 81684.506 ops/s
# Warmup Iteration  17: 82297.635 ops/s
# Warmup Iteration  18: 83166.619 ops/s
# Warmup Iteration  19: 82810.105 ops/s
# Warmup Iteration  20: 77671.967 ops/s
# Warmup Iteration  21: 84792.095 ops/s
# Warmup Iteration  22: 81384.068 ops/s
# Warmup Iteration  23: 81652.991 ops/s
# Warmup Iteration  24: 83445.200 ops/s
# Warmup Iteration  25: 81434.059 ops/s
# Warmup Iteration  26: 83315.944 ops/s
# Warmup Iteration  27: 85152.884 ops/s
# Warmup Iteration  28: 81263.659 ops/s
# Warmup Iteration  29: 85844.469 ops/s
# Warmup Iteration  30: 81227.436 ops/s
Iteration   1: 82234.516 ops/s
Iteration   2: 84954.618 ops/s
Iteration   3: 82827.158 ops/s
Iteration   4: 84047.997 ops/s
Iteration   5: 81847.665 ops/s
Iteration   6: 83552.734 ops/s
Iteration   7: 83633.579 ops/s
Iteration   8: 81558.830 ops/s
Iteration   9: 87220.670 ops/s
Iteration  10: 87053.262 ops/s
Iteration  11: 82959.465 ops/s
Iteration  12: 77691.660 ops/s
Iteration  13: 81912.059 ops/s
Iteration  14: 82282.745 ops/s
Iteration  15: 83447.033 ops/s
Iteration  16: 84752.004 ops/s
Iteration  17: 83244.321 ops/s
Iteration  18: 84744.064 ops/s
Iteration  19: 85969.715 ops/s
Iteration  20: 82697.387 ops/s
Iteration  21: 84074.292 ops/s
Iteration  22: 82754.155 ops/s
Iteration  23: 84752.524 ops/s
Iteration  24: 82552.795 ops/s
Iteration  25: 84345.538 ops/s
Iteration  26: 82529.739 ops/s
Iteration  27: 84303.089 ops/s
Iteration  28: 84654.077 ops/s
Iteration  29: 80550.084 ops/s
Iteration  30: 84966.329 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_851._Benchmark.benchmark_Cluster_851":
  83470.470 ±(99.9%) 1260.526 ops/s [Average]
  (min, avg, max) = (77691.660, 83470.470, 87220.670), stdev = 1886.696
  CI (99.9%): [82209.944, 84730.996] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_851._Benchmark.benchmark_Cluster_851  thrpt   30  83470.470 ± 1260.526  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_852._Benchmark.benchmark_Cluster_852$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_852._Benchmark.benchmark_Cluster_852

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7488.657 ops/s
# Warmup Iteration   2: 58433.935 ops/s
# Warmup Iteration   3: 82058.149 ops/s
# Warmup Iteration   4: 155451.321 ops/s
# Warmup Iteration   5: 153368.960 ops/s
# Warmup Iteration   6: 170501.199 ops/s
# Warmup Iteration   7: 178449.883 ops/s
# Warmup Iteration   8: 168712.698 ops/s
# Warmup Iteration   9: 178231.423 ops/s
# Warmup Iteration  10: 179220.638 ops/s
# Warmup Iteration  11: 169236.244 ops/s
# Warmup Iteration  12: 176439.056 ops/s
# Warmup Iteration  13: 174741.469 ops/s
# Warmup Iteration  14: 177606.987 ops/s
# Warmup Iteration  15: 176743.428 ops/s
# Warmup Iteration  16: 176615.749 ops/s
# Warmup Iteration  17: 182082.245 ops/s
# Warmup Iteration  18: 175695.975 ops/s
# Warmup Iteration  19: 172479.376 ops/s
# Warmup Iteration  20: 183954.639 ops/s
# Warmup Iteration  21: 176427.967 ops/s
# Warmup Iteration  22: 176484.585 ops/s
# Warmup Iteration  23: 185759.896 ops/s
# Warmup Iteration  24: 177386.612 ops/s
# Warmup Iteration  25: 178842.991 ops/s
# Warmup Iteration  26: 185217.795 ops/s
# Warmup Iteration  27: 177941.243 ops/s
# Warmup Iteration  28: 183467.913 ops/s
# Warmup Iteration  29: 179218.469 ops/s
# Warmup Iteration  30: 184823.137 ops/s
Iteration   1: 186611.756 ops/s
Iteration   2: 172704.910 ops/s
Iteration   3: 187917.291 ops/s
Iteration   4: 178129.486 ops/s
Iteration   5: 186401.451 ops/s
Iteration   6: 177973.461 ops/s
Iteration   7: 179988.112 ops/s
Iteration   8: 186244.538 ops/s
Iteration   9: 179028.254 ops/s
Iteration  10: 191618.172 ops/s
Iteration  11: 176924.986 ops/s
Iteration  12: 179528.495 ops/s
Iteration  13: 177800.931 ops/s
Iteration  14: 180408.272 ops/s
Iteration  15: 176807.752 ops/s
Iteration  16: 183098.199 ops/s
Iteration  17: 175662.194 ops/s
Iteration  18: 182907.057 ops/s
Iteration  19: 177433.390 ops/s
Iteration  20: 185567.290 ops/s
Iteration  21: 181232.817 ops/s
Iteration  22: 185067.000 ops/s
Iteration  23: 179192.615 ops/s
Iteration  24: 175402.593 ops/s
Iteration  25: 188454.973 ops/s
Iteration  26: 175503.153 ops/s
Iteration  27: 189596.532 ops/s
Iteration  28: 175755.743 ops/s
Iteration  29: 183180.966 ops/s
Iteration  30: 174231.707 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_852._Benchmark.benchmark_Cluster_852":
  181012.470 ±(99.9%) 3388.323 ops/s [Average]
  (min, avg, max) = (172704.910, 181012.470, 191618.172), stdev = 5071.483
  CI (99.9%): [177624.147, 184400.793] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_852._Benchmark.benchmark_Cluster_852  thrpt   30  181012.470 ± 3388.323  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_853._Benchmark.benchmark_Cluster_853$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_853._Benchmark.benchmark_Cluster_853

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9297.620 ops/s
# Warmup Iteration   2: 23564.271 ops/s
# Warmup Iteration   3: 36995.077 ops/s
# Warmup Iteration   4: 70229.312 ops/s
# Warmup Iteration   5: 77247.315 ops/s
# Warmup Iteration   6: 70214.729 ops/s
# Warmup Iteration   7: 70848.798 ops/s
# Warmup Iteration   8: 81516.858 ops/s
# Warmup Iteration   9: 66546.867 ops/s
# Warmup Iteration  10: 68809.737 ops/s
# Warmup Iteration  11: 70862.896 ops/s
# Warmup Iteration  12: 68935.612 ops/s
# Warmup Iteration  13: 73867.784 ops/s
# Warmup Iteration  14: 65214.744 ops/s
# Warmup Iteration  15: 78534.976 ops/s
# Warmup Iteration  16: 68637.166 ops/s
# Warmup Iteration  17: 69736.722 ops/s
# Warmup Iteration  18: 70801.580 ops/s
# Warmup Iteration  19: 71612.856 ops/s
# Warmup Iteration  20: 77092.161 ops/s
# Warmup Iteration  21: 77240.074 ops/s
# Warmup Iteration  22: 67062.030 ops/s
# Warmup Iteration  23: 72376.637 ops/s
# Warmup Iteration  24: 72245.045 ops/s
# Warmup Iteration  25: 72523.091 ops/s
# Warmup Iteration  26: 70037.475 ops/s
# Warmup Iteration  27: 75266.542 ops/s
# Warmup Iteration  28: 77981.000 ops/s
# Warmup Iteration  29: 66620.723 ops/s
# Warmup Iteration  30: 76217.761 ops/s
Iteration   1: 69563.795 ops/s
Iteration   2: 67415.444 ops/s
Iteration   3: 70339.278 ops/s
Iteration   4: 79004.849 ops/s
Iteration   5: 75132.389 ops/s
Iteration   6: 66526.049 ops/s
Iteration   7: 71469.960 ops/s
Iteration   8: 80850.928 ops/s
Iteration   9: 75636.903 ops/s
Iteration  10: 71228.939 ops/s
Iteration  11: 66788.022 ops/s
Iteration  12: 73610.480 ops/s
Iteration  13: 68926.765 ops/s
Iteration  14: 78263.147 ops/s
Iteration  15: 64749.975 ops/s
Iteration  16: 70282.757 ops/s
Iteration  17: 70058.479 ops/s
Iteration  18: 68310.527 ops/s
Iteration  19: 78322.876 ops/s
Iteration  20: 69508.598 ops/s
Iteration  21: 70335.326 ops/s
Iteration  22: 61252.017 ops/s
Iteration  23: 69787.007 ops/s
Iteration  24: 71138.577 ops/s
Iteration  25: 66230.312 ops/s
Iteration  26: 67371.380 ops/s
Iteration  27: 64373.901 ops/s
Iteration  28: 66930.056 ops/s
Iteration  29: 66716.376 ops/s
Iteration  30: 75712.407 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_853._Benchmark.benchmark_Cluster_853":
  70527.917 ±(99.9%) 3157.457 ops/s [Average]
  (min, avg, max) = (61252.017, 70527.917, 80850.928), stdev = 4725.933
  CI (99.9%): [67370.461, 73685.374] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_853._Benchmark.benchmark_Cluster_853  thrpt   30  70527.917 ± 3157.457  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_854._Benchmark.benchmark_Cluster_854$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_854._Benchmark.benchmark_Cluster_854

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4236.555 ops/s
# Warmup Iteration   2: 22828.385 ops/s
# Warmup Iteration   3: 31048.596 ops/s
# Warmup Iteration   4: 48310.599 ops/s
# Warmup Iteration   5: 63570.113 ops/s
# Warmup Iteration   6: 82348.292 ops/s
# Warmup Iteration   7: 89814.694 ops/s
# Warmup Iteration   8: 85749.978 ops/s
# Warmup Iteration   9: 107271.826 ops/s
# Warmup Iteration  10: 96337.971 ops/s
# Warmup Iteration  11: 108945.600 ops/s
# Warmup Iteration  12: 98140.176 ops/s
# Warmup Iteration  13: 98954.926 ops/s
# Warmup Iteration  14: 109498.728 ops/s
# Warmup Iteration  15: 110825.045 ops/s
# Warmup Iteration  16: 97245.342 ops/s
# Warmup Iteration  17: 103771.114 ops/s
# Warmup Iteration  18: 103770.720 ops/s
# Warmup Iteration  19: 103249.824 ops/s
# Warmup Iteration  20: 81233.231 ops/s
# Warmup Iteration  21: 90187.278 ops/s
# Warmup Iteration  22: 86097.432 ops/s
# Warmup Iteration  23: 110941.116 ops/s
# Warmup Iteration  24: 106704.316 ops/s
# Warmup Iteration  25: 98573.265 ops/s
# Warmup Iteration  26: 98654.676 ops/s
# Warmup Iteration  27: 107760.757 ops/s
# Warmup Iteration  28: 110347.617 ops/s
# Warmup Iteration  29: 107755.850 ops/s
# Warmup Iteration  30: 111607.894 ops/s
Iteration   1: 90318.976 ops/s
Iteration   2: 110000.787 ops/s
Iteration   3: 93499.938 ops/s
Iteration   4: 97653.362 ops/s
Iteration   5: 99398.996 ops/s
Iteration   6: 108785.549 ops/s
Iteration   7: 95287.817 ops/s
Iteration   8: 111895.712 ops/s
Iteration   9: 97863.026 ops/s
Iteration  10: 99415.458 ops/s
Iteration  11: 106393.756 ops/s
Iteration  12: 85785.497 ops/s
Iteration  13: 109705.415 ops/s
Iteration  14: 109848.467 ops/s
Iteration  15: 100557.757 ops/s
Iteration  16: 103753.654 ops/s
Iteration  17: 104379.781 ops/s
Iteration  18: 100636.823 ops/s
Iteration  19: 108980.047 ops/s
Iteration  20: 105425.519 ops/s
Iteration  21: 105665.483 ops/s
Iteration  22: 73881.928 ops/s
Iteration  23: 103333.607 ops/s
Iteration  24: 84293.424 ops/s
Iteration  25: 107324.648 ops/s
Iteration  26: 99963.570 ops/s
Iteration  27: 104748.040 ops/s
Iteration  28: 103508.652 ops/s
Iteration  29: 109003.408 ops/s
Iteration  30: 97442.451 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_854._Benchmark.benchmark_Cluster_854":
  100958.385 ±(99.9%) 5801.256 ops/s [Average]
  (min, avg, max) = (73881.928, 100958.385, 111895.712), stdev = 8683.048
  CI (99.9%): [95157.129, 106759.641] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_854._Benchmark.benchmark_Cluster_854  thrpt   30  100958.385 ± 5801.256  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_855._Benchmark.benchmark_Cluster_855$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_855._Benchmark.benchmark_Cluster_855

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9898.845 ops/s
# Warmup Iteration   2: 30247.555 ops/s
# Warmup Iteration   3: 34940.274 ops/s
# Warmup Iteration   4: 45688.492 ops/s
# Warmup Iteration   5: 50782.446 ops/s
# Warmup Iteration   6: 118204.834 ops/s
# Warmup Iteration   7: 112333.798 ops/s
# Warmup Iteration   8: 119850.623 ops/s
# Warmup Iteration   9: 122391.868 ops/s
# Warmup Iteration  10: 125357.102 ops/s
# Warmup Iteration  11: 123896.035 ops/s
# Warmup Iteration  12: 120691.753 ops/s
# Warmup Iteration  13: 123758.279 ops/s
# Warmup Iteration  14: 119837.134 ops/s
# Warmup Iteration  15: 123417.118 ops/s
# Warmup Iteration  16: 121914.970 ops/s
# Warmup Iteration  17: 125516.904 ops/s
# Warmup Iteration  18: 124564.655 ops/s
# Warmup Iteration  19: 123210.061 ops/s
# Warmup Iteration  20: 130360.431 ops/s
# Warmup Iteration  21: 119384.224 ops/s
# Warmup Iteration  22: 126429.891 ops/s
# Warmup Iteration  23: 121146.691 ops/s
# Warmup Iteration  24: 126446.045 ops/s
# Warmup Iteration  25: 124613.914 ops/s
# Warmup Iteration  26: 121018.747 ops/s
# Warmup Iteration  27: 126139.306 ops/s
# Warmup Iteration  28: 124652.164 ops/s
# Warmup Iteration  29: 127540.985 ops/s
# Warmup Iteration  30: 122510.248 ops/s
Iteration   1: 119236.577 ops/s
Iteration   2: 125572.265 ops/s
Iteration   3: 126098.893 ops/s
Iteration   4: 121176.258 ops/s
Iteration   5: 118130.509 ops/s
Iteration   6: 127900.019 ops/s
Iteration   7: 117464.119 ops/s
Iteration   8: 124584.419 ops/s
Iteration   9: 121559.171 ops/s
Iteration  10: 124890.000 ops/s
Iteration  11: 125684.405 ops/s
Iteration  12: 123654.501 ops/s
Iteration  13: 127199.650 ops/s
Iteration  14: 129412.080 ops/s
Iteration  15: 124833.200 ops/s
Iteration  16: 124183.176 ops/s
Iteration  17: 122129.382 ops/s
Iteration  18: 124159.390 ops/s
Iteration  19: 121121.323 ops/s
Iteration  20: 128092.186 ops/s
Iteration  21: 117587.907 ops/s
Iteration  22: 128069.133 ops/s
Iteration  23: 122404.042 ops/s
Iteration  24: 126099.137 ops/s
Iteration  25: 124860.219 ops/s
Iteration  26: 123275.314 ops/s
Iteration  27: 131368.691 ops/s
Iteration  28: 127738.007 ops/s
Iteration  29: 123230.500 ops/s
Iteration  30: 126653.920 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_855._Benchmark.benchmark_Cluster_855":
  124278.946 ±(99.9%) 2315.222 ops/s [Average]
  (min, avg, max) = (117464.119, 124278.946, 131368.691), stdev = 3465.316
  CI (99.9%): [121963.724, 126594.169] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_855._Benchmark.benchmark_Cluster_855  thrpt   30  124278.946 ± 2315.222  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_856._Benchmark.benchmark_Cluster_856$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_856._Benchmark.benchmark_Cluster_856

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14783.722 ops/s
# Warmup Iteration   2: 30743.113 ops/s
# Warmup Iteration   3: 50072.323 ops/s
# Warmup Iteration   4: 102511.537 ops/s
# Warmup Iteration   5: 113483.819 ops/s
# Warmup Iteration   6: 131394.987 ops/s
# Warmup Iteration   7: 107617.629 ops/s
# Warmup Iteration   8: 129836.138 ops/s
# Warmup Iteration   9: 125410.183 ops/s
# Warmup Iteration  10: 133828.663 ops/s
# Warmup Iteration  11: 126636.378 ops/s
# Warmup Iteration  12: 125362.939 ops/s
# Warmup Iteration  13: 134610.850 ops/s
# Warmup Iteration  14: 125156.658 ops/s
# Warmup Iteration  15: 128447.875 ops/s
# Warmup Iteration  16: 131665.594 ops/s
# Warmup Iteration  17: 134358.651 ops/s
# Warmup Iteration  18: 134975.948 ops/s
# Warmup Iteration  19: 135353.997 ops/s
# Warmup Iteration  20: 137426.417 ops/s
# Warmup Iteration  21: 139031.601 ops/s
# Warmup Iteration  22: 135091.218 ops/s
# Warmup Iteration  23: 134313.749 ops/s
# Warmup Iteration  24: 138365.025 ops/s
# Warmup Iteration  25: 135907.504 ops/s
# Warmup Iteration  26: 139241.495 ops/s
# Warmup Iteration  27: 133292.579 ops/s
# Warmup Iteration  28: 141571.778 ops/s
# Warmup Iteration  29: 136756.344 ops/s
# Warmup Iteration  30: 136101.064 ops/s
Iteration   1: 138056.348 ops/s
Iteration   2: 134963.774 ops/s
Iteration   3: 133241.727 ops/s
Iteration   4: 138592.336 ops/s
Iteration   5: 132142.533 ops/s
Iteration   6: 137396.667 ops/s
Iteration   7: 136605.200 ops/s
Iteration   8: 138587.901 ops/s
Iteration   9: 133648.064 ops/s
Iteration  10: 136833.374 ops/s
Iteration  11: 139703.183 ops/s
Iteration  12: 134919.751 ops/s
Iteration  13: 138878.841 ops/s
Iteration  14: 142675.370 ops/s
Iteration  15: 132642.901 ops/s
Iteration  16: 116605.032 ops/s
Iteration  17: 138565.459 ops/s
Iteration  18: 135256.772 ops/s
Iteration  19: 135728.565 ops/s
Iteration  20: 140022.190 ops/s
Iteration  21: 132024.383 ops/s
Iteration  22: 136726.709 ops/s
Iteration  23: 137408.741 ops/s
Iteration  24: 139957.825 ops/s
Iteration  25: 132987.855 ops/s
Iteration  26: 135090.745 ops/s
Iteration  27: 138595.039 ops/s
Iteration  28: 138338.104 ops/s
Iteration  29: 131232.303 ops/s
Iteration  30: 135133.995 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_856._Benchmark.benchmark_Cluster_856":
  135752.056 ±(99.9%) 3054.178 ops/s [Average]
  (min, avg, max) = (116605.032, 135752.056, 142675.370), stdev = 4571.351
  CI (99.9%): [132697.878, 138806.235] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_856._Benchmark.benchmark_Cluster_856  thrpt   30  135752.056 ± 3054.178  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_857._Benchmark.benchmark_Cluster_857$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_857._Benchmark.benchmark_Cluster_857

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20440.086 ops/s
# Warmup Iteration   2: 78609.655 ops/s
# Warmup Iteration   3: 146837.529 ops/s
# Warmup Iteration   4: 161573.946 ops/s
# Warmup Iteration   5: 170599.713 ops/s
# Warmup Iteration   6: 167369.500 ops/s
# Warmup Iteration   7: 171056.918 ops/s
# Warmup Iteration   8: 171070.911 ops/s
# Warmup Iteration   9: 162494.541 ops/s
# Warmup Iteration  10: 171467.196 ops/s
# Warmup Iteration  11: 162510.702 ops/s
# Warmup Iteration  12: 163158.645 ops/s
# Warmup Iteration  13: 173594.308 ops/s
# Warmup Iteration  14: 166424.959 ops/s
# Warmup Iteration  15: 169640.846 ops/s
# Warmup Iteration  16: 163869.674 ops/s
# Warmup Iteration  17: 183304.666 ops/s
# Warmup Iteration  18: 174885.126 ops/s
# Warmup Iteration  19: 170588.776 ops/s
# Warmup Iteration  20: 181043.526 ops/s
# Warmup Iteration  21: 176118.604 ops/s
# Warmup Iteration  22: 172339.370 ops/s
# Warmup Iteration  23: 174645.159 ops/s
# Warmup Iteration  24: 174125.931 ops/s
# Warmup Iteration  25: 173636.920 ops/s
# Warmup Iteration  26: 173913.178 ops/s
# Warmup Iteration  27: 181132.920 ops/s
# Warmup Iteration  28: 173090.328 ops/s
# Warmup Iteration  29: 173258.556 ops/s
# Warmup Iteration  30: 178399.115 ops/s
Iteration   1: 173139.769 ops/s
Iteration   2: 174816.899 ops/s
Iteration   3: 174488.500 ops/s
Iteration   4: 174459.671 ops/s
Iteration   5: 179283.929 ops/s
Iteration   6: 173254.167 ops/s
Iteration   7: 173452.581 ops/s
Iteration   8: 171240.583 ops/s
Iteration   9: 181896.188 ops/s
Iteration  10: 170008.327 ops/s
Iteration  11: 182298.620 ops/s
Iteration  12: 173922.283 ops/s
Iteration  13: 173066.405 ops/s
Iteration  14: 179697.102 ops/s
Iteration  15: 177158.822 ops/s
Iteration  16: 171985.444 ops/s
Iteration  17: 178571.333 ops/s
Iteration  18: 172842.999 ops/s
Iteration  19: 176840.450 ops/s
Iteration  20: 182576.153 ops/s
Iteration  21: 171938.089 ops/s
Iteration  22: 184668.566 ops/s
Iteration  23: 180067.178 ops/s
Iteration  24: 172207.722 ops/s
Iteration  25: 178425.078 ops/s
Iteration  26: 182555.253 ops/s
Iteration  27: 166923.574 ops/s
Iteration  28: 181606.380 ops/s
Iteration  29: 172604.055 ops/s
Iteration  30: 168394.032 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_857._Benchmark.benchmark_Cluster_857":
  175813.005 ±(99.9%) 3114.484 ops/s [Average]
  (min, avg, max) = (166923.574, 175813.005, 184668.566), stdev = 4661.613
  CI (99.9%): [172698.521, 178927.489] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_857._Benchmark.benchmark_Cluster_857  thrpt   30  175813.005 ± 3114.484  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_858._Benchmark.benchmark_Cluster_858$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_858._Benchmark.benchmark_Cluster_858

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.785 ops/s
# Warmup Iteration   2: 2161.107 ops/s
# Warmup Iteration   3: 11324.653 ops/s
# Warmup Iteration   4: 19458.476 ops/s
# Warmup Iteration   5: 26272.690 ops/s
# Warmup Iteration   6: 25581.264 ops/s
# Warmup Iteration   7: 27639.187 ops/s
# Warmup Iteration   8: 32822.302 ops/s
# Warmup Iteration   9: 29649.837 ops/s
# Warmup Iteration  10: 39296.815 ops/s
# Warmup Iteration  11: 44464.353 ops/s
# Warmup Iteration  12: 43665.898 ops/s
# Warmup Iteration  13: 82701.428 ops/s
# Warmup Iteration  14: 83156.860 ops/s
# Warmup Iteration  15: 80157.686 ops/s
# Warmup Iteration  16: 84667.802 ops/s
# Warmup Iteration  17: 84618.095 ops/s
# Warmup Iteration  18: 88482.984 ops/s
# Warmup Iteration  19: 84867.651 ops/s
# Warmup Iteration  20: 86128.272 ops/s
# Warmup Iteration  21: 83303.161 ops/s
# Warmup Iteration  22: 87191.037 ops/s
# Warmup Iteration  23: 82820.627 ops/s
# Warmup Iteration  24: 83002.527 ops/s
# Warmup Iteration  25: 85025.504 ops/s
# Warmup Iteration  26: 82984.815 ops/s
# Warmup Iteration  27: 85469.179 ops/s
# Warmup Iteration  28: 85343.944 ops/s
# Warmup Iteration  29: 83899.270 ops/s
# Warmup Iteration  30: 87185.706 ops/s
Iteration   1: 83168.755 ops/s
Iteration   2: 85458.928 ops/s
Iteration   3: 87112.989 ops/s
Iteration   4: 80698.709 ops/s
Iteration   5: 87670.264 ops/s
Iteration   6: 85153.287 ops/s
Iteration   7: 85329.534 ops/s
Iteration   8: 83317.375 ops/s
Iteration   9: 84165.334 ops/s
Iteration  10: 72863.049 ops/s
Iteration  11: 82747.139 ops/s
Iteration  12: 85944.673 ops/s
Iteration  13: 81118.429 ops/s
Iteration  14: 86480.730 ops/s
Iteration  15: 82685.149 ops/s
Iteration  16: 85776.215 ops/s
Iteration  17: 85316.172 ops/s
Iteration  18: 85032.996 ops/s
Iteration  19: 90420.804 ops/s
Iteration  20: 82194.728 ops/s
Iteration  21: 88268.324 ops/s
Iteration  22: 83356.887 ops/s
Iteration  23: 86114.531 ops/s
Iteration  24: 85103.764 ops/s
Iteration  25: 84303.129 ops/s
Iteration  26: 83826.785 ops/s
Iteration  27: 86007.377 ops/s
Iteration  28: 88545.112 ops/s
Iteration  29: 82474.150 ops/s
Iteration  30: 84813.284 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_858._Benchmark.benchmark_Cluster_858":
  84515.620 ±(99.9%) 2078.328 ops/s [Average]
  (min, avg, max) = (72863.049, 84515.620, 90420.804), stdev = 3110.743
  CI (99.9%): [82437.293, 86593.948] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_858._Benchmark.benchmark_Cluster_858  thrpt   30  84515.620 ± 2078.328  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_859._Benchmark.benchmark_Cluster_859$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_859._Benchmark.benchmark_Cluster_859

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11327.508 ops/s
# Warmup Iteration   2: 31752.261 ops/s
# Warmup Iteration   3: 37999.711 ops/s
# Warmup Iteration   4: 58650.582 ops/s
# Warmup Iteration   5: 96801.432 ops/s
# Warmup Iteration   6: 110649.657 ops/s
# Warmup Iteration   7: 104168.530 ops/s
# Warmup Iteration   8: 94377.258 ops/s
# Warmup Iteration   9: 109898.357 ops/s
# Warmup Iteration  10: 106904.962 ops/s
# Warmup Iteration  11: 106198.009 ops/s
# Warmup Iteration  12: 108495.000 ops/s
# Warmup Iteration  13: 111194.171 ops/s
# Warmup Iteration  14: 105428.801 ops/s
# Warmup Iteration  15: 109238.597 ops/s
# Warmup Iteration  16: 104401.017 ops/s
# Warmup Iteration  17: 110701.223 ops/s
# Warmup Iteration  18: 113769.850 ops/s
# Warmup Iteration  19: 108133.941 ops/s
# Warmup Iteration  20: 111294.243 ops/s
# Warmup Iteration  21: 115480.262 ops/s
# Warmup Iteration  22: 109373.322 ops/s
# Warmup Iteration  23: 114448.990 ops/s
# Warmup Iteration  24: 108094.427 ops/s
# Warmup Iteration  25: 108731.698 ops/s
# Warmup Iteration  26: 114152.295 ops/s
# Warmup Iteration  27: 110012.714 ops/s
# Warmup Iteration  28: 113816.536 ops/s
# Warmup Iteration  29: 113568.974 ops/s
# Warmup Iteration  30: 107853.538 ops/s
Iteration   1: 115244.076 ops/s
Iteration   2: 108405.190 ops/s
Iteration   3: 111445.059 ops/s
Iteration   4: 109912.253 ops/s
Iteration   5: 110879.517 ops/s
Iteration   6: 110572.578 ops/s
Iteration   7: 113924.456 ops/s
Iteration   8: 110303.606 ops/s
Iteration   9: 112726.021 ops/s
Iteration  10: 109619.554 ops/s
Iteration  11: 112077.347 ops/s
Iteration  12: 109941.549 ops/s
Iteration  13: 110382.550 ops/s
Iteration  14: 107479.366 ops/s
Iteration  15: 111430.156 ops/s
Iteration  16: 108797.782 ops/s
Iteration  17: 114377.156 ops/s
Iteration  18: 113000.910 ops/s
Iteration  19: 107868.996 ops/s
Iteration  20: 111695.583 ops/s
Iteration  21: 113499.597 ops/s
Iteration  22: 109578.878 ops/s
Iteration  23: 114381.049 ops/s
Iteration  24: 115292.357 ops/s
Iteration  25: 110030.180 ops/s
Iteration  26: 111668.239 ops/s
Iteration  27: 109027.042 ops/s
Iteration  28: 114003.433 ops/s
Iteration  29: 113976.930 ops/s
Iteration  30: 110233.191 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_859._Benchmark.benchmark_Cluster_859":
  111392.487 ±(99.9%) 1485.090 ops/s [Average]
  (min, avg, max) = (107479.366, 111392.487, 115292.357), stdev = 2222.813
  CI (99.9%): [109907.397, 112877.577] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_859._Benchmark.benchmark_Cluster_859  thrpt   30  111392.487 ± 1485.090  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_86._Benchmark.benchmark_Cluster_86$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_86._Benchmark.benchmark_Cluster_86

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2088.152 ops/s
# Warmup Iteration   2: 14502.766 ops/s
# Warmup Iteration   3: 27704.986 ops/s
# Warmup Iteration   4: 44768.999 ops/s
# Warmup Iteration   5: 93241.182 ops/s
# Warmup Iteration   6: 100371.840 ops/s
# Warmup Iteration   7: 109316.570 ops/s
# Warmup Iteration   8: 112566.364 ops/s
# Warmup Iteration   9: 116828.117 ops/s
# Warmup Iteration  10: 107218.912 ops/s
# Warmup Iteration  11: 110076.481 ops/s
# Warmup Iteration  12: 110351.944 ops/s
# Warmup Iteration  13: 111118.292 ops/s
# Warmup Iteration  14: 115764.045 ops/s
# Warmup Iteration  15: 106879.287 ops/s
# Warmup Iteration  16: 114396.970 ops/s
# Warmup Iteration  17: 112920.113 ops/s
# Warmup Iteration  18: 112337.636 ops/s
# Warmup Iteration  19: 118073.984 ops/s
# Warmup Iteration  20: 109842.956 ops/s
# Warmup Iteration  21: 118325.154 ops/s
# Warmup Iteration  22: 110641.706 ops/s
# Warmup Iteration  23: 113879.172 ops/s
# Warmup Iteration  24: 116541.003 ops/s
# Warmup Iteration  25: 116278.162 ops/s
# Warmup Iteration  26: 113256.876 ops/s
# Warmup Iteration  27: 112796.044 ops/s
# Warmup Iteration  28: 116617.640 ops/s
# Warmup Iteration  29: 110474.567 ops/s
# Warmup Iteration  30: 113344.935 ops/s
Iteration   1: 117131.912 ops/s
Iteration   2: 111411.083 ops/s
Iteration   3: 118374.712 ops/s
Iteration   4: 96791.392 ops/s
Iteration   5: 111064.591 ops/s
Iteration   6: 118031.103 ops/s
Iteration   7: 110596.178 ops/s
Iteration   8: 117510.232 ops/s
Iteration   9: 112317.230 ops/s
Iteration  10: 113149.611 ops/s
Iteration  11: 116061.791 ops/s
Iteration  12: 109233.792 ops/s
Iteration  13: 114476.693 ops/s
Iteration  14: 114400.130 ops/s
Iteration  15: 112988.525 ops/s
Iteration  16: 111520.535 ops/s
Iteration  17: 114047.264 ops/s
Iteration  18: 108980.125 ops/s
Iteration  19: 112683.411 ops/s
Iteration  20: 116570.974 ops/s
Iteration  21: 113818.306 ops/s
Iteration  22: 116223.909 ops/s
Iteration  23: 113318.927 ops/s
Iteration  24: 112867.547 ops/s
Iteration  25: 116376.940 ops/s
Iteration  26: 110991.819 ops/s
Iteration  27: 117333.833 ops/s
Iteration  28: 112774.787 ops/s
Iteration  29: 108773.657 ops/s
Iteration  30: 118411.713 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_86._Benchmark.benchmark_Cluster_86":
  113274.424 ±(99.9%) 2821.525 ops/s [Average]
  (min, avg, max) = (96791.392, 113274.424, 118411.713), stdev = 4223.126
  CI (99.9%): [110452.899, 116095.949] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_86._Benchmark.benchmark_Cluster_86  thrpt   30  113274.424 ± 2821.525  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_860._Benchmark.benchmark_Cluster_860$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_860._Benchmark.benchmark_Cluster_860

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3001.053 ops/s
# Warmup Iteration   2: 23189.551 ops/s
# Warmup Iteration   3: 22797.026 ops/s
# Warmup Iteration   4: 24260.635 ops/s
# Warmup Iteration   5: 19716.496 ops/s
# Warmup Iteration   6: 20263.565 ops/s
# Warmup Iteration   7: 20512.056 ops/s
# Warmup Iteration   8: 19873.335 ops/s
# Warmup Iteration   9: 20639.163 ops/s
# Warmup Iteration  10: 20496.927 ops/s
# Warmup Iteration  11: 20786.331 ops/s
# Warmup Iteration  12: 21209.228 ops/s
# Warmup Iteration  13: 20539.632 ops/s
# Warmup Iteration  14: 20620.344 ops/s
# Warmup Iteration  15: 20661.188 ops/s
# Warmup Iteration  16: 20547.737 ops/s
# Warmup Iteration  17: 20328.239 ops/s
# Warmup Iteration  18: 20372.130 ops/s
# Warmup Iteration  19: 20865.530 ops/s
# Warmup Iteration  20: 20455.254 ops/s
# Warmup Iteration  21: 20430.718 ops/s
# Warmup Iteration  22: 20307.872 ops/s
# Warmup Iteration  23: 20395.541 ops/s
# Warmup Iteration  24: 20090.960 ops/s
# Warmup Iteration  25: 20002.785 ops/s
# Warmup Iteration  26: 19980.626 ops/s
# Warmup Iteration  27: 20795.489 ops/s
# Warmup Iteration  28: 20256.469 ops/s
# Warmup Iteration  29: 20689.369 ops/s
# Warmup Iteration  30: 20472.426 ops/s
Iteration   1: 21152.170 ops/s
Iteration   2: 20312.547 ops/s
Iteration   3: 20939.438 ops/s
Iteration   4: 20782.079 ops/s
Iteration   5: 20645.304 ops/s
Iteration   6: 19944.068 ops/s
Iteration   7: 20488.686 ops/s
Iteration   8: 20951.201 ops/s
Iteration   9: 20423.179 ops/s
Iteration  10: 20807.049 ops/s
Iteration  11: 20851.595 ops/s
Iteration  12: 20690.419 ops/s
Iteration  13: 20643.091 ops/s
Iteration  14: 20862.649 ops/s
Iteration  15: 20340.526 ops/s
Iteration  16: 20555.318 ops/s
Iteration  17: 20728.417 ops/s
Iteration  18: 20433.210 ops/s
Iteration  19: 20527.235 ops/s
Iteration  20: 20175.430 ops/s
Iteration  21: 20635.159 ops/s
Iteration  22: 20298.445 ops/s
Iteration  23: 20770.275 ops/s
Iteration  24: 20620.083 ops/s
Iteration  25: 20440.823 ops/s
Iteration  26: 20334.824 ops/s
Iteration  27: 20161.945 ops/s
Iteration  28: 20206.817 ops/s
Iteration  29: 20218.983 ops/s
Iteration  30: 20240.704 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_860._Benchmark.benchmark_Cluster_860":
  20539.389 ±(99.9%) 190.081 ops/s [Average]
  (min, avg, max) = (19944.068, 20539.389, 21152.170), stdev = 284.504
  CI (99.9%): [20349.308, 20729.470] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_860._Benchmark.benchmark_Cluster_860  thrpt   30  20539.389 ± 190.081  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_861._Benchmark.benchmark_Cluster_861$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_861._Benchmark.benchmark_Cluster_861

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.729 ops/s
# Warmup Iteration   2: 8192.047 ops/s
# Warmup Iteration   3: 26843.883 ops/s
# Warmup Iteration   4: 33872.486 ops/s
# Warmup Iteration   5: 32545.775 ops/s
# Warmup Iteration   6: 43520.745 ops/s
# Warmup Iteration   7: 72407.747 ops/s
# Warmup Iteration   8: 93046.972 ops/s
# Warmup Iteration   9: 84147.782 ops/s
# Warmup Iteration  10: 88912.128 ops/s
# Warmup Iteration  11: 92228.384 ops/s
# Warmup Iteration  12: 90646.530 ops/s
# Warmup Iteration  13: 89678.777 ops/s
# Warmup Iteration  14: 95218.537 ops/s
# Warmup Iteration  15: 87811.005 ops/s
# Warmup Iteration  16: 92280.911 ops/s
# Warmup Iteration  17: 88885.528 ops/s
# Warmup Iteration  18: 92269.727 ops/s
# Warmup Iteration  19: 90326.574 ops/s
# Warmup Iteration  20: 93274.386 ops/s
# Warmup Iteration  21: 92696.322 ops/s
# Warmup Iteration  22: 89130.310 ops/s
# Warmup Iteration  23: 93159.466 ops/s
# Warmup Iteration  24: 90141.809 ops/s
# Warmup Iteration  25: 90438.479 ops/s
# Warmup Iteration  26: 94077.818 ops/s
# Warmup Iteration  27: 91791.837 ops/s
# Warmup Iteration  28: 78027.236 ops/s
# Warmup Iteration  29: 86685.523 ops/s
# Warmup Iteration  30: 91122.722 ops/s
Iteration   1: 87769.669 ops/s
Iteration   2: 90260.030 ops/s
Iteration   3: 90391.867 ops/s
Iteration   4: 88536.756 ops/s
Iteration   5: 94747.706 ops/s
Iteration   6: 88131.518 ops/s
Iteration   7: 90651.995 ops/s
Iteration   8: 94013.823 ops/s
Iteration   9: 94906.562 ops/s
Iteration  10: 89510.772 ops/s
Iteration  11: 92359.815 ops/s
Iteration  12: 90068.151 ops/s
Iteration  13: 91581.468 ops/s
Iteration  14: 94278.426 ops/s
Iteration  15: 92170.554 ops/s
Iteration  16: 88213.908 ops/s
Iteration  17: 89986.408 ops/s
Iteration  18: 87892.220 ops/s
Iteration  19: 94034.057 ops/s
Iteration  20: 90439.548 ops/s
Iteration  21: 92579.814 ops/s
Iteration  22: 93871.861 ops/s
Iteration  23: 90276.950 ops/s
Iteration  24: 91988.151 ops/s
Iteration  25: 90559.558 ops/s
Iteration  26: 93511.042 ops/s
Iteration  27: 90398.783 ops/s
Iteration  28: 90894.182 ops/s
Iteration  29: 89590.349 ops/s
Iteration  30: 90591.705 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_861._Benchmark.benchmark_Cluster_861":
  91140.255 ±(99.9%) 1415.632 ops/s [Average]
  (min, avg, max) = (87769.669, 91140.255, 94906.562), stdev = 2118.852
  CI (99.9%): [89724.623, 92555.887] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_861._Benchmark.benchmark_Cluster_861  thrpt   30  91140.255 ± 1415.632  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_862._Benchmark.benchmark_Cluster_862$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_862._Benchmark.benchmark_Cluster_862

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.596 ops/s
# Warmup Iteration   2: 2852.263 ops/s
# Warmup Iteration   3: 12662.361 ops/s
# Warmup Iteration   4: 20967.346 ops/s
# Warmup Iteration   5: 23425.936 ops/s
# Warmup Iteration   6: 26003.579 ops/s
# Warmup Iteration   7: 27254.456 ops/s
# Warmup Iteration   8: 31275.668 ops/s
# Warmup Iteration   9: 38005.781 ops/s
# Warmup Iteration  10: 41338.736 ops/s
# Warmup Iteration  11: 42535.038 ops/s
# Warmup Iteration  12: 36324.071 ops/s
# Warmup Iteration  13: 31990.498 ops/s
# Warmup Iteration  14: 82530.862 ops/s
# Warmup Iteration  15: 85834.745 ops/s
# Warmup Iteration  16: 86040.994 ops/s
# Warmup Iteration  17: 88683.112 ops/s
# Warmup Iteration  18: 83512.538 ops/s
# Warmup Iteration  19: 88377.984 ops/s
# Warmup Iteration  20: 85009.878 ops/s
# Warmup Iteration  21: 86721.634 ops/s
# Warmup Iteration  22: 89442.247 ops/s
# Warmup Iteration  23: 85093.456 ops/s
# Warmup Iteration  24: 85778.207 ops/s
# Warmup Iteration  25: 87352.851 ops/s
# Warmup Iteration  26: 86265.171 ops/s
# Warmup Iteration  27: 88204.856 ops/s
# Warmup Iteration  28: 86924.810 ops/s
# Warmup Iteration  29: 88966.822 ops/s
# Warmup Iteration  30: 89859.356 ops/s
Iteration   1: 85344.788 ops/s
Iteration   2: 88258.822 ops/s
Iteration   3: 86027.942 ops/s
Iteration   4: 89673.994 ops/s
Iteration   5: 87455.735 ops/s
Iteration   6: 84840.734 ops/s
Iteration   7: 87058.373 ops/s
Iteration   8: 87131.835 ops/s
Iteration   9: 83812.793 ops/s
Iteration  10: 85222.217 ops/s
Iteration  11: 87252.786 ops/s
Iteration  12: 85088.793 ops/s
Iteration  13: 87525.951 ops/s
Iteration  14: 88262.664 ops/s
Iteration  15: 86270.492 ops/s
Iteration  16: 87741.418 ops/s
Iteration  17: 87494.641 ops/s
Iteration  18: 86432.869 ops/s
Iteration  19: 88576.486 ops/s
Iteration  20: 87030.293 ops/s
Iteration  21: 87705.413 ops/s
Iteration  22: 87433.364 ops/s
Iteration  23: 90944.764 ops/s
Iteration  24: 84115.066 ops/s
Iteration  25: 85278.795 ops/s
Iteration  26: 88429.202 ops/s
Iteration  27: 85292.072 ops/s
Iteration  28: 87418.746 ops/s
Iteration  29: 84223.161 ops/s
Iteration  30: 88849.938 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_862._Benchmark.benchmark_Cluster_862":
  86873.138 ±(99.9%) 1134.832 ops/s [Average]
  (min, avg, max) = (83812.793, 86873.138, 90944.764), stdev = 1698.563
  CI (99.9%): [85738.306, 88007.970] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_862._Benchmark.benchmark_Cluster_862  thrpt   30  86873.138 ± 1134.832  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_863._Benchmark.benchmark_Cluster_863$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_863._Benchmark.benchmark_Cluster_863

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9545.882 ops/s
# Warmup Iteration   2: 41803.312 ops/s
# Warmup Iteration   3: 65318.133 ops/s
# Warmup Iteration   4: 129305.228 ops/s
# Warmup Iteration   5: 154416.558 ops/s
# Warmup Iteration   6: 161041.034 ops/s
# Warmup Iteration   7: 153215.892 ops/s
# Warmup Iteration   8: 152826.947 ops/s
# Warmup Iteration   9: 162965.189 ops/s
# Warmup Iteration  10: 159599.650 ops/s
# Warmup Iteration  11: 153234.504 ops/s
# Warmup Iteration  12: 160309.223 ops/s
# Warmup Iteration  13: 154207.954 ops/s
# Warmup Iteration  14: 162993.312 ops/s
# Warmup Iteration  15: 158620.465 ops/s
# Warmup Iteration  16: 153278.893 ops/s
# Warmup Iteration  17: 165039.765 ops/s
# Warmup Iteration  18: 153341.474 ops/s
# Warmup Iteration  19: 174674.394 ops/s
# Warmup Iteration  20: 165253.261 ops/s
# Warmup Iteration  21: 132491.718 ops/s
# Warmup Iteration  22: 163391.466 ops/s
# Warmup Iteration  23: 171679.715 ops/s
# Warmup Iteration  24: 163137.576 ops/s
# Warmup Iteration  25: 173318.755 ops/s
# Warmup Iteration  26: 168441.666 ops/s
# Warmup Iteration  27: 169140.590 ops/s
# Warmup Iteration  28: 166118.270 ops/s
# Warmup Iteration  29: 174627.064 ops/s
# Warmup Iteration  30: 163758.555 ops/s
Iteration   1: 169560.354 ops/s
Iteration   2: 166175.335 ops/s
Iteration   3: 166257.010 ops/s
Iteration   4: 164036.644 ops/s
Iteration   5: 157524.358 ops/s
Iteration   6: 172056.040 ops/s
Iteration   7: 162430.771 ops/s
Iteration   8: 173330.245 ops/s
Iteration   9: 173123.425 ops/s
Iteration  10: 166776.765 ops/s
Iteration  11: 171173.223 ops/s
Iteration  12: 170883.386 ops/s
Iteration  13: 164782.128 ops/s
Iteration  14: 165916.819 ops/s
Iteration  15: 168429.817 ops/s
Iteration  16: 167682.706 ops/s
Iteration  17: 169616.986 ops/s
Iteration  18: 165029.147 ops/s
Iteration  19: 166458.379 ops/s
Iteration  20: 175705.429 ops/s
Iteration  21: 161721.263 ops/s
Iteration  22: 162693.128 ops/s
Iteration  23: 164396.200 ops/s
Iteration  24: 168523.044 ops/s
Iteration  25: 173198.354 ops/s
Iteration  26: 161363.598 ops/s
Iteration  27: 174966.568 ops/s
Iteration  28: 163072.414 ops/s
Iteration  29: 172203.177 ops/s
Iteration  30: 165780.024 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_863._Benchmark.benchmark_Cluster_863":
  167495.558 ±(99.9%) 2998.472 ops/s [Average]
  (min, avg, max) = (157524.358, 167495.558, 175705.429), stdev = 4487.971
  CI (99.9%): [164497.086, 170494.030] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_863._Benchmark.benchmark_Cluster_863  thrpt   30  167495.558 ± 2998.472  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_864._Benchmark.benchmark_Cluster_864$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_864._Benchmark.benchmark_Cluster_864

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6520.870 ops/s
# Warmup Iteration   2: 31198.789 ops/s
# Warmup Iteration   3: 103973.243 ops/s
# Warmup Iteration   4: 122831.878 ops/s
# Warmup Iteration   5: 130455.467 ops/s
# Warmup Iteration   6: 118913.747 ops/s
# Warmup Iteration   7: 135233.476 ops/s
# Warmup Iteration   8: 138414.941 ops/s
# Warmup Iteration   9: 135295.476 ops/s
# Warmup Iteration  10: 139268.531 ops/s
# Warmup Iteration  11: 133818.759 ops/s
# Warmup Iteration  12: 136302.588 ops/s
# Warmup Iteration  13: 137882.132 ops/s
# Warmup Iteration  14: 133221.513 ops/s
# Warmup Iteration  15: 138559.628 ops/s
# Warmup Iteration  16: 137218.088 ops/s
# Warmup Iteration  17: 126364.408 ops/s
# Warmup Iteration  18: 147025.405 ops/s
# Warmup Iteration  19: 141876.598 ops/s
# Warmup Iteration  20: 142849.454 ops/s
# Warmup Iteration  21: 146784.836 ops/s
# Warmup Iteration  22: 138183.324 ops/s
# Warmup Iteration  23: 143690.519 ops/s
# Warmup Iteration  24: 146559.747 ops/s
# Warmup Iteration  25: 138986.179 ops/s
# Warmup Iteration  26: 143315.454 ops/s
# Warmup Iteration  27: 137113.366 ops/s
# Warmup Iteration  28: 142875.872 ops/s
# Warmup Iteration  29: 145990.793 ops/s
# Warmup Iteration  30: 137511.139 ops/s
Iteration   1: 146860.674 ops/s
Iteration   2: 136983.407 ops/s
Iteration   3: 145553.758 ops/s
Iteration   4: 147509.234 ops/s
Iteration   5: 140271.677 ops/s
Iteration   6: 139363.074 ops/s
Iteration   7: 147860.803 ops/s
Iteration   8: 140074.646 ops/s
Iteration   9: 141774.050 ops/s
Iteration  10: 137637.747 ops/s
Iteration  11: 144576.280 ops/s
Iteration  12: 140070.421 ops/s
Iteration  13: 137705.498 ops/s
Iteration  14: 143798.039 ops/s
Iteration  15: 136421.167 ops/s
Iteration  16: 143709.468 ops/s
Iteration  17: 149913.320 ops/s
Iteration  18: 135641.438 ops/s
Iteration  19: 149814.461 ops/s
Iteration  20: 142450.521 ops/s
Iteration  21: 142111.314 ops/s
Iteration  22: 146808.534 ops/s
Iteration  23: 138792.510 ops/s
Iteration  24: 144493.546 ops/s
Iteration  25: 136675.272 ops/s
Iteration  26: 147879.273 ops/s
Iteration  27: 142726.710 ops/s
Iteration  28: 141716.496 ops/s
Iteration  29: 147929.403 ops/s
Iteration  30: 138515.254 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_864._Benchmark.benchmark_Cluster_864":
  142521.267 ±(99.9%) 2860.427 ops/s [Average]
  (min, avg, max) = (135641.438, 142521.267, 149913.320), stdev = 4281.353
  CI (99.9%): [139660.840, 145381.694] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_864._Benchmark.benchmark_Cluster_864  thrpt   30  142521.267 ± 2860.427  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_865._Benchmark.benchmark_Cluster_865$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_865._Benchmark.benchmark_Cluster_865

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.783 ops/s
# Warmup Iteration   2: 5923.529 ops/s
# Warmup Iteration   3: 26687.609 ops/s
# Warmup Iteration   4: 25413.167 ops/s
# Warmup Iteration   5: 31321.648 ops/s
# Warmup Iteration   6: 24010.164 ops/s
# Warmup Iteration   7: 32275.817 ops/s
# Warmup Iteration   8: 34183.832 ops/s
# Warmup Iteration   9: 39556.639 ops/s
# Warmup Iteration  10: 45075.273 ops/s
# Warmup Iteration  11: 78180.794 ops/s
# Warmup Iteration  12: 107348.047 ops/s
# Warmup Iteration  13: 103524.380 ops/s
# Warmup Iteration  14: 107009.993 ops/s
# Warmup Iteration  15: 84985.134 ops/s
# Warmup Iteration  16: 102721.862 ops/s
# Warmup Iteration  17: 110416.474 ops/s
# Warmup Iteration  18: 102659.746 ops/s
# Warmup Iteration  19: 109214.508 ops/s
# Warmup Iteration  20: 105199.305 ops/s
# Warmup Iteration  21: 111646.738 ops/s
# Warmup Iteration  22: 108613.509 ops/s
# Warmup Iteration  23: 108019.069 ops/s
# Warmup Iteration  24: 110911.587 ops/s
# Warmup Iteration  25: 105407.913 ops/s
# Warmup Iteration  26: 109833.434 ops/s
# Warmup Iteration  27: 105305.039 ops/s
# Warmup Iteration  28: 109854.481 ops/s
# Warmup Iteration  29: 105924.006 ops/s
# Warmup Iteration  30: 110443.823 ops/s
Iteration   1: 113684.911 ops/s
Iteration   2: 112730.805 ops/s
Iteration   3: 102026.450 ops/s
Iteration   4: 112994.770 ops/s
Iteration   5: 106354.951 ops/s
Iteration   6: 110396.891 ops/s
Iteration   7: 103751.194 ops/s
Iteration   8: 109937.466 ops/s
Iteration   9: 110597.631 ops/s
Iteration  10: 107481.322 ops/s
Iteration  11: 112520.645 ops/s
Iteration  12: 100736.631 ops/s
Iteration  13: 111570.656 ops/s
Iteration  14: 110762.593 ops/s
Iteration  15: 107724.868 ops/s
Iteration  16: 107286.615 ops/s
Iteration  17: 112995.693 ops/s
Iteration  18: 107466.300 ops/s
Iteration  19: 113148.723 ops/s
Iteration  20: 109252.000 ops/s
Iteration  21: 108463.713 ops/s
Iteration  22: 113100.758 ops/s
Iteration  23: 110490.142 ops/s
Iteration  24: 105893.115 ops/s
Iteration  25: 110480.258 ops/s
Iteration  26: 107427.521 ops/s
Iteration  27: 108506.034 ops/s
Iteration  28: 105602.433 ops/s
Iteration  29: 106351.486 ops/s
Iteration  30: 109173.091 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_865._Benchmark.benchmark_Cluster_865":
  108963.655 ±(99.9%) 2238.935 ops/s [Average]
  (min, avg, max) = (100736.631, 108963.655, 113684.911), stdev = 3351.132
  CI (99.9%): [106724.721, 111202.590] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_865._Benchmark.benchmark_Cluster_865  thrpt   30  108963.655 ± 2238.935  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_866._Benchmark.benchmark_Cluster_866$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_866._Benchmark.benchmark_Cluster_866

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13486.219 ops/s
# Warmup Iteration   2: 52405.682 ops/s
# Warmup Iteration   3: 96698.448 ops/s
# Warmup Iteration   4: 116950.302 ops/s
# Warmup Iteration   5: 114333.156 ops/s
# Warmup Iteration   6: 114396.292 ops/s
# Warmup Iteration   7: 118460.079 ops/s
# Warmup Iteration   8: 113215.851 ops/s
# Warmup Iteration   9: 114465.990 ops/s
# Warmup Iteration  10: 120920.536 ops/s
# Warmup Iteration  11: 115838.249 ops/s
# Warmup Iteration  12: 116132.214 ops/s
# Warmup Iteration  13: 112828.849 ops/s
# Warmup Iteration  14: 122768.628 ops/s
# Warmup Iteration  15: 117732.418 ops/s
# Warmup Iteration  16: 111222.696 ops/s
# Warmup Iteration  17: 128633.622 ops/s
# Warmup Iteration  18: 120353.829 ops/s
# Warmup Iteration  19: 124931.724 ops/s
# Warmup Iteration  20: 127767.406 ops/s
# Warmup Iteration  21: 122767.387 ops/s
# Warmup Iteration  22: 125082.487 ops/s
# Warmup Iteration  23: 119949.471 ops/s
# Warmup Iteration  24: 121297.817 ops/s
# Warmup Iteration  25: 128051.213 ops/s
# Warmup Iteration  26: 118267.868 ops/s
# Warmup Iteration  27: 122440.703 ops/s
# Warmup Iteration  28: 121587.872 ops/s
# Warmup Iteration  29: 124308.344 ops/s
# Warmup Iteration  30: 121268.033 ops/s
Iteration   1: 120961.363 ops/s
Iteration   2: 124962.578 ops/s
Iteration   3: 120283.894 ops/s
Iteration   4: 123056.000 ops/s
Iteration   5: 122956.228 ops/s
Iteration   6: 126406.054 ops/s
Iteration   7: 119679.418 ops/s
Iteration   8: 126889.478 ops/s
Iteration   9: 119401.097 ops/s
Iteration  10: 127458.677 ops/s
Iteration  11: 121131.454 ops/s
Iteration  12: 117857.220 ops/s
Iteration  13: 124760.055 ops/s
Iteration  14: 124563.550 ops/s
Iteration  15: 119836.419 ops/s
Iteration  16: 123998.595 ops/s
Iteration  17: 121802.801 ops/s
Iteration  18: 122458.242 ops/s
Iteration  19: 124337.336 ops/s
Iteration  20: 125512.104 ops/s
Iteration  21: 119028.696 ops/s
Iteration  22: 124042.369 ops/s
Iteration  23: 122774.657 ops/s
Iteration  24: 123510.120 ops/s
Iteration  25: 126549.293 ops/s
Iteration  26: 118873.674 ops/s
Iteration  27: 122270.932 ops/s
Iteration  28: 122543.895 ops/s
Iteration  29: 123542.911 ops/s
Iteration  30: 123026.392 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_866._Benchmark.benchmark_Cluster_866":
  122815.850 ±(99.9%) 1706.076 ops/s [Average]
  (min, avg, max) = (117857.220, 122815.850, 127458.677), stdev = 2553.574
  CI (99.9%): [121109.774, 124521.926] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_866._Benchmark.benchmark_Cluster_866  thrpt   30  122815.850 ± 1706.076  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_867._Benchmark.benchmark_Cluster_867$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_867._Benchmark.benchmark_Cluster_867

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 21309.685 ops/s
# Warmup Iteration   2: 50187.650 ops/s
# Warmup Iteration   3: 104181.568 ops/s
# Warmup Iteration   4: 95918.092 ops/s
# Warmup Iteration   5: 117742.461 ops/s
# Warmup Iteration   6: 117219.387 ops/s
# Warmup Iteration   7: 113586.130 ops/s
# Warmup Iteration   8: 116018.174 ops/s
# Warmup Iteration   9: 117474.851 ops/s
# Warmup Iteration  10: 92844.043 ops/s
# Warmup Iteration  11: 114014.128 ops/s
# Warmup Iteration  12: 116063.052 ops/s
# Warmup Iteration  13: 114402.309 ops/s
# Warmup Iteration  14: 117678.842 ops/s
# Warmup Iteration  15: 111495.582 ops/s
# Warmup Iteration  16: 114045.363 ops/s
# Warmup Iteration  17: 118486.651 ops/s
# Warmup Iteration  18: 116416.989 ops/s
# Warmup Iteration  19: 119480.905 ops/s
# Warmup Iteration  20: 116504.679 ops/s
# Warmup Iteration  21: 122917.571 ops/s
# Warmup Iteration  22: 122054.095 ops/s
# Warmup Iteration  23: 118274.064 ops/s
# Warmup Iteration  24: 118833.803 ops/s
# Warmup Iteration  25: 117740.989 ops/s
# Warmup Iteration  26: 119868.041 ops/s
# Warmup Iteration  27: 123523.569 ops/s
# Warmup Iteration  28: 124629.874 ops/s
# Warmup Iteration  29: 115757.208 ops/s
# Warmup Iteration  30: 120618.209 ops/s
Iteration   1: 121116.297 ops/s
Iteration   2: 121229.347 ops/s
Iteration   3: 117194.286 ops/s
Iteration   4: 120251.928 ops/s
Iteration   5: 116450.918 ops/s
Iteration   6: 117411.020 ops/s
Iteration   7: 123263.643 ops/s
Iteration   8: 115898.181 ops/s
Iteration   9: 124672.545 ops/s
Iteration  10: 116863.755 ops/s
Iteration  11: 123365.789 ops/s
Iteration  12: 118762.998 ops/s
Iteration  13: 116736.896 ops/s
Iteration  14: 124909.002 ops/s
Iteration  15: 117064.813 ops/s
Iteration  16: 121401.440 ops/s
Iteration  17: 119018.487 ops/s
Iteration  18: 117644.717 ops/s
Iteration  19: 121141.734 ops/s
Iteration  20: 120128.909 ops/s
Iteration  21: 122902.190 ops/s
Iteration  22: 116229.722 ops/s
Iteration  23: 119106.500 ops/s
Iteration  24: 121936.810 ops/s
Iteration  25: 118675.958 ops/s
Iteration  26: 119784.673 ops/s
Iteration  27: 115714.518 ops/s
Iteration  28: 118143.626 ops/s
Iteration  29: 118947.995 ops/s
Iteration  30: 118412.291 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_867._Benchmark.benchmark_Cluster_867":
  119479.366 ±(99.9%) 1760.881 ops/s [Average]
  (min, avg, max) = (115714.518, 119479.366, 124909.002), stdev = 2635.604
  CI (99.9%): [117718.485, 121240.247] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_867._Benchmark.benchmark_Cluster_867  thrpt   30  119479.366 ± 1760.881  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_868._Benchmark.benchmark_Cluster_868$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_868._Benchmark.benchmark_Cluster_868

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16751.315 ops/s
# Warmup Iteration   2: 62384.232 ops/s
# Warmup Iteration   3: 84406.285 ops/s
# Warmup Iteration   4: 86375.048 ops/s
# Warmup Iteration   5: 85195.816 ops/s
# Warmup Iteration   6: 93162.607 ops/s
# Warmup Iteration   7: 93501.508 ops/s
# Warmup Iteration   8: 96528.225 ops/s
# Warmup Iteration   9: 92478.293 ops/s
# Warmup Iteration  10: 98209.258 ops/s
# Warmup Iteration  11: 94691.172 ops/s
# Warmup Iteration  12: 92520.107 ops/s
# Warmup Iteration  13: 99170.103 ops/s
# Warmup Iteration  14: 90083.206 ops/s
# Warmup Iteration  15: 99009.656 ops/s
# Warmup Iteration  16: 97503.319 ops/s
# Warmup Iteration  17: 96173.160 ops/s
# Warmup Iteration  18: 98454.425 ops/s
# Warmup Iteration  19: 102382.537 ops/s
# Warmup Iteration  20: 95594.377 ops/s
# Warmup Iteration  21: 100626.064 ops/s
# Warmup Iteration  22: 96899.923 ops/s
# Warmup Iteration  23: 101846.326 ops/s
# Warmup Iteration  24: 99666.889 ops/s
# Warmup Iteration  25: 96123.479 ops/s
# Warmup Iteration  26: 100250.925 ops/s
# Warmup Iteration  27: 97088.509 ops/s
# Warmup Iteration  28: 100016.897 ops/s
# Warmup Iteration  29: 96411.348 ops/s
# Warmup Iteration  30: 98678.238 ops/s
Iteration   1: 102952.850 ops/s
Iteration   2: 101511.893 ops/s
Iteration   3: 98345.217 ops/s
Iteration   4: 103580.475 ops/s
Iteration   5: 104329.275 ops/s
Iteration   6: 94727.714 ops/s
Iteration   7: 98302.113 ops/s
Iteration   8: 100971.088 ops/s
Iteration   9: 101560.270 ops/s
Iteration  10: 102861.988 ops/s
Iteration  11: 97483.228 ops/s
Iteration  12: 102625.400 ops/s
Iteration  13: 101095.869 ops/s
Iteration  14: 102695.374 ops/s
Iteration  15: 98466.753 ops/s
Iteration  16: 101165.355 ops/s
Iteration  17: 104836.506 ops/s
Iteration  18: 98003.004 ops/s
Iteration  19: 102312.079 ops/s
Iteration  20: 97354.483 ops/s
Iteration  21: 101657.120 ops/s
Iteration  22: 103452.069 ops/s
Iteration  23: 98230.613 ops/s
Iteration  24: 100036.527 ops/s
Iteration  25: 103007.808 ops/s
Iteration  26: 96958.610 ops/s
Iteration  27: 101985.015 ops/s
Iteration  28: 99538.340 ops/s
Iteration  29: 101112.536 ops/s
Iteration  30: 99424.580 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_868._Benchmark.benchmark_Cluster_868":
  100686.138 ±(99.9%) 1666.226 ops/s [Average]
  (min, avg, max) = (94727.714, 100686.138, 104836.506), stdev = 2493.928
  CI (99.9%): [99019.913, 102352.364] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_868._Benchmark.benchmark_Cluster_868  thrpt   30  100686.138 ± 1666.226  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_869._Benchmark.benchmark_Cluster_869$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_869._Benchmark.benchmark_Cluster_869

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9425.143 ops/s
# Warmup Iteration   2: 36751.562 ops/s
# Warmup Iteration   3: 36061.397 ops/s
# Warmup Iteration   4: 100172.012 ops/s
# Warmup Iteration   5: 92183.897 ops/s
# Warmup Iteration   6: 125776.118 ops/s
# Warmup Iteration   7: 146068.622 ops/s
# Warmup Iteration   8: 141459.239 ops/s
# Warmup Iteration   9: 148555.517 ops/s
# Warmup Iteration  10: 141822.336 ops/s
# Warmup Iteration  11: 129009.021 ops/s
# Warmup Iteration  12: 141713.763 ops/s
# Warmup Iteration  13: 145774.595 ops/s
# Warmup Iteration  14: 140733.187 ops/s
# Warmup Iteration  15: 143189.963 ops/s
# Warmup Iteration  16: 142293.035 ops/s
# Warmup Iteration  17: 148721.468 ops/s
# Warmup Iteration  18: 149539.430 ops/s
# Warmup Iteration  19: 142642.821 ops/s
# Warmup Iteration  20: 152497.913 ops/s
# Warmup Iteration  21: 147081.171 ops/s
# Warmup Iteration  22: 151750.301 ops/s
# Warmup Iteration  23: 146611.233 ops/s
# Warmup Iteration  24: 145057.641 ops/s
# Warmup Iteration  25: 148800.066 ops/s
# Warmup Iteration  26: 145234.821 ops/s
# Warmup Iteration  27: 145808.015 ops/s
# Warmup Iteration  28: 154399.208 ops/s
# Warmup Iteration  29: 141538.338 ops/s
# Warmup Iteration  30: 151193.226 ops/s
Iteration   1: 150550.520 ops/s
Iteration   2: 144020.591 ops/s
Iteration   3: 148428.464 ops/s
Iteration   4: 139732.664 ops/s
Iteration   5: 142087.636 ops/s
Iteration   6: 150260.175 ops/s
Iteration   7: 143695.515 ops/s
Iteration   8: 146891.799 ops/s
Iteration   9: 147883.761 ops/s
Iteration  10: 146801.784 ops/s
Iteration  11: 148185.827 ops/s
Iteration  12: 144901.882 ops/s
Iteration  13: 151510.696 ops/s
Iteration  14: 147137.704 ops/s
Iteration  15: 142763.010 ops/s
Iteration  16: 150323.035 ops/s
Iteration  17: 149200.076 ops/s
Iteration  18: 147456.610 ops/s
Iteration  19: 144843.777 ops/s
Iteration  20: 154121.543 ops/s
Iteration  21: 143743.802 ops/s
Iteration  22: 146085.328 ops/s
Iteration  23: 151550.855 ops/s
Iteration  24: 146299.738 ops/s
Iteration  25: 149130.637 ops/s
Iteration  26: 146060.805 ops/s
Iteration  27: 149955.433 ops/s
Iteration  28: 143727.157 ops/s
Iteration  29: 144376.885 ops/s
Iteration  30: 149833.512 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_869._Benchmark.benchmark_Cluster_869":
  147052.041 ±(99.9%) 2187.103 ops/s [Average]
  (min, avg, max) = (139732.664, 147052.041, 154121.543), stdev = 3273.553
  CI (99.9%): [144864.937, 149239.144] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_869._Benchmark.benchmark_Cluster_869  thrpt   30  147052.041 ± 2187.103  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_87._Benchmark.benchmark_Cluster_87$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_87._Benchmark.benchmark_Cluster_87

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 35844.843 ops/s
# Warmup Iteration   2: 131163.376 ops/s
# Warmup Iteration   3: 168046.820 ops/s
# Warmup Iteration   4: 158274.623 ops/s
# Warmup Iteration   5: 164607.474 ops/s
# Warmup Iteration   6: 165035.451 ops/s
# Warmup Iteration   7: 165204.093 ops/s
# Warmup Iteration   8: 167655.370 ops/s
# Warmup Iteration   9: 158355.397 ops/s
# Warmup Iteration  10: 165308.294 ops/s
# Warmup Iteration  11: 161244.683 ops/s
# Warmup Iteration  12: 161341.840 ops/s
# Warmup Iteration  13: 173805.585 ops/s
# Warmup Iteration  14: 161315.711 ops/s
# Warmup Iteration  15: 172420.713 ops/s
# Warmup Iteration  16: 163399.279 ops/s
# Warmup Iteration  17: 174799.486 ops/s
# Warmup Iteration  18: 177912.106 ops/s
# Warmup Iteration  19: 173059.270 ops/s
# Warmup Iteration  20: 178448.921 ops/s
# Warmup Iteration  21: 175190.028 ops/s
# Warmup Iteration  22: 183368.459 ops/s
# Warmup Iteration  23: 167418.046 ops/s
# Warmup Iteration  24: 168121.818 ops/s
# Warmup Iteration  25: 188208.561 ops/s
# Warmup Iteration  26: 165486.126 ops/s
# Warmup Iteration  27: 177595.958 ops/s
# Warmup Iteration  28: 180198.749 ops/s
# Warmup Iteration  29: 171214.336 ops/s
# Warmup Iteration  30: 181391.348 ops/s
Iteration   1: 175537.856 ops/s
Iteration   2: 169882.983 ops/s
Iteration   3: 186801.434 ops/s
Iteration   4: 178474.263 ops/s
Iteration   5: 173947.162 ops/s
Iteration   6: 184021.325 ops/s
Iteration   7: 169201.067 ops/s
Iteration   8: 169677.139 ops/s
Iteration   9: 177705.639 ops/s
Iteration  10: 182590.940 ops/s
Iteration  11: 171698.759 ops/s
Iteration  12: 185323.586 ops/s
Iteration  13: 170935.491 ops/s
Iteration  14: 176604.010 ops/s
Iteration  15: 175969.282 ops/s
Iteration  16: 174194.256 ops/s
Iteration  17: 186825.690 ops/s
Iteration  18: 173749.850 ops/s
Iteration  19: 183160.167 ops/s
Iteration  20: 173013.190 ops/s
Iteration  21: 181703.202 ops/s
Iteration  22: 174537.922 ops/s
Iteration  23: 175921.840 ops/s
Iteration  24: 181760.240 ops/s
Iteration  25: 168554.342 ops/s
Iteration  26: 183367.987 ops/s
Iteration  27: 177257.718 ops/s
Iteration  28: 177476.586 ops/s
Iteration  29: 183566.177 ops/s
Iteration  30: 171004.784 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_87._Benchmark.benchmark_Cluster_87":
  177148.830 ±(99.9%) 3727.398 ops/s [Average]
  (min, avg, max) = (168554.342, 177148.830, 186825.690), stdev = 5578.995
  CI (99.9%): [173421.431, 180876.228] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_87._Benchmark.benchmark_Cluster_87  thrpt   30  177148.830 ± 3727.398  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_870._Benchmark.benchmark_Cluster_870$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_870._Benchmark.benchmark_Cluster_870

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1015.192 ops/s
# Warmup Iteration   2: 9981.351 ops/s
# Warmup Iteration   3: 24823.699 ops/s
# Warmup Iteration   4: 18378.403 ops/s
# Warmup Iteration   5: 20435.743 ops/s
# Warmup Iteration   6: 32687.933 ops/s
# Warmup Iteration   7: 25755.799 ops/s
# Warmup Iteration   8: 29280.414 ops/s
# Warmup Iteration   9: 27916.603 ops/s
# Warmup Iteration  10: 52715.143 ops/s
# Warmup Iteration  11: 75407.939 ops/s
# Warmup Iteration  12: 71404.079 ops/s
# Warmup Iteration  13: 72812.409 ops/s
# Warmup Iteration  14: 76475.654 ops/s
# Warmup Iteration  15: 73347.322 ops/s
# Warmup Iteration  16: 77918.433 ops/s
# Warmup Iteration  17: 75144.649 ops/s
# Warmup Iteration  18: 80114.260 ops/s
# Warmup Iteration  19: 79030.984 ops/s
# Warmup Iteration  20: 76216.211 ops/s
# Warmup Iteration  21: 78065.110 ops/s
# Warmup Iteration  22: 77752.886 ops/s
# Warmup Iteration  23: 71994.299 ops/s
# Warmup Iteration  24: 76241.367 ops/s
# Warmup Iteration  25: 79775.968 ops/s
# Warmup Iteration  26: 79261.846 ops/s
# Warmup Iteration  27: 73456.761 ops/s
# Warmup Iteration  28: 81253.610 ops/s
# Warmup Iteration  29: 73570.545 ops/s
# Warmup Iteration  30: 77310.183 ops/s
Iteration   1: 80487.201 ops/s
Iteration   2: 73311.987 ops/s
Iteration   3: 80919.952 ops/s
Iteration   4: 79507.983 ops/s
Iteration   5: 76712.115 ops/s
Iteration   6: 77072.055 ops/s
Iteration   7: 79029.185 ops/s
Iteration   8: 77724.553 ops/s
Iteration   9: 75565.793 ops/s
Iteration  10: 79377.878 ops/s
Iteration  11: 75642.836 ops/s
Iteration  12: 76511.844 ops/s
Iteration  13: 75469.881 ops/s
Iteration  14: 78546.970 ops/s
Iteration  15: 80456.533 ops/s
Iteration  16: 74610.691 ops/s
Iteration  17: 80697.135 ops/s
Iteration  18: 77995.397 ops/s
Iteration  19: 74565.553 ops/s
Iteration  20: 80105.412 ops/s
Iteration  21: 75986.638 ops/s
Iteration  22: 78214.008 ops/s
Iteration  23: 77354.717 ops/s
Iteration  24: 78340.898 ops/s
Iteration  25: 76773.670 ops/s
Iteration  26: 78749.201 ops/s
Iteration  27: 79632.997 ops/s
Iteration  28: 74322.899 ops/s
Iteration  29: 77583.484 ops/s
Iteration  30: 79554.445 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_870._Benchmark.benchmark_Cluster_870":
  77694.130 ±(99.9%) 1406.963 ops/s [Average]
  (min, avg, max) = (73311.987, 77694.130, 80919.952), stdev = 2105.877
  CI (99.9%): [76287.167, 79101.094] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_870._Benchmark.benchmark_Cluster_870  thrpt   30  77694.130 ± 1406.963  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_871._Benchmark.benchmark_Cluster_871$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_871._Benchmark.benchmark_Cluster_871

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 528.845 ops/s
# Warmup Iteration   2: 10208.225 ops/s
# Warmup Iteration   3: 21256.838 ops/s
# Warmup Iteration   4: 26962.909 ops/s
# Warmup Iteration   5: 30458.189 ops/s
# Warmup Iteration   6: 30484.481 ops/s
# Warmup Iteration   7: 27697.130 ops/s
# Warmup Iteration   8: 26181.814 ops/s
# Warmup Iteration   9: 50729.700 ops/s
# Warmup Iteration  10: 62250.066 ops/s
# Warmup Iteration  11: 78041.069 ops/s
# Warmup Iteration  12: 80553.793 ops/s
# Warmup Iteration  13: 76806.608 ops/s
# Warmup Iteration  14: 82047.329 ops/s
# Warmup Iteration  15: 78921.513 ops/s
# Warmup Iteration  16: 77531.667 ops/s
# Warmup Iteration  17: 78726.090 ops/s
# Warmup Iteration  18: 78095.294 ops/s
# Warmup Iteration  19: 80309.366 ops/s
# Warmup Iteration  20: 78699.219 ops/s
# Warmup Iteration  21: 79150.392 ops/s
# Warmup Iteration  22: 76394.813 ops/s
# Warmup Iteration  23: 76381.244 ops/s
# Warmup Iteration  24: 76711.670 ops/s
# Warmup Iteration  25: 77833.573 ops/s
# Warmup Iteration  26: 78732.425 ops/s
# Warmup Iteration  27: 80704.622 ops/s
# Warmup Iteration  28: 76342.129 ops/s
# Warmup Iteration  29: 82362.206 ops/s
# Warmup Iteration  30: 77827.201 ops/s
Iteration   1: 78911.079 ops/s
Iteration   2: 80473.201 ops/s
Iteration   3: 77106.090 ops/s
Iteration   4: 77394.681 ops/s
Iteration   5: 78564.765 ops/s
Iteration   6: 77432.236 ops/s
Iteration   7: 80242.434 ops/s
Iteration   8: 76438.664 ops/s
Iteration   9: 80354.400 ops/s
Iteration  10: 74901.820 ops/s
Iteration  11: 78529.374 ops/s
Iteration  12: 81355.644 ops/s
Iteration  13: 78106.125 ops/s
Iteration  14: 80258.758 ops/s
Iteration  15: 80040.694 ops/s
Iteration  16: 77874.911 ops/s
Iteration  17: 80893.899 ops/s
Iteration  18: 76474.042 ops/s
Iteration  19: 82618.668 ops/s
Iteration  20: 81628.074 ops/s
Iteration  21: 76959.100 ops/s
Iteration  22: 80999.245 ops/s
Iteration  23: 78330.770 ops/s
Iteration  24: 81215.204 ops/s
Iteration  25: 60617.701 ops/s
Iteration  26: 78400.438 ops/s
Iteration  27: 81265.597 ops/s
Iteration  28: 77997.925 ops/s
Iteration  29: 81219.533 ops/s
Iteration  30: 77257.016 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_871._Benchmark.benchmark_Cluster_871":
  78462.070 ±(99.9%) 2588.782 ops/s [Average]
  (min, avg, max) = (60617.701, 78462.070, 82618.668), stdev = 3874.767
  CI (99.9%): [75873.288, 81050.851] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_871._Benchmark.benchmark_Cluster_871  thrpt   30  78462.070 ± 2588.782  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_872._Benchmark.benchmark_Cluster_872$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_872._Benchmark.benchmark_Cluster_872

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8121.406 ops/s
# Warmup Iteration   2: 43610.225 ops/s
# Warmup Iteration   3: 55173.396 ops/s
# Warmup Iteration   4: 118649.709 ops/s
# Warmup Iteration   5: 118474.423 ops/s
# Warmup Iteration   6: 115432.563 ops/s
# Warmup Iteration   7: 137550.299 ops/s
# Warmup Iteration   8: 131770.215 ops/s
# Warmup Iteration   9: 137478.165 ops/s
# Warmup Iteration  10: 138497.476 ops/s
# Warmup Iteration  11: 136231.158 ops/s
# Warmup Iteration  12: 135039.137 ops/s
# Warmup Iteration  13: 143429.546 ops/s
# Warmup Iteration  14: 132251.092 ops/s
# Warmup Iteration  15: 139065.966 ops/s
# Warmup Iteration  16: 133032.644 ops/s
# Warmup Iteration  17: 142331.268 ops/s
# Warmup Iteration  18: 144639.651 ops/s
# Warmup Iteration  19: 143567.473 ops/s
# Warmup Iteration  20: 145791.008 ops/s
# Warmup Iteration  21: 136768.476 ops/s
# Warmup Iteration  22: 142755.585 ops/s
# Warmup Iteration  23: 138953.569 ops/s
# Warmup Iteration  24: 140971.584 ops/s
# Warmup Iteration  25: 147039.061 ops/s
# Warmup Iteration  26: 137723.162 ops/s
# Warmup Iteration  27: 144554.570 ops/s
# Warmup Iteration  28: 146649.054 ops/s
# Warmup Iteration  29: 143185.580 ops/s
# Warmup Iteration  30: 143109.635 ops/s
Iteration   1: 139634.849 ops/s
Iteration   2: 145942.232 ops/s
Iteration   3: 137013.217 ops/s
Iteration   4: 146801.195 ops/s
Iteration   5: 144680.796 ops/s
Iteration   6: 142878.152 ops/s
Iteration   7: 146034.983 ops/s
Iteration   8: 137663.645 ops/s
Iteration   9: 145223.627 ops/s
Iteration  10: 138917.935 ops/s
Iteration  11: 144597.712 ops/s
Iteration  12: 143284.882 ops/s
Iteration  13: 137838.233 ops/s
Iteration  14: 143759.929 ops/s
Iteration  15: 140383.694 ops/s
Iteration  16: 143505.559 ops/s
Iteration  17: 141051.537 ops/s
Iteration  18: 143493.436 ops/s
Iteration  19: 142484.417 ops/s
Iteration  20: 140492.974 ops/s
Iteration  21: 145097.428 ops/s
Iteration  22: 138495.220 ops/s
Iteration  23: 140725.831 ops/s
Iteration  24: 144433.330 ops/s
Iteration  25: 137642.950 ops/s
Iteration  26: 145251.673 ops/s
Iteration  27: 137935.192 ops/s
Iteration  28: 146525.622 ops/s
Iteration  29: 136759.184 ops/s
Iteration  30: 141771.179 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_872._Benchmark.benchmark_Cluster_872":
  142010.687 ±(99.9%) 2130.238 ops/s [Average]
  (min, avg, max) = (136759.184, 142010.687, 146801.195), stdev = 3188.440
  CI (99.9%): [139880.449, 144140.925] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_872._Benchmark.benchmark_Cluster_872  thrpt   30  142010.687 ± 2130.238  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_873._Benchmark.benchmark_Cluster_873$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_873._Benchmark.benchmark_Cluster_873

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1799.697 ops/s
# Warmup Iteration   2: 11904.186 ops/s
# Warmup Iteration   3: 14602.849 ops/s
# Warmup Iteration   4: 41426.170 ops/s
# Warmup Iteration   5: 69546.118 ops/s
# Warmup Iteration   6: 74459.301 ops/s
# Warmup Iteration   7: 75793.181 ops/s
# Warmup Iteration   8: 82887.183 ops/s
# Warmup Iteration   9: 76519.860 ops/s
# Warmup Iteration  10: 85309.646 ops/s
# Warmup Iteration  11: 81904.769 ops/s
# Warmup Iteration  12: 83395.561 ops/s
# Warmup Iteration  13: 83126.333 ops/s
# Warmup Iteration  14: 83165.754 ops/s
# Warmup Iteration  15: 83922.642 ops/s
# Warmup Iteration  16: 84451.034 ops/s
# Warmup Iteration  17: 85844.154 ops/s
# Warmup Iteration  18: 84939.785 ops/s
# Warmup Iteration  19: 81506.804 ops/s
# Warmup Iteration  20: 84423.805 ops/s
# Warmup Iteration  21: 82088.552 ops/s
# Warmup Iteration  22: 84386.705 ops/s
# Warmup Iteration  23: 82279.491 ops/s
# Warmup Iteration  24: 82812.817 ops/s
# Warmup Iteration  25: 87218.533 ops/s
# Warmup Iteration  26: 87280.512 ops/s
# Warmup Iteration  27: 80743.303 ops/s
# Warmup Iteration  28: 83465.840 ops/s
# Warmup Iteration  29: 82278.327 ops/s
# Warmup Iteration  30: 86995.990 ops/s
Iteration   1: 85816.469 ops/s
Iteration   2: 80368.844 ops/s
Iteration   3: 81386.508 ops/s
Iteration   4: 85061.003 ops/s
Iteration   5: 80289.145 ops/s
Iteration   6: 84300.976 ops/s
Iteration   7: 83643.415 ops/s
Iteration   8: 80564.678 ops/s
Iteration   9: 85370.469 ops/s
Iteration  10: 80010.003 ops/s
Iteration  11: 85540.230 ops/s
Iteration  12: 81204.453 ops/s
Iteration  13: 83386.486 ops/s
Iteration  14: 86813.869 ops/s
Iteration  15: 83234.578 ops/s
Iteration  16: 82006.143 ops/s
Iteration  17: 85808.707 ops/s
Iteration  18: 81921.678 ops/s
Iteration  19: 85792.974 ops/s
Iteration  20: 65843.137 ops/s
Iteration  21: 81511.302 ops/s
Iteration  22: 86105.039 ops/s
Iteration  23: 81912.463 ops/s
Iteration  24: 85013.848 ops/s
Iteration  25: 83495.064 ops/s
Iteration  26: 83187.653 ops/s
Iteration  27: 85990.189 ops/s
Iteration  28: 85018.448 ops/s
Iteration  29: 80117.321 ops/s
Iteration  30: 85641.956 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_873._Benchmark.benchmark_Cluster_873":
  82878.568 ±(99.9%) 2583.171 ops/s [Average]
  (min, avg, max) = (65843.137, 82878.568, 86813.869), stdev = 3866.369
  CI (99.9%): [80295.397, 85461.739] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_873._Benchmark.benchmark_Cluster_873  thrpt   30  82878.568 ± 2583.171  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_874._Benchmark.benchmark_Cluster_874$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_874._Benchmark.benchmark_Cluster_874

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5812.208 ops/s
# Warmup Iteration   2: 19048.313 ops/s
# Warmup Iteration   3: 27207.311 ops/s
# Warmup Iteration   4: 58206.513 ops/s
# Warmup Iteration   5: 56705.424 ops/s
# Warmup Iteration   6: 64435.666 ops/s
# Warmup Iteration   7: 57050.471 ops/s
# Warmup Iteration   8: 63008.757 ops/s
# Warmup Iteration   9: 65830.585 ops/s
# Warmup Iteration  10: 53549.603 ops/s
# Warmup Iteration  11: 59681.480 ops/s
# Warmup Iteration  12: 58383.971 ops/s
# Warmup Iteration  13: 58543.371 ops/s
# Warmup Iteration  14: 66115.922 ops/s
# Warmup Iteration  15: 64281.355 ops/s
# Warmup Iteration  16: 65600.132 ops/s
# Warmup Iteration  17: 66083.271 ops/s
# Warmup Iteration  18: 63845.579 ops/s
# Warmup Iteration  19: 73088.802 ops/s
# Warmup Iteration  20: 66234.154 ops/s
# Warmup Iteration  21: 64949.158 ops/s
# Warmup Iteration  22: 66623.832 ops/s
# Warmup Iteration  23: 71116.269 ops/s
# Warmup Iteration  24: 58525.391 ops/s
# Warmup Iteration  25: 65196.985 ops/s
# Warmup Iteration  26: 61821.251 ops/s
# Warmup Iteration  27: 63830.834 ops/s
# Warmup Iteration  28: 69602.135 ops/s
# Warmup Iteration  29: 67099.411 ops/s
# Warmup Iteration  30: 66901.483 ops/s
Iteration   1: 63394.662 ops/s
Iteration   2: 63026.372 ops/s
Iteration   3: 62572.314 ops/s
Iteration   4: 68757.776 ops/s
Iteration   5: 64234.229 ops/s
Iteration   6: 69858.780 ops/s
Iteration   7: 62218.096 ops/s
Iteration   8: 68546.333 ops/s
Iteration   9: 60498.977 ops/s
Iteration  10: 67683.765 ops/s
Iteration  11: 65015.751 ops/s
Iteration  12: 61006.591 ops/s
Iteration  13: 64778.888 ops/s
Iteration  14: 64473.746 ops/s
Iteration  15: 61087.589 ops/s
Iteration  16: 62110.346 ops/s
Iteration  17: 56388.019 ops/s
Iteration  18: 65395.940 ops/s
Iteration  19: 68034.867 ops/s
Iteration  20: 59620.317 ops/s
Iteration  21: 62671.677 ops/s
Iteration  22: 59570.872 ops/s
Iteration  23: 64727.661 ops/s
Iteration  24: 61314.552 ops/s
Iteration  25: 66380.436 ops/s
Iteration  26: 64996.378 ops/s
Iteration  27: 58890.875 ops/s
Iteration  28: 67193.632 ops/s
Iteration  29: 65518.633 ops/s
Iteration  30: 69414.740 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_874._Benchmark.benchmark_Cluster_874":
  63979.427 ±(99.9%) 2260.468 ops/s [Average]
  (min, avg, max) = (56388.019, 63979.427, 69858.780), stdev = 3383.363
  CI (99.9%): [61718.959, 66239.896] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_874._Benchmark.benchmark_Cluster_874  thrpt   30  63979.427 ± 2260.468  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_875._Benchmark.benchmark_Cluster_875$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_875._Benchmark.benchmark_Cluster_875

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1390.796 ops/s
# Warmup Iteration   2: 5509.405 ops/s
# Warmup Iteration   3: 21137.774 ops/s
# Warmup Iteration   4: 21759.646 ops/s
# Warmup Iteration   5: 28551.082 ops/s
# Warmup Iteration   6: 50644.411 ops/s
# Warmup Iteration   7: 52667.779 ops/s
# Warmup Iteration   8: 49497.099 ops/s
# Warmup Iteration   9: 54026.079 ops/s
# Warmup Iteration  10: 58445.331 ops/s
# Warmup Iteration  11: 56581.495 ops/s
# Warmup Iteration  12: 41696.096 ops/s
# Warmup Iteration  13: 54426.260 ops/s
# Warmup Iteration  14: 56543.186 ops/s
# Warmup Iteration  15: 53802.773 ops/s
# Warmup Iteration  16: 59519.001 ops/s
# Warmup Iteration  17: 61959.541 ops/s
# Warmup Iteration  18: 60370.399 ops/s
# Warmup Iteration  19: 55526.850 ops/s
# Warmup Iteration  20: 56732.334 ops/s
# Warmup Iteration  21: 60347.039 ops/s
# Warmup Iteration  22: 57663.395 ops/s
# Warmup Iteration  23: 60724.145 ops/s
# Warmup Iteration  24: 59072.646 ops/s
# Warmup Iteration  25: 62084.892 ops/s
# Warmup Iteration  26: 48204.840 ops/s
# Warmup Iteration  27: 54302.118 ops/s
# Warmup Iteration  28: 58687.218 ops/s
# Warmup Iteration  29: 48405.872 ops/s
# Warmup Iteration  30: 55318.089 ops/s
Iteration   1: 54445.967 ops/s
Iteration   2: 57750.880 ops/s
Iteration   3: 57720.716 ops/s
Iteration   4: 62169.701 ops/s
Iteration   5: 61034.882 ops/s
Iteration   6: 57455.346 ops/s
Iteration   7: 58099.394 ops/s
Iteration   8: 55916.822 ops/s
Iteration   9: 55580.326 ops/s
Iteration  10: 58168.021 ops/s
Iteration  11: 50176.143 ops/s
Iteration  12: 46124.540 ops/s
Iteration  13: 61095.387 ops/s
Iteration  14: 60367.893 ops/s
Iteration  15: 56264.152 ops/s
Iteration  16: 53956.466 ops/s
Iteration  17: 55950.477 ops/s
Iteration  18: 54048.803 ops/s
Iteration  19: 64386.144 ops/s
Iteration  20: 56325.756 ops/s
Iteration  21: 54983.704 ops/s
Iteration  22: 61560.797 ops/s
Iteration  23: 59269.303 ops/s
Iteration  24: 58745.207 ops/s
Iteration  25: 52510.938 ops/s
Iteration  26: 57430.040 ops/s
Iteration  27: 58823.615 ops/s
Iteration  28: 57550.837 ops/s
Iteration  29: 56529.225 ops/s
Iteration  30: 62427.686 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_875._Benchmark.benchmark_Cluster_875":
  57228.972 ±(99.9%) 2509.983 ops/s [Average]
  (min, avg, max) = (46124.540, 57228.972, 64386.144), stdev = 3756.825
  CI (99.9%): [54718.989, 59738.956] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_875._Benchmark.benchmark_Cluster_875  thrpt   30  57228.972 ± 2509.983  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_876._Benchmark.benchmark_Cluster_876$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_876._Benchmark.benchmark_Cluster_876

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 25510.257 ops/s
# Warmup Iteration   2: 61126.015 ops/s
# Warmup Iteration   3: 140674.461 ops/s
# Warmup Iteration   4: 174856.539 ops/s
# Warmup Iteration   5: 182154.751 ops/s
# Warmup Iteration   6: 174078.882 ops/s
# Warmup Iteration   7: 173104.572 ops/s
# Warmup Iteration   8: 180775.433 ops/s
# Warmup Iteration   9: 172593.935 ops/s
# Warmup Iteration  10: 181391.129 ops/s
# Warmup Iteration  11: 178520.067 ops/s
# Warmup Iteration  12: 176650.603 ops/s
# Warmup Iteration  13: 181796.953 ops/s
# Warmup Iteration  14: 175905.792 ops/s
# Warmup Iteration  15: 175854.650 ops/s
# Warmup Iteration  16: 180551.695 ops/s
# Warmup Iteration  17: 173619.123 ops/s
# Warmup Iteration  18: 180609.546 ops/s
# Warmup Iteration  19: 180551.650 ops/s
# Warmup Iteration  20: 171684.355 ops/s
# Warmup Iteration  21: 180052.630 ops/s
# Warmup Iteration  22: 177040.145 ops/s
# Warmup Iteration  23: 176023.083 ops/s
# Warmup Iteration  24: 177139.500 ops/s
# Warmup Iteration  25: 175787.083 ops/s
# Warmup Iteration  26: 179663.030 ops/s
# Warmup Iteration  27: 174728.782 ops/s
# Warmup Iteration  28: 170902.538 ops/s
# Warmup Iteration  29: 180784.062 ops/s
# Warmup Iteration  30: 175753.889 ops/s
Iteration   1: 177435.268 ops/s
Iteration   2: 185848.198 ops/s
Iteration   3: 173939.771 ops/s
Iteration   4: 179401.641 ops/s
Iteration   5: 185007.096 ops/s
Iteration   6: 178097.208 ops/s
Iteration   7: 179367.920 ops/s
Iteration   8: 174871.368 ops/s
Iteration   9: 170537.557 ops/s
Iteration  10: 174857.099 ops/s
Iteration  11: 177571.397 ops/s
Iteration  12: 177054.537 ops/s
Iteration  13: 186118.630 ops/s
Iteration  14: 176767.372 ops/s
Iteration  15: 174472.937 ops/s
Iteration  16: 184751.086 ops/s
Iteration  17: 184428.524 ops/s
Iteration  18: 175169.350 ops/s
Iteration  19: 175777.436 ops/s
Iteration  20: 185186.529 ops/s
Iteration  21: 177421.921 ops/s
Iteration  22: 181250.995 ops/s
Iteration  23: 179386.114 ops/s
Iteration  24: 187667.064 ops/s
Iteration  25: 183926.620 ops/s
Iteration  26: 186172.554 ops/s
Iteration  27: 175951.746 ops/s
Iteration  28: 185012.372 ops/s
Iteration  29: 179685.002 ops/s
Iteration  30: 173710.690 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_876._Benchmark.benchmark_Cluster_876":
  179561.533 ±(99.9%) 3160.127 ops/s [Average]
  (min, avg, max) = (170537.557, 179561.533, 187667.064), stdev = 4729.930
  CI (99.9%): [176401.406, 182721.661] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_876._Benchmark.benchmark_Cluster_876  thrpt   30  179561.533 ± 3160.127  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_877._Benchmark.benchmark_Cluster_877$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_877._Benchmark.benchmark_Cluster_877

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2092.718 ops/s
# Warmup Iteration   2: 16568.688 ops/s
# Warmup Iteration   3: 30179.626 ops/s
# Warmup Iteration   4: 36818.044 ops/s
# Warmup Iteration   5: 44979.416 ops/s
# Warmup Iteration   6: 30956.176 ops/s
# Warmup Iteration   7: 92550.588 ops/s
# Warmup Iteration   8: 94022.925 ops/s
# Warmup Iteration   9: 106204.269 ops/s
# Warmup Iteration  10: 101113.725 ops/s
# Warmup Iteration  11: 100136.673 ops/s
# Warmup Iteration  12: 102899.315 ops/s
# Warmup Iteration  13: 106111.251 ops/s
# Warmup Iteration  14: 99576.268 ops/s
# Warmup Iteration  15: 105906.010 ops/s
# Warmup Iteration  16: 102578.660 ops/s
# Warmup Iteration  17: 107501.876 ops/s
# Warmup Iteration  18: 107471.451 ops/s
# Warmup Iteration  19: 105687.048 ops/s
# Warmup Iteration  20: 109171.667 ops/s
# Warmup Iteration  21: 103149.769 ops/s
# Warmup Iteration  22: 107377.515 ops/s
# Warmup Iteration  23: 101938.154 ops/s
# Warmup Iteration  24: 102265.824 ops/s
# Warmup Iteration  25: 107611.660 ops/s
# Warmup Iteration  26: 101700.676 ops/s
# Warmup Iteration  27: 109525.311 ops/s
# Warmup Iteration  28: 103751.417 ops/s
# Warmup Iteration  29: 105241.460 ops/s
# Warmup Iteration  30: 109015.485 ops/s
Iteration   1: 108653.169 ops/s
Iteration   2: 102937.073 ops/s
Iteration   3: 105698.458 ops/s
Iteration   4: 107217.605 ops/s
Iteration   5: 74301.958 ops/s
Iteration   6: 107799.243 ops/s
Iteration   7: 102063.161 ops/s
Iteration   8: 105537.050 ops/s
Iteration   9: 104304.373 ops/s
Iteration  10: 103608.815 ops/s
Iteration  11: 108457.845 ops/s
Iteration  12: 100915.065 ops/s
Iteration  13: 103733.688 ops/s
Iteration  14: 108682.978 ops/s
Iteration  15: 107414.130 ops/s
Iteration  16: 109284.880 ops/s
Iteration  17: 104794.828 ops/s
Iteration  18: 107280.089 ops/s
Iteration  19: 105496.334 ops/s
Iteration  20: 106497.416 ops/s
Iteration  21: 105803.347 ops/s
Iteration  22: 107574.351 ops/s
Iteration  23: 108470.028 ops/s
Iteration  24: 106567.741 ops/s
Iteration  25: 105594.495 ops/s
Iteration  26: 105858.689 ops/s
Iteration  27: 106666.681 ops/s
Iteration  28: 102485.549 ops/s
Iteration  29: 106225.571 ops/s
Iteration  30: 104639.112 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_877._Benchmark.benchmark_Cluster_877":
  104818.791 ±(99.9%) 4101.454 ops/s [Average]
  (min, avg, max) = (74301.958, 104818.791, 109284.880), stdev = 6138.864
  CI (99.9%): [100717.336, 108920.245] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_877._Benchmark.benchmark_Cluster_877  thrpt   30  104818.791 ± 4101.454  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_878._Benchmark.benchmark_Cluster_878$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_878._Benchmark.benchmark_Cluster_878

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10772.544 ops/s
# Warmup Iteration   2: 28223.965 ops/s
# Warmup Iteration   3: 97761.709 ops/s
# Warmup Iteration   4: 103578.169 ops/s
# Warmup Iteration   5: 102676.342 ops/s
# Warmup Iteration   6: 106084.359 ops/s
# Warmup Iteration   7: 101391.469 ops/s
# Warmup Iteration   8: 103127.195 ops/s
# Warmup Iteration   9: 106498.894 ops/s
# Warmup Iteration  10: 99170.533 ops/s
# Warmup Iteration  11: 105196.212 ops/s
# Warmup Iteration  12: 111251.981 ops/s
# Warmup Iteration  13: 100028.901 ops/s
# Warmup Iteration  14: 107149.382 ops/s
# Warmup Iteration  15: 104048.283 ops/s
# Warmup Iteration  16: 108034.526 ops/s
# Warmup Iteration  17: 113651.921 ops/s
# Warmup Iteration  18: 111516.592 ops/s
# Warmup Iteration  19: 110618.483 ops/s
# Warmup Iteration  20: 113953.237 ops/s
# Warmup Iteration  21: 116659.268 ops/s
# Warmup Iteration  22: 108016.965 ops/s
# Warmup Iteration  23: 115147.571 ops/s
# Warmup Iteration  24: 108733.267 ops/s
# Warmup Iteration  25: 108364.788 ops/s
# Warmup Iteration  26: 115222.923 ops/s
# Warmup Iteration  27: 108945.034 ops/s
# Warmup Iteration  28: 114156.161 ops/s
# Warmup Iteration  29: 112399.702 ops/s
# Warmup Iteration  30: 113005.924 ops/s
Iteration   1: 114122.406 ops/s
Iteration   2: 110542.465 ops/s
Iteration   3: 116215.057 ops/s
Iteration   4: 110036.463 ops/s
Iteration   5: 112224.687 ops/s
Iteration   6: 116035.000 ops/s
Iteration   7: 111346.562 ops/s
Iteration   8: 114932.697 ops/s
Iteration   9: 119273.105 ops/s
Iteration  10: 105705.309 ops/s
Iteration  11: 115500.570 ops/s
Iteration  12: 110809.036 ops/s
Iteration  13: 110143.944 ops/s
Iteration  14: 115435.727 ops/s
Iteration  15: 114805.329 ops/s
Iteration  16: 111088.310 ops/s
Iteration  17: 113780.339 ops/s
Iteration  18: 114595.458 ops/s
Iteration  19: 111990.550 ops/s
Iteration  20: 116054.794 ops/s
Iteration  21: 112749.473 ops/s
Iteration  22: 115291.628 ops/s
Iteration  23: 111888.725 ops/s
Iteration  24: 113300.578 ops/s
Iteration  25: 116573.696 ops/s
Iteration  26: 110070.543 ops/s
Iteration  27: 116173.047 ops/s
Iteration  28: 111215.215 ops/s
Iteration  29: 111533.685 ops/s
Iteration  30: 113629.565 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_878._Benchmark.benchmark_Cluster_878":
  113235.466 ±(99.9%) 1852.508 ops/s [Average]
  (min, avg, max) = (105705.309, 113235.466, 119273.105), stdev = 2772.747
  CI (99.9%): [111382.958, 115087.974] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_878._Benchmark.benchmark_Cluster_878  thrpt   30  113235.466 ± 1852.508  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_879._Benchmark.benchmark_Cluster_879$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_879._Benchmark.benchmark_Cluster_879

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9803.650 ops/s
# Warmup Iteration   2: 30050.446 ops/s
# Warmup Iteration   3: 35511.300 ops/s
# Warmup Iteration   4: 40629.076 ops/s
# Warmup Iteration   5: 49921.920 ops/s
# Warmup Iteration   6: 108506.086 ops/s
# Warmup Iteration   7: 102897.747 ops/s
# Warmup Iteration   8: 101960.829 ops/s
# Warmup Iteration   9: 108756.337 ops/s
# Warmup Iteration  10: 107827.765 ops/s
# Warmup Iteration  11: 100233.799 ops/s
# Warmup Iteration  12: 104483.234 ops/s
# Warmup Iteration  13: 107884.439 ops/s
# Warmup Iteration  14: 108246.879 ops/s
# Warmup Iteration  15: 110267.244 ops/s
# Warmup Iteration  16: 105529.971 ops/s
# Warmup Iteration  17: 114079.993 ops/s
# Warmup Iteration  18: 112378.180 ops/s
# Warmup Iteration  19: 111298.329 ops/s
# Warmup Iteration  20: 114925.343 ops/s
# Warmup Iteration  21: 109827.008 ops/s
# Warmup Iteration  22: 116601.676 ops/s
# Warmup Iteration  23: 111877.630 ops/s
# Warmup Iteration  24: 108911.890 ops/s
# Warmup Iteration  25: 115607.199 ops/s
# Warmup Iteration  26: 110054.926 ops/s
# Warmup Iteration  27: 111115.713 ops/s
# Warmup Iteration  28: 111134.819 ops/s
# Warmup Iteration  29: 107796.676 ops/s
# Warmup Iteration  30: 96076.283 ops/s
Iteration   1: 109291.385 ops/s
Iteration   2: 113252.812 ops/s
Iteration   3: 115180.626 ops/s
Iteration   4: 110792.703 ops/s
Iteration   5: 114134.003 ops/s
Iteration   6: 110767.585 ops/s
Iteration   7: 111365.815 ops/s
Iteration   8: 113399.569 ops/s
Iteration   9: 108880.056 ops/s
Iteration  10: 113978.903 ops/s
Iteration  11: 104628.622 ops/s
Iteration  12: 116182.001 ops/s
Iteration  13: 114344.446 ops/s
Iteration  14: 112504.391 ops/s
Iteration  15: 111189.619 ops/s
Iteration  16: 110792.229 ops/s
Iteration  17: 114443.017 ops/s
Iteration  18: 112491.193 ops/s
Iteration  19: 111650.848 ops/s
Iteration  20: 114877.076 ops/s
Iteration  21: 111596.026 ops/s
Iteration  22: 113135.439 ops/s
Iteration  23: 109529.309 ops/s
Iteration  24: 114847.594 ops/s
Iteration  25: 110892.761 ops/s
Iteration  26: 112668.234 ops/s
Iteration  27: 115031.980 ops/s
Iteration  28: 109517.037 ops/s
Iteration  29: 112611.941 ops/s
Iteration  30: 111312.647 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_879._Benchmark.benchmark_Cluster_879":
  112176.329 ±(99.9%) 1615.120 ops/s [Average]
  (min, avg, max) = (104628.622, 112176.329, 116182.001), stdev = 2417.436
  CI (99.9%): [110561.209, 113791.449] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_879._Benchmark.benchmark_Cluster_879  thrpt   30  112176.329 ± 1615.120  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_88._Benchmark.benchmark_Cluster_88$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_88._Benchmark.benchmark_Cluster_88

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8303.489 ops/s
# Warmup Iteration   2: 46082.035 ops/s
# Warmup Iteration   3: 46327.600 ops/s
# Warmup Iteration   4: 49335.987 ops/s
# Warmup Iteration   5: 127376.140 ops/s
# Warmup Iteration   6: 145147.068 ops/s
# Warmup Iteration   7: 149852.246 ops/s
# Warmup Iteration   8: 148468.681 ops/s
# Warmup Iteration   9: 143435.019 ops/s
# Warmup Iteration  10: 153574.921 ops/s
# Warmup Iteration  11: 146968.904 ops/s
# Warmup Iteration  12: 151422.550 ops/s
# Warmup Iteration  13: 157177.695 ops/s
# Warmup Iteration  14: 150791.980 ops/s
# Warmup Iteration  15: 156189.878 ops/s
# Warmup Iteration  16: 155906.147 ops/s
# Warmup Iteration  17: 156590.320 ops/s
# Warmup Iteration  18: 159477.046 ops/s
# Warmup Iteration  19: 163636.152 ops/s
# Warmup Iteration  20: 157789.676 ops/s
# Warmup Iteration  21: 160223.642 ops/s
# Warmup Iteration  22: 156542.232 ops/s
# Warmup Iteration  23: 152280.363 ops/s
# Warmup Iteration  24: 163907.131 ops/s
# Warmup Iteration  25: 163395.153 ops/s
# Warmup Iteration  26: 156842.266 ops/s
# Warmup Iteration  27: 162411.352 ops/s
# Warmup Iteration  28: 161784.925 ops/s
# Warmup Iteration  29: 150055.191 ops/s
# Warmup Iteration  30: 159729.336 ops/s
Iteration   1: 160831.342 ops/s
Iteration   2: 158891.002 ops/s
Iteration   3: 159199.803 ops/s
Iteration   4: 160320.398 ops/s
Iteration   5: 161578.268 ops/s
Iteration   6: 163027.406 ops/s
Iteration   7: 166866.243 ops/s
Iteration   8: 156806.117 ops/s
Iteration   9: 166844.523 ops/s
Iteration  10: 166721.891 ops/s
Iteration  11: 166454.550 ops/s
Iteration  12: 157705.167 ops/s
Iteration  13: 161761.665 ops/s
Iteration  14: 161323.467 ops/s
Iteration  15: 160115.039 ops/s
Iteration  16: 161257.081 ops/s
Iteration  17: 158315.721 ops/s
Iteration  18: 167246.084 ops/s
Iteration  19: 166969.177 ops/s
Iteration  20: 154149.387 ops/s
Iteration  21: 164696.664 ops/s
Iteration  22: 155439.442 ops/s
Iteration  23: 166917.812 ops/s
Iteration  24: 157890.924 ops/s
Iteration  25: 164387.895 ops/s
Iteration  26: 156104.489 ops/s
Iteration  27: 162744.531 ops/s
Iteration  28: 158644.121 ops/s
Iteration  29: 164029.814 ops/s
Iteration  30: 162840.571 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_88._Benchmark.benchmark_Cluster_88":
  161669.353 ±(99.9%) 2587.240 ops/s [Average]
  (min, avg, max) = (154149.387, 161669.353, 167246.084), stdev = 3872.460
  CI (99.9%): [159082.113, 164256.593] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_88._Benchmark.benchmark_Cluster_88  thrpt   30  161669.353 ± 2587.240  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_880._Benchmark.benchmark_Cluster_880$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_880._Benchmark.benchmark_Cluster_880

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8460.948 ops/s
# Warmup Iteration   2: 39965.361 ops/s
# Warmup Iteration   3: 98256.667 ops/s
# Warmup Iteration   4: 96908.125 ops/s
# Warmup Iteration   5: 98360.088 ops/s
# Warmup Iteration   6: 104764.552 ops/s
# Warmup Iteration   7: 103131.395 ops/s
# Warmup Iteration   8: 102953.287 ops/s
# Warmup Iteration   9: 102388.695 ops/s
# Warmup Iteration  10: 102992.691 ops/s
# Warmup Iteration  11: 112226.942 ops/s
# Warmup Iteration  12: 109233.128 ops/s
# Warmup Iteration  13: 106238.627 ops/s
# Warmup Iteration  14: 112527.525 ops/s
# Warmup Iteration  15: 105967.232 ops/s
# Warmup Iteration  16: 112334.770 ops/s
# Warmup Iteration  17: 110954.882 ops/s
# Warmup Iteration  18: 117531.977 ops/s
# Warmup Iteration  19: 115777.103 ops/s
# Warmup Iteration  20: 110517.762 ops/s
# Warmup Iteration  21: 116329.941 ops/s
# Warmup Iteration  22: 113563.477 ops/s
# Warmup Iteration  23: 112663.005 ops/s
# Warmup Iteration  24: 82213.000 ops/s
# Warmup Iteration  25: 114552.309 ops/s
# Warmup Iteration  26: 112454.319 ops/s
# Warmup Iteration  27: 110583.315 ops/s
# Warmup Iteration  28: 117228.644 ops/s
# Warmup Iteration  29: 110632.911 ops/s
# Warmup Iteration  30: 111561.565 ops/s
Iteration   1: 119652.560 ops/s
Iteration   2: 118158.254 ops/s
Iteration   3: 110934.540 ops/s
Iteration   4: 115309.104 ops/s
Iteration   5: 116249.569 ops/s
Iteration   6: 111971.962 ops/s
Iteration   7: 117450.420 ops/s
Iteration   8: 111331.689 ops/s
Iteration   9: 113489.565 ops/s
Iteration  10: 110810.624 ops/s
Iteration  11: 112221.423 ops/s
Iteration  12: 115309.528 ops/s
Iteration  13: 109941.146 ops/s
Iteration  14: 110123.582 ops/s
Iteration  15: 111882.179 ops/s
Iteration  16: 112264.547 ops/s
Iteration  17: 111600.991 ops/s
Iteration  18: 110506.485 ops/s
Iteration  19: 114832.361 ops/s
Iteration  20: 111600.128 ops/s
Iteration  21: 115773.164 ops/s
Iteration  22: 116455.577 ops/s
Iteration  23: 115407.018 ops/s
Iteration  24: 114996.803 ops/s
Iteration  25: 108375.781 ops/s
Iteration  26: 118000.205 ops/s
Iteration  27: 112380.927 ops/s
Iteration  28: 113503.622 ops/s
Iteration  29: 115867.141 ops/s
Iteration  30: 111350.624 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_880._Benchmark.benchmark_Cluster_880":
  113591.717 ±(99.9%) 1903.611 ops/s [Average]
  (min, avg, max) = (108375.781, 113591.717, 119652.560), stdev = 2849.235
  CI (99.9%): [111688.107, 115495.328] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_880._Benchmark.benchmark_Cluster_880  thrpt   30  113591.717 ± 1903.611  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_881._Benchmark.benchmark_Cluster_881$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_881._Benchmark.benchmark_Cluster_881

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14716.855 ops/s
# Warmup Iteration   2: 22485.727 ops/s
# Warmup Iteration   3: 64784.051 ops/s
# Warmup Iteration   4: 119204.344 ops/s
# Warmup Iteration   5: 115773.592 ops/s
# Warmup Iteration   6: 116116.462 ops/s
# Warmup Iteration   7: 115546.373 ops/s
# Warmup Iteration   8: 118083.605 ops/s
# Warmup Iteration   9: 110245.990 ops/s
# Warmup Iteration  10: 119121.134 ops/s
# Warmup Iteration  11: 116218.389 ops/s
# Warmup Iteration  12: 118161.860 ops/s
# Warmup Iteration  13: 117924.015 ops/s
# Warmup Iteration  14: 115326.368 ops/s
# Warmup Iteration  15: 121053.652 ops/s
# Warmup Iteration  16: 116782.865 ops/s
# Warmup Iteration  17: 123055.186 ops/s
# Warmup Iteration  18: 121463.382 ops/s
# Warmup Iteration  19: 121495.889 ops/s
# Warmup Iteration  20: 124884.512 ops/s
# Warmup Iteration  21: 120023.909 ops/s
# Warmup Iteration  22: 119720.527 ops/s
# Warmup Iteration  23: 126224.802 ops/s
# Warmup Iteration  24: 116701.777 ops/s
# Warmup Iteration  25: 127630.925 ops/s
# Warmup Iteration  26: 119452.133 ops/s
# Warmup Iteration  27: 120175.274 ops/s
# Warmup Iteration  28: 123360.738 ops/s
# Warmup Iteration  29: 123098.627 ops/s
# Warmup Iteration  30: 123406.971 ops/s
Iteration   1: 121438.729 ops/s
Iteration   2: 124054.618 ops/s
Iteration   3: 122268.702 ops/s
Iteration   4: 120264.648 ops/s
Iteration   5: 124217.342 ops/s
Iteration   6: 118844.527 ops/s
Iteration   7: 129013.873 ops/s
Iteration   8: 124562.151 ops/s
Iteration   9: 119258.276 ops/s
Iteration  10: 125316.715 ops/s
Iteration  11: 121525.314 ops/s
Iteration  12: 125402.998 ops/s
Iteration  13: 121878.893 ops/s
Iteration  14: 120735.488 ops/s
Iteration  15: 122991.201 ops/s
Iteration  16: 119102.190 ops/s
Iteration  17: 124962.876 ops/s
Iteration  18: 120654.290 ops/s
Iteration  19: 124547.181 ops/s
Iteration  20: 125111.243 ops/s
Iteration  21: 122284.762 ops/s
Iteration  22: 127227.202 ops/s
Iteration  23: 119963.154 ops/s
Iteration  24: 125210.785 ops/s
Iteration  25: 122144.266 ops/s
Iteration  26: 125087.017 ops/s
Iteration  27: 124938.033 ops/s
Iteration  28: 119031.939 ops/s
Iteration  29: 125206.841 ops/s
Iteration  30: 120483.667 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_881._Benchmark.benchmark_Cluster_881":
  122924.297 ±(99.9%) 1763.890 ops/s [Average]
  (min, avg, max) = (118844.527, 122924.297, 129013.873), stdev = 2640.108
  CI (99.9%): [121160.407, 124688.188] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_881._Benchmark.benchmark_Cluster_881  thrpt   30  122924.297 ± 1763.890  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_882._Benchmark.benchmark_Cluster_882$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_882._Benchmark.benchmark_Cluster_882

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9951.771 ops/s
# Warmup Iteration   2: 30382.445 ops/s
# Warmup Iteration   3: 28734.437 ops/s
# Warmup Iteration   4: 82057.219 ops/s
# Warmup Iteration   5: 102585.784 ops/s
# Warmup Iteration   6: 100100.468 ops/s
# Warmup Iteration   7: 96342.826 ops/s
# Warmup Iteration   8: 98581.758 ops/s
# Warmup Iteration   9: 93564.741 ops/s
# Warmup Iteration  10: 99113.693 ops/s
# Warmup Iteration  11: 99306.540 ops/s
# Warmup Iteration  12: 102496.793 ops/s
# Warmup Iteration  13: 96597.349 ops/s
# Warmup Iteration  14: 97673.553 ops/s
# Warmup Iteration  15: 102540.779 ops/s
# Warmup Iteration  16: 95592.089 ops/s
# Warmup Iteration  17: 96054.261 ops/s
# Warmup Iteration  18: 84802.912 ops/s
# Warmup Iteration  19: 96645.369 ops/s
# Warmup Iteration  20: 104374.241 ops/s
# Warmup Iteration  21: 98334.291 ops/s
# Warmup Iteration  22: 98778.717 ops/s
# Warmup Iteration  23: 101461.499 ops/s
# Warmup Iteration  24: 97172.827 ops/s
# Warmup Iteration  25: 98817.348 ops/s
# Warmup Iteration  26: 101653.976 ops/s
# Warmup Iteration  27: 99904.611 ops/s
# Warmup Iteration  28: 96007.510 ops/s
# Warmup Iteration  29: 100645.154 ops/s
# Warmup Iteration  30: 98759.370 ops/s
Iteration   1: 103240.438 ops/s
Iteration   2: 98421.886 ops/s
Iteration   3: 101556.826 ops/s
Iteration   4: 99733.955 ops/s
Iteration   5: 98881.057 ops/s
Iteration   6: 100555.041 ops/s
Iteration   7: 98469.486 ops/s
Iteration   8: 103662.079 ops/s
Iteration   9: 101309.298 ops/s
Iteration  10: 98336.619 ops/s
Iteration  11: 100916.343 ops/s
Iteration  12: 103897.793 ops/s
Iteration  13: 97544.921 ops/s
Iteration  14: 99052.710 ops/s
Iteration  15: 99991.477 ops/s
Iteration  16: 101919.835 ops/s
Iteration  17: 97908.762 ops/s
Iteration  18: 99800.822 ops/s
Iteration  19: 99136.810 ops/s
Iteration  20: 102546.894 ops/s
Iteration  21: 98786.930 ops/s
Iteration  22: 98862.607 ops/s
Iteration  23: 96197.999 ops/s
Iteration  24: 100163.630 ops/s
Iteration  25: 98255.230 ops/s
Iteration  26: 96992.464 ops/s
Iteration  27: 99343.360 ops/s
Iteration  28: 99222.527 ops/s
Iteration  29: 100403.053 ops/s
Iteration  30: 100352.471 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_882._Benchmark.benchmark_Cluster_882":
  99848.777 ±(99.9%) 1274.561 ops/s [Average]
  (min, avg, max) = (96197.999, 99848.777, 103897.793), stdev = 1907.703
  CI (99.9%): [98574.216, 101123.339] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_882._Benchmark.benchmark_Cluster_882  thrpt   30  99848.777 ± 1274.561  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_883._Benchmark.benchmark_Cluster_883$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_883._Benchmark.benchmark_Cluster_883

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3567.562 ops/s
# Warmup Iteration   2: 44399.301 ops/s
# Warmup Iteration   3: 66772.484 ops/s
# Warmup Iteration   4: 79063.084 ops/s
# Warmup Iteration   5: 163744.147 ops/s
# Warmup Iteration   6: 163475.713 ops/s
# Warmup Iteration   7: 159671.083 ops/s
# Warmup Iteration   8: 159478.397 ops/s
# Warmup Iteration   9: 165092.487 ops/s
# Warmup Iteration  10: 155431.107 ops/s
# Warmup Iteration  11: 163492.820 ops/s
# Warmup Iteration  12: 173813.864 ops/s
# Warmup Iteration  13: 159005.304 ops/s
# Warmup Iteration  14: 165223.793 ops/s
# Warmup Iteration  15: 162732.879 ops/s
# Warmup Iteration  16: 159373.594 ops/s
# Warmup Iteration  17: 175590.112 ops/s
# Warmup Iteration  18: 169869.308 ops/s
# Warmup Iteration  19: 172525.301 ops/s
# Warmup Iteration  20: 173939.008 ops/s
# Warmup Iteration  21: 164887.654 ops/s
# Warmup Iteration  22: 170071.094 ops/s
# Warmup Iteration  23: 171559.633 ops/s
# Warmup Iteration  24: 164948.411 ops/s
# Warmup Iteration  25: 178237.889 ops/s
# Warmup Iteration  26: 171700.446 ops/s
# Warmup Iteration  27: 164936.771 ops/s
# Warmup Iteration  28: 169813.399 ops/s
# Warmup Iteration  29: 167680.639 ops/s
# Warmup Iteration  30: 170786.485 ops/s
Iteration   1: 167172.762 ops/s
Iteration   2: 178090.972 ops/s
Iteration   3: 167870.291 ops/s
Iteration   4: 179138.975 ops/s
Iteration   5: 174075.605 ops/s
Iteration   6: 169786.373 ops/s
Iteration   7: 173435.971 ops/s
Iteration   8: 170411.735 ops/s
Iteration   9: 170379.557 ops/s
Iteration  10: 172967.988 ops/s
Iteration  11: 166305.048 ops/s
Iteration  12: 171272.927 ops/s
Iteration  13: 174777.196 ops/s
Iteration  14: 169750.697 ops/s
Iteration  15: 170058.885 ops/s
Iteration  16: 172184.156 ops/s
Iteration  17: 171445.569 ops/s
Iteration  18: 163112.688 ops/s
Iteration  19: 163543.810 ops/s
Iteration  20: 177843.968 ops/s
Iteration  21: 170967.986 ops/s
Iteration  22: 172813.435 ops/s
Iteration  23: 173381.348 ops/s
Iteration  24: 172093.912 ops/s
Iteration  25: 172950.715 ops/s
Iteration  26: 172367.971 ops/s
Iteration  27: 183475.940 ops/s
Iteration  28: 169392.839 ops/s
Iteration  29: 181508.007 ops/s
Iteration  30: 171677.820 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_883._Benchmark.benchmark_Cluster_883":
  172141.838 ±(99.9%) 3072.576 ops/s [Average]
  (min, avg, max) = (163112.688, 172141.838, 183475.940), stdev = 4598.887
  CI (99.9%): [169069.262, 175214.414] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_883._Benchmark.benchmark_Cluster_883  thrpt   30  172141.838 ± 3072.576  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_884._Benchmark.benchmark_Cluster_884$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_884._Benchmark.benchmark_Cluster_884

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5439.943 ops/s
# Warmup Iteration   2: 31649.838 ops/s
# Warmup Iteration   3: 31368.998 ops/s
# Warmup Iteration   4: 29093.790 ops/s
# Warmup Iteration   5: 54913.490 ops/s
# Warmup Iteration   6: 109430.392 ops/s
# Warmup Iteration   7: 118814.963 ops/s
# Warmup Iteration   8: 118991.160 ops/s
# Warmup Iteration   9: 128761.669 ops/s
# Warmup Iteration  10: 127651.924 ops/s
# Warmup Iteration  11: 129755.661 ops/s
# Warmup Iteration  12: 96772.500 ops/s
# Warmup Iteration  13: 122873.014 ops/s
# Warmup Iteration  14: 132194.224 ops/s
# Warmup Iteration  15: 118528.196 ops/s
# Warmup Iteration  16: 131111.518 ops/s
# Warmup Iteration  17: 129324.573 ops/s
# Warmup Iteration  18: 131678.939 ops/s
# Warmup Iteration  19: 138069.880 ops/s
# Warmup Iteration  20: 127426.500 ops/s
# Warmup Iteration  21: 134153.111 ops/s
# Warmup Iteration  22: 130471.919 ops/s
# Warmup Iteration  23: 135775.815 ops/s
# Warmup Iteration  24: 130629.148 ops/s
# Warmup Iteration  25: 133349.578 ops/s
# Warmup Iteration  26: 130876.093 ops/s
# Warmup Iteration  27: 132518.229 ops/s
# Warmup Iteration  28: 128972.576 ops/s
# Warmup Iteration  29: 139071.651 ops/s
# Warmup Iteration  30: 128950.860 ops/s
Iteration   1: 133511.452 ops/s
Iteration   2: 133457.168 ops/s
Iteration   3: 130360.707 ops/s
Iteration   4: 131641.321 ops/s
Iteration   5: 131073.293 ops/s
Iteration   6: 134707.905 ops/s
Iteration   7: 127584.740 ops/s
Iteration   8: 133868.297 ops/s
Iteration   9: 139193.643 ops/s
Iteration  10: 128592.323 ops/s
Iteration  11: 134782.114 ops/s
Iteration  12: 130008.659 ops/s
Iteration  13: 134363.117 ops/s
Iteration  14: 130313.539 ops/s
Iteration  15: 129415.226 ops/s
Iteration  16: 140462.129 ops/s
Iteration  17: 129497.888 ops/s
Iteration  18: 130470.634 ops/s
Iteration  19: 135654.538 ops/s
Iteration  20: 132731.442 ops/s
Iteration  21: 136914.129 ops/s
Iteration  22: 136176.303 ops/s
Iteration  23: 130916.712 ops/s
Iteration  24: 138480.301 ops/s
Iteration  25: 129773.072 ops/s
Iteration  26: 135034.324 ops/s
Iteration  27: 130736.403 ops/s
Iteration  28: 129530.213 ops/s
Iteration  29: 134498.104 ops/s
Iteration  30: 132232.936 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_884._Benchmark.benchmark_Cluster_884":
  132866.088 ±(99.9%) 2195.245 ops/s [Average]
  (min, avg, max) = (127584.740, 132866.088, 140462.129), stdev = 3285.739
  CI (99.9%): [130670.843, 135061.333] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_884._Benchmark.benchmark_Cluster_884  thrpt   30  132866.088 ± 2195.245  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_885._Benchmark.benchmark_Cluster_885$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_885._Benchmark.benchmark_Cluster_885

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1696.624 ops/s
# Warmup Iteration   2: 12699.541 ops/s
# Warmup Iteration   3: 25467.913 ops/s
# Warmup Iteration   4: 39741.890 ops/s
# Warmup Iteration   5: 47112.321 ops/s
# Warmup Iteration   6: 71355.670 ops/s
# Warmup Iteration   7: 104606.118 ops/s
# Warmup Iteration   8: 99093.103 ops/s
# Warmup Iteration   9: 104276.688 ops/s
# Warmup Iteration  10: 102711.665 ops/s
# Warmup Iteration  11: 99482.790 ops/s
# Warmup Iteration  12: 102047.234 ops/s
# Warmup Iteration  13: 103693.898 ops/s
# Warmup Iteration  14: 103482.033 ops/s
# Warmup Iteration  15: 98379.073 ops/s
# Warmup Iteration  16: 102537.762 ops/s
# Warmup Iteration  17: 106700.621 ops/s
# Warmup Iteration  18: 103304.522 ops/s
# Warmup Iteration  19: 105713.898 ops/s
# Warmup Iteration  20: 102901.265 ops/s
# Warmup Iteration  21: 108622.428 ops/s
# Warmup Iteration  22: 105081.114 ops/s
# Warmup Iteration  23: 107409.812 ops/s
# Warmup Iteration  24: 100796.329 ops/s
# Warmup Iteration  25: 99239.182 ops/s
# Warmup Iteration  26: 108194.189 ops/s
# Warmup Iteration  27: 110792.259 ops/s
# Warmup Iteration  28: 109190.973 ops/s
# Warmup Iteration  29: 104419.294 ops/s
# Warmup Iteration  30: 109112.903 ops/s
Iteration   1: 103601.725 ops/s
Iteration   2: 109195.375 ops/s
Iteration   3: 104071.430 ops/s
Iteration   4: 105195.638 ops/s
Iteration   5: 108495.579 ops/s
Iteration   6: 105017.263 ops/s
Iteration   7: 108099.342 ops/s
Iteration   8: 103688.925 ops/s
Iteration   9: 110110.084 ops/s
Iteration  10: 105885.538 ops/s
Iteration  11: 105406.519 ops/s
Iteration  12: 108746.098 ops/s
Iteration  13: 106231.083 ops/s
Iteration  14: 103564.668 ops/s
Iteration  15: 106490.570 ops/s
Iteration  16: 103121.196 ops/s
Iteration  17: 107706.774 ops/s
Iteration  18: 105411.587 ops/s
Iteration  19: 107274.431 ops/s
Iteration  20: 108654.784 ops/s
Iteration  21: 103582.962 ops/s
Iteration  22: 109758.330 ops/s
Iteration  23: 106204.736 ops/s
Iteration  24: 110575.811 ops/s
Iteration  25: 103333.493 ops/s
Iteration  26: 105540.548 ops/s
Iteration  27: 109679.606 ops/s
Iteration  28: 102823.437 ops/s
Iteration  29: 105742.071 ops/s
Iteration  30: 102398.852 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_885._Benchmark.benchmark_Cluster_885":
  106186.949 ±(99.9%) 1628.986 ops/s [Average]
  (min, avg, max) = (102398.852, 106186.949, 110575.811), stdev = 2438.189
  CI (99.9%): [104557.963, 107815.934] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_885._Benchmark.benchmark_Cluster_885  thrpt   30  106186.949 ± 1628.986  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_886._Benchmark.benchmark_Cluster_886$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_886._Benchmark.benchmark_Cluster_886

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7262.411 ops/s
# Warmup Iteration   2: 25752.080 ops/s
# Warmup Iteration   3: 25308.898 ops/s
# Warmup Iteration   4: 34107.394 ops/s
# Warmup Iteration   5: 48282.139 ops/s
# Warmup Iteration   6: 88664.496 ops/s
# Warmup Iteration   7: 87676.989 ops/s
# Warmup Iteration   8: 99539.044 ops/s
# Warmup Iteration   9: 100639.850 ops/s
# Warmup Iteration  10: 104100.094 ops/s
# Warmup Iteration  11: 100597.960 ops/s
# Warmup Iteration  12: 102956.328 ops/s
# Warmup Iteration  13: 100018.601 ops/s
# Warmup Iteration  14: 100600.638 ops/s
# Warmup Iteration  15: 102059.548 ops/s
# Warmup Iteration  16: 100105.189 ops/s
# Warmup Iteration  17: 104213.906 ops/s
# Warmup Iteration  18: 105821.328 ops/s
# Warmup Iteration  19: 106346.929 ops/s
# Warmup Iteration  20: 104028.771 ops/s
# Warmup Iteration  21: 102575.216 ops/s
# Warmup Iteration  22: 109071.410 ops/s
# Warmup Iteration  23: 105790.578 ops/s
# Warmup Iteration  24: 102749.671 ops/s
# Warmup Iteration  25: 103872.625 ops/s
# Warmup Iteration  26: 100795.529 ops/s
# Warmup Iteration  27: 101694.981 ops/s
# Warmup Iteration  28: 109889.493 ops/s
# Warmup Iteration  29: 105579.579 ops/s
# Warmup Iteration  30: 102561.889 ops/s
Iteration   1: 108198.127 ops/s
Iteration   2: 100902.944 ops/s
Iteration   3: 106175.544 ops/s
Iteration   4: 98781.790 ops/s
Iteration   5: 98208.206 ops/s
Iteration   6: 108159.271 ops/s
Iteration   7: 103311.068 ops/s
Iteration   8: 105464.924 ops/s
Iteration   9: 110602.107 ops/s
Iteration  10: 102612.172 ops/s
Iteration  11: 105431.862 ops/s
Iteration  12: 101307.187 ops/s
Iteration  13: 107244.968 ops/s
Iteration  14: 107064.264 ops/s
Iteration  15: 99525.939 ops/s
Iteration  16: 104278.583 ops/s
Iteration  17: 109670.993 ops/s
Iteration  18: 102067.916 ops/s
Iteration  19: 105413.461 ops/s
Iteration  20: 104992.457 ops/s
Iteration  21: 107977.547 ops/s
Iteration  22: 102439.170 ops/s
Iteration  23: 105741.462 ops/s
Iteration  24: 106334.660 ops/s
Iteration  25: 104953.377 ops/s
Iteration  26: 109039.967 ops/s
Iteration  27: 101534.607 ops/s
Iteration  28: 108885.919 ops/s
Iteration  29: 105306.442 ops/s
Iteration  30: 102422.364 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_886._Benchmark.benchmark_Cluster_886":
  104801.643 ±(99.9%) 2199.380 ops/s [Average]
  (min, avg, max) = (98208.206, 104801.643, 110602.107), stdev = 3291.929
  CI (99.9%): [102602.263, 107001.024] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_886._Benchmark.benchmark_Cluster_886  thrpt   30  104801.643 ± 2199.380  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_887._Benchmark.benchmark_Cluster_887$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_887._Benchmark.benchmark_Cluster_887

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 83731.128 ops/s
# Warmup Iteration   2: 153962.470 ops/s
# Warmup Iteration   3: 161351.407 ops/s
# Warmup Iteration   4: 165481.736 ops/s
# Warmup Iteration   5: 161003.705 ops/s
# Warmup Iteration   6: 159956.087 ops/s
# Warmup Iteration   7: 168283.766 ops/s
# Warmup Iteration   8: 159312.215 ops/s
# Warmup Iteration   9: 160353.705 ops/s
# Warmup Iteration  10: 157358.995 ops/s
# Warmup Iteration  11: 164934.762 ops/s
# Warmup Iteration  12: 170434.979 ops/s
# Warmup Iteration  13: 162228.727 ops/s
# Warmup Iteration  14: 172192.668 ops/s
# Warmup Iteration  15: 166875.004 ops/s
# Warmup Iteration  16: 164455.250 ops/s
# Warmup Iteration  17: 173947.284 ops/s
# Warmup Iteration  18: 173398.884 ops/s
# Warmup Iteration  19: 181485.364 ops/s
# Warmup Iteration  20: 183309.484 ops/s
# Warmup Iteration  21: 172270.385 ops/s
# Warmup Iteration  22: 179191.110 ops/s
# Warmup Iteration  23: 174306.388 ops/s
# Warmup Iteration  24: 172612.633 ops/s
# Warmup Iteration  25: 177062.419 ops/s
# Warmup Iteration  26: 176429.319 ops/s
# Warmup Iteration  27: 180366.304 ops/s
# Warmup Iteration  28: 181594.840 ops/s
# Warmup Iteration  29: 184579.025 ops/s
# Warmup Iteration  30: 169014.839 ops/s
Iteration   1: 179531.276 ops/s
Iteration   2: 175286.949 ops/s
Iteration   3: 172978.117 ops/s
Iteration   4: 180459.235 ops/s
Iteration   5: 173388.863 ops/s
Iteration   6: 175086.093 ops/s
Iteration   7: 171103.709 ops/s
Iteration   8: 183815.181 ops/s
Iteration   9: 179613.751 ops/s
Iteration  10: 171705.452 ops/s
Iteration  11: 172016.767 ops/s
Iteration  12: 175411.977 ops/s
Iteration  13: 180955.663 ops/s
Iteration  14: 174138.469 ops/s
Iteration  15: 170164.367 ops/s
Iteration  16: 180692.343 ops/s
Iteration  17: 169007.828 ops/s
Iteration  18: 177531.156 ops/s
Iteration  19: 181355.807 ops/s
Iteration  20: 171231.244 ops/s
Iteration  21: 179222.342 ops/s
Iteration  22: 167821.706 ops/s
Iteration  23: 181768.804 ops/s
Iteration  24: 171182.700 ops/s
Iteration  25: 178563.703 ops/s
Iteration  26: 170516.239 ops/s
Iteration  27: 180667.685 ops/s
Iteration  28: 181920.129 ops/s
Iteration  29: 172446.621 ops/s
Iteration  30: 175336.237 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_887._Benchmark.benchmark_Cluster_887":
  175830.680 ±(99.9%) 3060.698 ops/s [Average]
  (min, avg, max) = (167821.706, 175830.680, 183815.181), stdev = 4581.109
  CI (99.9%): [172769.982, 178891.378] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_887._Benchmark.benchmark_Cluster_887  thrpt   30  175830.680 ± 3060.698  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_888._Benchmark.benchmark_Cluster_888$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_888._Benchmark.benchmark_Cluster_888

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2606.295 ops/s
# Warmup Iteration   2: 9051.538 ops/s
# Warmup Iteration   3: 24946.750 ops/s
# Warmup Iteration   4: 36600.192 ops/s
# Warmup Iteration   5: 41079.871 ops/s
# Warmup Iteration   6: 31910.734 ops/s
# Warmup Iteration   7: 79068.283 ops/s
# Warmup Iteration   8: 96567.455 ops/s
# Warmup Iteration   9: 95444.624 ops/s
# Warmup Iteration  10: 105575.384 ops/s
# Warmup Iteration  11: 104643.036 ops/s
# Warmup Iteration  12: 109720.526 ops/s
# Warmup Iteration  13: 102724.164 ops/s
# Warmup Iteration  14: 104930.641 ops/s
# Warmup Iteration  15: 108634.347 ops/s
# Warmup Iteration  16: 104339.362 ops/s
# Warmup Iteration  17: 112143.082 ops/s
# Warmup Iteration  18: 108551.770 ops/s
# Warmup Iteration  19: 106973.557 ops/s
# Warmup Iteration  20: 111954.514 ops/s
# Warmup Iteration  21: 112748.427 ops/s
# Warmup Iteration  22: 105902.186 ops/s
# Warmup Iteration  23: 111334.740 ops/s
# Warmup Iteration  24: 110771.909 ops/s
# Warmup Iteration  25: 110213.531 ops/s
# Warmup Iteration  26: 105581.104 ops/s
# Warmup Iteration  27: 112120.783 ops/s
# Warmup Iteration  28: 105995.820 ops/s
# Warmup Iteration  29: 107976.172 ops/s
# Warmup Iteration  30: 113299.049 ops/s
Iteration   1: 108516.041 ops/s
Iteration   2: 113422.610 ops/s
Iteration   3: 108162.069 ops/s
Iteration   4: 108982.039 ops/s
Iteration   5: 111655.573 ops/s
Iteration   6: 109764.508 ops/s
Iteration   7: 107961.228 ops/s
Iteration   8: 114714.065 ops/s
Iteration   9: 107171.806 ops/s
Iteration  10: 111914.111 ops/s
Iteration  11: 108149.782 ops/s
Iteration  12: 113125.425 ops/s
Iteration  13: 113805.720 ops/s
Iteration  14: 107053.413 ops/s
Iteration  15: 107139.756 ops/s
Iteration  16: 110052.185 ops/s
Iteration  17: 109090.125 ops/s
Iteration  18: 105908.963 ops/s
Iteration  19: 109030.307 ops/s
Iteration  20: 106935.707 ops/s
Iteration  21: 110098.894 ops/s
Iteration  22: 104677.704 ops/s
Iteration  23: 108460.788 ops/s
Iteration  24: 108279.736 ops/s
Iteration  25: 110025.701 ops/s
Iteration  26: 111123.520 ops/s
Iteration  27: 106838.793 ops/s
Iteration  28: 108857.227 ops/s
Iteration  29: 112189.318 ops/s
Iteration  30: 108672.693 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_888._Benchmark.benchmark_Cluster_888":
  109392.660 ±(99.9%) 1633.337 ops/s [Average]
  (min, avg, max) = (104677.704, 109392.660, 114714.065), stdev = 2444.703
  CI (99.9%): [107759.323, 111025.998] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_888._Benchmark.benchmark_Cluster_888  thrpt   30  109392.660 ± 1633.337  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_889._Benchmark.benchmark_Cluster_889$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_889._Benchmark.benchmark_Cluster_889

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2991.992 ops/s
# Warmup Iteration   2: 24079.009 ops/s
# Warmup Iteration   3: 28579.863 ops/s
# Warmup Iteration   4: 33887.573 ops/s
# Warmup Iteration   5: 27812.834 ops/s
# Warmup Iteration   6: 26979.959 ops/s
# Warmup Iteration   7: 41952.426 ops/s
# Warmup Iteration   8: 50040.295 ops/s
# Warmup Iteration   9: 49547.257 ops/s
# Warmup Iteration  10: 99986.054 ops/s
# Warmup Iteration  11: 106501.194 ops/s
# Warmup Iteration  12: 103065.934 ops/s
# Warmup Iteration  13: 99030.996 ops/s
# Warmup Iteration  14: 99625.420 ops/s
# Warmup Iteration  15: 100544.299 ops/s
# Warmup Iteration  16: 108103.665 ops/s
# Warmup Iteration  17: 107121.849 ops/s
# Warmup Iteration  18: 107662.966 ops/s
# Warmup Iteration  19: 103433.375 ops/s
# Warmup Iteration  20: 98725.117 ops/s
# Warmup Iteration  21: 112343.654 ops/s
# Warmup Iteration  22: 105496.239 ops/s
# Warmup Iteration  23: 111247.666 ops/s
# Warmup Iteration  24: 107121.524 ops/s
# Warmup Iteration  25: 110961.880 ops/s
# Warmup Iteration  26: 111694.366 ops/s
# Warmup Iteration  27: 106260.921 ops/s
# Warmup Iteration  28: 109320.561 ops/s
# Warmup Iteration  29: 104389.894 ops/s
# Warmup Iteration  30: 109352.951 ops/s
Iteration   1: 108536.130 ops/s
Iteration   2: 108424.351 ops/s
Iteration   3: 109243.974 ops/s
Iteration   4: 110613.732 ops/s
Iteration   5: 106687.249 ops/s
Iteration   6: 111428.834 ops/s
Iteration   7: 109184.222 ops/s
Iteration   8: 110850.304 ops/s
Iteration   9: 105948.808 ops/s
Iteration  10: 109771.455 ops/s
Iteration  11: 110927.966 ops/s
Iteration  12: 108628.107 ops/s
Iteration  13: 111730.716 ops/s
Iteration  14: 113066.336 ops/s
Iteration  15: 109247.707 ops/s
Iteration  16: 106761.045 ops/s
Iteration  17: 109694.572 ops/s
Iteration  18: 106291.738 ops/s
Iteration  19: 113175.540 ops/s
Iteration  20: 107316.302 ops/s
Iteration  21: 108355.775 ops/s
Iteration  22: 112784.979 ops/s
Iteration  23: 114689.525 ops/s
Iteration  24: 105176.886 ops/s
Iteration  25: 115593.082 ops/s
Iteration  26: 105694.609 ops/s
Iteration  27: 95208.307 ops/s
Iteration  28: 97247.491 ops/s
Iteration  29: 111026.602 ops/s
Iteration  30: 108287.624 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_889._Benchmark.benchmark_Cluster_889":
  108719.799 ±(99.9%) 2871.098 ops/s [Average]
  (min, avg, max) = (95208.307, 108719.799, 115593.082), stdev = 4297.325
  CI (99.9%): [105848.700, 111590.897] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_889._Benchmark.benchmark_Cluster_889  thrpt   30  108719.799 ± 2871.098  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_89._Benchmark.benchmark_Cluster_89$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_89._Benchmark.benchmark_Cluster_89

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2992.017 ops/s
# Warmup Iteration   2: 28001.792 ops/s
# Warmup Iteration   3: 72236.837 ops/s
# Warmup Iteration   4: 73262.930 ops/s
# Warmup Iteration   5: 77511.178 ops/s
# Warmup Iteration   6: 96046.044 ops/s
# Warmup Iteration   7: 94383.493 ops/s
# Warmup Iteration   8: 89403.515 ops/s
# Warmup Iteration   9: 95848.048 ops/s
# Warmup Iteration  10: 91077.684 ops/s
# Warmup Iteration  11: 91499.793 ops/s
# Warmup Iteration  12: 93232.956 ops/s
# Warmup Iteration  13: 91817.929 ops/s
# Warmup Iteration  14: 94758.991 ops/s
# Warmup Iteration  15: 90678.805 ops/s
# Warmup Iteration  16: 89491.267 ops/s
# Warmup Iteration  17: 102259.607 ops/s
# Warmup Iteration  18: 98832.155 ops/s
# Warmup Iteration  19: 99655.680 ops/s
# Warmup Iteration  20: 100816.588 ops/s
# Warmup Iteration  21: 98522.334 ops/s
# Warmup Iteration  22: 101776.710 ops/s
# Warmup Iteration  23: 100102.493 ops/s
# Warmup Iteration  24: 98299.744 ops/s
# Warmup Iteration  25: 96546.161 ops/s
# Warmup Iteration  26: 98620.375 ops/s
# Warmup Iteration  27: 100840.579 ops/s
# Warmup Iteration  28: 98997.157 ops/s
# Warmup Iteration  29: 101525.001 ops/s
# Warmup Iteration  30: 98439.285 ops/s
Iteration   1: 98879.243 ops/s
Iteration   2: 103255.817 ops/s
Iteration   3: 96373.112 ops/s
Iteration   4: 104012.819 ops/s
Iteration   5: 95290.241 ops/s
Iteration   6: 99944.000 ops/s
Iteration   7: 103960.640 ops/s
Iteration   8: 98490.944 ops/s
Iteration   9: 100646.708 ops/s
Iteration  10: 98438.642 ops/s
Iteration  11: 102319.587 ops/s
Iteration  12: 98759.223 ops/s
Iteration  13: 99356.860 ops/s
Iteration  14: 100026.846 ops/s
Iteration  15: 100122.124 ops/s
Iteration  16: 97854.312 ops/s
Iteration  17: 100919.895 ops/s
Iteration  18: 99551.815 ops/s
Iteration  19: 94112.877 ops/s
Iteration  20: 103300.960 ops/s
Iteration  21: 101902.756 ops/s
Iteration  22: 98500.377 ops/s
Iteration  23: 101130.382 ops/s
Iteration  24: 96613.978 ops/s
Iteration  25: 103430.832 ops/s
Iteration  26: 97773.573 ops/s
Iteration  27: 99729.229 ops/s
Iteration  28: 103124.941 ops/s
Iteration  29: 98373.375 ops/s
Iteration  30: 98259.445 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_89._Benchmark.benchmark_Cluster_89":
  99815.185 ±(99.9%) 1721.349 ops/s [Average]
  (min, avg, max) = (94112.877, 99815.185, 104012.819), stdev = 2576.435
  CI (99.9%): [98093.836, 101536.534] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_89._Benchmark.benchmark_Cluster_89  thrpt   30  99815.185 ± 1721.349  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_890._Benchmark.benchmark_Cluster_890$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_890._Benchmark.benchmark_Cluster_890

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5497.787 ops/s
# Warmup Iteration   2: 21232.417 ops/s
# Warmup Iteration   3: 51565.152 ops/s
# Warmup Iteration   4: 84497.903 ops/s
# Warmup Iteration   5: 91639.331 ops/s
# Warmup Iteration   6: 92097.252 ops/s
# Warmup Iteration   7: 102457.125 ops/s
# Warmup Iteration   8: 98656.885 ops/s
# Warmup Iteration   9: 102257.331 ops/s
# Warmup Iteration  10: 99986.510 ops/s
# Warmup Iteration  11: 102740.238 ops/s
# Warmup Iteration  12: 98014.775 ops/s
# Warmup Iteration  13: 104522.579 ops/s
# Warmup Iteration  14: 104342.151 ops/s
# Warmup Iteration  15: 97347.110 ops/s
# Warmup Iteration  16: 103922.808 ops/s
# Warmup Iteration  17: 102188.712 ops/s
# Warmup Iteration  18: 104815.346 ops/s
# Warmup Iteration  19: 105310.283 ops/s
# Warmup Iteration  20: 101785.507 ops/s
# Warmup Iteration  21: 107475.436 ops/s
# Warmup Iteration  22: 102205.489 ops/s
# Warmup Iteration  23: 105279.922 ops/s
# Warmup Iteration  24: 104539.363 ops/s
# Warmup Iteration  25: 102952.852 ops/s
# Warmup Iteration  26: 106332.767 ops/s
# Warmup Iteration  27: 104137.184 ops/s
# Warmup Iteration  28: 103330.268 ops/s
# Warmup Iteration  29: 103878.703 ops/s
# Warmup Iteration  30: 106745.922 ops/s
Iteration   1: 103003.374 ops/s
Iteration   2: 107878.817 ops/s
Iteration   3: 104378.014 ops/s
Iteration   4: 103432.028 ops/s
Iteration   5: 104088.017 ops/s
Iteration   6: 104332.112 ops/s
Iteration   7: 105410.194 ops/s
Iteration   8: 108270.116 ops/s
Iteration   9: 102918.667 ops/s
Iteration  10: 105305.749 ops/s
Iteration  11: 103102.977 ops/s
Iteration  12: 106359.477 ops/s
Iteration  13: 104342.859 ops/s
Iteration  14: 102809.953 ops/s
Iteration  15: 102293.905 ops/s
Iteration  16: 106441.982 ops/s
Iteration  17: 101561.405 ops/s
Iteration  18: 104547.313 ops/s
Iteration  19: 104340.376 ops/s
Iteration  20: 106435.155 ops/s
Iteration  21: 100496.877 ops/s
Iteration  22: 86435.805 ops/s
Iteration  23: 104333.381 ops/s
Iteration  24: 103707.226 ops/s
Iteration  25: 107720.900 ops/s
Iteration  26: 101859.920 ops/s
Iteration  27: 103310.297 ops/s
Iteration  28: 100281.785 ops/s
Iteration  29: 112735.371 ops/s
Iteration  30: 107960.879 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_890._Benchmark.benchmark_Cluster_890":
  104003.164 ±(99.9%) 2814.074 ops/s [Average]
  (min, avg, max) = (86435.805, 104003.164, 112735.371), stdev = 4211.974
  CI (99.9%): [101189.090, 106817.239] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_890._Benchmark.benchmark_Cluster_890  thrpt   30  104003.164 ± 2814.074  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_891._Benchmark.benchmark_Cluster_891$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_891._Benchmark.benchmark_Cluster_891

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.742 ops/s
# Warmup Iteration   2: 10087.518 ops/s
# Warmup Iteration   3: 52245.290 ops/s
# Warmup Iteration   4: 37102.993 ops/s
# Warmup Iteration   5: 49053.834 ops/s
# Warmup Iteration   6: 105770.323 ops/s
# Warmup Iteration   7: 109833.127 ops/s
# Warmup Iteration   8: 101017.887 ops/s
# Warmup Iteration   9: 116146.708 ops/s
# Warmup Iteration  10: 121054.963 ops/s
# Warmup Iteration  11: 112522.406 ops/s
# Warmup Iteration  12: 110942.265 ops/s
# Warmup Iteration  13: 110957.059 ops/s
# Warmup Iteration  14: 130741.676 ops/s
# Warmup Iteration  15: 110614.511 ops/s
# Warmup Iteration  16: 112409.864 ops/s
# Warmup Iteration  17: 106961.528 ops/s
# Warmup Iteration  18: 110933.102 ops/s
# Warmup Iteration  19: 108980.431 ops/s
# Warmup Iteration  20: 112374.899 ops/s
# Warmup Iteration  21: 108712.183 ops/s
# Warmup Iteration  22: 108438.322 ops/s
# Warmup Iteration  23: 113974.741 ops/s
# Warmup Iteration  24: 109598.617 ops/s
# Warmup Iteration  25: 106316.834 ops/s
# Warmup Iteration  26: 114487.833 ops/s
# Warmup Iteration  27: 116942.543 ops/s
# Warmup Iteration  28: 105624.162 ops/s
# Warmup Iteration  29: 115210.877 ops/s
# Warmup Iteration  30: 112797.461 ops/s
Iteration   1: 109040.575 ops/s
Iteration   2: 110749.647 ops/s
Iteration   3: 112451.817 ops/s
Iteration   4: 109012.136 ops/s
Iteration   5: 110018.208 ops/s
Iteration   6: 113815.597 ops/s
Iteration   7: 106664.139 ops/s
Iteration   8: 113084.944 ops/s
Iteration   9: 110363.191 ops/s
Iteration  10: 112519.846 ops/s
Iteration  11: 110181.501 ops/s
Iteration  12: 111261.901 ops/s
Iteration  13: 114579.037 ops/s
Iteration  14: 109957.087 ops/s
Iteration  15: 109784.431 ops/s
Iteration  16: 114693.425 ops/s
Iteration  17: 109890.923 ops/s
Iteration  18: 109100.186 ops/s
Iteration  19: 114808.605 ops/s
Iteration  20: 110052.349 ops/s
Iteration  21: 110438.948 ops/s
Iteration  22: 115537.314 ops/s
Iteration  23: 109626.580 ops/s
Iteration  24: 112315.473 ops/s
Iteration  25: 109627.169 ops/s
Iteration  26: 111538.989 ops/s
Iteration  27: 111239.245 ops/s
Iteration  28: 110482.905 ops/s
Iteration  29: 109527.670 ops/s
Iteration  30: 110412.339 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_891._Benchmark.benchmark_Cluster_891":
  111092.539 ±(99.9%) 1381.464 ops/s [Average]
  (min, avg, max) = (106664.139, 111092.539, 115537.314), stdev = 2067.710
  CI (99.9%): [109711.075, 112474.003] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_891._Benchmark.benchmark_Cluster_891  thrpt   30  111092.539 ± 1381.464  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_892._Benchmark.benchmark_Cluster_892$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_892._Benchmark.benchmark_Cluster_892

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1383.912 ops/s
# Warmup Iteration   2: 9532.371 ops/s
# Warmup Iteration   3: 21333.468 ops/s
# Warmup Iteration   4: 26468.658 ops/s
# Warmup Iteration   5: 31504.447 ops/s
# Warmup Iteration   6: 36039.085 ops/s
# Warmup Iteration   7: 43208.898 ops/s
# Warmup Iteration   8: 71543.092 ops/s
# Warmup Iteration   9: 80080.784 ops/s
# Warmup Iteration  10: 81611.357 ops/s
# Warmup Iteration  11: 83217.624 ops/s
# Warmup Iteration  12: 90848.139 ops/s
# Warmup Iteration  13: 83152.799 ops/s
# Warmup Iteration  14: 83750.111 ops/s
# Warmup Iteration  15: 87593.633 ops/s
# Warmup Iteration  16: 85800.286 ops/s
# Warmup Iteration  17: 85863.801 ops/s
# Warmup Iteration  18: 89905.750 ops/s
# Warmup Iteration  19: 87349.068 ops/s
# Warmup Iteration  20: 87291.405 ops/s
# Warmup Iteration  21: 88589.312 ops/s
# Warmup Iteration  22: 85828.925 ops/s
# Warmup Iteration  23: 85756.418 ops/s
# Warmup Iteration  24: 85559.942 ops/s
# Warmup Iteration  25: 87990.818 ops/s
# Warmup Iteration  26: 87776.006 ops/s
# Warmup Iteration  27: 79866.619 ops/s
# Warmup Iteration  28: 87750.869 ops/s
# Warmup Iteration  29: 90774.429 ops/s
# Warmup Iteration  30: 89469.267 ops/s
Iteration   1: 88475.966 ops/s
Iteration   2: 88019.168 ops/s
Iteration   3: 89862.657 ops/s
Iteration   4: 91508.794 ops/s
Iteration   5: 85183.518 ops/s
Iteration   6: 89505.695 ops/s
Iteration   7: 87010.653 ops/s
Iteration   8: 89159.675 ops/s
Iteration   9: 88780.218 ops/s
Iteration  10: 87653.215 ops/s
Iteration  11: 88661.879 ops/s
Iteration  12: 87920.548 ops/s
Iteration  13: 87444.969 ops/s
Iteration  14: 88385.429 ops/s
Iteration  15: 79355.263 ops/s
Iteration  16: 72256.404 ops/s
Iteration  17: 86402.984 ops/s
Iteration  18: 91486.608 ops/s
Iteration  19: 86295.261 ops/s
Iteration  20: 88766.282 ops/s
Iteration  21: 86249.947 ops/s
Iteration  22: 90564.783 ops/s
Iteration  23: 88561.046 ops/s
Iteration  24: 85922.339 ops/s
Iteration  25: 88221.235 ops/s
Iteration  26: 87569.549 ops/s
Iteration  27: 89700.825 ops/s
Iteration  28: 87847.366 ops/s
Iteration  29: 90381.273 ops/s
Iteration  30: 86598.586 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_892._Benchmark.benchmark_Cluster_892":
  87458.405 ±(99.9%) 2441.320 ops/s [Average]
  (min, avg, max) = (72256.404, 87458.405, 91508.794), stdev = 3654.054
  CI (99.9%): [85017.084, 89899.725] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_892._Benchmark.benchmark_Cluster_892  thrpt   30  87458.405 ± 2441.320  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_893._Benchmark.benchmark_Cluster_893$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_893._Benchmark.benchmark_Cluster_893

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 707.743 ops/s
# Warmup Iteration   2: 3791.026 ops/s
# Warmup Iteration   3: 12029.893 ops/s
# Warmup Iteration   4: 15662.937 ops/s
# Warmup Iteration   5: 22574.326 ops/s
# Warmup Iteration   6: 28583.201 ops/s
# Warmup Iteration   7: 38242.630 ops/s
# Warmup Iteration   8: 43386.345 ops/s
# Warmup Iteration   9: 42577.004 ops/s
# Warmup Iteration  10: 48038.257 ops/s
# Warmup Iteration  11: 42212.753 ops/s
# Warmup Iteration  12: 43915.221 ops/s
# Warmup Iteration  13: 47788.558 ops/s
# Warmup Iteration  14: 40210.894 ops/s
# Warmup Iteration  15: 41389.883 ops/s
# Warmup Iteration  16: 44843.648 ops/s
# Warmup Iteration  17: 47740.845 ops/s
# Warmup Iteration  18: 48118.148 ops/s
# Warmup Iteration  19: 48680.227 ops/s
# Warmup Iteration  20: 44879.383 ops/s
# Warmup Iteration  21: 47885.573 ops/s
# Warmup Iteration  22: 43304.027 ops/s
# Warmup Iteration  23: 47251.935 ops/s
# Warmup Iteration  24: 46986.676 ops/s
# Warmup Iteration  25: 45751.448 ops/s
# Warmup Iteration  26: 43548.305 ops/s
# Warmup Iteration  27: 44176.408 ops/s
# Warmup Iteration  28: 48692.261 ops/s
# Warmup Iteration  29: 46607.199 ops/s
# Warmup Iteration  30: 44214.980 ops/s
Iteration   1: 47033.146 ops/s
Iteration   2: 46520.280 ops/s
Iteration   3: 45018.645 ops/s
Iteration   4: 47792.088 ops/s
Iteration   5: 49771.693 ops/s
Iteration   6: 45806.298 ops/s
Iteration   7: 42872.344 ops/s
Iteration   8: 44007.769 ops/s
Iteration   9: 48319.137 ops/s
Iteration  10: 44512.842 ops/s
Iteration  11: 44974.097 ops/s
Iteration  12: 44999.337 ops/s
Iteration  13: 43436.475 ops/s
Iteration  14: 47805.624 ops/s
Iteration  15: 45124.121 ops/s
Iteration  16: 45912.536 ops/s
Iteration  17: 47945.971 ops/s
Iteration  18: 47570.940 ops/s
Iteration  19: 45777.080 ops/s
Iteration  20: 43629.328 ops/s
Iteration  21: 44559.408 ops/s
Iteration  22: 44870.185 ops/s
Iteration  23: 46973.839 ops/s
Iteration  24: 41481.506 ops/s
Iteration  25: 47492.747 ops/s
Iteration  26: 48982.851 ops/s
Iteration  27: 44550.336 ops/s
Iteration  28: 44628.907 ops/s
Iteration  29: 49340.181 ops/s
Iteration  30: 44343.121 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_893._Benchmark.benchmark_Cluster_893":
  45868.428 ±(99.9%) 1352.876 ops/s [Average]
  (min, avg, max) = (41481.506, 45868.428, 49771.693), stdev = 2024.922
  CI (99.9%): [44515.551, 47221.304] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_893._Benchmark.benchmark_Cluster_893  thrpt   30  45868.428 ± 1352.876  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_894._Benchmark.benchmark_Cluster_894$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_894._Benchmark.benchmark_Cluster_894

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2644.702 ops/s
# Warmup Iteration   2: 18049.776 ops/s
# Warmup Iteration   3: 37613.076 ops/s
# Warmup Iteration   4: 52089.217 ops/s
# Warmup Iteration   5: 93544.064 ops/s
# Warmup Iteration   6: 86734.282 ops/s
# Warmup Iteration   7: 106995.557 ops/s
# Warmup Iteration   8: 101520.441 ops/s
# Warmup Iteration   9: 103170.874 ops/s
# Warmup Iteration  10: 110671.713 ops/s
# Warmup Iteration  11: 105014.964 ops/s
# Warmup Iteration  12: 105711.923 ops/s
# Warmup Iteration  13: 101197.827 ops/s
# Warmup Iteration  14: 106472.564 ops/s
# Warmup Iteration  15: 107285.290 ops/s
# Warmup Iteration  16: 101151.464 ops/s
# Warmup Iteration  17: 109824.565 ops/s
# Warmup Iteration  18: 107148.390 ops/s
# Warmup Iteration  19: 111487.062 ops/s
# Warmup Iteration  20: 106123.740 ops/s
# Warmup Iteration  21: 106716.223 ops/s
# Warmup Iteration  22: 113712.388 ops/s
# Warmup Iteration  23: 110463.216 ops/s
# Warmup Iteration  24: 104878.697 ops/s
# Warmup Iteration  25: 111178.557 ops/s
# Warmup Iteration  26: 106394.926 ops/s
# Warmup Iteration  27: 108200.964 ops/s
# Warmup Iteration  28: 106264.621 ops/s
# Warmup Iteration  29: 107312.239 ops/s
# Warmup Iteration  30: 107040.912 ops/s
Iteration   1: 102140.528 ops/s
Iteration   2: 105080.361 ops/s
Iteration   3: 109540.083 ops/s
Iteration   4: 104143.533 ops/s
Iteration   5: 108439.450 ops/s
Iteration   6: 104893.521 ops/s
Iteration   7: 110143.886 ops/s
Iteration   8: 87157.986 ops/s
Iteration   9: 106785.185 ops/s
Iteration  10: 110131.430 ops/s
Iteration  11: 106632.327 ops/s
Iteration  12: 109776.195 ops/s
Iteration  13: 106712.844 ops/s
Iteration  14: 104311.393 ops/s
Iteration  15: 107144.587 ops/s
Iteration  16: 112649.147 ops/s
Iteration  17: 111518.308 ops/s
Iteration  18: 104375.374 ops/s
Iteration  19: 112071.642 ops/s
Iteration  20: 105630.779 ops/s
Iteration  21: 111005.141 ops/s
Iteration  22: 108385.408 ops/s
Iteration  23: 107645.056 ops/s
Iteration  24: 112697.099 ops/s
Iteration  25: 104618.400 ops/s
Iteration  26: 113634.628 ops/s
Iteration  27: 105651.262 ops/s
Iteration  28: 107976.512 ops/s
Iteration  29: 107666.189 ops/s
Iteration  30: 107281.598 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_894._Benchmark.benchmark_Cluster_894":
  107194.662 ±(99.9%) 3203.032 ops/s [Average]
  (min, avg, max) = (87157.986, 107194.662, 113634.628), stdev = 4794.148
  CI (99.9%): [103991.629, 110397.694] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_894._Benchmark.benchmark_Cluster_894  thrpt   30  107194.662 ± 3203.032  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_895._Benchmark.benchmark_Cluster_895$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_895._Benchmark.benchmark_Cluster_895

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11101.248 ops/s
# Warmup Iteration   2: 35416.527 ops/s
# Warmup Iteration   3: 51216.430 ops/s
# Warmup Iteration   4: 102291.837 ops/s
# Warmup Iteration   5: 111011.789 ops/s
# Warmup Iteration   6: 95619.865 ops/s
# Warmup Iteration   7: 123457.902 ops/s
# Warmup Iteration   8: 116190.313 ops/s
# Warmup Iteration   9: 119172.887 ops/s
# Warmup Iteration  10: 115572.366 ops/s
# Warmup Iteration  11: 120451.985 ops/s
# Warmup Iteration  12: 117013.235 ops/s
# Warmup Iteration  13: 119713.033 ops/s
# Warmup Iteration  14: 118885.072 ops/s
# Warmup Iteration  15: 119837.225 ops/s
# Warmup Iteration  16: 121490.435 ops/s
# Warmup Iteration  17: 122704.678 ops/s
# Warmup Iteration  18: 125444.690 ops/s
# Warmup Iteration  19: 121075.433 ops/s
# Warmup Iteration  20: 127897.801 ops/s
# Warmup Iteration  21: 125939.182 ops/s
# Warmup Iteration  22: 117840.995 ops/s
# Warmup Iteration  23: 123706.007 ops/s
# Warmup Iteration  24: 122428.883 ops/s
# Warmup Iteration  25: 123313.303 ops/s
# Warmup Iteration  26: 120315.945 ops/s
# Warmup Iteration  27: 121663.837 ops/s
# Warmup Iteration  28: 121445.397 ops/s
# Warmup Iteration  29: 126633.055 ops/s
# Warmup Iteration  30: 117094.895 ops/s
Iteration   1: 126142.626 ops/s
Iteration   2: 121581.036 ops/s
Iteration   3: 123142.285 ops/s
Iteration   4: 127358.486 ops/s
Iteration   5: 118212.518 ops/s
Iteration   6: 124378.648 ops/s
Iteration   7: 119679.706 ops/s
Iteration   8: 121475.408 ops/s
Iteration   9: 127739.469 ops/s
Iteration  10: 121218.914 ops/s
Iteration  11: 127293.290 ops/s
Iteration  12: 121028.875 ops/s
Iteration  13: 124197.943 ops/s
Iteration  14: 123985.380 ops/s
Iteration  15: 120573.709 ops/s
Iteration  16: 122940.887 ops/s
Iteration  17: 125324.106 ops/s
Iteration  18: 124685.720 ops/s
Iteration  19: 125880.929 ops/s
Iteration  20: 119481.242 ops/s
Iteration  21: 123768.811 ops/s
Iteration  22: 126529.238 ops/s
Iteration  23: 120031.652 ops/s
Iteration  24: 124208.026 ops/s
Iteration  25: 121475.465 ops/s
Iteration  26: 124575.327 ops/s
Iteration  27: 119238.863 ops/s
Iteration  28: 123105.516 ops/s
Iteration  29: 124771.222 ops/s
Iteration  30: 119923.537 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_895._Benchmark.benchmark_Cluster_895":
  123131.628 ±(99.9%) 1791.925 ops/s [Average]
  (min, avg, max) = (118212.518, 123131.628, 127739.469), stdev = 2682.069
  CI (99.9%): [121339.703, 124923.552] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_895._Benchmark.benchmark_Cluster_895  thrpt   30  123131.628 ± 1791.925  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_896._Benchmark.benchmark_Cluster_896$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_896._Benchmark.benchmark_Cluster_896

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7993.986 ops/s
# Warmup Iteration   2: 32381.281 ops/s
# Warmup Iteration   3: 43811.329 ops/s
# Warmup Iteration   4: 62834.441 ops/s
# Warmup Iteration   5: 96986.418 ops/s
# Warmup Iteration   6: 97331.456 ops/s
# Warmup Iteration   7: 99954.244 ops/s
# Warmup Iteration   8: 96008.512 ops/s
# Warmup Iteration   9: 100545.085 ops/s
# Warmup Iteration  10: 95674.576 ops/s
# Warmup Iteration  11: 97830.675 ops/s
# Warmup Iteration  12: 98200.335 ops/s
# Warmup Iteration  13: 96647.072 ops/s
# Warmup Iteration  14: 98452.682 ops/s
# Warmup Iteration  15: 98011.492 ops/s
# Warmup Iteration  16: 93886.483 ops/s
# Warmup Iteration  17: 103818.516 ops/s
# Warmup Iteration  18: 97870.745 ops/s
# Warmup Iteration  19: 105456.748 ops/s
# Warmup Iteration  20: 104357.712 ops/s
# Warmup Iteration  21: 100933.153 ops/s
# Warmup Iteration  22: 106481.368 ops/s
# Warmup Iteration  23: 104049.635 ops/s
# Warmup Iteration  24: 99732.966 ops/s
# Warmup Iteration  25: 101764.023 ops/s
# Warmup Iteration  26: 103330.669 ops/s
# Warmup Iteration  27: 99491.859 ops/s
# Warmup Iteration  28: 103963.870 ops/s
# Warmup Iteration  29: 100773.900 ops/s
# Warmup Iteration  30: 95791.078 ops/s
Iteration   1: 103978.634 ops/s
Iteration   2: 101989.423 ops/s
Iteration   3: 86654.960 ops/s
Iteration   4: 105646.713 ops/s
Iteration   5: 100328.866 ops/s
Iteration   6: 106862.739 ops/s
Iteration   7: 101991.926 ops/s
Iteration   8: 99756.543 ops/s
Iteration   9: 103918.234 ops/s
Iteration  10: 103628.631 ops/s
Iteration  11: 100650.453 ops/s
Iteration  12: 104958.606 ops/s
Iteration  13: 99568.487 ops/s
Iteration  14: 102437.061 ops/s
Iteration  15: 102128.837 ops/s
Iteration  16: 99724.320 ops/s
Iteration  17: 107552.342 ops/s
Iteration  18: 101066.299 ops/s
Iteration  19: 105024.028 ops/s
Iteration  20: 102648.014 ops/s
Iteration  21: 103853.293 ops/s
Iteration  22: 105447.287 ops/s
Iteration  23: 100976.896 ops/s
Iteration  24: 101782.765 ops/s
Iteration  25: 100391.311 ops/s
Iteration  26: 100787.265 ops/s
Iteration  27: 106730.328 ops/s
Iteration  28: 100820.190 ops/s
Iteration  29: 107673.009 ops/s
Iteration  30: 103055.437 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_896._Benchmark.benchmark_Cluster_896":
  102401.097 ±(99.9%) 2561.691 ops/s [Average]
  (min, avg, max) = (86654.960, 102401.097, 107673.009), stdev = 3834.219
  CI (99.9%): [99839.405, 104962.788] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_896._Benchmark.benchmark_Cluster_896  thrpt   30  102401.097 ± 2561.691  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_897._Benchmark.benchmark_Cluster_897$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_897._Benchmark.benchmark_Cluster_897

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6832.975 ops/s
# Warmup Iteration   2: 24105.599 ops/s
# Warmup Iteration   3: 39022.068 ops/s
# Warmup Iteration   4: 34733.165 ops/s
# Warmup Iteration   5: 35852.668 ops/s
# Warmup Iteration   6: 36669.275 ops/s
# Warmup Iteration   7: 98863.931 ops/s
# Warmup Iteration   8: 99474.506 ops/s
# Warmup Iteration   9: 101660.227 ops/s
# Warmup Iteration  10: 103294.018 ops/s
# Warmup Iteration  11: 99260.463 ops/s
# Warmup Iteration  12: 103227.643 ops/s
# Warmup Iteration  13: 94781.157 ops/s
# Warmup Iteration  14: 100199.415 ops/s
# Warmup Iteration  15: 104609.676 ops/s
# Warmup Iteration  16: 98292.680 ops/s
# Warmup Iteration  17: 108680.372 ops/s
# Warmup Iteration  18: 104519.494 ops/s
# Warmup Iteration  19: 106240.061 ops/s
# Warmup Iteration  20: 110428.493 ops/s
# Warmup Iteration  21: 105561.221 ops/s
# Warmup Iteration  22: 106634.439 ops/s
# Warmup Iteration  23: 104674.341 ops/s
# Warmup Iteration  24: 107004.797 ops/s
# Warmup Iteration  25: 104897.278 ops/s
# Warmup Iteration  26: 102343.049 ops/s
# Warmup Iteration  27: 107168.068 ops/s
# Warmup Iteration  28: 101881.831 ops/s
# Warmup Iteration  29: 105334.248 ops/s
# Warmup Iteration  30: 104861.110 ops/s
Iteration   1: 103495.539 ops/s
Iteration   2: 108774.024 ops/s
Iteration   3: 101430.886 ops/s
Iteration   4: 108745.093 ops/s
Iteration   5: 104155.325 ops/s
Iteration   6: 105437.905 ops/s
Iteration   7: 103866.411 ops/s
Iteration   8: 105156.176 ops/s
Iteration   9: 107682.888 ops/s
Iteration  10: 104278.875 ops/s
Iteration  11: 107861.871 ops/s
Iteration  12: 107402.078 ops/s
Iteration  13: 106038.215 ops/s
Iteration  14: 111183.152 ops/s
Iteration  15: 106383.201 ops/s
Iteration  16: 106062.590 ops/s
Iteration  17: 107124.000 ops/s
Iteration  18: 107955.029 ops/s
Iteration  19: 109572.072 ops/s
Iteration  20: 106658.468 ops/s
Iteration  21: 106928.200 ops/s
Iteration  22: 111841.862 ops/s
Iteration  23: 110142.390 ops/s
Iteration  24: 105196.712 ops/s
Iteration  25: 107565.272 ops/s
Iteration  26: 104245.262 ops/s
Iteration  27: 109948.274 ops/s
Iteration  28: 110597.355 ops/s
Iteration  29: 104680.378 ops/s
Iteration  30: 107840.310 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_897._Benchmark.benchmark_Cluster_897":
  106941.660 ±(99.9%) 1671.247 ops/s [Average]
  (min, avg, max) = (101430.886, 106941.660, 111841.862), stdev = 2501.444
  CI (99.9%): [105270.413, 108612.907] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_897._Benchmark.benchmark_Cluster_897  thrpt   30  106941.660 ± 1671.247  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_898._Benchmark.benchmark_Cluster_898$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_898._Benchmark.benchmark_Cluster_898

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10365.740 ops/s
# Warmup Iteration   2: 42520.736 ops/s
# Warmup Iteration   3: 44891.548 ops/s
# Warmup Iteration   4: 82288.459 ops/s
# Warmup Iteration   5: 137735.544 ops/s
# Warmup Iteration   6: 134792.380 ops/s
# Warmup Iteration   7: 128462.837 ops/s
# Warmup Iteration   8: 128266.397 ops/s
# Warmup Iteration   9: 125744.762 ops/s
# Warmup Iteration  10: 136426.280 ops/s
# Warmup Iteration  11: 135195.554 ops/s
# Warmup Iteration  12: 128497.546 ops/s
# Warmup Iteration  13: 132961.654 ops/s
# Warmup Iteration  14: 130160.286 ops/s
# Warmup Iteration  15: 133498.231 ops/s
# Warmup Iteration  16: 125791.711 ops/s
# Warmup Iteration  17: 139840.849 ops/s
# Warmup Iteration  18: 130195.391 ops/s
# Warmup Iteration  19: 135465.248 ops/s
# Warmup Iteration  20: 137655.572 ops/s
# Warmup Iteration  21: 131830.844 ops/s
# Warmup Iteration  22: 141020.633 ops/s
# Warmup Iteration  23: 141944.667 ops/s
# Warmup Iteration  24: 137987.794 ops/s
# Warmup Iteration  25: 137433.460 ops/s
# Warmup Iteration  26: 135410.793 ops/s
# Warmup Iteration  27: 113506.401 ops/s
# Warmup Iteration  28: 136765.429 ops/s
# Warmup Iteration  29: 136691.782 ops/s
# Warmup Iteration  30: 145799.305 ops/s
Iteration   1: 136731.708 ops/s
Iteration   2: 142571.554 ops/s
Iteration   3: 142304.176 ops/s
Iteration   4: 133142.457 ops/s
Iteration   5: 143257.756 ops/s
Iteration   6: 138992.174 ops/s
Iteration   7: 142594.899 ops/s
Iteration   8: 144109.076 ops/s
Iteration   9: 136750.371 ops/s
Iteration  10: 142306.438 ops/s
Iteration  11: 138081.474 ops/s
Iteration  12: 139510.251 ops/s
Iteration  13: 139204.618 ops/s
Iteration  14: 134999.890 ops/s
Iteration  15: 136196.144 ops/s
Iteration  16: 144452.470 ops/s
Iteration  17: 133480.998 ops/s
Iteration  18: 145629.000 ops/s
Iteration  19: 136747.310 ops/s
Iteration  20: 142081.936 ops/s
Iteration  21: 136842.876 ops/s
Iteration  22: 137774.683 ops/s
Iteration  23: 147675.467 ops/s
Iteration  24: 144745.746 ops/s
Iteration  25: 134489.920 ops/s
Iteration  26: 137471.436 ops/s
Iteration  27: 145674.994 ops/s
Iteration  28: 141258.250 ops/s
Iteration  29: 133575.874 ops/s
Iteration  30: 140891.108 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_898._Benchmark.benchmark_Cluster_898":
  139784.835 ±(99.9%) 2721.743 ops/s [Average]
  (min, avg, max) = (133142.457, 139784.835, 147675.467), stdev = 4073.777
  CI (99.9%): [137063.092, 142506.578] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_898._Benchmark.benchmark_Cluster_898  thrpt   30  139784.835 ± 2721.743  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_899._Benchmark.benchmark_Cluster_899$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_899._Benchmark.benchmark_Cluster_899

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11009.938 ops/s
# Warmup Iteration   2: 40101.100 ops/s
# Warmup Iteration   3: 50372.963 ops/s
# Warmup Iteration   4: 59756.234 ops/s
# Warmup Iteration   5: 61641.265 ops/s
# Warmup Iteration   6: 68911.231 ops/s
# Warmup Iteration   7: 52406.610 ops/s
# Warmup Iteration   8: 68557.278 ops/s
# Warmup Iteration   9: 55024.939 ops/s
# Warmup Iteration  10: 61464.900 ops/s
# Warmup Iteration  11: 55207.861 ops/s
# Warmup Iteration  12: 59450.243 ops/s
# Warmup Iteration  13: 58088.229 ops/s
# Warmup Iteration  14: 62491.421 ops/s
# Warmup Iteration  15: 53790.658 ops/s
# Warmup Iteration  16: 59830.022 ops/s
# Warmup Iteration  17: 55249.970 ops/s
# Warmup Iteration  18: 52207.525 ops/s
# Warmup Iteration  19: 59390.951 ops/s
# Warmup Iteration  20: 67270.003 ops/s
# Warmup Iteration  21: 67016.670 ops/s
# Warmup Iteration  22: 62017.835 ops/s
# Warmup Iteration  23: 63339.462 ops/s
# Warmup Iteration  24: 68933.629 ops/s
# Warmup Iteration  25: 66702.952 ops/s
# Warmup Iteration  26: 64297.931 ops/s
# Warmup Iteration  27: 58072.567 ops/s
# Warmup Iteration  28: 64624.173 ops/s
# Warmup Iteration  29: 69003.786 ops/s
# Warmup Iteration  30: 57502.847 ops/s
Iteration   1: 55835.440 ops/s
Iteration   2: 52834.359 ops/s
Iteration   3: 61271.844 ops/s
Iteration   4: 55916.592 ops/s
Iteration   5: 61271.692 ops/s
Iteration   6: 66525.164 ops/s
Iteration   7: 63683.754 ops/s
Iteration   8: 58194.724 ops/s
Iteration   9: 53729.945 ops/s
Iteration  10: 54554.648 ops/s
Iteration  11: 59471.072 ops/s
Iteration  12: 52672.417 ops/s
Iteration  13: 59844.180 ops/s
Iteration  14: 58903.799 ops/s
Iteration  15: 66752.410 ops/s
Iteration  16: 65184.509 ops/s
Iteration  17: 67375.339 ops/s
Iteration  18: 65130.162 ops/s
Iteration  19: 60209.616 ops/s
Iteration  20: 53334.363 ops/s
Iteration  21: 52408.419 ops/s
Iteration  22: 58232.763 ops/s
Iteration  23: 57253.203 ops/s
Iteration  24: 59504.905 ops/s
Iteration  25: 58744.718 ops/s
Iteration  26: 53054.285 ops/s
Iteration  27: 60759.105 ops/s
Iteration  28: 58438.367 ops/s
Iteration  29: 61259.244 ops/s
Iteration  30: 62907.450 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_899._Benchmark.benchmark_Cluster_899":
  59175.283 ±(99.9%) 2990.071 ops/s [Average]
  (min, avg, max) = (52408.419, 59175.283, 67375.339), stdev = 4475.398
  CI (99.9%): [56185.212, 62165.354] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_899._Benchmark.benchmark_Cluster_899  thrpt   30  59175.283 ± 2990.071  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_9._Benchmark.benchmark_Cluster_9$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_9._Benchmark.benchmark_Cluster_9

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 21833.417 ops/s
# Warmup Iteration   2: 52516.090 ops/s
# Warmup Iteration   3: 68955.571 ops/s
# Warmup Iteration   4: 133177.035 ops/s
# Warmup Iteration   5: 145270.342 ops/s
# Warmup Iteration   6: 146901.155 ops/s
# Warmup Iteration   7: 145462.643 ops/s
# Warmup Iteration   8: 140597.472 ops/s
# Warmup Iteration   9: 149824.069 ops/s
# Warmup Iteration  10: 140153.276 ops/s
# Warmup Iteration  11: 142915.343 ops/s
# Warmup Iteration  12: 143609.053 ops/s
# Warmup Iteration  13: 143434.465 ops/s
# Warmup Iteration  14: 143135.466 ops/s
# Warmup Iteration  15: 140052.697 ops/s
# Warmup Iteration  16: 151845.261 ops/s
# Warmup Iteration  17: 155156.940 ops/s
# Warmup Iteration  18: 147035.490 ops/s
# Warmup Iteration  19: 133499.174 ops/s
# Warmup Iteration  20: 134676.328 ops/s
# Warmup Iteration  21: 148931.148 ops/s
# Warmup Iteration  22: 150652.184 ops/s
# Warmup Iteration  23: 150870.944 ops/s
# Warmup Iteration  24: 151618.320 ops/s
# Warmup Iteration  25: 154189.533 ops/s
# Warmup Iteration  26: 149540.142 ops/s
# Warmup Iteration  27: 151395.194 ops/s
# Warmup Iteration  28: 146910.387 ops/s
# Warmup Iteration  29: 149077.485 ops/s
# Warmup Iteration  30: 157009.971 ops/s
Iteration   1: 147310.418 ops/s
Iteration   2: 154100.285 ops/s
Iteration   3: 152245.558 ops/s
Iteration   4: 143666.538 ops/s
Iteration   5: 153436.303 ops/s
Iteration   6: 149749.185 ops/s
Iteration   7: 151870.518 ops/s
Iteration   8: 153133.131 ops/s
Iteration   9: 149945.744 ops/s
Iteration  10: 151862.749 ops/s
Iteration  11: 147464.075 ops/s
Iteration  12: 153430.082 ops/s
Iteration  13: 147866.976 ops/s
Iteration  14: 153044.883 ops/s
Iteration  15: 154537.775 ops/s
Iteration  16: 149781.180 ops/s
Iteration  17: 150992.358 ops/s
Iteration  18: 150236.497 ops/s
Iteration  19: 146673.683 ops/s
Iteration  20: 153234.437 ops/s
Iteration  21: 145266.474 ops/s
Iteration  22: 155442.571 ops/s
Iteration  23: 149555.143 ops/s
Iteration  24: 156533.965 ops/s
Iteration  25: 148661.895 ops/s
Iteration  26: 150787.301 ops/s
Iteration  27: 151303.562 ops/s
Iteration  28: 149699.396 ops/s
Iteration  29: 151345.890 ops/s
Iteration  30: 150245.258 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_9._Benchmark.benchmark_Cluster_9":
  150780.794 ±(99.9%) 1984.213 ops/s [Average]
  (min, avg, max) = (143666.538, 150780.794, 156533.965), stdev = 2969.877
  CI (99.9%): [148796.581, 152765.008] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score      Error  Units
Cluster_9._Benchmark.benchmark_Cluster_9  thrpt   30  150780.794 ± 1984.213  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_90._Benchmark.benchmark_Cluster_90$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_90._Benchmark.benchmark_Cluster_90

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 321.168 ops/s
# Warmup Iteration   2: 3754.601 ops/s
# Warmup Iteration   3: 17045.638 ops/s
# Warmup Iteration   4: 20918.223 ops/s
# Warmup Iteration   5: 22234.109 ops/s
# Warmup Iteration   6: 24479.992 ops/s
# Warmup Iteration   7: 23098.328 ops/s
# Warmup Iteration   8: 33941.029 ops/s
# Warmup Iteration   9: 26388.624 ops/s
# Warmup Iteration  10: 28867.675 ops/s
# Warmup Iteration  11: 28600.464 ops/s
# Warmup Iteration  12: 28541.536 ops/s
# Warmup Iteration  13: 24071.390 ops/s
# Warmup Iteration  14: 33732.938 ops/s
# Warmup Iteration  15: 50064.053 ops/s
# Warmup Iteration  16: 50436.620 ops/s
# Warmup Iteration  17: 70450.212 ops/s
# Warmup Iteration  18: 72176.301 ops/s
# Warmup Iteration  19: 76549.121 ops/s
# Warmup Iteration  20: 75485.507 ops/s
# Warmup Iteration  21: 73485.699 ops/s
# Warmup Iteration  22: 68800.571 ops/s
# Warmup Iteration  23: 76449.518 ops/s
# Warmup Iteration  24: 77406.435 ops/s
# Warmup Iteration  25: 72580.176 ops/s
# Warmup Iteration  26: 75387.752 ops/s
# Warmup Iteration  27: 75078.202 ops/s
# Warmup Iteration  28: 74299.308 ops/s
# Warmup Iteration  29: 71116.378 ops/s
# Warmup Iteration  30: 76545.791 ops/s
Iteration   1: 76055.296 ops/s
Iteration   2: 75584.758 ops/s
Iteration   3: 75201.178 ops/s
Iteration   4: 77973.330 ops/s
Iteration   5: 76142.388 ops/s
Iteration   6: 73437.371 ops/s
Iteration   7: 76090.168 ops/s
Iteration   8: 72795.825 ops/s
Iteration   9: 77966.488 ops/s
Iteration  10: 74073.399 ops/s
Iteration  11: 76862.357 ops/s
Iteration  12: 73362.509 ops/s
Iteration  13: 76848.781 ops/s
Iteration  14: 76583.585 ops/s
Iteration  15: 73341.507 ops/s
Iteration  16: 76465.659 ops/s
Iteration  17: 76701.673 ops/s
Iteration  18: 71930.682 ops/s
Iteration  19: 75599.325 ops/s
Iteration  20: 74949.342 ops/s
Iteration  21: 77220.139 ops/s
Iteration  22: 77277.467 ops/s
Iteration  23: 77169.228 ops/s
Iteration  24: 73615.995 ops/s
Iteration  25: 78675.539 ops/s
Iteration  26: 73981.441 ops/s
Iteration  27: 76248.442 ops/s
Iteration  28: 74051.183 ops/s
Iteration  29: 75231.610 ops/s
Iteration  30: 77180.995 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_90._Benchmark.benchmark_Cluster_90":
  75620.589 ±(99.9%) 1153.480 ops/s [Average]
  (min, avg, max) = (71930.682, 75620.589, 78675.539), stdev = 1726.475
  CI (99.9%): [74467.108, 76774.069] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_90._Benchmark.benchmark_Cluster_90  thrpt   30  75620.589 ± 1153.480  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_900._Benchmark.benchmark_Cluster_900$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_900._Benchmark.benchmark_Cluster_900

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.829 ops/s
# Warmup Iteration   2: 2761.347 ops/s
# Warmup Iteration   3: 6299.846 ops/s
# Warmup Iteration   4: 11360.138 ops/s
# Warmup Iteration   5: 12459.717 ops/s
# Warmup Iteration   6: 30804.106 ops/s
# Warmup Iteration   7: 19584.320 ops/s
# Warmup Iteration   8: 26017.635 ops/s
# Warmup Iteration   9: 30088.124 ops/s
# Warmup Iteration  10: 33901.069 ops/s
# Warmup Iteration  11: 33285.695 ops/s
# Warmup Iteration  12: 33364.783 ops/s
# Warmup Iteration  13: 26065.977 ops/s
# Warmup Iteration  14: 32449.632 ops/s
# Warmup Iteration  15: 35500.760 ops/s
# Warmup Iteration  16: 35912.158 ops/s
# Warmup Iteration  17: 32931.772 ops/s
# Warmup Iteration  18: 35760.352 ops/s
# Warmup Iteration  19: 32562.884 ops/s
# Warmup Iteration  20: 36161.776 ops/s
# Warmup Iteration  21: 33471.074 ops/s
# Warmup Iteration  22: 31886.824 ops/s
# Warmup Iteration  23: 35647.925 ops/s
# Warmup Iteration  24: 33754.476 ops/s
# Warmup Iteration  25: 34083.413 ops/s
# Warmup Iteration  26: 31990.342 ops/s
# Warmup Iteration  27: 34959.441 ops/s
# Warmup Iteration  28: 32464.430 ops/s
# Warmup Iteration  29: 33520.073 ops/s
# Warmup Iteration  30: 34401.847 ops/s
Iteration   1: 36758.241 ops/s
Iteration   2: 34468.268 ops/s
Iteration   3: 31953.989 ops/s
Iteration   4: 35124.211 ops/s
Iteration   5: 31644.361 ops/s
Iteration   6: 33115.876 ops/s
Iteration   7: 33971.563 ops/s
Iteration   8: 33389.845 ops/s
Iteration   9: 32702.208 ops/s
Iteration  10: 32233.803 ops/s
Iteration  11: 35767.307 ops/s
Iteration  12: 32925.374 ops/s
Iteration  13: 31274.668 ops/s
Iteration  14: 34310.330 ops/s
Iteration  15: 33344.747 ops/s
Iteration  16: 34172.822 ops/s
Iteration  17: 34659.207 ops/s
Iteration  18: 32998.336 ops/s
Iteration  19: 34931.299 ops/s
Iteration  20: 34444.407 ops/s
Iteration  21: 35043.764 ops/s
Iteration  22: 36424.993 ops/s
Iteration  23: 35174.290 ops/s
Iteration  24: 35057.341 ops/s
Iteration  25: 35166.977 ops/s
Iteration  26: 31560.072 ops/s
Iteration  27: 35771.657 ops/s
Iteration  28: 33238.917 ops/s
Iteration  29: 34234.793 ops/s
Iteration  30: 35882.627 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_900._Benchmark.benchmark_Cluster_900":
  34058.210 ±(99.9%) 989.000 ops/s [Average]
  (min, avg, max) = (31274.668, 34058.210, 36758.241), stdev = 1480.289
  CI (99.9%): [33069.210, 35047.210] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_900._Benchmark.benchmark_Cluster_900  thrpt   30  34058.210 ± 989.000  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_901._Benchmark.benchmark_Cluster_901$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_901._Benchmark.benchmark_Cluster_901

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.824 ops/s
# Warmup Iteration   2: 7046.828 ops/s
# Warmup Iteration   3: 34591.693 ops/s
# Warmup Iteration   4: 42980.866 ops/s
# Warmup Iteration   5: 44441.552 ops/s
# Warmup Iteration   6: 54652.133 ops/s
# Warmup Iteration   7: 43486.054 ops/s
# Warmup Iteration   8: 55231.134 ops/s
# Warmup Iteration   9: 89519.425 ops/s
# Warmup Iteration  10: 123243.115 ops/s
# Warmup Iteration  11: 120720.510 ops/s
# Warmup Iteration  12: 124225.485 ops/s
# Warmup Iteration  13: 121540.111 ops/s
# Warmup Iteration  14: 128818.745 ops/s
# Warmup Iteration  15: 118231.580 ops/s
# Warmup Iteration  16: 124065.358 ops/s
# Warmup Iteration  17: 122502.118 ops/s
# Warmup Iteration  18: 128993.334 ops/s
# Warmup Iteration  19: 127098.273 ops/s
# Warmup Iteration  20: 113541.783 ops/s
# Warmup Iteration  21: 132220.730 ops/s
# Warmup Iteration  22: 121095.085 ops/s
# Warmup Iteration  23: 127985.707 ops/s
# Warmup Iteration  24: 124467.931 ops/s
# Warmup Iteration  25: 118635.334 ops/s
# Warmup Iteration  26: 130606.370 ops/s
# Warmup Iteration  27: 122761.920 ops/s
# Warmup Iteration  28: 122201.483 ops/s
# Warmup Iteration  29: 127272.304 ops/s
# Warmup Iteration  30: 122045.774 ops/s
Iteration   1: 132464.901 ops/s
Iteration   2: 123402.604 ops/s
Iteration   3: 124682.766 ops/s
Iteration   4: 127355.494 ops/s
Iteration   5: 125523.667 ops/s
Iteration   6: 125457.722 ops/s
Iteration   7: 124919.153 ops/s
Iteration   8: 124972.238 ops/s
Iteration   9: 130410.006 ops/s
Iteration  10: 122895.561 ops/s
Iteration  11: 125377.883 ops/s
Iteration  12: 128038.780 ops/s
Iteration  13: 123282.993 ops/s
Iteration  14: 125180.930 ops/s
Iteration  15: 128266.401 ops/s
Iteration  16: 123584.898 ops/s
Iteration  17: 123489.155 ops/s
Iteration  18: 130671.221 ops/s
Iteration  19: 123310.007 ops/s
Iteration  20: 126217.043 ops/s
Iteration  21: 124890.202 ops/s
Iteration  22: 127156.235 ops/s
Iteration  23: 124845.789 ops/s
Iteration  24: 127698.359 ops/s
Iteration  25: 123169.043 ops/s
Iteration  26: 128750.146 ops/s
Iteration  27: 128207.114 ops/s
Iteration  28: 121661.031 ops/s
Iteration  29: 126540.302 ops/s
Iteration  30: 129533.830 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_901._Benchmark.benchmark_Cluster_901":
  126065.182 ±(99.9%) 1761.695 ops/s [Average]
  (min, avg, max) = (121661.031, 126065.182, 132464.901), stdev = 2636.822
  CI (99.9%): [124303.488, 127826.877] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_901._Benchmark.benchmark_Cluster_901  thrpt   30  126065.182 ± 1761.695  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_902._Benchmark.benchmark_Cluster_902$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_902._Benchmark.benchmark_Cluster_902

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3044.972 ops/s
# Warmup Iteration   2: 23899.303 ops/s
# Warmup Iteration   3: 34521.272 ops/s
# Warmup Iteration   4: 49239.573 ops/s
# Warmup Iteration   5: 51644.143 ops/s
# Warmup Iteration   6: 74508.672 ops/s
# Warmup Iteration   7: 127957.140 ops/s
# Warmup Iteration   8: 121816.907 ops/s
# Warmup Iteration   9: 121110.725 ops/s
# Warmup Iteration  10: 119481.049 ops/s
# Warmup Iteration  11: 113517.303 ops/s
# Warmup Iteration  12: 123199.875 ops/s
# Warmup Iteration  13: 122550.265 ops/s
# Warmup Iteration  14: 121050.369 ops/s
# Warmup Iteration  15: 121287.014 ops/s
# Warmup Iteration  16: 126155.760 ops/s
# Warmup Iteration  17: 131609.248 ops/s
# Warmup Iteration  18: 132343.180 ops/s
# Warmup Iteration  19: 128061.892 ops/s
# Warmup Iteration  20: 128007.963 ops/s
# Warmup Iteration  21: 132672.165 ops/s
# Warmup Iteration  22: 123979.327 ops/s
# Warmup Iteration  23: 128622.857 ops/s
# Warmup Iteration  24: 124752.386 ops/s
# Warmup Iteration  25: 131417.327 ops/s
# Warmup Iteration  26: 131326.746 ops/s
# Warmup Iteration  27: 130434.469 ops/s
# Warmup Iteration  28: 130855.992 ops/s
# Warmup Iteration  29: 127066.206 ops/s
# Warmup Iteration  30: 132999.425 ops/s
Iteration   1: 128844.502 ops/s
Iteration   2: 129375.904 ops/s
Iteration   3: 132702.660 ops/s
Iteration   4: 126405.255 ops/s
Iteration   5: 128922.878 ops/s
Iteration   6: 129549.044 ops/s
Iteration   7: 129684.958 ops/s
Iteration   8: 132445.132 ops/s
Iteration   9: 130345.048 ops/s
Iteration  10: 134855.601 ops/s
Iteration  11: 127345.441 ops/s
Iteration  12: 130761.197 ops/s
Iteration  13: 126158.423 ops/s
Iteration  14: 126403.108 ops/s
Iteration  15: 133359.685 ops/s
Iteration  16: 128605.984 ops/s
Iteration  17: 129763.751 ops/s
Iteration  18: 129991.442 ops/s
Iteration  19: 131476.682 ops/s
Iteration  20: 122622.569 ops/s
Iteration  21: 135641.814 ops/s
Iteration  22: 130848.981 ops/s
Iteration  23: 127979.556 ops/s
Iteration  24: 131779.996 ops/s
Iteration  25: 129115.377 ops/s
Iteration  26: 128290.044 ops/s
Iteration  27: 124757.184 ops/s
Iteration  28: 126432.351 ops/s
Iteration  29: 132977.239 ops/s
Iteration  30: 120973.527 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_902._Benchmark.benchmark_Cluster_902":
  129280.511 ±(99.9%) 2208.359 ops/s [Average]
  (min, avg, max) = (120973.527, 129280.511, 135641.814), stdev = 3305.368
  CI (99.9%): [127072.152, 131488.870] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_902._Benchmark.benchmark_Cluster_902  thrpt   30  129280.511 ± 2208.359  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_903._Benchmark.benchmark_Cluster_903$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_903._Benchmark.benchmark_Cluster_903

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14014.746 ops/s
# Warmup Iteration   2: 82798.615 ops/s
# Warmup Iteration   3: 91653.219 ops/s
# Warmup Iteration   4: 87766.802 ops/s
# Warmup Iteration   5: 100368.482 ops/s
# Warmup Iteration   6: 95808.415 ops/s
# Warmup Iteration   7: 100670.720 ops/s
# Warmup Iteration   8: 101900.556 ops/s
# Warmup Iteration   9: 105155.946 ops/s
# Warmup Iteration  10: 106227.769 ops/s
# Warmup Iteration  11: 98322.044 ops/s
# Warmup Iteration  12: 104508.901 ops/s
# Warmup Iteration  13: 100171.696 ops/s
# Warmup Iteration  14: 104562.715 ops/s
# Warmup Iteration  15: 98911.459 ops/s
# Warmup Iteration  16: 103211.584 ops/s
# Warmup Iteration  17: 108213.551 ops/s
# Warmup Iteration  18: 102883.990 ops/s
# Warmup Iteration  19: 104351.309 ops/s
# Warmup Iteration  20: 102220.325 ops/s
# Warmup Iteration  21: 106139.504 ops/s
# Warmup Iteration  22: 102483.130 ops/s
# Warmup Iteration  23: 102553.043 ops/s
# Warmup Iteration  24: 103344.036 ops/s
# Warmup Iteration  25: 105436.589 ops/s
# Warmup Iteration  26: 102691.675 ops/s
# Warmup Iteration  27: 102202.737 ops/s
# Warmup Iteration  28: 105389.721 ops/s
# Warmup Iteration  29: 102304.693 ops/s
# Warmup Iteration  30: 108532.303 ops/s
Iteration   1: 100763.906 ops/s
Iteration   2: 101523.166 ops/s
Iteration   3: 105524.119 ops/s
Iteration   4: 102258.292 ops/s
Iteration   5: 108717.920 ops/s
Iteration   6: 103929.465 ops/s
Iteration   7: 99994.447 ops/s
Iteration   8: 105587.216 ops/s
Iteration   9: 101108.157 ops/s
Iteration  10: 103856.993 ops/s
Iteration  11: 107089.478 ops/s
Iteration  12: 101855.909 ops/s
Iteration  13: 107700.015 ops/s
Iteration  14: 100270.621 ops/s
Iteration  15: 106015.353 ops/s
Iteration  16: 100811.632 ops/s
Iteration  17: 107192.941 ops/s
Iteration  18: 101668.416 ops/s
Iteration  19: 108004.826 ops/s
Iteration  20: 107698.158 ops/s
Iteration  21: 105078.226 ops/s
Iteration  22: 105085.398 ops/s
Iteration  23: 107377.432 ops/s
Iteration  24: 101042.512 ops/s
Iteration  25: 105240.341 ops/s
Iteration  26: 101455.545 ops/s
Iteration  27: 104938.010 ops/s
Iteration  28: 105654.841 ops/s
Iteration  29: 102093.899 ops/s
Iteration  30: 106804.431 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_903._Benchmark.benchmark_Cluster_903":
  104211.389 ±(99.9%) 1826.634 ops/s [Average]
  (min, avg, max) = (99994.447, 104211.389, 108717.920), stdev = 2734.019
  CI (99.9%): [102384.755, 106038.022] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_903._Benchmark.benchmark_Cluster_903  thrpt   30  104211.389 ± 1826.634  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_904._Benchmark.benchmark_Cluster_904$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_904._Benchmark.benchmark_Cluster_904

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1187.602 ops/s
# Warmup Iteration   2: 14695.981 ops/s
# Warmup Iteration   3: 31014.129 ops/s
# Warmup Iteration   4: 36539.788 ops/s
# Warmup Iteration   5: 41193.137 ops/s
# Warmup Iteration   6: 55936.948 ops/s
# Warmup Iteration   7: 48493.129 ops/s
# Warmup Iteration   8: 53210.177 ops/s
# Warmup Iteration   9: 68142.195 ops/s
# Warmup Iteration  10: 108091.561 ops/s
# Warmup Iteration  11: 110765.690 ops/s
# Warmup Iteration  12: 113445.340 ops/s
# Warmup Iteration  13: 109883.121 ops/s
# Warmup Iteration  14: 113301.153 ops/s
# Warmup Iteration  15: 110260.215 ops/s
# Warmup Iteration  16: 114027.507 ops/s
# Warmup Iteration  17: 112638.359 ops/s
# Warmup Iteration  18: 114474.153 ops/s
# Warmup Iteration  19: 113069.340 ops/s
# Warmup Iteration  20: 113320.562 ops/s
# Warmup Iteration  21: 118622.323 ops/s
# Warmup Iteration  22: 117406.499 ops/s
# Warmup Iteration  23: 112415.735 ops/s
# Warmup Iteration  24: 117794.084 ops/s
# Warmup Iteration  25: 110143.059 ops/s
# Warmup Iteration  26: 109334.338 ops/s
# Warmup Iteration  27: 119734.335 ops/s
# Warmup Iteration  28: 114516.337 ops/s
# Warmup Iteration  29: 116219.812 ops/s
# Warmup Iteration  30: 120252.863 ops/s
Iteration   1: 113134.964 ops/s
Iteration   2: 118982.719 ops/s
Iteration   3: 117674.543 ops/s
Iteration   4: 106366.265 ops/s
Iteration   5: 119921.682 ops/s
Iteration   6: 112949.828 ops/s
Iteration   7: 119590.650 ops/s
Iteration   8: 114569.361 ops/s
Iteration   9: 118507.375 ops/s
Iteration  10: 117783.423 ops/s
Iteration  11: 114882.511 ops/s
Iteration  12: 119640.458 ops/s
Iteration  13: 119503.066 ops/s
Iteration  14: 113743.485 ops/s
Iteration  15: 118834.109 ops/s
Iteration  16: 114257.307 ops/s
Iteration  17: 116187.973 ops/s
Iteration  18: 120295.211 ops/s
Iteration  19: 111597.509 ops/s
Iteration  20: 111937.063 ops/s
Iteration  21: 120796.149 ops/s
Iteration  22: 113345.008 ops/s
Iteration  23: 115219.375 ops/s
Iteration  24: 122973.161 ops/s
Iteration  25: 113148.253 ops/s
Iteration  26: 116886.790 ops/s
Iteration  27: 116253.156 ops/s
Iteration  28: 117976.583 ops/s
Iteration  29: 116042.140 ops/s
Iteration  30: 114658.428 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_904._Benchmark.benchmark_Cluster_904":
  116255.285 ±(99.9%) 2324.824 ops/s [Average]
  (min, avg, max) = (106366.265, 116255.285, 122973.161), stdev = 3479.688
  CI (99.9%): [113930.460, 118580.109] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_904._Benchmark.benchmark_Cluster_904  thrpt   30  116255.285 ± 2324.824  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_905._Benchmark.benchmark_Cluster_905$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_905._Benchmark.benchmark_Cluster_905

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 875.102 ops/s
# Warmup Iteration   2: 3384.084 ops/s
# Warmup Iteration   3: 12893.718 ops/s
# Warmup Iteration   4: 27196.812 ops/s
# Warmup Iteration   5: 18738.151 ops/s
# Warmup Iteration   6: 21075.061 ops/s
# Warmup Iteration   7: 27930.738 ops/s
# Warmup Iteration   8: 33738.688 ops/s
# Warmup Iteration   9: 31743.233 ops/s
# Warmup Iteration  10: 28770.605 ops/s
# Warmup Iteration  11: 38457.829 ops/s
# Warmup Iteration  12: 73708.065 ops/s
# Warmup Iteration  13: 74173.348 ops/s
# Warmup Iteration  14: 82445.037 ops/s
# Warmup Iteration  15: 87465.333 ops/s
# Warmup Iteration  16: 87434.556 ops/s
# Warmup Iteration  17: 92062.103 ops/s
# Warmup Iteration  18: 88860.664 ops/s
# Warmup Iteration  19: 88761.942 ops/s
# Warmup Iteration  20: 92145.506 ops/s
# Warmup Iteration  21: 88051.648 ops/s
# Warmup Iteration  22: 92921.871 ops/s
# Warmup Iteration  23: 91029.117 ops/s
# Warmup Iteration  24: 90010.310 ops/s
# Warmup Iteration  25: 87517.297 ops/s
# Warmup Iteration  26: 94070.519 ops/s
# Warmup Iteration  27: 92516.637 ops/s
# Warmup Iteration  28: 86527.246 ops/s
# Warmup Iteration  29: 89960.204 ops/s
# Warmup Iteration  30: 89815.844 ops/s
Iteration   1: 91306.636 ops/s
Iteration   2: 85751.406 ops/s
Iteration   3: 91091.438 ops/s
Iteration   4: 92233.129 ops/s
Iteration   5: 85878.524 ops/s
Iteration   6: 87185.950 ops/s
Iteration   7: 89544.830 ops/s
Iteration   8: 88168.795 ops/s
Iteration   9: 89270.250 ops/s
Iteration  10: 86587.883 ops/s
Iteration  11: 91519.319 ops/s
Iteration  12: 90000.140 ops/s
Iteration  13: 88138.253 ops/s
Iteration  14: 90592.338 ops/s
Iteration  15: 90861.019 ops/s
Iteration  16: 87054.854 ops/s
Iteration  17: 93299.624 ops/s
Iteration  18: 92562.076 ops/s
Iteration  19: 86606.901 ops/s
Iteration  20: 91633.089 ops/s
Iteration  21: 88935.043 ops/s
Iteration  22: 88033.400 ops/s
Iteration  23: 92164.577 ops/s
Iteration  24: 87158.023 ops/s
Iteration  25: 78329.343 ops/s
Iteration  26: 82162.361 ops/s
Iteration  27: 86076.961 ops/s
Iteration  28: 90619.587 ops/s
Iteration  29: 87015.455 ops/s
Iteration  30: 89827.575 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_905._Benchmark.benchmark_Cluster_905":
  88653.626 ±(99.9%) 2146.998 ops/s [Average]
  (min, avg, max) = (78329.343, 88653.626, 93299.624), stdev = 3213.526
  CI (99.9%): [86506.628, 90800.624] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_905._Benchmark.benchmark_Cluster_905  thrpt   30  88653.626 ± 2146.998  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_906._Benchmark.benchmark_Cluster_906$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_906._Benchmark.benchmark_Cluster_906

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6912.403 ops/s
# Warmup Iteration   2: 32929.273 ops/s
# Warmup Iteration   3: 35659.738 ops/s
# Warmup Iteration   4: 46749.890 ops/s
# Warmup Iteration   5: 107199.998 ops/s
# Warmup Iteration   6: 108862.025 ops/s
# Warmup Iteration   7: 119090.604 ops/s
# Warmup Iteration   8: 115265.373 ops/s
# Warmup Iteration   9: 120087.308 ops/s
# Warmup Iteration  10: 113726.768 ops/s
# Warmup Iteration  11: 116179.386 ops/s
# Warmup Iteration  12: 114039.963 ops/s
# Warmup Iteration  13: 121840.374 ops/s
# Warmup Iteration  14: 114208.217 ops/s
# Warmup Iteration  15: 120730.065 ops/s
# Warmup Iteration  16: 117642.429 ops/s
# Warmup Iteration  17: 119246.521 ops/s
# Warmup Iteration  18: 125875.101 ops/s
# Warmup Iteration  19: 112047.292 ops/s
# Warmup Iteration  20: 115372.962 ops/s
# Warmup Iteration  21: 120881.208 ops/s
# Warmup Iteration  22: 124496.600 ops/s
# Warmup Iteration  23: 120105.337 ops/s
# Warmup Iteration  24: 121303.913 ops/s
# Warmup Iteration  25: 129074.205 ops/s
# Warmup Iteration  26: 124931.151 ops/s
# Warmup Iteration  27: 117942.318 ops/s
# Warmup Iteration  28: 125829.862 ops/s
# Warmup Iteration  29: 120408.683 ops/s
# Warmup Iteration  30: 123601.380 ops/s
Iteration   1: 120665.904 ops/s
Iteration   2: 125548.488 ops/s
Iteration   3: 118161.487 ops/s
Iteration   4: 122155.809 ops/s
Iteration   5: 124104.886 ops/s
Iteration   6: 121087.920 ops/s
Iteration   7: 119400.032 ops/s
Iteration   8: 118170.415 ops/s
Iteration   9: 122551.013 ops/s
Iteration  10: 126393.782 ops/s
Iteration  11: 119652.078 ops/s
Iteration  12: 125047.690 ops/s
Iteration  13: 127082.935 ops/s
Iteration  14: 117835.091 ops/s
Iteration  15: 122030.955 ops/s
Iteration  16: 120841.442 ops/s
Iteration  17: 125050.566 ops/s
Iteration  18: 122507.060 ops/s
Iteration  19: 118282.307 ops/s
Iteration  20: 123674.141 ops/s
Iteration  21: 127864.715 ops/s
Iteration  22: 118927.987 ops/s
Iteration  23: 123145.779 ops/s
Iteration  24: 117340.274 ops/s
Iteration  25: 122893.573 ops/s
Iteration  26: 122875.355 ops/s
Iteration  27: 106325.350 ops/s
Iteration  28: 119701.982 ops/s
Iteration  29: 119804.663 ops/s
Iteration  30: 121855.222 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_906._Benchmark.benchmark_Cluster_906":
  121365.963 ±(99.9%) 2698.587 ops/s [Average]
  (min, avg, max) = (106325.350, 121365.963, 127864.715), stdev = 4039.118
  CI (99.9%): [118667.377, 124064.550] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_906._Benchmark.benchmark_Cluster_906  thrpt   30  121365.963 ± 2698.587  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_907._Benchmark.benchmark_Cluster_907$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_907._Benchmark.benchmark_Cluster_907

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1442.397 ops/s
# Warmup Iteration   2: 20503.985 ops/s
# Warmup Iteration   3: 33189.321 ops/s
# Warmup Iteration   4: 32163.667 ops/s
# Warmup Iteration   5: 53923.915 ops/s
# Warmup Iteration   6: 91673.379 ops/s
# Warmup Iteration   7: 101192.091 ops/s
# Warmup Iteration   8: 103768.536 ops/s
# Warmup Iteration   9: 100317.122 ops/s
# Warmup Iteration  10: 102005.610 ops/s
# Warmup Iteration  11: 101333.804 ops/s
# Warmup Iteration  12: 100139.826 ops/s
# Warmup Iteration  13: 103782.232 ops/s
# Warmup Iteration  14: 96878.954 ops/s
# Warmup Iteration  15: 93401.604 ops/s
# Warmup Iteration  16: 100708.085 ops/s
# Warmup Iteration  17: 99657.334 ops/s
# Warmup Iteration  18: 105314.822 ops/s
# Warmup Iteration  19: 106727.787 ops/s
# Warmup Iteration  20: 107589.622 ops/s
# Warmup Iteration  21: 105324.594 ops/s
# Warmup Iteration  22: 107467.193 ops/s
# Warmup Iteration  23: 103705.535 ops/s
# Warmup Iteration  24: 100965.002 ops/s
# Warmup Iteration  25: 108285.170 ops/s
# Warmup Iteration  26: 100370.948 ops/s
# Warmup Iteration  27: 109116.637 ops/s
# Warmup Iteration  28: 103398.014 ops/s
# Warmup Iteration  29: 104968.711 ops/s
# Warmup Iteration  30: 105822.792 ops/s
Iteration   1: 104797.073 ops/s
Iteration   2: 106629.673 ops/s
Iteration   3: 101108.076 ops/s
Iteration   4: 103267.903 ops/s
Iteration   5: 107701.404 ops/s
Iteration   6: 104975.175 ops/s
Iteration   7: 106710.676 ops/s
Iteration   8: 102265.376 ops/s
Iteration   9: 105642.352 ops/s
Iteration  10: 103396.643 ops/s
Iteration  11: 104125.120 ops/s
Iteration  12: 104716.206 ops/s
Iteration  13: 106638.668 ops/s
Iteration  14: 104023.569 ops/s
Iteration  15: 103911.475 ops/s
Iteration  16: 107761.296 ops/s
Iteration  17: 108567.748 ops/s
Iteration  18: 103923.831 ops/s
Iteration  19: 106568.636 ops/s
Iteration  20: 104786.962 ops/s
Iteration  21: 109088.286 ops/s
Iteration  22: 106917.245 ops/s
Iteration  23: 104079.242 ops/s
Iteration  24: 108350.365 ops/s
Iteration  25: 103054.038 ops/s
Iteration  26: 102633.201 ops/s
Iteration  27: 106281.354 ops/s
Iteration  28: 103238.813 ops/s
Iteration  29: 105459.370 ops/s
Iteration  30: 106796.550 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_907._Benchmark.benchmark_Cluster_907":
  105247.211 ±(99.9%) 1355.767 ops/s [Average]
  (min, avg, max) = (101108.076, 105247.211, 109088.286), stdev = 2029.248
  CI (99.9%): [103891.444, 106602.978] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_907._Benchmark.benchmark_Cluster_907  thrpt   30  105247.211 ± 1355.767  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_908._Benchmark.benchmark_Cluster_908$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_908._Benchmark.benchmark_Cluster_908

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 304.449 ops/s
# Warmup Iteration   2: 3251.811 ops/s
# Warmup Iteration   3: 16806.846 ops/s
# Warmup Iteration   4: 20508.570 ops/s
# Warmup Iteration   5: 26787.080 ops/s
# Warmup Iteration   6: 25400.053 ops/s
# Warmup Iteration   7: 24765.015 ops/s
# Warmup Iteration   8: 23976.268 ops/s
# Warmup Iteration   9: 16695.949 ops/s
# Warmup Iteration  10: 23003.490 ops/s
# Warmup Iteration  11: 19482.105 ops/s
# Warmup Iteration  12: 26449.355 ops/s
# Warmup Iteration  13: 25975.636 ops/s
# Warmup Iteration  14: 31511.976 ops/s
# Warmup Iteration  15: 26969.110 ops/s
# Warmup Iteration  16: 59023.504 ops/s
# Warmup Iteration  17: 71070.695 ops/s
# Warmup Iteration  18: 74526.690 ops/s
# Warmup Iteration  19: 71460.144 ops/s
# Warmup Iteration  20: 71969.964 ops/s
# Warmup Iteration  21: 71516.309 ops/s
# Warmup Iteration  22: 71785.983 ops/s
# Warmup Iteration  23: 72482.972 ops/s
# Warmup Iteration  24: 72277.628 ops/s
# Warmup Iteration  25: 70024.086 ops/s
# Warmup Iteration  26: 74523.333 ops/s
# Warmup Iteration  27: 71548.493 ops/s
# Warmup Iteration  28: 70241.406 ops/s
# Warmup Iteration  29: 71174.305 ops/s
# Warmup Iteration  30: 71605.351 ops/s
Iteration   1: 71420.596 ops/s
Iteration   2: 70731.960 ops/s
Iteration   3: 74220.879 ops/s
Iteration   4: 71436.837 ops/s
Iteration   5: 73372.736 ops/s
Iteration   6: 71200.055 ops/s
Iteration   7: 71551.126 ops/s
Iteration   8: 73624.828 ops/s
Iteration   9: 71725.335 ops/s
Iteration  10: 73133.214 ops/s
Iteration  11: 70707.294 ops/s
Iteration  12: 74309.384 ops/s
Iteration  13: 74065.242 ops/s
Iteration  14: 72456.701 ops/s
Iteration  15: 71843.256 ops/s
Iteration  16: 72309.635 ops/s
Iteration  17: 72473.490 ops/s
Iteration  18: 72648.345 ops/s
Iteration  19: 72170.598 ops/s
Iteration  20: 72065.445 ops/s
Iteration  21: 73984.682 ops/s
Iteration  22: 71238.002 ops/s
Iteration  23: 70835.122 ops/s
Iteration  24: 74588.192 ops/s
Iteration  25: 71939.498 ops/s
Iteration  26: 72620.815 ops/s
Iteration  27: 70924.760 ops/s
Iteration  28: 74807.592 ops/s
Iteration  29: 73323.629 ops/s
Iteration  30: 71258.972 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_908._Benchmark.benchmark_Cluster_908":
  72432.941 ±(99.9%) 831.110 ops/s [Average]
  (min, avg, max) = (70707.294, 72432.941, 74807.592), stdev = 1243.967
  CI (99.9%): [71601.830, 73264.051] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_908._Benchmark.benchmark_Cluster_908  thrpt   30  72432.941 ± 831.110  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_909._Benchmark.benchmark_Cluster_909$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_909._Benchmark.benchmark_Cluster_909

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.891 ops/s
# Warmup Iteration   2: 8333.983 ops/s
# Warmup Iteration   3: 29054.299 ops/s
# Warmup Iteration   4: 44091.920 ops/s
# Warmup Iteration   5: 66025.752 ops/s
# Warmup Iteration   6: 91853.038 ops/s
# Warmup Iteration   7: 119966.959 ops/s
# Warmup Iteration   8: 123410.266 ops/s
# Warmup Iteration   9: 129150.343 ops/s
# Warmup Iteration  10: 121038.964 ops/s
# Warmup Iteration  11: 123878.654 ops/s
# Warmup Iteration  12: 126739.198 ops/s
# Warmup Iteration  13: 127397.124 ops/s
# Warmup Iteration  14: 133694.101 ops/s
# Warmup Iteration  15: 127116.941 ops/s
# Warmup Iteration  16: 135730.847 ops/s
# Warmup Iteration  17: 128545.868 ops/s
# Warmup Iteration  18: 126648.830 ops/s
# Warmup Iteration  19: 138382.258 ops/s
# Warmup Iteration  20: 129087.664 ops/s
# Warmup Iteration  21: 132016.465 ops/s
# Warmup Iteration  22: 135621.621 ops/s
# Warmup Iteration  23: 129288.071 ops/s
# Warmup Iteration  24: 132537.932 ops/s
# Warmup Iteration  25: 138306.790 ops/s
# Warmup Iteration  26: 128420.680 ops/s
# Warmup Iteration  27: 134158.976 ops/s
# Warmup Iteration  28: 130080.985 ops/s
# Warmup Iteration  29: 134796.180 ops/s
# Warmup Iteration  30: 133607.748 ops/s
Iteration   1: 128958.088 ops/s
Iteration   2: 136188.346 ops/s
Iteration   3: 126459.915 ops/s
Iteration   4: 132275.971 ops/s
Iteration   5: 137376.988 ops/s
Iteration   6: 128406.048 ops/s
Iteration   7: 137465.928 ops/s
Iteration   8: 134866.287 ops/s
Iteration   9: 130589.271 ops/s
Iteration  10: 135381.235 ops/s
Iteration  11: 128856.629 ops/s
Iteration  12: 116335.767 ops/s
Iteration  13: 117116.258 ops/s
Iteration  14: 129219.949 ops/s
Iteration  15: 126276.245 ops/s
Iteration  16: 131767.434 ops/s
Iteration  17: 130061.629 ops/s
Iteration  18: 126948.137 ops/s
Iteration  19: 130924.526 ops/s
Iteration  20: 134435.358 ops/s
Iteration  21: 132523.072 ops/s
Iteration  22: 135821.819 ops/s
Iteration  23: 129561.450 ops/s
Iteration  24: 135535.017 ops/s
Iteration  25: 132363.280 ops/s
Iteration  26: 132207.303 ops/s
Iteration  27: 135078.897 ops/s
Iteration  28: 130944.486 ops/s
Iteration  29: 134968.071 ops/s
Iteration  30: 128645.102 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_909._Benchmark.benchmark_Cluster_909":
  130918.617 ±(99.9%) 3360.473 ops/s [Average]
  (min, avg, max) = (116335.767, 130918.617, 137465.928), stdev = 5029.798
  CI (99.9%): [127558.144, 134279.090] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_909._Benchmark.benchmark_Cluster_909  thrpt   30  130918.617 ± 3360.473  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_91._Benchmark.benchmark_Cluster_91$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_91._Benchmark.benchmark_Cluster_91

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3027.181 ops/s
# Warmup Iteration   2: 33072.270 ops/s
# Warmup Iteration   3: 59065.463 ops/s
# Warmup Iteration   4: 76460.740 ops/s
# Warmup Iteration   5: 175887.214 ops/s
# Warmup Iteration   6: 241761.383 ops/s
# Warmup Iteration   7: 242387.239 ops/s
# Warmup Iteration   8: 221719.590 ops/s
# Warmup Iteration   9: 247080.952 ops/s
# Warmup Iteration  10: 251787.323 ops/s
# Warmup Iteration  11: 255205.558 ops/s
# Warmup Iteration  12: 237501.553 ops/s
# Warmup Iteration  13: 247839.837 ops/s
# Warmup Iteration  14: 245093.021 ops/s
# Warmup Iteration  15: 241194.734 ops/s
# Warmup Iteration  16: 236095.831 ops/s
# Warmup Iteration  17: 253245.584 ops/s
# Warmup Iteration  18: 243368.547 ops/s
# Warmup Iteration  19: 245174.816 ops/s
# Warmup Iteration  20: 261271.371 ops/s
# Warmup Iteration  21: 240849.312 ops/s
# Warmup Iteration  22: 249199.694 ops/s
# Warmup Iteration  23: 242025.523 ops/s
# Warmup Iteration  24: 244347.726 ops/s
# Warmup Iteration  25: 247301.658 ops/s
# Warmup Iteration  26: 251557.204 ops/s
# Warmup Iteration  27: 248013.580 ops/s
# Warmup Iteration  28: 251971.739 ops/s
# Warmup Iteration  29: 246045.553 ops/s
# Warmup Iteration  30: 252373.204 ops/s
Iteration   1: 242451.834 ops/s
Iteration   2: 252249.656 ops/s
Iteration   3: 253042.258 ops/s
Iteration   4: 249406.170 ops/s
Iteration   5: 251524.668 ops/s
Iteration   6: 257439.368 ops/s
Iteration   7: 254570.718 ops/s
Iteration   8: 246030.243 ops/s
Iteration   9: 246680.618 ops/s
Iteration  10: 261297.574 ops/s
Iteration  11: 241582.154 ops/s
Iteration  12: 250868.013 ops/s
Iteration  13: 258827.192 ops/s
Iteration  14: 242880.490 ops/s
Iteration  15: 256053.711 ops/s
Iteration  16: 248384.427 ops/s
Iteration  17: 242569.449 ops/s
Iteration  18: 254522.931 ops/s
Iteration  19: 244727.156 ops/s
Iteration  20: 251955.770 ops/s
Iteration  21: 252128.670 ops/s
Iteration  22: 249071.878 ops/s
Iteration  23: 255416.847 ops/s
Iteration  24: 245412.900 ops/s
Iteration  25: 251467.626 ops/s
Iteration  26: 249964.421 ops/s
Iteration  27: 247132.677 ops/s
Iteration  28: 257671.206 ops/s
Iteration  29: 245276.455 ops/s
Iteration  30: 248793.310 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_91._Benchmark.benchmark_Cluster_91":
  250313.346 ±(99.9%) 3502.988 ops/s [Average]
  (min, avg, max) = (241582.154, 250313.346, 261297.574), stdev = 5243.107
  CI (99.9%): [246810.359, 253816.334] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_91._Benchmark.benchmark_Cluster_91  thrpt   30  250313.346 ± 3502.988  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_910._Benchmark.benchmark_Cluster_910$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_910._Benchmark.benchmark_Cluster_910

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1415.560 ops/s
# Warmup Iteration   2: 13930.663 ops/s
# Warmup Iteration   3: 23733.360 ops/s
# Warmup Iteration   4: 23701.535 ops/s
# Warmup Iteration   5: 36922.590 ops/s
# Warmup Iteration   6: 48537.451 ops/s
# Warmup Iteration   7: 83559.325 ops/s
# Warmup Iteration   8: 86845.293 ops/s
# Warmup Iteration   9: 82984.200 ops/s
# Warmup Iteration  10: 83609.478 ops/s
# Warmup Iteration  11: 82725.862 ops/s
# Warmup Iteration  12: 84365.228 ops/s
# Warmup Iteration  13: 87044.296 ops/s
# Warmup Iteration  14: 87831.922 ops/s
# Warmup Iteration  15: 85436.866 ops/s
# Warmup Iteration  16: 85668.544 ops/s
# Warmup Iteration  17: 89275.183 ops/s
# Warmup Iteration  18: 86111.954 ops/s
# Warmup Iteration  19: 85275.896 ops/s
# Warmup Iteration  20: 91917.208 ops/s
# Warmup Iteration  21: 86843.686 ops/s
# Warmup Iteration  22: 87535.380 ops/s
# Warmup Iteration  23: 90186.888 ops/s
# Warmup Iteration  24: 87806.377 ops/s
# Warmup Iteration  25: 89216.870 ops/s
# Warmup Iteration  26: 87801.202 ops/s
# Warmup Iteration  27: 89899.919 ops/s
# Warmup Iteration  28: 89087.504 ops/s
# Warmup Iteration  29: 87088.552 ops/s
# Warmup Iteration  30: 91382.742 ops/s
Iteration   1: 88302.116 ops/s
Iteration   2: 88764.394 ops/s
Iteration   3: 89473.365 ops/s
Iteration   4: 89000.686 ops/s
Iteration   5: 89002.429 ops/s
Iteration   6: 87185.881 ops/s
Iteration   7: 71201.101 ops/s
Iteration   8: 89275.299 ops/s
Iteration   9: 89109.799 ops/s
Iteration  10: 91166.540 ops/s
Iteration  11: 87784.658 ops/s
Iteration  12: 91637.172 ops/s
Iteration  13: 86316.128 ops/s
Iteration  14: 87839.911 ops/s
Iteration  15: 89707.675 ops/s
Iteration  16: 89917.771 ops/s
Iteration  17: 89354.483 ops/s
Iteration  18: 90206.816 ops/s
Iteration  19: 87768.083 ops/s
Iteration  20: 90415.793 ops/s
Iteration  21: 87671.357 ops/s
Iteration  22: 91571.507 ops/s
Iteration  23: 87291.780 ops/s
Iteration  24: 90888.707 ops/s
Iteration  25: 86733.121 ops/s
Iteration  26: 88968.955 ops/s
Iteration  27: 92412.758 ops/s
Iteration  28: 91488.958 ops/s
Iteration  29: 90206.097 ops/s
Iteration  30: 88538.252 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_910._Benchmark.benchmark_Cluster_910":
  88640.053 ±(99.9%) 2433.372 ops/s [Average]
  (min, avg, max) = (71201.101, 88640.053, 92412.758), stdev = 3642.157
  CI (99.9%): [86206.681, 91073.425] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_910._Benchmark.benchmark_Cluster_910  thrpt   30  88640.053 ± 2433.372  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_911._Benchmark.benchmark_Cluster_911$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_911._Benchmark.benchmark_Cluster_911

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9359.100 ops/s
# Warmup Iteration   2: 32296.809 ops/s
# Warmup Iteration   3: 86890.150 ops/s
# Warmup Iteration   4: 108540.101 ops/s
# Warmup Iteration   5: 114049.358 ops/s
# Warmup Iteration   6: 119164.342 ops/s
# Warmup Iteration   7: 112051.365 ops/s
# Warmup Iteration   8: 118921.961 ops/s
# Warmup Iteration   9: 115894.931 ops/s
# Warmup Iteration  10: 127232.411 ops/s
# Warmup Iteration  11: 116886.422 ops/s
# Warmup Iteration  12: 126865.586 ops/s
# Warmup Iteration  13: 123690.045 ops/s
# Warmup Iteration  14: 122022.692 ops/s
# Warmup Iteration  15: 127416.621 ops/s
# Warmup Iteration  16: 122562.060 ops/s
# Warmup Iteration  17: 131012.376 ops/s
# Warmup Iteration  18: 129729.800 ops/s
# Warmup Iteration  19: 126153.445 ops/s
# Warmup Iteration  20: 132669.538 ops/s
# Warmup Iteration  21: 127252.155 ops/s
# Warmup Iteration  22: 129517.413 ops/s
# Warmup Iteration  23: 129187.660 ops/s
# Warmup Iteration  24: 127102.843 ops/s
# Warmup Iteration  25: 131619.360 ops/s
# Warmup Iteration  26: 130324.902 ops/s
# Warmup Iteration  27: 128081.666 ops/s
# Warmup Iteration  28: 132489.701 ops/s
# Warmup Iteration  29: 132425.426 ops/s
# Warmup Iteration  30: 125969.106 ops/s
Iteration   1: 131202.513 ops/s
Iteration   2: 126066.605 ops/s
Iteration   3: 130422.018 ops/s
Iteration   4: 129876.754 ops/s
Iteration   5: 130746.943 ops/s
Iteration   6: 132026.522 ops/s
Iteration   7: 126300.250 ops/s
Iteration   8: 133974.990 ops/s
Iteration   9: 128190.064 ops/s
Iteration  10: 127912.490 ops/s
Iteration  11: 131770.703 ops/s
Iteration  12: 125655.107 ops/s
Iteration  13: 132715.212 ops/s
Iteration  14: 128978.333 ops/s
Iteration  15: 124056.945 ops/s
Iteration  16: 132144.073 ops/s
Iteration  17: 126334.285 ops/s
Iteration  18: 133149.133 ops/s
Iteration  19: 130151.239 ops/s
Iteration  20: 128624.912 ops/s
Iteration  21: 130834.034 ops/s
Iteration  22: 132112.686 ops/s
Iteration  23: 125711.308 ops/s
Iteration  24: 131953.087 ops/s
Iteration  25: 125275.380 ops/s
Iteration  26: 131762.576 ops/s
Iteration  27: 129921.764 ops/s
Iteration  28: 126779.908 ops/s
Iteration  29: 130902.890 ops/s
Iteration  30: 126804.591 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_911._Benchmark.benchmark_Cluster_911":
  129411.911 ±(99.9%) 1833.205 ops/s [Average]
  (min, avg, max) = (124056.945, 129411.911, 133974.990), stdev = 2743.855
  CI (99.9%): [127578.706, 131245.115] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_911._Benchmark.benchmark_Cluster_911  thrpt   30  129411.911 ± 1833.205  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_912._Benchmark.benchmark_Cluster_912$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_912._Benchmark.benchmark_Cluster_912

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7963.858 ops/s
# Warmup Iteration   2: 26649.486 ops/s
# Warmup Iteration   3: 33271.059 ops/s
# Warmup Iteration   4: 62971.486 ops/s
# Warmup Iteration   5: 101553.760 ops/s
# Warmup Iteration   6: 107670.942 ops/s
# Warmup Iteration   7: 100037.674 ops/s
# Warmup Iteration   8: 104014.137 ops/s
# Warmup Iteration   9: 105512.638 ops/s
# Warmup Iteration  10: 100714.565 ops/s
# Warmup Iteration  11: 101671.210 ops/s
# Warmup Iteration  12: 107171.117 ops/s
# Warmup Iteration  13: 98956.978 ops/s
# Warmup Iteration  14: 103732.016 ops/s
# Warmup Iteration  15: 105902.154 ops/s
# Warmup Iteration  16: 103991.546 ops/s
# Warmup Iteration  17: 107951.019 ops/s
# Warmup Iteration  18: 107183.402 ops/s
# Warmup Iteration  19: 107907.772 ops/s
# Warmup Iteration  20: 112508.454 ops/s
# Warmup Iteration  21: 103595.735 ops/s
# Warmup Iteration  22: 114155.126 ops/s
# Warmup Iteration  23: 106378.329 ops/s
# Warmup Iteration  24: 104414.261 ops/s
# Warmup Iteration  25: 103807.461 ops/s
# Warmup Iteration  26: 113917.935 ops/s
# Warmup Iteration  27: 107323.871 ops/s
# Warmup Iteration  28: 106021.532 ops/s
# Warmup Iteration  29: 112008.005 ops/s
# Warmup Iteration  30: 111446.447 ops/s
Iteration   1: 97264.636 ops/s
Iteration   2: 105215.787 ops/s
Iteration   3: 114668.439 ops/s
Iteration   4: 107218.414 ops/s
Iteration   5: 113031.117 ops/s
Iteration   6: 110146.797 ops/s
Iteration   7: 108227.930 ops/s
Iteration   8: 113607.229 ops/s
Iteration   9: 107064.165 ops/s
Iteration  10: 110399.404 ops/s
Iteration  11: 108111.707 ops/s
Iteration  12: 108310.616 ops/s
Iteration  13: 106342.453 ops/s
Iteration  14: 109837.452 ops/s
Iteration  15: 109028.196 ops/s
Iteration  16: 108663.043 ops/s
Iteration  17: 111305.271 ops/s
Iteration  18: 109859.045 ops/s
Iteration  19: 105716.797 ops/s
Iteration  20: 108976.502 ops/s
Iteration  21: 110604.988 ops/s
Iteration  22: 112228.810 ops/s
Iteration  23: 110181.513 ops/s
Iteration  24: 111931.336 ops/s
Iteration  25: 108121.091 ops/s
Iteration  26: 108766.692 ops/s
Iteration  27: 114212.226 ops/s
Iteration  28: 106530.791 ops/s
Iteration  29: 112088.117 ops/s
Iteration  30: 110418.189 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_912._Benchmark.benchmark_Cluster_912":
  109269.292 ±(99.9%) 2236.160 ops/s [Average]
  (min, avg, max) = (97264.636, 109269.292, 114668.439), stdev = 3346.979
  CI (99.9%): [107033.132, 111505.452] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_912._Benchmark.benchmark_Cluster_912  thrpt   30  109269.292 ± 2236.160  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_913._Benchmark.benchmark_Cluster_913$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_913._Benchmark.benchmark_Cluster_913

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9929.930 ops/s
# Warmup Iteration   2: 23628.807 ops/s
# Warmup Iteration   3: 38439.096 ops/s
# Warmup Iteration   4: 44880.603 ops/s
# Warmup Iteration   5: 37249.947 ops/s
# Warmup Iteration   6: 104000.286 ops/s
# Warmup Iteration   7: 102586.052 ops/s
# Warmup Iteration   8: 106139.052 ops/s
# Warmup Iteration   9: 111642.254 ops/s
# Warmup Iteration  10: 110951.207 ops/s
# Warmup Iteration  11: 108220.454 ops/s
# Warmup Iteration  12: 114130.548 ops/s
# Warmup Iteration  13: 104597.451 ops/s
# Warmup Iteration  14: 112354.649 ops/s
# Warmup Iteration  15: 109456.908 ops/s
# Warmup Iteration  16: 110916.648 ops/s
# Warmup Iteration  17: 114257.324 ops/s
# Warmup Iteration  18: 108715.696 ops/s
# Warmup Iteration  19: 113776.113 ops/s
# Warmup Iteration  20: 112664.283 ops/s
# Warmup Iteration  21: 113513.457 ops/s
# Warmup Iteration  22: 112786.436 ops/s
# Warmup Iteration  23: 111327.871 ops/s
# Warmup Iteration  24: 106643.198 ops/s
# Warmup Iteration  25: 112296.222 ops/s
# Warmup Iteration  26: 112639.044 ops/s
# Warmup Iteration  27: 106674.166 ops/s
# Warmup Iteration  28: 115202.125 ops/s
# Warmup Iteration  29: 108317.337 ops/s
# Warmup Iteration  30: 114978.761 ops/s
Iteration   1: 109583.382 ops/s
Iteration   2: 114827.132 ops/s
Iteration   3: 111587.205 ops/s
Iteration   4: 112076.669 ops/s
Iteration   5: 115295.565 ops/s
Iteration   6: 108211.980 ops/s
Iteration   7: 114444.018 ops/s
Iteration   8: 111661.979 ops/s
Iteration   9: 113706.649 ops/s
Iteration  10: 106346.844 ops/s
Iteration  11: 110522.891 ops/s
Iteration  12: 114380.722 ops/s
Iteration  13: 107538.155 ops/s
Iteration  14: 110908.957 ops/s
Iteration  15: 114308.717 ops/s
Iteration  16: 112946.888 ops/s
Iteration  17: 113720.924 ops/s
Iteration  18: 107905.026 ops/s
Iteration  19: 112773.144 ops/s
Iteration  20: 109679.090 ops/s
Iteration  21: 117547.341 ops/s
Iteration  22: 114414.834 ops/s
Iteration  23: 105408.202 ops/s
Iteration  24: 116041.103 ops/s
Iteration  25: 109993.134 ops/s
Iteration  26: 116597.680 ops/s
Iteration  27: 109967.799 ops/s
Iteration  28: 112422.192 ops/s
Iteration  29: 114195.834 ops/s
Iteration  30: 112159.574 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_913._Benchmark.benchmark_Cluster_913":
  112039.121 ±(99.9%) 2045.120 ops/s [Average]
  (min, avg, max) = (105408.202, 112039.121, 117547.341), stdev = 3061.040
  CI (99.9%): [109994.001, 114084.241] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_913._Benchmark.benchmark_Cluster_913  thrpt   30  112039.121 ± 2045.120  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_914._Benchmark.benchmark_Cluster_914$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_914._Benchmark.benchmark_Cluster_914

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4610.221 ops/s
# Warmup Iteration   2: 18917.552 ops/s
# Warmup Iteration   3: 21330.593 ops/s
# Warmup Iteration   4: 33209.243 ops/s
# Warmup Iteration   5: 21179.990 ops/s
# Warmup Iteration   6: 53829.797 ops/s
# Warmup Iteration   7: 66874.407 ops/s
# Warmup Iteration   8: 57355.361 ops/s
# Warmup Iteration   9: 62099.921 ops/s
# Warmup Iteration  10: 62156.067 ops/s
# Warmup Iteration  11: 68546.078 ops/s
# Warmup Iteration  12: 62622.887 ops/s
# Warmup Iteration  13: 68111.375 ops/s
# Warmup Iteration  14: 65293.670 ops/s
# Warmup Iteration  15: 61866.722 ops/s
# Warmup Iteration  16: 62545.191 ops/s
# Warmup Iteration  17: 67896.045 ops/s
# Warmup Iteration  18: 66095.418 ops/s
# Warmup Iteration  19: 60066.693 ops/s
# Warmup Iteration  20: 66234.637 ops/s
# Warmup Iteration  21: 57270.182 ops/s
# Warmup Iteration  22: 68706.925 ops/s
# Warmup Iteration  23: 68245.863 ops/s
# Warmup Iteration  24: 62398.212 ops/s
# Warmup Iteration  25: 62402.317 ops/s
# Warmup Iteration  26: 55847.305 ops/s
# Warmup Iteration  27: 66672.772 ops/s
# Warmup Iteration  28: 61647.006 ops/s
# Warmup Iteration  29: 63538.674 ops/s
# Warmup Iteration  30: 71083.945 ops/s
Iteration   1: 63444.956 ops/s
Iteration   2: 62245.384 ops/s
Iteration   3: 66018.779 ops/s
Iteration   4: 60198.621 ops/s
Iteration   5: 65476.864 ops/s
Iteration   6: 70246.885 ops/s
Iteration   7: 63204.268 ops/s
Iteration   8: 63447.752 ops/s
Iteration   9: 58489.638 ops/s
Iteration  10: 65833.998 ops/s
Iteration  11: 63164.604 ops/s
Iteration  12: 61395.921 ops/s
Iteration  13: 56155.923 ops/s
Iteration  14: 63690.633 ops/s
Iteration  15: 63350.798 ops/s
Iteration  16: 65097.219 ops/s
Iteration  17: 65817.485 ops/s
Iteration  18: 59955.102 ops/s
Iteration  19: 65796.509 ops/s
Iteration  20: 65548.726 ops/s
Iteration  21: 65973.427 ops/s
Iteration  22: 58519.301 ops/s
Iteration  23: 58939.170 ops/s
Iteration  24: 63350.152 ops/s
Iteration  25: 61494.210 ops/s
Iteration  26: 62481.396 ops/s
Iteration  27: 67885.608 ops/s
Iteration  28: 61511.174 ops/s
Iteration  29: 63814.648 ops/s
Iteration  30: 61913.614 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_914._Benchmark.benchmark_Cluster_914":
  63148.759 ±(99.9%) 2024.574 ops/s [Average]
  (min, avg, max) = (56155.923, 63148.759, 70246.885), stdev = 3030.287
  CI (99.9%): [61124.185, 65173.332] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_914._Benchmark.benchmark_Cluster_914  thrpt   30  63148.759 ± 2024.574  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_915._Benchmark.benchmark_Cluster_915$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_915._Benchmark.benchmark_Cluster_915

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.826 ops/s
# Warmup Iteration   2: 5658.749 ops/s
# Warmup Iteration   3: 17644.429 ops/s
# Warmup Iteration   4: 19786.736 ops/s
# Warmup Iteration   5: 17392.464 ops/s
# Warmup Iteration   6: 32194.406 ops/s
# Warmup Iteration   7: 19048.709 ops/s
# Warmup Iteration   8: 26342.650 ops/s
# Warmup Iteration   9: 27559.782 ops/s
# Warmup Iteration  10: 31079.928 ops/s
# Warmup Iteration  11: 33499.442 ops/s
# Warmup Iteration  12: 30943.417 ops/s
# Warmup Iteration  13: 41772.497 ops/s
# Warmup Iteration  14: 54361.023 ops/s
# Warmup Iteration  15: 56466.098 ops/s
# Warmup Iteration  16: 48880.119 ops/s
# Warmup Iteration  17: 54410.269 ops/s
# Warmup Iteration  18: 56037.917 ops/s
# Warmup Iteration  19: 55521.571 ops/s
# Warmup Iteration  20: 52941.411 ops/s
# Warmup Iteration  21: 53326.658 ops/s
# Warmup Iteration  22: 52947.424 ops/s
# Warmup Iteration  23: 56233.531 ops/s
# Warmup Iteration  24: 53107.586 ops/s
# Warmup Iteration  25: 57571.648 ops/s
# Warmup Iteration  26: 55105.629 ops/s
# Warmup Iteration  27: 51271.131 ops/s
# Warmup Iteration  28: 56434.722 ops/s
# Warmup Iteration  29: 56421.047 ops/s
# Warmup Iteration  30: 57766.595 ops/s
Iteration   1: 54340.651 ops/s
Iteration   2: 54083.451 ops/s
Iteration   3: 53291.667 ops/s
Iteration   4: 58431.164 ops/s
Iteration   5: 54338.010 ops/s
Iteration   6: 54917.042 ops/s
Iteration   7: 55214.037 ops/s
Iteration   8: 54062.362 ops/s
Iteration   9: 59272.102 ops/s
Iteration  10: 55384.343 ops/s
Iteration  11: 49601.522 ops/s
Iteration  12: 51845.112 ops/s
Iteration  13: 61803.605 ops/s
Iteration  14: 54103.640 ops/s
Iteration  15: 56746.057 ops/s
Iteration  16: 58979.993 ops/s
Iteration  17: 54940.033 ops/s
Iteration  18: 57382.189 ops/s
Iteration  19: 56215.580 ops/s
Iteration  20: 55156.929 ops/s
Iteration  21: 57669.041 ops/s
Iteration  22: 52013.308 ops/s
Iteration  23: 56013.877 ops/s
Iteration  24: 56502.032 ops/s
Iteration  25: 59319.384 ops/s
Iteration  26: 56928.120 ops/s
Iteration  27: 58504.055 ops/s
Iteration  28: 56631.625 ops/s
Iteration  29: 58126.440 ops/s
Iteration  30: 55388.067 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_915._Benchmark.benchmark_Cluster_915":
  55906.848 ±(99.9%) 1709.635 ops/s [Average]
  (min, avg, max) = (49601.522, 55906.848, 61803.605), stdev = 2558.902
  CI (99.9%): [54197.213, 57616.483] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_915._Benchmark.benchmark_Cluster_915  thrpt   30  55906.848 ± 1709.635  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_916._Benchmark.benchmark_Cluster_916$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_916._Benchmark.benchmark_Cluster_916

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7307.270 ops/s
# Warmup Iteration   2: 37366.161 ops/s
# Warmup Iteration   3: 31346.437 ops/s
# Warmup Iteration   4: 50157.953 ops/s
# Warmup Iteration   5: 58732.264 ops/s
# Warmup Iteration   6: 98153.696 ops/s
# Warmup Iteration   7: 119443.732 ops/s
# Warmup Iteration   8: 112299.144 ops/s
# Warmup Iteration   9: 118677.653 ops/s
# Warmup Iteration  10: 114080.919 ops/s
# Warmup Iteration  11: 112315.347 ops/s
# Warmup Iteration  12: 114395.932 ops/s
# Warmup Iteration  13: 113091.220 ops/s
# Warmup Iteration  14: 118700.885 ops/s
# Warmup Iteration  15: 114120.889 ops/s
# Warmup Iteration  16: 107499.655 ops/s
# Warmup Iteration  17: 106347.452 ops/s
# Warmup Iteration  18: 117768.574 ops/s
# Warmup Iteration  19: 117531.129 ops/s
# Warmup Iteration  20: 118145.546 ops/s
# Warmup Iteration  21: 121526.519 ops/s
# Warmup Iteration  22: 117587.591 ops/s
# Warmup Iteration  23: 114377.197 ops/s
# Warmup Iteration  24: 115836.456 ops/s
# Warmup Iteration  25: 116954.225 ops/s
# Warmup Iteration  26: 124518.898 ops/s
# Warmup Iteration  27: 121123.669 ops/s
# Warmup Iteration  28: 120583.489 ops/s
# Warmup Iteration  29: 121557.667 ops/s
# Warmup Iteration  30: 120581.767 ops/s
Iteration   1: 120413.065 ops/s
Iteration   2: 122083.923 ops/s
Iteration   3: 116605.550 ops/s
Iteration   4: 122737.058 ops/s
Iteration   5: 117697.190 ops/s
Iteration   6: 118582.962 ops/s
Iteration   7: 118174.391 ops/s
Iteration   8: 119312.168 ops/s
Iteration   9: 120811.340 ops/s
Iteration  10: 118301.637 ops/s
Iteration  11: 121660.267 ops/s
Iteration  12: 118784.918 ops/s
Iteration  13: 123859.519 ops/s
Iteration  14: 112521.498 ops/s
Iteration  15: 112260.714 ops/s
Iteration  16: 120617.667 ops/s
Iteration  17: 122708.485 ops/s
Iteration  18: 117974.704 ops/s
Iteration  19: 120303.248 ops/s
Iteration  20: 119743.375 ops/s
Iteration  21: 119175.222 ops/s
Iteration  22: 123552.280 ops/s
Iteration  23: 117963.535 ops/s
Iteration  24: 117811.196 ops/s
Iteration  25: 124244.522 ops/s
Iteration  26: 116501.396 ops/s
Iteration  27: 123695.242 ops/s
Iteration  28: 116697.004 ops/s
Iteration  29: 119826.426 ops/s
Iteration  30: 123553.115 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_916._Benchmark.benchmark_Cluster_916":
  119605.787 ±(99.9%) 2039.236 ops/s [Average]
  (min, avg, max) = (112260.714, 119605.787, 124244.522), stdev = 3052.233
  CI (99.9%): [117566.551, 121645.023] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_916._Benchmark.benchmark_Cluster_916  thrpt   30  119605.787 ± 2039.236  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_917._Benchmark.benchmark_Cluster_917$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_917._Benchmark.benchmark_Cluster_917

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15813.288 ops/s
# Warmup Iteration   2: 52276.453 ops/s
# Warmup Iteration   3: 96868.491 ops/s
# Warmup Iteration   4: 93925.059 ops/s
# Warmup Iteration   5: 93339.399 ops/s
# Warmup Iteration   6: 96756.072 ops/s
# Warmup Iteration   7: 97683.425 ops/s
# Warmup Iteration   8: 92706.109 ops/s
# Warmup Iteration   9: 94409.854 ops/s
# Warmup Iteration  10: 93605.432 ops/s
# Warmup Iteration  11: 104247.642 ops/s
# Warmup Iteration  12: 96284.919 ops/s
# Warmup Iteration  13: 96274.604 ops/s
# Warmup Iteration  14: 104640.430 ops/s
# Warmup Iteration  15: 103591.290 ops/s
# Warmup Iteration  16: 96244.819 ops/s
# Warmup Iteration  17: 103184.907 ops/s
# Warmup Iteration  18: 100968.351 ops/s
# Warmup Iteration  19: 102974.181 ops/s
# Warmup Iteration  20: 100386.161 ops/s
# Warmup Iteration  21: 100257.136 ops/s
# Warmup Iteration  22: 101853.495 ops/s
# Warmup Iteration  23: 101979.310 ops/s
# Warmup Iteration  24: 103016.554 ops/s
# Warmup Iteration  25: 103244.197 ops/s
# Warmup Iteration  26: 102242.993 ops/s
# Warmup Iteration  27: 102586.920 ops/s
# Warmup Iteration  28: 102419.480 ops/s
# Warmup Iteration  29: 101437.206 ops/s
# Warmup Iteration  30: 104513.113 ops/s
Iteration   1: 102253.283 ops/s
Iteration   2: 104439.876 ops/s
Iteration   3: 102128.859 ops/s
Iteration   4: 102703.155 ops/s
Iteration   5: 104828.524 ops/s
Iteration   6: 100242.077 ops/s
Iteration   7: 102906.547 ops/s
Iteration   8: 99239.111 ops/s
Iteration   9: 101230.769 ops/s
Iteration  10: 106709.972 ops/s
Iteration  11: 99852.811 ops/s
Iteration  12: 105577.829 ops/s
Iteration  13: 99084.021 ops/s
Iteration  14: 105425.536 ops/s
Iteration  15: 104614.672 ops/s
Iteration  16: 103021.856 ops/s
Iteration  17: 99933.434 ops/s
Iteration  18: 105037.011 ops/s
Iteration  19: 100273.790 ops/s
Iteration  20: 105049.722 ops/s
Iteration  21: 102682.392 ops/s
Iteration  22: 105042.320 ops/s
Iteration  23: 100711.612 ops/s
Iteration  24: 104903.825 ops/s
Iteration  25: 100677.589 ops/s
Iteration  26: 104257.252 ops/s
Iteration  27: 106423.279 ops/s
Iteration  28: 99006.482 ops/s
Iteration  29: 107025.432 ops/s
Iteration  30: 98703.146 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_917._Benchmark.benchmark_Cluster_917":
  102799.539 ±(99.9%) 1720.324 ops/s [Average]
  (min, avg, max) = (98703.146, 102799.539, 107025.432), stdev = 2574.900
  CI (99.9%): [101079.216, 104519.863] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_917._Benchmark.benchmark_Cluster_917  thrpt   30  102799.539 ± 1720.324  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_918._Benchmark.benchmark_Cluster_918$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_918._Benchmark.benchmark_Cluster_918

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8420.278 ops/s
# Warmup Iteration   2: 28018.414 ops/s
# Warmup Iteration   3: 57484.206 ops/s
# Warmup Iteration   4: 90691.753 ops/s
# Warmup Iteration   5: 104292.891 ops/s
# Warmup Iteration   6: 101709.845 ops/s
# Warmup Iteration   7: 99236.341 ops/s
# Warmup Iteration   8: 107053.477 ops/s
# Warmup Iteration   9: 101799.731 ops/s
# Warmup Iteration  10: 98875.798 ops/s
# Warmup Iteration  11: 79040.281 ops/s
# Warmup Iteration  12: 101368.410 ops/s
# Warmup Iteration  13: 101650.856 ops/s
# Warmup Iteration  14: 104327.986 ops/s
# Warmup Iteration  15: 98395.290 ops/s
# Warmup Iteration  16: 102943.914 ops/s
# Warmup Iteration  17: 102962.241 ops/s
# Warmup Iteration  18: 104229.921 ops/s
# Warmup Iteration  19: 107336.681 ops/s
# Warmup Iteration  20: 105137.284 ops/s
# Warmup Iteration  21: 108008.295 ops/s
# Warmup Iteration  22: 104116.064 ops/s
# Warmup Iteration  23: 110742.316 ops/s
# Warmup Iteration  24: 104360.990 ops/s
# Warmup Iteration  25: 104914.547 ops/s
# Warmup Iteration  26: 112783.867 ops/s
# Warmup Iteration  27: 103420.438 ops/s
# Warmup Iteration  28: 110937.545 ops/s
# Warmup Iteration  29: 108577.083 ops/s
# Warmup Iteration  30: 103098.516 ops/s
Iteration   1: 109897.002 ops/s
Iteration   2: 103176.610 ops/s
Iteration   3: 108159.299 ops/s
Iteration   4: 103146.946 ops/s
Iteration   5: 104399.594 ops/s
Iteration   6: 108640.158 ops/s
Iteration   7: 102153.759 ops/s
Iteration   8: 109669.751 ops/s
Iteration   9: 103921.492 ops/s
Iteration  10: 108793.057 ops/s
Iteration  11: 104653.187 ops/s
Iteration  12: 103334.179 ops/s
Iteration  13: 105781.350 ops/s
Iteration  14: 104274.005 ops/s
Iteration  15: 108037.746 ops/s
Iteration  16: 111993.580 ops/s
Iteration  17: 106658.805 ops/s
Iteration  18: 108082.175 ops/s
Iteration  19: 106644.984 ops/s
Iteration  20: 108945.821 ops/s
Iteration  21: 109487.998 ops/s
Iteration  22: 104786.330 ops/s
Iteration  23: 109280.902 ops/s
Iteration  24: 103622.383 ops/s
Iteration  25: 108034.299 ops/s
Iteration  26: 109111.976 ops/s
Iteration  27: 107166.937 ops/s
Iteration  28: 106209.187 ops/s
Iteration  29: 109254.906 ops/s
Iteration  30: 105096.905 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_918._Benchmark.benchmark_Cluster_918":
  106747.177 ±(99.9%) 1717.789 ops/s [Average]
  (min, avg, max) = (102153.759, 106747.177, 111993.580), stdev = 2571.107
  CI (99.9%): [105029.388, 108464.967] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_918._Benchmark.benchmark_Cluster_918  thrpt   30  106747.177 ± 1717.789  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_919._Benchmark.benchmark_Cluster_919$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_919._Benchmark.benchmark_Cluster_919

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2116.937 ops/s
# Warmup Iteration   2: 22040.863 ops/s
# Warmup Iteration   3: 31309.207 ops/s
# Warmup Iteration   4: 32357.224 ops/s
# Warmup Iteration   5: 28835.115 ops/s
# Warmup Iteration   6: 42623.865 ops/s
# Warmup Iteration   7: 58445.456 ops/s
# Warmup Iteration   8: 92816.006 ops/s
# Warmup Iteration   9: 85165.022 ops/s
# Warmup Iteration  10: 90474.977 ops/s
# Warmup Iteration  11: 86624.455 ops/s
# Warmup Iteration  12: 89073.417 ops/s
# Warmup Iteration  13: 88808.038 ops/s
# Warmup Iteration  14: 87265.378 ops/s
# Warmup Iteration  15: 92022.148 ops/s
# Warmup Iteration  16: 88733.285 ops/s
# Warmup Iteration  17: 93738.624 ops/s
# Warmup Iteration  18: 88519.284 ops/s
# Warmup Iteration  19: 87603.611 ops/s
# Warmup Iteration  20: 94689.829 ops/s
# Warmup Iteration  21: 94186.747 ops/s
# Warmup Iteration  22: 90906.537 ops/s
# Warmup Iteration  23: 86731.461 ops/s
# Warmup Iteration  24: 91195.156 ops/s
# Warmup Iteration  25: 96310.442 ops/s
# Warmup Iteration  26: 90970.734 ops/s
# Warmup Iteration  27: 94712.095 ops/s
# Warmup Iteration  28: 92911.122 ops/s
# Warmup Iteration  29: 92025.499 ops/s
# Warmup Iteration  30: 93326.602 ops/s
Iteration   1: 91822.921 ops/s
Iteration   2: 95320.482 ops/s
Iteration   3: 89894.115 ops/s
Iteration   4: 91918.453 ops/s
Iteration   5: 94697.606 ops/s
Iteration   6: 91632.911 ops/s
Iteration   7: 94800.499 ops/s
Iteration   8: 91839.727 ops/s
Iteration   9: 95284.329 ops/s
Iteration  10: 94781.987 ops/s
Iteration  11: 91326.918 ops/s
Iteration  12: 95156.174 ops/s
Iteration  13: 90021.420 ops/s
Iteration  14: 91538.211 ops/s
Iteration  15: 92626.904 ops/s
Iteration  16: 93947.451 ops/s
Iteration  17: 93717.666 ops/s
Iteration  18: 91647.382 ops/s
Iteration  19: 97777.039 ops/s
Iteration  20: 95180.699 ops/s
Iteration  21: 93509.130 ops/s
Iteration  22: 97153.484 ops/s
Iteration  23: 92551.015 ops/s
Iteration  24: 94811.993 ops/s
Iteration  25: 92229.860 ops/s
Iteration  26: 92764.052 ops/s
Iteration  27: 93119.384 ops/s
Iteration  28: 93259.161 ops/s
Iteration  29: 95280.056 ops/s
Iteration  30: 90554.182 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_919._Benchmark.benchmark_Cluster_919":
  93338.840 ±(99.9%) 1325.789 ops/s [Average]
  (min, avg, max) = (89894.115, 93338.840, 97777.039), stdev = 1984.379
  CI (99.9%): [92013.051, 94664.629] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_919._Benchmark.benchmark_Cluster_919  thrpt   30  93338.840 ± 1325.789  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_92._Benchmark.benchmark_Cluster_92$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_92._Benchmark.benchmark_Cluster_92

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.703 ops/s
# Warmup Iteration   2: 3098.656 ops/s
# Warmup Iteration   3: 19698.671 ops/s
# Warmup Iteration   4: 29559.333 ops/s
# Warmup Iteration   5: 18345.641 ops/s
# Warmup Iteration   6: 28730.295 ops/s
# Warmup Iteration   7: 27237.323 ops/s
# Warmup Iteration   8: 42458.171 ops/s
# Warmup Iteration   9: 43087.006 ops/s
# Warmup Iteration  10: 39898.191 ops/s
# Warmup Iteration  11: 46359.258 ops/s
# Warmup Iteration  12: 67784.298 ops/s
# Warmup Iteration  13: 99462.265 ops/s
# Warmup Iteration  14: 101153.456 ops/s
# Warmup Iteration  15: 101381.656 ops/s
# Warmup Iteration  16: 103088.727 ops/s
# Warmup Iteration  17: 101986.975 ops/s
# Warmup Iteration  18: 101196.927 ops/s
# Warmup Iteration  19: 101634.955 ops/s
# Warmup Iteration  20: 99857.916 ops/s
# Warmup Iteration  21: 103723.348 ops/s
# Warmup Iteration  22: 100987.559 ops/s
# Warmup Iteration  23: 99797.105 ops/s
# Warmup Iteration  24: 104979.808 ops/s
# Warmup Iteration  25: 98897.940 ops/s
# Warmup Iteration  26: 104368.169 ops/s
# Warmup Iteration  27: 97668.307 ops/s
# Warmup Iteration  28: 104614.875 ops/s
# Warmup Iteration  29: 102030.660 ops/s
# Warmup Iteration  30: 103055.824 ops/s
Iteration   1: 101056.957 ops/s
Iteration   2: 100472.553 ops/s
Iteration   3: 104917.345 ops/s
Iteration   4: 100637.235 ops/s
Iteration   5: 99442.883 ops/s
Iteration   6: 102342.671 ops/s
Iteration   7: 100764.495 ops/s
Iteration   8: 105224.979 ops/s
Iteration   9: 97542.440 ops/s
Iteration  10: 102007.235 ops/s
Iteration  11: 100625.949 ops/s
Iteration  12: 105776.146 ops/s
Iteration  13: 100416.034 ops/s
Iteration  14: 99828.998 ops/s
Iteration  15: 100387.578 ops/s
Iteration  16: 104358.943 ops/s
Iteration  17: 99006.167 ops/s
Iteration  18: 102676.996 ops/s
Iteration  19: 100310.500 ops/s
Iteration  20: 104037.340 ops/s
Iteration  21: 106044.631 ops/s
Iteration  22: 100591.309 ops/s
Iteration  23: 100652.621 ops/s
Iteration  24: 103885.096 ops/s
Iteration  25: 99709.727 ops/s
Iteration  26: 104514.096 ops/s
Iteration  27: 104613.439 ops/s
Iteration  28: 99277.551 ops/s
Iteration  29: 102432.793 ops/s
Iteration  30: 101634.818 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_92._Benchmark.benchmark_Cluster_92":
  101839.651 ±(99.9%) 1514.786 ops/s [Average]
  (min, avg, max) = (97542.440, 101839.651, 106044.631), stdev = 2267.261
  CI (99.9%): [100324.864, 103354.437] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_92._Benchmark.benchmark_Cluster_92  thrpt   30  101839.651 ± 1514.786  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_920._Benchmark.benchmark_Cluster_920$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_920._Benchmark.benchmark_Cluster_920

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14252.735 ops/s
# Warmup Iteration   2: 35499.873 ops/s
# Warmup Iteration   3: 95094.645 ops/s
# Warmup Iteration   4: 129550.083 ops/s
# Warmup Iteration   5: 121752.352 ops/s
# Warmup Iteration   6: 130473.834 ops/s
# Warmup Iteration   7: 131533.763 ops/s
# Warmup Iteration   8: 124826.657 ops/s
# Warmup Iteration   9: 131094.994 ops/s
# Warmup Iteration  10: 108335.534 ops/s
# Warmup Iteration  11: 124171.440 ops/s
# Warmup Iteration  12: 118016.389 ops/s
# Warmup Iteration  13: 127648.349 ops/s
# Warmup Iteration  14: 131783.182 ops/s
# Warmup Iteration  15: 126171.404 ops/s
# Warmup Iteration  16: 128926.626 ops/s
# Warmup Iteration  17: 136933.946 ops/s
# Warmup Iteration  18: 128390.465 ops/s
# Warmup Iteration  19: 135912.391 ops/s
# Warmup Iteration  20: 129377.244 ops/s
# Warmup Iteration  21: 135938.641 ops/s
# Warmup Iteration  22: 134735.322 ops/s
# Warmup Iteration  23: 127216.205 ops/s
# Warmup Iteration  24: 132326.089 ops/s
# Warmup Iteration  25: 130606.645 ops/s
# Warmup Iteration  26: 133486.803 ops/s
# Warmup Iteration  27: 130888.879 ops/s
# Warmup Iteration  28: 128344.027 ops/s
# Warmup Iteration  29: 133742.859 ops/s
# Warmup Iteration  30: 128949.931 ops/s
Iteration   1: 133869.374 ops/s
Iteration   2: 132231.315 ops/s
Iteration   3: 131149.710 ops/s
Iteration   4: 134273.490 ops/s
Iteration   5: 127139.075 ops/s
Iteration   6: 135562.648 ops/s
Iteration   7: 126476.883 ops/s
Iteration   8: 132764.729 ops/s
Iteration   9: 131632.984 ops/s
Iteration  10: 132105.340 ops/s
Iteration  11: 131865.162 ops/s
Iteration  12: 132687.546 ops/s
Iteration  13: 135978.857 ops/s
Iteration  14: 133596.928 ops/s
Iteration  15: 134982.165 ops/s
Iteration  16: 130928.472 ops/s
Iteration  17: 133626.022 ops/s
Iteration  18: 134998.768 ops/s
Iteration  19: 128165.684 ops/s
Iteration  20: 134285.632 ops/s
Iteration  21: 135582.964 ops/s
Iteration  22: 127418.337 ops/s
Iteration  23: 134461.216 ops/s
Iteration  24: 124400.576 ops/s
Iteration  25: 136122.223 ops/s
Iteration  26: 126753.691 ops/s
Iteration  27: 138126.330 ops/s
Iteration  28: 131531.748 ops/s
Iteration  29: 129094.748 ops/s
Iteration  30: 135628.501 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_920._Benchmark.benchmark_Cluster_920":
  132248.037 ±(99.9%) 2278.010 ops/s [Average]
  (min, avg, max) = (124400.576, 132248.037, 138126.330), stdev = 3409.618
  CI (99.9%): [129970.027, 134526.047] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_920._Benchmark.benchmark_Cluster_920  thrpt   30  132248.037 ± 2278.010  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_921._Benchmark.benchmark_Cluster_921$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_921._Benchmark.benchmark_Cluster_921

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15491.457 ops/s
# Warmup Iteration   2: 41196.023 ops/s
# Warmup Iteration   3: 90796.809 ops/s
# Warmup Iteration   4: 103839.155 ops/s
# Warmup Iteration   5: 117407.477 ops/s
# Warmup Iteration   6: 113624.113 ops/s
# Warmup Iteration   7: 110743.519 ops/s
# Warmup Iteration   8: 115166.455 ops/s
# Warmup Iteration   9: 113067.076 ops/s
# Warmup Iteration  10: 111071.152 ops/s
# Warmup Iteration  11: 114413.494 ops/s
# Warmup Iteration  12: 112553.172 ops/s
# Warmup Iteration  13: 105248.536 ops/s
# Warmup Iteration  14: 113390.355 ops/s
# Warmup Iteration  15: 113783.842 ops/s
# Warmup Iteration  16: 118117.546 ops/s
# Warmup Iteration  17: 119674.490 ops/s
# Warmup Iteration  18: 116166.434 ops/s
# Warmup Iteration  19: 121520.281 ops/s
# Warmup Iteration  20: 121154.189 ops/s
# Warmup Iteration  21: 115795.349 ops/s
# Warmup Iteration  22: 115813.579 ops/s
# Warmup Iteration  23: 117504.103 ops/s
# Warmup Iteration  24: 115272.380 ops/s
# Warmup Iteration  25: 121911.150 ops/s
# Warmup Iteration  26: 114975.187 ops/s
# Warmup Iteration  27: 114349.276 ops/s
# Warmup Iteration  28: 115748.471 ops/s
# Warmup Iteration  29: 116806.386 ops/s
# Warmup Iteration  30: 120246.860 ops/s
Iteration   1: 117330.890 ops/s
Iteration   2: 120084.953 ops/s
Iteration   3: 115517.444 ops/s
Iteration   4: 123260.125 ops/s
Iteration   5: 120911.260 ops/s
Iteration   6: 114649.218 ops/s
Iteration   7: 119191.513 ops/s
Iteration   8: 122216.941 ops/s
Iteration   9: 116358.978 ops/s
Iteration  10: 121294.688 ops/s
Iteration  11: 118812.111 ops/s
Iteration  12: 118960.007 ops/s
Iteration  13: 120634.340 ops/s
Iteration  14: 116825.342 ops/s
Iteration  15: 118651.314 ops/s
Iteration  16: 121361.520 ops/s
Iteration  17: 117366.921 ops/s
Iteration  18: 121223.344 ops/s
Iteration  19: 118575.172 ops/s
Iteration  20: 119400.742 ops/s
Iteration  21: 117831.324 ops/s
Iteration  22: 117877.802 ops/s
Iteration  23: 119554.944 ops/s
Iteration  24: 115355.778 ops/s
Iteration  25: 123428.282 ops/s
Iteration  26: 112270.265 ops/s
Iteration  27: 122891.587 ops/s
Iteration  28: 116794.396 ops/s
Iteration  29: 125202.635 ops/s
Iteration  30: 113976.921 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_921._Benchmark.benchmark_Cluster_921":
  118927.025 ±(99.9%) 2020.404 ops/s [Average]
  (min, avg, max) = (112270.265, 118927.025, 125202.635), stdev = 3024.046
  CI (99.9%): [116906.621, 120947.429] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_921._Benchmark.benchmark_Cluster_921  thrpt   30  118927.025 ± 2020.404  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_922._Benchmark.benchmark_Cluster_922$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_922._Benchmark.benchmark_Cluster_922

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 23200.829 ops/s
# Warmup Iteration   2: 91654.247 ops/s
# Warmup Iteration   3: 90666.438 ops/s
# Warmup Iteration   4: 119300.741 ops/s
# Warmup Iteration   5: 115021.626 ops/s
# Warmup Iteration   6: 117113.594 ops/s
# Warmup Iteration   7: 119596.261 ops/s
# Warmup Iteration   8: 118658.797 ops/s
# Warmup Iteration   9: 112945.970 ops/s
# Warmup Iteration  10: 115730.437 ops/s
# Warmup Iteration  11: 117997.422 ops/s
# Warmup Iteration  12: 117239.244 ops/s
# Warmup Iteration  13: 115259.950 ops/s
# Warmup Iteration  14: 119356.694 ops/s
# Warmup Iteration  15: 116386.969 ops/s
# Warmup Iteration  16: 115880.975 ops/s
# Warmup Iteration  17: 124377.002 ops/s
# Warmup Iteration  18: 118828.171 ops/s
# Warmup Iteration  19: 119991.913 ops/s
# Warmup Iteration  20: 118184.327 ops/s
# Warmup Iteration  21: 121040.940 ops/s
# Warmup Iteration  22: 127070.042 ops/s
# Warmup Iteration  23: 121081.435 ops/s
# Warmup Iteration  24: 123391.271 ops/s
# Warmup Iteration  25: 123967.371 ops/s
# Warmup Iteration  26: 120484.071 ops/s
# Warmup Iteration  27: 125169.601 ops/s
# Warmup Iteration  28: 118985.067 ops/s
# Warmup Iteration  29: 124442.786 ops/s
# Warmup Iteration  30: 121572.856 ops/s
Iteration   1: 121569.511 ops/s
Iteration   2: 123032.899 ops/s
Iteration   3: 122441.898 ops/s
Iteration   4: 125058.108 ops/s
Iteration   5: 121897.257 ops/s
Iteration   6: 122311.613 ops/s
Iteration   7: 123974.770 ops/s
Iteration   8: 119028.850 ops/s
Iteration   9: 127064.985 ops/s
Iteration  10: 121888.655 ops/s
Iteration  11: 126031.906 ops/s
Iteration  12: 119628.421 ops/s
Iteration  13: 124375.559 ops/s
Iteration  14: 124639.622 ops/s
Iteration  15: 118588.520 ops/s
Iteration  16: 122146.068 ops/s
Iteration  17: 121542.578 ops/s
Iteration  18: 126461.364 ops/s
Iteration  19: 117387.449 ops/s
Iteration  20: 121376.300 ops/s
Iteration  21: 126504.924 ops/s
Iteration  22: 123074.475 ops/s
Iteration  23: 119283.784 ops/s
Iteration  24: 119922.454 ops/s
Iteration  25: 123280.034 ops/s
Iteration  26: 100277.158 ops/s
Iteration  27: 124957.998 ops/s
Iteration  28: 118229.420 ops/s
Iteration  29: 121862.459 ops/s
Iteration  30: 125539.208 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_922._Benchmark.benchmark_Cluster_922":
  121779.275 ±(99.9%) 3230.335 ops/s [Average]
  (min, avg, max) = (100277.158, 121779.275, 127064.985), stdev = 4835.014
  CI (99.9%): [118548.940, 125009.610] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_922._Benchmark.benchmark_Cluster_922  thrpt   30  121779.275 ± 3230.335  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_923._Benchmark.benchmark_Cluster_923$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_923._Benchmark.benchmark_Cluster_923

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 14041.297 ops/s
# Warmup Iteration   2: 22973.460 ops/s
# Warmup Iteration   3: 88843.597 ops/s
# Warmup Iteration   4: 88180.753 ops/s
# Warmup Iteration   5: 96630.311 ops/s
# Warmup Iteration   6: 106043.966 ops/s
# Warmup Iteration   7: 106490.549 ops/s
# Warmup Iteration   8: 111209.560 ops/s
# Warmup Iteration   9: 111866.164 ops/s
# Warmup Iteration  10: 104111.062 ops/s
# Warmup Iteration  11: 108659.301 ops/s
# Warmup Iteration  12: 108533.204 ops/s
# Warmup Iteration  13: 106346.447 ops/s
# Warmup Iteration  14: 104938.115 ops/s
# Warmup Iteration  15: 109869.367 ops/s
# Warmup Iteration  16: 103618.298 ops/s
# Warmup Iteration  17: 112193.781 ops/s
# Warmup Iteration  18: 106819.335 ops/s
# Warmup Iteration  19: 111875.754 ops/s
# Warmup Iteration  20: 110221.298 ops/s
# Warmup Iteration  21: 109180.129 ops/s
# Warmup Iteration  22: 112851.603 ops/s
# Warmup Iteration  23: 107098.197 ops/s
# Warmup Iteration  24: 113484.469 ops/s
# Warmup Iteration  25: 115248.749 ops/s
# Warmup Iteration  26: 108035.868 ops/s
# Warmup Iteration  27: 112290.465 ops/s
# Warmup Iteration  28: 108780.711 ops/s
# Warmup Iteration  29: 116588.353 ops/s
# Warmup Iteration  30: 105890.685 ops/s
Iteration   1: 112351.620 ops/s
Iteration   2: 109779.122 ops/s
Iteration   3: 111807.582 ops/s
Iteration   4: 108333.657 ops/s
Iteration   5: 112448.867 ops/s
Iteration   6: 115414.962 ops/s
Iteration   7: 104399.130 ops/s
Iteration   8: 116197.066 ops/s
Iteration   9: 115816.271 ops/s
Iteration  10: 106218.213 ops/s
Iteration  11: 112369.898 ops/s
Iteration  12: 114015.485 ops/s
Iteration  13: 108029.008 ops/s
Iteration  14: 108074.963 ops/s
Iteration  15: 113403.902 ops/s
Iteration  16: 109398.800 ops/s
Iteration  17: 113160.427 ops/s
Iteration  18: 112490.048 ops/s
Iteration  19: 111585.965 ops/s
Iteration  20: 113682.056 ops/s
Iteration  21: 112999.709 ops/s
Iteration  22: 104926.655 ops/s
Iteration  23: 113015.369 ops/s
Iteration  24: 109125.865 ops/s
Iteration  25: 112496.041 ops/s
Iteration  26: 112152.379 ops/s
Iteration  27: 110598.047 ops/s
Iteration  28: 113845.711 ops/s
Iteration  29: 109001.929 ops/s
Iteration  30: 112006.415 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_923._Benchmark.benchmark_Cluster_923":
  111304.839 ±(99.9%) 2011.751 ops/s [Average]
  (min, avg, max) = (104399.130, 111304.839, 116197.066), stdev = 3011.095
  CI (99.9%): [109293.087, 113316.590] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_923._Benchmark.benchmark_Cluster_923  thrpt   30  111304.839 ± 2011.751  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_924._Benchmark.benchmark_Cluster_924$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_924._Benchmark.benchmark_Cluster_924

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9879.929 ops/s
# Warmup Iteration   2: 40934.990 ops/s
# Warmup Iteration   3: 47059.673 ops/s
# Warmup Iteration   4: 83584.217 ops/s
# Warmup Iteration   5: 99935.748 ops/s
# Warmup Iteration   6: 98057.288 ops/s
# Warmup Iteration   7: 113126.788 ops/s
# Warmup Iteration   8: 111831.758 ops/s
# Warmup Iteration   9: 114362.693 ops/s
# Warmup Iteration  10: 106924.838 ops/s
# Warmup Iteration  11: 108566.125 ops/s
# Warmup Iteration  12: 113302.604 ops/s
# Warmup Iteration  13: 110815.427 ops/s
# Warmup Iteration  14: 112444.656 ops/s
# Warmup Iteration  15: 113284.289 ops/s
# Warmup Iteration  16: 107477.095 ops/s
# Warmup Iteration  17: 111899.825 ops/s
# Warmup Iteration  18: 112334.524 ops/s
# Warmup Iteration  19: 106482.799 ops/s
# Warmup Iteration  20: 111390.279 ops/s
# Warmup Iteration  21: 112037.930 ops/s
# Warmup Iteration  22: 109279.223 ops/s
# Warmup Iteration  23: 107258.502 ops/s
# Warmup Iteration  24: 115316.269 ops/s
# Warmup Iteration  25: 111817.989 ops/s
# Warmup Iteration  26: 110450.267 ops/s
# Warmup Iteration  27: 112015.233 ops/s
# Warmup Iteration  28: 111509.780 ops/s
# Warmup Iteration  29: 107571.215 ops/s
# Warmup Iteration  30: 111085.302 ops/s
Iteration   1: 108608.350 ops/s
Iteration   2: 114242.572 ops/s
Iteration   3: 112905.508 ops/s
Iteration   4: 108233.590 ops/s
Iteration   5: 108657.255 ops/s
Iteration   6: 113534.855 ops/s
Iteration   7: 111787.057 ops/s
Iteration   8: 107578.320 ops/s
Iteration   9: 113576.623 ops/s
Iteration  10: 111971.315 ops/s
Iteration  11: 108304.731 ops/s
Iteration  12: 109831.098 ops/s
Iteration  13: 109894.622 ops/s
Iteration  14: 113556.399 ops/s
Iteration  15: 110818.737 ops/s
Iteration  16: 106302.207 ops/s
Iteration  17: 112272.735 ops/s
Iteration  18: 107910.315 ops/s
Iteration  19: 112459.445 ops/s
Iteration  20: 86239.931 ops/s
Iteration  21: 110350.799 ops/s
Iteration  22: 111942.059 ops/s
Iteration  23: 108285.267 ops/s
Iteration  24: 114029.619 ops/s
Iteration  25: 107068.016 ops/s
Iteration  26: 113400.778 ops/s
Iteration  27: 108362.973 ops/s
Iteration  28: 111261.557 ops/s
Iteration  29: 114367.015 ops/s
Iteration  30: 108760.518 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_924._Benchmark.benchmark_Cluster_924":
  109883.809 ±(99.9%) 3396.015 ops/s [Average]
  (min, avg, max) = (86239.931, 109883.809, 114367.015), stdev = 5082.995
  CI (99.9%): [106487.794, 113279.824] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_924._Benchmark.benchmark_Cluster_924  thrpt   30  109883.809 ± 3396.015  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_925._Benchmark.benchmark_Cluster_925$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_925._Benchmark.benchmark_Cluster_925

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.732 ops/s
# Warmup Iteration   2: 5588.709 ops/s
# Warmup Iteration   3: 22169.413 ops/s
# Warmup Iteration   4: 25448.895 ops/s
# Warmup Iteration   5: 28890.781 ops/s
# Warmup Iteration   6: 28121.718 ops/s
# Warmup Iteration   7: 30003.936 ops/s
# Warmup Iteration   8: 38610.175 ops/s
# Warmup Iteration   9: 28237.406 ops/s
# Warmup Iteration  10: 31885.148 ops/s
# Warmup Iteration  11: 40416.470 ops/s
# Warmup Iteration  12: 82439.684 ops/s
# Warmup Iteration  13: 93798.662 ops/s
# Warmup Iteration  14: 95144.486 ops/s
# Warmup Iteration  15: 96767.011 ops/s
# Warmup Iteration  16: 97860.220 ops/s
# Warmup Iteration  17: 99399.329 ops/s
# Warmup Iteration  18: 95838.930 ops/s
# Warmup Iteration  19: 100497.132 ops/s
# Warmup Iteration  20: 99388.461 ops/s
# Warmup Iteration  21: 95302.547 ops/s
# Warmup Iteration  22: 98427.654 ops/s
# Warmup Iteration  23: 96529.376 ops/s
# Warmup Iteration  24: 95443.312 ops/s
# Warmup Iteration  25: 89573.593 ops/s
# Warmup Iteration  26: 102204.059 ops/s
# Warmup Iteration  27: 98995.629 ops/s
# Warmup Iteration  28: 97267.415 ops/s
# Warmup Iteration  29: 100777.658 ops/s
# Warmup Iteration  30: 97263.690 ops/s
Iteration   1: 102035.969 ops/s
Iteration   2: 98583.043 ops/s
Iteration   3: 96966.127 ops/s
Iteration   4: 99506.825 ops/s
Iteration   5: 95524.813 ops/s
Iteration   6: 99342.523 ops/s
Iteration   7: 96858.162 ops/s
Iteration   8: 97947.332 ops/s
Iteration   9: 99069.585 ops/s
Iteration  10: 100985.050 ops/s
Iteration  11: 94824.111 ops/s
Iteration  12: 99075.903 ops/s
Iteration  13: 97967.159 ops/s
Iteration  14: 99004.545 ops/s
Iteration  15: 98795.642 ops/s
Iteration  16: 91624.874 ops/s
Iteration  17: 98795.497 ops/s
Iteration  18: 102033.529 ops/s
Iteration  19: 95372.759 ops/s
Iteration  20: 102074.879 ops/s
Iteration  21: 97723.043 ops/s
Iteration  22: 95906.047 ops/s
Iteration  23: 103967.076 ops/s
Iteration  24: 97723.634 ops/s
Iteration  25: 96573.984 ops/s
Iteration  26: 99942.590 ops/s
Iteration  27: 98244.329 ops/s
Iteration  28: 102431.102 ops/s
Iteration  29: 101530.442 ops/s
Iteration  30: 97236.438 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_925._Benchmark.benchmark_Cluster_925":
  98588.901 ±(99.9%) 1761.053 ops/s [Average]
  (min, avg, max) = (91624.874, 98588.901, 103967.076), stdev = 2635.861
  CI (99.9%): [96827.848, 100349.953] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_925._Benchmark.benchmark_Cluster_925  thrpt   30  98588.901 ± 1761.053  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_926._Benchmark.benchmark_Cluster_926$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_926._Benchmark.benchmark_Cluster_926

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15715.730 ops/s
# Warmup Iteration   2: 31583.374 ops/s
# Warmup Iteration   3: 73360.815 ops/s
# Warmup Iteration   4: 86480.822 ops/s
# Warmup Iteration   5: 95419.617 ops/s
# Warmup Iteration   6: 96143.397 ops/s
# Warmup Iteration   7: 100986.602 ops/s
# Warmup Iteration   8: 95776.721 ops/s
# Warmup Iteration   9: 96117.091 ops/s
# Warmup Iteration  10: 102533.415 ops/s
# Warmup Iteration  11: 93098.416 ops/s
# Warmup Iteration  12: 100577.099 ops/s
# Warmup Iteration  13: 94084.469 ops/s
# Warmup Iteration  14: 98248.683 ops/s
# Warmup Iteration  15: 100821.065 ops/s
# Warmup Iteration  16: 97435.870 ops/s
# Warmup Iteration  17: 104732.232 ops/s
# Warmup Iteration  18: 106581.244 ops/s
# Warmup Iteration  19: 103133.985 ops/s
# Warmup Iteration  20: 99538.426 ops/s
# Warmup Iteration  21: 105798.016 ops/s
# Warmup Iteration  22: 103324.471 ops/s
# Warmup Iteration  23: 93874.218 ops/s
# Warmup Iteration  24: 105473.874 ops/s
# Warmup Iteration  25: 93763.183 ops/s
# Warmup Iteration  26: 105430.838 ops/s
# Warmup Iteration  27: 104356.290 ops/s
# Warmup Iteration  28: 103245.542 ops/s
# Warmup Iteration  29: 103419.822 ops/s
# Warmup Iteration  30: 99068.617 ops/s
Iteration   1: 100905.167 ops/s
Iteration   2: 103519.812 ops/s
Iteration   3: 105982.926 ops/s
Iteration   4: 100077.551 ops/s
Iteration   5: 104658.529 ops/s
Iteration   6: 107560.724 ops/s
Iteration   7: 100038.686 ops/s
Iteration   8: 104705.224 ops/s
Iteration   9: 102276.995 ops/s
Iteration  10: 103128.153 ops/s
Iteration  11: 107790.611 ops/s
Iteration  12: 99397.025 ops/s
Iteration  13: 103773.157 ops/s
Iteration  14: 98598.512 ops/s
Iteration  15: 89158.138 ops/s
Iteration  16: 105322.390 ops/s
Iteration  17: 100990.606 ops/s
Iteration  18: 104540.260 ops/s
Iteration  19: 100354.937 ops/s
Iteration  20: 102625.936 ops/s
Iteration  21: 105006.517 ops/s
Iteration  22: 100401.610 ops/s
Iteration  23: 107277.820 ops/s
Iteration  24: 100176.013 ops/s
Iteration  25: 106587.491 ops/s
Iteration  26: 104544.682 ops/s
Iteration  27: 98231.708 ops/s
Iteration  28: 102206.869 ops/s
Iteration  29: 103991.064 ops/s
Iteration  30: 99951.522 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_926._Benchmark.benchmark_Cluster_926":
  102459.355 ±(99.9%) 2485.908 ops/s [Average]
  (min, avg, max) = (89158.138, 102459.355, 107790.611), stdev = 3720.791
  CI (99.9%): [99973.446, 104945.263] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_926._Benchmark.benchmark_Cluster_926  thrpt   30  102459.355 ± 2485.908  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_927._Benchmark.benchmark_Cluster_927$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_927._Benchmark.benchmark_Cluster_927

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10181.748 ops/s
# Warmup Iteration   2: 47279.201 ops/s
# Warmup Iteration   3: 48993.563 ops/s
# Warmup Iteration   4: 108757.395 ops/s
# Warmup Iteration   5: 144053.366 ops/s
# Warmup Iteration   6: 139265.339 ops/s
# Warmup Iteration   7: 142345.906 ops/s
# Warmup Iteration   8: 142471.708 ops/s
# Warmup Iteration   9: 141355.166 ops/s
# Warmup Iteration  10: 136950.284 ops/s
# Warmup Iteration  11: 143479.703 ops/s
# Warmup Iteration  12: 136946.763 ops/s
# Warmup Iteration  13: 142169.780 ops/s
# Warmup Iteration  14: 141633.737 ops/s
# Warmup Iteration  15: 140743.451 ops/s
# Warmup Iteration  16: 142085.451 ops/s
# Warmup Iteration  17: 142658.599 ops/s
# Warmup Iteration  18: 143621.176 ops/s
# Warmup Iteration  19: 145697.740 ops/s
# Warmup Iteration  20: 149041.459 ops/s
# Warmup Iteration  21: 141165.132 ops/s
# Warmup Iteration  22: 146532.579 ops/s
# Warmup Iteration  23: 145240.026 ops/s
# Warmup Iteration  24: 139773.585 ops/s
# Warmup Iteration  25: 142197.239 ops/s
# Warmup Iteration  26: 141376.753 ops/s
# Warmup Iteration  27: 147439.233 ops/s
# Warmup Iteration  28: 152655.253 ops/s
# Warmup Iteration  29: 144082.999 ops/s
# Warmup Iteration  30: 149932.013 ops/s
Iteration   1: 148754.017 ops/s
Iteration   2: 145405.919 ops/s
Iteration   3: 151579.910 ops/s
Iteration   4: 144111.394 ops/s
Iteration   5: 146617.724 ops/s
Iteration   6: 142554.202 ops/s
Iteration   7: 148483.347 ops/s
Iteration   8: 153569.485 ops/s
Iteration   9: 147024.972 ops/s
Iteration  10: 141259.558 ops/s
Iteration  11: 153131.203 ops/s
Iteration  12: 145242.288 ops/s
Iteration  13: 144884.804 ops/s
Iteration  14: 152265.766 ops/s
Iteration  15: 150792.792 ops/s
Iteration  16: 143433.645 ops/s
Iteration  17: 154681.113 ops/s
Iteration  18: 143802.883 ops/s
Iteration  19: 147480.074 ops/s
Iteration  20: 153859.858 ops/s
Iteration  21: 142847.552 ops/s
Iteration  22: 150815.994 ops/s
Iteration  23: 146018.146 ops/s
Iteration  24: 147970.700 ops/s
Iteration  25: 148745.712 ops/s
Iteration  26: 150446.432 ops/s
Iteration  27: 144777.671 ops/s
Iteration  28: 148737.920 ops/s
Iteration  29: 150430.820 ops/s
Iteration  30: 147934.481 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_927._Benchmark.benchmark_Cluster_927":
  147922.013 ±(99.9%) 2460.732 ops/s [Average]
  (min, avg, max) = (141259.558, 147922.013, 154681.113), stdev = 3683.108
  CI (99.9%): [145461.281, 150382.745] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_927._Benchmark.benchmark_Cluster_927  thrpt   30  147922.013 ± 2460.732  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_928._Benchmark.benchmark_Cluster_928$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_928._Benchmark.benchmark_Cluster_928

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.622 ops/s
# Warmup Iteration   2: 3955.374 ops/s
# Warmup Iteration   3: 23870.372 ops/s
# Warmup Iteration   4: 24268.623 ops/s
# Warmup Iteration   5: 28458.237 ops/s
# Warmup Iteration   6: 30129.943 ops/s
# Warmup Iteration   7: 36893.306 ops/s
# Warmup Iteration   8: 44723.669 ops/s
# Warmup Iteration   9: 62112.362 ops/s
# Warmup Iteration  10: 52250.569 ops/s
# Warmup Iteration  11: 92780.615 ops/s
# Warmup Iteration  12: 115924.167 ops/s
# Warmup Iteration  13: 120385.357 ops/s
# Warmup Iteration  14: 122786.558 ops/s
# Warmup Iteration  15: 115826.643 ops/s
# Warmup Iteration  16: 122576.124 ops/s
# Warmup Iteration  17: 116511.526 ops/s
# Warmup Iteration  18: 122068.820 ops/s
# Warmup Iteration  19: 117245.540 ops/s
# Warmup Iteration  20: 118994.616 ops/s
# Warmup Iteration  21: 120410.571 ops/s
# Warmup Iteration  22: 116508.663 ops/s
# Warmup Iteration  23: 122874.971 ops/s
# Warmup Iteration  24: 122209.636 ops/s
# Warmup Iteration  25: 119480.553 ops/s
# Warmup Iteration  26: 119089.574 ops/s
# Warmup Iteration  27: 121182.533 ops/s
# Warmup Iteration  28: 116631.138 ops/s
# Warmup Iteration  29: 115598.026 ops/s
# Warmup Iteration  30: 119654.801 ops/s
Iteration   1: 118121.393 ops/s
Iteration   2: 125441.113 ops/s
Iteration   3: 118180.462 ops/s
Iteration   4: 122621.645 ops/s
Iteration   5: 122010.020 ops/s
Iteration   6: 123247.164 ops/s
Iteration   7: 123855.168 ops/s
Iteration   8: 92888.593 ops/s
Iteration   9: 123710.420 ops/s
Iteration  10: 119529.732 ops/s
Iteration  11: 125949.188 ops/s
Iteration  12: 121221.845 ops/s
Iteration  13: 119239.174 ops/s
Iteration  14: 121815.988 ops/s
Iteration  15: 122382.010 ops/s
Iteration  16: 119759.737 ops/s
Iteration  17: 120943.008 ops/s
Iteration  18: 124699.279 ops/s
Iteration  19: 117211.368 ops/s
Iteration  20: 119176.428 ops/s
Iteration  21: 116446.583 ops/s
Iteration  22: 125060.402 ops/s
Iteration  23: 118973.058 ops/s
Iteration  24: 123986.255 ops/s
Iteration  25: 119448.952 ops/s
Iteration  26: 122354.813 ops/s
Iteration  27: 123633.448 ops/s
Iteration  28: 117706.451 ops/s
Iteration  29: 122858.572 ops/s
Iteration  30: 123482.297 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_928._Benchmark.benchmark_Cluster_928":
  120531.819 ±(99.9%) 3905.612 ops/s [Average]
  (min, avg, max) = (92888.593, 120531.819, 125949.188), stdev = 5845.737
  CI (99.9%): [116626.207, 124437.431] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_928._Benchmark.benchmark_Cluster_928  thrpt   30  120531.819 ± 3905.612  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_929._Benchmark.benchmark_Cluster_929$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_929._Benchmark.benchmark_Cluster_929

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5837.584 ops/s
# Warmup Iteration   2: 25975.657 ops/s
# Warmup Iteration   3: 47148.712 ops/s
# Warmup Iteration   4: 99072.875 ops/s
# Warmup Iteration   5: 110170.177 ops/s
# Warmup Iteration   6: 109825.829 ops/s
# Warmup Iteration   7: 108551.205 ops/s
# Warmup Iteration   8: 109897.453 ops/s
# Warmup Iteration   9: 109858.368 ops/s
# Warmup Iteration  10: 110319.610 ops/s
# Warmup Iteration  11: 112335.830 ops/s
# Warmup Iteration  12: 116827.277 ops/s
# Warmup Iteration  13: 111276.802 ops/s
# Warmup Iteration  14: 119181.989 ops/s
# Warmup Iteration  15: 113432.517 ops/s
# Warmup Iteration  16: 108909.649 ops/s
# Warmup Iteration  17: 121779.618 ops/s
# Warmup Iteration  18: 115659.930 ops/s
# Warmup Iteration  19: 126255.411 ops/s
# Warmup Iteration  20: 115623.530 ops/s
# Warmup Iteration  21: 119477.613 ops/s
# Warmup Iteration  22: 118183.608 ops/s
# Warmup Iteration  23: 116462.476 ops/s
# Warmup Iteration  24: 122967.361 ops/s
# Warmup Iteration  25: 119172.495 ops/s
# Warmup Iteration  26: 117537.073 ops/s
# Warmup Iteration  27: 122549.806 ops/s
# Warmup Iteration  28: 115955.139 ops/s
# Warmup Iteration  29: 120671.991 ops/s
# Warmup Iteration  30: 123583.617 ops/s
Iteration   1: 116702.461 ops/s
Iteration   2: 122935.256 ops/s
Iteration   3: 114329.535 ops/s
Iteration   4: 119788.938 ops/s
Iteration   5: 115636.772 ops/s
Iteration   6: 119947.296 ops/s
Iteration   7: 125917.454 ops/s
Iteration   8: 115811.190 ops/s
Iteration   9: 118029.245 ops/s
Iteration  10: 126369.767 ops/s
Iteration  11: 115249.526 ops/s
Iteration  12: 124886.405 ops/s
Iteration  13: 117047.854 ops/s
Iteration  14: 118024.967 ops/s
Iteration  15: 119596.659 ops/s
Iteration  16: 120791.999 ops/s
Iteration  17: 117000.592 ops/s
Iteration  18: 119735.591 ops/s
Iteration  19: 115709.116 ops/s
Iteration  20: 123559.679 ops/s
Iteration  21: 119973.046 ops/s
Iteration  22: 121424.788 ops/s
Iteration  23: 116877.272 ops/s
Iteration  24: 121825.153 ops/s
Iteration  25: 122730.892 ops/s
Iteration  26: 114658.906 ops/s
Iteration  27: 119544.496 ops/s
Iteration  28: 116872.583 ops/s
Iteration  29: 120105.697 ops/s
Iteration  30: 124021.475 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_929._Benchmark.benchmark_Cluster_929":
  119503.487 ±(99.9%) 2279.641 ops/s [Average]
  (min, avg, max) = (114329.535, 119503.487, 126369.767), stdev = 3412.060
  CI (99.9%): [117223.846, 121783.128] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_929._Benchmark.benchmark_Cluster_929  thrpt   30  119503.487 ± 2279.641  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_93._Benchmark.benchmark_Cluster_93$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_93._Benchmark.benchmark_Cluster_93

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5723.955 ops/s
# Warmup Iteration   2: 30829.188 ops/s
# Warmup Iteration   3: 70894.348 ops/s
# Warmup Iteration   4: 96693.044 ops/s
# Warmup Iteration   5: 110649.828 ops/s
# Warmup Iteration   6: 106121.032 ops/s
# Warmup Iteration   7: 115960.884 ops/s
# Warmup Iteration   8: 111053.008 ops/s
# Warmup Iteration   9: 112311.753 ops/s
# Warmup Iteration  10: 118358.362 ops/s
# Warmup Iteration  11: 109707.252 ops/s
# Warmup Iteration  12: 116998.081 ops/s
# Warmup Iteration  13: 115362.063 ops/s
# Warmup Iteration  14: 118167.744 ops/s
# Warmup Iteration  15: 104307.316 ops/s
# Warmup Iteration  16: 112664.465 ops/s
# Warmup Iteration  17: 114126.457 ops/s
# Warmup Iteration  18: 114949.727 ops/s
# Warmup Iteration  19: 118823.189 ops/s
# Warmup Iteration  20: 113997.994 ops/s
# Warmup Iteration  21: 119380.661 ops/s
# Warmup Iteration  22: 115816.795 ops/s
# Warmup Iteration  23: 110159.864 ops/s
# Warmup Iteration  24: 116845.522 ops/s
# Warmup Iteration  25: 119495.271 ops/s
# Warmup Iteration  26: 110414.027 ops/s
# Warmup Iteration  27: 115952.741 ops/s
# Warmup Iteration  28: 117557.892 ops/s
# Warmup Iteration  29: 115266.554 ops/s
# Warmup Iteration  30: 119233.346 ops/s
Iteration   1: 114220.833 ops/s
Iteration   2: 93710.989 ops/s
Iteration   3: 116072.700 ops/s
Iteration   4: 117214.019 ops/s
Iteration   5: 110797.584 ops/s
Iteration   6: 118377.076 ops/s
Iteration   7: 116652.461 ops/s
Iteration   8: 114392.102 ops/s
Iteration   9: 117382.135 ops/s
Iteration  10: 111072.790 ops/s
Iteration  11: 115753.694 ops/s
Iteration  12: 112080.232 ops/s
Iteration  13: 117591.185 ops/s
Iteration  14: 111439.335 ops/s
Iteration  15: 110835.590 ops/s
Iteration  16: 118570.017 ops/s
Iteration  17: 110929.462 ops/s
Iteration  18: 117058.290 ops/s
Iteration  19: 111430.581 ops/s
Iteration  20: 113065.979 ops/s
Iteration  21: 116511.082 ops/s
Iteration  22: 112265.962 ops/s
Iteration  23: 117373.169 ops/s
Iteration  24: 112900.767 ops/s
Iteration  25: 114429.265 ops/s
Iteration  26: 113123.587 ops/s
Iteration  27: 115380.581 ops/s
Iteration  28: 114618.471 ops/s
Iteration  29: 113032.655 ops/s
Iteration  30: 117040.254 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_93._Benchmark.benchmark_Cluster_93":
  113844.095 ±(99.9%) 3041.219 ops/s [Average]
  (min, avg, max) = (93710.989, 113844.095, 118570.017), stdev = 4551.953
  CI (99.9%): [110802.876, 116885.313] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_93._Benchmark.benchmark_Cluster_93  thrpt   30  113844.095 ± 3041.219  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_930._Benchmark.benchmark_Cluster_930$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_930._Benchmark.benchmark_Cluster_930

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5127.239 ops/s
# Warmup Iteration   2: 30499.425 ops/s
# Warmup Iteration   3: 29468.790 ops/s
# Warmup Iteration   4: 31241.224 ops/s
# Warmup Iteration   5: 32676.392 ops/s
# Warmup Iteration   6: 35168.126 ops/s
# Warmup Iteration   7: 78505.981 ops/s
# Warmup Iteration   8: 99004.680 ops/s
# Warmup Iteration   9: 103756.715 ops/s
# Warmup Iteration  10: 99358.893 ops/s
# Warmup Iteration  11: 100925.321 ops/s
# Warmup Iteration  12: 105238.609 ops/s
# Warmup Iteration  13: 102671.206 ops/s
# Warmup Iteration  14: 106008.234 ops/s
# Warmup Iteration  15: 100641.885 ops/s
# Warmup Iteration  16: 104743.426 ops/s
# Warmup Iteration  17: 110769.257 ops/s
# Warmup Iteration  18: 107321.307 ops/s
# Warmup Iteration  19: 107732.563 ops/s
# Warmup Iteration  20: 114349.709 ops/s
# Warmup Iteration  21: 106504.124 ops/s
# Warmup Iteration  22: 104035.799 ops/s
# Warmup Iteration  23: 112370.835 ops/s
# Warmup Iteration  24: 108288.522 ops/s
# Warmup Iteration  25: 102781.300 ops/s
# Warmup Iteration  26: 109767.738 ops/s
# Warmup Iteration  27: 104527.328 ops/s
# Warmup Iteration  28: 115878.700 ops/s
# Warmup Iteration  29: 111458.659 ops/s
# Warmup Iteration  30: 107121.879 ops/s
Iteration   1: 115173.776 ops/s
Iteration   2: 109621.646 ops/s
Iteration   3: 108657.240 ops/s
Iteration   4: 110017.558 ops/s
Iteration   5: 108540.277 ops/s
Iteration   6: 108487.536 ops/s
Iteration   7: 111746.434 ops/s
Iteration   8: 106149.559 ops/s
Iteration   9: 111712.818 ops/s
Iteration  10: 108894.343 ops/s
Iteration  11: 108603.077 ops/s
Iteration  12: 113612.953 ops/s
Iteration  13: 105026.640 ops/s
Iteration  14: 109201.552 ops/s
Iteration  15: 112258.064 ops/s
Iteration  16: 107042.323 ops/s
Iteration  17: 109958.745 ops/s
Iteration  18: 107279.045 ops/s
Iteration  19: 112275.634 ops/s
Iteration  20: 107958.797 ops/s
Iteration  21: 112224.052 ops/s
Iteration  22: 106657.547 ops/s
Iteration  23: 108519.916 ops/s
Iteration  24: 115638.999 ops/s
Iteration  25: 105983.896 ops/s
Iteration  26: 110860.262 ops/s
Iteration  27: 105788.031 ops/s
Iteration  28: 111309.875 ops/s
Iteration  29: 108598.139 ops/s
Iteration  30: 108516.819 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_930._Benchmark.benchmark_Cluster_930":
  109543.852 ±(99.9%) 1799.994 ops/s [Average]
  (min, avg, max) = (105026.640, 109543.852, 115638.999), stdev = 2694.147
  CI (99.9%): [107743.857, 111343.846] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_930._Benchmark.benchmark_Cluster_930  thrpt   30  109543.852 ± 1799.994  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_931._Benchmark.benchmark_Cluster_931$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_931._Benchmark.benchmark_Cluster_931

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1072.167 ops/s
# Warmup Iteration   2: 16196.650 ops/s
# Warmup Iteration   3: 27703.735 ops/s
# Warmup Iteration   4: 28715.589 ops/s
# Warmup Iteration   5: 32284.028 ops/s
# Warmup Iteration   6: 43859.983 ops/s
# Warmup Iteration   7: 37205.567 ops/s
# Warmup Iteration   8: 87284.508 ops/s
# Warmup Iteration   9: 92914.019 ops/s
# Warmup Iteration  10: 88591.030 ops/s
# Warmup Iteration  11: 89278.897 ops/s
# Warmup Iteration  12: 90943.511 ops/s
# Warmup Iteration  13: 88837.153 ops/s
# Warmup Iteration  14: 93763.996 ops/s
# Warmup Iteration  15: 90521.711 ops/s
# Warmup Iteration  16: 93368.130 ops/s
# Warmup Iteration  17: 91639.053 ops/s
# Warmup Iteration  18: 91347.204 ops/s
# Warmup Iteration  19: 93579.323 ops/s
# Warmup Iteration  20: 89311.283 ops/s
# Warmup Iteration  21: 96585.837 ops/s
# Warmup Iteration  22: 91211.541 ops/s
# Warmup Iteration  23: 90946.260 ops/s
# Warmup Iteration  24: 95383.949 ops/s
# Warmup Iteration  25: 91459.714 ops/s
# Warmup Iteration  26: 95733.694 ops/s
# Warmup Iteration  27: 76721.834 ops/s
# Warmup Iteration  28: 92484.429 ops/s
# Warmup Iteration  29: 96807.395 ops/s
# Warmup Iteration  30: 90477.850 ops/s
Iteration   1: 93653.384 ops/s
Iteration   2: 92420.649 ops/s
Iteration   3: 91788.000 ops/s
Iteration   4: 93340.273 ops/s
Iteration   5: 94426.142 ops/s
Iteration   6: 94002.656 ops/s
Iteration   7: 95531.199 ops/s
Iteration   8: 90028.529 ops/s
Iteration   9: 93258.739 ops/s
Iteration  10: 95716.100 ops/s
Iteration  11: 92672.748 ops/s
Iteration  12: 87577.661 ops/s
Iteration  13: 93974.429 ops/s
Iteration  14: 91601.615 ops/s
Iteration  15: 89340.864 ops/s
Iteration  16: 95394.026 ops/s
Iteration  17: 91744.881 ops/s
Iteration  18: 92240.708 ops/s
Iteration  19: 92479.393 ops/s
Iteration  20: 91290.852 ops/s
Iteration  21: 94346.464 ops/s
Iteration  22: 90521.281 ops/s
Iteration  23: 96911.510 ops/s
Iteration  24: 98177.479 ops/s
Iteration  25: 92496.272 ops/s
Iteration  26: 92854.969 ops/s
Iteration  27: 96204.238 ops/s
Iteration  28: 92996.312 ops/s
Iteration  29: 92433.966 ops/s
Iteration  30: 90801.511 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_931._Benchmark.benchmark_Cluster_931":
  93007.562 ±(99.9%) 1523.042 ops/s [Average]
  (min, avg, max) = (87577.661, 93007.562, 98177.479), stdev = 2279.617
  CI (99.9%): [91484.520, 94530.603] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_931._Benchmark.benchmark_Cluster_931  thrpt   30  93007.562 ± 1523.042  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_932._Benchmark.benchmark_Cluster_932$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_932._Benchmark.benchmark_Cluster_932

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1348.035 ops/s
# Warmup Iteration   2: 18134.267 ops/s
# Warmup Iteration   3: 22833.867 ops/s
# Warmup Iteration   4: 26640.505 ops/s
# Warmup Iteration   5: 36082.448 ops/s
# Warmup Iteration   6: 46287.045 ops/s
# Warmup Iteration   7: 91606.432 ops/s
# Warmup Iteration   8: 90211.947 ops/s
# Warmup Iteration   9: 91225.099 ops/s
# Warmup Iteration  10: 89279.483 ops/s
# Warmup Iteration  11: 90663.484 ops/s
# Warmup Iteration  12: 92339.253 ops/s
# Warmup Iteration  13: 86666.831 ops/s
# Warmup Iteration  14: 88969.174 ops/s
# Warmup Iteration  15: 86220.214 ops/s
# Warmup Iteration  16: 91304.583 ops/s
# Warmup Iteration  17: 91494.291 ops/s
# Warmup Iteration  18: 96617.977 ops/s
# Warmup Iteration  19: 90547.801 ops/s
# Warmup Iteration  20: 92459.719 ops/s
# Warmup Iteration  21: 91473.650 ops/s
# Warmup Iteration  22: 92557.467 ops/s
# Warmup Iteration  23: 96843.578 ops/s
# Warmup Iteration  24: 94975.210 ops/s
# Warmup Iteration  25: 94475.246 ops/s
# Warmup Iteration  26: 94378.491 ops/s
# Warmup Iteration  27: 94376.376 ops/s
# Warmup Iteration  28: 95715.212 ops/s
# Warmup Iteration  29: 96160.204 ops/s
# Warmup Iteration  30: 91140.587 ops/s
Iteration   1: 94352.282 ops/s
Iteration   2: 95043.876 ops/s
Iteration   3: 92765.033 ops/s
Iteration   4: 97569.701 ops/s
Iteration   5: 86914.684 ops/s
Iteration   6: 90716.350 ops/s
Iteration   7: 96090.400 ops/s
Iteration   8: 99884.896 ops/s
Iteration   9: 97166.654 ops/s
Iteration  10: 92086.146 ops/s
Iteration  11: 98730.414 ops/s
Iteration  12: 93982.471 ops/s
Iteration  13: 93760.654 ops/s
Iteration  14: 95390.918 ops/s
Iteration  15: 97363.711 ops/s
Iteration  16: 90279.677 ops/s
Iteration  17: 97321.017 ops/s
Iteration  18: 92558.167 ops/s
Iteration  19: 98036.954 ops/s
Iteration  20: 93277.855 ops/s
Iteration  21: 94069.197 ops/s
Iteration  22: 98183.809 ops/s
Iteration  23: 90859.713 ops/s
Iteration  24: 97894.504 ops/s
Iteration  25: 92287.833 ops/s
Iteration  26: 94254.108 ops/s
Iteration  27: 98586.878 ops/s
Iteration  28: 91828.720 ops/s
Iteration  29: 96894.295 ops/s
Iteration  30: 93817.000 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_932._Benchmark.benchmark_Cluster_932":
  94732.264 ±(99.9%) 2046.970 ops/s [Average]
  (min, avg, max) = (86914.684, 94732.264, 99884.896), stdev = 3063.808
  CI (99.9%): [92685.294, 96779.234] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_932._Benchmark.benchmark_Cluster_932  thrpt   30  94732.264 ± 2046.970  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_933._Benchmark.benchmark_Cluster_933$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_933._Benchmark.benchmark_Cluster_933

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1072.777 ops/s
# Warmup Iteration   2: 4563.546 ops/s
# Warmup Iteration   3: 20302.898 ops/s
# Warmup Iteration   4: 22230.288 ops/s
# Warmup Iteration   5: 35880.903 ops/s
# Warmup Iteration   6: 36128.281 ops/s
# Warmup Iteration   7: 61206.783 ops/s
# Warmup Iteration   8: 72231.352 ops/s
# Warmup Iteration   9: 73085.480 ops/s
# Warmup Iteration  10: 79575.822 ops/s
# Warmup Iteration  11: 75313.263 ops/s
# Warmup Iteration  12: 74770.693 ops/s
# Warmup Iteration  13: 79868.289 ops/s
# Warmup Iteration  14: 74289.206 ops/s
# Warmup Iteration  15: 78619.914 ops/s
# Warmup Iteration  16: 74300.855 ops/s
# Warmup Iteration  17: 76087.451 ops/s
# Warmup Iteration  18: 79108.163 ops/s
# Warmup Iteration  19: 75583.428 ops/s
# Warmup Iteration  20: 63879.591 ops/s
# Warmup Iteration  21: 74502.060 ops/s
# Warmup Iteration  22: 76316.566 ops/s
# Warmup Iteration  23: 74700.005 ops/s
# Warmup Iteration  24: 75022.256 ops/s
# Warmup Iteration  25: 74450.618 ops/s
# Warmup Iteration  26: 80977.419 ops/s
# Warmup Iteration  27: 77728.313 ops/s
# Warmup Iteration  28: 78073.684 ops/s
# Warmup Iteration  29: 79536.848 ops/s
# Warmup Iteration  30: 74349.058 ops/s
Iteration   1: 80005.732 ops/s
Iteration   2: 76997.613 ops/s
Iteration   3: 76255.954 ops/s
Iteration   4: 75200.599 ops/s
Iteration   5: 78823.158 ops/s
Iteration   6: 79944.116 ops/s
Iteration   7: 76915.251 ops/s
Iteration   8: 78745.836 ops/s
Iteration   9: 76623.884 ops/s
Iteration  10: 80378.232 ops/s
Iteration  11: 75312.557 ops/s
Iteration  12: 80325.569 ops/s
Iteration  13: 77416.796 ops/s
Iteration  14: 76347.467 ops/s
Iteration  15: 78776.460 ops/s
Iteration  16: 76243.905 ops/s
Iteration  17: 77952.916 ops/s
Iteration  18: 77608.365 ops/s
Iteration  19: 77522.563 ops/s
Iteration  20: 79030.290 ops/s
Iteration  21: 77877.555 ops/s
Iteration  22: 76313.446 ops/s
Iteration  23: 76589.476 ops/s
Iteration  24: 78508.436 ops/s
Iteration  25: 80232.703 ops/s
Iteration  26: 80206.847 ops/s
Iteration  27: 76166.304 ops/s
Iteration  28: 81049.168 ops/s
Iteration  29: 76563.156 ops/s
Iteration  30: 77881.331 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_933._Benchmark.benchmark_Cluster_933":
  77927.189 ±(99.9%) 1109.824 ops/s [Average]
  (min, avg, max) = (75200.599, 77927.189, 81049.168), stdev = 1661.132
  CI (99.9%): [76817.366, 79037.013] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_933._Benchmark.benchmark_Cluster_933  thrpt   30  77927.189 ± 1109.824  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_934._Benchmark.benchmark_Cluster_934$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_934._Benchmark.benchmark_Cluster_934

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2233.719 ops/s
# Warmup Iteration   2: 34709.034 ops/s
# Warmup Iteration   3: 58808.453 ops/s
# Warmup Iteration   4: 51666.603 ops/s
# Warmup Iteration   5: 128756.947 ops/s
# Warmup Iteration   6: 134178.366 ops/s
# Warmup Iteration   7: 126477.267 ops/s
# Warmup Iteration   8: 146903.768 ops/s
# Warmup Iteration   9: 140435.927 ops/s
# Warmup Iteration  10: 139143.865 ops/s
# Warmup Iteration  11: 145950.048 ops/s
# Warmup Iteration  12: 139339.977 ops/s
# Warmup Iteration  13: 141550.612 ops/s
# Warmup Iteration  14: 146589.031 ops/s
# Warmup Iteration  15: 142127.531 ops/s
# Warmup Iteration  16: 145442.746 ops/s
# Warmup Iteration  17: 146451.895 ops/s
# Warmup Iteration  18: 141190.960 ops/s
# Warmup Iteration  19: 142931.285 ops/s
# Warmup Iteration  20: 145947.949 ops/s
# Warmup Iteration  21: 139072.116 ops/s
# Warmup Iteration  22: 143857.338 ops/s
# Warmup Iteration  23: 144908.994 ops/s
# Warmup Iteration  24: 141328.850 ops/s
# Warmup Iteration  25: 141753.716 ops/s
# Warmup Iteration  26: 143972.692 ops/s
# Warmup Iteration  27: 137121.733 ops/s
# Warmup Iteration  28: 139656.773 ops/s
# Warmup Iteration  29: 144900.338 ops/s
# Warmup Iteration  30: 132968.822 ops/s
Iteration   1: 145457.175 ops/s
Iteration   2: 144497.171 ops/s
Iteration   3: 136645.876 ops/s
Iteration   4: 139070.091 ops/s
Iteration   5: 145442.338 ops/s
Iteration   6: 138454.659 ops/s
Iteration   7: 142504.743 ops/s
Iteration   8: 140752.864 ops/s
Iteration   9: 143688.756 ops/s
Iteration  10: 140863.526 ops/s
Iteration  11: 147540.711 ops/s
Iteration  12: 133540.731 ops/s
Iteration  13: 141181.017 ops/s
Iteration  14: 144827.938 ops/s
Iteration  15: 143514.323 ops/s
Iteration  16: 143025.180 ops/s
Iteration  17: 140823.003 ops/s
Iteration  18: 145616.597 ops/s
Iteration  19: 139978.215 ops/s
Iteration  20: 147661.417 ops/s
Iteration  21: 139431.587 ops/s
Iteration  22: 142640.699 ops/s
Iteration  23: 140333.593 ops/s
Iteration  24: 147633.001 ops/s
Iteration  25: 144389.052 ops/s
Iteration  26: 136934.775 ops/s
Iteration  27: 148640.316 ops/s
Iteration  28: 142153.160 ops/s
Iteration  29: 138674.226 ops/s
Iteration  30: 150334.801 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_934._Benchmark.benchmark_Cluster_934":
  142541.718 ±(99.9%) 2600.670 ops/s [Average]
  (min, avg, max) = (133540.731, 142541.718, 150334.801), stdev = 3892.561
  CI (99.9%): [139941.048, 145142.388] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_934._Benchmark.benchmark_Cluster_934  thrpt   30  142541.718 ± 2600.670  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_935._Benchmark.benchmark_Cluster_935$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_935._Benchmark.benchmark_Cluster_935

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7657.238 ops/s
# Warmup Iteration   2: 25946.071 ops/s
# Warmup Iteration   3: 28580.307 ops/s
# Warmup Iteration   4: 51578.174 ops/s
# Warmup Iteration   5: 88246.608 ops/s
# Warmup Iteration   6: 85487.536 ops/s
# Warmup Iteration   7: 82861.712 ops/s
# Warmup Iteration   8: 79212.810 ops/s
# Warmup Iteration   9: 88341.610 ops/s
# Warmup Iteration  10: 85830.941 ops/s
# Warmup Iteration  11: 85566.222 ops/s
# Warmup Iteration  12: 86851.408 ops/s
# Warmup Iteration  13: 84473.822 ops/s
# Warmup Iteration  14: 78561.341 ops/s
# Warmup Iteration  15: 79438.626 ops/s
# Warmup Iteration  16: 85488.990 ops/s
# Warmup Iteration  17: 83060.337 ops/s
# Warmup Iteration  18: 88280.345 ops/s
# Warmup Iteration  19: 83693.946 ops/s
# Warmup Iteration  20: 87514.755 ops/s
# Warmup Iteration  21: 83836.567 ops/s
# Warmup Iteration  22: 87822.418 ops/s
# Warmup Iteration  23: 77550.488 ops/s
# Warmup Iteration  24: 81857.784 ops/s
# Warmup Iteration  25: 85891.437 ops/s
# Warmup Iteration  26: 83778.942 ops/s
# Warmup Iteration  27: 88039.563 ops/s
# Warmup Iteration  28: 87017.383 ops/s
# Warmup Iteration  29: 87494.807 ops/s
# Warmup Iteration  30: 85646.691 ops/s
Iteration   1: 88328.884 ops/s
Iteration   2: 86979.059 ops/s
Iteration   3: 85076.567 ops/s
Iteration   4: 84600.064 ops/s
Iteration   5: 88097.765 ops/s
Iteration   6: 84936.186 ops/s
Iteration   7: 87520.598 ops/s
Iteration   8: 86379.093 ops/s
Iteration   9: 88295.841 ops/s
Iteration  10: 85864.781 ops/s
Iteration  11: 88011.610 ops/s
Iteration  12: 85018.583 ops/s
Iteration  13: 86549.854 ops/s
Iteration  14: 85910.537 ops/s
Iteration  15: 86327.163 ops/s
Iteration  16: 85855.147 ops/s
Iteration  17: 89564.975 ops/s
Iteration  18: 85650.205 ops/s
Iteration  19: 88057.519 ops/s
Iteration  20: 85930.541 ops/s
Iteration  21: 88144.651 ops/s
Iteration  22: 86331.188 ops/s
Iteration  23: 86304.720 ops/s
Iteration  24: 87676.368 ops/s
Iteration  25: 87016.511 ops/s
Iteration  26: 88802.619 ops/s
Iteration  27: 85086.683 ops/s
Iteration  28: 87986.262 ops/s
Iteration  29: 84521.896 ops/s
Iteration  30: 89621.886 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_935._Benchmark.benchmark_Cluster_935":
  86814.925 ±(99.9%) 974.126 ops/s [Average]
  (min, avg, max) = (84521.896, 86814.925, 89621.886), stdev = 1458.026
  CI (99.9%): [85840.799, 87789.051] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_935._Benchmark.benchmark_Cluster_935  thrpt   30  86814.925 ± 974.126  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_936._Benchmark.benchmark_Cluster_936$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_936._Benchmark.benchmark_Cluster_936

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5360.819 ops/s
# Warmup Iteration   2: 16979.130 ops/s
# Warmup Iteration   3: 36849.326 ops/s
# Warmup Iteration   4: 54336.725 ops/s
# Warmup Iteration   5: 54982.169 ops/s
# Warmup Iteration   6: 52127.089 ops/s
# Warmup Iteration   7: 44896.743 ops/s
# Warmup Iteration   8: 50019.054 ops/s
# Warmup Iteration   9: 47414.029 ops/s
# Warmup Iteration  10: 47486.567 ops/s
# Warmup Iteration  11: 58286.538 ops/s
# Warmup Iteration  12: 45611.739 ops/s
# Warmup Iteration  13: 42829.258 ops/s
# Warmup Iteration  14: 56999.261 ops/s
# Warmup Iteration  15: 47485.979 ops/s
# Warmup Iteration  16: 54796.742 ops/s
# Warmup Iteration  17: 46730.201 ops/s
# Warmup Iteration  18: 56006.764 ops/s
# Warmup Iteration  19: 52982.115 ops/s
# Warmup Iteration  20: 51612.254 ops/s
# Warmup Iteration  21: 58265.601 ops/s
# Warmup Iteration  22: 50764.186 ops/s
# Warmup Iteration  23: 51589.754 ops/s
# Warmup Iteration  24: 43750.801 ops/s
# Warmup Iteration  25: 52196.232 ops/s
# Warmup Iteration  26: 47225.198 ops/s
# Warmup Iteration  27: 53448.290 ops/s
# Warmup Iteration  28: 49262.940 ops/s
# Warmup Iteration  29: 41642.757 ops/s
# Warmup Iteration  30: 47371.845 ops/s
Iteration   1: 54049.387 ops/s
Iteration   2: 46894.220 ops/s
Iteration   3: 48105.154 ops/s
Iteration   4: 57280.238 ops/s
Iteration   5: 56385.631 ops/s
Iteration   6: 53605.009 ops/s
Iteration   7: 54450.359 ops/s
Iteration   8: 56048.816 ops/s
Iteration   9: 45720.827 ops/s
Iteration  10: 43693.700 ops/s
Iteration  11: 44037.281 ops/s
Iteration  12: 60863.437 ops/s
Iteration  13: 47228.793 ops/s
Iteration  14: 61198.522 ops/s
Iteration  15: 51273.127 ops/s
Iteration  16: 48006.186 ops/s
Iteration  17: 46909.048 ops/s
Iteration  18: 45928.010 ops/s
Iteration  19: 44068.991 ops/s
Iteration  20: 49421.468 ops/s
Iteration  21: 45276.586 ops/s
Iteration  22: 42760.337 ops/s
Iteration  23: 48697.990 ops/s
Iteration  24: 52318.364 ops/s
Iteration  25: 44539.232 ops/s
Iteration  26: 59263.720 ops/s
Iteration  27: 50821.563 ops/s
Iteration  28: 46355.827 ops/s
Iteration  29: 55380.002 ops/s
Iteration  30: 50220.031 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_936._Benchmark.benchmark_Cluster_936":
  50360.062 ±(99.9%) 3598.473 ops/s [Average]
  (min, avg, max) = (42760.337, 50360.062, 61198.522), stdev = 5386.025
  CI (99.9%): [46761.589, 53958.534] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_936._Benchmark.benchmark_Cluster_936  thrpt   30  50360.062 ± 3598.473  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_937._Benchmark.benchmark_Cluster_937$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_937._Benchmark.benchmark_Cluster_937

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.823 ops/s
# Warmup Iteration   2: 8474.212 ops/s
# Warmup Iteration   3: 36712.022 ops/s
# Warmup Iteration   4: 37597.472 ops/s
# Warmup Iteration   5: 70244.840 ops/s
# Warmup Iteration   6: 64339.881 ops/s
# Warmup Iteration   7: 76967.198 ops/s
# Warmup Iteration   8: 71119.912 ops/s
# Warmup Iteration   9: 84010.512 ops/s
# Warmup Iteration  10: 140996.417 ops/s
# Warmup Iteration  11: 176222.661 ops/s
# Warmup Iteration  12: 178771.886 ops/s
# Warmup Iteration  13: 174063.905 ops/s
# Warmup Iteration  14: 177447.178 ops/s
# Warmup Iteration  15: 182940.594 ops/s
# Warmup Iteration  16: 171428.815 ops/s
# Warmup Iteration  17: 172039.384 ops/s
# Warmup Iteration  18: 184356.755 ops/s
# Warmup Iteration  19: 166509.989 ops/s
# Warmup Iteration  20: 179938.149 ops/s
# Warmup Iteration  21: 178844.458 ops/s
# Warmup Iteration  22: 184393.346 ops/s
# Warmup Iteration  23: 172728.733 ops/s
# Warmup Iteration  24: 179326.923 ops/s
# Warmup Iteration  25: 181036.470 ops/s
# Warmup Iteration  26: 179095.631 ops/s
# Warmup Iteration  27: 187093.387 ops/s
# Warmup Iteration  28: 178254.402 ops/s
# Warmup Iteration  29: 180142.056 ops/s
# Warmup Iteration  30: 185719.893 ops/s
Iteration   1: 179236.921 ops/s
Iteration   2: 181285.416 ops/s
Iteration   3: 186386.116 ops/s
Iteration   4: 173470.981 ops/s
Iteration   5: 190452.142 ops/s
Iteration   6: 178406.324 ops/s
Iteration   7: 181345.116 ops/s
Iteration   8: 187607.257 ops/s
Iteration   9: 178715.421 ops/s
Iteration  10: 180690.788 ops/s
Iteration  11: 176438.732 ops/s
Iteration  12: 182538.071 ops/s
Iteration  13: 180729.310 ops/s
Iteration  14: 181149.586 ops/s
Iteration  15: 186523.239 ops/s
Iteration  16: 181364.649 ops/s
Iteration  17: 178021.388 ops/s
Iteration  18: 184636.498 ops/s
Iteration  19: 177476.408 ops/s
Iteration  20: 187916.660 ops/s
Iteration  21: 176197.446 ops/s
Iteration  22: 182998.548 ops/s
Iteration  23: 186790.778 ops/s
Iteration  24: 169505.712 ops/s
Iteration  25: 187148.101 ops/s
Iteration  26: 172937.627 ops/s
Iteration  27: 179118.319 ops/s
Iteration  28: 190202.557 ops/s
Iteration  29: 177800.520 ops/s
Iteration  30: 180011.482 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_937._Benchmark.benchmark_Cluster_937":
  181236.737 ±(99.9%) 3428.285 ops/s [Average]
  (min, avg, max) = (169505.712, 181236.737, 190452.142), stdev = 5131.296
  CI (99.9%): [177808.452, 184665.022] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_937._Benchmark.benchmark_Cluster_937  thrpt   30  181236.737 ± 3428.285  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_938._Benchmark.benchmark_Cluster_938$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_938._Benchmark.benchmark_Cluster_938

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 16547.965 ops/s
# Warmup Iteration   2: 28626.542 ops/s
# Warmup Iteration   3: 53304.198 ops/s
# Warmup Iteration   4: 54220.570 ops/s
# Warmup Iteration   5: 113127.671 ops/s
# Warmup Iteration   6: 117531.440 ops/s
# Warmup Iteration   7: 123381.319 ops/s
# Warmup Iteration   8: 122305.711 ops/s
# Warmup Iteration   9: 129321.178 ops/s
# Warmup Iteration  10: 122235.681 ops/s
# Warmup Iteration  11: 120824.138 ops/s
# Warmup Iteration  12: 124354.461 ops/s
# Warmup Iteration  13: 124587.982 ops/s
# Warmup Iteration  14: 126172.415 ops/s
# Warmup Iteration  15: 124675.901 ops/s
# Warmup Iteration  16: 128586.866 ops/s
# Warmup Iteration  17: 128315.194 ops/s
# Warmup Iteration  18: 127272.369 ops/s
# Warmup Iteration  19: 131064.422 ops/s
# Warmup Iteration  20: 125275.464 ops/s
# Warmup Iteration  21: 128815.745 ops/s
# Warmup Iteration  22: 136225.759 ops/s
# Warmup Iteration  23: 126679.223 ops/s
# Warmup Iteration  24: 129349.651 ops/s
# Warmup Iteration  25: 135344.781 ops/s
# Warmup Iteration  26: 129198.573 ops/s
# Warmup Iteration  27: 134612.431 ops/s
# Warmup Iteration  28: 127805.503 ops/s
# Warmup Iteration  29: 134973.931 ops/s
# Warmup Iteration  30: 130415.414 ops/s
Iteration   1: 123389.655 ops/s
Iteration   2: 129891.280 ops/s
Iteration   3: 133740.110 ops/s
Iteration   4: 127815.322 ops/s
Iteration   5: 133611.927 ops/s
Iteration   6: 133427.444 ops/s
Iteration   7: 129428.209 ops/s
Iteration   8: 136415.130 ops/s
Iteration   9: 134762.908 ops/s
Iteration  10: 129433.823 ops/s
Iteration  11: 133836.799 ops/s
Iteration  12: 130185.932 ops/s
Iteration  13: 130193.195 ops/s
Iteration  14: 131464.021 ops/s
Iteration  15: 135053.334 ops/s
Iteration  16: 130114.481 ops/s
Iteration  17: 134251.781 ops/s
Iteration  18: 129729.664 ops/s
Iteration  19: 129749.440 ops/s
Iteration  20: 135379.881 ops/s
Iteration  21: 128920.188 ops/s
Iteration  22: 133539.260 ops/s
Iteration  23: 129820.421 ops/s
Iteration  24: 135858.183 ops/s
Iteration  25: 127628.786 ops/s
Iteration  26: 137012.086 ops/s
Iteration  27: 131657.123 ops/s
Iteration  28: 129477.800 ops/s
Iteration  29: 134058.361 ops/s
Iteration  30: 132827.872 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_938._Benchmark.benchmark_Cluster_938":
  131755.814 ±(99.9%) 2073.142 ops/s [Average]
  (min, avg, max) = (123389.655, 131755.814, 137012.086), stdev = 3102.981
  CI (99.9%): [129682.672, 133828.956] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_938._Benchmark.benchmark_Cluster_938  thrpt   30  131755.814 ± 2073.142  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_939._Benchmark.benchmark_Cluster_939$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_939._Benchmark.benchmark_Cluster_939

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 19100.873 ops/s
# Warmup Iteration   2: 45728.336 ops/s
# Warmup Iteration   3: 88261.586 ops/s
# Warmup Iteration   4: 115029.536 ops/s
# Warmup Iteration   5: 114238.803 ops/s
# Warmup Iteration   6: 119939.173 ops/s
# Warmup Iteration   7: 124221.194 ops/s
# Warmup Iteration   8: 124072.841 ops/s
# Warmup Iteration   9: 119716.896 ops/s
# Warmup Iteration  10: 122167.825 ops/s
# Warmup Iteration  11: 122268.463 ops/s
# Warmup Iteration  12: 124523.746 ops/s
# Warmup Iteration  13: 127665.247 ops/s
# Warmup Iteration  14: 119029.249 ops/s
# Warmup Iteration  15: 126006.389 ops/s
# Warmup Iteration  16: 120924.072 ops/s
# Warmup Iteration  17: 131241.368 ops/s
# Warmup Iteration  18: 125556.990 ops/s
# Warmup Iteration  19: 132692.007 ops/s
# Warmup Iteration  20: 128106.501 ops/s
# Warmup Iteration  21: 129595.762 ops/s
# Warmup Iteration  22: 130276.365 ops/s
# Warmup Iteration  23: 127989.961 ops/s
# Warmup Iteration  24: 132690.242 ops/s
# Warmup Iteration  25: 132245.856 ops/s
# Warmup Iteration  26: 127660.642 ops/s
# Warmup Iteration  27: 130137.607 ops/s
# Warmup Iteration  28: 128872.070 ops/s
# Warmup Iteration  29: 130320.359 ops/s
# Warmup Iteration  30: 130997.665 ops/s
Iteration   1: 128098.589 ops/s
Iteration   2: 130996.093 ops/s
Iteration   3: 126198.164 ops/s
Iteration   4: 133727.520 ops/s
Iteration   5: 127256.291 ops/s
Iteration   6: 128992.771 ops/s
Iteration   7: 130716.335 ops/s
Iteration   8: 127235.210 ops/s
Iteration   9: 127945.055 ops/s
Iteration  10: 131120.345 ops/s
Iteration  11: 131005.030 ops/s
Iteration  12: 124154.499 ops/s
Iteration  13: 129037.800 ops/s
Iteration  14: 130446.779 ops/s
Iteration  15: 127532.470 ops/s
Iteration  16: 129115.535 ops/s
Iteration  17: 126452.781 ops/s
Iteration  18: 124225.955 ops/s
Iteration  19: 130311.450 ops/s
Iteration  20: 127423.673 ops/s
Iteration  21: 131853.943 ops/s
Iteration  22: 131504.381 ops/s
Iteration  23: 130364.977 ops/s
Iteration  24: 133088.640 ops/s
Iteration  25: 126159.462 ops/s
Iteration  26: 130304.530 ops/s
Iteration  27: 134796.634 ops/s
Iteration  28: 127948.983 ops/s
Iteration  29: 127035.485 ops/s
Iteration  30: 132416.807 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_939._Benchmark.benchmark_Cluster_939":
  129248.873 ±(99.9%) 1781.108 ops/s [Average]
  (min, avg, max) = (124154.499, 129248.873, 134796.634), stdev = 2665.878
  CI (99.9%): [127467.765, 131029.981] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_939._Benchmark.benchmark_Cluster_939  thrpt   30  129248.873 ± 1781.108  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_94._Benchmark.benchmark_Cluster_94$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_94._Benchmark.benchmark_Cluster_94

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2608.118 ops/s
# Warmup Iteration   2: 19050.746 ops/s
# Warmup Iteration   3: 34520.926 ops/s
# Warmup Iteration   4: 35416.467 ops/s
# Warmup Iteration   5: 36173.847 ops/s
# Warmup Iteration   6: 54016.947 ops/s
# Warmup Iteration   7: 86088.780 ops/s
# Warmup Iteration   8: 88865.626 ops/s
# Warmup Iteration   9: 83804.048 ops/s
# Warmup Iteration  10: 89051.443 ops/s
# Warmup Iteration  11: 91750.844 ops/s
# Warmup Iteration  12: 90048.390 ops/s
# Warmup Iteration  13: 87991.288 ops/s
# Warmup Iteration  14: 92232.981 ops/s
# Warmup Iteration  15: 87999.501 ops/s
# Warmup Iteration  16: 88868.342 ops/s
# Warmup Iteration  17: 89269.660 ops/s
# Warmup Iteration  18: 91267.779 ops/s
# Warmup Iteration  19: 93260.283 ops/s
# Warmup Iteration  20: 87213.201 ops/s
# Warmup Iteration  21: 88597.809 ops/s
# Warmup Iteration  22: 91073.993 ops/s
# Warmup Iteration  23: 90637.883 ops/s
# Warmup Iteration  24: 88376.017 ops/s
# Warmup Iteration  25: 94816.653 ops/s
# Warmup Iteration  26: 88877.882 ops/s
# Warmup Iteration  27: 91565.765 ops/s
# Warmup Iteration  28: 93110.130 ops/s
# Warmup Iteration  29: 94853.677 ops/s
# Warmup Iteration  30: 89398.466 ops/s
Iteration   1: 92371.307 ops/s
Iteration   2: 90245.845 ops/s
Iteration   3: 92366.579 ops/s
Iteration   4: 94558.725 ops/s
Iteration   5: 90877.461 ops/s
Iteration   6: 89907.325 ops/s
Iteration   7: 90945.387 ops/s
Iteration   8: 88517.505 ops/s
Iteration   9: 90132.909 ops/s
Iteration  10: 88658.391 ops/s
Iteration  11: 94011.263 ops/s
Iteration  12: 89371.413 ops/s
Iteration  13: 92635.609 ops/s
Iteration  14: 89530.789 ops/s
Iteration  15: 87420.070 ops/s
Iteration  16: 93361.370 ops/s
Iteration  17: 88643.351 ops/s
Iteration  18: 92628.230 ops/s
Iteration  19: 87825.866 ops/s
Iteration  20: 94325.289 ops/s
Iteration  21: 89717.784 ops/s
Iteration  22: 90164.316 ops/s
Iteration  23: 92081.531 ops/s
Iteration  24: 90651.260 ops/s
Iteration  25: 92931.474 ops/s
Iteration  26: 88248.334 ops/s
Iteration  27: 95656.075 ops/s
Iteration  28: 88423.561 ops/s
Iteration  29: 75181.422 ops/s
Iteration  30: 90281.691 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_94._Benchmark.benchmark_Cluster_94":
  90389.071 ±(99.9%) 2411.067 ops/s [Average]
  (min, avg, max) = (75181.422, 90389.071, 95656.075), stdev = 3608.772
  CI (99.9%): [87978.004, 92800.138] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_94._Benchmark.benchmark_Cluster_94  thrpt   30  90389.071 ± 2411.067  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_940._Benchmark.benchmark_Cluster_940$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_940._Benchmark.benchmark_Cluster_940

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 28583.150 ops/s
# Warmup Iteration   2: 106360.389 ops/s
# Warmup Iteration   3: 147984.409 ops/s
# Warmup Iteration   4: 137308.111 ops/s
# Warmup Iteration   5: 149887.074 ops/s
# Warmup Iteration   6: 152434.179 ops/s
# Warmup Iteration   7: 156304.771 ops/s
# Warmup Iteration   8: 144176.867 ops/s
# Warmup Iteration   9: 141946.955 ops/s
# Warmup Iteration  10: 147255.367 ops/s
# Warmup Iteration  11: 150886.317 ops/s
# Warmup Iteration  12: 154603.841 ops/s
# Warmup Iteration  13: 149768.268 ops/s
# Warmup Iteration  14: 151973.237 ops/s
# Warmup Iteration  15: 151441.832 ops/s
# Warmup Iteration  16: 155422.189 ops/s
# Warmup Iteration  17: 161918.639 ops/s
# Warmup Iteration  18: 154131.882 ops/s
# Warmup Iteration  19: 160242.259 ops/s
# Warmup Iteration  20: 161846.588 ops/s
# Warmup Iteration  21: 156074.749 ops/s
# Warmup Iteration  22: 161437.730 ops/s
# Warmup Iteration  23: 165252.312 ops/s
# Warmup Iteration  24: 150624.948 ops/s
# Warmup Iteration  25: 156370.953 ops/s
# Warmup Iteration  26: 155442.368 ops/s
# Warmup Iteration  27: 150088.529 ops/s
# Warmup Iteration  28: 157529.073 ops/s
# Warmup Iteration  29: 163842.151 ops/s
# Warmup Iteration  30: 158505.275 ops/s
Iteration   1: 162666.680 ops/s
Iteration   2: 157983.335 ops/s
Iteration   3: 156800.878 ops/s
Iteration   4: 164604.455 ops/s
Iteration   5: 154310.859 ops/s
Iteration   6: 156599.221 ops/s
Iteration   7: 164564.554 ops/s
Iteration   8: 156023.487 ops/s
Iteration   9: 160157.218 ops/s
Iteration  10: 160819.877 ops/s
Iteration  11: 156617.897 ops/s
Iteration  12: 164246.667 ops/s
Iteration  13: 160004.726 ops/s
Iteration  14: 163196.969 ops/s
Iteration  15: 162349.517 ops/s
Iteration  16: 163867.424 ops/s
Iteration  17: 156933.186 ops/s
Iteration  18: 157372.471 ops/s
Iteration  19: 154838.260 ops/s
Iteration  20: 161858.313 ops/s
Iteration  21: 160671.626 ops/s
Iteration  22: 156949.416 ops/s
Iteration  23: 163433.750 ops/s
Iteration  24: 156599.216 ops/s
Iteration  25: 162492.838 ops/s
Iteration  26: 152038.224 ops/s
Iteration  27: 160101.107 ops/s
Iteration  28: 157225.465 ops/s
Iteration  29: 158806.629 ops/s
Iteration  30: 158569.532 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_940._Benchmark.benchmark_Cluster_940":
  159423.460 ±(99.9%) 2268.704 ops/s [Average]
  (min, avg, max) = (152038.224, 159423.460, 164604.455), stdev = 3395.690
  CI (99.9%): [157154.756, 161692.164] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_940._Benchmark.benchmark_Cluster_940  thrpt   30  159423.460 ± 2268.704  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_941._Benchmark.benchmark_Cluster_941$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_941._Benchmark.benchmark_Cluster_941

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18832.688 ops/s
# Warmup Iteration   2: 73933.122 ops/s
# Warmup Iteration   3: 100960.033 ops/s
# Warmup Iteration   4: 98189.219 ops/s
# Warmup Iteration   5: 104038.607 ops/s
# Warmup Iteration   6: 90609.656 ops/s
# Warmup Iteration   7: 102130.651 ops/s
# Warmup Iteration   8: 103536.573 ops/s
# Warmup Iteration   9: 104624.159 ops/s
# Warmup Iteration  10: 101041.875 ops/s
# Warmup Iteration  11: 101900.563 ops/s
# Warmup Iteration  12: 104592.165 ops/s
# Warmup Iteration  13: 103776.212 ops/s
# Warmup Iteration  14: 104964.729 ops/s
# Warmup Iteration  15: 101567.706 ops/s
# Warmup Iteration  16: 106726.540 ops/s
# Warmup Iteration  17: 103580.801 ops/s
# Warmup Iteration  18: 108562.674 ops/s
# Warmup Iteration  19: 105965.264 ops/s
# Warmup Iteration  20: 105218.217 ops/s
# Warmup Iteration  21: 108210.119 ops/s
# Warmup Iteration  22: 104221.694 ops/s
# Warmup Iteration  23: 109011.802 ops/s
# Warmup Iteration  24: 111914.832 ops/s
# Warmup Iteration  25: 104956.448 ops/s
# Warmup Iteration  26: 106611.084 ops/s
# Warmup Iteration  27: 105300.667 ops/s
# Warmup Iteration  28: 106947.232 ops/s
# Warmup Iteration  29: 106943.877 ops/s
# Warmup Iteration  30: 109812.422 ops/s
Iteration   1: 106353.205 ops/s
Iteration   2: 109647.215 ops/s
Iteration   3: 108570.713 ops/s
Iteration   4: 103824.292 ops/s
Iteration   5: 104561.920 ops/s
Iteration   6: 109180.019 ops/s
Iteration   7: 103529.344 ops/s
Iteration   8: 110146.383 ops/s
Iteration   9: 105022.444 ops/s
Iteration  10: 105926.748 ops/s
Iteration  11: 107185.306 ops/s
Iteration  12: 105532.537 ops/s
Iteration  13: 109919.258 ops/s
Iteration  14: 102440.391 ops/s
Iteration  15: 109529.856 ops/s
Iteration  16: 103879.498 ops/s
Iteration  17: 103947.266 ops/s
Iteration  18: 107658.030 ops/s
Iteration  19: 103648.639 ops/s
Iteration  20: 106673.155 ops/s
Iteration  21: 104129.551 ops/s
Iteration  22: 106957.160 ops/s
Iteration  23: 84207.452 ops/s
Iteration  24: 108777.761 ops/s
Iteration  25: 107201.043 ops/s
Iteration  26: 106225.961 ops/s
Iteration  27: 109959.371 ops/s
Iteration  28: 106899.191 ops/s
Iteration  29: 104436.605 ops/s
Iteration  30: 109261.721 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_941._Benchmark.benchmark_Cluster_941":
  105841.068 ±(99.9%) 3134.005 ops/s [Average]
  (min, avg, max) = (84207.452, 105841.068, 110146.383), stdev = 4690.832
  CI (99.9%): [102707.062, 108975.073] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_941._Benchmark.benchmark_Cluster_941  thrpt   30  105841.068 ± 3134.005  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_942._Benchmark.benchmark_Cluster_942$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_942._Benchmark.benchmark_Cluster_942

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8712.943 ops/s
# Warmup Iteration   2: 35410.939 ops/s
# Warmup Iteration   3: 92321.604 ops/s
# Warmup Iteration   4: 95440.804 ops/s
# Warmup Iteration   5: 95216.041 ops/s
# Warmup Iteration   6: 95753.679 ops/s
# Warmup Iteration   7: 106335.018 ops/s
# Warmup Iteration   8: 106267.317 ops/s
# Warmup Iteration   9: 103365.998 ops/s
# Warmup Iteration  10: 110571.737 ops/s
# Warmup Iteration  11: 107158.951 ops/s
# Warmup Iteration  12: 109634.507 ops/s
# Warmup Iteration  13: 104872.358 ops/s
# Warmup Iteration  14: 107373.582 ops/s
# Warmup Iteration  15: 103386.537 ops/s
# Warmup Iteration  16: 106508.948 ops/s
# Warmup Iteration  17: 112235.228 ops/s
# Warmup Iteration  18: 107278.229 ops/s
# Warmup Iteration  19: 110944.523 ops/s
# Warmup Iteration  20: 104739.097 ops/s
# Warmup Iteration  21: 113708.935 ops/s
# Warmup Iteration  22: 107387.980 ops/s
# Warmup Iteration  23: 106418.064 ops/s
# Warmup Iteration  24: 108663.262 ops/s
# Warmup Iteration  25: 112690.247 ops/s
# Warmup Iteration  26: 104198.265 ops/s
# Warmup Iteration  27: 108216.671 ops/s
# Warmup Iteration  28: 109775.747 ops/s
# Warmup Iteration  29: 105924.939 ops/s
# Warmup Iteration  30: 109722.549 ops/s
Iteration   1: 114849.769 ops/s
Iteration   2: 106113.368 ops/s
Iteration   3: 111095.115 ops/s
Iteration   4: 114297.699 ops/s
Iteration   5: 106803.735 ops/s
Iteration   6: 112157.678 ops/s
Iteration   7: 105227.700 ops/s
Iteration   8: 109400.511 ops/s
Iteration   9: 107838.000 ops/s
Iteration  10: 106584.493 ops/s
Iteration  11: 113735.667 ops/s
Iteration  12: 108897.093 ops/s
Iteration  13: 109852.177 ops/s
Iteration  14: 106663.586 ops/s
Iteration  15: 108152.274 ops/s
Iteration  16: 111717.740 ops/s
Iteration  17: 107635.054 ops/s
Iteration  18: 111375.643 ops/s
Iteration  19: 107791.257 ops/s
Iteration  20: 112229.417 ops/s
Iteration  21: 110492.955 ops/s
Iteration  22: 107966.799 ops/s
Iteration  23: 110574.990 ops/s
Iteration  24: 107539.097 ops/s
Iteration  25: 108767.423 ops/s
Iteration  26: 109882.697 ops/s
Iteration  27: 106468.021 ops/s
Iteration  28: 112392.417 ops/s
Iteration  29: 105539.137 ops/s
Iteration  30: 114189.189 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_942._Benchmark.benchmark_Cluster_942":
  109541.023 ±(99.9%) 1858.041 ops/s [Average]
  (min, avg, max) = (105227.700, 109541.023, 114849.769), stdev = 2781.029
  CI (99.9%): [107682.982, 111399.065] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_942._Benchmark.benchmark_Cluster_942  thrpt   30  109541.023 ± 1858.041  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_943._Benchmark.benchmark_Cluster_943$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_943._Benchmark.benchmark_Cluster_943

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3497.297 ops/s
# Warmup Iteration   2: 18830.314 ops/s
# Warmup Iteration   3: 26779.409 ops/s
# Warmup Iteration   4: 25643.138 ops/s
# Warmup Iteration   5: 25600.853 ops/s
# Warmup Iteration   6: 35604.640 ops/s
# Warmup Iteration   7: 33426.020 ops/s
# Warmup Iteration   8: 27134.746 ops/s
# Warmup Iteration   9: 25885.219 ops/s
# Warmup Iteration  10: 70850.516 ops/s
# Warmup Iteration  11: 85472.181 ops/s
# Warmup Iteration  12: 82654.450 ops/s
# Warmup Iteration  13: 86722.566 ops/s
# Warmup Iteration  14: 82379.255 ops/s
# Warmup Iteration  15: 83736.078 ops/s
# Warmup Iteration  16: 82495.051 ops/s
# Warmup Iteration  17: 86730.180 ops/s
# Warmup Iteration  18: 88273.254 ops/s
# Warmup Iteration  19: 84031.437 ops/s
# Warmup Iteration  20: 88446.384 ops/s
# Warmup Iteration  21: 80149.204 ops/s
# Warmup Iteration  22: 85124.464 ops/s
# Warmup Iteration  23: 87628.484 ops/s
# Warmup Iteration  24: 86681.684 ops/s
# Warmup Iteration  25: 84500.028 ops/s
# Warmup Iteration  26: 86567.455 ops/s
# Warmup Iteration  27: 87076.713 ops/s
# Warmup Iteration  28: 83150.295 ops/s
# Warmup Iteration  29: 89190.449 ops/s
# Warmup Iteration  30: 83362.658 ops/s
Iteration   1: 82697.131 ops/s
Iteration   2: 80952.190 ops/s
Iteration   3: 84205.454 ops/s
Iteration   4: 88250.106 ops/s
Iteration   5: 85112.079 ops/s
Iteration   6: 87946.388 ops/s
Iteration   7: 85706.228 ops/s
Iteration   8: 86656.187 ops/s
Iteration   9: 88686.551 ops/s
Iteration  10: 83882.612 ops/s
Iteration  11: 90150.350 ops/s
Iteration  12: 85635.921 ops/s
Iteration  13: 85199.777 ops/s
Iteration  14: 85853.800 ops/s
Iteration  15: 86420.952 ops/s
Iteration  16: 74618.919 ops/s
Iteration  17: 82021.243 ops/s
Iteration  18: 82670.881 ops/s
Iteration  19: 86251.314 ops/s
Iteration  20: 85720.783 ops/s
Iteration  21: 86282.854 ops/s
Iteration  22: 86542.901 ops/s
Iteration  23: 86678.384 ops/s
Iteration  24: 86787.563 ops/s
Iteration  25: 85713.368 ops/s
Iteration  26: 89852.650 ops/s
Iteration  27: 88860.356 ops/s
Iteration  28: 85721.321 ops/s
Iteration  29: 89359.738 ops/s
Iteration  30: 88499.986 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_943._Benchmark.benchmark_Cluster_943":
  85764.600 ±(99.9%) 2063.976 ops/s [Average]
  (min, avg, max) = (74618.919, 85764.600, 90150.350), stdev = 3089.263
  CI (99.9%): [83700.623, 87828.576] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_943._Benchmark.benchmark_Cluster_943  thrpt   30  85764.600 ± 2063.976  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_944._Benchmark.benchmark_Cluster_944$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_944._Benchmark.benchmark_Cluster_944

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4610.488 ops/s
# Warmup Iteration   2: 25034.783 ops/s
# Warmup Iteration   3: 28478.028 ops/s
# Warmup Iteration   4: 30716.846 ops/s
# Warmup Iteration   5: 59420.989 ops/s
# Warmup Iteration   6: 60833.852 ops/s
# Warmup Iteration   7: 69832.182 ops/s
# Warmup Iteration   8: 76240.559 ops/s
# Warmup Iteration   9: 74890.087 ops/s
# Warmup Iteration  10: 80506.854 ops/s
# Warmup Iteration  11: 80903.519 ops/s
# Warmup Iteration  12: 78759.103 ops/s
# Warmup Iteration  13: 80963.613 ops/s
# Warmup Iteration  14: 75925.600 ops/s
# Warmup Iteration  15: 81380.640 ops/s
# Warmup Iteration  16: 79401.211 ops/s
# Warmup Iteration  17: 70133.839 ops/s
# Warmup Iteration  18: 78414.811 ops/s
# Warmup Iteration  19: 78800.525 ops/s
# Warmup Iteration  20: 85849.728 ops/s
# Warmup Iteration  21: 79516.759 ops/s
# Warmup Iteration  22: 84980.797 ops/s
# Warmup Iteration  23: 74903.565 ops/s
# Warmup Iteration  24: 74666.198 ops/s
# Warmup Iteration  25: 84695.299 ops/s
# Warmup Iteration  26: 83271.911 ops/s
# Warmup Iteration  27: 80075.335 ops/s
# Warmup Iteration  28: 84863.597 ops/s
# Warmup Iteration  29: 77943.338 ops/s
# Warmup Iteration  30: 80773.916 ops/s
Iteration   1: 69112.165 ops/s
Iteration   2: 73345.539 ops/s
Iteration   3: 81050.366 ops/s
Iteration   4: 74653.493 ops/s
Iteration   5: 80309.548 ops/s
Iteration   6: 85325.307 ops/s
Iteration   7: 77279.274 ops/s
Iteration   8: 82864.982 ops/s
Iteration   9: 79175.147 ops/s
Iteration  10: 82911.196 ops/s
Iteration  11: 72092.704 ops/s
Iteration  12: 74925.518 ops/s
Iteration  13: 78464.288 ops/s
Iteration  14: 84748.233 ops/s
Iteration  15: 78411.879 ops/s
Iteration  16: 81946.387 ops/s
Iteration  17: 79098.668 ops/s
Iteration  18: 76949.766 ops/s
Iteration  19: 79514.899 ops/s
Iteration  20: 83895.134 ops/s
Iteration  21: 81420.565 ops/s
Iteration  22: 79041.811 ops/s
Iteration  23: 72786.692 ops/s
Iteration  24: 76954.390 ops/s
Iteration  25: 82019.334 ops/s
Iteration  26: 82019.869 ops/s
Iteration  27: 80559.233 ops/s
Iteration  28: 79314.497 ops/s
Iteration  29: 68497.033 ops/s
Iteration  30: 82093.546 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_944._Benchmark.benchmark_Cluster_944":
  78692.715 ±(99.9%) 2907.913 ops/s [Average]
  (min, avg, max) = (68497.033, 78692.715, 85325.307), stdev = 4352.428
  CI (99.9%): [75784.802, 81600.629] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_944._Benchmark.benchmark_Cluster_944  thrpt   30  78692.715 ± 2907.913  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_945._Benchmark.benchmark_Cluster_945$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_945._Benchmark.benchmark_Cluster_945

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18525.888 ops/s
# Warmup Iteration   2: 83115.728 ops/s
# Warmup Iteration   3: 133995.389 ops/s
# Warmup Iteration   4: 130313.559 ops/s
# Warmup Iteration   5: 151146.395 ops/s
# Warmup Iteration   6: 148762.000 ops/s
# Warmup Iteration   7: 143603.537 ops/s
# Warmup Iteration   8: 152881.039 ops/s
# Warmup Iteration   9: 146249.555 ops/s
# Warmup Iteration  10: 149435.016 ops/s
# Warmup Iteration  11: 143656.155 ops/s
# Warmup Iteration  12: 147415.597 ops/s
# Warmup Iteration  13: 149178.603 ops/s
# Warmup Iteration  14: 148383.537 ops/s
# Warmup Iteration  15: 149745.045 ops/s
# Warmup Iteration  16: 141177.633 ops/s
# Warmup Iteration  17: 148019.964 ops/s
# Warmup Iteration  18: 143201.740 ops/s
# Warmup Iteration  19: 152952.397 ops/s
# Warmup Iteration  20: 156179.604 ops/s
# Warmup Iteration  21: 149941.839 ops/s
# Warmup Iteration  22: 159630.191 ops/s
# Warmup Iteration  23: 159123.600 ops/s
# Warmup Iteration  24: 152340.308 ops/s
# Warmup Iteration  25: 149372.775 ops/s
# Warmup Iteration  26: 160456.971 ops/s
# Warmup Iteration  27: 156461.384 ops/s
# Warmup Iteration  28: 152687.517 ops/s
# Warmup Iteration  29: 150499.565 ops/s
# Warmup Iteration  30: 160198.588 ops/s
Iteration   1: 153442.371 ops/s
Iteration   2: 150454.374 ops/s
Iteration   3: 150660.852 ops/s
Iteration   4: 156779.634 ops/s
Iteration   5: 154130.216 ops/s
Iteration   6: 155213.701 ops/s
Iteration   7: 150363.245 ops/s
Iteration   8: 155780.420 ops/s
Iteration   9: 156029.812 ops/s
Iteration  10: 144019.257 ops/s
Iteration  11: 133036.863 ops/s
Iteration  12: 151897.233 ops/s
Iteration  13: 157096.111 ops/s
Iteration  14: 148291.452 ops/s
Iteration  15: 151915.527 ops/s
Iteration  16: 151837.269 ops/s
Iteration  17: 151064.249 ops/s
Iteration  18: 157616.974 ops/s
Iteration  19: 153432.903 ops/s
Iteration  20: 159783.637 ops/s
Iteration  21: 147339.410 ops/s
Iteration  22: 152761.635 ops/s
Iteration  23: 157258.774 ops/s
Iteration  24: 151464.525 ops/s
Iteration  25: 157341.891 ops/s
Iteration  26: 151001.867 ops/s
Iteration  27: 157379.840 ops/s
Iteration  28: 148488.375 ops/s
Iteration  29: 155002.201 ops/s
Iteration  30: 160119.773 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_945._Benchmark.benchmark_Cluster_945":
  152700.146 ±(99.9%) 3545.310 ops/s [Average]
  (min, avg, max) = (133036.863, 152700.146, 160119.773), stdev = 5306.453
  CI (99.9%): [149154.837, 156245.456] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_945._Benchmark.benchmark_Cluster_945  thrpt   30  152700.146 ± 3545.310  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_946._Benchmark.benchmark_Cluster_946$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_946._Benchmark.benchmark_Cluster_946

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3197.657 ops/s
# Warmup Iteration   2: 16360.288 ops/s
# Warmup Iteration   3: 25441.858 ops/s
# Warmup Iteration   4: 30276.295 ops/s
# Warmup Iteration   5: 44772.877 ops/s
# Warmup Iteration   6: 86906.366 ops/s
# Warmup Iteration   7: 95445.685 ops/s
# Warmup Iteration   8: 95118.338 ops/s
# Warmup Iteration   9: 95680.651 ops/s
# Warmup Iteration  10: 94525.770 ops/s
# Warmup Iteration  11: 84741.621 ops/s
# Warmup Iteration  12: 93767.170 ops/s
# Warmup Iteration  13: 91550.933 ops/s
# Warmup Iteration  14: 94603.577 ops/s
# Warmup Iteration  15: 97499.311 ops/s
# Warmup Iteration  16: 93064.244 ops/s
# Warmup Iteration  17: 102819.777 ops/s
# Warmup Iteration  18: 95508.063 ops/s
# Warmup Iteration  19: 94873.996 ops/s
# Warmup Iteration  20: 102279.941 ops/s
# Warmup Iteration  21: 101377.690 ops/s
# Warmup Iteration  22: 94881.926 ops/s
# Warmup Iteration  23: 97691.366 ops/s
# Warmup Iteration  24: 98488.649 ops/s
# Warmup Iteration  25: 98198.839 ops/s
# Warmup Iteration  26: 95373.751 ops/s
# Warmup Iteration  27: 97924.864 ops/s
# Warmup Iteration  28: 97984.039 ops/s
# Warmup Iteration  29: 93992.068 ops/s
# Warmup Iteration  30: 101198.102 ops/s
Iteration   1: 94051.018 ops/s
Iteration   2: 100342.949 ops/s
Iteration   3: 95801.952 ops/s
Iteration   4: 97572.084 ops/s
Iteration   5: 99212.185 ops/s
Iteration   6: 96215.644 ops/s
Iteration   7: 100369.738 ops/s
Iteration   8: 96057.188 ops/s
Iteration   9: 102313.483 ops/s
Iteration  10: 94652.063 ops/s
Iteration  11: 98660.340 ops/s
Iteration  12: 98567.006 ops/s
Iteration  13: 94814.515 ops/s
Iteration  14: 97667.296 ops/s
Iteration  15: 95962.516 ops/s
Iteration  16: 99694.259 ops/s
Iteration  17: 100649.274 ops/s
Iteration  18: 95295.151 ops/s
Iteration  19: 98499.718 ops/s
Iteration  20: 98269.610 ops/s
Iteration  21: 97754.404 ops/s
Iteration  22: 101072.762 ops/s
Iteration  23: 96271.039 ops/s
Iteration  24: 97861.485 ops/s
Iteration  25: 96403.688 ops/s
Iteration  26: 99964.307 ops/s
Iteration  27: 96467.135 ops/s
Iteration  28: 97780.331 ops/s
Iteration  29: 97513.265 ops/s
Iteration  30: 97081.260 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_946._Benchmark.benchmark_Cluster_946":
  97761.256 ±(99.9%) 1377.840 ops/s [Average]
  (min, avg, max) = (94051.018, 97761.256, 102313.483), stdev = 2062.286
  CI (99.9%): [96383.415, 99139.096] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_946._Benchmark.benchmark_Cluster_946  thrpt   30  97761.256 ± 1377.840  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_947._Benchmark.benchmark_Cluster_947$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_947._Benchmark.benchmark_Cluster_947

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7923.037 ops/s
# Warmup Iteration   2: 39567.955 ops/s
# Warmup Iteration   3: 59941.553 ops/s
# Warmup Iteration   4: 125103.259 ops/s
# Warmup Iteration   5: 117523.676 ops/s
# Warmup Iteration   6: 130821.654 ops/s
# Warmup Iteration   7: 136223.888 ops/s
# Warmup Iteration   8: 130643.532 ops/s
# Warmup Iteration   9: 134749.482 ops/s
# Warmup Iteration  10: 135362.613 ops/s
# Warmup Iteration  11: 135932.918 ops/s
# Warmup Iteration  12: 138304.832 ops/s
# Warmup Iteration  13: 133112.279 ops/s
# Warmup Iteration  14: 138050.651 ops/s
# Warmup Iteration  15: 137659.790 ops/s
# Warmup Iteration  16: 133573.927 ops/s
# Warmup Iteration  17: 134893.106 ops/s
# Warmup Iteration  18: 143531.577 ops/s
# Warmup Iteration  19: 132808.335 ops/s
# Warmup Iteration  20: 137348.374 ops/s
# Warmup Iteration  21: 144821.790 ops/s
# Warmup Iteration  22: 134518.764 ops/s
# Warmup Iteration  23: 134272.223 ops/s
# Warmup Iteration  24: 139049.095 ops/s
# Warmup Iteration  25: 136121.629 ops/s
# Warmup Iteration  26: 140793.340 ops/s
# Warmup Iteration  27: 139970.797 ops/s
# Warmup Iteration  28: 134773.705 ops/s
# Warmup Iteration  29: 140376.767 ops/s
# Warmup Iteration  30: 133771.638 ops/s
Iteration   1: 136199.202 ops/s
Iteration   2: 139145.703 ops/s
Iteration   3: 138701.011 ops/s
Iteration   4: 143422.843 ops/s
Iteration   5: 112569.402 ops/s
Iteration   6: 137926.124 ops/s
Iteration   7: 142025.787 ops/s
Iteration   8: 136525.964 ops/s
Iteration   9: 136838.127 ops/s
Iteration  10: 140791.127 ops/s
Iteration  11: 133788.029 ops/s
Iteration  12: 139597.967 ops/s
Iteration  13: 140633.460 ops/s
Iteration  14: 135935.646 ops/s
Iteration  15: 138831.965 ops/s
Iteration  16: 142885.237 ops/s
Iteration  17: 135281.252 ops/s
Iteration  18: 139287.303 ops/s
Iteration  19: 138579.159 ops/s
Iteration  20: 140754.237 ops/s
Iteration  21: 136454.326 ops/s
Iteration  22: 138349.241 ops/s
Iteration  23: 145076.843 ops/s
Iteration  24: 136217.280 ops/s
Iteration  25: 141004.904 ops/s
Iteration  26: 136270.725 ops/s
Iteration  27: 141637.521 ops/s
Iteration  28: 137438.209 ops/s
Iteration  29: 139055.106 ops/s
Iteration  30: 139736.538 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_947._Benchmark.benchmark_Cluster_947":
  138032.008 ±(99.9%) 3653.405 ops/s [Average]
  (min, avg, max) = (112569.402, 138032.008, 145076.843), stdev = 5468.245
  CI (99.9%): [134378.603, 141685.413] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_947._Benchmark.benchmark_Cluster_947  thrpt   30  138032.008 ± 3653.405  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_948._Benchmark.benchmark_Cluster_948$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_948._Benchmark.benchmark_Cluster_948

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1965.218 ops/s
# Warmup Iteration   2: 19658.219 ops/s
# Warmup Iteration   3: 61698.182 ops/s
# Warmup Iteration   4: 41255.436 ops/s
# Warmup Iteration   5: 74290.361 ops/s
# Warmup Iteration   6: 75074.046 ops/s
# Warmup Iteration   7: 75989.030 ops/s
# Warmup Iteration   8: 90492.217 ops/s
# Warmup Iteration   9: 84984.540 ops/s
# Warmup Iteration  10: 89867.080 ops/s
# Warmup Iteration  11: 85760.063 ops/s
# Warmup Iteration  12: 86663.805 ops/s
# Warmup Iteration  13: 87903.407 ops/s
# Warmup Iteration  14: 84369.791 ops/s
# Warmup Iteration  15: 86151.095 ops/s
# Warmup Iteration  16: 85644.064 ops/s
# Warmup Iteration  17: 87599.521 ops/s
# Warmup Iteration  18: 89360.842 ops/s
# Warmup Iteration  19: 88733.028 ops/s
# Warmup Iteration  20: 86034.585 ops/s
# Warmup Iteration  21: 91566.781 ops/s
# Warmup Iteration  22: 90386.361 ops/s
# Warmup Iteration  23: 86496.057 ops/s
# Warmup Iteration  24: 86864.122 ops/s
# Warmup Iteration  25: 85648.588 ops/s
# Warmup Iteration  26: 91263.134 ops/s
# Warmup Iteration  27: 85049.399 ops/s
# Warmup Iteration  28: 90291.978 ops/s
# Warmup Iteration  29: 84533.989 ops/s
# Warmup Iteration  30: 86482.836 ops/s
Iteration   1: 90780.598 ops/s
Iteration   2: 84401.902 ops/s
Iteration   3: 86510.522 ops/s
Iteration   4: 88996.131 ops/s
Iteration   5: 87192.736 ops/s
Iteration   6: 90947.455 ops/s
Iteration   7: 86936.537 ops/s
Iteration   8: 84977.506 ops/s
Iteration   9: 88661.095 ops/s
Iteration  10: 87278.542 ops/s
Iteration  11: 89313.674 ops/s
Iteration  12: 85734.447 ops/s
Iteration  13: 87053.753 ops/s
Iteration  14: 91847.456 ops/s
Iteration  15: 87558.546 ops/s
Iteration  16: 84331.534 ops/s
Iteration  17: 91365.747 ops/s
Iteration  18: 91474.137 ops/s
Iteration  19: 83717.174 ops/s
Iteration  20: 90039.442 ops/s
Iteration  21: 85984.346 ops/s
Iteration  22: 90441.715 ops/s
Iteration  23: 85685.262 ops/s
Iteration  24: 90528.631 ops/s
Iteration  25: 87110.669 ops/s
Iteration  26: 85533.918 ops/s
Iteration  27: 91372.279 ops/s
Iteration  28: 85276.194 ops/s
Iteration  29: 88942.161 ops/s
Iteration  30: 84676.524 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_948._Benchmark.benchmark_Cluster_948":
  87822.354 ±(99.9%) 1687.419 ops/s [Average]
  (min, avg, max) = (83717.174, 87822.354, 91847.456), stdev = 2525.649
  CI (99.9%): [86134.936, 89509.773] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_948._Benchmark.benchmark_Cluster_948  thrpt   30  87822.354 ± 1687.419  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_949._Benchmark.benchmark_Cluster_949$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_949._Benchmark.benchmark_Cluster_949

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11617.676 ops/s
# Warmup Iteration   2: 42984.364 ops/s
# Warmup Iteration   3: 42291.283 ops/s
# Warmup Iteration   4: 96562.925 ops/s
# Warmup Iteration   5: 117092.804 ops/s
# Warmup Iteration   6: 126541.357 ops/s
# Warmup Iteration   7: 115077.522 ops/s
# Warmup Iteration   8: 116335.381 ops/s
# Warmup Iteration   9: 116550.149 ops/s
# Warmup Iteration  10: 119858.779 ops/s
# Warmup Iteration  11: 122972.732 ops/s
# Warmup Iteration  12: 114137.476 ops/s
# Warmup Iteration  13: 124879.010 ops/s
# Warmup Iteration  14: 121728.004 ops/s
# Warmup Iteration  15: 125841.228 ops/s
# Warmup Iteration  16: 122586.446 ops/s
# Warmup Iteration  17: 130047.139 ops/s
# Warmup Iteration  18: 131197.270 ops/s
# Warmup Iteration  19: 125057.154 ops/s
# Warmup Iteration  20: 133027.544 ops/s
# Warmup Iteration  21: 126853.359 ops/s
# Warmup Iteration  22: 125918.408 ops/s
# Warmup Iteration  23: 127512.705 ops/s
# Warmup Iteration  24: 129607.130 ops/s
# Warmup Iteration  25: 126588.808 ops/s
# Warmup Iteration  26: 128715.720 ops/s
# Warmup Iteration  27: 129871.624 ops/s
# Warmup Iteration  28: 126855.833 ops/s
# Warmup Iteration  29: 132920.721 ops/s
# Warmup Iteration  30: 101889.374 ops/s
Iteration   1: 123842.056 ops/s
Iteration   2: 131509.394 ops/s
Iteration   3: 128376.445 ops/s
Iteration   4: 128633.578 ops/s
Iteration   5: 128362.374 ops/s
Iteration   6: 126169.945 ops/s
Iteration   7: 128066.468 ops/s
Iteration   8: 130633.583 ops/s
Iteration   9: 126394.366 ops/s
Iteration  10: 131428.619 ops/s
Iteration  11: 125811.613 ops/s
Iteration  12: 134401.187 ops/s
Iteration  13: 126694.773 ops/s
Iteration  14: 127163.272 ops/s
Iteration  15: 125695.392 ops/s
Iteration  16: 133848.136 ops/s
Iteration  17: 126213.068 ops/s
Iteration  18: 131559.225 ops/s
Iteration  19: 127045.585 ops/s
Iteration  20: 131563.557 ops/s
Iteration  21: 125635.514 ops/s
Iteration  22: 132318.714 ops/s
Iteration  23: 115216.316 ops/s
Iteration  24: 131651.914 ops/s
Iteration  25: 132133.108 ops/s
Iteration  26: 125535.108 ops/s
Iteration  27: 133072.735 ops/s
Iteration  28: 131233.437 ops/s
Iteration  29: 126454.040 ops/s
Iteration  30: 131466.070 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_949._Benchmark.benchmark_Cluster_949":
  128604.320 ±(99.9%) 2590.109 ops/s [Average]
  (min, avg, max) = (115216.316, 128604.320, 134401.187), stdev = 3876.753
  CI (99.9%): [126014.211, 131194.428] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_949._Benchmark.benchmark_Cluster_949  thrpt   30  128604.320 ± 2590.109  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_95._Benchmark.benchmark_Cluster_95$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_95._Benchmark.benchmark_Cluster_95

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2776.452 ops/s
# Warmup Iteration   2: 30963.195 ops/s
# Warmup Iteration   3: 63887.743 ops/s
# Warmup Iteration   4: 88214.923 ops/s
# Warmup Iteration   5: 97482.800 ops/s
# Warmup Iteration   6: 96096.886 ops/s
# Warmup Iteration   7: 101870.885 ops/s
# Warmup Iteration   8: 96090.345 ops/s
# Warmup Iteration   9: 98078.489 ops/s
# Warmup Iteration  10: 97323.382 ops/s
# Warmup Iteration  11: 97112.840 ops/s
# Warmup Iteration  12: 100186.957 ops/s
# Warmup Iteration  13: 96715.225 ops/s
# Warmup Iteration  14: 100562.877 ops/s
# Warmup Iteration  15: 97394.314 ops/s
# Warmup Iteration  16: 93973.628 ops/s
# Warmup Iteration  17: 103097.111 ops/s
# Warmup Iteration  18: 105376.621 ops/s
# Warmup Iteration  19: 98999.203 ops/s
# Warmup Iteration  20: 107232.008 ops/s
# Warmup Iteration  21: 100113.620 ops/s
# Warmup Iteration  22: 102300.573 ops/s
# Warmup Iteration  23: 99451.072 ops/s
# Warmup Iteration  24: 101773.007 ops/s
# Warmup Iteration  25: 106811.349 ops/s
# Warmup Iteration  26: 101078.458 ops/s
# Warmup Iteration  27: 101858.972 ops/s
# Warmup Iteration  28: 103347.297 ops/s
# Warmup Iteration  29: 102033.268 ops/s
# Warmup Iteration  30: 106857.925 ops/s
Iteration   1: 101120.121 ops/s
Iteration   2: 104143.880 ops/s
Iteration   3: 99957.132 ops/s
Iteration   4: 102942.882 ops/s
Iteration   5: 104802.029 ops/s
Iteration   6: 99674.532 ops/s
Iteration   7: 106559.341 ops/s
Iteration   8: 101403.895 ops/s
Iteration   9: 108788.982 ops/s
Iteration  10: 101641.754 ops/s
Iteration  11: 100273.577 ops/s
Iteration  12: 106431.185 ops/s
Iteration  13: 101119.488 ops/s
Iteration  14: 101530.716 ops/s
Iteration  15: 102395.479 ops/s
Iteration  16: 107010.246 ops/s
Iteration  17: 99821.988 ops/s
Iteration  18: 105300.712 ops/s
Iteration  19: 100755.155 ops/s
Iteration  20: 105480.694 ops/s
Iteration  21: 100527.881 ops/s
Iteration  22: 101431.724 ops/s
Iteration  23: 106731.993 ops/s
Iteration  24: 97083.928 ops/s
Iteration  25: 105340.768 ops/s
Iteration  26: 100951.980 ops/s
Iteration  27: 104098.651 ops/s
Iteration  28: 98940.417 ops/s
Iteration  29: 102356.987 ops/s
Iteration  30: 104324.973 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_95._Benchmark.benchmark_Cluster_95":
  102764.770 ±(99.9%) 1890.881 ops/s [Average]
  (min, avg, max) = (97083.928, 102764.770, 108788.982), stdev = 2830.182
  CI (99.9%): [100873.888, 104655.651] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_95._Benchmark.benchmark_Cluster_95  thrpt   30  102764.770 ± 1890.881  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_950._Benchmark.benchmark_Cluster_950$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_950._Benchmark.benchmark_Cluster_950

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8392.008 ops/s
# Warmup Iteration   2: 30658.135 ops/s
# Warmup Iteration   3: 92227.941 ops/s
# Warmup Iteration   4: 106372.279 ops/s
# Warmup Iteration   5: 118603.171 ops/s
# Warmup Iteration   6: 126202.777 ops/s
# Warmup Iteration   7: 125156.229 ops/s
# Warmup Iteration   8: 125584.076 ops/s
# Warmup Iteration   9: 118556.754 ops/s
# Warmup Iteration  10: 129025.738 ops/s
# Warmup Iteration  11: 124877.536 ops/s
# Warmup Iteration  12: 132263.005 ops/s
# Warmup Iteration  13: 126112.594 ops/s
# Warmup Iteration  14: 130820.587 ops/s
# Warmup Iteration  15: 128183.725 ops/s
# Warmup Iteration  16: 125629.055 ops/s
# Warmup Iteration  17: 132528.573 ops/s
# Warmup Iteration  18: 136038.813 ops/s
# Warmup Iteration  19: 130997.409 ops/s
# Warmup Iteration  20: 137698.977 ops/s
# Warmup Iteration  21: 128050.708 ops/s
# Warmup Iteration  22: 131904.858 ops/s
# Warmup Iteration  23: 138006.010 ops/s
# Warmup Iteration  24: 130459.093 ops/s
# Warmup Iteration  25: 103067.127 ops/s
# Warmup Iteration  26: 134406.696 ops/s
# Warmup Iteration  27: 126510.980 ops/s
# Warmup Iteration  28: 137098.160 ops/s
# Warmup Iteration  29: 131306.227 ops/s
# Warmup Iteration  30: 125959.867 ops/s
Iteration   1: 136814.307 ops/s
Iteration   2: 128987.223 ops/s
Iteration   3: 134734.187 ops/s
Iteration   4: 131653.566 ops/s
Iteration   5: 134776.231 ops/s
Iteration   6: 134117.727 ops/s
Iteration   7: 130831.643 ops/s
Iteration   8: 136720.260 ops/s
Iteration   9: 129974.408 ops/s
Iteration  10: 134933.601 ops/s
Iteration  11: 130090.930 ops/s
Iteration  12: 136686.267 ops/s
Iteration  13: 134183.913 ops/s
Iteration  14: 131294.428 ops/s
Iteration  15: 135957.081 ops/s
Iteration  16: 128547.718 ops/s
Iteration  17: 137968.362 ops/s
Iteration  18: 126661.128 ops/s
Iteration  19: 135259.997 ops/s
Iteration  20: 140237.293 ops/s
Iteration  21: 138813.926 ops/s
Iteration  22: 128020.402 ops/s
Iteration  23: 137371.920 ops/s
Iteration  24: 129083.891 ops/s
Iteration  25: 134406.674 ops/s
Iteration  26: 128591.844 ops/s
Iteration  27: 132850.002 ops/s
Iteration  28: 132139.241 ops/s
Iteration  29: 130307.373 ops/s
Iteration  30: 134396.730 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_950._Benchmark.benchmark_Cluster_950":
  133213.742 ±(99.9%) 2391.743 ops/s [Average]
  (min, avg, max) = (126661.128, 133213.742, 140237.293), stdev = 3579.849
  CI (99.9%): [130821.999, 135605.486] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_950._Benchmark.benchmark_Cluster_950  thrpt   30  133213.742 ± 2391.743  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_951._Benchmark.benchmark_Cluster_951$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_951._Benchmark.benchmark_Cluster_951

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17810.526 ops/s
# Warmup Iteration   2: 74159.041 ops/s
# Warmup Iteration   3: 84225.060 ops/s
# Warmup Iteration   4: 89306.849 ops/s
# Warmup Iteration   5: 90741.989 ops/s
# Warmup Iteration   6: 86855.884 ops/s
# Warmup Iteration   7: 95512.352 ops/s
# Warmup Iteration   8: 98667.448 ops/s
# Warmup Iteration   9: 92127.476 ops/s
# Warmup Iteration  10: 96932.280 ops/s
# Warmup Iteration  11: 92920.723 ops/s
# Warmup Iteration  12: 95843.147 ops/s
# Warmup Iteration  13: 98155.082 ops/s
# Warmup Iteration  14: 91306.603 ops/s
# Warmup Iteration  15: 99751.153 ops/s
# Warmup Iteration  16: 94667.025 ops/s
# Warmup Iteration  17: 96527.763 ops/s
# Warmup Iteration  18: 96527.934 ops/s
# Warmup Iteration  19: 100350.780 ops/s
# Warmup Iteration  20: 99312.236 ops/s
# Warmup Iteration  21: 100311.749 ops/s
# Warmup Iteration  22: 96554.076 ops/s
# Warmup Iteration  23: 98019.953 ops/s
# Warmup Iteration  24: 101666.718 ops/s
# Warmup Iteration  25: 97575.008 ops/s
# Warmup Iteration  26: 100519.866 ops/s
# Warmup Iteration  27: 97160.059 ops/s
# Warmup Iteration  28: 99540.562 ops/s
# Warmup Iteration  29: 97894.642 ops/s
# Warmup Iteration  30: 99059.260 ops/s
Iteration   1: 100805.323 ops/s
Iteration   2: 97733.372 ops/s
Iteration   3: 95984.021 ops/s
Iteration   4: 102417.395 ops/s
Iteration   5: 94870.308 ops/s
Iteration   6: 100599.241 ops/s
Iteration   7: 97064.983 ops/s
Iteration   8: 97112.062 ops/s
Iteration   9: 99590.989 ops/s
Iteration  10: 97275.371 ops/s
Iteration  11: 99839.478 ops/s
Iteration  12: 96867.566 ops/s
Iteration  13: 100917.836 ops/s
Iteration  14: 101154.142 ops/s
Iteration  15: 98343.526 ops/s
Iteration  16: 97527.037 ops/s
Iteration  17: 101530.772 ops/s
Iteration  18: 96336.851 ops/s
Iteration  19: 102052.785 ops/s
Iteration  20: 101113.165 ops/s
Iteration  21: 96492.649 ops/s
Iteration  22: 102579.491 ops/s
Iteration  23: 95769.858 ops/s
Iteration  24: 98879.558 ops/s
Iteration  25: 97006.829 ops/s
Iteration  26: 98935.844 ops/s
Iteration  27: 99357.143 ops/s
Iteration  28: 96362.724 ops/s
Iteration  29: 100449.681 ops/s
Iteration  30: 96127.688 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_951._Benchmark.benchmark_Cluster_951":
  98703.256 ±(99.9%) 1507.551 ops/s [Average]
  (min, avg, max) = (94870.308, 98703.256, 102579.491), stdev = 2256.432
  CI (99.9%): [97195.705, 100210.808] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_951._Benchmark.benchmark_Cluster_951  thrpt   30  98703.256 ± 1507.551  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_952._Benchmark.benchmark_Cluster_952$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_952._Benchmark.benchmark_Cluster_952

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1651.247 ops/s
# Warmup Iteration   2: 10228.177 ops/s
# Warmup Iteration   3: 17038.577 ops/s
# Warmup Iteration   4: 24657.101 ops/s
# Warmup Iteration   5: 36523.798 ops/s
# Warmup Iteration   6: 43946.500 ops/s
# Warmup Iteration   7: 55452.739 ops/s
# Warmup Iteration   8: 58430.059 ops/s
# Warmup Iteration   9: 57223.302 ops/s
# Warmup Iteration  10: 59556.941 ops/s
# Warmup Iteration  11: 63978.366 ops/s
# Warmup Iteration  12: 51547.364 ops/s
# Warmup Iteration  13: 53051.770 ops/s
# Warmup Iteration  14: 64922.489 ops/s
# Warmup Iteration  15: 54854.113 ops/s
# Warmup Iteration  16: 58128.479 ops/s
# Warmup Iteration  17: 64878.886 ops/s
# Warmup Iteration  18: 63406.999 ops/s
# Warmup Iteration  19: 56043.475 ops/s
# Warmup Iteration  20: 62784.176 ops/s
# Warmup Iteration  21: 61665.805 ops/s
# Warmup Iteration  22: 64077.073 ops/s
# Warmup Iteration  23: 57714.619 ops/s
# Warmup Iteration  24: 58333.870 ops/s
# Warmup Iteration  25: 59613.946 ops/s
# Warmup Iteration  26: 57949.097 ops/s
# Warmup Iteration  27: 60989.401 ops/s
# Warmup Iteration  28: 57981.430 ops/s
# Warmup Iteration  29: 55446.841 ops/s
# Warmup Iteration  30: 62228.040 ops/s
Iteration   1: 60697.730 ops/s
Iteration   2: 55933.498 ops/s
Iteration   3: 62194.879 ops/s
Iteration   4: 67104.389 ops/s
Iteration   5: 61033.541 ops/s
Iteration   6: 63410.465 ops/s
Iteration   7: 63413.594 ops/s
Iteration   8: 61276.189 ops/s
Iteration   9: 61526.567 ops/s
Iteration  10: 55957.111 ops/s
Iteration  11: 65651.767 ops/s
Iteration  12: 58818.463 ops/s
Iteration  13: 61302.671 ops/s
Iteration  14: 61671.269 ops/s
Iteration  15: 60778.554 ops/s
Iteration  16: 65928.558 ops/s
Iteration  17: 64578.905 ops/s
Iteration  18: 60889.349 ops/s
Iteration  19: 52386.162 ops/s
Iteration  20: 59312.799 ops/s
Iteration  21: 55023.536 ops/s
Iteration  22: 64994.094 ops/s
Iteration  23: 55642.567 ops/s
Iteration  24: 61234.185 ops/s
Iteration  25: 66326.183 ops/s
Iteration  26: 64554.973 ops/s
Iteration  27: 59883.983 ops/s
Iteration  28: 57915.714 ops/s
Iteration  29: 64643.524 ops/s
Iteration  30: 61642.221 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_952._Benchmark.benchmark_Cluster_952":
  61190.915 ±(99.9%) 2443.193 ops/s [Average]
  (min, avg, max) = (52386.162, 61190.915, 67104.389), stdev = 3656.857
  CI (99.9%): [58747.722, 63634.108] (assumes normal distribution)


# Run complete. Total time: 00:01:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_952._Benchmark.benchmark_Cluster_952  thrpt   30  61190.915 ± 2443.193  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_953._Benchmark.benchmark_Cluster_953$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_953._Benchmark.benchmark_Cluster_953

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1082.811 ops/s
# Warmup Iteration   2: 2633.930 ops/s
# Warmup Iteration   3: 9289.079 ops/s
# Warmup Iteration   4: 36630.230 ops/s
# Warmup Iteration   5: 49772.136 ops/s
# Warmup Iteration   6: 39939.509 ops/s
# Warmup Iteration   7: 61544.937 ops/s
# Warmup Iteration   8: 63445.341 ops/s
# Warmup Iteration   9: 60719.501 ops/s
# Warmup Iteration  10: 63506.741 ops/s
# Warmup Iteration  11: 64612.241 ops/s
# Warmup Iteration  12: 59465.286 ops/s
# Warmup Iteration  13: 62974.605 ops/s
# Warmup Iteration  14: 61457.713 ops/s
# Warmup Iteration  15: 63449.855 ops/s
# Warmup Iteration  16: 63357.017 ops/s
# Warmup Iteration  17: 59414.449 ops/s
# Warmup Iteration  18: 63476.523 ops/s
# Warmup Iteration  19: 61337.391 ops/s
# Warmup Iteration  20: 64071.131 ops/s
# Warmup Iteration  21: 59724.932 ops/s
# Warmup Iteration  22: 60539.902 ops/s
# Warmup Iteration  23: 58709.841 ops/s
# Warmup Iteration  24: 62586.955 ops/s
# Warmup Iteration  25: 62511.092 ops/s
# Warmup Iteration  26: 63843.583 ops/s
# Warmup Iteration  27: 61523.880 ops/s
# Warmup Iteration  28: 62268.327 ops/s
# Warmup Iteration  29: 62300.284 ops/s
# Warmup Iteration  30: 63385.879 ops/s
Iteration   1: 64629.571 ops/s
Iteration   2: 59736.999 ops/s
Iteration   3: 62833.741 ops/s
Iteration   4: 64203.859 ops/s
Iteration   5: 61765.723 ops/s
Iteration   6: 64034.663 ops/s
Iteration   7: 64164.811 ops/s
Iteration   8: 61540.176 ops/s
Iteration   9: 65161.785 ops/s
Iteration  10: 64517.304 ops/s
Iteration  11: 61186.620 ops/s
Iteration  12: 65749.542 ops/s
Iteration  13: 60396.429 ops/s
Iteration  14: 63311.995 ops/s
Iteration  15: 63170.983 ops/s
Iteration  16: 60099.542 ops/s
Iteration  17: 64605.523 ops/s
Iteration  18: 59380.998 ops/s
Iteration  19: 65596.059 ops/s
Iteration  20: 60309.081 ops/s
Iteration  21: 61733.754 ops/s
Iteration  22: 61215.737 ops/s
Iteration  23: 59387.592 ops/s
Iteration  24: 64070.158 ops/s
Iteration  25: 65117.835 ops/s
Iteration  26: 60132.055 ops/s
Iteration  27: 62377.953 ops/s
Iteration  28: 63535.485 ops/s
Iteration  29: 64071.066 ops/s
Iteration  30: 63971.158 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_953._Benchmark.benchmark_Cluster_953":
  62733.607 ±(99.9%) 1336.143 ops/s [Average]
  (min, avg, max) = (59380.998, 62733.607, 65749.542), stdev = 1999.876
  CI (99.9%): [61397.463, 64069.750] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_953._Benchmark.benchmark_Cluster_953  thrpt   30  62733.607 ± 1336.143  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_954._Benchmark.benchmark_Cluster_954$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_954._Benchmark.benchmark_Cluster_954

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 8395.023 ops/s
# Warmup Iteration   2: 51276.599 ops/s
# Warmup Iteration   3: 87113.538 ops/s
# Warmup Iteration   4: 192016.361 ops/s
# Warmup Iteration   5: 183241.115 ops/s
# Warmup Iteration   6: 205978.692 ops/s
# Warmup Iteration   7: 207078.287 ops/s
# Warmup Iteration   8: 209287.574 ops/s
# Warmup Iteration   9: 210835.805 ops/s
# Warmup Iteration  10: 206489.445 ops/s
# Warmup Iteration  11: 205879.838 ops/s
# Warmup Iteration  12: 159040.550 ops/s
# Warmup Iteration  13: 199601.652 ops/s
# Warmup Iteration  14: 201908.915 ops/s
# Warmup Iteration  15: 209468.036 ops/s
# Warmup Iteration  16: 209510.326 ops/s
# Warmup Iteration  17: 208176.747 ops/s
# Warmup Iteration  18: 214978.511 ops/s
# Warmup Iteration  19: 212333.514 ops/s
# Warmup Iteration  20: 216349.473 ops/s
# Warmup Iteration  21: 206875.144 ops/s
# Warmup Iteration  22: 211918.908 ops/s
# Warmup Iteration  23: 200929.264 ops/s
# Warmup Iteration  24: 207636.627 ops/s
# Warmup Iteration  25: 222497.637 ops/s
# Warmup Iteration  26: 206597.895 ops/s
# Warmup Iteration  27: 212948.296 ops/s
# Warmup Iteration  28: 217722.557 ops/s
# Warmup Iteration  29: 210495.553 ops/s
# Warmup Iteration  30: 211765.306 ops/s
Iteration   1: 216527.005 ops/s
Iteration   2: 211642.922 ops/s
Iteration   3: 218280.817 ops/s
Iteration   4: 208627.860 ops/s
Iteration   5: 197632.184 ops/s
Iteration   6: 211631.648 ops/s
Iteration   7: 201920.437 ops/s
Iteration   8: 220499.715 ops/s
Iteration   9: 210975.629 ops/s
Iteration  10: 219312.995 ops/s
Iteration  11: 211455.119 ops/s
Iteration  12: 212598.397 ops/s
Iteration  13: 219361.230 ops/s
Iteration  14: 210364.308 ops/s
Iteration  15: 206852.321 ops/s
Iteration  16: 220119.504 ops/s
Iteration  17: 211294.648 ops/s
Iteration  18: 218837.422 ops/s
Iteration  19: 211927.785 ops/s
Iteration  20: 223986.326 ops/s
Iteration  21: 205330.137 ops/s
Iteration  22: 213421.610 ops/s
Iteration  23: 214648.640 ops/s
Iteration  24: 212000.376 ops/s
Iteration  25: 211811.256 ops/s
Iteration  26: 221831.799 ops/s
Iteration  27: 206856.201 ops/s
Iteration  28: 215377.829 ops/s
Iteration  29: 220074.859 ops/s
Iteration  30: 203673.141 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_954._Benchmark.benchmark_Cluster_954":
  212962.471 ±(99.9%) 4192.774 ops/s [Average]
  (min, avg, max) = (197632.184, 212962.471, 223986.326), stdev = 6275.547
  CI (99.9%): [208769.697, 217155.245] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_954._Benchmark.benchmark_Cluster_954  thrpt   30  212962.471 ± 4192.774  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_955._Benchmark.benchmark_Cluster_955$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_955._Benchmark.benchmark_Cluster_955

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5319.382 ops/s
# Warmup Iteration   2: 18890.629 ops/s
# Warmup Iteration   3: 55888.048 ops/s
# Warmup Iteration   4: 95427.332 ops/s
# Warmup Iteration   5: 117266.866 ops/s
# Warmup Iteration   6: 109976.310 ops/s
# Warmup Iteration   7: 114685.865 ops/s
# Warmup Iteration   8: 115358.625 ops/s
# Warmup Iteration   9: 115546.046 ops/s
# Warmup Iteration  10: 113110.353 ops/s
# Warmup Iteration  11: 111380.204 ops/s
# Warmup Iteration  12: 114554.132 ops/s
# Warmup Iteration  13: 114790.378 ops/s
# Warmup Iteration  14: 113299.565 ops/s
# Warmup Iteration  15: 114972.307 ops/s
# Warmup Iteration  16: 111702.824 ops/s
# Warmup Iteration  17: 115815.533 ops/s
# Warmup Iteration  18: 113366.953 ops/s
# Warmup Iteration  19: 119399.036 ops/s
# Warmup Iteration  20: 121799.873 ops/s
# Warmup Iteration  21: 116146.204 ops/s
# Warmup Iteration  22: 117661.106 ops/s
# Warmup Iteration  23: 113398.321 ops/s
# Warmup Iteration  24: 118921.509 ops/s
# Warmup Iteration  25: 116330.604 ops/s
# Warmup Iteration  26: 116150.132 ops/s
# Warmup Iteration  27: 121463.435 ops/s
# Warmup Iteration  28: 109715.576 ops/s
# Warmup Iteration  29: 113345.260 ops/s
# Warmup Iteration  30: 115525.089 ops/s
Iteration   1: 122246.005 ops/s
Iteration   2: 120313.690 ops/s
Iteration   3: 115256.264 ops/s
Iteration   4: 121323.453 ops/s
Iteration   5: 113965.107 ops/s
Iteration   6: 113505.286 ops/s
Iteration   7: 117561.948 ops/s
Iteration   8: 117919.227 ops/s
Iteration   9: 123138.208 ops/s
Iteration  10: 114486.199 ops/s
Iteration  11: 122750.071 ops/s
Iteration  12: 119898.769 ops/s
Iteration  13: 116496.428 ops/s
Iteration  14: 121810.062 ops/s
Iteration  15: 113367.154 ops/s
Iteration  16: 114632.532 ops/s
Iteration  17: 121474.228 ops/s
Iteration  18: 114345.499 ops/s
Iteration  19: 120722.857 ops/s
Iteration  20: 116707.095 ops/s
Iteration  21: 119866.549 ops/s
Iteration  22: 114137.279 ops/s
Iteration  23: 118358.675 ops/s
Iteration  24: 120667.200 ops/s
Iteration  25: 112749.155 ops/s
Iteration  26: 123306.893 ops/s
Iteration  27: 119753.355 ops/s
Iteration  28: 118772.842 ops/s
Iteration  29: 120549.134 ops/s
Iteration  30: 113743.456 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_955._Benchmark.benchmark_Cluster_955":
  118127.487 ±(99.9%) 2276.952 ops/s [Average]
  (min, avg, max) = (112749.155, 118127.487, 123306.893), stdev = 3408.035
  CI (99.9%): [115850.535, 120404.439] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_955._Benchmark.benchmark_Cluster_955  thrpt   30  118127.487 ± 2276.952  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_956._Benchmark.benchmark_Cluster_956$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_956._Benchmark.benchmark_Cluster_956

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6553.816 ops/s
# Warmup Iteration   2: 36080.682 ops/s
# Warmup Iteration   3: 72702.896 ops/s
# Warmup Iteration   4: 89509.466 ops/s
# Warmup Iteration   5: 104076.682 ops/s
# Warmup Iteration   6: 100547.554 ops/s
# Warmup Iteration   7: 86525.864 ops/s
# Warmup Iteration   8: 96584.935 ops/s
# Warmup Iteration   9: 96224.454 ops/s
# Warmup Iteration  10: 103681.715 ops/s
# Warmup Iteration  11: 92443.818 ops/s
# Warmup Iteration  12: 100613.777 ops/s
# Warmup Iteration  13: 107560.241 ops/s
# Warmup Iteration  14: 101230.598 ops/s
# Warmup Iteration  15: 107467.959 ops/s
# Warmup Iteration  16: 102527.571 ops/s
# Warmup Iteration  17: 106907.944 ops/s
# Warmup Iteration  18: 107806.882 ops/s
# Warmup Iteration  19: 105742.172 ops/s
# Warmup Iteration  20: 106874.611 ops/s
# Warmup Iteration  21: 106863.825 ops/s
# Warmup Iteration  22: 108946.905 ops/s
# Warmup Iteration  23: 104853.173 ops/s
# Warmup Iteration  24: 104276.144 ops/s
# Warmup Iteration  25: 107211.486 ops/s
# Warmup Iteration  26: 107083.916 ops/s
# Warmup Iteration  27: 103984.153 ops/s
# Warmup Iteration  28: 103213.803 ops/s
# Warmup Iteration  29: 106957.009 ops/s
# Warmup Iteration  30: 103399.104 ops/s
Iteration   1: 109136.531 ops/s
Iteration   2: 107751.286 ops/s
Iteration   3: 104027.788 ops/s
Iteration   4: 110427.903 ops/s
Iteration   5: 105111.929 ops/s
Iteration   6: 107323.954 ops/s
Iteration   7: 110997.545 ops/s
Iteration   8: 101376.052 ops/s
Iteration   9: 107545.637 ops/s
Iteration  10: 101698.339 ops/s
Iteration  11: 108112.660 ops/s
Iteration  12: 102281.039 ops/s
Iteration  13: 104906.470 ops/s
Iteration  14: 107104.676 ops/s
Iteration  15: 102316.549 ops/s
Iteration  16: 109043.337 ops/s
Iteration  17: 102828.580 ops/s
Iteration  18: 107972.237 ops/s
Iteration  19: 110788.209 ops/s
Iteration  20: 103473.878 ops/s
Iteration  21: 109821.026 ops/s
Iteration  22: 105258.201 ops/s
Iteration  23: 110120.221 ops/s
Iteration  24: 103756.636 ops/s
Iteration  25: 107547.459 ops/s
Iteration  26: 110145.690 ops/s
Iteration  27: 105245.787 ops/s
Iteration  28: 108475.630 ops/s
Iteration  29: 105492.372 ops/s
Iteration  30: 111924.262 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_956._Benchmark.benchmark_Cluster_956":
  106733.729 ±(99.9%) 2059.747 ops/s [Average]
  (min, avg, max) = (101376.052, 106733.729, 111924.262), stdev = 3082.933
  CI (99.9%): [104673.982, 108793.477] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_956._Benchmark.benchmark_Cluster_956  thrpt   30  106733.729 ± 2059.747  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_957._Benchmark.benchmark_Cluster_957$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_957._Benchmark.benchmark_Cluster_957

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5516.593 ops/s
# Warmup Iteration   2: 29382.549 ops/s
# Warmup Iteration   3: 32294.954 ops/s
# Warmup Iteration   4: 40395.690 ops/s
# Warmup Iteration   5: 55762.258 ops/s
# Warmup Iteration   6: 75148.161 ops/s
# Warmup Iteration   7: 123353.719 ops/s
# Warmup Iteration   8: 111095.100 ops/s
# Warmup Iteration   9: 125494.009 ops/s
# Warmup Iteration  10: 122770.372 ops/s
# Warmup Iteration  11: 123498.860 ops/s
# Warmup Iteration  12: 123320.855 ops/s
# Warmup Iteration  13: 123168.832 ops/s
# Warmup Iteration  14: 121247.332 ops/s
# Warmup Iteration  15: 122146.553 ops/s
# Warmup Iteration  16: 123045.820 ops/s
# Warmup Iteration  17: 129923.660 ops/s
# Warmup Iteration  18: 124962.144 ops/s
# Warmup Iteration  19: 132067.237 ops/s
# Warmup Iteration  20: 129652.616 ops/s
# Warmup Iteration  21: 127590.149 ops/s
# Warmup Iteration  22: 131258.668 ops/s
# Warmup Iteration  23: 126129.560 ops/s
# Warmup Iteration  24: 127500.846 ops/s
# Warmup Iteration  25: 128564.308 ops/s
# Warmup Iteration  26: 123712.186 ops/s
# Warmup Iteration  27: 132185.786 ops/s
# Warmup Iteration  28: 123805.074 ops/s
# Warmup Iteration  29: 131864.473 ops/s
# Warmup Iteration  30: 123886.242 ops/s
Iteration   1: 134527.662 ops/s
Iteration   2: 128657.552 ops/s
Iteration   3: 126329.782 ops/s
Iteration   4: 129771.344 ops/s
Iteration   5: 128829.179 ops/s
Iteration   6: 122179.638 ops/s
Iteration   7: 124833.628 ops/s
Iteration   8: 127840.532 ops/s
Iteration   9: 135648.899 ops/s
Iteration  10: 130981.691 ops/s
Iteration  11: 126866.977 ops/s
Iteration  12: 133032.566 ops/s
Iteration  13: 125993.132 ops/s
Iteration  14: 132999.615 ops/s
Iteration  15: 125513.117 ops/s
Iteration  16: 132569.604 ops/s
Iteration  17: 128361.273 ops/s
Iteration  18: 127179.294 ops/s
Iteration  19: 132444.826 ops/s
Iteration  20: 124818.779 ops/s
Iteration  21: 131236.055 ops/s
Iteration  22: 128277.779 ops/s
Iteration  23: 132390.862 ops/s
Iteration  24: 132011.609 ops/s
Iteration  25: 126722.150 ops/s
Iteration  26: 131765.882 ops/s
Iteration  27: 128282.231 ops/s
Iteration  28: 127903.174 ops/s
Iteration  29: 132518.129 ops/s
Iteration  30: 122973.094 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_957._Benchmark.benchmark_Cluster_957":
  129115.335 ±(99.9%) 2302.917 ops/s [Average]
  (min, avg, max) = (122179.638, 129115.335, 135648.899), stdev = 3446.898
  CI (99.9%): [126812.418, 131418.252] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_957._Benchmark.benchmark_Cluster_957  thrpt   30  129115.335 ± 2302.917  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_958._Benchmark.benchmark_Cluster_958$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_958._Benchmark.benchmark_Cluster_958

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15383.613 ops/s
# Warmup Iteration   2: 25359.854 ops/s
# Warmup Iteration   3: 35787.189 ops/s
# Warmup Iteration   4: 39605.708 ops/s
# Warmup Iteration   5: 66820.445 ops/s
# Warmup Iteration   6: 94720.777 ops/s
# Warmup Iteration   7: 100570.232 ops/s
# Warmup Iteration   8: 94203.115 ops/s
# Warmup Iteration   9: 98139.099 ops/s
# Warmup Iteration  10: 94136.741 ops/s
# Warmup Iteration  11: 95959.531 ops/s
# Warmup Iteration  12: 97728.909 ops/s
# Warmup Iteration  13: 93848.740 ops/s
# Warmup Iteration  14: 99539.260 ops/s
# Warmup Iteration  15: 93663.578 ops/s
# Warmup Iteration  16: 94830.620 ops/s
# Warmup Iteration  17: 102424.779 ops/s
# Warmup Iteration  18: 97214.434 ops/s
# Warmup Iteration  19: 103952.105 ops/s
# Warmup Iteration  20: 96889.759 ops/s
# Warmup Iteration  21: 102509.070 ops/s
# Warmup Iteration  22: 98871.888 ops/s
# Warmup Iteration  23: 98122.545 ops/s
# Warmup Iteration  24: 98075.487 ops/s
# Warmup Iteration  25: 105205.493 ops/s
# Warmup Iteration  26: 96881.069 ops/s
# Warmup Iteration  27: 101007.107 ops/s
# Warmup Iteration  28: 99018.730 ops/s
# Warmup Iteration  29: 101653.024 ops/s
# Warmup Iteration  30: 96838.076 ops/s
Iteration   1: 100355.629 ops/s
Iteration   2: 96126.346 ops/s
Iteration   3: 100459.462 ops/s
Iteration   4: 101325.261 ops/s
Iteration   5: 93195.557 ops/s
Iteration   6: 103440.217 ops/s
Iteration   7: 97010.632 ops/s
Iteration   8: 101713.804 ops/s
Iteration   9: 96445.346 ops/s
Iteration  10: 101779.907 ops/s
Iteration  11: 96880.313 ops/s
Iteration  12: 99905.965 ops/s
Iteration  13: 104168.320 ops/s
Iteration  14: 101893.044 ops/s
Iteration  15: 98626.334 ops/s
Iteration  16: 101415.109 ops/s
Iteration  17: 100360.607 ops/s
Iteration  18: 97599.799 ops/s
Iteration  19: 103419.929 ops/s
Iteration  20: 95462.754 ops/s
Iteration  21: 100882.405 ops/s
Iteration  22: 95724.876 ops/s
Iteration  23: 102361.593 ops/s
Iteration  24: 101190.610 ops/s
Iteration  25: 98473.235 ops/s
Iteration  26: 105012.953 ops/s
Iteration  27: 97128.138 ops/s
Iteration  28: 102734.602 ops/s
Iteration  29: 100191.756 ops/s
Iteration  30: 97124.162 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_958._Benchmark.benchmark_Cluster_958":
  99746.955 ±(99.9%) 1966.729 ops/s [Average]
  (min, avg, max) = (93195.557, 99746.955, 105012.953), stdev = 2943.708
  CI (99.9%): [97780.226, 101713.685] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_958._Benchmark.benchmark_Cluster_958  thrpt   30  99746.955 ± 1966.729  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_959._Benchmark.benchmark_Cluster_959$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_959._Benchmark.benchmark_Cluster_959

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17029.650 ops/s
# Warmup Iteration   2: 48441.558 ops/s
# Warmup Iteration   3: 64587.473 ops/s
# Warmup Iteration   4: 107611.299 ops/s
# Warmup Iteration   5: 105249.802 ops/s
# Warmup Iteration   6: 101360.366 ops/s
# Warmup Iteration   7: 113647.905 ops/s
# Warmup Iteration   8: 116315.532 ops/s
# Warmup Iteration   9: 107972.002 ops/s
# Warmup Iteration  10: 114221.549 ops/s
# Warmup Iteration  11: 115902.599 ops/s
# Warmup Iteration  12: 111656.712 ops/s
# Warmup Iteration  13: 112542.253 ops/s
# Warmup Iteration  14: 119732.317 ops/s
# Warmup Iteration  15: 111309.605 ops/s
# Warmup Iteration  16: 118852.323 ops/s
# Warmup Iteration  17: 123063.199 ops/s
# Warmup Iteration  18: 115052.446 ops/s
# Warmup Iteration  19: 123020.103 ops/s
# Warmup Iteration  20: 118058.983 ops/s
# Warmup Iteration  21: 117988.476 ops/s
# Warmup Iteration  22: 119228.110 ops/s
# Warmup Iteration  23: 117390.280 ops/s
# Warmup Iteration  24: 119082.922 ops/s
# Warmup Iteration  25: 123215.626 ops/s
# Warmup Iteration  26: 120467.527 ops/s
# Warmup Iteration  27: 118359.691 ops/s
# Warmup Iteration  28: 119436.715 ops/s
# Warmup Iteration  29: 115833.756 ops/s
# Warmup Iteration  30: 124434.189 ops/s
Iteration   1: 121212.453 ops/s
Iteration   2: 115322.798 ops/s
Iteration   3: 120921.890 ops/s
Iteration   4: 118516.949 ops/s
Iteration   5: 121493.230 ops/s
Iteration   6: 117552.539 ops/s
Iteration   7: 118884.064 ops/s
Iteration   8: 117526.520 ops/s
Iteration   9: 119714.754 ops/s
Iteration  10: 118077.086 ops/s
Iteration  11: 116997.494 ops/s
Iteration  12: 118347.539 ops/s
Iteration  13: 116809.503 ops/s
Iteration  14: 119801.311 ops/s
Iteration  15: 116211.876 ops/s
Iteration  16: 120064.035 ops/s
Iteration  17: 119331.070 ops/s
Iteration  18: 117206.855 ops/s
Iteration  19: 122471.568 ops/s
Iteration  20: 117191.022 ops/s
Iteration  21: 119176.023 ops/s
Iteration  22: 121881.140 ops/s
Iteration  23: 117833.030 ops/s
Iteration  24: 122911.063 ops/s
Iteration  25: 117739.232 ops/s
Iteration  26: 123563.768 ops/s
Iteration  27: 118084.725 ops/s
Iteration  28: 87812.269 ops/s
Iteration  29: 123677.577 ops/s
Iteration  30: 115733.773 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_959._Benchmark.benchmark_Cluster_959":
  118068.905 ±(99.9%) 4113.089 ops/s [Average]
  (min, avg, max) = (87812.269, 118068.905, 123677.577), stdev = 6156.279
  CI (99.9%): [113955.816, 122181.994] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_959._Benchmark.benchmark_Cluster_959  thrpt   30  118068.905 ± 4113.089  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_96._Benchmark.benchmark_Cluster_96$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_96._Benchmark.benchmark_Cluster_96

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1616.058 ops/s
# Warmup Iteration   2: 26595.160 ops/s
# Warmup Iteration   3: 83811.031 ops/s
# Warmup Iteration   4: 93475.536 ops/s
# Warmup Iteration   5: 96288.128 ops/s
# Warmup Iteration   6: 93316.423 ops/s
# Warmup Iteration   7: 96592.538 ops/s
# Warmup Iteration   8: 95873.548 ops/s
# Warmup Iteration   9: 92257.283 ops/s
# Warmup Iteration  10: 99808.098 ops/s
# Warmup Iteration  11: 92471.872 ops/s
# Warmup Iteration  12: 96913.625 ops/s
# Warmup Iteration  13: 94332.239 ops/s
# Warmup Iteration  14: 94399.115 ops/s
# Warmup Iteration  15: 98720.555 ops/s
# Warmup Iteration  16: 95367.811 ops/s
# Warmup Iteration  17: 93999.481 ops/s
# Warmup Iteration  18: 98707.036 ops/s
# Warmup Iteration  19: 98892.404 ops/s
# Warmup Iteration  20: 92111.435 ops/s
# Warmup Iteration  21: 104246.380 ops/s
# Warmup Iteration  22: 97132.195 ops/s
# Warmup Iteration  23: 102423.713 ops/s
# Warmup Iteration  24: 96728.225 ops/s
# Warmup Iteration  25: 96681.360 ops/s
# Warmup Iteration  26: 102203.122 ops/s
# Warmup Iteration  27: 99259.377 ops/s
# Warmup Iteration  28: 102508.432 ops/s
# Warmup Iteration  29: 97633.210 ops/s
# Warmup Iteration  30: 98859.446 ops/s
Iteration   1: 103761.791 ops/s
Iteration   2: 97256.300 ops/s
Iteration   3: 99244.047 ops/s
Iteration   4: 100903.959 ops/s
Iteration   5: 100246.489 ops/s
Iteration   6: 96953.272 ops/s
Iteration   7: 103387.083 ops/s
Iteration   8: 99997.730 ops/s
Iteration   9: 98113.709 ops/s
Iteration  10: 102738.671 ops/s
Iteration  11: 98533.537 ops/s
Iteration  12: 100684.862 ops/s
Iteration  13: 104208.636 ops/s
Iteration  14: 97032.994 ops/s
Iteration  15: 98101.481 ops/s
Iteration  16: 98896.651 ops/s
Iteration  17: 99938.954 ops/s
Iteration  18: 97565.197 ops/s
Iteration  19: 102640.634 ops/s
Iteration  20: 97425.106 ops/s
Iteration  21: 99584.292 ops/s
Iteration  22: 102399.573 ops/s
Iteration  23: 97549.179 ops/s
Iteration  24: 98892.671 ops/s
Iteration  25: 102224.868 ops/s
Iteration  26: 97222.755 ops/s
Iteration  27: 102257.775 ops/s
Iteration  28: 97845.523 ops/s
Iteration  29: 100940.140 ops/s
Iteration  30: 96812.146 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_96._Benchmark.benchmark_Cluster_96":
  99778.667 ±(99.9%) 1537.492 ops/s [Average]
  (min, avg, max) = (96812.146, 99778.667, 104208.636), stdev = 2301.246
  CI (99.9%): [98241.176, 101316.159] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_96._Benchmark.benchmark_Cluster_96  thrpt   30  99778.667 ± 1537.492  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_960._Benchmark.benchmark_Cluster_960$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_960._Benchmark.benchmark_Cluster_960

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6973.636 ops/s
# Warmup Iteration   2: 20947.543 ops/s
# Warmup Iteration   3: 22509.373 ops/s
# Warmup Iteration   4: 28929.958 ops/s
# Warmup Iteration   5: 29827.142 ops/s
# Warmup Iteration   6: 26296.117 ops/s
# Warmup Iteration   7: 31464.675 ops/s
# Warmup Iteration   8: 42411.920 ops/s
# Warmup Iteration   9: 40429.252 ops/s
# Warmup Iteration  10: 78112.578 ops/s
# Warmup Iteration  11: 107599.786 ops/s
# Warmup Iteration  12: 104754.306 ops/s
# Warmup Iteration  13: 108187.129 ops/s
# Warmup Iteration  14: 103177.639 ops/s
# Warmup Iteration  15: 110148.128 ops/s
# Warmup Iteration  16: 100907.432 ops/s
# Warmup Iteration  17: 109397.389 ops/s
# Warmup Iteration  18: 113870.773 ops/s
# Warmup Iteration  19: 109303.675 ops/s
# Warmup Iteration  20: 113477.202 ops/s
# Warmup Iteration  21: 103787.503 ops/s
# Warmup Iteration  22: 109170.142 ops/s
# Warmup Iteration  23: 114080.823 ops/s
# Warmup Iteration  24: 108748.891 ops/s
# Warmup Iteration  25: 109728.555 ops/s
# Warmup Iteration  26: 106967.583 ops/s
# Warmup Iteration  27: 113522.029 ops/s
# Warmup Iteration  28: 103851.287 ops/s
# Warmup Iteration  29: 111599.217 ops/s
# Warmup Iteration  30: 108235.211 ops/s
Iteration   1: 113305.574 ops/s
Iteration   2: 110620.728 ops/s
Iteration   3: 105052.912 ops/s
Iteration   4: 111145.178 ops/s
Iteration   5: 107416.738 ops/s
Iteration   6: 111730.422 ops/s
Iteration   7: 108314.410 ops/s
Iteration   8: 109062.124 ops/s
Iteration   9: 109349.340 ops/s
Iteration  10: 108375.371 ops/s
Iteration  11: 112458.412 ops/s
Iteration  12: 107809.355 ops/s
Iteration  13: 112758.169 ops/s
Iteration  14: 106785.060 ops/s
Iteration  15: 107660.803 ops/s
Iteration  16: 109701.316 ops/s
Iteration  17: 112163.527 ops/s
Iteration  18: 105983.776 ops/s
Iteration  19: 110719.473 ops/s
Iteration  20: 108219.643 ops/s
Iteration  21: 107891.527 ops/s
Iteration  22: 89354.446 ops/s
Iteration  23: 105058.247 ops/s
Iteration  24: 109711.485 ops/s
Iteration  25: 110151.272 ops/s
Iteration  26: 103154.166 ops/s
Iteration  27: 109462.718 ops/s
Iteration  28: 115372.823 ops/s
Iteration  29: 104828.634 ops/s
Iteration  30: 112237.918 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_960._Benchmark.benchmark_Cluster_960":
  108528.519 ±(99.9%) 3065.246 ops/s [Average]
  (min, avg, max) = (89354.446, 108528.519, 115372.823), stdev = 4587.916
  CI (99.9%): [105463.273, 111593.765] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_960._Benchmark.benchmark_Cluster_960  thrpt   30  108528.519 ± 3065.246  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_961._Benchmark.benchmark_Cluster_961$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_961._Benchmark.benchmark_Cluster_961

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 12857.533 ops/s
# Warmup Iteration   2: 24259.609 ops/s
# Warmup Iteration   3: 29444.751 ops/s
# Warmup Iteration   4: 63925.117 ops/s
# Warmup Iteration   5: 105149.417 ops/s
# Warmup Iteration   6: 113126.241 ops/s
# Warmup Iteration   7: 109336.605 ops/s
# Warmup Iteration   8: 110715.428 ops/s
# Warmup Iteration   9: 110980.463 ops/s
# Warmup Iteration  10: 106305.814 ops/s
# Warmup Iteration  11: 112576.993 ops/s
# Warmup Iteration  12: 116758.236 ops/s
# Warmup Iteration  13: 107705.813 ops/s
# Warmup Iteration  14: 119120.096 ops/s
# Warmup Iteration  15: 115890.874 ops/s
# Warmup Iteration  16: 117259.343 ops/s
# Warmup Iteration  17: 123998.912 ops/s
# Warmup Iteration  18: 116495.921 ops/s
# Warmup Iteration  19: 128017.471 ops/s
# Warmup Iteration  20: 124037.597 ops/s
# Warmup Iteration  21: 117891.987 ops/s
# Warmup Iteration  22: 119771.964 ops/s
# Warmup Iteration  23: 128412.148 ops/s
# Warmup Iteration  24: 116852.471 ops/s
# Warmup Iteration  25: 124473.008 ops/s
# Warmup Iteration  26: 122574.410 ops/s
# Warmup Iteration  27: 119363.338 ops/s
# Warmup Iteration  28: 122285.033 ops/s
# Warmup Iteration  29: 124261.346 ops/s
# Warmup Iteration  30: 120171.664 ops/s
Iteration   1: 123030.013 ops/s
Iteration   2: 119713.264 ops/s
Iteration   3: 121139.812 ops/s
Iteration   4: 120754.822 ops/s
Iteration   5: 120080.102 ops/s
Iteration   6: 125288.121 ops/s
Iteration   7: 118215.291 ops/s
Iteration   8: 125584.558 ops/s
Iteration   9: 116836.805 ops/s
Iteration  10: 121083.547 ops/s
Iteration  11: 124507.757 ops/s
Iteration  12: 117004.352 ops/s
Iteration  13: 122906.199 ops/s
Iteration  14: 125487.278 ops/s
Iteration  15: 117745.012 ops/s
Iteration  16: 123594.733 ops/s
Iteration  17: 120386.504 ops/s
Iteration  18: 120145.644 ops/s
Iteration  19: 125568.136 ops/s
Iteration  20: 119410.251 ops/s
Iteration  21: 123406.590 ops/s
Iteration  22: 118283.182 ops/s
Iteration  23: 126762.694 ops/s
Iteration  24: 122489.586 ops/s
Iteration  25: 123849.556 ops/s
Iteration  26: 124145.978 ops/s
Iteration  27: 117597.546 ops/s
Iteration  28: 124959.601 ops/s
Iteration  29: 120066.086 ops/s
Iteration  30: 123413.848 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_961._Benchmark.benchmark_Cluster_961":
  121781.896 ±(99.9%) 1951.029 ops/s [Average]
  (min, avg, max) = (116836.805, 121781.896, 126762.694), stdev = 2920.208
  CI (99.9%): [119830.867, 123732.925] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_961._Benchmark.benchmark_Cluster_961  thrpt   30  121781.896 ± 1951.029  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_962._Benchmark.benchmark_Cluster_962$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_962._Benchmark.benchmark_Cluster_962

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4671.377 ops/s
# Warmup Iteration   2: 22511.972 ops/s
# Warmup Iteration   3: 34895.365 ops/s
# Warmup Iteration   4: 51547.087 ops/s
# Warmup Iteration   5: 51558.509 ops/s
# Warmup Iteration   6: 133715.901 ops/s
# Warmup Iteration   7: 128101.516 ops/s
# Warmup Iteration   8: 135910.840 ops/s
# Warmup Iteration   9: 133902.633 ops/s
# Warmup Iteration  10: 117446.550 ops/s
# Warmup Iteration  11: 120254.089 ops/s
# Warmup Iteration  12: 136105.302 ops/s
# Warmup Iteration  13: 125861.538 ops/s
# Warmup Iteration  14: 134297.056 ops/s
# Warmup Iteration  15: 129110.235 ops/s
# Warmup Iteration  16: 132442.770 ops/s
# Warmup Iteration  17: 138031.463 ops/s
# Warmup Iteration  18: 128946.754 ops/s
# Warmup Iteration  19: 134870.485 ops/s
# Warmup Iteration  20: 138791.007 ops/s
# Warmup Iteration  21: 134239.449 ops/s
# Warmup Iteration  22: 131484.962 ops/s
# Warmup Iteration  23: 137564.334 ops/s
# Warmup Iteration  24: 132087.462 ops/s
# Warmup Iteration  25: 130082.201 ops/s
# Warmup Iteration  26: 134159.968 ops/s
# Warmup Iteration  27: 130382.292 ops/s
# Warmup Iteration  28: 129670.491 ops/s
# Warmup Iteration  29: 134847.007 ops/s
# Warmup Iteration  30: 131355.145 ops/s
Iteration   1: 137137.900 ops/s
Iteration   2: 123527.394 ops/s
Iteration   3: 130681.464 ops/s
Iteration   4: 131201.286 ops/s
Iteration   5: 134906.610 ops/s
Iteration   6: 135718.437 ops/s
Iteration   7: 131942.617 ops/s
Iteration   8: 135785.615 ops/s
Iteration   9: 130261.886 ops/s
Iteration  10: 134204.347 ops/s
Iteration  11: 136060.261 ops/s
Iteration  12: 133568.365 ops/s
Iteration  13: 133298.129 ops/s
Iteration  14: 131613.953 ops/s
Iteration  15: 133455.195 ops/s
Iteration  16: 127568.966 ops/s
Iteration  17: 113973.903 ops/s
Iteration  18: 130773.402 ops/s
Iteration  19: 135155.346 ops/s
Iteration  20: 132216.618 ops/s
Iteration  21: 134587.275 ops/s
Iteration  22: 130595.161 ops/s
Iteration  23: 137309.399 ops/s
Iteration  24: 139957.448 ops/s
Iteration  25: 128613.853 ops/s
Iteration  26: 135032.460 ops/s
Iteration  27: 130484.596 ops/s
Iteration  28: 134843.447 ops/s
Iteration  29: 136896.882 ops/s
Iteration  30: 132123.885 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_962._Benchmark.benchmark_Cluster_962":
  132449.870 ±(99.9%) 3218.950 ops/s [Average]
  (min, avg, max) = (113973.903, 132449.870, 139957.448), stdev = 4817.974
  CI (99.9%): [129230.920, 135668.820] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_962._Benchmark.benchmark_Cluster_962  thrpt   30  132449.870 ± 3218.950  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_963._Benchmark.benchmark_Cluster_963$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_963._Benchmark.benchmark_Cluster_963

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10787.908 ops/s
# Warmup Iteration   2: 38414.142 ops/s
# Warmup Iteration   3: 52996.901 ops/s
# Warmup Iteration   4: 108307.914 ops/s
# Warmup Iteration   5: 125218.174 ops/s
# Warmup Iteration   6: 122761.559 ops/s
# Warmup Iteration   7: 107043.779 ops/s
# Warmup Iteration   8: 132470.698 ops/s
# Warmup Iteration   9: 125397.180 ops/s
# Warmup Iteration  10: 130343.411 ops/s
# Warmup Iteration  11: 129593.779 ops/s
# Warmup Iteration  12: 129963.316 ops/s
# Warmup Iteration  13: 132195.819 ops/s
# Warmup Iteration  14: 125625.100 ops/s
# Warmup Iteration  15: 129352.465 ops/s
# Warmup Iteration  16: 127891.492 ops/s
# Warmup Iteration  17: 135472.129 ops/s
# Warmup Iteration  18: 136272.288 ops/s
# Warmup Iteration  19: 136348.317 ops/s
# Warmup Iteration  20: 131862.281 ops/s
# Warmup Iteration  21: 136885.961 ops/s
# Warmup Iteration  22: 138287.965 ops/s
# Warmup Iteration  23: 131418.452 ops/s
# Warmup Iteration  24: 137931.229 ops/s
# Warmup Iteration  25: 131267.625 ops/s
# Warmup Iteration  26: 132429.307 ops/s
# Warmup Iteration  27: 137968.242 ops/s
# Warmup Iteration  28: 126646.893 ops/s
# Warmup Iteration  29: 139735.956 ops/s
# Warmup Iteration  30: 135560.864 ops/s
Iteration   1: 129776.027 ops/s
Iteration   2: 137498.508 ops/s
Iteration   3: 129898.732 ops/s
Iteration   4: 137433.317 ops/s
Iteration   5: 132258.559 ops/s
Iteration   6: 138588.083 ops/s
Iteration   7: 132755.338 ops/s
Iteration   8: 133221.694 ops/s
Iteration   9: 141552.282 ops/s
Iteration  10: 131027.418 ops/s
Iteration  11: 137936.928 ops/s
Iteration  12: 130455.016 ops/s
Iteration  13: 135945.731 ops/s
Iteration  14: 133421.843 ops/s
Iteration  15: 132429.003 ops/s
Iteration  16: 137603.980 ops/s
Iteration  17: 135562.965 ops/s
Iteration  18: 135058.747 ops/s
Iteration  19: 135959.066 ops/s
Iteration  20: 135647.226 ops/s
Iteration  21: 138565.229 ops/s
Iteration  22: 132387.390 ops/s
Iteration  23: 135651.255 ops/s
Iteration  24: 134365.621 ops/s
Iteration  25: 135934.622 ops/s
Iteration  26: 139237.551 ops/s
Iteration  27: 132383.431 ops/s
Iteration  28: 140322.768 ops/s
Iteration  29: 137065.526 ops/s
Iteration  30: 132090.562 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_963._Benchmark.benchmark_Cluster_963":
  135067.814 ±(99.9%) 2103.498 ops/s [Average]
  (min, avg, max) = (129776.027, 135067.814, 141552.282), stdev = 3148.416
  CI (99.9%): [132964.316, 137171.311] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_963._Benchmark.benchmark_Cluster_963  thrpt   30  135067.814 ± 2103.498  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_964._Benchmark.benchmark_Cluster_964$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_964._Benchmark.benchmark_Cluster_964

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5206.177 ops/s
# Warmup Iteration   2: 20403.327 ops/s
# Warmup Iteration   3: 29462.699 ops/s
# Warmup Iteration   4: 33761.206 ops/s
# Warmup Iteration   5: 31704.160 ops/s
# Warmup Iteration   6: 101797.790 ops/s
# Warmup Iteration   7: 101959.852 ops/s
# Warmup Iteration   8: 107629.434 ops/s
# Warmup Iteration   9: 107060.350 ops/s
# Warmup Iteration  10: 98291.232 ops/s
# Warmup Iteration  11: 106093.923 ops/s
# Warmup Iteration  12: 98686.039 ops/s
# Warmup Iteration  13: 111222.419 ops/s
# Warmup Iteration  14: 112577.091 ops/s
# Warmup Iteration  15: 108306.318 ops/s
# Warmup Iteration  16: 105371.375 ops/s
# Warmup Iteration  17: 114313.063 ops/s
# Warmup Iteration  18: 107074.354 ops/s
# Warmup Iteration  19: 112649.107 ops/s
# Warmup Iteration  20: 113016.856 ops/s
# Warmup Iteration  21: 109435.104 ops/s
# Warmup Iteration  22: 110388.689 ops/s
# Warmup Iteration  23: 113730.666 ops/s
# Warmup Iteration  24: 107350.227 ops/s
# Warmup Iteration  25: 106535.620 ops/s
# Warmup Iteration  26: 111546.652 ops/s
# Warmup Iteration  27: 110859.122 ops/s
# Warmup Iteration  28: 110248.373 ops/s
# Warmup Iteration  29: 114372.028 ops/s
# Warmup Iteration  30: 108096.749 ops/s
Iteration   1: 114361.284 ops/s
Iteration   2: 109279.516 ops/s
Iteration   3: 109648.033 ops/s
Iteration   4: 116262.391 ops/s
Iteration   5: 108672.122 ops/s
Iteration   6: 112959.495 ops/s
Iteration   7: 109112.334 ops/s
Iteration   8: 113141.154 ops/s
Iteration   9: 114175.685 ops/s
Iteration  10: 109894.964 ops/s
Iteration  11: 92125.735 ops/s
Iteration  12: 114126.706 ops/s
Iteration  13: 103783.867 ops/s
Iteration  14: 111243.586 ops/s
Iteration  15: 109808.534 ops/s
Iteration  16: 112812.474 ops/s
Iteration  17: 112249.763 ops/s
Iteration  18: 111269.420 ops/s
Iteration  19: 113430.075 ops/s
Iteration  20: 109428.414 ops/s
Iteration  21: 115803.323 ops/s
Iteration  22: 111217.318 ops/s
Iteration  23: 111488.864 ops/s
Iteration  24: 113399.985 ops/s
Iteration  25: 109801.142 ops/s
Iteration  26: 117282.644 ops/s
Iteration  27: 112067.914 ops/s
Iteration  28: 110245.281 ops/s
Iteration  29: 117127.832 ops/s
Iteration  30: 110478.972 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_964._Benchmark.benchmark_Cluster_964":
  111223.294 ±(99.9%) 3072.755 ops/s [Average]
  (min, avg, max) = (92125.735, 111223.294, 117282.644), stdev = 4599.156
  CI (99.9%): [108150.539, 114296.049] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_964._Benchmark.benchmark_Cluster_964  thrpt   30  111223.294 ± 3072.755  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_965._Benchmark.benchmark_Cluster_965$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_965._Benchmark.benchmark_Cluster_965

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2889.778 ops/s
# Warmup Iteration   2: 26364.530 ops/s
# Warmup Iteration   3: 41406.785 ops/s
# Warmup Iteration   4: 56125.167 ops/s
# Warmup Iteration   5: 103708.511 ops/s
# Warmup Iteration   6: 95786.871 ops/s
# Warmup Iteration   7: 102088.093 ops/s
# Warmup Iteration   8: 105522.954 ops/s
# Warmup Iteration   9: 105242.599 ops/s
# Warmup Iteration  10: 105596.229 ops/s
# Warmup Iteration  11: 101501.408 ops/s
# Warmup Iteration  12: 106734.056 ops/s
# Warmup Iteration  13: 105956.807 ops/s
# Warmup Iteration  14: 96463.045 ops/s
# Warmup Iteration  15: 102838.905 ops/s
# Warmup Iteration  16: 103938.513 ops/s
# Warmup Iteration  17: 114844.026 ops/s
# Warmup Iteration  18: 107780.696 ops/s
# Warmup Iteration  19: 108539.507 ops/s
# Warmup Iteration  20: 113585.411 ops/s
# Warmup Iteration  21: 112598.291 ops/s
# Warmup Iteration  22: 106673.404 ops/s
# Warmup Iteration  23: 113186.433 ops/s
# Warmup Iteration  24: 106868.244 ops/s
# Warmup Iteration  25: 113511.957 ops/s
# Warmup Iteration  26: 112437.538 ops/s
# Warmup Iteration  27: 108765.799 ops/s
# Warmup Iteration  28: 114134.978 ops/s
# Warmup Iteration  29: 108097.065 ops/s
# Warmup Iteration  30: 112749.204 ops/s
Iteration   1: 108800.962 ops/s
Iteration   2: 110315.562 ops/s
Iteration   3: 107746.594 ops/s
Iteration   4: 113442.358 ops/s
Iteration   5: 115842.746 ops/s
Iteration   6: 106329.927 ops/s
Iteration   7: 108725.532 ops/s
Iteration   8: 114998.824 ops/s
Iteration   9: 110221.596 ops/s
Iteration  10: 114050.543 ops/s
Iteration  11: 113982.091 ops/s
Iteration  12: 106610.170 ops/s
Iteration  13: 113606.406 ops/s
Iteration  14: 112027.037 ops/s
Iteration  15: 110982.471 ops/s
Iteration  16: 110097.173 ops/s
Iteration  17: 109221.077 ops/s
Iteration  18: 112698.899 ops/s
Iteration  19: 106424.936 ops/s
Iteration  20: 108440.658 ops/s
Iteration  21: 112642.608 ops/s
Iteration  22: 108740.575 ops/s
Iteration  23: 112455.980 ops/s
Iteration  24: 107554.106 ops/s
Iteration  25: 110595.850 ops/s
Iteration  26: 112906.071 ops/s
Iteration  27: 109300.463 ops/s
Iteration  28: 114605.494 ops/s
Iteration  29: 114519.594 ops/s
Iteration  30: 110033.765 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_965._Benchmark.benchmark_Cluster_965":
  110930.669 ±(99.9%) 1853.561 ops/s [Average]
  (min, avg, max) = (106329.927, 110930.669, 115842.746), stdev = 2774.323
  CI (99.9%): [109077.108, 112784.230] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_965._Benchmark.benchmark_Cluster_965  thrpt   30  110930.669 ± 1853.561  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_966._Benchmark.benchmark_Cluster_966$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_966._Benchmark.benchmark_Cluster_966

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2095.937 ops/s
# Warmup Iteration   2: 12467.034 ops/s
# Warmup Iteration   3: 20860.613 ops/s
# Warmup Iteration   4: 24750.088 ops/s
# Warmup Iteration   5: 36010.251 ops/s
# Warmup Iteration   6: 70573.135 ops/s
# Warmup Iteration   7: 85889.067 ops/s
# Warmup Iteration   8: 86765.566 ops/s
# Warmup Iteration   9: 88388.711 ops/s
# Warmup Iteration  10: 89066.186 ops/s
# Warmup Iteration  11: 88529.316 ops/s
# Warmup Iteration  12: 82782.753 ops/s
# Warmup Iteration  13: 86261.081 ops/s
# Warmup Iteration  14: 87242.391 ops/s
# Warmup Iteration  15: 90315.036 ops/s
# Warmup Iteration  16: 86762.804 ops/s
# Warmup Iteration  17: 91853.750 ops/s
# Warmup Iteration  18: 92948.668 ops/s
# Warmup Iteration  19: 90309.511 ops/s
# Warmup Iteration  20: 93191.175 ops/s
# Warmup Iteration  21: 91493.481 ops/s
# Warmup Iteration  22: 96251.140 ops/s
# Warmup Iteration  23: 93277.815 ops/s
# Warmup Iteration  24: 92878.242 ops/s
# Warmup Iteration  25: 96663.900 ops/s
# Warmup Iteration  26: 91043.991 ops/s
# Warmup Iteration  27: 92426.488 ops/s
# Warmup Iteration  28: 94083.713 ops/s
# Warmup Iteration  29: 97048.070 ops/s
# Warmup Iteration  30: 91497.955 ops/s
Iteration   1: 90488.115 ops/s
Iteration   2: 95396.252 ops/s
Iteration   3: 94408.678 ops/s
Iteration   4: 92876.843 ops/s
Iteration   5: 83500.133 ops/s
Iteration   6: 81466.235 ops/s
Iteration   7: 94611.341 ops/s
Iteration   8: 91781.155 ops/s
Iteration   9: 94950.188 ops/s
Iteration  10: 90171.471 ops/s
Iteration  11: 95848.231 ops/s
Iteration  12: 88064.534 ops/s
Iteration  13: 93830.378 ops/s
Iteration  14: 92407.928 ops/s
Iteration  15: 96423.794 ops/s
Iteration  16: 92349.636 ops/s
Iteration  17: 94915.614 ops/s
Iteration  18: 92142.099 ops/s
Iteration  19: 96229.877 ops/s
Iteration  20: 92157.292 ops/s
Iteration  21: 94525.249 ops/s
Iteration  22: 94811.837 ops/s
Iteration  23: 90833.816 ops/s
Iteration  24: 95401.054 ops/s
Iteration  25: 91007.147 ops/s
Iteration  26: 95956.874 ops/s
Iteration  27: 94330.730 ops/s
Iteration  28: 91716.125 ops/s
Iteration  29: 98065.520 ops/s
Iteration  30: 91759.654 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_966._Benchmark.benchmark_Cluster_966":
  92747.593 ±(99.9%) 2392.578 ops/s [Average]
  (min, avg, max) = (81466.235, 92747.593, 98065.520), stdev = 3581.098
  CI (99.9%): [90355.015, 95140.171] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_966._Benchmark.benchmark_Cluster_966  thrpt   30  92747.593 ± 2392.578  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_967._Benchmark.benchmark_Cluster_967$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_967._Benchmark.benchmark_Cluster_967

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 6063.357 ops/s
# Warmup Iteration   2: 13729.884 ops/s
# Warmup Iteration   3: 25940.502 ops/s
# Warmup Iteration   4: 35206.735 ops/s
# Warmup Iteration   5: 93299.840 ops/s
# Warmup Iteration   6: 133122.493 ops/s
# Warmup Iteration   7: 132083.891 ops/s
# Warmup Iteration   8: 152999.436 ops/s
# Warmup Iteration   9: 146785.547 ops/s
# Warmup Iteration  10: 144994.150 ops/s
# Warmup Iteration  11: 145363.581 ops/s
# Warmup Iteration  12: 141257.554 ops/s
# Warmup Iteration  13: 148469.034 ops/s
# Warmup Iteration  14: 148488.993 ops/s
# Warmup Iteration  15: 145256.442 ops/s
# Warmup Iteration  16: 153289.451 ops/s
# Warmup Iteration  17: 155204.687 ops/s
# Warmup Iteration  18: 145843.765 ops/s
# Warmup Iteration  19: 149060.313 ops/s
# Warmup Iteration  20: 156108.770 ops/s
# Warmup Iteration  21: 150408.952 ops/s
# Warmup Iteration  22: 152309.776 ops/s
# Warmup Iteration  23: 148647.818 ops/s
# Warmup Iteration  24: 147311.038 ops/s
# Warmup Iteration  25: 151065.150 ops/s
# Warmup Iteration  26: 151657.500 ops/s
# Warmup Iteration  27: 147501.162 ops/s
# Warmup Iteration  28: 155718.448 ops/s
# Warmup Iteration  29: 145709.720 ops/s
# Warmup Iteration  30: 154092.934 ops/s
Iteration   1: 147506.935 ops/s
Iteration   2: 152369.405 ops/s
Iteration   3: 152512.408 ops/s
Iteration   4: 149730.348 ops/s
Iteration   5: 147544.659 ops/s
Iteration   6: 152063.745 ops/s
Iteration   7: 148868.188 ops/s
Iteration   8: 152171.540 ops/s
Iteration   9: 148728.914 ops/s
Iteration  10: 152201.321 ops/s
Iteration  11: 146682.611 ops/s
Iteration  12: 155542.352 ops/s
Iteration  13: 147566.329 ops/s
Iteration  14: 146533.357 ops/s
Iteration  15: 155082.056 ops/s
Iteration  16: 146967.045 ops/s
Iteration  17: 153666.850 ops/s
Iteration  18: 157522.720 ops/s
Iteration  19: 144789.242 ops/s
Iteration  20: 154129.797 ops/s
Iteration  21: 145425.277 ops/s
Iteration  22: 147207.880 ops/s
Iteration  23: 153221.563 ops/s
Iteration  24: 147818.333 ops/s
Iteration  25: 155582.580 ops/s
Iteration  26: 145225.010 ops/s
Iteration  27: 153428.491 ops/s
Iteration  28: 148537.493 ops/s
Iteration  29: 152928.117 ops/s
Iteration  30: 152856.159 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_967._Benchmark.benchmark_Cluster_967":
  150480.358 ±(99.9%) 2391.035 ops/s [Average]
  (min, avg, max) = (144789.242, 150480.358, 157522.720), stdev = 3578.790
  CI (99.9%): [148089.322, 152871.393] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_967._Benchmark.benchmark_Cluster_967  thrpt   30  150480.358 ± 2391.035  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_968._Benchmark.benchmark_Cluster_968$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_968._Benchmark.benchmark_Cluster_968

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2532.284 ops/s
# Warmup Iteration   2: 23592.079 ops/s
# Warmup Iteration   3: 22337.446 ops/s
# Warmup Iteration   4: 27454.308 ops/s
# Warmup Iteration   5: 41633.393 ops/s
# Warmup Iteration   6: 37375.698 ops/s
# Warmup Iteration   7: 82689.633 ops/s
# Warmup Iteration   8: 96599.046 ops/s
# Warmup Iteration   9: 104589.483 ops/s
# Warmup Iteration  10: 98336.830 ops/s
# Warmup Iteration  11: 100668.964 ops/s
# Warmup Iteration  12: 99941.462 ops/s
# Warmup Iteration  13: 101544.006 ops/s
# Warmup Iteration  14: 96050.024 ops/s
# Warmup Iteration  15: 96156.612 ops/s
# Warmup Iteration  16: 104050.685 ops/s
# Warmup Iteration  17: 100883.982 ops/s
# Warmup Iteration  18: 103484.915 ops/s
# Warmup Iteration  19: 105590.351 ops/s
# Warmup Iteration  20: 99591.967 ops/s
# Warmup Iteration  21: 107012.638 ops/s
# Warmup Iteration  22: 102257.696 ops/s
# Warmup Iteration  23: 101282.315 ops/s
# Warmup Iteration  24: 105273.086 ops/s
# Warmup Iteration  25: 101916.536 ops/s
# Warmup Iteration  26: 103583.258 ops/s
# Warmup Iteration  27: 107948.645 ops/s
# Warmup Iteration  28: 101315.710 ops/s
# Warmup Iteration  29: 87548.967 ops/s
# Warmup Iteration  30: 90250.575 ops/s
Iteration   1: 104074.732 ops/s
Iteration   2: 104619.216 ops/s
Iteration   3: 101294.825 ops/s
Iteration   4: 102757.816 ops/s
Iteration   5: 108927.897 ops/s
Iteration   6: 97102.249 ops/s
Iteration   7: 105036.081 ops/s
Iteration   8: 106286.542 ops/s
Iteration   9: 101376.979 ops/s
Iteration  10: 104481.148 ops/s
Iteration  11: 100229.696 ops/s
Iteration  12: 105820.897 ops/s
Iteration  13: 101591.397 ops/s
Iteration  14: 101425.898 ops/s
Iteration  15: 104571.133 ops/s
Iteration  16: 103670.916 ops/s
Iteration  17: 101591.793 ops/s
Iteration  18: 108320.426 ops/s
Iteration  19: 99203.574 ops/s
Iteration  20: 104151.711 ops/s
Iteration  21: 102373.899 ops/s
Iteration  22: 104069.218 ops/s
Iteration  23: 105672.629 ops/s
Iteration  24: 101703.175 ops/s
Iteration  25: 104057.873 ops/s
Iteration  26: 102354.374 ops/s
Iteration  27: 106011.556 ops/s
Iteration  28: 103501.023 ops/s
Iteration  29: 101025.197 ops/s
Iteration  30: 103560.496 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_968._Benchmark.benchmark_Cluster_968":
  103362.146 ±(99.9%) 1696.476 ops/s [Average]
  (min, avg, max) = (97102.249, 103362.146, 108927.897), stdev = 2539.205
  CI (99.9%): [101665.670, 105058.621] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_968._Benchmark.benchmark_Cluster_968  thrpt   30  103362.146 ± 1696.476  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_969._Benchmark.benchmark_Cluster_969$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_969._Benchmark.benchmark_Cluster_969

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 9168.822 ops/s
# Warmup Iteration   2: 23085.460 ops/s
# Warmup Iteration   3: 28175.824 ops/s
# Warmup Iteration   4: 34560.566 ops/s
# Warmup Iteration   5: 51417.955 ops/s
# Warmup Iteration   6: 51457.580 ops/s
# Warmup Iteration   7: 93786.248 ops/s
# Warmup Iteration   8: 96488.325 ops/s
# Warmup Iteration   9: 95714.474 ops/s
# Warmup Iteration  10: 104368.297 ops/s
# Warmup Iteration  11: 103732.880 ops/s
# Warmup Iteration  12: 103195.206 ops/s
# Warmup Iteration  13: 95571.587 ops/s
# Warmup Iteration  14: 101837.836 ops/s
# Warmup Iteration  15: 96868.088 ops/s
# Warmup Iteration  16: 103554.770 ops/s
# Warmup Iteration  17: 105866.021 ops/s
# Warmup Iteration  18: 103382.932 ops/s
# Warmup Iteration  19: 108997.175 ops/s
# Warmup Iteration  20: 106364.664 ops/s
# Warmup Iteration  21: 105310.944 ops/s
# Warmup Iteration  22: 108017.003 ops/s
# Warmup Iteration  23: 102186.897 ops/s
# Warmup Iteration  24: 103015.915 ops/s
# Warmup Iteration  25: 67932.532 ops/s
# Warmup Iteration  26: 58537.652 ops/s
# Warmup Iteration  27: 55642.389 ops/s
# Warmup Iteration  28: 69759.071 ops/s
# Warmup Iteration  29: 73123.406 ops/s
# Warmup Iteration  30: 104876.881 ops/s
Iteration   1: 107123.621 ops/s
Iteration   2: 104192.646 ops/s
Iteration   3: 106303.081 ops/s
Iteration   4: 106731.870 ops/s
Iteration   5: 105373.852 ops/s
Iteration   6: 100778.992 ops/s
Iteration   7: 106880.433 ops/s
Iteration   8: 104591.126 ops/s
Iteration   9: 107688.173 ops/s
Iteration  10: 101294.404 ops/s
Iteration  11: 104046.550 ops/s
Iteration  12: 102349.463 ops/s
Iteration  13: 105500.336 ops/s
Iteration  14: 108260.478 ops/s
Iteration  15: 100853.404 ops/s
Iteration  16: 109093.718 ops/s
Iteration  17: 105667.079 ops/s
Iteration  18: 101598.560 ops/s
Iteration  19: 87858.325 ops/s
Iteration  20: 103884.203 ops/s
Iteration  21: 103467.450 ops/s
Iteration  22: 105352.523 ops/s
Iteration  23: 102573.498 ops/s
Iteration  24: 105944.256 ops/s
Iteration  25: 105441.294 ops/s
Iteration  26: 101755.524 ops/s
Iteration  27: 110696.175 ops/s
Iteration  28: 102237.885 ops/s
Iteration  29: 104142.845 ops/s
Iteration  30: 110146.053 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_969._Benchmark.benchmark_Cluster_969":
  104394.261 ±(99.9%) 2742.380 ops/s [Average]
  (min, avg, max) = (87858.325, 104394.261, 110696.175), stdev = 4104.666
  CI (99.9%): [101651.880, 107136.641] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_969._Benchmark.benchmark_Cluster_969  thrpt   30  104394.261 ± 2742.380  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_97._Benchmark.benchmark_Cluster_97$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_97._Benchmark.benchmark_Cluster_97

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 5468.103 ops/s
# Warmup Iteration   2: 38755.502 ops/s
# Warmup Iteration   3: 96547.304 ops/s
# Warmup Iteration   4: 98087.382 ops/s
# Warmup Iteration   5: 131435.381 ops/s
# Warmup Iteration   6: 122029.314 ops/s
# Warmup Iteration   7: 133567.232 ops/s
# Warmup Iteration   8: 126652.020 ops/s
# Warmup Iteration   9: 127276.626 ops/s
# Warmup Iteration  10: 125859.865 ops/s
# Warmup Iteration  11: 124947.207 ops/s
# Warmup Iteration  12: 126927.675 ops/s
# Warmup Iteration  13: 129989.413 ops/s
# Warmup Iteration  14: 117244.715 ops/s
# Warmup Iteration  15: 120480.683 ops/s
# Warmup Iteration  16: 120842.650 ops/s
# Warmup Iteration  17: 134673.673 ops/s
# Warmup Iteration  18: 124140.193 ops/s
# Warmup Iteration  19: 128674.418 ops/s
# Warmup Iteration  20: 138032.574 ops/s
# Warmup Iteration  21: 132816.212 ops/s
# Warmup Iteration  22: 134544.361 ops/s
# Warmup Iteration  23: 129348.859 ops/s
# Warmup Iteration  24: 132671.349 ops/s
# Warmup Iteration  25: 131368.808 ops/s
# Warmup Iteration  26: 131399.051 ops/s
# Warmup Iteration  27: 133676.958 ops/s
# Warmup Iteration  28: 129829.343 ops/s
# Warmup Iteration  29: 131684.469 ops/s
# Warmup Iteration  30: 136798.262 ops/s
Iteration   1: 128002.267 ops/s
Iteration   2: 134653.685 ops/s
Iteration   3: 132270.432 ops/s
Iteration   4: 130446.610 ops/s
Iteration   5: 129612.367 ops/s
Iteration   6: 130245.058 ops/s
Iteration   7: 133199.916 ops/s
Iteration   8: 131026.219 ops/s
Iteration   9: 134454.870 ops/s
Iteration  10: 131868.442 ops/s
Iteration  11: 137370.770 ops/s
Iteration  12: 135047.770 ops/s
Iteration  13: 129033.136 ops/s
Iteration  14: 135637.323 ops/s
Iteration  15: 133931.218 ops/s
Iteration  16: 129716.995 ops/s
Iteration  17: 130539.372 ops/s
Iteration  18: 133082.727 ops/s
Iteration  19: 127612.853 ops/s
Iteration  20: 130537.261 ops/s
Iteration  21: 129170.431 ops/s
Iteration  22: 134199.185 ops/s
Iteration  23: 130144.428 ops/s
Iteration  24: 135253.515 ops/s
Iteration  25: 132344.119 ops/s
Iteration  26: 129233.305 ops/s
Iteration  27: 136417.331 ops/s
Iteration  28: 130794.544 ops/s
Iteration  29: 135490.459 ops/s
Iteration  30: 134920.361 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_97._Benchmark.benchmark_Cluster_97":
  132208.566 ±(99.9%) 1804.460 ops/s [Average]
  (min, avg, max) = (127612.853, 132208.566, 137370.770), stdev = 2700.831
  CI (99.9%): [130404.105, 134013.026] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_97._Benchmark.benchmark_Cluster_97  thrpt   30  132208.566 ± 1804.460  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_970._Benchmark.benchmark_Cluster_970$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_970._Benchmark.benchmark_Cluster_970

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13389.353 ops/s
# Warmup Iteration   2: 39926.207 ops/s
# Warmup Iteration   3: 97304.028 ops/s
# Warmup Iteration   4: 90837.157 ops/s
# Warmup Iteration   5: 112732.646 ops/s
# Warmup Iteration   6: 111972.993 ops/s
# Warmup Iteration   7: 113688.668 ops/s
# Warmup Iteration   8: 119088.207 ops/s
# Warmup Iteration   9: 112238.764 ops/s
# Warmup Iteration  10: 116982.407 ops/s
# Warmup Iteration  11: 116265.706 ops/s
# Warmup Iteration  12: 112126.873 ops/s
# Warmup Iteration  13: 116331.353 ops/s
# Warmup Iteration  14: 113566.375 ops/s
# Warmup Iteration  15: 116976.780 ops/s
# Warmup Iteration  16: 117485.629 ops/s
# Warmup Iteration  17: 116313.956 ops/s
# Warmup Iteration  18: 122596.191 ops/s
# Warmup Iteration  19: 118279.728 ops/s
# Warmup Iteration  20: 115091.426 ops/s
# Warmup Iteration  21: 98448.853 ops/s
# Warmup Iteration  22: 113614.495 ops/s
# Warmup Iteration  23: 121223.313 ops/s
# Warmup Iteration  24: 116260.191 ops/s
# Warmup Iteration  25: 119214.385 ops/s
# Warmup Iteration  26: 116604.002 ops/s
# Warmup Iteration  27: 114971.273 ops/s
# Warmup Iteration  28: 120729.086 ops/s
# Warmup Iteration  29: 113153.721 ops/s
# Warmup Iteration  30: 119623.049 ops/s
Iteration   1: 114819.559 ops/s
Iteration   2: 118404.251 ops/s
Iteration   3: 122433.488 ops/s
Iteration   4: 115856.841 ops/s
Iteration   5: 120099.512 ops/s
Iteration   6: 115965.823 ops/s
Iteration   7: 116994.249 ops/s
Iteration   8: 121675.088 ops/s
Iteration   9: 114591.019 ops/s
Iteration  10: 120324.538 ops/s
Iteration  11: 117406.377 ops/s
Iteration  12: 123117.691 ops/s
Iteration  13: 116485.420 ops/s
Iteration  14: 118865.777 ops/s
Iteration  15: 121119.603 ops/s
Iteration  16: 111010.433 ops/s
Iteration  17: 120182.330 ops/s
Iteration  18: 118707.364 ops/s
Iteration  19: 114000.642 ops/s
Iteration  20: 117222.224 ops/s
Iteration  21: 116985.142 ops/s
Iteration  22: 110877.768 ops/s
Iteration  23: 123287.494 ops/s
Iteration  24: 115549.693 ops/s
Iteration  25: 122279.282 ops/s
Iteration  26: 112454.769 ops/s
Iteration  27: 119013.373 ops/s
Iteration  28: 119081.929 ops/s
Iteration  29: 120095.848 ops/s
Iteration  30: 119293.267 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_970._Benchmark.benchmark_Cluster_970":
  117940.026 ±(99.9%) 2245.501 ops/s [Average]
  (min, avg, max) = (110877.768, 117940.026, 123287.494), stdev = 3360.960
  CI (99.9%): [115694.526, 120185.527] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_970._Benchmark.benchmark_Cluster_970  thrpt   30  117940.026 ± 2245.501  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_971._Benchmark.benchmark_Cluster_971$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_971._Benchmark.benchmark_Cluster_971

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4386.334 ops/s
# Warmup Iteration   2: 15059.073 ops/s
# Warmup Iteration   3: 22187.539 ops/s
# Warmup Iteration   4: 34990.706 ops/s
# Warmup Iteration   5: 38133.116 ops/s
# Warmup Iteration   6: 79799.489 ops/s
# Warmup Iteration   7: 82020.226 ops/s
# Warmup Iteration   8: 88134.733 ops/s
# Warmup Iteration   9: 86305.100 ops/s
# Warmup Iteration  10: 83743.919 ops/s
# Warmup Iteration  11: 87740.412 ops/s
# Warmup Iteration  12: 88299.770 ops/s
# Warmup Iteration  13: 89808.110 ops/s
# Warmup Iteration  14: 88317.060 ops/s
# Warmup Iteration  15: 88941.702 ops/s
# Warmup Iteration  16: 85860.157 ops/s
# Warmup Iteration  17: 94515.851 ops/s
# Warmup Iteration  18: 88880.418 ops/s
# Warmup Iteration  19: 91273.931 ops/s
# Warmup Iteration  20: 90358.617 ops/s
# Warmup Iteration  21: 88407.994 ops/s
# Warmup Iteration  22: 94299.698 ops/s
# Warmup Iteration  23: 87643.701 ops/s
# Warmup Iteration  24: 93175.407 ops/s
# Warmup Iteration  25: 90498.064 ops/s
# Warmup Iteration  26: 87794.250 ops/s
# Warmup Iteration  27: 92990.102 ops/s
# Warmup Iteration  28: 88078.617 ops/s
# Warmup Iteration  29: 89936.245 ops/s
# Warmup Iteration  30: 88029.051 ops/s
Iteration   1: 91603.972 ops/s
Iteration   2: 88936.438 ops/s
Iteration   3: 88538.058 ops/s
Iteration   4: 95301.754 ops/s
Iteration   5: 88346.069 ops/s
Iteration   6: 89529.882 ops/s
Iteration   7: 89793.894 ops/s
Iteration   8: 88878.697 ops/s
Iteration   9: 93027.405 ops/s
Iteration  10: 86352.586 ops/s
Iteration  11: 91939.268 ops/s
Iteration  12: 90897.852 ops/s
Iteration  13: 91000.266 ops/s
Iteration  14: 93099.988 ops/s
Iteration  15: 87542.410 ops/s
Iteration  16: 89686.015 ops/s
Iteration  17: 90252.673 ops/s
Iteration  18: 93636.811 ops/s
Iteration  19: 91155.788 ops/s
Iteration  20: 93841.507 ops/s
Iteration  21: 88400.660 ops/s
Iteration  22: 91132.205 ops/s
Iteration  23: 90561.677 ops/s
Iteration  24: 88197.363 ops/s
Iteration  25: 92281.865 ops/s
Iteration  26: 89179.862 ops/s
Iteration  27: 93695.333 ops/s
Iteration  28: 90068.540 ops/s
Iteration  29: 89777.345 ops/s
Iteration  30: 92245.537 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_971._Benchmark.benchmark_Cluster_971":
  90630.057 ±(99.9%) 1422.707 ops/s [Average]
  (min, avg, max) = (86352.586, 90630.057, 95301.754), stdev = 2129.442
  CI (99.9%): [89207.350, 92052.765] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_971._Benchmark.benchmark_Cluster_971  thrpt   30  90630.057 ± 1422.707  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_972._Benchmark.benchmark_Cluster_972$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_972._Benchmark.benchmark_Cluster_972

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11985.326 ops/s
# Warmup Iteration   2: 39749.271 ops/s
# Warmup Iteration   3: 57795.957 ops/s
# Warmup Iteration   4: 108920.884 ops/s
# Warmup Iteration   5: 123871.532 ops/s
# Warmup Iteration   6: 118782.953 ops/s
# Warmup Iteration   7: 119891.198 ops/s
# Warmup Iteration   8: 117254.018 ops/s
# Warmup Iteration   9: 124507.473 ops/s
# Warmup Iteration  10: 122102.099 ops/s
# Warmup Iteration  11: 120169.740 ops/s
# Warmup Iteration  12: 125817.113 ops/s
# Warmup Iteration  13: 118415.491 ops/s
# Warmup Iteration  14: 119961.679 ops/s
# Warmup Iteration  15: 125218.556 ops/s
# Warmup Iteration  16: 96849.427 ops/s
# Warmup Iteration  17: 125156.210 ops/s
# Warmup Iteration  18: 127201.888 ops/s
# Warmup Iteration  19: 130949.029 ops/s
# Warmup Iteration  20: 126325.676 ops/s
# Warmup Iteration  21: 129760.755 ops/s
# Warmup Iteration  22: 127703.293 ops/s
# Warmup Iteration  23: 127994.828 ops/s
# Warmup Iteration  24: 128873.779 ops/s
# Warmup Iteration  25: 128158.977 ops/s
# Warmup Iteration  26: 123072.834 ops/s
# Warmup Iteration  27: 130874.525 ops/s
# Warmup Iteration  28: 129265.666 ops/s
# Warmup Iteration  29: 126446.585 ops/s
# Warmup Iteration  30: 126240.080 ops/s
Iteration   1: 127630.364 ops/s
Iteration   2: 129223.270 ops/s
Iteration   3: 130392.919 ops/s
Iteration   4: 129592.155 ops/s
Iteration   5: 125079.975 ops/s
Iteration   6: 127885.490 ops/s
Iteration   7: 131024.958 ops/s
Iteration   8: 130500.962 ops/s
Iteration   9: 123653.968 ops/s
Iteration  10: 128332.106 ops/s
Iteration  11: 126037.404 ops/s
Iteration  12: 131160.612 ops/s
Iteration  13: 128110.707 ops/s
Iteration  14: 122201.682 ops/s
Iteration  15: 128681.202 ops/s
Iteration  16: 131263.431 ops/s
Iteration  17: 127308.072 ops/s
Iteration  18: 132341.819 ops/s
Iteration  19: 128882.490 ops/s
Iteration  20: 128488.540 ops/s
Iteration  21: 125053.759 ops/s
Iteration  22: 130994.221 ops/s
Iteration  23: 131884.323 ops/s
Iteration  24: 122836.784 ops/s
Iteration  25: 132038.669 ops/s
Iteration  26: 125832.783 ops/s
Iteration  27: 128546.935 ops/s
Iteration  28: 127718.554 ops/s
Iteration  29: 132881.303 ops/s
Iteration  30: 130919.411 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_972._Benchmark.benchmark_Cluster_972":
  128549.962 ±(99.9%) 1905.233 ops/s [Average]
  (min, avg, max) = (122201.682, 128549.962, 132881.303), stdev = 2851.664
  CI (99.9%): [126644.729, 130455.196] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_972._Benchmark.benchmark_Cluster_972  thrpt   30  128549.962 ± 1905.233  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_973._Benchmark.benchmark_Cluster_973$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_973._Benchmark.benchmark_Cluster_973

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4542.801 ops/s
# Warmup Iteration   2: 25385.813 ops/s
# Warmup Iteration   3: 28530.536 ops/s
# Warmup Iteration   4: 37421.705 ops/s
# Warmup Iteration   5: 36519.529 ops/s
# Warmup Iteration   6: 42210.077 ops/s
# Warmup Iteration   7: 94533.617 ops/s
# Warmup Iteration   8: 96210.636 ops/s
# Warmup Iteration   9: 101899.361 ops/s
# Warmup Iteration  10: 96163.833 ops/s
# Warmup Iteration  11: 94829.151 ops/s
# Warmup Iteration  12: 96795.500 ops/s
# Warmup Iteration  13: 97915.616 ops/s
# Warmup Iteration  14: 99846.999 ops/s
# Warmup Iteration  15: 99362.121 ops/s
# Warmup Iteration  16: 101925.766 ops/s
# Warmup Iteration  17: 103701.380 ops/s
# Warmup Iteration  18: 98202.862 ops/s
# Warmup Iteration  19: 105283.937 ops/s
# Warmup Iteration  20: 100766.578 ops/s
# Warmup Iteration  21: 100970.859 ops/s
# Warmup Iteration  22: 106776.824 ops/s
# Warmup Iteration  23: 97935.272 ops/s
# Warmup Iteration  24: 101271.262 ops/s
# Warmup Iteration  25: 107218.064 ops/s
# Warmup Iteration  26: 100978.671 ops/s
# Warmup Iteration  27: 102162.065 ops/s
# Warmup Iteration  28: 101461.483 ops/s
# Warmup Iteration  29: 104424.454 ops/s
# Warmup Iteration  30: 105119.684 ops/s
Iteration   1: 92821.830 ops/s
Iteration   2: 106295.057 ops/s
Iteration   3: 100438.645 ops/s
Iteration   4: 103125.810 ops/s
Iteration   5: 105180.859 ops/s
Iteration   6: 100226.955 ops/s
Iteration   7: 105663.235 ops/s
Iteration   8: 100912.312 ops/s
Iteration   9: 101288.289 ops/s
Iteration  10: 102086.810 ops/s
Iteration  11: 104274.354 ops/s
Iteration  12: 101778.635 ops/s
Iteration  13: 103192.187 ops/s
Iteration  14: 105242.600 ops/s
Iteration  15: 104151.989 ops/s
Iteration  16: 101013.437 ops/s
Iteration  17: 102599.581 ops/s
Iteration  18: 101259.381 ops/s
Iteration  19: 103477.593 ops/s
Iteration  20: 102127.232 ops/s
Iteration  21: 103520.200 ops/s
Iteration  22: 104070.442 ops/s
Iteration  23: 103009.645 ops/s
Iteration  24: 98721.310 ops/s
Iteration  25: 101427.126 ops/s
Iteration  26: 105033.556 ops/s
Iteration  27: 100590.080 ops/s
Iteration  28: 97251.619 ops/s
Iteration  29: 104370.354 ops/s
Iteration  30: 103138.038 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_973._Benchmark.benchmark_Cluster_973":
  102276.305 ±(99.9%) 1830.522 ops/s [Average]
  (min, avg, max) = (92821.830, 102276.305, 106295.057), stdev = 2739.839
  CI (99.9%): [100445.784, 104106.827] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_973._Benchmark.benchmark_Cluster_973  thrpt   30  102276.305 ± 1830.522  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_974._Benchmark.benchmark_Cluster_974$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_974._Benchmark.benchmark_Cluster_974

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 3329.473 ops/s
# Warmup Iteration   2: 18685.987 ops/s
# Warmup Iteration   3: 23425.842 ops/s
# Warmup Iteration   4: 33671.273 ops/s
# Warmup Iteration   5: 38876.353 ops/s
# Warmup Iteration   6: 35827.502 ops/s
# Warmup Iteration   7: 41816.712 ops/s
# Warmup Iteration   8: 92312.576 ops/s
# Warmup Iteration   9: 87690.675 ops/s
# Warmup Iteration  10: 69378.938 ops/s
# Warmup Iteration  11: 88982.229 ops/s
# Warmup Iteration  12: 81219.846 ops/s
# Warmup Iteration  13: 93301.544 ops/s
# Warmup Iteration  14: 89479.401 ops/s
# Warmup Iteration  15: 92657.310 ops/s
# Warmup Iteration  16: 90228.668 ops/s
# Warmup Iteration  17: 92560.997 ops/s
# Warmup Iteration  18: 97437.501 ops/s
# Warmup Iteration  19: 89078.676 ops/s
# Warmup Iteration  20: 94401.142 ops/s
# Warmup Iteration  21: 92205.368 ops/s
# Warmup Iteration  22: 94250.988 ops/s
# Warmup Iteration  23: 90802.847 ops/s
# Warmup Iteration  24: 88049.548 ops/s
# Warmup Iteration  25: 94899.218 ops/s
# Warmup Iteration  26: 91442.124 ops/s
# Warmup Iteration  27: 89649.589 ops/s
# Warmup Iteration  28: 95639.755 ops/s
# Warmup Iteration  29: 92486.738 ops/s
# Warmup Iteration  30: 94026.537 ops/s
Iteration   1: 91261.267 ops/s
Iteration   2: 94852.045 ops/s
Iteration   3: 92534.695 ops/s
Iteration   4: 93231.996 ops/s
Iteration   5: 90241.539 ops/s
Iteration   6: 93677.214 ops/s
Iteration   7: 92457.627 ops/s
Iteration   8: 90291.442 ops/s
Iteration   9: 92490.644 ops/s
Iteration  10: 89288.831 ops/s
Iteration  11: 93412.800 ops/s
Iteration  12: 91899.483 ops/s
Iteration  13: 93892.326 ops/s
Iteration  14: 96684.617 ops/s
Iteration  15: 88605.436 ops/s
Iteration  16: 95841.295 ops/s
Iteration  17: 91521.908 ops/s
Iteration  18: 93957.133 ops/s
Iteration  19: 87310.735 ops/s
Iteration  20: 93493.007 ops/s
Iteration  21: 96865.776 ops/s
Iteration  22: 91530.094 ops/s
Iteration  23: 91081.914 ops/s
Iteration  24: 96282.322 ops/s
Iteration  25: 91040.285 ops/s
Iteration  26: 96337.701 ops/s
Iteration  27: 91941.395 ops/s
Iteration  28: 89215.986 ops/s
Iteration  29: 95976.365 ops/s
Iteration  30: 91557.758 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_974._Benchmark.benchmark_Cluster_974":
  92625.854 ±(99.9%) 1683.006 ops/s [Average]
  (min, avg, max) = (87310.735, 92625.854, 96865.776), stdev = 2519.044
  CI (99.9%): [90942.849, 94308.860] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_974._Benchmark.benchmark_Cluster_974  thrpt   30  92625.854 ± 1683.006  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_975._Benchmark.benchmark_Cluster_975$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_975._Benchmark.benchmark_Cluster_975

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11766.075 ops/s
# Warmup Iteration   2: 55663.797 ops/s
# Warmup Iteration   3: 106352.621 ops/s
# Warmup Iteration   4: 119727.956 ops/s
# Warmup Iteration   5: 121470.766 ops/s
# Warmup Iteration   6: 116406.006 ops/s
# Warmup Iteration   7: 120702.087 ops/s
# Warmup Iteration   8: 119363.626 ops/s
# Warmup Iteration   9: 117543.408 ops/s
# Warmup Iteration  10: 116454.655 ops/s
# Warmup Iteration  11: 118080.802 ops/s
# Warmup Iteration  12: 115451.991 ops/s
# Warmup Iteration  13: 118880.663 ops/s
# Warmup Iteration  14: 111908.729 ops/s
# Warmup Iteration  15: 116781.064 ops/s
# Warmup Iteration  16: 123167.464 ops/s
# Warmup Iteration  17: 123928.265 ops/s
# Warmup Iteration  18: 130568.759 ops/s
# Warmup Iteration  19: 120731.060 ops/s
# Warmup Iteration  20: 128199.652 ops/s
# Warmup Iteration  21: 131148.992 ops/s
# Warmup Iteration  22: 122632.451 ops/s
# Warmup Iteration  23: 123133.872 ops/s
# Warmup Iteration  24: 123325.930 ops/s
# Warmup Iteration  25: 129450.008 ops/s
# Warmup Iteration  26: 121488.967 ops/s
# Warmup Iteration  27: 121719.111 ops/s
# Warmup Iteration  28: 130143.072 ops/s
# Warmup Iteration  29: 121510.954 ops/s
# Warmup Iteration  30: 126764.762 ops/s
Iteration   1: 125580.716 ops/s
Iteration   2: 130027.855 ops/s
Iteration   3: 128001.735 ops/s
Iteration   4: 125058.451 ops/s
Iteration   5: 122997.399 ops/s
Iteration   6: 129033.694 ops/s
Iteration   7: 122853.749 ops/s
Iteration   8: 129056.815 ops/s
Iteration   9: 124752.177 ops/s
Iteration  10: 128662.722 ops/s
Iteration  11: 128068.922 ops/s
Iteration  12: 122486.761 ops/s
Iteration  13: 126945.109 ops/s
Iteration  14: 128404.741 ops/s
Iteration  15: 129816.525 ops/s
Iteration  16: 123280.174 ops/s
Iteration  17: 125662.270 ops/s
Iteration  18: 123627.889 ops/s
Iteration  19: 124999.717 ops/s
Iteration  20: 129162.024 ops/s
Iteration  21: 122607.748 ops/s
Iteration  22: 129977.208 ops/s
Iteration  23: 121762.067 ops/s
Iteration  24: 129929.099 ops/s
Iteration  25: 130191.316 ops/s
Iteration  26: 126175.479 ops/s
Iteration  27: 126654.110 ops/s
Iteration  28: 122078.912 ops/s
Iteration  29: 129078.791 ops/s
Iteration  30: 124541.314 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_975._Benchmark.benchmark_Cluster_975":
  126382.516 ±(99.9%) 1884.594 ops/s [Average]
  (min, avg, max) = (121762.067, 126382.516, 130191.316), stdev = 2820.772
  CI (99.9%): [124497.922, 128267.110] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_975._Benchmark.benchmark_Cluster_975  thrpt   30  126382.516 ± 1884.594  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_976._Benchmark.benchmark_Cluster_976$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_976._Benchmark.benchmark_Cluster_976

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1693.257 ops/s
# Warmup Iteration   2: 17547.746 ops/s
# Warmup Iteration   3: 21422.217 ops/s
# Warmup Iteration   4: 40711.794 ops/s
# Warmup Iteration   5: 37990.903 ops/s
# Warmup Iteration   6: 72289.108 ops/s
# Warmup Iteration   7: 79837.375 ops/s
# Warmup Iteration   8: 81224.101 ops/s
# Warmup Iteration   9: 77210.472 ops/s
# Warmup Iteration  10: 85127.145 ops/s
# Warmup Iteration  11: 82065.762 ops/s
# Warmup Iteration  12: 82568.659 ops/s
# Warmup Iteration  13: 86491.551 ops/s
# Warmup Iteration  14: 81623.095 ops/s
# Warmup Iteration  15: 84296.043 ops/s
# Warmup Iteration  16: 82252.934 ops/s
# Warmup Iteration  17: 85111.687 ops/s
# Warmup Iteration  18: 82263.502 ops/s
# Warmup Iteration  19: 79524.023 ops/s
# Warmup Iteration  20: 88057.523 ops/s
# Warmup Iteration  21: 85727.189 ops/s
# Warmup Iteration  22: 86203.584 ops/s
# Warmup Iteration  23: 87584.590 ops/s
# Warmup Iteration  24: 83145.866 ops/s
# Warmup Iteration  25: 86644.432 ops/s
# Warmup Iteration  26: 86132.767 ops/s
# Warmup Iteration  27: 82677.726 ops/s
# Warmup Iteration  28: 83209.260 ops/s
# Warmup Iteration  29: 84975.837 ops/s
# Warmup Iteration  30: 84927.789 ops/s
Iteration   1: 87105.562 ops/s
Iteration   2: 85205.608 ops/s
Iteration   3: 86672.484 ops/s
Iteration   4: 84843.564 ops/s
Iteration   5: 82600.432 ops/s
Iteration   6: 88482.190 ops/s
Iteration   7: 83318.719 ops/s
Iteration   8: 84575.160 ops/s
Iteration   9: 85935.247 ops/s
Iteration  10: 82419.525 ops/s
Iteration  11: 86055.985 ops/s
Iteration  12: 82125.375 ops/s
Iteration  13: 85534.719 ops/s
Iteration  14: 83889.245 ops/s
Iteration  15: 83129.287 ops/s
Iteration  16: 87132.274 ops/s
Iteration  17: 86044.074 ops/s
Iteration  18: 86597.596 ops/s
Iteration  19: 83584.167 ops/s
Iteration  20: 78903.118 ops/s
Iteration  21: 86674.664 ops/s
Iteration  22: 86670.134 ops/s
Iteration  23: 87541.093 ops/s
Iteration  24: 84253.027 ops/s
Iteration  25: 87702.521 ops/s
Iteration  26: 88465.357 ops/s
Iteration  27: 85591.402 ops/s
Iteration  28: 86802.810 ops/s
Iteration  29: 84680.666 ops/s
Iteration  30: 86987.151 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_976._Benchmark.benchmark_Cluster_976":
  85317.438 ±(99.9%) 1436.343 ops/s [Average]
  (min, avg, max) = (78903.118, 85317.438, 88482.190), stdev = 2149.851
  CI (99.9%): [83881.095, 86753.782] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_976._Benchmark.benchmark_Cluster_976  thrpt   30  85317.438 ± 1436.343  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_977._Benchmark.benchmark_Cluster_977$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_977._Benchmark.benchmark_Cluster_977

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11807.130 ops/s
# Warmup Iteration   2: 59051.768 ops/s
# Warmup Iteration   3: 217629.649 ops/s
# Warmup Iteration   4: 225527.362 ops/s
# Warmup Iteration   5: 257553.662 ops/s
# Warmup Iteration   6: 212554.601 ops/s
# Warmup Iteration   7: 251570.529 ops/s
# Warmup Iteration   8: 255892.817 ops/s
# Warmup Iteration   9: 247669.557 ops/s
# Warmup Iteration  10: 257974.649 ops/s
# Warmup Iteration  11: 263226.396 ops/s
# Warmup Iteration  12: 251765.296 ops/s
# Warmup Iteration  13: 257148.809 ops/s
# Warmup Iteration  14: 248105.148 ops/s
# Warmup Iteration  15: 255245.580 ops/s
# Warmup Iteration  16: 261398.187 ops/s
# Warmup Iteration  17: 262099.818 ops/s
# Warmup Iteration  18: 262977.730 ops/s
# Warmup Iteration  19: 272680.662 ops/s
# Warmup Iteration  20: 259564.302 ops/s
# Warmup Iteration  21: 271000.952 ops/s
# Warmup Iteration  22: 259792.124 ops/s
# Warmup Iteration  23: 270167.369 ops/s
# Warmup Iteration  24: 249817.153 ops/s
# Warmup Iteration  25: 205207.824 ops/s
# Warmup Iteration  26: 271658.698 ops/s
# Warmup Iteration  27: 259094.531 ops/s
# Warmup Iteration  28: 258957.266 ops/s
# Warmup Iteration  29: 270239.972 ops/s
# Warmup Iteration  30: 263648.092 ops/s
Iteration   1: 271079.575 ops/s
Iteration   2: 260071.582 ops/s
Iteration   3: 265762.294 ops/s
Iteration   4: 267359.176 ops/s
Iteration   5: 263794.428 ops/s
Iteration   6: 264573.280 ops/s
Iteration   7: 278379.401 ops/s
Iteration   8: 257776.627 ops/s
Iteration   9: 275211.817 ops/s
Iteration  10: 253141.074 ops/s
Iteration  11: 258799.668 ops/s
Iteration  12: 273514.036 ops/s
Iteration  13: 259129.880 ops/s
Iteration  14: 258094.675 ops/s
Iteration  15: 261936.324 ops/s
Iteration  16: 260790.663 ops/s
Iteration  17: 263012.384 ops/s
Iteration  18: 264675.140 ops/s
Iteration  19: 268082.519 ops/s
Iteration  20: 258132.192 ops/s
Iteration  21: 269585.434 ops/s
Iteration  22: 273386.618 ops/s
Iteration  23: 259736.840 ops/s
Iteration  24: 270480.933 ops/s
Iteration  25: 266044.734 ops/s
Iteration  26: 267294.284 ops/s
Iteration  27: 264468.653 ops/s
Iteration  28: 267632.658 ops/s
Iteration  29: 272472.272 ops/s
Iteration  30: 260361.626 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_977._Benchmark.benchmark_Cluster_977":
  265159.359 ±(99.9%) 4049.358 ops/s [Average]
  (min, avg, max) = (253141.074, 265159.359, 278379.401), stdev = 6060.889
  CI (99.9%): [261110.001, 269208.718] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_977._Benchmark.benchmark_Cluster_977  thrpt   30  265159.359 ± 4049.358  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_978._Benchmark.benchmark_Cluster_978$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_978._Benchmark.benchmark_Cluster_978

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 11553.944 ops/s
# Warmup Iteration   2: 68473.896 ops/s
# Warmup Iteration   3: 108078.427 ops/s
# Warmup Iteration   4: 114421.738 ops/s
# Warmup Iteration   5: 120357.207 ops/s
# Warmup Iteration   6: 124385.210 ops/s
# Warmup Iteration   7: 120457.032 ops/s
# Warmup Iteration   8: 122800.431 ops/s
# Warmup Iteration   9: 119043.461 ops/s
# Warmup Iteration  10: 114252.651 ops/s
# Warmup Iteration  11: 116777.384 ops/s
# Warmup Iteration  12: 126590.558 ops/s
# Warmup Iteration  13: 121843.352 ops/s
# Warmup Iteration  14: 127812.287 ops/s
# Warmup Iteration  15: 122291.659 ops/s
# Warmup Iteration  16: 119116.979 ops/s
# Warmup Iteration  17: 135148.754 ops/s
# Warmup Iteration  18: 129669.139 ops/s
# Warmup Iteration  19: 124967.556 ops/s
# Warmup Iteration  20: 132387.758 ops/s
# Warmup Iteration  21: 127847.978 ops/s
# Warmup Iteration  22: 124969.325 ops/s
# Warmup Iteration  23: 129246.739 ops/s
# Warmup Iteration  24: 124820.653 ops/s
# Warmup Iteration  25: 129176.394 ops/s
# Warmup Iteration  26: 127848.906 ops/s
# Warmup Iteration  27: 125073.812 ops/s
# Warmup Iteration  28: 130134.977 ops/s
# Warmup Iteration  29: 121504.167 ops/s
# Warmup Iteration  30: 129286.331 ops/s
Iteration   1: 126421.569 ops/s
Iteration   2: 133496.430 ops/s
Iteration   3: 123659.889 ops/s
Iteration   4: 129073.956 ops/s
Iteration   5: 131373.117 ops/s
Iteration   6: 127257.008 ops/s
Iteration   7: 129503.056 ops/s
Iteration   8: 124663.961 ops/s
Iteration   9: 131723.407 ops/s
Iteration  10: 125668.330 ops/s
Iteration  11: 127793.190 ops/s
Iteration  12: 124830.368 ops/s
Iteration  13: 127786.631 ops/s
Iteration  14: 129615.024 ops/s
Iteration  15: 123651.189 ops/s
Iteration  16: 127763.802 ops/s
Iteration  17: 132653.578 ops/s
Iteration  18: 123680.616 ops/s
Iteration  19: 132405.620 ops/s
Iteration  20: 133227.650 ops/s
Iteration  21: 125169.433 ops/s
Iteration  22: 128057.010 ops/s
Iteration  23: 126880.632 ops/s
Iteration  24: 128865.918 ops/s
Iteration  25: 133722.818 ops/s
Iteration  26: 127898.291 ops/s
Iteration  27: 126353.331 ops/s
Iteration  28: 125594.411 ops/s
Iteration  29: 110347.640 ops/s
Iteration  30: 125822.603 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_978._Benchmark.benchmark_Cluster_978":
  127498.683 ±(99.9%) 2977.978 ops/s [Average]
  (min, avg, max) = (110347.640, 127498.683, 133722.818), stdev = 4457.297
  CI (99.9%): [124520.705, 130476.660] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_978._Benchmark.benchmark_Cluster_978  thrpt   30  127498.683 ± 2977.978  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_979._Benchmark.benchmark_Cluster_979$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_979._Benchmark.benchmark_Cluster_979

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18841.502 ops/s
# Warmup Iteration   2: 45911.412 ops/s
# Warmup Iteration   3: 39225.058 ops/s
# Warmup Iteration   4: 67615.083 ops/s
# Warmup Iteration   5: 129834.754 ops/s
# Warmup Iteration   6: 134616.681 ops/s
# Warmup Iteration   7: 131188.768 ops/s
# Warmup Iteration   8: 136708.395 ops/s
# Warmup Iteration   9: 141643.615 ops/s
# Warmup Iteration  10: 143701.231 ops/s
# Warmup Iteration  11: 132893.091 ops/s
# Warmup Iteration  12: 139983.080 ops/s
# Warmup Iteration  13: 138154.535 ops/s
# Warmup Iteration  14: 129530.476 ops/s
# Warmup Iteration  15: 136187.892 ops/s
# Warmup Iteration  16: 134844.348 ops/s
# Warmup Iteration  17: 146102.070 ops/s
# Warmup Iteration  18: 152061.811 ops/s
# Warmup Iteration  19: 136142.238 ops/s
# Warmup Iteration  20: 145983.202 ops/s
# Warmup Iteration  21: 145167.444 ops/s
# Warmup Iteration  22: 149391.839 ops/s
# Warmup Iteration  23: 143873.082 ops/s
# Warmup Iteration  24: 143284.351 ops/s
# Warmup Iteration  25: 148275.076 ops/s
# Warmup Iteration  26: 137937.622 ops/s
# Warmup Iteration  27: 144662.142 ops/s
# Warmup Iteration  28: 148371.998 ops/s
# Warmup Iteration  29: 142771.488 ops/s
# Warmup Iteration  30: 148065.253 ops/s
Iteration   1: 146781.316 ops/s
Iteration   2: 143989.468 ops/s
Iteration   3: 144027.184 ops/s
Iteration   4: 148907.037 ops/s
Iteration   5: 146980.149 ops/s
Iteration   6: 142075.596 ops/s
Iteration   7: 141556.658 ops/s
Iteration   8: 145567.238 ops/s
Iteration   9: 150274.807 ops/s
Iteration  10: 147231.956 ops/s
Iteration  11: 146454.229 ops/s
Iteration  12: 150726.523 ops/s
Iteration  13: 144412.282 ops/s
Iteration  14: 148043.742 ops/s
Iteration  15: 146188.196 ops/s
Iteration  16: 143519.427 ops/s
Iteration  17: 143196.662 ops/s
Iteration  18: 148325.340 ops/s
Iteration  19: 147123.873 ops/s
Iteration  20: 151413.434 ops/s
Iteration  21: 144296.318 ops/s
Iteration  22: 148451.706 ops/s
Iteration  23: 144278.145 ops/s
Iteration  24: 149158.683 ops/s
Iteration  25: 150125.118 ops/s
Iteration  26: 142801.668 ops/s
Iteration  27: 152553.308 ops/s
Iteration  28: 141768.926 ops/s
Iteration  29: 148311.299 ops/s
Iteration  30: 149701.506 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_979._Benchmark.benchmark_Cluster_979":
  146608.060 ±(99.9%) 2039.535 ops/s [Average]
  (min, avg, max) = (141556.658, 146608.060, 152553.308), stdev = 3052.680
  CI (99.9%): [144568.525, 148647.595] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_979._Benchmark.benchmark_Cluster_979  thrpt   30  146608.060 ± 2039.535  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_98._Benchmark.benchmark_Cluster_98$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_98._Benchmark.benchmark_Cluster_98

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20309.918 ops/s
# Warmup Iteration   2: 81954.423 ops/s
# Warmup Iteration   3: 99627.642 ops/s
# Warmup Iteration   4: 98397.381 ops/s
# Warmup Iteration   5: 102287.363 ops/s
# Warmup Iteration   6: 93780.678 ops/s
# Warmup Iteration   7: 104616.301 ops/s
# Warmup Iteration   8: 103319.994 ops/s
# Warmup Iteration   9: 97946.700 ops/s
# Warmup Iteration  10: 101804.913 ops/s
# Warmup Iteration  11: 104164.041 ops/s
# Warmup Iteration  12: 98964.136 ops/s
# Warmup Iteration  13: 101021.503 ops/s
# Warmup Iteration  14: 102447.129 ops/s
# Warmup Iteration  15: 99388.953 ops/s
# Warmup Iteration  16: 101666.717 ops/s
# Warmup Iteration  17: 105760.095 ops/s
# Warmup Iteration  18: 99789.837 ops/s
# Warmup Iteration  19: 106111.719 ops/s
# Warmup Iteration  20: 110491.295 ops/s
# Warmup Iteration  21: 102251.518 ops/s
# Warmup Iteration  22: 105774.356 ops/s
# Warmup Iteration  23: 103846.706 ops/s
# Warmup Iteration  24: 101692.704 ops/s
# Warmup Iteration  25: 109955.922 ops/s
# Warmup Iteration  26: 101097.650 ops/s
# Warmup Iteration  27: 103329.492 ops/s
# Warmup Iteration  28: 104848.776 ops/s
# Warmup Iteration  29: 106830.131 ops/s
# Warmup Iteration  30: 104863.380 ops/s
Iteration   1: 106600.559 ops/s
Iteration   2: 103667.693 ops/s
Iteration   3: 102139.508 ops/s
Iteration   4: 108947.781 ops/s
Iteration   5: 103116.625 ops/s
Iteration   6: 104898.420 ops/s
Iteration   7: 101967.285 ops/s
Iteration   8: 102443.150 ops/s
Iteration   9: 107911.626 ops/s
Iteration  10: 101548.062 ops/s
Iteration  11: 107017.028 ops/s
Iteration  12: 104927.076 ops/s
Iteration  13: 109032.069 ops/s
Iteration  14: 102334.587 ops/s
Iteration  15: 107145.414 ops/s
Iteration  16: 103465.199 ops/s
Iteration  17: 103902.464 ops/s
Iteration  18: 108821.053 ops/s
Iteration  19: 102723.724 ops/s
Iteration  20: 109169.161 ops/s
Iteration  21: 100667.215 ops/s
Iteration  22: 109431.969 ops/s
Iteration  23: 102209.135 ops/s
Iteration  24: 84805.449 ops/s
Iteration  25: 107910.325 ops/s
Iteration  26: 102477.627 ops/s
Iteration  27: 109751.991 ops/s
Iteration  28: 101920.141 ops/s
Iteration  29: 105320.580 ops/s
Iteration  30: 106354.789 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_98._Benchmark.benchmark_Cluster_98":
  104420.923 ±(99.9%) 3122.297 ops/s [Average]
  (min, avg, max) = (84805.449, 104420.923, 109751.991), stdev = 4673.307
  CI (99.9%): [101298.626, 107543.220] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_98._Benchmark.benchmark_Cluster_98  thrpt   30  104420.923 ± 3122.297  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_980._Benchmark.benchmark_Cluster_980$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_980._Benchmark.benchmark_Cluster_980

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20409.324 ops/s
# Warmup Iteration   2: 68528.352 ops/s
# Warmup Iteration   3: 92212.555 ops/s
# Warmup Iteration   4: 99124.366 ops/s
# Warmup Iteration   5: 105664.472 ops/s
# Warmup Iteration   6: 93228.130 ops/s
# Warmup Iteration   7: 103922.197 ops/s
# Warmup Iteration   8: 105580.923 ops/s
# Warmup Iteration   9: 104235.178 ops/s
# Warmup Iteration  10: 105712.048 ops/s
# Warmup Iteration  11: 101699.100 ops/s
# Warmup Iteration  12: 110277.673 ops/s
# Warmup Iteration  13: 105044.915 ops/s
# Warmup Iteration  14: 102763.290 ops/s
# Warmup Iteration  15: 108273.206 ops/s
# Warmup Iteration  16: 100742.997 ops/s
# Warmup Iteration  17: 111000.456 ops/s
# Warmup Iteration  18: 111398.120 ops/s
# Warmup Iteration  19: 104693.582 ops/s
# Warmup Iteration  20: 113275.016 ops/s
# Warmup Iteration  21: 105445.398 ops/s
# Warmup Iteration  22: 107641.085 ops/s
# Warmup Iteration  23: 110416.282 ops/s
# Warmup Iteration  24: 104755.369 ops/s
# Warmup Iteration  25: 103637.831 ops/s
# Warmup Iteration  26: 109177.821 ops/s
# Warmup Iteration  27: 106394.295 ops/s
# Warmup Iteration  28: 112188.410 ops/s
# Warmup Iteration  29: 109782.661 ops/s
# Warmup Iteration  30: 103823.359 ops/s
Iteration   1: 112034.884 ops/s
Iteration   2: 102921.808 ops/s
Iteration   3: 110102.691 ops/s
Iteration   4: 112698.729 ops/s
Iteration   5: 110555.349 ops/s
Iteration   6: 104348.503 ops/s
Iteration   7: 113191.971 ops/s
Iteration   8: 113592.133 ops/s
Iteration   9: 104269.537 ops/s
Iteration  10: 109745.446 ops/s
Iteration  11: 106534.964 ops/s
Iteration  12: 109199.983 ops/s
Iteration  13: 110621.459 ops/s
Iteration  14: 105389.659 ops/s
Iteration  15: 108991.564 ops/s
Iteration  16: 112446.752 ops/s
Iteration  17: 105754.694 ops/s
Iteration  18: 112910.375 ops/s
Iteration  19: 110375.893 ops/s
Iteration  20: 106606.464 ops/s
Iteration  21: 111544.887 ops/s
Iteration  22: 106176.190 ops/s
Iteration  23: 111230.511 ops/s
Iteration  24: 109621.689 ops/s
Iteration  25: 105549.554 ops/s
Iteration  26: 110071.945 ops/s
Iteration  27: 104670.212 ops/s
Iteration  28: 107860.209 ops/s
Iteration  29: 110927.231 ops/s
Iteration  30: 109829.006 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_980._Benchmark.benchmark_Cluster_980":
  108992.476 ±(99.9%) 2042.821 ops/s [Average]
  (min, avg, max) = (102921.808, 108992.476, 113592.133), stdev = 3057.598
  CI (99.9%): [106949.655, 111035.297] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_980._Benchmark.benchmark_Cluster_980  thrpt   30  108992.476 ± 2042.821  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_981._Benchmark.benchmark_Cluster_981$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_981._Benchmark.benchmark_Cluster_981

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 13995.619 ops/s
# Warmup Iteration   2: 74263.105 ops/s
# Warmup Iteration   3: 96627.414 ops/s
# Warmup Iteration   4: 108707.043 ops/s
# Warmup Iteration   5: 112106.077 ops/s
# Warmup Iteration   6: 113154.309 ops/s
# Warmup Iteration   7: 110150.427 ops/s
# Warmup Iteration   8: 115602.562 ops/s
# Warmup Iteration   9: 112929.614 ops/s
# Warmup Iteration  10: 109746.844 ops/s
# Warmup Iteration  11: 114140.711 ops/s
# Warmup Iteration  12: 111673.377 ops/s
# Warmup Iteration  13: 110012.826 ops/s
# Warmup Iteration  14: 112999.449 ops/s
# Warmup Iteration  15: 111404.966 ops/s
# Warmup Iteration  16: 109585.578 ops/s
# Warmup Iteration  17: 117426.841 ops/s
# Warmup Iteration  18: 118928.711 ops/s
# Warmup Iteration  19: 117269.181 ops/s
# Warmup Iteration  20: 118074.599 ops/s
# Warmup Iteration  21: 121761.419 ops/s
# Warmup Iteration  22: 115129.998 ops/s
# Warmup Iteration  23: 120911.366 ops/s
# Warmup Iteration  24: 109516.602 ops/s
# Warmup Iteration  25: 118244.785 ops/s
# Warmup Iteration  26: 121968.863 ops/s
# Warmup Iteration  27: 116679.359 ops/s
# Warmup Iteration  28: 120991.120 ops/s
# Warmup Iteration  29: 117056.686 ops/s
# Warmup Iteration  30: 119331.234 ops/s
Iteration   1: 120242.782 ops/s
Iteration   2: 119333.804 ops/s
Iteration   3: 114246.796 ops/s
Iteration   4: 123006.518 ops/s
Iteration   5: 110920.648 ops/s
Iteration   6: 116931.760 ops/s
Iteration   7: 122521.804 ops/s
Iteration   8: 115394.833 ops/s
Iteration   9: 123645.067 ops/s
Iteration  10: 117974.447 ops/s
Iteration  11: 117423.751 ops/s
Iteration  12: 119472.330 ops/s
Iteration  13: 116213.641 ops/s
Iteration  14: 120340.165 ops/s
Iteration  15: 117663.384 ops/s
Iteration  16: 117199.816 ops/s
Iteration  17: 118176.057 ops/s
Iteration  18: 111808.862 ops/s
Iteration  19: 110251.908 ops/s
Iteration  20: 117203.853 ops/s
Iteration  21: 122063.291 ops/s
Iteration  22: 111454.780 ops/s
Iteration  23: 115970.602 ops/s
Iteration  24: 117130.731 ops/s
Iteration  25: 122463.448 ops/s
Iteration  26: 120318.800 ops/s
Iteration  27: 117383.386 ops/s
Iteration  28: 123004.994 ops/s
Iteration  29: 117497.315 ops/s
Iteration  30: 120600.495 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_981._Benchmark.benchmark_Cluster_981":
  117928.669 ±(99.9%) 2447.222 ops/s [Average]
  (min, avg, max) = (110251.908, 117928.669, 123645.067), stdev = 3662.887
  CI (99.9%): [115481.447, 120375.891] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_981._Benchmark.benchmark_Cluster_981  thrpt   30  117928.669 ± 2447.222  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_982._Benchmark.benchmark_Cluster_982$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_982._Benchmark.benchmark_Cluster_982

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 7553.505 ops/s
# Warmup Iteration   2: 32810.039 ops/s
# Warmup Iteration   3: 45379.676 ops/s
# Warmup Iteration   4: 71459.925 ops/s
# Warmup Iteration   5: 102352.372 ops/s
# Warmup Iteration   6: 105382.610 ops/s
# Warmup Iteration   7: 101177.843 ops/s
# Warmup Iteration   8: 101158.073 ops/s
# Warmup Iteration   9: 100442.512 ops/s
# Warmup Iteration  10: 99490.473 ops/s
# Warmup Iteration  11: 99760.416 ops/s
# Warmup Iteration  12: 109377.995 ops/s
# Warmup Iteration  13: 103656.400 ops/s
# Warmup Iteration  14: 108435.670 ops/s
# Warmup Iteration  15: 103640.987 ops/s
# Warmup Iteration  16: 105701.806 ops/s
# Warmup Iteration  17: 113142.017 ops/s
# Warmup Iteration  18: 105076.256 ops/s
# Warmup Iteration  19: 111799.648 ops/s
# Warmup Iteration  20: 111016.292 ops/s
# Warmup Iteration  21: 106547.212 ops/s
# Warmup Iteration  22: 113021.789 ops/s
# Warmup Iteration  23: 108379.273 ops/s
# Warmup Iteration  24: 108887.663 ops/s
# Warmup Iteration  25: 113028.492 ops/s
# Warmup Iteration  26: 107882.762 ops/s
# Warmup Iteration  27: 110804.726 ops/s
# Warmup Iteration  28: 112781.424 ops/s
# Warmup Iteration  29: 102277.804 ops/s
# Warmup Iteration  30: 110276.008 ops/s
Iteration   1: 111373.411 ops/s
Iteration   2: 110750.189 ops/s
Iteration   3: 111149.022 ops/s
Iteration   4: 109755.515 ops/s
Iteration   5: 108879.653 ops/s
Iteration   6: 113366.083 ops/s
Iteration   7: 108503.627 ops/s
Iteration   8: 113995.265 ops/s
Iteration   9: 107137.161 ops/s
Iteration  10: 110458.832 ops/s
Iteration  11: 110876.058 ops/s
Iteration  12: 108394.763 ops/s
Iteration  13: 111608.856 ops/s
Iteration  14: 108559.436 ops/s
Iteration  15: 110072.057 ops/s
Iteration  16: 108938.647 ops/s
Iteration  17: 107576.323 ops/s
Iteration  18: 112963.685 ops/s
Iteration  19: 108391.001 ops/s
Iteration  20: 113134.274 ops/s
Iteration  21: 109102.319 ops/s
Iteration  22: 111408.843 ops/s
Iteration  23: 109091.071 ops/s
Iteration  24: 112122.472 ops/s
Iteration  25: 111800.927 ops/s
Iteration  26: 110800.357 ops/s
Iteration  27: 111462.005 ops/s
Iteration  28: 107751.370 ops/s
Iteration  29: 109469.261 ops/s
Iteration  30: 108137.425 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_982._Benchmark.benchmark_Cluster_982":
  110234.330 ±(99.9%) 1243.970 ops/s [Average]
  (min, avg, max) = (107137.161, 110234.330, 113995.265), stdev = 1861.915
  CI (99.9%): [108990.361, 111478.300] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_982._Benchmark.benchmark_Cluster_982  thrpt   30  110234.330 ± 1243.970  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_983._Benchmark.benchmark_Cluster_983$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_983._Benchmark.benchmark_Cluster_983

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15441.771 ops/s
# Warmup Iteration   2: 24990.221 ops/s
# Warmup Iteration   3: 83668.766 ops/s
# Warmup Iteration   4: 109962.010 ops/s
# Warmup Iteration   5: 117756.585 ops/s
# Warmup Iteration   6: 116132.109 ops/s
# Warmup Iteration   7: 113099.431 ops/s
# Warmup Iteration   8: 121217.296 ops/s
# Warmup Iteration   9: 113523.730 ops/s
# Warmup Iteration  10: 121060.484 ops/s
# Warmup Iteration  11: 119384.546 ops/s
# Warmup Iteration  12: 113992.118 ops/s
# Warmup Iteration  13: 117264.276 ops/s
# Warmup Iteration  14: 115991.953 ops/s
# Warmup Iteration  15: 119922.666 ops/s
# Warmup Iteration  16: 115105.281 ops/s
# Warmup Iteration  17: 123982.073 ops/s
# Warmup Iteration  18: 126552.353 ops/s
# Warmup Iteration  19: 121487.720 ops/s
# Warmup Iteration  20: 129115.808 ops/s
# Warmup Iteration  21: 121435.750 ops/s
# Warmup Iteration  22: 122627.829 ops/s
# Warmup Iteration  23: 123278.047 ops/s
# Warmup Iteration  24: 120692.065 ops/s
# Warmup Iteration  25: 120867.932 ops/s
# Warmup Iteration  26: 126297.981 ops/s
# Warmup Iteration  27: 122264.119 ops/s
# Warmup Iteration  28: 123265.473 ops/s
# Warmup Iteration  29: 127245.568 ops/s
# Warmup Iteration  30: 124163.321 ops/s
Iteration   1: 125086.149 ops/s
Iteration   2: 124340.453 ops/s
Iteration   3: 119262.228 ops/s
Iteration   4: 126388.826 ops/s
Iteration   5: 123134.713 ops/s
Iteration   6: 129424.686 ops/s
Iteration   7: 121946.812 ops/s
Iteration   8: 121188.669 ops/s
Iteration   9: 127696.976 ops/s
Iteration  10: 124085.954 ops/s
Iteration  11: 126895.524 ops/s
Iteration  12: 119960.801 ops/s
Iteration  13: 105446.933 ops/s
Iteration  14: 124670.227 ops/s
Iteration  15: 122080.603 ops/s
Iteration  16: 126488.822 ops/s
Iteration  17: 127919.822 ops/s
Iteration  18: 128162.570 ops/s
Iteration  19: 124175.065 ops/s
Iteration  20: 123612.986 ops/s
Iteration  21: 120238.400 ops/s
Iteration  22: 126201.817 ops/s
Iteration  23: 120759.676 ops/s
Iteration  24: 126915.879 ops/s
Iteration  25: 126410.315 ops/s
Iteration  26: 122636.941 ops/s
Iteration  27: 127042.268 ops/s
Iteration  28: 122227.042 ops/s
Iteration  29: 125135.964 ops/s
Iteration  30: 127139.309 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_983._Benchmark.benchmark_Cluster_983":
  123889.214 ±(99.9%) 2952.595 ops/s [Average]
  (min, avg, max) = (105446.933, 123889.214, 129424.686), stdev = 4419.306
  CI (99.9%): [120936.619, 126841.810] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_983._Benchmark.benchmark_Cluster_983  thrpt   30  123889.214 ± 2952.595  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_984._Benchmark.benchmark_Cluster_984$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_984._Benchmark.benchmark_Cluster_984

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 20627.345 ops/s
# Warmup Iteration   2: 57312.262 ops/s
# Warmup Iteration   3: 105458.062 ops/s
# Warmup Iteration   4: 121128.759 ops/s
# Warmup Iteration   5: 120802.352 ops/s
# Warmup Iteration   6: 120741.082 ops/s
# Warmup Iteration   7: 118592.479 ops/s
# Warmup Iteration   8: 118962.126 ops/s
# Warmup Iteration   9: 121281.791 ops/s
# Warmup Iteration  10: 116039.851 ops/s
# Warmup Iteration  11: 121193.988 ops/s
# Warmup Iteration  12: 123932.475 ops/s
# Warmup Iteration  13: 116511.534 ops/s
# Warmup Iteration  14: 124659.738 ops/s
# Warmup Iteration  15: 120890.312 ops/s
# Warmup Iteration  16: 121936.831 ops/s
# Warmup Iteration  17: 124355.336 ops/s
# Warmup Iteration  18: 125771.476 ops/s
# Warmup Iteration  19: 124598.292 ops/s
# Warmup Iteration  20: 130155.547 ops/s
# Warmup Iteration  21: 125134.880 ops/s
# Warmup Iteration  22: 127867.534 ops/s
# Warmup Iteration  23: 121193.227 ops/s
# Warmup Iteration  24: 125042.888 ops/s
# Warmup Iteration  25: 128771.177 ops/s
# Warmup Iteration  26: 123166.316 ops/s
# Warmup Iteration  27: 125808.932 ops/s
# Warmup Iteration  28: 128748.982 ops/s
# Warmup Iteration  29: 123393.518 ops/s
# Warmup Iteration  30: 130510.281 ops/s
Iteration   1: 126473.198 ops/s
Iteration   2: 130644.816 ops/s
Iteration   3: 126329.430 ops/s
Iteration   4: 126481.275 ops/s
Iteration   5: 129771.995 ops/s
Iteration   6: 124266.256 ops/s
Iteration   7: 130514.516 ops/s
Iteration   8: 131204.611 ops/s
Iteration   9: 123343.354 ops/s
Iteration  10: 127718.467 ops/s
Iteration  11: 126773.228 ops/s
Iteration  12: 124820.273 ops/s
Iteration  13: 130901.929 ops/s
Iteration  14: 128029.079 ops/s
Iteration  15: 121432.112 ops/s
Iteration  16: 127029.627 ops/s
Iteration  17: 132080.807 ops/s
Iteration  18: 124090.232 ops/s
Iteration  19: 127700.309 ops/s
Iteration  20: 123752.013 ops/s
Iteration  21: 129830.497 ops/s
Iteration  22: 126447.909 ops/s
Iteration  23: 125179.212 ops/s
Iteration  24: 130987.838 ops/s
Iteration  25: 129429.998 ops/s
Iteration  26: 120759.678 ops/s
Iteration  27: 128918.293 ops/s
Iteration  28: 121837.115 ops/s
Iteration  29: 125818.689 ops/s
Iteration  30: 130284.928 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_984._Benchmark.benchmark_Cluster_984":
  127095.056 ±(99.9%) 2095.927 ops/s [Average]
  (min, avg, max) = (120759.678, 127095.056, 132080.807), stdev = 3137.085
  CI (99.9%): [124999.129, 129190.983] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_984._Benchmark.benchmark_Cluster_984  thrpt   30  127095.056 ± 2095.927  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_985._Benchmark.benchmark_Cluster_985$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_985._Benchmark.benchmark_Cluster_985

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 18576.429 ops/s
# Warmup Iteration   2: 67522.543 ops/s
# Warmup Iteration   3: 122279.846 ops/s
# Warmup Iteration   4: 120940.701 ops/s
# Warmup Iteration   5: 135163.574 ops/s
# Warmup Iteration   6: 131597.680 ops/s
# Warmup Iteration   7: 140059.738 ops/s
# Warmup Iteration   8: 130538.113 ops/s
# Warmup Iteration   9: 132326.931 ops/s
# Warmup Iteration  10: 136903.037 ops/s
# Warmup Iteration  11: 129616.133 ops/s
# Warmup Iteration  12: 134312.495 ops/s
# Warmup Iteration  13: 137848.175 ops/s
# Warmup Iteration  14: 135179.241 ops/s
# Warmup Iteration  15: 134518.525 ops/s
# Warmup Iteration  16: 134160.697 ops/s
# Warmup Iteration  17: 138950.039 ops/s
# Warmup Iteration  18: 139854.016 ops/s
# Warmup Iteration  19: 142894.565 ops/s
# Warmup Iteration  20: 141232.415 ops/s
# Warmup Iteration  21: 135901.451 ops/s
# Warmup Iteration  22: 141782.024 ops/s
# Warmup Iteration  23: 141602.934 ops/s
# Warmup Iteration  24: 138984.078 ops/s
# Warmup Iteration  25: 139018.454 ops/s
# Warmup Iteration  26: 138001.911 ops/s
# Warmup Iteration  27: 141083.399 ops/s
# Warmup Iteration  28: 140010.294 ops/s
# Warmup Iteration  29: 138653.670 ops/s
# Warmup Iteration  30: 139129.667 ops/s
Iteration   1: 140216.118 ops/s
Iteration   2: 137273.728 ops/s
Iteration   3: 139480.215 ops/s
Iteration   4: 144644.090 ops/s
Iteration   5: 138036.446 ops/s
Iteration   6: 137920.423 ops/s
Iteration   7: 141498.476 ops/s
Iteration   8: 104100.582 ops/s
Iteration   9: 141756.626 ops/s
Iteration  10: 135463.376 ops/s
Iteration  11: 143069.198 ops/s
Iteration  12: 132763.433 ops/s
Iteration  13: 143031.042 ops/s
Iteration  14: 140028.732 ops/s
Iteration  15: 136912.647 ops/s
Iteration  16: 141117.939 ops/s
Iteration  17: 139871.512 ops/s
Iteration  18: 138455.456 ops/s
Iteration  19: 139312.043 ops/s
Iteration  20: 141361.521 ops/s
Iteration  21: 138827.611 ops/s
Iteration  22: 140022.783 ops/s
Iteration  23: 142261.467 ops/s
Iteration  24: 137953.298 ops/s
Iteration  25: 138614.892 ops/s
Iteration  26: 143143.862 ops/s
Iteration  27: 136968.491 ops/s
Iteration  28: 145517.705 ops/s
Iteration  29: 134593.948 ops/s
Iteration  30: 142100.984 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_985._Benchmark.benchmark_Cluster_985":
  138543.955 ±(99.9%) 4758.063 ops/s [Average]
  (min, avg, max) = (104100.582, 138543.955, 145517.705), stdev = 7121.646
  CI (99.9%): [133785.891, 143302.018] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_985._Benchmark.benchmark_Cluster_985  thrpt   30  138543.955 ± 4758.063  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_986._Benchmark.benchmark_Cluster_986$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_986._Benchmark.benchmark_Cluster_986

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 15907.348 ops/s
# Warmup Iteration   2: 57858.561 ops/s
# Warmup Iteration   3: 95525.010 ops/s
# Warmup Iteration   4: 114452.037 ops/s
# Warmup Iteration   5: 121126.753 ops/s
# Warmup Iteration   6: 120513.009 ops/s
# Warmup Iteration   7: 123231.754 ops/s
# Warmup Iteration   8: 126887.572 ops/s
# Warmup Iteration   9: 125470.640 ops/s
# Warmup Iteration  10: 122857.058 ops/s
# Warmup Iteration  11: 125930.699 ops/s
# Warmup Iteration  12: 125710.487 ops/s
# Warmup Iteration  13: 122663.163 ops/s
# Warmup Iteration  14: 124210.728 ops/s
# Warmup Iteration  15: 123739.770 ops/s
# Warmup Iteration  16: 125513.048 ops/s
# Warmup Iteration  17: 127898.582 ops/s
# Warmup Iteration  18: 129882.722 ops/s
# Warmup Iteration  19: 122604.423 ops/s
# Warmup Iteration  20: 131766.848 ops/s
# Warmup Iteration  21: 132906.136 ops/s
# Warmup Iteration  22: 127851.161 ops/s
# Warmup Iteration  23: 126714.391 ops/s
# Warmup Iteration  24: 126040.288 ops/s
# Warmup Iteration  25: 126018.244 ops/s
# Warmup Iteration  26: 130624.989 ops/s
# Warmup Iteration  27: 128533.946 ops/s
# Warmup Iteration  28: 127300.897 ops/s
# Warmup Iteration  29: 130868.406 ops/s
# Warmup Iteration  30: 125253.886 ops/s
Iteration   1: 130250.866 ops/s
Iteration   2: 122608.912 ops/s
Iteration   3: 128187.763 ops/s
Iteration   4: 126457.798 ops/s
Iteration   5: 132425.716 ops/s
Iteration   6: 124354.026 ops/s
Iteration   7: 126332.545 ops/s
Iteration   8: 135045.196 ops/s
Iteration   9: 123641.629 ops/s
Iteration  10: 132278.120 ops/s
Iteration  11: 128301.992 ops/s
Iteration  12: 132661.982 ops/s
Iteration  13: 131520.190 ops/s
Iteration  14: 121747.504 ops/s
Iteration  15: 131987.718 ops/s
Iteration  16: 125109.649 ops/s
Iteration  17: 127673.459 ops/s
Iteration  18: 130627.110 ops/s
Iteration  19: 126978.422 ops/s
Iteration  20: 133706.824 ops/s
Iteration  21: 124349.935 ops/s
Iteration  22: 126202.998 ops/s
Iteration  23: 126843.741 ops/s
Iteration  24: 124796.848 ops/s
Iteration  25: 128221.594 ops/s
Iteration  26: 124931.429 ops/s
Iteration  27: 127850.298 ops/s
Iteration  28: 130578.936 ops/s
Iteration  29: 124544.904 ops/s
Iteration  30: 129151.904 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_986._Benchmark.benchmark_Cluster_986":
  127979.000 ±(99.9%) 2337.120 ops/s [Average]
  (min, avg, max) = (121747.504, 127979.000, 135045.196), stdev = 3498.091
  CI (99.9%): [125641.880, 130316.120] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_986._Benchmark.benchmark_Cluster_986  thrpt   30  127979.000 ± 2337.120  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_987._Benchmark.benchmark_Cluster_987$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_987._Benchmark.benchmark_Cluster_987

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 17531.646 ops/s
# Warmup Iteration   2: 63071.319 ops/s
# Warmup Iteration   3: 64074.264 ops/s
# Warmup Iteration   4: 76675.612 ops/s
# Warmup Iteration   5: 78557.578 ops/s
# Warmup Iteration   6: 75848.953 ops/s
# Warmup Iteration   7: 78286.188 ops/s
# Warmup Iteration   8: 76309.462 ops/s
# Warmup Iteration   9: 75511.428 ops/s
# Warmup Iteration  10: 78609.067 ops/s
# Warmup Iteration  11: 75605.786 ops/s
# Warmup Iteration  12: 78302.187 ops/s
# Warmup Iteration  13: 75059.558 ops/s
# Warmup Iteration  14: 82181.030 ops/s
# Warmup Iteration  15: 76257.036 ops/s
# Warmup Iteration  16: 76644.511 ops/s
# Warmup Iteration  17: 80390.841 ops/s
# Warmup Iteration  18: 82150.694 ops/s
# Warmup Iteration  19: 81003.165 ops/s
# Warmup Iteration  20: 82001.759 ops/s
# Warmup Iteration  21: 78902.697 ops/s
# Warmup Iteration  22: 81631.293 ops/s
# Warmup Iteration  23: 77399.367 ops/s
# Warmup Iteration  24: 78751.487 ops/s
# Warmup Iteration  25: 82335.976 ops/s
# Warmup Iteration  26: 77588.502 ops/s
# Warmup Iteration  27: 80610.419 ops/s
# Warmup Iteration  28: 82412.971 ops/s
# Warmup Iteration  29: 79754.371 ops/s
# Warmup Iteration  30: 79777.702 ops/s
Iteration   1: 80585.216 ops/s
Iteration   2: 72715.649 ops/s
Iteration   3: 71159.686 ops/s
Iteration   4: 84704.877 ops/s
Iteration   5: 78691.482 ops/s
Iteration   6: 82284.502 ops/s
Iteration   7: 76175.315 ops/s
Iteration   8: 82172.998 ops/s
Iteration   9: 79713.957 ops/s
Iteration  10: 82856.259 ops/s
Iteration  11: 78692.203 ops/s
Iteration  12: 79498.527 ops/s
Iteration  13: 83314.644 ops/s
Iteration  14: 77714.395 ops/s
Iteration  15: 82236.608 ops/s
Iteration  16: 80030.126 ops/s
Iteration  17: 80032.792 ops/s
Iteration  18: 83058.350 ops/s
Iteration  19: 79349.572 ops/s
Iteration  20: 82700.819 ops/s
Iteration  21: 83450.615 ops/s
Iteration  22: 78732.471 ops/s
Iteration  23: 82304.690 ops/s
Iteration  24: 78763.945 ops/s
Iteration  25: 81713.710 ops/s
Iteration  26: 79536.691 ops/s
Iteration  27: 81001.945 ops/s
Iteration  28: 77778.255 ops/s
Iteration  29: 80562.305 ops/s
Iteration  30: 76944.147 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_987._Benchmark.benchmark_Cluster_987":
  79949.225 ±(99.9%) 2029.075 ops/s [Average]
  (min, avg, max) = (71159.686, 79949.225, 84704.877), stdev = 3037.025
  CI (99.9%): [77920.150, 81978.300] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_987._Benchmark.benchmark_Cluster_987  thrpt   30  79949.225 ± 2029.075  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_988._Benchmark.benchmark_Cluster_988$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_988._Benchmark.benchmark_Cluster_988

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 10928.833 ops/s
# Warmup Iteration   2: 52103.490 ops/s
# Warmup Iteration   3: 93325.082 ops/s
# Warmup Iteration   4: 111503.647 ops/s
# Warmup Iteration   5: 129908.253 ops/s
# Warmup Iteration   6: 123050.957 ops/s
# Warmup Iteration   7: 119986.109 ops/s
# Warmup Iteration   8: 116475.056 ops/s
# Warmup Iteration   9: 127259.020 ops/s
# Warmup Iteration  10: 119380.700 ops/s
# Warmup Iteration  11: 112790.264 ops/s
# Warmup Iteration  12: 124002.602 ops/s
# Warmup Iteration  13: 126294.041 ops/s
# Warmup Iteration  14: 122851.233 ops/s
# Warmup Iteration  15: 125575.255 ops/s
# Warmup Iteration  16: 126276.808 ops/s
# Warmup Iteration  17: 123751.185 ops/s
# Warmup Iteration  18: 131862.187 ops/s
# Warmup Iteration  19: 128784.894 ops/s
# Warmup Iteration  20: 130142.315 ops/s
# Warmup Iteration  21: 128985.579 ops/s
# Warmup Iteration  22: 129672.477 ops/s
# Warmup Iteration  23: 128504.352 ops/s
# Warmup Iteration  24: 125752.683 ops/s
# Warmup Iteration  25: 128990.034 ops/s
# Warmup Iteration  26: 130963.532 ops/s
# Warmup Iteration  27: 127204.933 ops/s
# Warmup Iteration  28: 126084.833 ops/s
# Warmup Iteration  29: 128490.977 ops/s
# Warmup Iteration  30: 127765.496 ops/s
Iteration   1: 126490.116 ops/s
Iteration   2: 132433.144 ops/s
Iteration   3: 123355.522 ops/s
Iteration   4: 132691.149 ops/s
Iteration   5: 124318.801 ops/s
Iteration   6: 133226.474 ops/s
Iteration   7: 127585.594 ops/s
Iteration   8: 128514.947 ops/s
Iteration   9: 128621.718 ops/s
Iteration  10: 126532.674 ops/s
Iteration  11: 130424.575 ops/s
Iteration  12: 128359.436 ops/s
Iteration  13: 131829.804 ops/s
Iteration  14: 129049.267 ops/s
Iteration  15: 126682.456 ops/s
Iteration  16: 130482.440 ops/s
Iteration  17: 130546.934 ops/s
Iteration  18: 125565.927 ops/s
Iteration  19: 134171.569 ops/s
Iteration  20: 127516.874 ops/s
Iteration  21: 124960.315 ops/s
Iteration  22: 134838.023 ops/s
Iteration  23: 122015.830 ops/s
Iteration  24: 130943.995 ops/s
Iteration  25: 123910.782 ops/s
Iteration  26: 130223.577 ops/s
Iteration  27: 130061.716 ops/s
Iteration  28: 125931.317 ops/s
Iteration  29: 130661.859 ops/s
Iteration  30: 128764.006 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_988._Benchmark.benchmark_Cluster_988":
  128690.361 ±(99.9%) 2197.763 ops/s [Average]
  (min, avg, max) = (122015.830, 128690.361, 134838.023), stdev = 3289.508
  CI (99.9%): [126492.598, 130888.124] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_988._Benchmark.benchmark_Cluster_988  thrpt   30  128690.361 ± 2197.763  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_989._Benchmark.benchmark_Cluster_989$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_989._Benchmark.benchmark_Cluster_989

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 960.970 ops/s
# Warmup Iteration   2: 6869.584 ops/s
# Warmup Iteration   3: 19172.441 ops/s
# Warmup Iteration   4: 21986.927 ops/s
# Warmup Iteration   5: 25694.222 ops/s
# Warmup Iteration   6: 26130.050 ops/s
# Warmup Iteration   7: 56163.133 ops/s
# Warmup Iteration   8: 67671.821 ops/s
# Warmup Iteration   9: 77477.781 ops/s
# Warmup Iteration  10: 79490.334 ops/s
# Warmup Iteration  11: 83820.094 ops/s
# Warmup Iteration  12: 85373.298 ops/s
# Warmup Iteration  13: 81687.355 ops/s
# Warmup Iteration  14: 84668.859 ops/s
# Warmup Iteration  15: 81579.497 ops/s
# Warmup Iteration  16: 81574.628 ops/s
# Warmup Iteration  17: 87861.324 ops/s
# Warmup Iteration  18: 79524.800 ops/s
# Warmup Iteration  19: 86259.963 ops/s
# Warmup Iteration  20: 84048.501 ops/s
# Warmup Iteration  21: 83450.218 ops/s
# Warmup Iteration  22: 84697.044 ops/s
# Warmup Iteration  23: 88879.092 ops/s
# Warmup Iteration  24: 82572.977 ops/s
# Warmup Iteration  25: 86298.131 ops/s
# Warmup Iteration  26: 85205.157 ops/s
# Warmup Iteration  27: 69171.211 ops/s
# Warmup Iteration  28: 86053.185 ops/s
# Warmup Iteration  29: 87120.699 ops/s
# Warmup Iteration  30: 81763.988 ops/s
Iteration   1: 87729.915 ops/s
Iteration   2: 84380.664 ops/s
Iteration   3: 88009.919 ops/s
Iteration   4: 87785.877 ops/s
Iteration   5: 85811.611 ops/s
Iteration   6: 83270.487 ops/s
Iteration   7: 86244.215 ops/s
Iteration   8: 88562.562 ops/s
Iteration   9: 83174.639 ops/s
Iteration  10: 86997.725 ops/s
Iteration  11: 82867.576 ops/s
Iteration  12: 86412.423 ops/s
Iteration  13: 81638.968 ops/s
Iteration  14: 79549.165 ops/s
Iteration  15: 88999.315 ops/s
Iteration  16: 88191.375 ops/s
Iteration  17: 83964.025 ops/s
Iteration  18: 86647.109 ops/s
Iteration  19: 85696.098 ops/s
Iteration  20: 82838.907 ops/s
Iteration  21: 85569.767 ops/s
Iteration  22: 86710.661 ops/s
Iteration  23: 84607.991 ops/s
Iteration  24: 84406.236 ops/s
Iteration  25: 89417.264 ops/s
Iteration  26: 84905.129 ops/s
Iteration  27: 86411.120 ops/s
Iteration  28: 86486.109 ops/s
Iteration  29: 88180.908 ops/s
Iteration  30: 85512.530 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_989._Benchmark.benchmark_Cluster_989":
  85699.343 ±(99.9%) 1548.220 ops/s [Average]
  (min, avg, max) = (79549.165, 85699.343, 89417.264), stdev = 2317.303
  CI (99.9%): [84151.123, 87247.563] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_989._Benchmark.benchmark_Cluster_989  thrpt   30  85699.343 ± 1548.220  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_99._Benchmark.benchmark_Cluster_99$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_99._Benchmark.benchmark_Cluster_99

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1803.713 ops/s
# Warmup Iteration   2: 13428.459 ops/s
# Warmup Iteration   3: 26222.638 ops/s
# Warmup Iteration   4: 26399.861 ops/s
# Warmup Iteration   5: 27682.377 ops/s
# Warmup Iteration   6: 38593.575 ops/s
# Warmup Iteration   7: 30688.458 ops/s
# Warmup Iteration   8: 41454.829 ops/s
# Warmup Iteration   9: 43383.121 ops/s
# Warmup Iteration  10: 101348.082 ops/s
# Warmup Iteration  11: 95110.865 ops/s
# Warmup Iteration  12: 102611.431 ops/s
# Warmup Iteration  13: 96744.976 ops/s
# Warmup Iteration  14: 97522.406 ops/s
# Warmup Iteration  15: 96336.190 ops/s
# Warmup Iteration  16: 93590.989 ops/s
# Warmup Iteration  17: 95936.070 ops/s
# Warmup Iteration  18: 99646.406 ops/s
# Warmup Iteration  19: 104436.968 ops/s
# Warmup Iteration  20: 97425.285 ops/s
# Warmup Iteration  21: 102931.496 ops/s
# Warmup Iteration  22: 101754.899 ops/s
# Warmup Iteration  23: 98195.524 ops/s
# Warmup Iteration  24: 101035.902 ops/s
# Warmup Iteration  25: 102445.798 ops/s
# Warmup Iteration  26: 101041.488 ops/s
# Warmup Iteration  27: 103004.064 ops/s
# Warmup Iteration  28: 101668.065 ops/s
# Warmup Iteration  29: 100561.788 ops/s
# Warmup Iteration  30: 103746.597 ops/s
Iteration   1: 101449.530 ops/s
Iteration   2: 103148.678 ops/s
Iteration   3: 99966.147 ops/s
Iteration   4: 103669.071 ops/s
Iteration   5: 101006.767 ops/s
Iteration   6: 98153.659 ops/s
Iteration   7: 104200.737 ops/s
Iteration   8: 99084.899 ops/s
Iteration   9: 103582.403 ops/s
Iteration  10: 99628.154 ops/s
Iteration  11: 100433.846 ops/s
Iteration  12: 99401.041 ops/s
Iteration  13: 99489.635 ops/s
Iteration  14: 102478.811 ops/s
Iteration  15: 102267.888 ops/s
Iteration  16: 97556.419 ops/s
Iteration  17: 104585.001 ops/s
Iteration  18: 99385.069 ops/s
Iteration  19: 104428.593 ops/s
Iteration  20: 96471.847 ops/s
Iteration  21: 105962.285 ops/s
Iteration  22: 104575.473 ops/s
Iteration  23: 98642.241 ops/s
Iteration  24: 105960.369 ops/s
Iteration  25: 99348.634 ops/s
Iteration  26: 101731.252 ops/s
Iteration  27: 102472.309 ops/s
Iteration  28: 100229.319 ops/s
Iteration  29: 106013.500 ops/s
Iteration  30: 98325.096 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_99._Benchmark.benchmark_Cluster_99":
  101454.956 ±(99.9%) 1805.499 ops/s [Average]
  (min, avg, max) = (96471.847, 101454.956, 106013.500), stdev = 2702.387
  CI (99.9%): [99649.457, 103260.455] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_99._Benchmark.benchmark_Cluster_99  thrpt   30  101454.956 ± 1805.499  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_990._Benchmark.benchmark_Cluster_990$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_990._Benchmark.benchmark_Cluster_990

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1837.135 ops/s
# Warmup Iteration   2: 15559.231 ops/s
# Warmup Iteration   3: 31803.528 ops/s
# Warmup Iteration   4: 35574.953 ops/s
# Warmup Iteration   5: 40558.348 ops/s
# Warmup Iteration   6: 38520.305 ops/s
# Warmup Iteration   7: 55404.219 ops/s
# Warmup Iteration   8: 84867.957 ops/s
# Warmup Iteration   9: 105582.602 ops/s
# Warmup Iteration  10: 112808.155 ops/s
# Warmup Iteration  11: 107101.918 ops/s
# Warmup Iteration  12: 106790.830 ops/s
# Warmup Iteration  13: 106074.388 ops/s
# Warmup Iteration  14: 108739.610 ops/s
# Warmup Iteration  15: 111184.882 ops/s
# Warmup Iteration  16: 103977.974 ops/s
# Warmup Iteration  17: 113743.111 ops/s
# Warmup Iteration  18: 116194.897 ops/s
# Warmup Iteration  19: 108529.282 ops/s
# Warmup Iteration  20: 114693.844 ops/s
# Warmup Iteration  21: 90585.528 ops/s
# Warmup Iteration  22: 109740.543 ops/s
# Warmup Iteration  23: 114110.937 ops/s
# Warmup Iteration  24: 108218.055 ops/s
# Warmup Iteration  25: 110904.062 ops/s
# Warmup Iteration  26: 115529.233 ops/s
# Warmup Iteration  27: 108643.246 ops/s
# Warmup Iteration  28: 115188.601 ops/s
# Warmup Iteration  29: 110731.296 ops/s
# Warmup Iteration  30: 111136.539 ops/s
Iteration   1: 112989.372 ops/s
Iteration   2: 110074.073 ops/s
Iteration   3: 111092.503 ops/s
Iteration   4: 116697.369 ops/s
Iteration   5: 107023.415 ops/s
Iteration   6: 115814.086 ops/s
Iteration   7: 110046.492 ops/s
Iteration   8: 109782.522 ops/s
Iteration   9: 113967.380 ops/s
Iteration  10: 107127.980 ops/s
Iteration  11: 115578.075 ops/s
Iteration  12: 110962.859 ops/s
Iteration  13: 107490.827 ops/s
Iteration  14: 109793.610 ops/s
Iteration  15: 115989.655 ops/s
Iteration  16: 110372.298 ops/s
Iteration  17: 110762.726 ops/s
Iteration  18: 111021.638 ops/s
Iteration  19: 111512.864 ops/s
Iteration  20: 114063.409 ops/s
Iteration  21: 114162.765 ops/s
Iteration  22: 109320.088 ops/s
Iteration  23: 112117.667 ops/s
Iteration  24: 110203.962 ops/s
Iteration  25: 115585.421 ops/s
Iteration  26: 109367.358 ops/s
Iteration  27: 112785.497 ops/s
Iteration  28: 111651.332 ops/s
Iteration  29: 110200.712 ops/s
Iteration  30: 114540.241 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_990._Benchmark.benchmark_Cluster_990":
  111736.607 ±(99.9%) 1802.550 ops/s [Average]
  (min, avg, max) = (107023.415, 111736.607, 116697.369), stdev = 2697.972
  CI (99.9%): [109934.056, 113539.157] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_990._Benchmark.benchmark_Cluster_990  thrpt   30  111736.607 ± 1802.550  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_991._Benchmark.benchmark_Cluster_991$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_991._Benchmark.benchmark_Cluster_991

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.774 ops/s
# Warmup Iteration   2: 10794.306 ops/s
# Warmup Iteration   3: 37402.795 ops/s
# Warmup Iteration   4: 28352.309 ops/s
# Warmup Iteration   5: 54367.309 ops/s
# Warmup Iteration   6: 47564.231 ops/s
# Warmup Iteration   7: 66487.848 ops/s
# Warmup Iteration   8: 142285.533 ops/s
# Warmup Iteration   9: 150575.093 ops/s
# Warmup Iteration  10: 155972.245 ops/s
# Warmup Iteration  11: 145954.673 ops/s
# Warmup Iteration  12: 152061.296 ops/s
# Warmup Iteration  13: 159767.759 ops/s
# Warmup Iteration  14: 148228.472 ops/s
# Warmup Iteration  15: 158283.902 ops/s
# Warmup Iteration  16: 148153.053 ops/s
# Warmup Iteration  17: 153784.753 ops/s
# Warmup Iteration  18: 156942.226 ops/s
# Warmup Iteration  19: 151865.497 ops/s
# Warmup Iteration  20: 155699.081 ops/s
# Warmup Iteration  21: 154587.953 ops/s
# Warmup Iteration  22: 152999.718 ops/s
# Warmup Iteration  23: 158664.616 ops/s
# Warmup Iteration  24: 149219.771 ops/s
# Warmup Iteration  25: 158303.927 ops/s
# Warmup Iteration  26: 147656.941 ops/s
# Warmup Iteration  27: 153304.972 ops/s
# Warmup Iteration  28: 155722.393 ops/s
# Warmup Iteration  29: 152436.035 ops/s
# Warmup Iteration  30: 159382.080 ops/s
Iteration   1: 151060.164 ops/s
Iteration   2: 152685.801 ops/s
Iteration   3: 156200.831 ops/s
Iteration   4: 150485.886 ops/s
Iteration   5: 151578.765 ops/s
Iteration   6: 157298.289 ops/s
Iteration   7: 148932.676 ops/s
Iteration   8: 156188.136 ops/s
Iteration   9: 148610.344 ops/s
Iteration  10: 159501.802 ops/s
Iteration  11: 149847.426 ops/s
Iteration  12: 153475.544 ops/s
Iteration  13: 152888.298 ops/s
Iteration  14: 150149.060 ops/s
Iteration  15: 142502.382 ops/s
Iteration  16: 153515.424 ops/s
Iteration  17: 150543.832 ops/s
Iteration  18: 153145.093 ops/s
Iteration  19: 149096.958 ops/s
Iteration  20: 160278.669 ops/s
Iteration  21: 150185.208 ops/s
Iteration  22: 150600.401 ops/s
Iteration  23: 157479.689 ops/s
Iteration  24: 151209.681 ops/s
Iteration  25: 154167.077 ops/s
Iteration  26: 156439.317 ops/s
Iteration  27: 151217.884 ops/s
Iteration  28: 158365.119 ops/s
Iteration  29: 145289.466 ops/s
Iteration  30: 150265.624 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_991._Benchmark.benchmark_Cluster_991":
  152440.162 ±(99.9%) 2694.941 ops/s [Average]
  (min, avg, max) = (142502.382, 152440.162, 160278.669), stdev = 4033.661
  CI (99.9%): [149745.221, 155135.102] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_991._Benchmark.benchmark_Cluster_991  thrpt   30  152440.162 ± 2694.941  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_992._Benchmark.benchmark_Cluster_992$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_992._Benchmark.benchmark_Cluster_992

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.694 ops/s
# Warmup Iteration   2: 1839.758 ops/s
# Warmup Iteration   3: 7938.504 ops/s
# Warmup Iteration   4: 21049.512 ops/s
# Warmup Iteration   5: 19376.212 ops/s
# Warmup Iteration   6: 26936.349 ops/s
# Warmup Iteration   7: 32177.569 ops/s
# Warmup Iteration   8: 33050.212 ops/s
# Warmup Iteration   9: 40545.129 ops/s
# Warmup Iteration  10: 40591.073 ops/s
# Warmup Iteration  11: 56392.659 ops/s
# Warmup Iteration  12: 84149.036 ops/s
# Warmup Iteration  13: 84198.381 ops/s
# Warmup Iteration  14: 70457.426 ops/s
# Warmup Iteration  15: 85154.477 ops/s
# Warmup Iteration  16: 85286.192 ops/s
# Warmup Iteration  17: 87829.025 ops/s
# Warmup Iteration  18: 93865.860 ops/s
# Warmup Iteration  19: 87993.193 ops/s
# Warmup Iteration  20: 94581.433 ops/s
# Warmup Iteration  21: 91787.250 ops/s
# Warmup Iteration  22: 92130.602 ops/s
# Warmup Iteration  23: 87642.634 ops/s
# Warmup Iteration  24: 88655.089 ops/s
# Warmup Iteration  25: 92892.345 ops/s
# Warmup Iteration  26: 87990.707 ops/s
# Warmup Iteration  27: 92691.875 ops/s
# Warmup Iteration  28: 86803.769 ops/s
# Warmup Iteration  29: 90073.457 ops/s
# Warmup Iteration  30: 87441.481 ops/s
Iteration   1: 92311.634 ops/s
Iteration   2: 94404.749 ops/s
Iteration   3: 88581.836 ops/s
Iteration   4: 90313.271 ops/s
Iteration   5: 94912.097 ops/s
Iteration   6: 88132.512 ops/s
Iteration   7: 91240.015 ops/s
Iteration   8: 93615.012 ops/s
Iteration   9: 89543.548 ops/s
Iteration  10: 91650.196 ops/s
Iteration  11: 89489.662 ops/s
Iteration  12: 90539.219 ops/s
Iteration  13: 91746.267 ops/s
Iteration  14: 89818.068 ops/s
Iteration  15: 93282.483 ops/s
Iteration  16: 90440.055 ops/s
Iteration  17: 90623.529 ops/s
Iteration  18: 90135.131 ops/s
Iteration  19: 91481.162 ops/s
Iteration  20: 92661.999 ops/s
Iteration  21: 88661.420 ops/s
Iteration  22: 91693.628 ops/s
Iteration  23: 93015.848 ops/s
Iteration  24: 89926.330 ops/s
Iteration  25: 92159.814 ops/s
Iteration  26: 88253.047 ops/s
Iteration  27: 92550.291 ops/s
Iteration  28: 95078.881 ops/s
Iteration  29: 88037.337 ops/s
Iteration  30: 89317.874 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_992._Benchmark.benchmark_Cluster_992":
  91120.564 ±(99.9%) 1340.376 ops/s [Average]
  (min, avg, max) = (88037.337, 91120.564, 95078.881), stdev = 2006.212
  CI (99.9%): [89780.188, 92460.940] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_992._Benchmark.benchmark_Cluster_992  thrpt   30  91120.564 ± 1340.376  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_993._Benchmark.benchmark_Cluster_993$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_993._Benchmark.benchmark_Cluster_993

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 0.741 ops/s
# Warmup Iteration   2: 2578.450 ops/s
# Warmup Iteration   3: 19177.261 ops/s
# Warmup Iteration   4: 32896.988 ops/s
# Warmup Iteration   5: 44505.418 ops/s
# Warmup Iteration   6: 35545.091 ops/s
# Warmup Iteration   7: 47752.507 ops/s
# Warmup Iteration   8: 42681.508 ops/s
# Warmup Iteration   9: 51891.962 ops/s
# Warmup Iteration  10: 100267.798 ops/s
# Warmup Iteration  11: 139632.461 ops/s
# Warmup Iteration  12: 137130.186 ops/s
# Warmup Iteration  13: 143589.244 ops/s
# Warmup Iteration  14: 121447.373 ops/s
# Warmup Iteration  15: 145657.742 ops/s
# Warmup Iteration  16: 138375.622 ops/s
# Warmup Iteration  17: 136586.060 ops/s
# Warmup Iteration  18: 147218.477 ops/s
# Warmup Iteration  19: 139391.942 ops/s
# Warmup Iteration  20: 145510.826 ops/s
# Warmup Iteration  21: 140611.042 ops/s
# Warmup Iteration  22: 140384.915 ops/s
# Warmup Iteration  23: 145483.103 ops/s
# Warmup Iteration  24: 137499.778 ops/s
# Warmup Iteration  25: 144022.536 ops/s
# Warmup Iteration  26: 139678.733 ops/s
# Warmup Iteration  27: 142937.010 ops/s
# Warmup Iteration  28: 147838.753 ops/s
# Warmup Iteration  29: 145423.536 ops/s
# Warmup Iteration  30: 140955.606 ops/s
Iteration   1: 145290.614 ops/s
Iteration   2: 140081.309 ops/s
Iteration   3: 140779.338 ops/s
Iteration   4: 143284.316 ops/s
Iteration   5: 140558.243 ops/s
Iteration   6: 142363.962 ops/s
Iteration   7: 138459.540 ops/s
Iteration   8: 137556.237 ops/s
Iteration   9: 146225.613 ops/s
Iteration  10: 139724.517 ops/s
Iteration  11: 143793.788 ops/s
Iteration  12: 142443.939 ops/s
Iteration  13: 142482.236 ops/s
Iteration  14: 144617.219 ops/s
Iteration  15: 143558.866 ops/s
Iteration  16: 139186.556 ops/s
Iteration  17: 144021.635 ops/s
Iteration  18: 137917.841 ops/s
Iteration  19: 146885.820 ops/s
Iteration  20: 139867.598 ops/s
Iteration  21: 141109.130 ops/s
Iteration  22: 142381.356 ops/s
Iteration  23: 141679.439 ops/s
Iteration  24: 147268.036 ops/s
Iteration  25: 137855.633 ops/s
Iteration  26: 138807.753 ops/s
Iteration  27: 147234.462 ops/s
Iteration  28: 136631.882 ops/s
Iteration  29: 146802.802 ops/s
Iteration  30: 135533.748 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_993._Benchmark.benchmark_Cluster_993":
  141813.448 ±(99.9%) 2224.198 ops/s [Average]
  (min, avg, max) = (135533.748, 141813.448, 147268.036), stdev = 3329.075
  CI (99.9%): [139589.249, 144037.646] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_993._Benchmark.benchmark_Cluster_993  thrpt   30  141813.448 ± 2224.198  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_994._Benchmark.benchmark_Cluster_994$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_994._Benchmark.benchmark_Cluster_994

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1441.195 ops/s
# Warmup Iteration   2: 16268.237 ops/s
# Warmup Iteration   3: 29172.386 ops/s
# Warmup Iteration   4: 27384.013 ops/s
# Warmup Iteration   5: 23652.782 ops/s
# Warmup Iteration   6: 50569.206 ops/s
# Warmup Iteration   7: 46409.968 ops/s
# Warmup Iteration   8: 102106.304 ops/s
# Warmup Iteration   9: 98612.770 ops/s
# Warmup Iteration  10: 119474.663 ops/s
# Warmup Iteration  11: 110138.122 ops/s
# Warmup Iteration  12: 108199.029 ops/s
# Warmup Iteration  13: 114389.012 ops/s
# Warmup Iteration  14: 119199.934 ops/s
# Warmup Iteration  15: 113617.376 ops/s
# Warmup Iteration  16: 117215.014 ops/s
# Warmup Iteration  17: 119388.097 ops/s
# Warmup Iteration  18: 116036.160 ops/s
# Warmup Iteration  19: 121411.566 ops/s
# Warmup Iteration  20: 118516.214 ops/s
# Warmup Iteration  21: 118319.035 ops/s
# Warmup Iteration  22: 119878.847 ops/s
# Warmup Iteration  23: 119369.681 ops/s
# Warmup Iteration  24: 118186.516 ops/s
# Warmup Iteration  25: 120796.474 ops/s
# Warmup Iteration  26: 117896.320 ops/s
# Warmup Iteration  27: 118763.944 ops/s
# Warmup Iteration  28: 120086.231 ops/s
# Warmup Iteration  29: 117149.887 ops/s
# Warmup Iteration  30: 122029.449 ops/s
Iteration   1: 116257.571 ops/s
Iteration   2: 118917.631 ops/s
Iteration   3: 116453.687 ops/s
Iteration   4: 122568.616 ops/s
Iteration   5: 115190.167 ops/s
Iteration   6: 118416.558 ops/s
Iteration   7: 117784.239 ops/s
Iteration   8: 116767.884 ops/s
Iteration   9: 121632.904 ops/s
Iteration  10: 112052.595 ops/s
Iteration  11: 121442.395 ops/s
Iteration  12: 117124.806 ops/s
Iteration  13: 118587.139 ops/s
Iteration  14: 118913.063 ops/s
Iteration  15: 119313.258 ops/s
Iteration  16: 122717.217 ops/s
Iteration  17: 114644.936 ops/s
Iteration  18: 119768.215 ops/s
Iteration  19: 118792.445 ops/s
Iteration  20: 117096.987 ops/s
Iteration  21: 121536.576 ops/s
Iteration  22: 119933.930 ops/s
Iteration  23: 116962.072 ops/s
Iteration  24: 119148.871 ops/s
Iteration  25: 122386.120 ops/s
Iteration  26: 118096.558 ops/s
Iteration  27: 119392.403 ops/s
Iteration  28: 121452.799 ops/s
Iteration  29: 117415.496 ops/s
Iteration  30: 115458.217 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_994._Benchmark.benchmark_Cluster_994":
  118540.845 ±(99.9%) 1704.361 ops/s [Average]
  (min, avg, max) = (112052.595, 118540.845, 122717.217), stdev = 2551.008
  CI (99.9%): [116836.484, 120245.207] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_994._Benchmark.benchmark_Cluster_994  thrpt   30  118540.845 ± 1704.361  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_995._Benchmark.benchmark_Cluster_995$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_995._Benchmark.benchmark_Cluster_995

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1794.758 ops/s
# Warmup Iteration   2: 25235.502 ops/s
# Warmup Iteration   3: 27718.149 ops/s
# Warmup Iteration   4: 28319.975 ops/s
# Warmup Iteration   5: 30146.975 ops/s
# Warmup Iteration   6: 66246.898 ops/s
# Warmup Iteration   7: 79345.269 ops/s
# Warmup Iteration   8: 89691.996 ops/s
# Warmup Iteration   9: 89573.382 ops/s
# Warmup Iteration  10: 91968.393 ops/s
# Warmup Iteration  11: 88126.520 ops/s
# Warmup Iteration  12: 91492.049 ops/s
# Warmup Iteration  13: 87790.415 ops/s
# Warmup Iteration  14: 92138.734 ops/s
# Warmup Iteration  15: 92293.800 ops/s
# Warmup Iteration  16: 86666.162 ops/s
# Warmup Iteration  17: 95096.067 ops/s
# Warmup Iteration  18: 94101.355 ops/s
# Warmup Iteration  19: 92931.602 ops/s
# Warmup Iteration  20: 93830.032 ops/s
# Warmup Iteration  21: 88482.781 ops/s
# Warmup Iteration  22: 94374.115 ops/s
# Warmup Iteration  23: 90903.715 ops/s
# Warmup Iteration  24: 93100.086 ops/s
# Warmup Iteration  25: 92016.047 ops/s
# Warmup Iteration  26: 91063.703 ops/s
# Warmup Iteration  27: 93507.994 ops/s
# Warmup Iteration  28: 90756.303 ops/s
# Warmup Iteration  29: 91834.641 ops/s
# Warmup Iteration  30: 95436.581 ops/s
Iteration   1: 90567.638 ops/s
Iteration   2: 95180.776 ops/s
Iteration   3: 93935.518 ops/s
Iteration   4: 92651.152 ops/s
Iteration   5: 93418.292 ops/s
Iteration   6: 94086.024 ops/s
Iteration   7: 91129.503 ops/s
Iteration   8: 92609.458 ops/s
Iteration   9: 93528.865 ops/s
Iteration  10: 94987.193 ops/s
Iteration  11: 90333.358 ops/s
Iteration  12: 91199.989 ops/s
Iteration  13: 90670.987 ops/s
Iteration  14: 91821.202 ops/s
Iteration  15: 89770.316 ops/s
Iteration  16: 89716.823 ops/s
Iteration  17: 92771.934 ops/s
Iteration  18: 87608.666 ops/s
Iteration  19: 92226.790 ops/s
Iteration  20: 89089.330 ops/s
Iteration  21: 91993.135 ops/s
Iteration  22: 93821.922 ops/s
Iteration  23: 91112.230 ops/s
Iteration  24: 92429.313 ops/s
Iteration  25: 95382.579 ops/s
Iteration  26: 88880.524 ops/s
Iteration  27: 94059.864 ops/s
Iteration  28: 90224.570 ops/s
Iteration  29: 92963.509 ops/s
Iteration  30: 91471.839 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_995._Benchmark.benchmark_Cluster_995":
  91988.110 ±(99.9%) 1318.593 ops/s [Average]
  (min, avg, max) = (87608.666, 91988.110, 95382.579), stdev = 1973.609
  CI (99.9%): [90669.516, 93306.703] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_995._Benchmark.benchmark_Cluster_995  thrpt   30  91988.110 ± 1318.593  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_996._Benchmark.benchmark_Cluster_996$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_996._Benchmark.benchmark_Cluster_996

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4075.558 ops/s
# Warmup Iteration   2: 22308.453 ops/s
# Warmup Iteration   3: 30780.659 ops/s
# Warmup Iteration   4: 40388.423 ops/s
# Warmup Iteration   5: 89764.939 ops/s
# Warmup Iteration   6: 99169.734 ops/s
# Warmup Iteration   7: 110044.080 ops/s
# Warmup Iteration   8: 111681.084 ops/s
# Warmup Iteration   9: 112553.956 ops/s
# Warmup Iteration  10: 113656.391 ops/s
# Warmup Iteration  11: 110033.783 ops/s
# Warmup Iteration  12: 109855.604 ops/s
# Warmup Iteration  13: 116946.519 ops/s
# Warmup Iteration  14: 108880.205 ops/s
# Warmup Iteration  15: 114735.655 ops/s
# Warmup Iteration  16: 109265.602 ops/s
# Warmup Iteration  17: 113500.741 ops/s
# Warmup Iteration  18: 110799.208 ops/s
# Warmup Iteration  19: 112809.811 ops/s
# Warmup Iteration  20: 110566.895 ops/s
# Warmup Iteration  21: 111001.382 ops/s
# Warmup Iteration  22: 113705.754 ops/s
# Warmup Iteration  23: 111408.989 ops/s
# Warmup Iteration  24: 111158.280 ops/s
# Warmup Iteration  25: 114997.799 ops/s
# Warmup Iteration  26: 110821.947 ops/s
# Warmup Iteration  27: 114179.516 ops/s
# Warmup Iteration  28: 116510.905 ops/s
# Warmup Iteration  29: 107311.082 ops/s
# Warmup Iteration  30: 111129.005 ops/s
Iteration   1: 108735.538 ops/s
Iteration   2: 113424.002 ops/s
Iteration   3: 108090.629 ops/s
Iteration   4: 110239.038 ops/s
Iteration   5: 111062.354 ops/s
Iteration   6: 110977.505 ops/s
Iteration   7: 115897.144 ops/s
Iteration   8: 108824.197 ops/s
Iteration   9: 111549.578 ops/s
Iteration  10: 117993.307 ops/s
Iteration  11: 107630.967 ops/s
Iteration  12: 115377.793 ops/s
Iteration  13: 107969.289 ops/s
Iteration  14: 111279.685 ops/s
Iteration  15: 115292.772 ops/s
Iteration  16: 109111.003 ops/s
Iteration  17: 116253.746 ops/s
Iteration  18: 115645.932 ops/s
Iteration  19: 108524.450 ops/s
Iteration  20: 114098.849 ops/s
Iteration  21: 108184.728 ops/s
Iteration  22: 110697.896 ops/s
Iteration  23: 114851.042 ops/s
Iteration  24: 110112.683 ops/s
Iteration  25: 115226.999 ops/s
Iteration  26: 115608.056 ops/s
Iteration  27: 108278.996 ops/s
Iteration  28: 116307.563 ops/s
Iteration  29: 109783.298 ops/s
Iteration  30: 109564.655 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_996._Benchmark.benchmark_Cluster_996":
  111886.457 ±(99.9%) 2159.402 ops/s [Average]
  (min, avg, max) = (107630.967, 111886.457, 117993.307), stdev = 3232.091
  CI (99.9%): [109727.055, 114045.858] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_996._Benchmark.benchmark_Cluster_996  thrpt   30  111886.457 ± 2159.402  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_997._Benchmark.benchmark_Cluster_997$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_997._Benchmark.benchmark_Cluster_997

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 1307.184 ops/s
# Warmup Iteration   2: 6824.994 ops/s
# Warmup Iteration   3: 9740.564 ops/s
# Warmup Iteration   4: 15290.150 ops/s
# Warmup Iteration   5: 18697.398 ops/s
# Warmup Iteration   6: 20608.896 ops/s
# Warmup Iteration   7: 21899.766 ops/s
# Warmup Iteration   8: 36401.602 ops/s
# Warmup Iteration   9: 32375.046 ops/s
# Warmup Iteration  10: 38989.674 ops/s
# Warmup Iteration  11: 38438.664 ops/s
# Warmup Iteration  12: 39665.019 ops/s
# Warmup Iteration  13: 39021.033 ops/s
# Warmup Iteration  14: 40904.176 ops/s
# Warmup Iteration  15: 38435.576 ops/s
# Warmup Iteration  16: 40703.156 ops/s
# Warmup Iteration  17: 39152.281 ops/s
# Warmup Iteration  18: 39526.990 ops/s
# Warmup Iteration  19: 37562.407 ops/s
# Warmup Iteration  20: 37550.316 ops/s
# Warmup Iteration  21: 38320.170 ops/s
# Warmup Iteration  22: 38064.137 ops/s
# Warmup Iteration  23: 39177.041 ops/s
# Warmup Iteration  24: 41076.030 ops/s
# Warmup Iteration  25: 38238.447 ops/s
# Warmup Iteration  26: 39101.764 ops/s
# Warmup Iteration  27: 38334.050 ops/s
# Warmup Iteration  28: 39519.080 ops/s
# Warmup Iteration  29: 43026.082 ops/s
# Warmup Iteration  30: 38881.723 ops/s
Iteration   1: 40192.641 ops/s
Iteration   2: 38818.257 ops/s
Iteration   3: 41534.058 ops/s
Iteration   4: 37327.399 ops/s
Iteration   5: 38056.963 ops/s
Iteration   6: 36091.247 ops/s
Iteration   7: 37104.997 ops/s
Iteration   8: 39624.380 ops/s
Iteration   9: 37148.659 ops/s
Iteration  10: 40620.851 ops/s
Iteration  11: 37520.338 ops/s
Iteration  12: 36427.375 ops/s
Iteration  13: 38015.340 ops/s
Iteration  14: 37013.632 ops/s
Iteration  15: 38956.361 ops/s
Iteration  16: 39065.510 ops/s
Iteration  17: 36917.768 ops/s
Iteration  18: 36227.434 ops/s
Iteration  19: 39479.733 ops/s
Iteration  20: 41692.941 ops/s
Iteration  21: 40117.581 ops/s
Iteration  22: 38876.875 ops/s
Iteration  23: 36828.399 ops/s
Iteration  24: 40304.412 ops/s
Iteration  25: 37078.658 ops/s
Iteration  26: 41731.274 ops/s
Iteration  27: 38570.950 ops/s
Iteration  28: 40520.940 ops/s
Iteration  29: 29951.213 ops/s
Iteration  30: 38023.240 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_997._Benchmark.benchmark_Cluster_997":
  38327.981 ±(99.9%) 1539.166 ops/s [Average]
  (min, avg, max) = (29951.213, 38327.981, 41731.274), stdev = 2303.751
  CI (99.9%): [36788.815, 39867.147] (assumes normal distribution)


# Run complete. Total time: 00:01:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_997._Benchmark.benchmark_Cluster_997  thrpt   30  38327.981 ± 1539.166  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_998._Benchmark.benchmark_Cluster_998$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_998._Benchmark.benchmark_Cluster_998

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 2436.904 ops/s
# Warmup Iteration   2: 24683.475 ops/s
# Warmup Iteration   3: 34292.373 ops/s
# Warmup Iteration   4: 43782.288 ops/s
# Warmup Iteration   5: 52769.771 ops/s
# Warmup Iteration   6: 94293.786 ops/s
# Warmup Iteration   7: 96441.823 ops/s
# Warmup Iteration   8: 104277.427 ops/s
# Warmup Iteration   9: 111912.978 ops/s
# Warmup Iteration  10: 104164.944 ops/s
# Warmup Iteration  11: 105931.390 ops/s
# Warmup Iteration  12: 111833.681 ops/s
# Warmup Iteration  13: 106259.928 ops/s
# Warmup Iteration  14: 108452.079 ops/s
# Warmup Iteration  15: 111600.109 ops/s
# Warmup Iteration  16: 98999.142 ops/s
# Warmup Iteration  17: 115518.472 ops/s
# Warmup Iteration  18: 109695.602 ops/s
# Warmup Iteration  19: 107389.517 ops/s
# Warmup Iteration  20: 109777.663 ops/s
# Warmup Iteration  21: 114325.107 ops/s
# Warmup Iteration  22: 107104.320 ops/s
# Warmup Iteration  23: 110232.091 ops/s
# Warmup Iteration  24: 105296.090 ops/s
# Warmup Iteration  25: 112206.064 ops/s
# Warmup Iteration  26: 109853.556 ops/s
# Warmup Iteration  27: 109037.799 ops/s
# Warmup Iteration  28: 115108.019 ops/s
# Warmup Iteration  29: 106777.290 ops/s
# Warmup Iteration  30: 111159.696 ops/s
Iteration   1: 108760.255 ops/s
Iteration   2: 112774.086 ops/s
Iteration   3: 108172.803 ops/s
Iteration   4: 111538.266 ops/s
Iteration   5: 110374.988 ops/s
Iteration   6: 109082.932 ops/s
Iteration   7: 112031.302 ops/s
Iteration   8: 110662.844 ops/s
Iteration   9: 112467.682 ops/s
Iteration  10: 108280.665 ops/s
Iteration  11: 114423.231 ops/s
Iteration  12: 113693.789 ops/s
Iteration  13: 108190.713 ops/s
Iteration  14: 112254.719 ops/s
Iteration  15: 112425.493 ops/s
Iteration  16: 110754.423 ops/s
Iteration  17: 111148.301 ops/s
Iteration  18: 113901.357 ops/s
Iteration  19: 109759.590 ops/s
Iteration  20: 115691.589 ops/s
Iteration  21: 112736.411 ops/s
Iteration  22: 112463.373 ops/s
Iteration  23: 115182.566 ops/s
Iteration  24: 109822.124 ops/s
Iteration  25: 119254.601 ops/s
Iteration  26: 116576.209 ops/s
Iteration  27: 112773.788 ops/s
Iteration  28: 114010.127 ops/s
Iteration  29: 112248.320 ops/s
Iteration  30: 114486.950 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_998._Benchmark.benchmark_Cluster_998":
  112198.117 ±(99.9%) 1754.077 ops/s [Average]
  (min, avg, max) = (108172.803, 112198.117, 119254.601), stdev = 2625.419
  CI (99.9%): [110444.040, 113952.193] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_998._Benchmark.benchmark_Cluster_998  thrpt   30  112198.117 ± 1754.077  ops/s
----------------------------------------
=== Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_999._Benchmark.benchmark_Cluster_999$ ===
# JMH version: 1.21
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: <none>
# Warmup: 30 iterations, 1 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: io.reactivex.rxjava3.core.clusters.Cluster_999._Benchmark.benchmark_Cluster_999

# Run progress: 0.00% complete, ETA 00:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 4512.932 ops/s
# Warmup Iteration   2: 25711.490 ops/s
# Warmup Iteration   3: 37159.990 ops/s
# Warmup Iteration   4: 62057.202 ops/s
# Warmup Iteration   5: 106409.720 ops/s
# Warmup Iteration   6: 129329.869 ops/s
# Warmup Iteration   7: 133124.935 ops/s
# Warmup Iteration   8: 129989.793 ops/s
# Warmup Iteration   9: 138397.150 ops/s
# Warmup Iteration  10: 148595.682 ops/s
# Warmup Iteration  11: 145247.043 ops/s
# Warmup Iteration  12: 142029.321 ops/s
# Warmup Iteration  13: 148621.433 ops/s
# Warmup Iteration  14: 141820.085 ops/s
# Warmup Iteration  15: 144300.590 ops/s
# Warmup Iteration  16: 140124.113 ops/s
# Warmup Iteration  17: 140916.649 ops/s
# Warmup Iteration  18: 147162.980 ops/s
# Warmup Iteration  19: 137899.108 ops/s
# Warmup Iteration  20: 145170.543 ops/s
# Warmup Iteration  21: 142149.632 ops/s
# Warmup Iteration  22: 148399.794 ops/s
# Warmup Iteration  23: 144617.419 ops/s
# Warmup Iteration  24: 140031.434 ops/s
# Warmup Iteration  25: 144969.231 ops/s
# Warmup Iteration  26: 147679.091 ops/s
# Warmup Iteration  27: 140178.827 ops/s
# Warmup Iteration  28: 146743.175 ops/s
# Warmup Iteration  29: 142675.032 ops/s
# Warmup Iteration  30: 142898.679 ops/s
Iteration   1: 147946.003 ops/s
Iteration   2: 139728.557 ops/s
Iteration   3: 147566.430 ops/s
Iteration   4: 142953.526 ops/s
Iteration   5: 143005.415 ops/s
Iteration   6: 142208.912 ops/s
Iteration   7: 141852.754 ops/s
Iteration   8: 148080.493 ops/s
Iteration   9: 143580.669 ops/s
Iteration  10: 145847.603 ops/s
Iteration  11: 142082.211 ops/s
Iteration  12: 142902.686 ops/s
Iteration  13: 147497.554 ops/s
Iteration  14: 140342.748 ops/s
Iteration  15: 142851.502 ops/s
Iteration  16: 141267.935 ops/s
Iteration  17: 141499.710 ops/s
Iteration  18: 147015.213 ops/s
Iteration  19: 143120.521 ops/s
Iteration  20: 145444.021 ops/s
Iteration  21: 141021.501 ops/s
Iteration  22: 147324.036 ops/s
Iteration  23: 119648.316 ops/s
Iteration  24: 140427.345 ops/s
Iteration  25: 145880.606 ops/s
Iteration  26: 139865.694 ops/s
Iteration  27: 147075.744 ops/s
Iteration  28: 142448.396 ops/s
Iteration  29: 137100.890 ops/s
Iteration  30: 154077.412 ops/s


Result "io.reactivex.rxjava3.core.clusters.Cluster_999._Benchmark.benchmark_Cluster_999":
  143055.480 ±(99.9%) 3752.294 ops/s [Average]
  (min, avg, max) = (119648.316, 143055.480, 154077.412), stdev = 5616.257
  CI (99.9%): [139303.186, 146807.774] (assumes normal distribution)


# Run complete. Total time: 00:01:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_999._Benchmark.benchmark_Cluster_999  thrpt   30  143055.480 ± 3752.294  ops/s
----------------------------------------
