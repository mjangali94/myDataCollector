=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_52._Benchmark.benchmark_Cluster_52$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_52._Benchmark.benchmark_Cluster_52

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 84061.745 ops/s
# Warmup Iteration   2: 121017.066 ops/s
# Warmup Iteration   3: 176024.276 ops/s
# Warmup Iteration   4: 174401.527 ops/s
# Warmup Iteration   5: 176397.293 ops/s
# Warmup Iteration   6: 176142.984 ops/s
# Warmup Iteration   7: 175975.601 ops/s
# Warmup Iteration   8: 139876.130 ops/s
# Warmup Iteration   9: 176290.988 ops/s
# Warmup Iteration  10: 175893.182 ops/s
# Warmup Iteration  11: 175315.829 ops/s
# Warmup Iteration  12: 175858.714 ops/s
# Warmup Iteration  13: 175951.159 ops/s
# Warmup Iteration  14: 175574.625 ops/s
# Warmup Iteration  15: 175699.540 ops/s
# Warmup Iteration  16: 176060.104 ops/s
# Warmup Iteration  17: 175268.535 ops/s
# Warmup Iteration  18: 175449.915 ops/s
# Warmup Iteration  19: 175463.663 ops/s
# Warmup Iteration  20: 175830.392 ops/s
# Warmup Iteration  21: 175638.462 ops/s
# Warmup Iteration  22: 175860.992 ops/s
# Warmup Iteration  23: 175477.188 ops/s
# Warmup Iteration  24: 175764.421 ops/s
# Warmup Iteration  25: 175711.728 ops/s
# Warmup Iteration  26: 175545.730 ops/s
# Warmup Iteration  27: 175744.639 ops/s
# Warmup Iteration  28: 175651.601 ops/s
# Warmup Iteration  29: 175651.177 ops/s
# Warmup Iteration  30: 175355.653 ops/s
Iteration   1: 176114.372 ops/s
Iteration   2: 175153.240 ops/s
Iteration   3: 174749.879 ops/s
Iteration   4: 174956.269 ops/s
Iteration   5: 174857.056 ops/s
Iteration   6: 174883.651 ops/s
Iteration   7: 175418.266 ops/s
Iteration   8: 175119.409 ops/s
Iteration   9: 175648.701 ops/s
Iteration  10: 175221.062 ops/s
Iteration  11: 175335.881 ops/s
Iteration  12: 175430.551 ops/s
Iteration  13: 175159.125 ops/s
Iteration  14: 175679.488 ops/s
Iteration  15: 175451.185 ops/s
Iteration  16: 175784.728 ops/s
Iteration  17: 175122.021 ops/s
Iteration  18: 175657.039 ops/s
Iteration  19: 175370.802 ops/s
Iteration  20: 175863.125 ops/s
Iteration  21: 175512.735 ops/s
Iteration  22: 175461.155 ops/s
Iteration  23: 175114.048 ops/s
Iteration  24: 175680.967 ops/s
Iteration  25: 175588.291 ops/s
Iteration  26: 175330.434 ops/s
Iteration  27: 175511.807 ops/s
Iteration  28: 175179.284 ops/s
Iteration  29: 175342.536 ops/s
Iteration  30: 175696.356 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_52._Benchmark.benchmark_Cluster_52":
  175379.782 ±(99.9%) 212.480 ops/s [Average]
  (min, avg, max) = (174749.879, 175379.782, 176114.372), stdev = 318.030
  CI (99.9%): [175167.302, 175592.262] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_52._Benchmark.benchmark_Cluster_52  thrpt   30  175379.782 ± 212.480  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_520._Benchmark.benchmark_Cluster_520$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_520._Benchmark.benchmark_Cluster_520

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 89094.717 ops/s
# Warmup Iteration   2: 97769.676 ops/s
# Warmup Iteration   3: 112592.310 ops/s
# Warmup Iteration   4: 131361.066 ops/s
# Warmup Iteration   5: 131528.636 ops/s
# Warmup Iteration   6: 130763.883 ops/s
# Warmup Iteration   7: 130174.752 ops/s
# Warmup Iteration   8: 131109.870 ops/s
# Warmup Iteration   9: 131007.236 ops/s
# Warmup Iteration  10: 130931.702 ops/s
# Warmup Iteration  11: 131055.299 ops/s
# Warmup Iteration  12: 130962.069 ops/s
# Warmup Iteration  13: 131171.136 ops/s
# Warmup Iteration  14: 118493.811 ops/s
# Warmup Iteration  15: 116284.466 ops/s
# Warmup Iteration  16: 131358.424 ops/s
# Warmup Iteration  17: 137844.547 ops/s
# Warmup Iteration  18: 137884.569 ops/s
# Warmup Iteration  19: 137862.591 ops/s
# Warmup Iteration  20: 137611.083 ops/s
# Warmup Iteration  21: 137700.402 ops/s
# Warmup Iteration  22: 137821.023 ops/s
# Warmup Iteration  23: 138030.252 ops/s
# Warmup Iteration  24: 137915.470 ops/s
# Warmup Iteration  25: 138080.514 ops/s
# Warmup Iteration  26: 137865.640 ops/s
# Warmup Iteration  27: 137934.034 ops/s
# Warmup Iteration  28: 137789.027 ops/s
# Warmup Iteration  29: 137711.901 ops/s
# Warmup Iteration  30: 137264.391 ops/s
Iteration   1: 137865.024 ops/s
Iteration   2: 137814.231 ops/s
Iteration   3: 137486.283 ops/s
Iteration   4: 138205.317 ops/s
Iteration   5: 138277.288 ops/s
Iteration   6: 138022.796 ops/s
Iteration   7: 137981.838 ops/s
Iteration   8: 138265.355 ops/s
Iteration   9: 138054.662 ops/s
Iteration  10: 138114.727 ops/s
Iteration  11: 137548.292 ops/s
Iteration  12: 137525.714 ops/s
Iteration  13: 138374.594 ops/s
Iteration  14: 138012.643 ops/s
Iteration  15: 137669.777 ops/s
Iteration  16: 137511.476 ops/s
Iteration  17: 136941.993 ops/s
Iteration  18: 138118.593 ops/s
Iteration  19: 137918.463 ops/s
Iteration  20: 137833.076 ops/s
Iteration  21: 137054.070 ops/s
Iteration  22: 137300.822 ops/s
Iteration  23: 137334.867 ops/s
Iteration  24: 137880.092 ops/s
Iteration  25: 138101.195 ops/s
Iteration  26: 137872.276 ops/s
Iteration  27: 137946.922 ops/s
Iteration  28: 138058.347 ops/s
Iteration  29: 137991.275 ops/s
Iteration  30: 138309.405 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_520._Benchmark.benchmark_Cluster_520":
  137846.380 ±(99.9%) 244.042 ops/s [Average]
  (min, avg, max) = (136941.993, 137846.380, 138374.594), stdev = 365.270
  CI (99.9%): [137602.339, 138090.422] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_520._Benchmark.benchmark_Cluster_520  thrpt   30  137846.380 ± 244.042  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_521._Benchmark.benchmark_Cluster_521$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_521._Benchmark.benchmark_Cluster_521

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86294.321 ops/s
# Warmup Iteration   2: 103393.978 ops/s
# Warmup Iteration   3: 103265.581 ops/s
# Warmup Iteration   4: 135753.265 ops/s
# Warmup Iteration   5: 136860.961 ops/s
# Warmup Iteration   6: 137201.747 ops/s
# Warmup Iteration   7: 136915.205 ops/s
# Warmup Iteration   8: 135759.926 ops/s
# Warmup Iteration   9: 136687.481 ops/s
# Warmup Iteration  10: 136618.809 ops/s
# Warmup Iteration  11: 136837.405 ops/s
# Warmup Iteration  12: 136642.189 ops/s
# Warmup Iteration  13: 137024.082 ops/s
# Warmup Iteration  14: 136682.230 ops/s
# Warmup Iteration  15: 136491.661 ops/s
# Warmup Iteration  16: 131373.518 ops/s
# Warmup Iteration  17: 115410.977 ops/s
# Warmup Iteration  18: 142941.769 ops/s
# Warmup Iteration  19: 143052.093 ops/s
# Warmup Iteration  20: 142671.839 ops/s
# Warmup Iteration  21: 143212.737 ops/s
# Warmup Iteration  22: 142966.106 ops/s
# Warmup Iteration  23: 142831.056 ops/s
# Warmup Iteration  24: 142548.474 ops/s
# Warmup Iteration  25: 143100.910 ops/s
# Warmup Iteration  26: 142645.837 ops/s
# Warmup Iteration  27: 143087.650 ops/s
# Warmup Iteration  28: 143153.805 ops/s
# Warmup Iteration  29: 143048.438 ops/s
# Warmup Iteration  30: 142614.718 ops/s
Iteration   1: 142581.267 ops/s
Iteration   2: 142625.633 ops/s
Iteration   3: 142458.726 ops/s
Iteration   4: 142223.961 ops/s
Iteration   5: 143100.375 ops/s
Iteration   6: 142252.099 ops/s
Iteration   7: 142462.887 ops/s
Iteration   8: 143046.355 ops/s
Iteration   9: 143169.483 ops/s
Iteration  10: 142544.666 ops/s
Iteration  11: 142492.853 ops/s
Iteration  12: 143187.005 ops/s
Iteration  13: 142200.919 ops/s
Iteration  14: 142760.938 ops/s
Iteration  15: 142919.985 ops/s
Iteration  16: 142919.908 ops/s
Iteration  17: 143365.449 ops/s
Iteration  18: 143038.541 ops/s
Iteration  19: 142755.409 ops/s
Iteration  20: 142668.029 ops/s
Iteration  21: 143098.022 ops/s
Iteration  22: 142897.480 ops/s
Iteration  23: 143009.055 ops/s
Iteration  24: 142798.487 ops/s
Iteration  25: 142462.967 ops/s
Iteration  26: 142510.154 ops/s
Iteration  27: 143214.698 ops/s
Iteration  28: 142709.425 ops/s
Iteration  29: 142392.211 ops/s
Iteration  30: 143191.852 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_521._Benchmark.benchmark_Cluster_521":
  142768.628 ±(99.9%) 219.581 ops/s [Average]
  (min, avg, max) = (142200.919, 142768.628, 143365.449), stdev = 328.659
  CI (99.9%): [142549.047, 142988.209] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_521._Benchmark.benchmark_Cluster_521  thrpt   30  142768.628 ± 219.581  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_522._Benchmark.benchmark_Cluster_522$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_522._Benchmark.benchmark_Cluster_522

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48772.956 ops/s
# Warmup Iteration   2: 86106.204 ops/s
# Warmup Iteration   3: 128462.834 ops/s
# Warmup Iteration   4: 127332.433 ops/s
# Warmup Iteration   5: 128682.193 ops/s
# Warmup Iteration   6: 128065.908 ops/s
# Warmup Iteration   7: 100363.023 ops/s
# Warmup Iteration   8: 128556.698 ops/s
# Warmup Iteration   9: 128786.561 ops/s
# Warmup Iteration  10: 129152.025 ops/s
# Warmup Iteration  11: 128821.111 ops/s
# Warmup Iteration  12: 128616.685 ops/s
# Warmup Iteration  13: 128804.714 ops/s
# Warmup Iteration  14: 129290.906 ops/s
# Warmup Iteration  15: 128874.591 ops/s
# Warmup Iteration  16: 129146.569 ops/s
# Warmup Iteration  17: 130895.582 ops/s
# Warmup Iteration  18: 131182.617 ops/s
# Warmup Iteration  19: 130954.420 ops/s
# Warmup Iteration  20: 131320.059 ops/s
# Warmup Iteration  21: 131049.818 ops/s
# Warmup Iteration  22: 130572.045 ops/s
# Warmup Iteration  23: 131325.179 ops/s
# Warmup Iteration  24: 131182.959 ops/s
# Warmup Iteration  25: 130828.224 ops/s
# Warmup Iteration  26: 131771.223 ops/s
# Warmup Iteration  27: 131248.767 ops/s
# Warmup Iteration  28: 130921.511 ops/s
# Warmup Iteration  29: 131064.655 ops/s
# Warmup Iteration  30: 130721.557 ops/s
Iteration   1: 130958.405 ops/s
Iteration   2: 130788.937 ops/s
Iteration   3: 130980.244 ops/s
Iteration   4: 131279.924 ops/s
Iteration   5: 131041.226 ops/s
Iteration   6: 131032.442 ops/s
Iteration   7: 131212.537 ops/s
Iteration   8: 131825.323 ops/s
Iteration   9: 131636.140 ops/s
Iteration  10: 131134.200 ops/s
Iteration  11: 131558.436 ops/s
Iteration  12: 131241.153 ops/s
Iteration  13: 131209.177 ops/s
Iteration  14: 131457.843 ops/s
Iteration  15: 131039.631 ops/s
Iteration  16: 131361.564 ops/s
Iteration  17: 131377.156 ops/s
Iteration  18: 130825.380 ops/s
Iteration  19: 131194.052 ops/s
Iteration  20: 131044.943 ops/s
Iteration  21: 130757.027 ops/s
Iteration  22: 131100.016 ops/s
Iteration  23: 131344.072 ops/s
Iteration  24: 131557.858 ops/s
Iteration  25: 131576.073 ops/s
Iteration  26: 131209.463 ops/s
Iteration  27: 131320.355 ops/s
Iteration  28: 131806.758 ops/s
Iteration  29: 131336.852 ops/s
Iteration  30: 131679.593 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_522._Benchmark.benchmark_Cluster_522":
  131262.893 ±(99.9%) 191.185 ops/s [Average]
  (min, avg, max) = (130757.027, 131262.893, 131825.323), stdev = 286.156
  CI (99.9%): [131071.708, 131454.077] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_522._Benchmark.benchmark_Cluster_522  thrpt   30  131262.893 ± 191.185  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_523._Benchmark.benchmark_Cluster_523$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_523._Benchmark.benchmark_Cluster_523

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47234.099 ops/s
# Warmup Iteration   2: 75229.620 ops/s
# Warmup Iteration   3: 120509.466 ops/s
# Warmup Iteration   4: 122310.518 ops/s
# Warmup Iteration   5: 120823.431 ops/s
# Warmup Iteration   6: 122714.839 ops/s
# Warmup Iteration   7: 122479.881 ops/s
# Warmup Iteration   8: 122668.052 ops/s
# Warmup Iteration   9: 96812.399 ops/s
# Warmup Iteration  10: 122703.085 ops/s
# Warmup Iteration  11: 122274.113 ops/s
# Warmup Iteration  12: 122453.576 ops/s
# Warmup Iteration  13: 122210.625 ops/s
# Warmup Iteration  14: 122354.757 ops/s
# Warmup Iteration  15: 122251.243 ops/s
# Warmup Iteration  16: 122233.635 ops/s
# Warmup Iteration  17: 122640.734 ops/s
# Warmup Iteration  18: 122166.464 ops/s
# Warmup Iteration  19: 122686.984 ops/s
# Warmup Iteration  20: 122832.292 ops/s
# Warmup Iteration  21: 122272.196 ops/s
# Warmup Iteration  22: 122686.886 ops/s
# Warmup Iteration  23: 122484.206 ops/s
# Warmup Iteration  24: 122535.245 ops/s
# Warmup Iteration  25: 122951.317 ops/s
# Warmup Iteration  26: 122627.200 ops/s
# Warmup Iteration  27: 122713.887 ops/s
# Warmup Iteration  28: 122435.661 ops/s
# Warmup Iteration  29: 122532.071 ops/s
# Warmup Iteration  30: 122534.372 ops/s
Iteration   1: 122367.704 ops/s
Iteration   2: 122770.350 ops/s
Iteration   3: 122399.676 ops/s
Iteration   4: 122530.685 ops/s
Iteration   5: 122522.418 ops/s
Iteration   6: 122739.063 ops/s
Iteration   7: 122419.854 ops/s
Iteration   8: 122574.597 ops/s
Iteration   9: 122584.298 ops/s
Iteration  10: 122444.481 ops/s
Iteration  11: 123079.869 ops/s
Iteration  12: 122912.314 ops/s
Iteration  13: 122535.516 ops/s
Iteration  14: 122584.036 ops/s
Iteration  15: 122964.567 ops/s
Iteration  16: 122448.668 ops/s
Iteration  17: 122685.243 ops/s
Iteration  18: 122505.357 ops/s
Iteration  19: 122561.244 ops/s
Iteration  20: 122843.931 ops/s
Iteration  21: 122239.677 ops/s
Iteration  22: 122622.752 ops/s
Iteration  23: 122141.400 ops/s
Iteration  24: 122439.485 ops/s
Iteration  25: 122216.508 ops/s
Iteration  26: 122706.676 ops/s
Iteration  27: 122372.384 ops/s
Iteration  28: 122848.476 ops/s
Iteration  29: 122958.040 ops/s
Iteration  30: 122525.342 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_523._Benchmark.benchmark_Cluster_523":
  122584.820 ±(99.9%) 154.029 ops/s [Average]
  (min, avg, max) = (122141.400, 122584.820, 123079.869), stdev = 230.543
  CI (99.9%): [122430.792, 122738.849] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_523._Benchmark.benchmark_Cluster_523  thrpt   30  122584.820 ± 154.029  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_524._Benchmark.benchmark_Cluster_524$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_524._Benchmark.benchmark_Cluster_524

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50360.140 ops/s
# Warmup Iteration   2: 101207.178 ops/s
# Warmup Iteration   3: 158762.056 ops/s
# Warmup Iteration   4: 157751.564 ops/s
# Warmup Iteration   5: 159133.645 ops/s
# Warmup Iteration   6: 158839.148 ops/s
# Warmup Iteration   7: 125082.504 ops/s
# Warmup Iteration   8: 159200.254 ops/s
# Warmup Iteration   9: 159223.433 ops/s
# Warmup Iteration  10: 159511.026 ops/s
# Warmup Iteration  11: 159301.233 ops/s
# Warmup Iteration  12: 159426.692 ops/s
# Warmup Iteration  13: 159421.378 ops/s
# Warmup Iteration  14: 159255.445 ops/s
# Warmup Iteration  15: 159246.428 ops/s
# Warmup Iteration  16: 159293.890 ops/s
# Warmup Iteration  17: 158879.429 ops/s
# Warmup Iteration  18: 159011.166 ops/s
# Warmup Iteration  19: 159039.364 ops/s
# Warmup Iteration  20: 159222.880 ops/s
# Warmup Iteration  21: 159279.827 ops/s
# Warmup Iteration  22: 159409.035 ops/s
# Warmup Iteration  23: 159538.832 ops/s
# Warmup Iteration  24: 159403.500 ops/s
# Warmup Iteration  25: 159353.944 ops/s
# Warmup Iteration  26: 159161.493 ops/s
# Warmup Iteration  27: 159208.348 ops/s
# Warmup Iteration  28: 159294.100 ops/s
# Warmup Iteration  29: 159290.515 ops/s
# Warmup Iteration  30: 159231.417 ops/s
Iteration   1: 159304.945 ops/s
Iteration   2: 159091.320 ops/s
Iteration   3: 159137.103 ops/s
Iteration   4: 159272.974 ops/s
Iteration   5: 159189.929 ops/s
Iteration   6: 159516.562 ops/s
Iteration   7: 159232.410 ops/s
Iteration   8: 159500.174 ops/s
Iteration   9: 159118.021 ops/s
Iteration  10: 159664.159 ops/s
Iteration  11: 159176.558 ops/s
Iteration  12: 159417.386 ops/s
Iteration  13: 159302.865 ops/s
Iteration  14: 159352.993 ops/s
Iteration  15: 159046.409 ops/s
Iteration  16: 159524.010 ops/s
Iteration  17: 159202.386 ops/s
Iteration  18: 159571.732 ops/s
Iteration  19: 159362.226 ops/s
Iteration  20: 159441.012 ops/s
Iteration  21: 158926.006 ops/s
Iteration  22: 159631.915 ops/s
Iteration  23: 159247.094 ops/s
Iteration  24: 159554.126 ops/s
Iteration  25: 159348.557 ops/s
Iteration  26: 159358.087 ops/s
Iteration  27: 159270.402 ops/s
Iteration  28: 159430.147 ops/s
Iteration  29: 159322.283 ops/s
Iteration  30: 159331.706 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_524._Benchmark.benchmark_Cluster_524":
  159328.183 ±(99.9%) 118.500 ops/s [Average]
  (min, avg, max) = (158926.006, 159328.183, 159664.159), stdev = 177.366
  CI (99.9%): [159209.683, 159446.684] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_524._Benchmark.benchmark_Cluster_524  thrpt   30  159328.183 ± 118.500  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_525._Benchmark.benchmark_Cluster_525$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_525._Benchmark.benchmark_Cluster_525

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 129978.446 ops/s
# Warmup Iteration   2: 147573.071 ops/s
# Warmup Iteration   3: 175788.937 ops/s
# Warmup Iteration   4: 207465.472 ops/s
# Warmup Iteration   5: 207790.933 ops/s
# Warmup Iteration   6: 206452.385 ops/s
# Warmup Iteration   7: 207395.331 ops/s
# Warmup Iteration   8: 207225.200 ops/s
# Warmup Iteration   9: 207846.824 ops/s
# Warmup Iteration  10: 207746.978 ops/s
# Warmup Iteration  11: 207840.744 ops/s
# Warmup Iteration  12: 207775.722 ops/s
# Warmup Iteration  13: 195764.975 ops/s
# Warmup Iteration  14: 171479.268 ops/s
# Warmup Iteration  15: 207939.725 ops/s
# Warmup Iteration  16: 207947.198 ops/s
# Warmup Iteration  17: 208201.513 ops/s
# Warmup Iteration  18: 208150.010 ops/s
# Warmup Iteration  19: 207980.887 ops/s
# Warmup Iteration  20: 208102.926 ops/s
# Warmup Iteration  21: 207953.460 ops/s
# Warmup Iteration  22: 208151.753 ops/s
# Warmup Iteration  23: 208089.389 ops/s
# Warmup Iteration  24: 208525.903 ops/s
# Warmup Iteration  25: 208125.690 ops/s
# Warmup Iteration  26: 208186.512 ops/s
# Warmup Iteration  27: 208052.420 ops/s
# Warmup Iteration  28: 207804.515 ops/s
# Warmup Iteration  29: 208268.015 ops/s
# Warmup Iteration  30: 207958.556 ops/s
Iteration   1: 208270.651 ops/s
Iteration   2: 208242.514 ops/s
Iteration   3: 208079.076 ops/s
Iteration   4: 208095.401 ops/s
Iteration   5: 208099.504 ops/s
Iteration   6: 208304.065 ops/s
Iteration   7: 208011.320 ops/s
Iteration   8: 207658.117 ops/s
Iteration   9: 207746.072 ops/s
Iteration  10: 207883.243 ops/s
Iteration  11: 207969.187 ops/s
Iteration  12: 207802.433 ops/s
Iteration  13: 208012.901 ops/s
Iteration  14: 207504.643 ops/s
Iteration  15: 207456.710 ops/s
Iteration  16: 207601.712 ops/s
Iteration  17: 207916.461 ops/s
Iteration  18: 207315.299 ops/s
Iteration  19: 207848.057 ops/s
Iteration  20: 207836.675 ops/s
Iteration  21: 207934.094 ops/s
Iteration  22: 207714.511 ops/s
Iteration  23: 208064.314 ops/s
Iteration  24: 208264.067 ops/s
Iteration  25: 208122.843 ops/s
Iteration  26: 208093.251 ops/s
Iteration  27: 208318.116 ops/s
Iteration  28: 208048.139 ops/s
Iteration  29: 208132.239 ops/s
Iteration  30: 207851.722 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_525._Benchmark.benchmark_Cluster_525":
  207939.911 ±(99.9%) 172.266 ops/s [Average]
  (min, avg, max) = (207315.299, 207939.911, 208318.116), stdev = 257.839
  CI (99.9%): [207767.645, 208112.177] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_525._Benchmark.benchmark_Cluster_525  thrpt   30  207939.911 ± 172.266  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_526._Benchmark.benchmark_Cluster_526$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_526._Benchmark.benchmark_Cluster_526

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43906.970 ops/s
# Warmup Iteration   2: 80151.692 ops/s
# Warmup Iteration   3: 133473.549 ops/s
# Warmup Iteration   4: 132784.762 ops/s
# Warmup Iteration   5: 133494.163 ops/s
# Warmup Iteration   6: 133356.199 ops/s
# Warmup Iteration   7: 132402.284 ops/s
# Warmup Iteration   8: 105885.246 ops/s
# Warmup Iteration   9: 132761.976 ops/s
# Warmup Iteration  10: 133336.444 ops/s
# Warmup Iteration  11: 133719.827 ops/s
# Warmup Iteration  12: 133758.227 ops/s
# Warmup Iteration  13: 133261.769 ops/s
# Warmup Iteration  14: 133334.020 ops/s
# Warmup Iteration  15: 133612.288 ops/s
# Warmup Iteration  16: 133524.430 ops/s
# Warmup Iteration  17: 133525.334 ops/s
# Warmup Iteration  18: 133638.185 ops/s
# Warmup Iteration  19: 133540.489 ops/s
# Warmup Iteration  20: 133788.815 ops/s
# Warmup Iteration  21: 133499.457 ops/s
# Warmup Iteration  22: 133760.525 ops/s
# Warmup Iteration  23: 133645.301 ops/s
# Warmup Iteration  24: 133502.195 ops/s
# Warmup Iteration  25: 133647.314 ops/s
# Warmup Iteration  26: 133352.006 ops/s
# Warmup Iteration  27: 133551.788 ops/s
# Warmup Iteration  28: 133716.159 ops/s
# Warmup Iteration  29: 133740.335 ops/s
# Warmup Iteration  30: 133510.096 ops/s
Iteration   1: 133443.842 ops/s
Iteration   2: 133500.420 ops/s
Iteration   3: 133239.943 ops/s
Iteration   4: 133591.950 ops/s
Iteration   5: 133645.527 ops/s
Iteration   6: 133551.481 ops/s
Iteration   7: 133605.733 ops/s
Iteration   8: 133621.495 ops/s
Iteration   9: 133708.592 ops/s
Iteration  10: 133476.488 ops/s
Iteration  11: 133669.790 ops/s
Iteration  12: 133836.386 ops/s
Iteration  13: 133533.688 ops/s
Iteration  14: 133663.173 ops/s
Iteration  15: 133520.484 ops/s
Iteration  16: 133704.549 ops/s
Iteration  17: 133591.403 ops/s
Iteration  18: 133577.874 ops/s
Iteration  19: 133408.403 ops/s
Iteration  20: 133793.455 ops/s
Iteration  21: 133712.690 ops/s
Iteration  22: 133600.866 ops/s
Iteration  23: 133551.439 ops/s
Iteration  24: 133537.750 ops/s
Iteration  25: 133618.367 ops/s
Iteration  26: 133454.153 ops/s
Iteration  27: 133830.868 ops/s
Iteration  28: 133646.175 ops/s
Iteration  29: 133540.912 ops/s
Iteration  30: 133688.145 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_526._Benchmark.benchmark_Cluster_526":
  133595.535 ±(99.9%) 84.483 ops/s [Average]
  (min, avg, max) = (133239.943, 133595.535, 133836.386), stdev = 126.450
  CI (99.9%): [133511.052, 133680.018] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score    Error  Units
Cluster_526._Benchmark.benchmark_Cluster_526  thrpt   30  133595.535 ± 84.483  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_527._Benchmark.benchmark_Cluster_527$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_527._Benchmark.benchmark_Cluster_527

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 49254.233 ops/s
# Warmup Iteration   2: 80068.928 ops/s
# Warmup Iteration   3: 131435.973 ops/s
# Warmup Iteration   4: 130765.461 ops/s
# Warmup Iteration   5: 131770.881 ops/s
# Warmup Iteration   6: 131498.583 ops/s
# Warmup Iteration   7: 130949.848 ops/s
# Warmup Iteration   8: 114844.772 ops/s
# Warmup Iteration   9: 119649.971 ops/s
# Warmup Iteration  10: 130854.345 ops/s
# Warmup Iteration  11: 131720.467 ops/s
# Warmup Iteration  12: 130974.726 ops/s
# Warmup Iteration  13: 131574.148 ops/s
# Warmup Iteration  14: 131400.299 ops/s
# Warmup Iteration  15: 131760.146 ops/s
# Warmup Iteration  16: 131139.931 ops/s
# Warmup Iteration  17: 134509.985 ops/s
# Warmup Iteration  18: 134738.280 ops/s
# Warmup Iteration  19: 134192.556 ops/s
# Warmup Iteration  20: 134865.913 ops/s
# Warmup Iteration  21: 134452.516 ops/s
# Warmup Iteration  22: 133858.062 ops/s
# Warmup Iteration  23: 133736.299 ops/s
# Warmup Iteration  24: 134445.938 ops/s
# Warmup Iteration  25: 134691.684 ops/s
# Warmup Iteration  26: 134205.594 ops/s
# Warmup Iteration  27: 134137.988 ops/s
# Warmup Iteration  28: 135002.052 ops/s
# Warmup Iteration  29: 134486.307 ops/s
# Warmup Iteration  30: 134098.788 ops/s
Iteration   1: 134684.551 ops/s
Iteration   2: 134834.784 ops/s
Iteration   3: 134610.745 ops/s
Iteration   4: 134887.663 ops/s
Iteration   5: 134374.617 ops/s
Iteration   6: 134820.455 ops/s
Iteration   7: 134757.690 ops/s
Iteration   8: 134586.068 ops/s
Iteration   9: 135114.184 ops/s
Iteration  10: 134422.573 ops/s
Iteration  11: 134518.371 ops/s
Iteration  12: 135012.689 ops/s
Iteration  13: 134656.535 ops/s
Iteration  14: 134380.154 ops/s
Iteration  15: 134133.825 ops/s
Iteration  16: 134911.548 ops/s
Iteration  17: 134781.556 ops/s
Iteration  18: 134444.409 ops/s
Iteration  19: 133024.548 ops/s
Iteration  20: 133363.175 ops/s
Iteration  21: 133779.693 ops/s
Iteration  22: 134458.463 ops/s
Iteration  23: 134451.703 ops/s
Iteration  24: 134657.110 ops/s
Iteration  25: 134053.918 ops/s
Iteration  26: 134004.175 ops/s
Iteration  27: 134384.077 ops/s
Iteration  28: 134660.154 ops/s
Iteration  29: 133567.079 ops/s
Iteration  30: 134415.274 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_527._Benchmark.benchmark_Cluster_527":
  134425.060 ±(99.9%) 323.092 ops/s [Average]
  (min, avg, max) = (133024.548, 134425.060, 135114.184), stdev = 483.588
  CI (99.9%): [134101.968, 134748.151] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_527._Benchmark.benchmark_Cluster_527  thrpt   30  134425.060 ± 323.092  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_528._Benchmark.benchmark_Cluster_528$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_528._Benchmark.benchmark_Cluster_528

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70411.818 ops/s
# Warmup Iteration   2: 165397.439 ops/s
# Warmup Iteration   3: 228246.842 ops/s
# Warmup Iteration   4: 228905.415 ops/s
# Warmup Iteration   5: 216802.763 ops/s
# Warmup Iteration   6: 196894.807 ops/s
# Warmup Iteration   7: 229862.758 ops/s
# Warmup Iteration   8: 230035.914 ops/s
# Warmup Iteration   9: 229732.781 ops/s
# Warmup Iteration  10: 230161.662 ops/s
# Warmup Iteration  11: 230733.808 ops/s
# Warmup Iteration  12: 230520.710 ops/s
# Warmup Iteration  13: 230142.786 ops/s
# Warmup Iteration  14: 230647.466 ops/s
# Warmup Iteration  15: 230495.162 ops/s
# Warmup Iteration  16: 229569.930 ops/s
# Warmup Iteration  17: 229825.112 ops/s
# Warmup Iteration  18: 229699.262 ops/s
# Warmup Iteration  19: 230072.858 ops/s
# Warmup Iteration  20: 229739.756 ops/s
# Warmup Iteration  21: 230096.717 ops/s
# Warmup Iteration  22: 229832.020 ops/s
# Warmup Iteration  23: 229856.986 ops/s
# Warmup Iteration  24: 229619.554 ops/s
# Warmup Iteration  25: 229973.139 ops/s
# Warmup Iteration  26: 230147.326 ops/s
# Warmup Iteration  27: 230118.262 ops/s
# Warmup Iteration  28: 229815.118 ops/s
# Warmup Iteration  29: 229964.956 ops/s
# Warmup Iteration  30: 229801.201 ops/s
Iteration   1: 229866.638 ops/s
Iteration   2: 229916.175 ops/s
Iteration   3: 229489.543 ops/s
Iteration   4: 229461.400 ops/s
Iteration   5: 230239.556 ops/s
Iteration   6: 230094.980 ops/s
Iteration   7: 229992.833 ops/s
Iteration   8: 230285.048 ops/s
Iteration   9: 230246.936 ops/s
Iteration  10: 229856.109 ops/s
Iteration  11: 229798.135 ops/s
Iteration  12: 230476.624 ops/s
Iteration  13: 230063.377 ops/s
Iteration  14: 230238.186 ops/s
Iteration  15: 230331.253 ops/s
Iteration  16: 230449.317 ops/s
Iteration  17: 229903.498 ops/s
Iteration  18: 230104.150 ops/s
Iteration  19: 229450.802 ops/s
Iteration  20: 229351.321 ops/s
Iteration  21: 229786.469 ops/s
Iteration  22: 230289.558 ops/s
Iteration  23: 230590.240 ops/s
Iteration  24: 230570.797 ops/s
Iteration  25: 229840.915 ops/s
Iteration  26: 229018.768 ops/s
Iteration  27: 229807.389 ops/s
Iteration  28: 229841.376 ops/s
Iteration  29: 229943.806 ops/s
Iteration  30: 230631.484 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_528._Benchmark.benchmark_Cluster_528":
  229997.889 ±(99.9%) 261.526 ops/s [Average]
  (min, avg, max) = (229018.768, 229997.889, 230631.484), stdev = 391.439
  CI (99.9%): [229736.364, 230259.415] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_528._Benchmark.benchmark_Cluster_528  thrpt   30  229997.889 ± 261.526  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_529._Benchmark.benchmark_Cluster_529$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_529._Benchmark.benchmark_Cluster_529

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60621.518 ops/s
# Warmup Iteration   2: 131831.111 ops/s
# Warmup Iteration   3: 183533.292 ops/s
# Warmup Iteration   4: 184666.515 ops/s
# Warmup Iteration   5: 184601.784 ops/s
# Warmup Iteration   6: 146680.038 ops/s
# Warmup Iteration   7: 184970.931 ops/s
# Warmup Iteration   8: 184457.646 ops/s
# Warmup Iteration   9: 184584.302 ops/s
# Warmup Iteration  10: 184359.998 ops/s
# Warmup Iteration  11: 185023.131 ops/s
# Warmup Iteration  12: 184841.062 ops/s
# Warmup Iteration  13: 185006.995 ops/s
# Warmup Iteration  14: 184835.073 ops/s
# Warmup Iteration  15: 184786.516 ops/s
# Warmup Iteration  16: 184604.873 ops/s
# Warmup Iteration  17: 184933.111 ops/s
# Warmup Iteration  18: 184942.762 ops/s
# Warmup Iteration  19: 184983.489 ops/s
# Warmup Iteration  20: 184806.920 ops/s
# Warmup Iteration  21: 185045.370 ops/s
# Warmup Iteration  22: 184972.973 ops/s
# Warmup Iteration  23: 185073.543 ops/s
# Warmup Iteration  24: 184923.623 ops/s
# Warmup Iteration  25: 184920.958 ops/s
# Warmup Iteration  26: 185176.530 ops/s
# Warmup Iteration  27: 184921.055 ops/s
# Warmup Iteration  28: 184861.967 ops/s
# Warmup Iteration  29: 185182.203 ops/s
# Warmup Iteration  30: 184880.410 ops/s
Iteration   1: 184838.579 ops/s
Iteration   2: 184937.396 ops/s
Iteration   3: 184909.247 ops/s
Iteration   4: 184650.833 ops/s
Iteration   5: 184845.377 ops/s
Iteration   6: 185155.369 ops/s
Iteration   7: 185140.704 ops/s
Iteration   8: 185203.393 ops/s
Iteration   9: 184990.418 ops/s
Iteration  10: 185031.035 ops/s
Iteration  11: 185007.893 ops/s
Iteration  12: 185141.168 ops/s
Iteration  13: 185148.248 ops/s
Iteration  14: 184773.284 ops/s
Iteration  15: 184819.954 ops/s
Iteration  16: 185389.265 ops/s
Iteration  17: 184155.150 ops/s
Iteration  18: 185307.657 ops/s
Iteration  19: 184939.830 ops/s
Iteration  20: 185061.233 ops/s
Iteration  21: 184882.332 ops/s
Iteration  22: 184880.614 ops/s
Iteration  23: 185210.240 ops/s
Iteration  24: 185048.205 ops/s
Iteration  25: 184987.971 ops/s
Iteration  26: 185297.308 ops/s
Iteration  27: 185252.437 ops/s
Iteration  28: 185432.590 ops/s
Iteration  29: 185119.714 ops/s
Iteration  30: 184997.984 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_529._Benchmark.benchmark_Cluster_529":
  185018.514 ±(99.9%) 165.597 ops/s [Average]
  (min, avg, max) = (184155.150, 185018.514, 185432.590), stdev = 247.858
  CI (99.9%): [184852.917, 185184.111] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_529._Benchmark.benchmark_Cluster_529  thrpt   30  185018.514 ± 165.597  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_53._Benchmark.benchmark_Cluster_53$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_53._Benchmark.benchmark_Cluster_53

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72932.929 ops/s
# Warmup Iteration   2: 97288.936 ops/s
# Warmup Iteration   3: 155105.608 ops/s
# Warmup Iteration   4: 155006.229 ops/s
# Warmup Iteration   5: 154205.454 ops/s
# Warmup Iteration   6: 155298.287 ops/s
# Warmup Iteration   7: 155133.444 ops/s
# Warmup Iteration   8: 154788.729 ops/s
# Warmup Iteration   9: 123567.077 ops/s
# Warmup Iteration  10: 154683.750 ops/s
# Warmup Iteration  11: 154614.164 ops/s
# Warmup Iteration  12: 154836.799 ops/s
# Warmup Iteration  13: 155117.151 ops/s
# Warmup Iteration  14: 154445.791 ops/s
# Warmup Iteration  15: 154649.815 ops/s
# Warmup Iteration  16: 154796.990 ops/s
# Warmup Iteration  17: 155625.533 ops/s
# Warmup Iteration  18: 155445.579 ops/s
# Warmup Iteration  19: 155689.312 ops/s
# Warmup Iteration  20: 155792.850 ops/s
# Warmup Iteration  21: 155890.525 ops/s
# Warmup Iteration  22: 155446.579 ops/s
# Warmup Iteration  23: 155581.087 ops/s
# Warmup Iteration  24: 155604.703 ops/s
# Warmup Iteration  25: 155825.291 ops/s
# Warmup Iteration  26: 155267.235 ops/s
# Warmup Iteration  27: 155560.937 ops/s
# Warmup Iteration  28: 155549.463 ops/s
# Warmup Iteration  29: 155751.556 ops/s
# Warmup Iteration  30: 155730.975 ops/s
Iteration   1: 154893.522 ops/s
Iteration   2: 156116.646 ops/s
Iteration   3: 155994.551 ops/s
Iteration   4: 155123.867 ops/s
Iteration   5: 155269.490 ops/s
Iteration   6: 155750.302 ops/s
Iteration   7: 155726.590 ops/s
Iteration   8: 155816.744 ops/s
Iteration   9: 155268.195 ops/s
Iteration  10: 155402.865 ops/s
Iteration  11: 155872.507 ops/s
Iteration  12: 155909.109 ops/s
Iteration  13: 155642.041 ops/s
Iteration  14: 155978.560 ops/s
Iteration  15: 155775.706 ops/s
Iteration  16: 155225.256 ops/s
Iteration  17: 155873.089 ops/s
Iteration  18: 155209.369 ops/s
Iteration  19: 155558.746 ops/s
Iteration  20: 155914.740 ops/s
Iteration  21: 155709.848 ops/s
Iteration  22: 155543.182 ops/s
Iteration  23: 155690.027 ops/s
Iteration  24: 155689.389 ops/s
Iteration  25: 155637.597 ops/s
Iteration  26: 155668.715 ops/s
Iteration  27: 155519.283 ops/s
Iteration  28: 155588.669 ops/s
Iteration  29: 155807.817 ops/s
Iteration  30: 155265.680 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_53._Benchmark.benchmark_Cluster_53":
  155614.737 ±(99.9%) 196.123 ops/s [Average]
  (min, avg, max) = (154893.522, 155614.737, 156116.646), stdev = 293.547
  CI (99.9%): [155418.614, 155810.859] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_53._Benchmark.benchmark_Cluster_53  thrpt   30  155614.737 ± 196.123  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_530._Benchmark.benchmark_Cluster_530$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_530._Benchmark.benchmark_Cluster_530

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60881.603 ops/s
# Warmup Iteration   2: 133183.731 ops/s
# Warmup Iteration   3: 177015.238 ops/s
# Warmup Iteration   4: 178364.449 ops/s
# Warmup Iteration   5: 160503.889 ops/s
# Warmup Iteration   6: 160210.210 ops/s
# Warmup Iteration   7: 178672.785 ops/s
# Warmup Iteration   8: 178765.403 ops/s
# Warmup Iteration   9: 179000.762 ops/s
# Warmup Iteration  10: 179129.109 ops/s
# Warmup Iteration  11: 178634.460 ops/s
# Warmup Iteration  12: 178953.473 ops/s
# Warmup Iteration  13: 178697.715 ops/s
# Warmup Iteration  14: 178749.321 ops/s
# Warmup Iteration  15: 178754.989 ops/s
# Warmup Iteration  16: 178769.255 ops/s
# Warmup Iteration  17: 179225.138 ops/s
# Warmup Iteration  18: 178974.877 ops/s
# Warmup Iteration  19: 179029.629 ops/s
# Warmup Iteration  20: 178860.067 ops/s
# Warmup Iteration  21: 179130.195 ops/s
# Warmup Iteration  22: 179385.640 ops/s
# Warmup Iteration  23: 179284.921 ops/s
# Warmup Iteration  24: 178949.568 ops/s
# Warmup Iteration  25: 178788.116 ops/s
# Warmup Iteration  26: 179263.952 ops/s
# Warmup Iteration  27: 178720.309 ops/s
# Warmup Iteration  28: 178844.428 ops/s
# Warmup Iteration  29: 178741.094 ops/s
# Warmup Iteration  30: 179186.327 ops/s
Iteration   1: 179553.274 ops/s
Iteration   2: 178891.795 ops/s
Iteration   3: 178824.810 ops/s
Iteration   4: 179393.885 ops/s
Iteration   5: 178534.792 ops/s
Iteration   6: 179108.721 ops/s
Iteration   7: 179217.771 ops/s
Iteration   8: 179121.084 ops/s
Iteration   9: 178874.364 ops/s
Iteration  10: 179156.063 ops/s
Iteration  11: 179303.357 ops/s
Iteration  12: 178314.156 ops/s
Iteration  13: 179557.813 ops/s
Iteration  14: 178975.492 ops/s
Iteration  15: 178877.348 ops/s
Iteration  16: 179331.762 ops/s
Iteration  17: 179035.803 ops/s
Iteration  18: 179093.192 ops/s
Iteration  19: 178990.709 ops/s
Iteration  20: 178770.518 ops/s
Iteration  21: 179062.972 ops/s
Iteration  22: 179038.871 ops/s
Iteration  23: 178424.030 ops/s
Iteration  24: 178370.274 ops/s
Iteration  25: 178754.624 ops/s
Iteration  26: 179045.085 ops/s
Iteration  27: 178884.192 ops/s
Iteration  28: 179187.569 ops/s
Iteration  29: 179266.104 ops/s
Iteration  30: 179234.646 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_530._Benchmark.benchmark_Cluster_530":
  179006.503 ±(99.9%) 210.009 ops/s [Average]
  (min, avg, max) = (178314.156, 179006.503, 179557.813), stdev = 314.331
  CI (99.9%): [178796.494, 179216.511] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_530._Benchmark.benchmark_Cluster_530  thrpt   30  179006.503 ± 210.009  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_531._Benchmark.benchmark_Cluster_531$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_531._Benchmark.benchmark_Cluster_531

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 104041.773 ops/s
# Warmup Iteration   2: 247200.970 ops/s
# Warmup Iteration   3: 313007.175 ops/s
# Warmup Iteration   4: 315092.925 ops/s
# Warmup Iteration   5: 251309.250 ops/s
# Warmup Iteration   6: 315468.845 ops/s
# Warmup Iteration   7: 315392.883 ops/s
# Warmup Iteration   8: 316208.319 ops/s
# Warmup Iteration   9: 315603.416 ops/s
# Warmup Iteration  10: 314977.840 ops/s
# Warmup Iteration  11: 314447.035 ops/s
# Warmup Iteration  12: 315685.045 ops/s
# Warmup Iteration  13: 315013.400 ops/s
# Warmup Iteration  14: 314993.183 ops/s
# Warmup Iteration  15: 315049.873 ops/s
# Warmup Iteration  16: 315052.438 ops/s
# Warmup Iteration  17: 315967.798 ops/s
# Warmup Iteration  18: 315356.378 ops/s
# Warmup Iteration  19: 315214.081 ops/s
# Warmup Iteration  20: 315757.929 ops/s
# Warmup Iteration  21: 315447.504 ops/s
# Warmup Iteration  22: 315218.481 ops/s
# Warmup Iteration  23: 315567.439 ops/s
# Warmup Iteration  24: 315021.691 ops/s
# Warmup Iteration  25: 316039.841 ops/s
# Warmup Iteration  26: 315102.467 ops/s
# Warmup Iteration  27: 315106.403 ops/s
# Warmup Iteration  28: 315047.718 ops/s
# Warmup Iteration  29: 315461.914 ops/s
# Warmup Iteration  30: 315260.188 ops/s
Iteration   1: 316028.467 ops/s
Iteration   2: 315557.887 ops/s
Iteration   3: 315705.647 ops/s
Iteration   4: 315229.105 ops/s
Iteration   5: 315845.590 ops/s
Iteration   6: 315437.410 ops/s
Iteration   7: 315166.112 ops/s
Iteration   8: 315671.643 ops/s
Iteration   9: 315586.007 ops/s
Iteration  10: 315669.859 ops/s
Iteration  11: 315609.870 ops/s
Iteration  12: 316060.067 ops/s
Iteration  13: 315630.637 ops/s
Iteration  14: 315793.524 ops/s
Iteration  15: 316024.756 ops/s
Iteration  16: 315045.201 ops/s
Iteration  17: 315490.457 ops/s
Iteration  18: 315934.958 ops/s
Iteration  19: 316238.900 ops/s
Iteration  20: 315792.628 ops/s
Iteration  21: 315867.934 ops/s
Iteration  22: 315591.173 ops/s
Iteration  23: 315454.053 ops/s
Iteration  24: 315264.183 ops/s
Iteration  25: 315343.931 ops/s
Iteration  26: 315743.103 ops/s
Iteration  27: 315168.042 ops/s
Iteration  28: 315552.790 ops/s
Iteration  29: 315681.796 ops/s
Iteration  30: 316107.173 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_531._Benchmark.benchmark_Cluster_531":
  315643.097 ±(99.9%) 200.670 ops/s [Average]
  (min, avg, max) = (315045.201, 315643.097, 316238.900), stdev = 300.354
  CI (99.9%): [315442.426, 315843.767] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_531._Benchmark.benchmark_Cluster_531  thrpt   30  315643.097 ± 200.670  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_532._Benchmark.benchmark_Cluster_532$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_532._Benchmark.benchmark_Cluster_532

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 92119.791 ops/s
# Warmup Iteration   2: 172265.483 ops/s
# Warmup Iteration   3: 253999.965 ops/s
# Warmup Iteration   4: 256492.768 ops/s
# Warmup Iteration   5: 256855.164 ops/s
# Warmup Iteration   6: 214353.748 ops/s
# Warmup Iteration   7: 244652.986 ops/s
# Warmup Iteration   8: 255826.187 ops/s
# Warmup Iteration   9: 255995.815 ops/s
# Warmup Iteration  10: 256327.234 ops/s
# Warmup Iteration  11: 256289.879 ops/s
# Warmup Iteration  12: 255475.672 ops/s
# Warmup Iteration  13: 256653.586 ops/s
# Warmup Iteration  14: 255659.451 ops/s
# Warmup Iteration  15: 256131.495 ops/s
# Warmup Iteration  16: 256482.250 ops/s
# Warmup Iteration  17: 254930.312 ops/s
# Warmup Iteration  18: 255402.079 ops/s
# Warmup Iteration  19: 255636.624 ops/s
# Warmup Iteration  20: 255422.911 ops/s
# Warmup Iteration  21: 255058.373 ops/s
# Warmup Iteration  22: 255094.985 ops/s
# Warmup Iteration  23: 255026.000 ops/s
# Warmup Iteration  24: 255528.725 ops/s
# Warmup Iteration  25: 255053.478 ops/s
# Warmup Iteration  26: 254670.448 ops/s
# Warmup Iteration  27: 254723.701 ops/s
# Warmup Iteration  28: 255291.957 ops/s
# Warmup Iteration  29: 255024.457 ops/s
# Warmup Iteration  30: 254851.291 ops/s
Iteration   1: 255085.671 ops/s
Iteration   2: 255978.175 ops/s
Iteration   3: 255108.068 ops/s
Iteration   4: 254535.288 ops/s
Iteration   5: 255841.454 ops/s
Iteration   6: 255246.567 ops/s
Iteration   7: 255067.104 ops/s
Iteration   8: 255044.309 ops/s
Iteration   9: 255135.755 ops/s
Iteration  10: 254982.178 ops/s
Iteration  11: 254703.831 ops/s
Iteration  12: 255074.195 ops/s
Iteration  13: 253802.558 ops/s
Iteration  14: 254967.518 ops/s
Iteration  15: 255237.187 ops/s
Iteration  16: 255185.458 ops/s
Iteration  17: 255250.866 ops/s
Iteration  18: 255221.869 ops/s
Iteration  19: 255587.659 ops/s
Iteration  20: 255333.820 ops/s
Iteration  21: 255566.654 ops/s
Iteration  22: 255869.534 ops/s
Iteration  23: 255355.640 ops/s
Iteration  24: 255803.405 ops/s
Iteration  25: 254929.341 ops/s
Iteration  26: 255658.507 ops/s
Iteration  27: 255108.654 ops/s
Iteration  28: 255685.977 ops/s
Iteration  29: 255438.646 ops/s
Iteration  30: 255867.737 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_532._Benchmark.benchmark_Cluster_532":
  255255.788 ±(99.9%) 302.024 ops/s [Average]
  (min, avg, max) = (253802.558, 255255.788, 255978.175), stdev = 452.055
  CI (99.9%): [254953.763, 255557.812] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_532._Benchmark.benchmark_Cluster_532  thrpt   30  255255.788 ± 302.024  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_533._Benchmark.benchmark_Cluster_533$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_533._Benchmark.benchmark_Cluster_533

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51365.130 ops/s
# Warmup Iteration   2: 135612.929 ops/s
# Warmup Iteration   3: 180624.790 ops/s
# Warmup Iteration   4: 181780.380 ops/s
# Warmup Iteration   5: 144943.474 ops/s
# Warmup Iteration   6: 181762.996 ops/s
# Warmup Iteration   7: 182045.190 ops/s
# Warmup Iteration   8: 182215.670 ops/s
# Warmup Iteration   9: 182067.995 ops/s
# Warmup Iteration  10: 181975.903 ops/s
# Warmup Iteration  11: 181848.214 ops/s
# Warmup Iteration  12: 181700.625 ops/s
# Warmup Iteration  13: 181551.929 ops/s
# Warmup Iteration  14: 181963.259 ops/s
# Warmup Iteration  15: 181584.781 ops/s
# Warmup Iteration  16: 181894.598 ops/s
# Warmup Iteration  17: 181594.655 ops/s
# Warmup Iteration  18: 181931.335 ops/s
# Warmup Iteration  19: 181705.240 ops/s
# Warmup Iteration  20: 181164.344 ops/s
# Warmup Iteration  21: 181471.929 ops/s
# Warmup Iteration  22: 181429.359 ops/s
# Warmup Iteration  23: 181954.263 ops/s
# Warmup Iteration  24: 181739.884 ops/s
# Warmup Iteration  25: 181567.348 ops/s
# Warmup Iteration  26: 181470.485 ops/s
# Warmup Iteration  27: 180754.312 ops/s
# Warmup Iteration  28: 181408.788 ops/s
# Warmup Iteration  29: 181432.505 ops/s
# Warmup Iteration  30: 181717.117 ops/s
Iteration   1: 181849.486 ops/s
Iteration   2: 181856.765 ops/s
Iteration   3: 181282.068 ops/s
Iteration   4: 181712.738 ops/s
Iteration   5: 181753.394 ops/s
Iteration   6: 181506.218 ops/s
Iteration   7: 181418.030 ops/s
Iteration   8: 181788.859 ops/s
Iteration   9: 182113.459 ops/s
Iteration  10: 181895.990 ops/s
Iteration  11: 181929.887 ops/s
Iteration  12: 182018.173 ops/s
Iteration  13: 182049.380 ops/s
Iteration  14: 181227.229 ops/s
Iteration  15: 181600.981 ops/s
Iteration  16: 181706.167 ops/s
Iteration  17: 182013.033 ops/s
Iteration  18: 181145.079 ops/s
Iteration  19: 181356.966 ops/s
Iteration  20: 181057.823 ops/s
Iteration  21: 181203.614 ops/s
Iteration  22: 181814.717 ops/s
Iteration  23: 181506.908 ops/s
Iteration  24: 181453.291 ops/s
Iteration  25: 181719.912 ops/s
Iteration  26: 181170.735 ops/s
Iteration  27: 181902.881 ops/s
Iteration  28: 181567.086 ops/s
Iteration  29: 181198.417 ops/s
Iteration  30: 181645.061 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_533._Benchmark.benchmark_Cluster_533":
  181615.478 ±(99.9%) 205.430 ops/s [Average]
  (min, avg, max) = (181057.823, 181615.478, 182113.459), stdev = 307.479
  CI (99.9%): [181410.048, 181820.909] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_533._Benchmark.benchmark_Cluster_533  thrpt   30  181615.478 ± 205.430  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_534._Benchmark.benchmark_Cluster_534$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_534._Benchmark.benchmark_Cluster_534

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70687.275 ops/s
# Warmup Iteration   2: 126155.165 ops/s
# Warmup Iteration   3: 188828.681 ops/s
# Warmup Iteration   4: 187112.440 ops/s
# Warmup Iteration   5: 188229.886 ops/s
# Warmup Iteration   6: 188946.550 ops/s
# Warmup Iteration   7: 147081.177 ops/s
# Warmup Iteration   8: 189634.244 ops/s
# Warmup Iteration   9: 189376.705 ops/s
# Warmup Iteration  10: 189079.368 ops/s
# Warmup Iteration  11: 189016.885 ops/s
# Warmup Iteration  12: 189158.553 ops/s
# Warmup Iteration  13: 189067.613 ops/s
# Warmup Iteration  14: 188946.062 ops/s
# Warmup Iteration  15: 188635.987 ops/s
# Warmup Iteration  16: 189156.556 ops/s
# Warmup Iteration  17: 189544.081 ops/s
# Warmup Iteration  18: 189769.730 ops/s
# Warmup Iteration  19: 189280.748 ops/s
# Warmup Iteration  20: 189954.333 ops/s
# Warmup Iteration  21: 190027.904 ops/s
# Warmup Iteration  22: 190256.917 ops/s
# Warmup Iteration  23: 189592.643 ops/s
# Warmup Iteration  24: 189652.983 ops/s
# Warmup Iteration  25: 190173.803 ops/s
# Warmup Iteration  26: 189809.098 ops/s
# Warmup Iteration  27: 190120.717 ops/s
# Warmup Iteration  28: 189445.426 ops/s
# Warmup Iteration  29: 189772.362 ops/s
# Warmup Iteration  30: 189934.852 ops/s
Iteration   1: 189553.627 ops/s
Iteration   2: 189311.957 ops/s
Iteration   3: 189317.623 ops/s
Iteration   4: 189901.122 ops/s
Iteration   5: 189646.083 ops/s
Iteration   6: 189844.797 ops/s
Iteration   7: 189495.645 ops/s
Iteration   8: 189920.606 ops/s
Iteration   9: 189407.180 ops/s
Iteration  10: 189097.730 ops/s
Iteration  11: 190278.043 ops/s
Iteration  12: 190142.467 ops/s
Iteration  13: 190091.156 ops/s
Iteration  14: 190335.878 ops/s
Iteration  15: 190267.317 ops/s
Iteration  16: 189566.177 ops/s
Iteration  17: 189989.653 ops/s
Iteration  18: 189298.404 ops/s
Iteration  19: 189976.593 ops/s
Iteration  20: 189531.658 ops/s
Iteration  21: 189652.213 ops/s
Iteration  22: 189449.772 ops/s
Iteration  23: 189929.057 ops/s
Iteration  24: 189265.345 ops/s
Iteration  25: 189850.679 ops/s
Iteration  26: 189058.970 ops/s
Iteration  27: 190048.183 ops/s
Iteration  28: 189489.541 ops/s
Iteration  29: 189999.385 ops/s
Iteration  30: 189637.098 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_534._Benchmark.benchmark_Cluster_534":
  189711.799 ±(99.9%) 238.429 ops/s [Average]
  (min, avg, max) = (189058.970, 189711.799, 190335.878), stdev = 356.870
  CI (99.9%): [189473.369, 189950.228] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_534._Benchmark.benchmark_Cluster_534  thrpt   30  189711.799 ± 238.429  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_535._Benchmark.benchmark_Cluster_535$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_535._Benchmark.benchmark_Cluster_535

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 90384.906 ops/s
# Warmup Iteration   2: 110070.001 ops/s
# Warmup Iteration   3: 148035.555 ops/s
# Warmup Iteration   4: 159976.288 ops/s
# Warmup Iteration   5: 160016.906 ops/s
# Warmup Iteration   6: 159430.884 ops/s
# Warmup Iteration   7: 160114.983 ops/s
# Warmup Iteration   8: 160210.447 ops/s
# Warmup Iteration   9: 160499.482 ops/s
# Warmup Iteration  10: 160142.085 ops/s
# Warmup Iteration  11: 152832.766 ops/s
# Warmup Iteration  12: 133216.127 ops/s
# Warmup Iteration  13: 159924.174 ops/s
# Warmup Iteration  14: 159968.726 ops/s
# Warmup Iteration  15: 160240.097 ops/s
# Warmup Iteration  16: 160207.328 ops/s
# Warmup Iteration  17: 167331.106 ops/s
# Warmup Iteration  18: 167279.638 ops/s
# Warmup Iteration  19: 167024.733 ops/s
# Warmup Iteration  20: 167506.894 ops/s
# Warmup Iteration  21: 167351.189 ops/s
# Warmup Iteration  22: 167366.368 ops/s
# Warmup Iteration  23: 167136.657 ops/s
# Warmup Iteration  24: 167195.242 ops/s
# Warmup Iteration  25: 167501.023 ops/s
# Warmup Iteration  26: 167673.350 ops/s
# Warmup Iteration  27: 167180.393 ops/s
# Warmup Iteration  28: 167266.187 ops/s
# Warmup Iteration  29: 167702.148 ops/s
# Warmup Iteration  30: 167328.764 ops/s
Iteration   1: 167254.465 ops/s
Iteration   2: 166676.178 ops/s
Iteration   3: 166460.609 ops/s
Iteration   4: 167282.340 ops/s
Iteration   5: 167185.791 ops/s
Iteration   6: 167744.296 ops/s
Iteration   7: 167517.692 ops/s
Iteration   8: 167035.902 ops/s
Iteration   9: 167667.492 ops/s
Iteration  10: 167143.342 ops/s
Iteration  11: 167615.442 ops/s
Iteration  12: 166964.426 ops/s
Iteration  13: 167238.497 ops/s
Iteration  14: 167470.508 ops/s
Iteration  15: 167488.533 ops/s
Iteration  16: 167396.985 ops/s
Iteration  17: 167647.497 ops/s
Iteration  18: 167378.461 ops/s
Iteration  19: 167475.886 ops/s
Iteration  20: 167144.330 ops/s
Iteration  21: 167234.025 ops/s
Iteration  22: 167397.662 ops/s
Iteration  23: 166904.072 ops/s
Iteration  24: 167411.063 ops/s
Iteration  25: 167368.941 ops/s
Iteration  26: 167173.990 ops/s
Iteration  27: 166831.555 ops/s
Iteration  28: 166729.556 ops/s
Iteration  29: 167107.298 ops/s
Iteration  30: 167134.974 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_535._Benchmark.benchmark_Cluster_535":
  167236.060 ±(99.9%) 205.570 ops/s [Average]
  (min, avg, max) = (166460.609, 167236.060, 167744.296), stdev = 307.687
  CI (99.9%): [167030.491, 167441.630] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_535._Benchmark.benchmark_Cluster_535  thrpt   30  167236.060 ± 205.570  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_536._Benchmark.benchmark_Cluster_536$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_536._Benchmark.benchmark_Cluster_536

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91671.427 ops/s
# Warmup Iteration   2: 122973.134 ops/s
# Warmup Iteration   3: 189641.185 ops/s
# Warmup Iteration   4: 191989.773 ops/s
# Warmup Iteration   5: 192324.793 ops/s
# Warmup Iteration   6: 192865.825 ops/s
# Warmup Iteration   7: 192770.310 ops/s
# Warmup Iteration   8: 192964.751 ops/s
# Warmup Iteration   9: 149918.663 ops/s
# Warmup Iteration  10: 192616.594 ops/s
# Warmup Iteration  11: 192518.857 ops/s
# Warmup Iteration  12: 192685.876 ops/s
# Warmup Iteration  13: 192795.401 ops/s
# Warmup Iteration  14: 192733.934 ops/s
# Warmup Iteration  15: 192685.099 ops/s
# Warmup Iteration  16: 192308.169 ops/s
# Warmup Iteration  17: 192366.680 ops/s
# Warmup Iteration  18: 192291.784 ops/s
# Warmup Iteration  19: 192735.530 ops/s
# Warmup Iteration  20: 192792.994 ops/s
# Warmup Iteration  21: 192724.552 ops/s
# Warmup Iteration  22: 192788.304 ops/s
# Warmup Iteration  23: 192888.410 ops/s
# Warmup Iteration  24: 192370.416 ops/s
# Warmup Iteration  25: 192360.412 ops/s
# Warmup Iteration  26: 192531.422 ops/s
# Warmup Iteration  27: 192890.537 ops/s
# Warmup Iteration  28: 192645.133 ops/s
# Warmup Iteration  29: 192581.754 ops/s
# Warmup Iteration  30: 192757.059 ops/s
Iteration   1: 192600.844 ops/s
Iteration   2: 192707.029 ops/s
Iteration   3: 192674.027 ops/s
Iteration   4: 192402.216 ops/s
Iteration   5: 192575.417 ops/s
Iteration   6: 192404.731 ops/s
Iteration   7: 192302.908 ops/s
Iteration   8: 192752.920 ops/s
Iteration   9: 192208.038 ops/s
Iteration  10: 192798.378 ops/s
Iteration  11: 192854.531 ops/s
Iteration  12: 192734.441 ops/s
Iteration  13: 192648.987 ops/s
Iteration  14: 192533.132 ops/s
Iteration  15: 192887.936 ops/s
Iteration  16: 192706.798 ops/s
Iteration  17: 192839.986 ops/s
Iteration  18: 192472.721 ops/s
Iteration  19: 191755.333 ops/s
Iteration  20: 192503.832 ops/s
Iteration  21: 192112.318 ops/s
Iteration  22: 192529.673 ops/s
Iteration  23: 192749.824 ops/s
Iteration  24: 192801.831 ops/s
Iteration  25: 192871.151 ops/s
Iteration  26: 192945.875 ops/s
Iteration  27: 192547.713 ops/s
Iteration  28: 192955.617 ops/s
Iteration  29: 192795.057 ops/s
Iteration  30: 193208.244 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_536._Benchmark.benchmark_Cluster_536":
  192629.384 ±(99.9%) 191.816 ops/s [Average]
  (min, avg, max) = (191755.333, 192629.384, 193208.244), stdev = 287.102
  CI (99.9%): [192437.567, 192821.200] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_536._Benchmark.benchmark_Cluster_536  thrpt   30  192629.384 ± 191.816  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_537._Benchmark.benchmark_Cluster_537$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_537._Benchmark.benchmark_Cluster_537

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 124131.656 ops/s
# Warmup Iteration   2: 196557.202 ops/s
# Warmup Iteration   3: 275546.172 ops/s
# Warmup Iteration   4: 274088.772 ops/s
# Warmup Iteration   5: 275427.552 ops/s
# Warmup Iteration   6: 275291.194 ops/s
# Warmup Iteration   7: 251947.234 ops/s
# Warmup Iteration   8: 243334.683 ops/s
# Warmup Iteration   9: 275178.603 ops/s
# Warmup Iteration  10: 275455.592 ops/s
# Warmup Iteration  11: 275338.316 ops/s
# Warmup Iteration  12: 275294.338 ops/s
# Warmup Iteration  13: 275266.901 ops/s
# Warmup Iteration  14: 275099.986 ops/s
# Warmup Iteration  15: 274492.756 ops/s
# Warmup Iteration  16: 274660.098 ops/s
# Warmup Iteration  17: 275126.005 ops/s
# Warmup Iteration  18: 275069.214 ops/s
# Warmup Iteration  19: 275152.582 ops/s
# Warmup Iteration  20: 275450.683 ops/s
# Warmup Iteration  21: 275531.980 ops/s
# Warmup Iteration  22: 275692.438 ops/s
# Warmup Iteration  23: 275481.463 ops/s
# Warmup Iteration  24: 274617.640 ops/s
# Warmup Iteration  25: 274942.385 ops/s
# Warmup Iteration  26: 275560.710 ops/s
# Warmup Iteration  27: 275385.785 ops/s
# Warmup Iteration  28: 275127.797 ops/s
# Warmup Iteration  29: 275568.482 ops/s
# Warmup Iteration  30: 275636.088 ops/s
Iteration   1: 275496.262 ops/s
Iteration   2: 275609.301 ops/s
Iteration   3: 274906.215 ops/s
Iteration   4: 275743.509 ops/s
Iteration   5: 275957.265 ops/s
Iteration   6: 275448.028 ops/s
Iteration   7: 275521.772 ops/s
Iteration   8: 275510.126 ops/s
Iteration   9: 275566.567 ops/s
Iteration  10: 275243.063 ops/s
Iteration  11: 275996.979 ops/s
Iteration  12: 275126.313 ops/s
Iteration  13: 275796.280 ops/s
Iteration  14: 275324.840 ops/s
Iteration  15: 275407.559 ops/s
Iteration  16: 275448.347 ops/s
Iteration  17: 275077.670 ops/s
Iteration  18: 275377.498 ops/s
Iteration  19: 275244.969 ops/s
Iteration  20: 275588.236 ops/s
Iteration  21: 275251.991 ops/s
Iteration  22: 275232.197 ops/s
Iteration  23: 275491.093 ops/s
Iteration  24: 275131.744 ops/s
Iteration  25: 275372.643 ops/s
Iteration  26: 275031.494 ops/s
Iteration  27: 275643.892 ops/s
Iteration  28: 275186.901 ops/s
Iteration  29: 275053.721 ops/s
Iteration  30: 275950.206 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_537._Benchmark.benchmark_Cluster_537":
  275424.556 ±(99.9%) 189.931 ops/s [Average]
  (min, avg, max) = (274906.215, 275424.556, 275996.979), stdev = 284.279
  CI (99.9%): [275234.625, 275614.487] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_537._Benchmark.benchmark_Cluster_537  thrpt   30  275424.556 ± 189.931  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_538._Benchmark.benchmark_Cluster_538$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_538._Benchmark.benchmark_Cluster_538

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 118504.638 ops/s
# Warmup Iteration   2: 136912.766 ops/s
# Warmup Iteration   3: 209512.284 ops/s
# Warmup Iteration   4: 210347.982 ops/s
# Warmup Iteration   5: 207214.190 ops/s
# Warmup Iteration   6: 210077.372 ops/s
# Warmup Iteration   7: 210335.133 ops/s
# Warmup Iteration   8: 209333.591 ops/s
# Warmup Iteration   9: 210341.141 ops/s
# Warmup Iteration  10: 171894.840 ops/s
# Warmup Iteration  11: 204667.453 ops/s
# Warmup Iteration  12: 209242.122 ops/s
# Warmup Iteration  13: 209635.986 ops/s
# Warmup Iteration  14: 209567.530 ops/s
# Warmup Iteration  15: 210536.579 ops/s
# Warmup Iteration  16: 209907.304 ops/s
# Warmup Iteration  17: 209694.524 ops/s
# Warmup Iteration  18: 209914.021 ops/s
# Warmup Iteration  19: 209846.471 ops/s
# Warmup Iteration  20: 209806.818 ops/s
# Warmup Iteration  21: 209681.135 ops/s
# Warmup Iteration  22: 210004.393 ops/s
# Warmup Iteration  23: 211020.768 ops/s
# Warmup Iteration  24: 209911.506 ops/s
# Warmup Iteration  25: 210080.737 ops/s
# Warmup Iteration  26: 209523.892 ops/s
# Warmup Iteration  27: 209616.384 ops/s
# Warmup Iteration  28: 210691.591 ops/s
# Warmup Iteration  29: 209607.978 ops/s
# Warmup Iteration  30: 210324.873 ops/s
Iteration   1: 209044.711 ops/s
Iteration   2: 209588.459 ops/s
Iteration   3: 209474.539 ops/s
Iteration   4: 210590.835 ops/s
Iteration   5: 210176.311 ops/s
Iteration   6: 210524.966 ops/s
Iteration   7: 210344.681 ops/s
Iteration   8: 210537.163 ops/s
Iteration   9: 210100.922 ops/s
Iteration  10: 210385.748 ops/s
Iteration  11: 210579.822 ops/s
Iteration  12: 209469.694 ops/s
Iteration  13: 210703.995 ops/s
Iteration  14: 209758.058 ops/s
Iteration  15: 210489.955 ops/s
Iteration  16: 210316.479 ops/s
Iteration  17: 209589.274 ops/s
Iteration  18: 209743.507 ops/s
Iteration  19: 210386.767 ops/s
Iteration  20: 209381.482 ops/s
Iteration  21: 209812.454 ops/s
Iteration  22: 210761.561 ops/s
Iteration  23: 210130.680 ops/s
Iteration  24: 210208.535 ops/s
Iteration  25: 210919.934 ops/s
Iteration  26: 210804.611 ops/s
Iteration  27: 209992.322 ops/s
Iteration  28: 210165.474 ops/s
Iteration  29: 209337.375 ops/s
Iteration  30: 209945.636 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_538._Benchmark.benchmark_Cluster_538":
  210108.865 ±(99.9%) 331.556 ops/s [Average]
  (min, avg, max) = (209044.711, 210108.865, 210919.934), stdev = 496.257
  CI (99.9%): [209777.309, 210440.421] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_538._Benchmark.benchmark_Cluster_538  thrpt   30  210108.865 ± 331.556  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_539._Benchmark.benchmark_Cluster_539$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_539._Benchmark.benchmark_Cluster_539

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56885.858 ops/s
# Warmup Iteration   2: 103306.112 ops/s
# Warmup Iteration   3: 152530.554 ops/s
# Warmup Iteration   4: 151650.842 ops/s
# Warmup Iteration   5: 152798.855 ops/s
# Warmup Iteration   6: 152786.418 ops/s
# Warmup Iteration   7: 119994.818 ops/s
# Warmup Iteration   8: 152789.305 ops/s
# Warmup Iteration   9: 152854.454 ops/s
# Warmup Iteration  10: 152912.770 ops/s
# Warmup Iteration  11: 152602.719 ops/s
# Warmup Iteration  12: 152638.118 ops/s
# Warmup Iteration  13: 152783.250 ops/s
# Warmup Iteration  14: 153145.761 ops/s
# Warmup Iteration  15: 152781.806 ops/s
# Warmup Iteration  16: 152750.066 ops/s
# Warmup Iteration  17: 153014.714 ops/s
# Warmup Iteration  18: 152939.127 ops/s
# Warmup Iteration  19: 152871.776 ops/s
# Warmup Iteration  20: 153362.807 ops/s
# Warmup Iteration  21: 153103.308 ops/s
# Warmup Iteration  22: 153111.375 ops/s
# Warmup Iteration  23: 153101.420 ops/s
# Warmup Iteration  24: 153269.082 ops/s
# Warmup Iteration  25: 153238.698 ops/s
# Warmup Iteration  26: 153470.033 ops/s
# Warmup Iteration  27: 153251.424 ops/s
# Warmup Iteration  28: 153108.933 ops/s
# Warmup Iteration  29: 152886.402 ops/s
# Warmup Iteration  30: 153398.604 ops/s
Iteration   1: 153299.608 ops/s
Iteration   2: 153320.047 ops/s
Iteration   3: 153662.616 ops/s
Iteration   4: 153304.528 ops/s
Iteration   5: 152865.591 ops/s
Iteration   6: 153030.979 ops/s
Iteration   7: 153256.963 ops/s
Iteration   8: 152912.538 ops/s
Iteration   9: 152955.567 ops/s
Iteration  10: 152924.312 ops/s
Iteration  11: 153367.098 ops/s
Iteration  12: 152749.407 ops/s
Iteration  13: 153100.715 ops/s
Iteration  14: 152943.843 ops/s
Iteration  15: 153360.460 ops/s
Iteration  16: 152979.884 ops/s
Iteration  17: 153365.635 ops/s
Iteration  18: 153155.632 ops/s
Iteration  19: 152540.063 ops/s
Iteration  20: 153336.673 ops/s
Iteration  21: 153402.826 ops/s
Iteration  22: 152718.688 ops/s
Iteration  23: 153344.903 ops/s
Iteration  24: 152831.091 ops/s
Iteration  25: 153511.410 ops/s
Iteration  26: 152920.871 ops/s
Iteration  27: 153123.789 ops/s
Iteration  28: 153223.377 ops/s
Iteration  29: 153264.793 ops/s
Iteration  30: 153078.147 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_539._Benchmark.benchmark_Cluster_539":
  153128.402 ±(99.9%) 173.333 ops/s [Average]
  (min, avg, max) = (152540.063, 153128.402, 153662.616), stdev = 259.437
  CI (99.9%): [152955.069, 153301.735] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_539._Benchmark.benchmark_Cluster_539  thrpt   30  153128.402 ± 173.333  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_54._Benchmark.benchmark_Cluster_54$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_54._Benchmark.benchmark_Cluster_54

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63456.289 ops/s
# Warmup Iteration   2: 125978.112 ops/s
# Warmup Iteration   3: 182123.161 ops/s
# Warmup Iteration   4: 180899.987 ops/s
# Warmup Iteration   5: 182580.308 ops/s
# Warmup Iteration   6: 174502.088 ops/s
# Warmup Iteration   7: 153649.118 ops/s
# Warmup Iteration   8: 182617.080 ops/s
# Warmup Iteration   9: 183090.859 ops/s
# Warmup Iteration  10: 182872.383 ops/s
# Warmup Iteration  11: 182962.965 ops/s
# Warmup Iteration  12: 182608.943 ops/s
# Warmup Iteration  13: 182689.930 ops/s
# Warmup Iteration  14: 182761.717 ops/s
# Warmup Iteration  15: 182404.218 ops/s
# Warmup Iteration  16: 182686.947 ops/s
# Warmup Iteration  17: 182678.454 ops/s
# Warmup Iteration  18: 182706.837 ops/s
# Warmup Iteration  19: 182971.482 ops/s
# Warmup Iteration  20: 182984.945 ops/s
# Warmup Iteration  21: 183064.605 ops/s
# Warmup Iteration  22: 182671.141 ops/s
# Warmup Iteration  23: 182859.004 ops/s
# Warmup Iteration  24: 182780.332 ops/s
# Warmup Iteration  25: 183093.291 ops/s
# Warmup Iteration  26: 182735.557 ops/s
# Warmup Iteration  27: 182816.649 ops/s
# Warmup Iteration  28: 182700.681 ops/s
# Warmup Iteration  29: 182700.543 ops/s
# Warmup Iteration  30: 182637.170 ops/s
Iteration   1: 182726.869 ops/s
Iteration   2: 182885.008 ops/s
Iteration   3: 182648.635 ops/s
Iteration   4: 182559.474 ops/s
Iteration   5: 182810.631 ops/s
Iteration   6: 183099.895 ops/s
Iteration   7: 182483.271 ops/s
Iteration   8: 182899.417 ops/s
Iteration   9: 183230.406 ops/s
Iteration  10: 183009.685 ops/s
Iteration  11: 183130.114 ops/s
Iteration  12: 182851.902 ops/s
Iteration  13: 183255.218 ops/s
Iteration  14: 182770.572 ops/s
Iteration  15: 183220.912 ops/s
Iteration  16: 182939.776 ops/s
Iteration  17: 183147.814 ops/s
Iteration  18: 182702.704 ops/s
Iteration  19: 183267.295 ops/s
Iteration  20: 182530.166 ops/s
Iteration  21: 183239.495 ops/s
Iteration  22: 182913.787 ops/s
Iteration  23: 182884.566 ops/s
Iteration  24: 183117.891 ops/s
Iteration  25: 183308.948 ops/s
Iteration  26: 182918.298 ops/s
Iteration  27: 183338.596 ops/s
Iteration  28: 183186.320 ops/s
Iteration  29: 182456.222 ops/s
Iteration  30: 182934.996 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_54._Benchmark.benchmark_Cluster_54":
  182948.963 ±(99.9%) 173.614 ops/s [Average]
  (min, avg, max) = (182456.222, 182948.963, 183338.596), stdev = 259.858
  CI (99.9%): [182775.348, 183122.577] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_54._Benchmark.benchmark_Cluster_54  thrpt   30  182948.963 ± 173.614  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_540._Benchmark.benchmark_Cluster_540$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_540._Benchmark.benchmark_Cluster_540

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83550.867 ops/s
# Warmup Iteration   2: 159488.382 ops/s
# Warmup Iteration   3: 201001.798 ops/s
# Warmup Iteration   4: 202286.993 ops/s
# Warmup Iteration   5: 202280.906 ops/s
# Warmup Iteration   6: 159540.022 ops/s
# Warmup Iteration   7: 202600.944 ops/s
# Warmup Iteration   8: 202842.862 ops/s
# Warmup Iteration   9: 202547.908 ops/s
# Warmup Iteration  10: 202511.695 ops/s
# Warmup Iteration  11: 202507.748 ops/s
# Warmup Iteration  12: 202707.413 ops/s
# Warmup Iteration  13: 202573.896 ops/s
# Warmup Iteration  14: 202728.338 ops/s
# Warmup Iteration  15: 202438.389 ops/s
# Warmup Iteration  16: 202203.240 ops/s
# Warmup Iteration  17: 202662.750 ops/s
# Warmup Iteration  18: 202637.616 ops/s
# Warmup Iteration  19: 202870.674 ops/s
# Warmup Iteration  20: 202750.540 ops/s
# Warmup Iteration  21: 202655.756 ops/s
# Warmup Iteration  22: 202756.179 ops/s
# Warmup Iteration  23: 202897.113 ops/s
# Warmup Iteration  24: 202534.793 ops/s
# Warmup Iteration  25: 202705.827 ops/s
# Warmup Iteration  26: 202871.668 ops/s
# Warmup Iteration  27: 202802.859 ops/s
# Warmup Iteration  28: 202689.692 ops/s
# Warmup Iteration  29: 202645.523 ops/s
# Warmup Iteration  30: 202491.909 ops/s
Iteration   1: 202927.094 ops/s
Iteration   2: 202834.968 ops/s
Iteration   3: 202653.158 ops/s
Iteration   4: 202426.158 ops/s
Iteration   5: 203126.260 ops/s
Iteration   6: 202662.699 ops/s
Iteration   7: 202529.232 ops/s
Iteration   8: 202704.701 ops/s
Iteration   9: 202710.836 ops/s
Iteration  10: 202821.276 ops/s
Iteration  11: 202781.726 ops/s
Iteration  12: 202584.721 ops/s
Iteration  13: 202748.183 ops/s
Iteration  14: 203001.608 ops/s
Iteration  15: 202892.264 ops/s
Iteration  16: 202793.312 ops/s
Iteration  17: 202525.421 ops/s
Iteration  18: 202579.141 ops/s
Iteration  19: 202982.611 ops/s
Iteration  20: 202838.929 ops/s
Iteration  21: 202661.705 ops/s
Iteration  22: 203292.720 ops/s
Iteration  23: 202915.676 ops/s
Iteration  24: 203129.344 ops/s
Iteration  25: 202790.367 ops/s
Iteration  26: 202389.482 ops/s
Iteration  27: 202645.142 ops/s
Iteration  28: 202592.451 ops/s
Iteration  29: 203015.411 ops/s
Iteration  30: 202697.228 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_540._Benchmark.benchmark_Cluster_540":
  202775.127 ±(99.9%) 142.011 ops/s [Average]
  (min, avg, max) = (202389.482, 202775.127, 203292.720), stdev = 212.556
  CI (99.9%): [202633.116, 202917.139] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_540._Benchmark.benchmark_Cluster_540  thrpt   30  202775.127 ± 142.011  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_541._Benchmark.benchmark_Cluster_541$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_541._Benchmark.benchmark_Cluster_541

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78237.113 ops/s
# Warmup Iteration   2: 130820.162 ops/s
# Warmup Iteration   3: 167823.400 ops/s
# Warmup Iteration   4: 170569.207 ops/s
# Warmup Iteration   5: 170338.907 ops/s
# Warmup Iteration   6: 165091.088 ops/s
# Warmup Iteration   7: 140650.406 ops/s
# Warmup Iteration   8: 170109.121 ops/s
# Warmup Iteration   9: 170046.760 ops/s
# Warmup Iteration  10: 170000.066 ops/s
# Warmup Iteration  11: 170126.347 ops/s
# Warmup Iteration  12: 170020.671 ops/s
# Warmup Iteration  13: 170062.283 ops/s
# Warmup Iteration  14: 170078.971 ops/s
# Warmup Iteration  15: 170373.210 ops/s
# Warmup Iteration  16: 170363.653 ops/s
# Warmup Iteration  17: 170091.303 ops/s
# Warmup Iteration  18: 169793.178 ops/s
# Warmup Iteration  19: 169807.024 ops/s
# Warmup Iteration  20: 169787.544 ops/s
# Warmup Iteration  21: 170095.665 ops/s
# Warmup Iteration  22: 170275.297 ops/s
# Warmup Iteration  23: 170119.854 ops/s
# Warmup Iteration  24: 169900.096 ops/s
# Warmup Iteration  25: 169798.722 ops/s
# Warmup Iteration  26: 169743.283 ops/s
# Warmup Iteration  27: 170179.435 ops/s
# Warmup Iteration  28: 170086.705 ops/s
# Warmup Iteration  29: 169454.204 ops/s
# Warmup Iteration  30: 170103.356 ops/s
Iteration   1: 170294.199 ops/s
Iteration   2: 170496.701 ops/s
Iteration   3: 169802.822 ops/s
Iteration   4: 170127.470 ops/s
Iteration   5: 169947.321 ops/s
Iteration   6: 170279.487 ops/s
Iteration   7: 170148.768 ops/s
Iteration   8: 170251.184 ops/s
Iteration   9: 170159.634 ops/s
Iteration  10: 170287.194 ops/s
Iteration  11: 170190.133 ops/s
Iteration  12: 169910.232 ops/s
Iteration  13: 170254.914 ops/s
Iteration  14: 170507.763 ops/s
Iteration  15: 170373.385 ops/s
Iteration  16: 170581.376 ops/s
Iteration  17: 170276.069 ops/s
Iteration  18: 170100.969 ops/s
Iteration  19: 170172.985 ops/s
Iteration  20: 170475.570 ops/s
Iteration  21: 170222.189 ops/s
Iteration  22: 170272.522 ops/s
Iteration  23: 170160.360 ops/s
Iteration  24: 170247.753 ops/s
Iteration  25: 169969.120 ops/s
Iteration  26: 170289.100 ops/s
Iteration  27: 169970.586 ops/s
Iteration  28: 170548.463 ops/s
Iteration  29: 170061.291 ops/s
Iteration  30: 170328.850 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_541._Benchmark.benchmark_Cluster_541":
  170223.614 ±(99.9%) 127.621 ops/s [Average]
  (min, avg, max) = (169802.822, 170223.614, 170581.376), stdev = 191.018
  CI (99.9%): [170095.992, 170351.235] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_541._Benchmark.benchmark_Cluster_541  thrpt   30  170223.614 ± 127.621  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_542._Benchmark.benchmark_Cluster_542$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_542._Benchmark.benchmark_Cluster_542

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73834.579 ops/s
# Warmup Iteration   2: 134031.699 ops/s
# Warmup Iteration   3: 171790.961 ops/s
# Warmup Iteration   4: 173302.667 ops/s
# Warmup Iteration   5: 172806.493 ops/s
# Warmup Iteration   6: 136886.478 ops/s
# Warmup Iteration   7: 173457.407 ops/s
# Warmup Iteration   8: 173550.534 ops/s
# Warmup Iteration   9: 173494.994 ops/s
# Warmup Iteration  10: 173549.592 ops/s
# Warmup Iteration  11: 173418.991 ops/s
# Warmup Iteration  12: 173372.120 ops/s
# Warmup Iteration  13: 173353.079 ops/s
# Warmup Iteration  14: 173528.331 ops/s
# Warmup Iteration  15: 173099.170 ops/s
# Warmup Iteration  16: 173236.593 ops/s
# Warmup Iteration  17: 173514.266 ops/s
# Warmup Iteration  18: 173722.349 ops/s
# Warmup Iteration  19: 173459.665 ops/s
# Warmup Iteration  20: 173228.774 ops/s
# Warmup Iteration  21: 173363.155 ops/s
# Warmup Iteration  22: 173154.152 ops/s
# Warmup Iteration  23: 173529.720 ops/s
# Warmup Iteration  24: 173283.522 ops/s
# Warmup Iteration  25: 173261.932 ops/s
# Warmup Iteration  26: 173142.176 ops/s
# Warmup Iteration  27: 173322.168 ops/s
# Warmup Iteration  28: 173013.878 ops/s
# Warmup Iteration  29: 173320.890 ops/s
# Warmup Iteration  30: 173453.875 ops/s
Iteration   1: 173601.869 ops/s
Iteration   2: 173386.327 ops/s
Iteration   3: 173796.759 ops/s
Iteration   4: 173566.326 ops/s
Iteration   5: 173465.355 ops/s
Iteration   6: 173510.851 ops/s
Iteration   7: 172962.575 ops/s
Iteration   8: 173498.821 ops/s
Iteration   9: 173171.268 ops/s
Iteration  10: 173560.024 ops/s
Iteration  11: 173280.095 ops/s
Iteration  12: 172946.758 ops/s
Iteration  13: 173474.208 ops/s
Iteration  14: 173392.394 ops/s
Iteration  15: 173232.230 ops/s
Iteration  16: 173006.267 ops/s
Iteration  17: 173564.445 ops/s
Iteration  18: 173080.809 ops/s
Iteration  19: 173776.085 ops/s
Iteration  20: 173415.508 ops/s
Iteration  21: 173224.510 ops/s
Iteration  22: 173261.632 ops/s
Iteration  23: 173125.765 ops/s
Iteration  24: 173410.763 ops/s
Iteration  25: 172996.317 ops/s
Iteration  26: 173355.477 ops/s
Iteration  27: 173356.157 ops/s
Iteration  28: 173112.143 ops/s
Iteration  29: 173688.351 ops/s
Iteration  30: 173398.217 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_542._Benchmark.benchmark_Cluster_542":
  173353.944 ±(99.9%) 156.699 ops/s [Average]
  (min, avg, max) = (172946.758, 173353.944, 173796.759), stdev = 234.540
  CI (99.9%): [173197.244, 173510.643] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_542._Benchmark.benchmark_Cluster_542  thrpt   30  173353.944 ± 156.699  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_543._Benchmark.benchmark_Cluster_543$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_543._Benchmark.benchmark_Cluster_543

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 30933.995 ops/s
# Warmup Iteration   2: 61993.958 ops/s
# Warmup Iteration   3: 115438.441 ops/s
# Warmup Iteration   4: 116040.944 ops/s
# Warmup Iteration   5: 117095.394 ops/s
# Warmup Iteration   6: 116905.137 ops/s
# Warmup Iteration   7: 114641.974 ops/s
# Warmup Iteration   8: 92210.754 ops/s
# Warmup Iteration   9: 117121.447 ops/s
# Warmup Iteration  10: 117281.564 ops/s
# Warmup Iteration  11: 117251.572 ops/s
# Warmup Iteration  12: 117217.906 ops/s
# Warmup Iteration  13: 117162.541 ops/s
# Warmup Iteration  14: 117353.224 ops/s
# Warmup Iteration  15: 117334.690 ops/s
# Warmup Iteration  16: 117250.368 ops/s
# Warmup Iteration  17: 117068.964 ops/s
# Warmup Iteration  18: 116963.882 ops/s
# Warmup Iteration  19: 117091.163 ops/s
# Warmup Iteration  20: 117125.215 ops/s
# Warmup Iteration  21: 117198.861 ops/s
# Warmup Iteration  22: 117215.220 ops/s
# Warmup Iteration  23: 117024.732 ops/s
# Warmup Iteration  24: 117316.536 ops/s
# Warmup Iteration  25: 116933.114 ops/s
# Warmup Iteration  26: 116901.639 ops/s
# Warmup Iteration  27: 117207.311 ops/s
# Warmup Iteration  28: 117114.548 ops/s
# Warmup Iteration  29: 117240.901 ops/s
# Warmup Iteration  30: 117215.584 ops/s
Iteration   1: 117389.379 ops/s
Iteration   2: 117119.030 ops/s
Iteration   3: 111611.951 ops/s
Iteration   4: 106492.633 ops/s
Iteration   5: 106962.522 ops/s
Iteration   6: 107037.274 ops/s
Iteration   7: 107074.354 ops/s
Iteration   8: 107017.880 ops/s
Iteration   9: 106766.455 ops/s
Iteration  10: 106915.621 ops/s
Iteration  11: 107128.810 ops/s
Iteration  12: 106880.543 ops/s
Iteration  13: 107005.296 ops/s
Iteration  14: 106829.059 ops/s
Iteration  15: 107102.132 ops/s
Iteration  16: 106939.297 ops/s
Iteration  17: 107048.535 ops/s
Iteration  18: 107150.823 ops/s
Iteration  19: 106958.042 ops/s
Iteration  20: 106903.420 ops/s
Iteration  21: 106883.861 ops/s
Iteration  22: 106763.296 ops/s
Iteration  23: 107038.976 ops/s
Iteration  24: 106780.109 ops/s
Iteration  25: 106838.270 ops/s
Iteration  26: 106881.492 ops/s
Iteration  27: 107129.689 ops/s
Iteration  28: 107101.668 ops/s
Iteration  29: 106924.037 ops/s
Iteration  30: 107230.534 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_543._Benchmark.benchmark_Cluster_543":
  107796.833 ±(99.9%) 1811.694 ops/s [Average]
  (min, avg, max) = (106492.633, 107796.833, 117389.379), stdev = 2711.658
  CI (99.9%): [105985.139, 109608.527] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_543._Benchmark.benchmark_Cluster_543  thrpt   30  107796.833 ± 1811.694  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_544._Benchmark.benchmark_Cluster_544$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_544._Benchmark.benchmark_Cluster_544

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50235.051 ops/s
# Warmup Iteration   2: 104508.145 ops/s
# Warmup Iteration   3: 154052.547 ops/s
# Warmup Iteration   4: 153581.733 ops/s
# Warmup Iteration   5: 154235.235 ops/s
# Warmup Iteration   6: 138640.563 ops/s
# Warmup Iteration   7: 139224.998 ops/s
# Warmup Iteration   8: 154006.419 ops/s
# Warmup Iteration   9: 154284.153 ops/s
# Warmup Iteration  10: 154305.891 ops/s
# Warmup Iteration  11: 154465.517 ops/s
# Warmup Iteration  12: 154485.174 ops/s
# Warmup Iteration  13: 154460.136 ops/s
# Warmup Iteration  14: 154628.545 ops/s
# Warmup Iteration  15: 154717.241 ops/s
# Warmup Iteration  16: 154690.162 ops/s
# Warmup Iteration  17: 154569.077 ops/s
# Warmup Iteration  18: 154216.064 ops/s
# Warmup Iteration  19: 154466.201 ops/s
# Warmup Iteration  20: 154330.236 ops/s
# Warmup Iteration  21: 154285.121 ops/s
# Warmup Iteration  22: 154421.867 ops/s
# Warmup Iteration  23: 154530.567 ops/s
# Warmup Iteration  24: 154540.199 ops/s
# Warmup Iteration  25: 154736.197 ops/s
# Warmup Iteration  26: 154566.214 ops/s
# Warmup Iteration  27: 154683.683 ops/s
# Warmup Iteration  28: 154589.371 ops/s
# Warmup Iteration  29: 154703.870 ops/s
# Warmup Iteration  30: 154477.672 ops/s
Iteration   1: 154465.680 ops/s
Iteration   2: 154436.884 ops/s
Iteration   3: 154649.977 ops/s
Iteration   4: 154561.459 ops/s
Iteration   5: 154481.962 ops/s
Iteration   6: 154575.786 ops/s
Iteration   7: 154666.067 ops/s
Iteration   8: 154600.462 ops/s
Iteration   9: 154598.474 ops/s
Iteration  10: 154667.154 ops/s
Iteration  11: 154701.741 ops/s
Iteration  12: 154434.563 ops/s
Iteration  13: 154531.857 ops/s
Iteration  14: 154602.818 ops/s
Iteration  15: 154777.949 ops/s
Iteration  16: 154518.271 ops/s
Iteration  17: 154553.160 ops/s
Iteration  18: 154302.848 ops/s
Iteration  19: 154535.768 ops/s
Iteration  20: 154410.447 ops/s
Iteration  21: 154222.615 ops/s
Iteration  22: 154138.651 ops/s
Iteration  23: 154153.447 ops/s
Iteration  24: 154518.311 ops/s
Iteration  25: 154195.005 ops/s
Iteration  26: 154388.951 ops/s
Iteration  27: 154131.156 ops/s
Iteration  28: 154481.552 ops/s
Iteration  29: 154451.936 ops/s
Iteration  30: 154619.770 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_544._Benchmark.benchmark_Cluster_544":
  154479.157 ±(99.9%) 115.805 ops/s [Average]
  (min, avg, max) = (154131.156, 154479.157, 154777.949), stdev = 173.332
  CI (99.9%): [154363.352, 154594.963] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_544._Benchmark.benchmark_Cluster_544  thrpt   30  154479.157 ± 115.805  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_545._Benchmark.benchmark_Cluster_545$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_545._Benchmark.benchmark_Cluster_545

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66661.305 ops/s
# Warmup Iteration   2: 104753.513 ops/s
# Warmup Iteration   3: 173874.788 ops/s
# Warmup Iteration   4: 172137.926 ops/s
# Warmup Iteration   5: 174353.312 ops/s
# Warmup Iteration   6: 173282.789 ops/s
# Warmup Iteration   7: 173320.661 ops/s
# Warmup Iteration   8: 137162.907 ops/s
# Warmup Iteration   9: 173836.518 ops/s
# Warmup Iteration  10: 173164.460 ops/s
# Warmup Iteration  11: 173175.733 ops/s
# Warmup Iteration  12: 173550.237 ops/s
# Warmup Iteration  13: 173498.093 ops/s
# Warmup Iteration  14: 173595.686 ops/s
# Warmup Iteration  15: 173517.098 ops/s
# Warmup Iteration  16: 173178.224 ops/s
# Warmup Iteration  17: 179956.013 ops/s
# Warmup Iteration  18: 179603.178 ops/s
# Warmup Iteration  19: 179811.195 ops/s
# Warmup Iteration  20: 179916.901 ops/s
# Warmup Iteration  21: 180328.457 ops/s
# Warmup Iteration  22: 180258.001 ops/s
# Warmup Iteration  23: 179919.670 ops/s
# Warmup Iteration  24: 179775.500 ops/s
# Warmup Iteration  25: 180204.403 ops/s
# Warmup Iteration  26: 180126.206 ops/s
# Warmup Iteration  27: 180228.341 ops/s
# Warmup Iteration  28: 180120.371 ops/s
# Warmup Iteration  29: 180349.105 ops/s
# Warmup Iteration  30: 180248.465 ops/s
Iteration   1: 180928.404 ops/s
Iteration   2: 180475.620 ops/s
Iteration   3: 180640.329 ops/s
Iteration   4: 179850.386 ops/s
Iteration   5: 179895.456 ops/s
Iteration   6: 180510.632 ops/s
Iteration   7: 179748.880 ops/s
Iteration   8: 179848.715 ops/s
Iteration   9: 179837.672 ops/s
Iteration  10: 180190.351 ops/s
Iteration  11: 180120.587 ops/s
Iteration  12: 180183.870 ops/s
Iteration  13: 180394.696 ops/s
Iteration  14: 180425.258 ops/s
Iteration  15: 179915.844 ops/s
Iteration  16: 180371.357 ops/s
Iteration  17: 179746.131 ops/s
Iteration  18: 180460.090 ops/s
Iteration  19: 180239.490 ops/s
Iteration  20: 180390.084 ops/s
Iteration  21: 179726.122 ops/s
Iteration  22: 180302.215 ops/s
Iteration  23: 179593.196 ops/s
Iteration  24: 180497.974 ops/s
Iteration  25: 180272.783 ops/s
Iteration  26: 180680.566 ops/s
Iteration  27: 180755.963 ops/s
Iteration  28: 179677.806 ops/s
Iteration  29: 180672.045 ops/s
Iteration  30: 179717.955 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_545._Benchmark.benchmark_Cluster_545":
  180202.349 ±(99.9%) 249.735 ops/s [Average]
  (min, avg, max) = (179593.196, 180202.349, 180928.404), stdev = 373.792
  CI (99.9%): [179952.614, 180452.085] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_545._Benchmark.benchmark_Cluster_545  thrpt   30  180202.349 ± 249.735  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_546._Benchmark.benchmark_Cluster_546$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_546._Benchmark.benchmark_Cluster_546

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79371.747 ops/s
# Warmup Iteration   2: 135969.244 ops/s
# Warmup Iteration   3: 171346.941 ops/s
# Warmup Iteration   4: 172572.781 ops/s
# Warmup Iteration   5: 172264.364 ops/s
# Warmup Iteration   6: 147675.744 ops/s
# Warmup Iteration   7: 163005.085 ops/s
# Warmup Iteration   8: 172715.539 ops/s
# Warmup Iteration   9: 172222.588 ops/s
# Warmup Iteration  10: 172326.084 ops/s
# Warmup Iteration  11: 172677.614 ops/s
# Warmup Iteration  12: 172642.888 ops/s
# Warmup Iteration  13: 172737.902 ops/s
# Warmup Iteration  14: 172653.880 ops/s
# Warmup Iteration  15: 172941.137 ops/s
# Warmup Iteration  16: 172735.390 ops/s
# Warmup Iteration  17: 172848.145 ops/s
# Warmup Iteration  18: 172803.327 ops/s
# Warmup Iteration  19: 172856.238 ops/s
# Warmup Iteration  20: 172747.968 ops/s
# Warmup Iteration  21: 172248.172 ops/s
# Warmup Iteration  22: 172779.672 ops/s
# Warmup Iteration  23: 172794.472 ops/s
# Warmup Iteration  24: 172888.072 ops/s
# Warmup Iteration  25: 172848.405 ops/s
# Warmup Iteration  26: 172460.788 ops/s
# Warmup Iteration  27: 172796.899 ops/s
# Warmup Iteration  28: 172725.889 ops/s
# Warmup Iteration  29: 172651.219 ops/s
# Warmup Iteration  30: 172593.261 ops/s
Iteration   1: 172560.660 ops/s
Iteration   2: 172554.400 ops/s
Iteration   3: 172816.912 ops/s
Iteration   4: 172649.400 ops/s
Iteration   5: 172568.695 ops/s
Iteration   6: 172660.987 ops/s
Iteration   7: 172692.100 ops/s
Iteration   8: 172539.541 ops/s
Iteration   9: 172695.143 ops/s
Iteration  10: 172315.990 ops/s
Iteration  11: 172786.885 ops/s
Iteration  12: 172547.222 ops/s
Iteration  13: 172361.343 ops/s
Iteration  14: 172766.247 ops/s
Iteration  15: 172522.727 ops/s
Iteration  16: 172597.156 ops/s
Iteration  17: 172518.665 ops/s
Iteration  18: 172623.079 ops/s
Iteration  19: 172402.497 ops/s
Iteration  20: 172908.175 ops/s
Iteration  21: 172709.091 ops/s
Iteration  22: 172765.402 ops/s
Iteration  23: 172687.980 ops/s
Iteration  24: 172654.918 ops/s
Iteration  25: 172288.363 ops/s
Iteration  26: 172750.649 ops/s
Iteration  27: 172517.733 ops/s
Iteration  28: 172900.556 ops/s
Iteration  29: 172648.346 ops/s
Iteration  30: 172783.802 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_546._Benchmark.benchmark_Cluster_546":
  172626.489 ±(99.9%) 104.619 ops/s [Average]
  (min, avg, max) = (172288.363, 172626.489, 172908.175), stdev = 156.589
  CI (99.9%): [172521.870, 172731.108] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_546._Benchmark.benchmark_Cluster_546  thrpt   30  172626.489 ± 104.619  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_547._Benchmark.benchmark_Cluster_547$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_547._Benchmark.benchmark_Cluster_547

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 105513.392 ops/s
# Warmup Iteration   2: 154499.255 ops/s
# Warmup Iteration   3: 213417.426 ops/s
# Warmup Iteration   4: 212127.785 ops/s
# Warmup Iteration   5: 213148.331 ops/s
# Warmup Iteration   6: 213125.049 ops/s
# Warmup Iteration   7: 212895.633 ops/s
# Warmup Iteration   8: 170202.987 ops/s
# Warmup Iteration   9: 212788.203 ops/s
# Warmup Iteration  10: 212769.360 ops/s
# Warmup Iteration  11: 213016.738 ops/s
# Warmup Iteration  12: 212647.294 ops/s
# Warmup Iteration  13: 212856.772 ops/s
# Warmup Iteration  14: 212823.429 ops/s
# Warmup Iteration  15: 212673.942 ops/s
# Warmup Iteration  16: 212503.831 ops/s
# Warmup Iteration  17: 212831.536 ops/s
# Warmup Iteration  18: 212595.322 ops/s
# Warmup Iteration  19: 212530.146 ops/s
# Warmup Iteration  20: 212831.120 ops/s
# Warmup Iteration  21: 212388.805 ops/s
# Warmup Iteration  22: 212795.073 ops/s
# Warmup Iteration  23: 212799.445 ops/s
# Warmup Iteration  24: 212915.302 ops/s
# Warmup Iteration  25: 212847.773 ops/s
# Warmup Iteration  26: 212804.976 ops/s
# Warmup Iteration  27: 213045.685 ops/s
# Warmup Iteration  28: 213118.283 ops/s
# Warmup Iteration  29: 212870.776 ops/s
# Warmup Iteration  30: 212917.126 ops/s
Iteration   1: 212991.484 ops/s
Iteration   2: 213170.813 ops/s
Iteration   3: 213292.048 ops/s
Iteration   4: 212946.322 ops/s
Iteration   5: 213001.375 ops/s
Iteration   6: 212623.480 ops/s
Iteration   7: 212836.143 ops/s
Iteration   8: 212962.028 ops/s
Iteration   9: 213213.923 ops/s
Iteration  10: 212642.311 ops/s
Iteration  11: 212438.224 ops/s
Iteration  12: 213154.654 ops/s
Iteration  13: 212639.062 ops/s
Iteration  14: 212349.518 ops/s
Iteration  15: 212698.946 ops/s
Iteration  16: 213033.885 ops/s
Iteration  17: 213205.218 ops/s
Iteration  18: 212821.569 ops/s
Iteration  19: 213278.447 ops/s
Iteration  20: 212880.781 ops/s
Iteration  21: 213136.022 ops/s
Iteration  22: 212990.681 ops/s
Iteration  23: 212749.608 ops/s
Iteration  24: 213153.162 ops/s
Iteration  25: 212719.490 ops/s
Iteration  26: 212784.112 ops/s
Iteration  27: 212888.956 ops/s
Iteration  28: 212708.220 ops/s
Iteration  29: 212452.022 ops/s
Iteration  30: 212245.962 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_547._Benchmark.benchmark_Cluster_547":
  212866.949 ±(99.9%) 187.206 ops/s [Average]
  (min, avg, max) = (212245.962, 212866.949, 213292.048), stdev = 280.201
  CI (99.9%): [212679.743, 213054.154] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_547._Benchmark.benchmark_Cluster_547  thrpt   30  212866.949 ± 187.206  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_548._Benchmark.benchmark_Cluster_548$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_548._Benchmark.benchmark_Cluster_548

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71733.063 ops/s
# Warmup Iteration   2: 95170.311 ops/s
# Warmup Iteration   3: 143986.546 ops/s
# Warmup Iteration   4: 147110.449 ops/s
# Warmup Iteration   5: 145324.064 ops/s
# Warmup Iteration   6: 147214.039 ops/s
# Warmup Iteration   7: 147674.014 ops/s
# Warmup Iteration   8: 147279.900 ops/s
# Warmup Iteration   9: 147166.195 ops/s
# Warmup Iteration  10: 115236.483 ops/s
# Warmup Iteration  11: 147479.147 ops/s
# Warmup Iteration  12: 147319.058 ops/s
# Warmup Iteration  13: 147627.350 ops/s
# Warmup Iteration  14: 147211.404 ops/s
# Warmup Iteration  15: 147632.430 ops/s
# Warmup Iteration  16: 147588.473 ops/s
# Warmup Iteration  17: 154389.647 ops/s
# Warmup Iteration  18: 154246.587 ops/s
# Warmup Iteration  19: 154427.803 ops/s
# Warmup Iteration  20: 154269.047 ops/s
# Warmup Iteration  21: 154445.773 ops/s
# Warmup Iteration  22: 154565.158 ops/s
# Warmup Iteration  23: 154703.476 ops/s
# Warmup Iteration  24: 154681.347 ops/s
# Warmup Iteration  25: 154700.330 ops/s
# Warmup Iteration  26: 154536.041 ops/s
# Warmup Iteration  27: 154358.955 ops/s
# Warmup Iteration  28: 154558.666 ops/s
# Warmup Iteration  29: 154519.046 ops/s
# Warmup Iteration  30: 154473.835 ops/s
Iteration   1: 154113.144 ops/s
Iteration   2: 154941.427 ops/s
Iteration   3: 154621.184 ops/s
Iteration   4: 154478.978 ops/s
Iteration   5: 154774.015 ops/s
Iteration   6: 154936.062 ops/s
Iteration   7: 154596.665 ops/s
Iteration   8: 154702.545 ops/s
Iteration   9: 154246.111 ops/s
Iteration  10: 154224.910 ops/s
Iteration  11: 154249.524 ops/s
Iteration  12: 154864.677 ops/s
Iteration  13: 154107.123 ops/s
Iteration  14: 154717.338 ops/s
Iteration  15: 154351.476 ops/s
Iteration  16: 154525.218 ops/s
Iteration  17: 154161.684 ops/s
Iteration  18: 154772.195 ops/s
Iteration  19: 154313.654 ops/s
Iteration  20: 154609.500 ops/s
Iteration  21: 154696.767 ops/s
Iteration  22: 154695.585 ops/s
Iteration  23: 154143.333 ops/s
Iteration  24: 154441.439 ops/s
Iteration  25: 154923.843 ops/s
Iteration  26: 154491.247 ops/s
Iteration  27: 154984.969 ops/s
Iteration  28: 154751.866 ops/s
Iteration  29: 154755.050 ops/s
Iteration  30: 154863.923 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_548._Benchmark.benchmark_Cluster_548":
  154568.515 ±(99.9%) 184.573 ops/s [Average]
  (min, avg, max) = (154107.123, 154568.515, 154984.969), stdev = 276.261
  CI (99.9%): [154383.942, 154753.088] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_548._Benchmark.benchmark_Cluster_548  thrpt   30  154568.515 ± 184.573  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_549._Benchmark.benchmark_Cluster_549$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_549._Benchmark.benchmark_Cluster_549

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93900.010 ops/s
# Warmup Iteration   2: 99632.517 ops/s
# Warmup Iteration   3: 114239.574 ops/s
# Warmup Iteration   4: 136250.655 ops/s
# Warmup Iteration   5: 135896.404 ops/s
# Warmup Iteration   6: 135414.560 ops/s
# Warmup Iteration   7: 135081.576 ops/s
# Warmup Iteration   8: 135953.400 ops/s
# Warmup Iteration   9: 135328.752 ops/s
# Warmup Iteration  10: 135327.725 ops/s
# Warmup Iteration  11: 135516.756 ops/s
# Warmup Iteration  12: 135816.111 ops/s
# Warmup Iteration  13: 135642.874 ops/s
# Warmup Iteration  14: 134416.819 ops/s
# Warmup Iteration  15: 107030.444 ops/s
# Warmup Iteration  16: 136016.822 ops/s
# Warmup Iteration  17: 141892.045 ops/s
# Warmup Iteration  18: 141494.489 ops/s
# Warmup Iteration  19: 141415.546 ops/s
# Warmup Iteration  20: 141601.323 ops/s
# Warmup Iteration  21: 141641.113 ops/s
# Warmup Iteration  22: 141356.185 ops/s
# Warmup Iteration  23: 141597.863 ops/s
# Warmup Iteration  24: 142012.707 ops/s
# Warmup Iteration  25: 141519.270 ops/s
# Warmup Iteration  26: 141807.836 ops/s
# Warmup Iteration  27: 141619.115 ops/s
# Warmup Iteration  28: 141110.224 ops/s
# Warmup Iteration  29: 141257.984 ops/s
# Warmup Iteration  30: 141416.933 ops/s
Iteration   1: 141728.387 ops/s
Iteration   2: 141740.975 ops/s
Iteration   3: 141790.988 ops/s
Iteration   4: 141178.656 ops/s
Iteration   5: 141455.781 ops/s
Iteration   6: 141572.614 ops/s
Iteration   7: 141628.888 ops/s
Iteration   8: 141537.319 ops/s
Iteration   9: 141543.923 ops/s
Iteration  10: 141719.594 ops/s
Iteration  11: 141934.377 ops/s
Iteration  12: 141723.885 ops/s
Iteration  13: 141807.899 ops/s
Iteration  14: 141556.828 ops/s
Iteration  15: 142272.867 ops/s
Iteration  16: 141466.758 ops/s
Iteration  17: 141749.986 ops/s
Iteration  18: 141624.485 ops/s
Iteration  19: 141770.393 ops/s
Iteration  20: 141981.898 ops/s
Iteration  21: 141811.664 ops/s
Iteration  22: 141601.721 ops/s
Iteration  23: 141564.705 ops/s
Iteration  24: 141909.926 ops/s
Iteration  25: 142237.305 ops/s
Iteration  26: 142110.241 ops/s
Iteration  27: 141803.723 ops/s
Iteration  28: 141995.339 ops/s
Iteration  29: 141570.191 ops/s
Iteration  30: 141870.267 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_549._Benchmark.benchmark_Cluster_549":
  141742.053 ±(99.9%) 157.412 ops/s [Average]
  (min, avg, max) = (141178.656, 141742.053, 142272.867), stdev = 235.607
  CI (99.9%): [141584.641, 141899.465] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_549._Benchmark.benchmark_Cluster_549  thrpt   30  141742.053 ± 157.412  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_55._Benchmark.benchmark_Cluster_55$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_55._Benchmark.benchmark_Cluster_55

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86472.573 ops/s
# Warmup Iteration   2: 99324.801 ops/s
# Warmup Iteration   3: 136313.025 ops/s
# Warmup Iteration   4: 148500.499 ops/s
# Warmup Iteration   5: 148392.501 ops/s
# Warmup Iteration   6: 146753.552 ops/s
# Warmup Iteration   7: 147767.675 ops/s
# Warmup Iteration   8: 148465.432 ops/s
# Warmup Iteration   9: 148199.647 ops/s
# Warmup Iteration  10: 148381.448 ops/s
# Warmup Iteration  11: 143646.158 ops/s
# Warmup Iteration  12: 119574.312 ops/s
# Warmup Iteration  13: 148193.430 ops/s
# Warmup Iteration  14: 148497.496 ops/s
# Warmup Iteration  15: 148359.026 ops/s
# Warmup Iteration  16: 147914.677 ops/s
# Warmup Iteration  17: 154723.340 ops/s
# Warmup Iteration  18: 154549.481 ops/s
# Warmup Iteration  19: 154429.709 ops/s
# Warmup Iteration  20: 154192.956 ops/s
# Warmup Iteration  21: 154887.929 ops/s
# Warmup Iteration  22: 154608.591 ops/s
# Warmup Iteration  23: 154544.105 ops/s
# Warmup Iteration  24: 154857.151 ops/s
# Warmup Iteration  25: 154635.231 ops/s
# Warmup Iteration  26: 153922.499 ops/s
# Warmup Iteration  27: 153817.436 ops/s
# Warmup Iteration  28: 154453.948 ops/s
# Warmup Iteration  29: 154248.337 ops/s
# Warmup Iteration  30: 154497.648 ops/s
Iteration   1: 154312.462 ops/s
Iteration   2: 154786.629 ops/s
Iteration   3: 154152.373 ops/s
Iteration   4: 153866.977 ops/s
Iteration   5: 154378.116 ops/s
Iteration   6: 154694.709 ops/s
Iteration   7: 154574.529 ops/s
Iteration   8: 154435.010 ops/s
Iteration   9: 154638.483 ops/s
Iteration  10: 154266.514 ops/s
Iteration  11: 154777.632 ops/s
Iteration  12: 153569.392 ops/s
Iteration  13: 154504.194 ops/s
Iteration  14: 154174.602 ops/s
Iteration  15: 154370.005 ops/s
Iteration  16: 154549.204 ops/s
Iteration  17: 154203.409 ops/s
Iteration  18: 154838.102 ops/s
Iteration  19: 154230.836 ops/s
Iteration  20: 154407.488 ops/s
Iteration  21: 154851.727 ops/s
Iteration  22: 154602.796 ops/s
Iteration  23: 154724.719 ops/s
Iteration  24: 154502.851 ops/s
Iteration  25: 154670.542 ops/s
Iteration  26: 154749.613 ops/s
Iteration  27: 154161.074 ops/s
Iteration  28: 154469.756 ops/s
Iteration  29: 154949.791 ops/s
Iteration  30: 154489.885 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_55._Benchmark.benchmark_Cluster_55":
  154463.447 ±(99.9%) 203.143 ops/s [Average]
  (min, avg, max) = (153569.392, 154463.447, 154949.791), stdev = 304.055
  CI (99.9%): [154260.304, 154666.591] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_55._Benchmark.benchmark_Cluster_55  thrpt   30  154463.447 ± 203.143  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_550._Benchmark.benchmark_Cluster_550$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_550._Benchmark.benchmark_Cluster_550

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 99578.922 ops/s
# Warmup Iteration   2: 108824.213 ops/s
# Warmup Iteration   3: 136821.777 ops/s
# Warmup Iteration   4: 153492.137 ops/s
# Warmup Iteration   5: 153230.932 ops/s
# Warmup Iteration   6: 152590.601 ops/s
# Warmup Iteration   7: 153759.627 ops/s
# Warmup Iteration   8: 153644.407 ops/s
# Warmup Iteration   9: 153575.242 ops/s
# Warmup Iteration  10: 153203.370 ops/s
# Warmup Iteration  11: 153255.930 ops/s
# Warmup Iteration  12: 153618.418 ops/s
# Warmup Iteration  13: 121487.864 ops/s
# Warmup Iteration  14: 152667.188 ops/s
# Warmup Iteration  15: 152290.059 ops/s
# Warmup Iteration  16: 152490.460 ops/s
# Warmup Iteration  17: 160720.858 ops/s
# Warmup Iteration  18: 160455.676 ops/s
# Warmup Iteration  19: 160399.826 ops/s
# Warmup Iteration  20: 160228.388 ops/s
# Warmup Iteration  21: 159888.761 ops/s
# Warmup Iteration  22: 160283.306 ops/s
# Warmup Iteration  23: 160079.521 ops/s
# Warmup Iteration  24: 160378.885 ops/s
# Warmup Iteration  25: 160541.499 ops/s
# Warmup Iteration  26: 160504.408 ops/s
# Warmup Iteration  27: 160552.930 ops/s
# Warmup Iteration  28: 160341.995 ops/s
# Warmup Iteration  29: 160270.545 ops/s
# Warmup Iteration  30: 160591.401 ops/s
Iteration   1: 160452.639 ops/s
Iteration   2: 160719.525 ops/s
Iteration   3: 160571.588 ops/s
Iteration   4: 160055.630 ops/s
Iteration   5: 160346.660 ops/s
Iteration   6: 160348.438 ops/s
Iteration   7: 160550.739 ops/s
Iteration   8: 160811.692 ops/s
Iteration   9: 160092.864 ops/s
Iteration  10: 160419.312 ops/s
Iteration  11: 160527.354 ops/s
Iteration  12: 160228.370 ops/s
Iteration  13: 160173.869 ops/s
Iteration  14: 160136.215 ops/s
Iteration  15: 160391.575 ops/s
Iteration  16: 160650.598 ops/s
Iteration  17: 160439.065 ops/s
Iteration  18: 160789.704 ops/s
Iteration  19: 160833.849 ops/s
Iteration  20: 160653.785 ops/s
Iteration  21: 160805.918 ops/s
Iteration  22: 160417.038 ops/s
Iteration  23: 160749.288 ops/s
Iteration  24: 160712.350 ops/s
Iteration  25: 160314.770 ops/s
Iteration  26: 160413.459 ops/s
Iteration  27: 160125.700 ops/s
Iteration  28: 160709.104 ops/s
Iteration  29: 160587.283 ops/s
Iteration  30: 160012.490 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_550._Benchmark.benchmark_Cluster_550":
  160468.029 ±(99.9%) 165.982 ops/s [Average]
  (min, avg, max) = (160012.490, 160468.029, 160833.849), stdev = 248.434
  CI (99.9%): [160302.047, 160634.011] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_550._Benchmark.benchmark_Cluster_550  thrpt   30  160468.029 ± 165.982  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_551._Benchmark.benchmark_Cluster_551$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_551._Benchmark.benchmark_Cluster_551

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70863.125 ops/s
# Warmup Iteration   2: 132878.942 ops/s
# Warmup Iteration   3: 173259.621 ops/s
# Warmup Iteration   4: 174516.891 ops/s
# Warmup Iteration   5: 173912.091 ops/s
# Warmup Iteration   6: 137752.585 ops/s
# Warmup Iteration   7: 174767.923 ops/s
# Warmup Iteration   8: 174541.576 ops/s
# Warmup Iteration   9: 174498.511 ops/s
# Warmup Iteration  10: 174559.761 ops/s
# Warmup Iteration  11: 174642.865 ops/s
# Warmup Iteration  12: 174462.578 ops/s
# Warmup Iteration  13: 174495.085 ops/s
# Warmup Iteration  14: 174558.712 ops/s
# Warmup Iteration  15: 174450.008 ops/s
# Warmup Iteration  16: 174646.428 ops/s
# Warmup Iteration  17: 174666.551 ops/s
# Warmup Iteration  18: 174342.457 ops/s
# Warmup Iteration  19: 174469.293 ops/s
# Warmup Iteration  20: 174275.879 ops/s
# Warmup Iteration  21: 174533.505 ops/s
# Warmup Iteration  22: 174250.599 ops/s
# Warmup Iteration  23: 174493.381 ops/s
# Warmup Iteration  24: 174226.309 ops/s
# Warmup Iteration  25: 173948.027 ops/s
# Warmup Iteration  26: 174416.303 ops/s
# Warmup Iteration  27: 174542.877 ops/s
# Warmup Iteration  28: 174338.196 ops/s
# Warmup Iteration  29: 174677.752 ops/s
# Warmup Iteration  30: 174535.577 ops/s
Iteration   1: 174592.311 ops/s
Iteration   2: 174613.536 ops/s
Iteration   3: 174570.189 ops/s
Iteration   4: 174415.148 ops/s
Iteration   5: 174328.461 ops/s
Iteration   6: 173703.680 ops/s
Iteration   7: 174725.211 ops/s
Iteration   8: 174722.535 ops/s
Iteration   9: 174447.634 ops/s
Iteration  10: 174258.474 ops/s
Iteration  11: 174000.554 ops/s
Iteration  12: 174546.517 ops/s
Iteration  13: 174456.004 ops/s
Iteration  14: 174489.321 ops/s
Iteration  15: 174440.125 ops/s
Iteration  16: 174142.072 ops/s
Iteration  17: 174749.606 ops/s
Iteration  18: 174079.718 ops/s
Iteration  19: 174625.863 ops/s
Iteration  20: 174035.582 ops/s
Iteration  21: 174440.720 ops/s
Iteration  22: 174373.886 ops/s
Iteration  23: 174338.121 ops/s
Iteration  24: 174121.032 ops/s
Iteration  25: 174234.167 ops/s
Iteration  26: 174308.759 ops/s
Iteration  27: 174262.117 ops/s
Iteration  28: 174573.248 ops/s
Iteration  29: 174554.001 ops/s
Iteration  30: 174520.326 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_551._Benchmark.benchmark_Cluster_551":
  174388.964 ±(99.9%) 162.053 ops/s [Average]
  (min, avg, max) = (173703.680, 174388.964, 174749.606), stdev = 242.553
  CI (99.9%): [174226.911, 174551.017] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_551._Benchmark.benchmark_Cluster_551  thrpt   30  174388.964 ± 162.053  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_552._Benchmark.benchmark_Cluster_552$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_552._Benchmark.benchmark_Cluster_552

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63621.971 ops/s
# Warmup Iteration   2: 143562.054 ops/s
# Warmup Iteration   3: 178175.724 ops/s
# Warmup Iteration   4: 179356.320 ops/s
# Warmup Iteration   5: 142656.760 ops/s
# Warmup Iteration   6: 179538.932 ops/s
# Warmup Iteration   7: 179596.118 ops/s
# Warmup Iteration   8: 179690.669 ops/s
# Warmup Iteration   9: 179665.497 ops/s
# Warmup Iteration  10: 179626.809 ops/s
# Warmup Iteration  11: 179657.253 ops/s
# Warmup Iteration  12: 179441.296 ops/s
# Warmup Iteration  13: 179777.582 ops/s
# Warmup Iteration  14: 179470.173 ops/s
# Warmup Iteration  15: 179470.524 ops/s
# Warmup Iteration  16: 179679.258 ops/s
# Warmup Iteration  17: 179575.403 ops/s
# Warmup Iteration  18: 179238.604 ops/s
# Warmup Iteration  19: 179410.602 ops/s
# Warmup Iteration  20: 179476.333 ops/s
# Warmup Iteration  21: 179419.118 ops/s
# Warmup Iteration  22: 179540.222 ops/s
# Warmup Iteration  23: 179683.009 ops/s
# Warmup Iteration  24: 179687.659 ops/s
# Warmup Iteration  25: 179686.412 ops/s
# Warmup Iteration  26: 179599.269 ops/s
# Warmup Iteration  27: 179450.302 ops/s
# Warmup Iteration  28: 179455.130 ops/s
# Warmup Iteration  29: 179546.035 ops/s
# Warmup Iteration  30: 179674.996 ops/s
Iteration   1: 179532.239 ops/s
Iteration   2: 179876.587 ops/s
Iteration   3: 178991.595 ops/s
Iteration   4: 179313.536 ops/s
Iteration   5: 179769.078 ops/s
Iteration   6: 179629.069 ops/s
Iteration   7: 179569.631 ops/s
Iteration   8: 179568.745 ops/s
Iteration   9: 179582.718 ops/s
Iteration  10: 179634.844 ops/s
Iteration  11: 179490.400 ops/s
Iteration  12: 179646.896 ops/s
Iteration  13: 179475.371 ops/s
Iteration  14: 179332.388 ops/s
Iteration  15: 179731.816 ops/s
Iteration  16: 179752.635 ops/s
Iteration  17: 179569.036 ops/s
Iteration  18: 179749.981 ops/s
Iteration  19: 179796.068 ops/s
Iteration  20: 179771.651 ops/s
Iteration  21: 179711.876 ops/s
Iteration  22: 179470.975 ops/s
Iteration  23: 179738.767 ops/s
Iteration  24: 179641.059 ops/s
Iteration  25: 179663.008 ops/s
Iteration  26: 179529.255 ops/s
Iteration  27: 179351.545 ops/s
Iteration  28: 179613.012 ops/s
Iteration  29: 179523.662 ops/s
Iteration  30: 179735.311 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_552._Benchmark.benchmark_Cluster_552":
  179592.092 ±(99.9%) 120.464 ops/s [Average]
  (min, avg, max) = (178991.595, 179592.092, 179876.587), stdev = 180.305
  CI (99.9%): [179471.628, 179712.556] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_552._Benchmark.benchmark_Cluster_552  thrpt   30  179592.092 ± 120.464  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_553._Benchmark.benchmark_Cluster_553$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_553._Benchmark.benchmark_Cluster_553

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 99697.802 ops/s
# Warmup Iteration   2: 164810.360 ops/s
# Warmup Iteration   3: 222406.339 ops/s
# Warmup Iteration   4: 221090.184 ops/s
# Warmup Iteration   5: 221992.526 ops/s
# Warmup Iteration   6: 222725.402 ops/s
# Warmup Iteration   7: 177789.132 ops/s
# Warmup Iteration   8: 221912.593 ops/s
# Warmup Iteration   9: 222864.498 ops/s
# Warmup Iteration  10: 222617.695 ops/s
# Warmup Iteration  11: 222601.890 ops/s
# Warmup Iteration  12: 222536.557 ops/s
# Warmup Iteration  13: 222643.128 ops/s
# Warmup Iteration  14: 222821.118 ops/s
# Warmup Iteration  15: 222674.167 ops/s
# Warmup Iteration  16: 222638.746 ops/s
# Warmup Iteration  17: 222737.059 ops/s
# Warmup Iteration  18: 222927.908 ops/s
# Warmup Iteration  19: 222093.554 ops/s
# Warmup Iteration  20: 222716.368 ops/s
# Warmup Iteration  21: 222613.308 ops/s
# Warmup Iteration  22: 222557.799 ops/s
# Warmup Iteration  23: 222721.377 ops/s
# Warmup Iteration  24: 222646.158 ops/s
# Warmup Iteration  25: 222414.137 ops/s
# Warmup Iteration  26: 222228.638 ops/s
# Warmup Iteration  27: 221843.258 ops/s
# Warmup Iteration  28: 222213.546 ops/s
# Warmup Iteration  29: 222701.118 ops/s
# Warmup Iteration  30: 222578.073 ops/s
Iteration   1: 222284.680 ops/s
Iteration   2: 222553.328 ops/s
Iteration   3: 222707.298 ops/s
Iteration   4: 222857.636 ops/s
Iteration   5: 221926.540 ops/s
Iteration   6: 222769.520 ops/s
Iteration   7: 222087.241 ops/s
Iteration   8: 221743.444 ops/s
Iteration   9: 222101.101 ops/s
Iteration  10: 222421.081 ops/s
Iteration  11: 222759.329 ops/s
Iteration  12: 222035.043 ops/s
Iteration  13: 222757.749 ops/s
Iteration  14: 222257.595 ops/s
Iteration  15: 223048.004 ops/s
Iteration  16: 222818.734 ops/s
Iteration  17: 223179.951 ops/s
Iteration  18: 222446.295 ops/s
Iteration  19: 222521.338 ops/s
Iteration  20: 222878.070 ops/s
Iteration  21: 222212.585 ops/s
Iteration  22: 222548.930 ops/s
Iteration  23: 222563.413 ops/s
Iteration  24: 222507.081 ops/s
Iteration  25: 222237.830 ops/s
Iteration  26: 222557.251 ops/s
Iteration  27: 222406.001 ops/s
Iteration  28: 222700.106 ops/s
Iteration  29: 222437.262 ops/s
Iteration  30: 222155.428 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_553._Benchmark.benchmark_Cluster_553":
  222482.662 ±(99.9%) 224.433 ops/s [Average]
  (min, avg, max) = (221743.444, 222482.662, 223179.951), stdev = 335.920
  CI (99.9%): [222258.230, 222707.095] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_553._Benchmark.benchmark_Cluster_553  thrpt   30  222482.662 ± 224.433  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_554._Benchmark.benchmark_Cluster_554$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_554._Benchmark.benchmark_Cluster_554

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71386.615 ops/s
# Warmup Iteration   2: 108027.348 ops/s
# Warmup Iteration   3: 172617.422 ops/s
# Warmup Iteration   4: 171763.841 ops/s
# Warmup Iteration   5: 172711.186 ops/s
# Warmup Iteration   6: 172487.502 ops/s
# Warmup Iteration   7: 173012.029 ops/s
# Warmup Iteration   8: 134769.157 ops/s
# Warmup Iteration   9: 173094.852 ops/s
# Warmup Iteration  10: 172948.629 ops/s
# Warmup Iteration  11: 172786.317 ops/s
# Warmup Iteration  12: 172406.380 ops/s
# Warmup Iteration  13: 172902.506 ops/s
# Warmup Iteration  14: 172429.514 ops/s
# Warmup Iteration  15: 172565.300 ops/s
# Warmup Iteration  16: 172984.252 ops/s
# Warmup Iteration  17: 178089.381 ops/s
# Warmup Iteration  18: 177660.043 ops/s
# Warmup Iteration  19: 177493.830 ops/s
# Warmup Iteration  20: 177763.578 ops/s
# Warmup Iteration  21: 177635.934 ops/s
# Warmup Iteration  22: 178368.778 ops/s
# Warmup Iteration  23: 178011.062 ops/s
# Warmup Iteration  24: 178269.353 ops/s
# Warmup Iteration  25: 177835.320 ops/s
# Warmup Iteration  26: 177720.582 ops/s
# Warmup Iteration  27: 177857.556 ops/s
# Warmup Iteration  28: 178192.492 ops/s
# Warmup Iteration  29: 178225.453 ops/s
# Warmup Iteration  30: 177927.833 ops/s
Iteration   1: 177433.179 ops/s
Iteration   2: 177584.358 ops/s
Iteration   3: 177626.614 ops/s
Iteration   4: 178133.097 ops/s
Iteration   5: 178352.152 ops/s
Iteration   6: 177807.032 ops/s
Iteration   7: 177775.654 ops/s
Iteration   8: 177644.136 ops/s
Iteration   9: 177870.424 ops/s
Iteration  10: 177733.713 ops/s
Iteration  11: 177556.275 ops/s
Iteration  12: 177864.225 ops/s
Iteration  13: 177762.872 ops/s
Iteration  14: 178137.158 ops/s
Iteration  15: 177566.088 ops/s
Iteration  16: 178049.040 ops/s
Iteration  17: 178074.473 ops/s
Iteration  18: 178028.657 ops/s
Iteration  19: 177556.475 ops/s
Iteration  20: 177894.065 ops/s
Iteration  21: 177571.299 ops/s
Iteration  22: 177941.146 ops/s
Iteration  23: 178108.297 ops/s
Iteration  24: 178365.491 ops/s
Iteration  25: 178173.929 ops/s
Iteration  26: 178421.670 ops/s
Iteration  27: 177906.778 ops/s
Iteration  28: 177602.205 ops/s
Iteration  29: 178245.717 ops/s
Iteration  30: 178221.299 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_554._Benchmark.benchmark_Cluster_554":
  177900.251 ±(99.9%) 187.780 ops/s [Average]
  (min, avg, max) = (177433.179, 177900.251, 178421.670), stdev = 281.060
  CI (99.9%): [177712.471, 178088.031] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_554._Benchmark.benchmark_Cluster_554  thrpt   30  177900.251 ± 187.780  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_555._Benchmark.benchmark_Cluster_555$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_555._Benchmark.benchmark_Cluster_555

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 44328.120 ops/s
# Warmup Iteration   2: 85923.246 ops/s
# Warmup Iteration   3: 138752.539 ops/s
# Warmup Iteration   4: 137130.213 ops/s
# Warmup Iteration   5: 138294.452 ops/s
# Warmup Iteration   6: 138384.125 ops/s
# Warmup Iteration   7: 111701.371 ops/s
# Warmup Iteration   8: 136396.921 ops/s
# Warmup Iteration   9: 138689.457 ops/s
# Warmup Iteration  10: 138471.600 ops/s
# Warmup Iteration  11: 138967.509 ops/s
# Warmup Iteration  12: 138828.502 ops/s
# Warmup Iteration  13: 138986.260 ops/s
# Warmup Iteration  14: 138766.095 ops/s
# Warmup Iteration  15: 138522.827 ops/s
# Warmup Iteration  16: 138745.582 ops/s
# Warmup Iteration  17: 138195.257 ops/s
# Warmup Iteration  18: 138274.851 ops/s
# Warmup Iteration  19: 137930.926 ops/s
# Warmup Iteration  20: 138096.802 ops/s
# Warmup Iteration  21: 138481.529 ops/s
# Warmup Iteration  22: 138133.440 ops/s
# Warmup Iteration  23: 138106.517 ops/s
# Warmup Iteration  24: 138193.121 ops/s
# Warmup Iteration  25: 138186.985 ops/s
# Warmup Iteration  26: 138107.100 ops/s
# Warmup Iteration  27: 138027.853 ops/s
# Warmup Iteration  28: 138173.606 ops/s
# Warmup Iteration  29: 138285.793 ops/s
# Warmup Iteration  30: 137769.564 ops/s
Iteration   1: 137704.542 ops/s
Iteration   2: 138585.279 ops/s
Iteration   3: 137942.435 ops/s
Iteration   4: 138516.614 ops/s
Iteration   5: 137734.676 ops/s
Iteration   6: 137891.421 ops/s
Iteration   7: 138357.877 ops/s
Iteration   8: 138107.764 ops/s
Iteration   9: 138279.862 ops/s
Iteration  10: 138167.666 ops/s
Iteration  11: 138229.540 ops/s
Iteration  12: 138119.272 ops/s
Iteration  13: 138284.265 ops/s
Iteration  14: 138125.123 ops/s
Iteration  15: 138281.098 ops/s
Iteration  16: 138145.463 ops/s
Iteration  17: 138063.267 ops/s
Iteration  18: 137908.402 ops/s
Iteration  19: 138033.435 ops/s
Iteration  20: 138442.961 ops/s
Iteration  21: 138144.176 ops/s
Iteration  22: 138156.486 ops/s
Iteration  23: 137845.844 ops/s
Iteration  24: 138495.454 ops/s
Iteration  25: 138357.722 ops/s
Iteration  26: 138117.116 ops/s
Iteration  27: 137930.341 ops/s
Iteration  28: 138340.990 ops/s
Iteration  29: 137989.729 ops/s
Iteration  30: 138138.080 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_555._Benchmark.benchmark_Cluster_555":
  138147.897 ±(99.9%) 148.978 ops/s [Average]
  (min, avg, max) = (137704.542, 138147.897, 138585.279), stdev = 222.984
  CI (99.9%): [137998.919, 138296.875] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_555._Benchmark.benchmark_Cluster_555  thrpt   30  138147.897 ± 148.978  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_556._Benchmark.benchmark_Cluster_556$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_556._Benchmark.benchmark_Cluster_556

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 26704.456 ops/s
# Warmup Iteration   2: 69041.026 ops/s
# Warmup Iteration   3: 124440.263 ops/s
# Warmup Iteration   4: 134325.343 ops/s
# Warmup Iteration   5: 134435.739 ops/s
# Warmup Iteration   6: 135215.305 ops/s
# Warmup Iteration   7: 135565.722 ops/s
# Warmup Iteration   8: 106440.308 ops/s
# Warmup Iteration   9: 135728.718 ops/s
# Warmup Iteration  10: 136005.473 ops/s
# Warmup Iteration  11: 135499.136 ops/s
# Warmup Iteration  12: 135512.066 ops/s
# Warmup Iteration  13: 135405.978 ops/s
# Warmup Iteration  14: 135350.917 ops/s
# Warmup Iteration  15: 135948.870 ops/s
# Warmup Iteration  16: 135621.829 ops/s
# Warmup Iteration  17: 134997.643 ops/s
# Warmup Iteration  18: 136439.924 ops/s
# Warmup Iteration  19: 136393.692 ops/s
# Warmup Iteration  20: 136124.851 ops/s
# Warmup Iteration  21: 136686.751 ops/s
# Warmup Iteration  22: 135333.384 ops/s
# Warmup Iteration  23: 136062.717 ops/s
# Warmup Iteration  24: 136066.354 ops/s
# Warmup Iteration  25: 135409.420 ops/s
# Warmup Iteration  26: 136644.689 ops/s
# Warmup Iteration  27: 136282.277 ops/s
# Warmup Iteration  28: 136795.090 ops/s
# Warmup Iteration  29: 136228.204 ops/s
# Warmup Iteration  30: 136410.877 ops/s
Iteration   1: 136284.356 ops/s
Iteration   2: 136961.178 ops/s
Iteration   3: 136907.611 ops/s
Iteration   4: 136340.072 ops/s
Iteration   5: 136516.701 ops/s
Iteration   6: 135026.964 ops/s
Iteration   7: 135837.473 ops/s
Iteration   8: 136645.559 ops/s
Iteration   9: 136038.204 ops/s
Iteration  10: 136303.123 ops/s
Iteration  11: 136597.870 ops/s
Iteration  12: 136942.603 ops/s
Iteration  13: 136648.383 ops/s
Iteration  14: 136567.076 ops/s
Iteration  15: 136803.195 ops/s
Iteration  16: 136217.633 ops/s
Iteration  17: 137305.137 ops/s
Iteration  18: 136673.515 ops/s
Iteration  19: 135859.913 ops/s
Iteration  20: 136856.164 ops/s
Iteration  21: 136389.849 ops/s
Iteration  22: 135883.704 ops/s
Iteration  23: 136942.958 ops/s
Iteration  24: 136940.148 ops/s
Iteration  25: 136287.998 ops/s
Iteration  26: 136293.676 ops/s
Iteration  27: 136316.355 ops/s
Iteration  28: 136563.174 ops/s
Iteration  29: 136260.563 ops/s
Iteration  30: 136627.238 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_556._Benchmark.benchmark_Cluster_556":
  136461.280 ±(99.9%) 301.032 ops/s [Average]
  (min, avg, max) = (135026.964, 136461.280, 137305.137), stdev = 450.571
  CI (99.9%): [136160.248, 136762.312] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_556._Benchmark.benchmark_Cluster_556  thrpt   30  136461.280 ± 301.032  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_557._Benchmark.benchmark_Cluster_557$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_557._Benchmark.benchmark_Cluster_557

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55395.633 ops/s
# Warmup Iteration   2: 115909.084 ops/s
# Warmup Iteration   3: 160513.862 ops/s
# Warmup Iteration   4: 161825.195 ops/s
# Warmup Iteration   5: 161831.598 ops/s
# Warmup Iteration   6: 136933.584 ops/s
# Warmup Iteration   7: 155461.126 ops/s
# Warmup Iteration   8: 162236.264 ops/s
# Warmup Iteration   9: 162312.627 ops/s
# Warmup Iteration  10: 162021.417 ops/s
# Warmup Iteration  11: 162944.432 ops/s
# Warmup Iteration  12: 162316.446 ops/s
# Warmup Iteration  13: 162000.294 ops/s
# Warmup Iteration  14: 162052.932 ops/s
# Warmup Iteration  15: 162261.012 ops/s
# Warmup Iteration  16: 162226.377 ops/s
# Warmup Iteration  17: 162010.058 ops/s
# Warmup Iteration  18: 162342.835 ops/s
# Warmup Iteration  19: 162463.209 ops/s
# Warmup Iteration  20: 162213.544 ops/s
# Warmup Iteration  21: 162190.037 ops/s
# Warmup Iteration  22: 161909.801 ops/s
# Warmup Iteration  23: 162131.043 ops/s
# Warmup Iteration  24: 162519.550 ops/s
# Warmup Iteration  25: 162146.614 ops/s
# Warmup Iteration  26: 162305.558 ops/s
# Warmup Iteration  27: 162323.917 ops/s
# Warmup Iteration  28: 162506.440 ops/s
# Warmup Iteration  29: 162551.429 ops/s
# Warmup Iteration  30: 162253.390 ops/s
Iteration   1: 162160.826 ops/s
Iteration   2: 161950.879 ops/s
Iteration   3: 162003.538 ops/s
Iteration   4: 162272.194 ops/s
Iteration   5: 161431.572 ops/s
Iteration   6: 161909.141 ops/s
Iteration   7: 161764.406 ops/s
Iteration   8: 162658.300 ops/s
Iteration   9: 162247.477 ops/s
Iteration  10: 162261.933 ops/s
Iteration  11: 161632.207 ops/s
Iteration  12: 161725.281 ops/s
Iteration  13: 162492.201 ops/s
Iteration  14: 161602.316 ops/s
Iteration  15: 162058.742 ops/s
Iteration  16: 162117.303 ops/s
Iteration  17: 162245.300 ops/s
Iteration  18: 162514.916 ops/s
Iteration  19: 162518.817 ops/s
Iteration  20: 161972.667 ops/s
Iteration  21: 162336.184 ops/s
Iteration  22: 161978.355 ops/s
Iteration  23: 162066.557 ops/s
Iteration  24: 163050.820 ops/s
Iteration  25: 162395.657 ops/s
Iteration  26: 162466.823 ops/s
Iteration  27: 162098.536 ops/s
Iteration  28: 162450.911 ops/s
Iteration  29: 162070.615 ops/s
Iteration  30: 162656.133 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_557._Benchmark.benchmark_Cluster_557":
  162170.354 ±(99.9%) 237.046 ops/s [Average]
  (min, avg, max) = (161431.572, 162170.354, 163050.820), stdev = 354.799
  CI (99.9%): [161933.308, 162407.399] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_557._Benchmark.benchmark_Cluster_557  thrpt   30  162170.354 ± 237.046  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_558._Benchmark.benchmark_Cluster_558$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_558._Benchmark.benchmark_Cluster_558

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94758.531 ops/s
# Warmup Iteration   2: 102949.107 ops/s
# Warmup Iteration   3: 110026.040 ops/s
# Warmup Iteration   4: 136601.818 ops/s
# Warmup Iteration   5: 136750.010 ops/s
# Warmup Iteration   6: 136556.325 ops/s
# Warmup Iteration   7: 136114.764 ops/s
# Warmup Iteration   8: 136809.277 ops/s
# Warmup Iteration   9: 137135.154 ops/s
# Warmup Iteration  10: 136062.474 ops/s
# Warmup Iteration  11: 136717.952 ops/s
# Warmup Iteration  12: 136528.409 ops/s
# Warmup Iteration  13: 136586.241 ops/s
# Warmup Iteration  14: 137153.848 ops/s
# Warmup Iteration  15: 136288.049 ops/s
# Warmup Iteration  16: 107120.318 ops/s
# Warmup Iteration  17: 144781.018 ops/s
# Warmup Iteration  18: 144602.430 ops/s
# Warmup Iteration  19: 144327.205 ops/s
# Warmup Iteration  20: 144298.784 ops/s
# Warmup Iteration  21: 144833.998 ops/s
# Warmup Iteration  22: 144486.286 ops/s
# Warmup Iteration  23: 144506.974 ops/s
# Warmup Iteration  24: 144673.133 ops/s
# Warmup Iteration  25: 144535.198 ops/s
# Warmup Iteration  26: 144809.455 ops/s
# Warmup Iteration  27: 144785.247 ops/s
# Warmup Iteration  28: 144215.806 ops/s
# Warmup Iteration  29: 144667.496 ops/s
# Warmup Iteration  30: 144160.488 ops/s
Iteration   1: 144297.844 ops/s
Iteration   2: 144526.317 ops/s
Iteration   3: 144895.233 ops/s
Iteration   4: 143847.942 ops/s
Iteration   5: 143891.776 ops/s
Iteration   6: 144513.987 ops/s
Iteration   7: 144192.381 ops/s
Iteration   8: 144845.001 ops/s
Iteration   9: 144831.017 ops/s
Iteration  10: 144720.895 ops/s
Iteration  11: 144737.570 ops/s
Iteration  12: 144438.221 ops/s
Iteration  13: 144538.548 ops/s
Iteration  14: 143898.855 ops/s
Iteration  15: 144708.183 ops/s
Iteration  16: 144437.064 ops/s
Iteration  17: 144367.295 ops/s
Iteration  18: 144414.193 ops/s
Iteration  19: 143909.692 ops/s
Iteration  20: 144706.702 ops/s
Iteration  21: 143957.592 ops/s
Iteration  22: 144139.176 ops/s
Iteration  23: 144347.757 ops/s
Iteration  24: 144029.966 ops/s
Iteration  25: 144430.508 ops/s
Iteration  26: 144606.963 ops/s
Iteration  27: 144557.945 ops/s
Iteration  28: 143626.307 ops/s
Iteration  29: 144314.804 ops/s
Iteration  30: 144551.661 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_558._Benchmark.benchmark_Cluster_558":
  144376.047 ±(99.9%) 224.664 ops/s [Average]
  (min, avg, max) = (143626.307, 144376.047, 144895.233), stdev = 336.267
  CI (99.9%): [144151.382, 144600.711] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_558._Benchmark.benchmark_Cluster_558  thrpt   30  144376.047 ± 224.664  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_559._Benchmark.benchmark_Cluster_559$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_559._Benchmark.benchmark_Cluster_559

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70475.501 ops/s
# Warmup Iteration   2: 121552.523 ops/s
# Warmup Iteration   3: 160431.389 ops/s
# Warmup Iteration   4: 161033.879 ops/s
# Warmup Iteration   5: 161113.392 ops/s
# Warmup Iteration   6: 159912.409 ops/s
# Warmup Iteration   7: 130784.475 ops/s
# Warmup Iteration   8: 161260.846 ops/s
# Warmup Iteration   9: 161994.880 ops/s
# Warmup Iteration  10: 161486.009 ops/s
# Warmup Iteration  11: 161832.697 ops/s
# Warmup Iteration  12: 161417.085 ops/s
# Warmup Iteration  13: 161539.521 ops/s
# Warmup Iteration  14: 161573.157 ops/s
# Warmup Iteration  15: 161484.237 ops/s
# Warmup Iteration  16: 161773.356 ops/s
# Warmup Iteration  17: 162304.767 ops/s
# Warmup Iteration  18: 162005.184 ops/s
# Warmup Iteration  19: 161634.422 ops/s
# Warmup Iteration  20: 161887.293 ops/s
# Warmup Iteration  21: 162111.135 ops/s
# Warmup Iteration  22: 161633.924 ops/s
# Warmup Iteration  23: 161776.028 ops/s
# Warmup Iteration  24: 162357.060 ops/s
# Warmup Iteration  25: 161936.115 ops/s
# Warmup Iteration  26: 161632.146 ops/s
# Warmup Iteration  27: 161876.991 ops/s
# Warmup Iteration  28: 162334.192 ops/s
# Warmup Iteration  29: 161744.735 ops/s
# Warmup Iteration  30: 161687.316 ops/s
Iteration   1: 161612.685 ops/s
Iteration   2: 162002.431 ops/s
Iteration   3: 162233.154 ops/s
Iteration   4: 162203.782 ops/s
Iteration   5: 161507.158 ops/s
Iteration   6: 161860.025 ops/s
Iteration   7: 162077.244 ops/s
Iteration   8: 162136.238 ops/s
Iteration   9: 161734.809 ops/s
Iteration  10: 162037.840 ops/s
Iteration  11: 161388.148 ops/s
Iteration  12: 161723.433 ops/s
Iteration  13: 162068.613 ops/s
Iteration  14: 161705.838 ops/s
Iteration  15: 161530.450 ops/s
Iteration  16: 161839.794 ops/s
Iteration  17: 161683.249 ops/s
Iteration  18: 161848.059 ops/s
Iteration  19: 161820.807 ops/s
Iteration  20: 160993.155 ops/s
Iteration  21: 161444.779 ops/s
Iteration  22: 161795.581 ops/s
Iteration  23: 161839.920 ops/s
Iteration  24: 162078.693 ops/s
Iteration  25: 161690.559 ops/s
Iteration  26: 162134.333 ops/s
Iteration  27: 161834.099 ops/s
Iteration  28: 162319.331 ops/s
Iteration  29: 162263.992 ops/s
Iteration  30: 161828.972 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_559._Benchmark.benchmark_Cluster_559":
  161841.239 ±(99.9%) 197.344 ops/s [Average]
  (min, avg, max) = (160993.155, 161841.239, 162319.331), stdev = 295.375
  CI (99.9%): [161643.895, 162038.583] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_559._Benchmark.benchmark_Cluster_559  thrpt   30  161841.239 ± 197.344  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_56._Benchmark.benchmark_Cluster_56$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_56._Benchmark.benchmark_Cluster_56

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57929.557 ops/s
# Warmup Iteration   2: 136436.758 ops/s
# Warmup Iteration   3: 169057.553 ops/s
# Warmup Iteration   4: 170987.560 ops/s
# Warmup Iteration   5: 135739.204 ops/s
# Warmup Iteration   6: 170925.223 ops/s
# Warmup Iteration   7: 170620.149 ops/s
# Warmup Iteration   8: 170174.417 ops/s
# Warmup Iteration   9: 170428.383 ops/s
# Warmup Iteration  10: 171197.233 ops/s
# Warmup Iteration  11: 170509.140 ops/s
# Warmup Iteration  12: 170196.924 ops/s
# Warmup Iteration  13: 170578.033 ops/s
# Warmup Iteration  14: 170176.710 ops/s
# Warmup Iteration  15: 169964.562 ops/s
# Warmup Iteration  16: 170661.561 ops/s
# Warmup Iteration  17: 170453.918 ops/s
# Warmup Iteration  18: 170427.090 ops/s
# Warmup Iteration  19: 170647.762 ops/s
# Warmup Iteration  20: 170357.878 ops/s
# Warmup Iteration  21: 170963.980 ops/s
# Warmup Iteration  22: 169737.651 ops/s
# Warmup Iteration  23: 170412.699 ops/s
# Warmup Iteration  24: 170421.354 ops/s
# Warmup Iteration  25: 170786.548 ops/s
# Warmup Iteration  26: 170431.142 ops/s
# Warmup Iteration  27: 170962.207 ops/s
# Warmup Iteration  28: 170529.796 ops/s
# Warmup Iteration  29: 170755.917 ops/s
# Warmup Iteration  30: 170594.139 ops/s
Iteration   1: 170738.685 ops/s
Iteration   2: 170563.488 ops/s
Iteration   3: 169787.825 ops/s
Iteration   4: 169989.071 ops/s
Iteration   5: 170027.229 ops/s
Iteration   6: 170875.435 ops/s
Iteration   7: 170480.031 ops/s
Iteration   8: 170252.360 ops/s
Iteration   9: 169964.874 ops/s
Iteration  10: 170845.826 ops/s
Iteration  11: 170488.279 ops/s
Iteration  12: 170999.379 ops/s
Iteration  13: 170245.039 ops/s
Iteration  14: 171106.223 ops/s
Iteration  15: 171361.807 ops/s
Iteration  16: 170424.660 ops/s
Iteration  17: 170106.733 ops/s
Iteration  18: 170174.609 ops/s
Iteration  19: 170652.759 ops/s
Iteration  20: 170481.398 ops/s
Iteration  21: 170440.954 ops/s
Iteration  22: 170438.489 ops/s
Iteration  23: 170071.993 ops/s
Iteration  24: 170911.981 ops/s
Iteration  25: 170813.661 ops/s
Iteration  26: 170132.490 ops/s
Iteration  27: 169722.351 ops/s
Iteration  28: 169588.052 ops/s
Iteration  29: 170182.058 ops/s
Iteration  30: 170112.640 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_56._Benchmark.benchmark_Cluster_56":
  170399.346 ±(99.9%) 287.051 ops/s [Average]
  (min, avg, max) = (169588.052, 170399.346, 171361.807), stdev = 429.645
  CI (99.9%): [170112.295, 170686.397] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_56._Benchmark.benchmark_Cluster_56  thrpt   30  170399.346 ± 287.051  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_560._Benchmark.benchmark_Cluster_560$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_560._Benchmark.benchmark_Cluster_560

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57642.338 ops/s
# Warmup Iteration   2: 128794.203 ops/s
# Warmup Iteration   3: 163176.902 ops/s
# Warmup Iteration   4: 164437.715 ops/s
# Warmup Iteration   5: 130160.770 ops/s
# Warmup Iteration   6: 164293.617 ops/s
# Warmup Iteration   7: 164432.067 ops/s
# Warmup Iteration   8: 164063.770 ops/s
# Warmup Iteration   9: 164052.124 ops/s
# Warmup Iteration  10: 164134.750 ops/s
# Warmup Iteration  11: 164251.660 ops/s
# Warmup Iteration  12: 164491.682 ops/s
# Warmup Iteration  13: 164364.749 ops/s
# Warmup Iteration  14: 164069.390 ops/s
# Warmup Iteration  15: 163984.080 ops/s
# Warmup Iteration  16: 164002.655 ops/s
# Warmup Iteration  17: 163837.226 ops/s
# Warmup Iteration  18: 164453.451 ops/s
# Warmup Iteration  19: 164417.258 ops/s
# Warmup Iteration  20: 164128.125 ops/s
# Warmup Iteration  21: 164469.622 ops/s
# Warmup Iteration  22: 164023.891 ops/s
# Warmup Iteration  23: 164365.475 ops/s
# Warmup Iteration  24: 164434.300 ops/s
# Warmup Iteration  25: 164365.734 ops/s
# Warmup Iteration  26: 164012.419 ops/s
# Warmup Iteration  27: 164012.031 ops/s
# Warmup Iteration  28: 163681.347 ops/s
# Warmup Iteration  29: 164094.316 ops/s
# Warmup Iteration  30: 164218.335 ops/s
Iteration   1: 164794.703 ops/s
Iteration   2: 163991.138 ops/s
Iteration   3: 164126.240 ops/s
Iteration   4: 164313.106 ops/s
Iteration   5: 164311.288 ops/s
Iteration   6: 164217.065 ops/s
Iteration   7: 164443.313 ops/s
Iteration   8: 164724.561 ops/s
Iteration   9: 163956.704 ops/s
Iteration  10: 163914.394 ops/s
Iteration  11: 164020.398 ops/s
Iteration  12: 164223.780 ops/s
Iteration  13: 163545.832 ops/s
Iteration  14: 164107.460 ops/s
Iteration  15: 163379.999 ops/s
Iteration  16: 164119.632 ops/s
Iteration  17: 163763.487 ops/s
Iteration  18: 163865.231 ops/s
Iteration  19: 164264.150 ops/s
Iteration  20: 164050.546 ops/s
Iteration  21: 163727.639 ops/s
Iteration  22: 164147.652 ops/s
Iteration  23: 164508.804 ops/s
Iteration  24: 164605.200 ops/s
Iteration  25: 163959.400 ops/s
Iteration  26: 164033.284 ops/s
Iteration  27: 164221.453 ops/s
Iteration  28: 164219.811 ops/s
Iteration  29: 164153.280 ops/s
Iteration  30: 164221.259 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_560._Benchmark.benchmark_Cluster_560":
  164131.027 ±(99.9%) 208.062 ops/s [Average]
  (min, avg, max) = (163379.999, 164131.027, 164794.703), stdev = 311.418
  CI (99.9%): [163922.965, 164339.089] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_560._Benchmark.benchmark_Cluster_560  thrpt   30  164131.027 ± 208.062  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_561._Benchmark.benchmark_Cluster_561$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_561._Benchmark.benchmark_Cluster_561

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 105941.785 ops/s
# Warmup Iteration   2: 116433.671 ops/s
# Warmup Iteration   3: 144998.225 ops/s
# Warmup Iteration   4: 163229.489 ops/s
# Warmup Iteration   5: 162758.669 ops/s
# Warmup Iteration   6: 161822.297 ops/s
# Warmup Iteration   7: 162485.390 ops/s
# Warmup Iteration   8: 162329.276 ops/s
# Warmup Iteration   9: 162712.619 ops/s
# Warmup Iteration  10: 163121.052 ops/s
# Warmup Iteration  11: 162911.371 ops/s
# Warmup Iteration  12: 162796.494 ops/s
# Warmup Iteration  13: 136989.227 ops/s
# Warmup Iteration  14: 153410.859 ops/s
# Warmup Iteration  15: 162410.349 ops/s
# Warmup Iteration  16: 162454.681 ops/s
# Warmup Iteration  17: 170511.829 ops/s
# Warmup Iteration  18: 170408.939 ops/s
# Warmup Iteration  19: 170332.068 ops/s
# Warmup Iteration  20: 170631.225 ops/s
# Warmup Iteration  21: 170614.363 ops/s
# Warmup Iteration  22: 170481.239 ops/s
# Warmup Iteration  23: 170390.696 ops/s
# Warmup Iteration  24: 170160.735 ops/s
# Warmup Iteration  25: 170597.813 ops/s
# Warmup Iteration  26: 170805.163 ops/s
# Warmup Iteration  27: 170537.201 ops/s
# Warmup Iteration  28: 170527.236 ops/s
# Warmup Iteration  29: 170418.014 ops/s
# Warmup Iteration  30: 170865.461 ops/s
Iteration   1: 170715.909 ops/s
Iteration   2: 171025.941 ops/s
Iteration   3: 170862.911 ops/s
Iteration   4: 170319.034 ops/s
Iteration   5: 170826.413 ops/s
Iteration   6: 170292.241 ops/s
Iteration   7: 170523.929 ops/s
Iteration   8: 170124.338 ops/s
Iteration   9: 170675.757 ops/s
Iteration  10: 170499.768 ops/s
Iteration  11: 170244.583 ops/s
Iteration  12: 170119.794 ops/s
Iteration  13: 170493.676 ops/s
Iteration  14: 170588.583 ops/s
Iteration  15: 170882.623 ops/s
Iteration  16: 171207.402 ops/s
Iteration  17: 170740.945 ops/s
Iteration  18: 170659.779 ops/s
Iteration  19: 170484.818 ops/s
Iteration  20: 170196.884 ops/s
Iteration  21: 170536.296 ops/s
Iteration  22: 170821.456 ops/s
Iteration  23: 170635.005 ops/s
Iteration  24: 170451.055 ops/s
Iteration  25: 170149.323 ops/s
Iteration  26: 170440.812 ops/s
Iteration  27: 170041.245 ops/s
Iteration  28: 170513.763 ops/s
Iteration  29: 170039.744 ops/s
Iteration  30: 170069.032 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_561._Benchmark.benchmark_Cluster_561":
  170506.102 ±(99.9%) 204.201 ops/s [Average]
  (min, avg, max) = (170039.744, 170506.102, 171207.402), stdev = 305.638
  CI (99.9%): [170301.901, 170710.302] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_561._Benchmark.benchmark_Cluster_561  thrpt   30  170506.102 ± 204.201  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_562._Benchmark.benchmark_Cluster_562$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_562._Benchmark.benchmark_Cluster_562

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72995.665 ops/s
# Warmup Iteration   2: 93766.146 ops/s
# Warmup Iteration   3: 138701.287 ops/s
# Warmup Iteration   4: 145014.508 ops/s
# Warmup Iteration   5: 144352.877 ops/s
# Warmup Iteration   6: 145264.340 ops/s
# Warmup Iteration   7: 145407.261 ops/s
# Warmup Iteration   8: 145255.334 ops/s
# Warmup Iteration   9: 145360.440 ops/s
# Warmup Iteration  10: 124086.531 ops/s
# Warmup Iteration  11: 134359.740 ops/s
# Warmup Iteration  12: 145336.207 ops/s
# Warmup Iteration  13: 145528.473 ops/s
# Warmup Iteration  14: 145109.538 ops/s
# Warmup Iteration  15: 145355.492 ops/s
# Warmup Iteration  16: 145309.898 ops/s
# Warmup Iteration  17: 150171.724 ops/s
# Warmup Iteration  18: 149987.142 ops/s
# Warmup Iteration  19: 150206.077 ops/s
# Warmup Iteration  20: 150105.841 ops/s
# Warmup Iteration  21: 150215.430 ops/s
# Warmup Iteration  22: 150248.124 ops/s
# Warmup Iteration  23: 150263.783 ops/s
# Warmup Iteration  24: 149780.169 ops/s
# Warmup Iteration  25: 150171.725 ops/s
# Warmup Iteration  26: 150168.528 ops/s
# Warmup Iteration  27: 149978.905 ops/s
# Warmup Iteration  28: 149630.482 ops/s
# Warmup Iteration  29: 149946.475 ops/s
# Warmup Iteration  30: 149779.529 ops/s
Iteration   1: 150149.221 ops/s
Iteration   2: 150092.328 ops/s
Iteration   3: 150218.759 ops/s
Iteration   4: 150312.929 ops/s
Iteration   5: 149851.891 ops/s
Iteration   6: 150292.842 ops/s
Iteration   7: 149619.832 ops/s
Iteration   8: 149596.202 ops/s
Iteration   9: 150222.799 ops/s
Iteration  10: 149831.565 ops/s
Iteration  11: 150249.357 ops/s
Iteration  12: 150048.705 ops/s
Iteration  13: 149827.813 ops/s
Iteration  14: 150130.301 ops/s
Iteration  15: 149948.564 ops/s
Iteration  16: 149989.585 ops/s
Iteration  17: 150238.276 ops/s
Iteration  18: 150025.341 ops/s
Iteration  19: 149730.154 ops/s
Iteration  20: 149850.527 ops/s
Iteration  21: 150183.216 ops/s
Iteration  22: 150015.701 ops/s
Iteration  23: 149665.819 ops/s
Iteration  24: 149896.722 ops/s
Iteration  25: 149790.967 ops/s
Iteration  26: 149843.099 ops/s
Iteration  27: 149916.818 ops/s
Iteration  28: 149881.990 ops/s
Iteration  29: 149733.720 ops/s
Iteration  30: 150069.717 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_562._Benchmark.benchmark_Cluster_562":
  149974.159 ±(99.9%) 138.009 ops/s [Average]
  (min, avg, max) = (149596.202, 149974.159, 150312.929), stdev = 206.566
  CI (99.9%): [149836.149, 150112.168] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_562._Benchmark.benchmark_Cluster_562  thrpt   30  149974.159 ± 138.009  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_563._Benchmark.benchmark_Cluster_563$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_563._Benchmark.benchmark_Cluster_563

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93064.768 ops/s
# Warmup Iteration   2: 106296.304 ops/s
# Warmup Iteration   3: 134671.913 ops/s
# Warmup Iteration   4: 150481.239 ops/s
# Warmup Iteration   5: 150403.927 ops/s
# Warmup Iteration   6: 149729.894 ops/s
# Warmup Iteration   7: 150647.441 ops/s
# Warmup Iteration   8: 150544.697 ops/s
# Warmup Iteration   9: 150733.667 ops/s
# Warmup Iteration  10: 151227.054 ops/s
# Warmup Iteration  11: 150135.759 ops/s
# Warmup Iteration  12: 147934.368 ops/s
# Warmup Iteration  13: 121948.069 ops/s
# Warmup Iteration  14: 151337.954 ops/s
# Warmup Iteration  15: 150986.739 ops/s
# Warmup Iteration  16: 151555.008 ops/s
# Warmup Iteration  17: 158147.174 ops/s
# Warmup Iteration  18: 158572.466 ops/s
# Warmup Iteration  19: 158451.096 ops/s
# Warmup Iteration  20: 158700.575 ops/s
# Warmup Iteration  21: 158355.045 ops/s
# Warmup Iteration  22: 158549.480 ops/s
# Warmup Iteration  23: 158766.306 ops/s
# Warmup Iteration  24: 158552.464 ops/s
# Warmup Iteration  25: 158612.059 ops/s
# Warmup Iteration  26: 158306.890 ops/s
# Warmup Iteration  27: 158486.010 ops/s
# Warmup Iteration  28: 158425.525 ops/s
# Warmup Iteration  29: 158733.007 ops/s
# Warmup Iteration  30: 158722.952 ops/s
Iteration   1: 158608.232 ops/s
Iteration   2: 158828.600 ops/s
Iteration   3: 158519.611 ops/s
Iteration   4: 158688.744 ops/s
Iteration   5: 158620.535 ops/s
Iteration   6: 158467.969 ops/s
Iteration   7: 158191.858 ops/s
Iteration   8: 158270.749 ops/s
Iteration   9: 158667.905 ops/s
Iteration  10: 158591.913 ops/s
Iteration  11: 158463.436 ops/s
Iteration  12: 158759.771 ops/s
Iteration  13: 158560.142 ops/s
Iteration  14: 158794.897 ops/s
Iteration  15: 158600.581 ops/s
Iteration  16: 159012.303 ops/s
Iteration  17: 158808.650 ops/s
Iteration  18: 158633.217 ops/s
Iteration  19: 158826.827 ops/s
Iteration  20: 158505.997 ops/s
Iteration  21: 158560.028 ops/s
Iteration  22: 158267.115 ops/s
Iteration  23: 158245.603 ops/s
Iteration  24: 158415.155 ops/s
Iteration  25: 158661.942 ops/s
Iteration  26: 158803.957 ops/s
Iteration  27: 158349.273 ops/s
Iteration  28: 158434.799 ops/s
Iteration  29: 158486.659 ops/s
Iteration  30: 158681.229 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_563._Benchmark.benchmark_Cluster_563":
  158577.590 ±(99.9%) 132.174 ops/s [Average]
  (min, avg, max) = (158191.858, 158577.590, 159012.303), stdev = 197.833
  CI (99.9%): [158445.415, 158709.764] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_563._Benchmark.benchmark_Cluster_563  thrpt   30  158577.590 ± 132.174  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_564._Benchmark.benchmark_Cluster_564$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_564._Benchmark.benchmark_Cluster_564

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68037.759 ops/s
# Warmup Iteration   2: 112124.987 ops/s
# Warmup Iteration   3: 163966.832 ops/s
# Warmup Iteration   4: 163350.839 ops/s
# Warmup Iteration   5: 164322.950 ops/s
# Warmup Iteration   6: 163833.841 ops/s
# Warmup Iteration   7: 147689.223 ops/s
# Warmup Iteration   8: 147195.488 ops/s
# Warmup Iteration   9: 164451.000 ops/s
# Warmup Iteration  10: 164778.067 ops/s
# Warmup Iteration  11: 164594.148 ops/s
# Warmup Iteration  12: 164527.608 ops/s
# Warmup Iteration  13: 164938.863 ops/s
# Warmup Iteration  14: 164634.172 ops/s
# Warmup Iteration  15: 164451.185 ops/s
# Warmup Iteration  16: 164553.636 ops/s
# Warmup Iteration  17: 164260.167 ops/s
# Warmup Iteration  18: 164076.928 ops/s
# Warmup Iteration  19: 164116.207 ops/s
# Warmup Iteration  20: 164390.915 ops/s
# Warmup Iteration  21: 164381.157 ops/s
# Warmup Iteration  22: 164447.414 ops/s
# Warmup Iteration  23: 164474.812 ops/s
# Warmup Iteration  24: 164520.234 ops/s
# Warmup Iteration  25: 164213.873 ops/s
# Warmup Iteration  26: 164138.400 ops/s
# Warmup Iteration  27: 164052.291 ops/s
# Warmup Iteration  28: 164584.939 ops/s
# Warmup Iteration  29: 164282.316 ops/s
# Warmup Iteration  30: 164259.583 ops/s
Iteration   1: 164657.479 ops/s
Iteration   2: 164367.885 ops/s
Iteration   3: 164427.679 ops/s
Iteration   4: 164606.134 ops/s
Iteration   5: 164293.973 ops/s
Iteration   6: 164330.952 ops/s
Iteration   7: 164475.517 ops/s
Iteration   8: 164411.489 ops/s
Iteration   9: 164444.013 ops/s
Iteration  10: 164404.662 ops/s
Iteration  11: 164092.523 ops/s
Iteration  12: 164580.841 ops/s
Iteration  13: 164453.631 ops/s
Iteration  14: 164116.075 ops/s
Iteration  15: 164454.085 ops/s
Iteration  16: 164266.217 ops/s
Iteration  17: 164512.100 ops/s
Iteration  18: 164216.421 ops/s
Iteration  19: 164249.998 ops/s
Iteration  20: 164451.350 ops/s
Iteration  21: 164114.535 ops/s
Iteration  22: 164240.350 ops/s
Iteration  23: 164099.788 ops/s
Iteration  24: 164630.771 ops/s
Iteration  25: 164434.033 ops/s
Iteration  26: 164365.676 ops/s
Iteration  27: 164255.479 ops/s
Iteration  28: 164801.077 ops/s
Iteration  29: 164404.747 ops/s
Iteration  30: 164235.852 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_564._Benchmark.benchmark_Cluster_564":
  164379.844 ±(99.9%) 116.818 ops/s [Average]
  (min, avg, max) = (164092.523, 164379.844, 164801.077), stdev = 174.847
  CI (99.9%): [164263.027, 164496.662] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_564._Benchmark.benchmark_Cluster_564  thrpt   30  164379.844 ± 116.818  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_565._Benchmark.benchmark_Cluster_565$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_565._Benchmark.benchmark_Cluster_565

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74821.570 ops/s
# Warmup Iteration   2: 96169.268 ops/s
# Warmup Iteration   3: 151878.276 ops/s
# Warmup Iteration   4: 153712.445 ops/s
# Warmup Iteration   5: 152517.919 ops/s
# Warmup Iteration   6: 153506.753 ops/s
# Warmup Iteration   7: 153721.708 ops/s
# Warmup Iteration   8: 153690.363 ops/s
# Warmup Iteration   9: 149225.446 ops/s
# Warmup Iteration  10: 122600.262 ops/s
# Warmup Iteration  11: 153175.242 ops/s
# Warmup Iteration  12: 152793.630 ops/s
# Warmup Iteration  13: 152932.596 ops/s
# Warmup Iteration  14: 153100.998 ops/s
# Warmup Iteration  15: 153028.947 ops/s
# Warmup Iteration  16: 153066.394 ops/s
# Warmup Iteration  17: 157424.238 ops/s
# Warmup Iteration  18: 157375.736 ops/s
# Warmup Iteration  19: 157403.072 ops/s
# Warmup Iteration  20: 157844.810 ops/s
# Warmup Iteration  21: 157391.985 ops/s
# Warmup Iteration  22: 157336.064 ops/s
# Warmup Iteration  23: 157805.450 ops/s
# Warmup Iteration  24: 157946.920 ops/s
# Warmup Iteration  25: 157399.371 ops/s
# Warmup Iteration  26: 157561.871 ops/s
# Warmup Iteration  27: 157533.733 ops/s
# Warmup Iteration  28: 157650.480 ops/s
# Warmup Iteration  29: 157577.391 ops/s
# Warmup Iteration  30: 157451.882 ops/s
Iteration   1: 157596.383 ops/s
Iteration   2: 157017.010 ops/s
Iteration   3: 157799.479 ops/s
Iteration   4: 157432.238 ops/s
Iteration   5: 157089.248 ops/s
Iteration   6: 157512.207 ops/s
Iteration   7: 157296.117 ops/s
Iteration   8: 157508.109 ops/s
Iteration   9: 157257.366 ops/s
Iteration  10: 157379.450 ops/s
Iteration  11: 157461.618 ops/s
Iteration  12: 157554.312 ops/s
Iteration  13: 157391.950 ops/s
Iteration  14: 157106.192 ops/s
Iteration  15: 157387.932 ops/s
Iteration  16: 157892.033 ops/s
Iteration  17: 157779.314 ops/s
Iteration  18: 157507.803 ops/s
Iteration  19: 157168.633 ops/s
Iteration  20: 156969.483 ops/s
Iteration  21: 157450.320 ops/s
Iteration  22: 157462.756 ops/s
Iteration  23: 157251.862 ops/s
Iteration  24: 157802.034 ops/s
Iteration  25: 157426.703 ops/s
Iteration  26: 157613.181 ops/s
Iteration  27: 157964.288 ops/s
Iteration  28: 157318.367 ops/s
Iteration  29: 157304.047 ops/s
Iteration  30: 157877.577 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_565._Benchmark.benchmark_Cluster_565":
  157452.600 ±(99.9%) 173.889 ops/s [Average]
  (min, avg, max) = (156969.483, 157452.600, 157964.288), stdev = 260.269
  CI (99.9%): [157278.711, 157626.490] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_565._Benchmark.benchmark_Cluster_565  thrpt   30  157452.600 ± 173.889  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_566._Benchmark.benchmark_Cluster_566$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_566._Benchmark.benchmark_Cluster_566

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78594.152 ops/s
# Warmup Iteration   2: 158571.463 ops/s
# Warmup Iteration   3: 206393.524 ops/s
# Warmup Iteration   4: 208457.616 ops/s
# Warmup Iteration   5: 207863.511 ops/s
# Warmup Iteration   6: 165506.672 ops/s
# Warmup Iteration   7: 208161.290 ops/s
# Warmup Iteration   8: 208236.467 ops/s
# Warmup Iteration   9: 208223.808 ops/s
# Warmup Iteration  10: 208189.697 ops/s
# Warmup Iteration  11: 208016.205 ops/s
# Warmup Iteration  12: 208227.928 ops/s
# Warmup Iteration  13: 208495.550 ops/s
# Warmup Iteration  14: 208313.374 ops/s
# Warmup Iteration  15: 207998.084 ops/s
# Warmup Iteration  16: 207928.735 ops/s
# Warmup Iteration  17: 208033.796 ops/s
# Warmup Iteration  18: 207673.151 ops/s
# Warmup Iteration  19: 208156.237 ops/s
# Warmup Iteration  20: 207913.228 ops/s
# Warmup Iteration  21: 208461.553 ops/s
# Warmup Iteration  22: 207859.621 ops/s
# Warmup Iteration  23: 207818.139 ops/s
# Warmup Iteration  24: 207126.044 ops/s
# Warmup Iteration  25: 207914.532 ops/s
# Warmup Iteration  26: 208069.875 ops/s
# Warmup Iteration  27: 207819.653 ops/s
# Warmup Iteration  28: 208026.136 ops/s
# Warmup Iteration  29: 208041.587 ops/s
# Warmup Iteration  30: 207718.505 ops/s
Iteration   1: 207959.958 ops/s
Iteration   2: 208181.793 ops/s
Iteration   3: 208266.495 ops/s
Iteration   4: 207742.747 ops/s
Iteration   5: 207834.015 ops/s
Iteration   6: 207412.848 ops/s
Iteration   7: 207592.443 ops/s
Iteration   8: 208215.569 ops/s
Iteration   9: 207847.495 ops/s
Iteration  10: 207960.888 ops/s
Iteration  11: 207917.981 ops/s
Iteration  12: 207983.106 ops/s
Iteration  13: 207584.833 ops/s
Iteration  14: 207942.888 ops/s
Iteration  15: 207996.491 ops/s
Iteration  16: 208112.629 ops/s
Iteration  17: 208234.616 ops/s
Iteration  18: 207342.992 ops/s
Iteration  19: 207771.724 ops/s
Iteration  20: 208693.175 ops/s
Iteration  21: 208037.479 ops/s
Iteration  22: 208173.121 ops/s
Iteration  23: 208119.966 ops/s
Iteration  24: 208353.646 ops/s
Iteration  25: 207792.209 ops/s
Iteration  26: 207981.550 ops/s
Iteration  27: 208349.818 ops/s
Iteration  28: 207735.564 ops/s
Iteration  29: 207999.574 ops/s
Iteration  30: 207622.464 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_566._Benchmark.benchmark_Cluster_566":
  207958.669 ±(99.9%) 195.933 ops/s [Average]
  (min, avg, max) = (207342.992, 207958.669, 208693.175), stdev = 293.263
  CI (99.9%): [207762.737, 208154.602] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_566._Benchmark.benchmark_Cluster_566  thrpt   30  207958.669 ± 195.933  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_567._Benchmark.benchmark_Cluster_567$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_567._Benchmark.benchmark_Cluster_567

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51430.159 ops/s
# Warmup Iteration   2: 108767.669 ops/s
# Warmup Iteration   3: 171005.041 ops/s
# Warmup Iteration   4: 169222.580 ops/s
# Warmup Iteration   5: 170555.779 ops/s
# Warmup Iteration   6: 157805.546 ops/s
# Warmup Iteration   7: 141697.075 ops/s
# Warmup Iteration   8: 166640.561 ops/s
# Warmup Iteration   9: 166935.381 ops/s
# Warmup Iteration  10: 167260.897 ops/s
# Warmup Iteration  11: 167095.163 ops/s
# Warmup Iteration  12: 166183.353 ops/s
# Warmup Iteration  13: 167188.771 ops/s
# Warmup Iteration  14: 167003.255 ops/s
# Warmup Iteration  15: 166998.775 ops/s
# Warmup Iteration  16: 166621.942 ops/s
# Warmup Iteration  17: 169677.541 ops/s
# Warmup Iteration  18: 169345.570 ops/s
# Warmup Iteration  19: 170153.082 ops/s
# Warmup Iteration  20: 169866.233 ops/s
# Warmup Iteration  21: 169872.453 ops/s
# Warmup Iteration  22: 170080.822 ops/s
# Warmup Iteration  23: 170099.781 ops/s
# Warmup Iteration  24: 170249.688 ops/s
# Warmup Iteration  25: 170175.645 ops/s
# Warmup Iteration  26: 170182.312 ops/s
# Warmup Iteration  27: 168717.420 ops/s
# Warmup Iteration  28: 170037.218 ops/s
# Warmup Iteration  29: 169847.193 ops/s
# Warmup Iteration  30: 169760.395 ops/s
Iteration   1: 170334.086 ops/s
Iteration   2: 170156.920 ops/s
Iteration   3: 169082.468 ops/s
Iteration   4: 169008.778 ops/s
Iteration   5: 169608.316 ops/s
Iteration   6: 169803.767 ops/s
Iteration   7: 169187.964 ops/s
Iteration   8: 169294.738 ops/s
Iteration   9: 169980.966 ops/s
Iteration  10: 170447.221 ops/s
Iteration  11: 169955.961 ops/s
Iteration  12: 169388.819 ops/s
Iteration  13: 169363.108 ops/s
Iteration  14: 170386.998 ops/s
Iteration  15: 168890.457 ops/s
Iteration  16: 170133.811 ops/s
Iteration  17: 169303.990 ops/s
Iteration  18: 170152.874 ops/s
Iteration  19: 169861.253 ops/s
Iteration  20: 169935.691 ops/s
Iteration  21: 169429.870 ops/s
Iteration  22: 169931.375 ops/s
Iteration  23: 169529.923 ops/s
Iteration  24: 169496.670 ops/s
Iteration  25: 170459.836 ops/s
Iteration  26: 169790.084 ops/s
Iteration  27: 168990.891 ops/s
Iteration  28: 169409.327 ops/s
Iteration  29: 170617.873 ops/s
Iteration  30: 169114.792 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_567._Benchmark.benchmark_Cluster_567":
  169701.627 ±(99.9%) 331.562 ops/s [Average]
  (min, avg, max) = (168890.457, 169701.627, 170617.873), stdev = 496.266
  CI (99.9%): [169370.065, 170033.189] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_567._Benchmark.benchmark_Cluster_567  thrpt   30  169701.627 ± 331.562  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_568._Benchmark.benchmark_Cluster_568$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_568._Benchmark.benchmark_Cluster_568

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 29286.513 ops/s
# Warmup Iteration   2: 69443.376 ops/s
# Warmup Iteration   3: 130642.588 ops/s
# Warmup Iteration   4: 135426.515 ops/s
# Warmup Iteration   5: 134248.268 ops/s
# Warmup Iteration   6: 107121.403 ops/s
# Warmup Iteration   7: 135145.375 ops/s
# Warmup Iteration   8: 134522.811 ops/s
# Warmup Iteration   9: 135798.404 ops/s
# Warmup Iteration  10: 133640.116 ops/s
# Warmup Iteration  11: 134507.555 ops/s
# Warmup Iteration  12: 135797.961 ops/s
# Warmup Iteration  13: 134739.796 ops/s
# Warmup Iteration  14: 135342.030 ops/s
# Warmup Iteration  15: 135327.482 ops/s
# Warmup Iteration  16: 135415.438 ops/s
# Warmup Iteration  17: 138759.826 ops/s
# Warmup Iteration  18: 137732.172 ops/s
# Warmup Iteration  19: 138409.096 ops/s
# Warmup Iteration  20: 138558.113 ops/s
# Warmup Iteration  21: 138127.624 ops/s
# Warmup Iteration  22: 137765.369 ops/s
# Warmup Iteration  23: 138175.616 ops/s
# Warmup Iteration  24: 138575.668 ops/s
# Warmup Iteration  25: 138304.457 ops/s
# Warmup Iteration  26: 138862.167 ops/s
# Warmup Iteration  27: 139688.343 ops/s
# Warmup Iteration  28: 139472.482 ops/s
# Warmup Iteration  29: 138208.565 ops/s
# Warmup Iteration  30: 138198.743 ops/s
Iteration   1: 138156.345 ops/s
Iteration   2: 139254.216 ops/s
Iteration   3: 138980.460 ops/s
Iteration   4: 139623.807 ops/s
Iteration   5: 138745.499 ops/s
Iteration   6: 137482.038 ops/s
Iteration   7: 138760.619 ops/s
Iteration   8: 138993.083 ops/s
Iteration   9: 138539.084 ops/s
Iteration  10: 137617.590 ops/s
Iteration  11: 136848.736 ops/s
Iteration  12: 139431.905 ops/s
Iteration  13: 138857.345 ops/s
Iteration  14: 137161.725 ops/s
Iteration  15: 138448.160 ops/s
Iteration  16: 138920.223 ops/s
Iteration  17: 139155.575 ops/s
Iteration  18: 139517.177 ops/s
Iteration  19: 138936.217 ops/s
Iteration  20: 139284.841 ops/s
Iteration  21: 139001.555 ops/s
Iteration  22: 139963.473 ops/s
Iteration  23: 139523.064 ops/s
Iteration  24: 137375.265 ops/s
Iteration  25: 137328.428 ops/s
Iteration  26: 139612.243 ops/s
Iteration  27: 139177.508 ops/s
Iteration  28: 139227.862 ops/s
Iteration  29: 138945.962 ops/s
Iteration  30: 137977.934 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_568._Benchmark.benchmark_Cluster_568":
  138694.931 ±(99.9%) 554.382 ops/s [Average]
  (min, avg, max) = (136848.736, 138694.931, 139963.473), stdev = 829.773
  CI (99.9%): [138140.549, 139249.313] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_568._Benchmark.benchmark_Cluster_568  thrpt   30  138694.931 ± 554.382  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_569._Benchmark.benchmark_Cluster_569$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_569._Benchmark.benchmark_Cluster_569

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57847.916 ops/s
# Warmup Iteration   2: 94809.389 ops/s
# Warmup Iteration   3: 149331.185 ops/s
# Warmup Iteration   4: 147799.544 ops/s
# Warmup Iteration   5: 148921.561 ops/s
# Warmup Iteration   6: 149076.536 ops/s
# Warmup Iteration   7: 148941.476 ops/s
# Warmup Iteration   8: 121249.625 ops/s
# Warmup Iteration   9: 147540.702 ops/s
# Warmup Iteration  10: 149692.930 ops/s
# Warmup Iteration  11: 149793.104 ops/s
# Warmup Iteration  12: 149411.691 ops/s
# Warmup Iteration  13: 149432.485 ops/s
# Warmup Iteration  14: 149349.575 ops/s
# Warmup Iteration  15: 149670.986 ops/s
# Warmup Iteration  16: 149590.512 ops/s
# Warmup Iteration  17: 149523.998 ops/s
# Warmup Iteration  18: 149827.410 ops/s
# Warmup Iteration  19: 149555.143 ops/s
# Warmup Iteration  20: 149645.393 ops/s
# Warmup Iteration  21: 149381.935 ops/s
# Warmup Iteration  22: 149629.852 ops/s
# Warmup Iteration  23: 149784.007 ops/s
# Warmup Iteration  24: 149889.804 ops/s
# Warmup Iteration  25: 149589.103 ops/s
# Warmup Iteration  26: 148733.092 ops/s
# Warmup Iteration  27: 149286.459 ops/s
# Warmup Iteration  28: 149760.527 ops/s
# Warmup Iteration  29: 149562.975 ops/s
# Warmup Iteration  30: 148932.895 ops/s
Iteration   1: 149766.637 ops/s
Iteration   2: 149390.177 ops/s
Iteration   3: 149672.151 ops/s
Iteration   4: 149486.690 ops/s
Iteration   5: 150289.173 ops/s
Iteration   6: 150034.480 ops/s
Iteration   7: 149820.608 ops/s
Iteration   8: 149720.671 ops/s
Iteration   9: 149347.619 ops/s
Iteration  10: 149858.754 ops/s
Iteration  11: 149345.297 ops/s
Iteration  12: 148946.545 ops/s
Iteration  13: 149590.264 ops/s
Iteration  14: 149288.319 ops/s
Iteration  15: 148918.074 ops/s
Iteration  16: 149790.976 ops/s
Iteration  17: 149363.165 ops/s
Iteration  18: 149691.091 ops/s
Iteration  19: 149889.264 ops/s
Iteration  20: 149289.281 ops/s
Iteration  21: 149507.482 ops/s
Iteration  22: 149701.159 ops/s
Iteration  23: 149700.055 ops/s
Iteration  24: 149496.807 ops/s
Iteration  25: 149458.886 ops/s
Iteration  26: 149686.583 ops/s
Iteration  27: 149138.811 ops/s
Iteration  28: 149832.406 ops/s
Iteration  29: 149829.070 ops/s
Iteration  30: 149378.067 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_569._Benchmark.benchmark_Cluster_569":
  149574.285 ±(99.9%) 203.790 ops/s [Average]
  (min, avg, max) = (148918.074, 149574.285, 150289.173), stdev = 305.023
  CI (99.9%): [149370.496, 149778.075] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_569._Benchmark.benchmark_Cluster_569  thrpt   30  149574.285 ± 203.790  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_57._Benchmark.benchmark_Cluster_57$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_57._Benchmark.benchmark_Cluster_57

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53554.750 ops/s
# Warmup Iteration   2: 119071.711 ops/s
# Warmup Iteration   3: 176301.035 ops/s
# Warmup Iteration   4: 177615.660 ops/s
# Warmup Iteration   5: 177644.766 ops/s
# Warmup Iteration   6: 140080.010 ops/s
# Warmup Iteration   7: 177351.078 ops/s
# Warmup Iteration   8: 177519.828 ops/s
# Warmup Iteration   9: 177676.335 ops/s
# Warmup Iteration  10: 178025.064 ops/s
# Warmup Iteration  11: 177611.792 ops/s
# Warmup Iteration  12: 177737.664 ops/s
# Warmup Iteration  13: 177602.987 ops/s
# Warmup Iteration  14: 177610.196 ops/s
# Warmup Iteration  15: 177354.712 ops/s
# Warmup Iteration  16: 177555.786 ops/s
# Warmup Iteration  17: 177564.780 ops/s
# Warmup Iteration  18: 177592.397 ops/s
# Warmup Iteration  19: 177620.608 ops/s
# Warmup Iteration  20: 177096.605 ops/s
# Warmup Iteration  21: 177008.438 ops/s
# Warmup Iteration  22: 176992.546 ops/s
# Warmup Iteration  23: 177635.190 ops/s
# Warmup Iteration  24: 177825.760 ops/s
# Warmup Iteration  25: 177452.580 ops/s
# Warmup Iteration  26: 177601.560 ops/s
# Warmup Iteration  27: 177438.791 ops/s
# Warmup Iteration  28: 177369.123 ops/s
# Warmup Iteration  29: 177790.423 ops/s
# Warmup Iteration  30: 177841.897 ops/s
Iteration   1: 176874.119 ops/s
Iteration   2: 178065.787 ops/s
Iteration   3: 177639.039 ops/s
Iteration   4: 177541.792 ops/s
Iteration   5: 177497.142 ops/s
Iteration   6: 177592.551 ops/s
Iteration   7: 177140.652 ops/s
Iteration   8: 177880.786 ops/s
Iteration   9: 177461.504 ops/s
Iteration  10: 177540.792 ops/s
Iteration  11: 177603.426 ops/s
Iteration  12: 177671.192 ops/s
Iteration  13: 177786.795 ops/s
Iteration  14: 178050.047 ops/s
Iteration  15: 176900.841 ops/s
Iteration  16: 178013.483 ops/s
Iteration  17: 177755.183 ops/s
Iteration  18: 177342.226 ops/s
Iteration  19: 177254.962 ops/s
Iteration  20: 177406.578 ops/s
Iteration  21: 177426.202 ops/s
Iteration  22: 177302.015 ops/s
Iteration  23: 177497.498 ops/s
Iteration  24: 177760.668 ops/s
Iteration  25: 177377.179 ops/s
Iteration  26: 177197.085 ops/s
Iteration  27: 177372.231 ops/s
Iteration  28: 178080.183 ops/s
Iteration  29: 177223.342 ops/s
Iteration  30: 177124.694 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_57._Benchmark.benchmark_Cluster_57":
  177512.667 ±(99.9%) 215.245 ops/s [Average]
  (min, avg, max) = (176874.119, 177512.667, 178080.183), stdev = 322.168
  CI (99.9%): [177297.422, 177727.911] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_57._Benchmark.benchmark_Cluster_57  thrpt   30  177512.667 ± 215.245  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_570._Benchmark.benchmark_Cluster_570$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_570._Benchmark.benchmark_Cluster_570

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65098.162 ops/s
# Warmup Iteration   2: 123034.973 ops/s
# Warmup Iteration   3: 179065.055 ops/s
# Warmup Iteration   4: 177635.501 ops/s
# Warmup Iteration   5: 178789.779 ops/s
# Warmup Iteration   6: 179064.633 ops/s
# Warmup Iteration   7: 142310.090 ops/s
# Warmup Iteration   8: 178761.912 ops/s
# Warmup Iteration   9: 179154.925 ops/s
# Warmup Iteration  10: 179095.040 ops/s
# Warmup Iteration  11: 179458.271 ops/s
# Warmup Iteration  12: 179024.661 ops/s
# Warmup Iteration  13: 178927.486 ops/s
# Warmup Iteration  14: 178995.569 ops/s
# Warmup Iteration  15: 179072.242 ops/s
# Warmup Iteration  16: 179275.165 ops/s
# Warmup Iteration  17: 179935.327 ops/s
# Warmup Iteration  18: 179605.910 ops/s
# Warmup Iteration  19: 179652.844 ops/s
# Warmup Iteration  20: 179863.972 ops/s
# Warmup Iteration  21: 180106.684 ops/s
# Warmup Iteration  22: 179854.898 ops/s
# Warmup Iteration  23: 179973.389 ops/s
# Warmup Iteration  24: 180216.620 ops/s
# Warmup Iteration  25: 179918.555 ops/s
# Warmup Iteration  26: 179503.894 ops/s
# Warmup Iteration  27: 179695.619 ops/s
# Warmup Iteration  28: 179656.146 ops/s
# Warmup Iteration  29: 179700.472 ops/s
# Warmup Iteration  30: 179962.298 ops/s
Iteration   1: 180271.006 ops/s
Iteration   2: 179994.196 ops/s
Iteration   3: 179912.176 ops/s
Iteration   4: 179916.050 ops/s
Iteration   5: 179859.448 ops/s
Iteration   6: 179430.604 ops/s
Iteration   7: 179631.600 ops/s
Iteration   8: 179254.439 ops/s
Iteration   9: 179513.604 ops/s
Iteration  10: 179806.479 ops/s
Iteration  11: 179479.595 ops/s
Iteration  12: 179992.053 ops/s
Iteration  13: 179968.189 ops/s
Iteration  14: 179521.891 ops/s
Iteration  15: 179961.347 ops/s
Iteration  16: 180064.167 ops/s
Iteration  17: 180520.008 ops/s
Iteration  18: 179930.974 ops/s
Iteration  19: 180241.783 ops/s
Iteration  20: 179854.951 ops/s
Iteration  21: 179528.949 ops/s
Iteration  22: 179432.884 ops/s
Iteration  23: 180334.859 ops/s
Iteration  24: 179762.503 ops/s
Iteration  25: 180155.114 ops/s
Iteration  26: 179764.940 ops/s
Iteration  27: 179988.427 ops/s
Iteration  28: 179797.400 ops/s
Iteration  29: 180148.863 ops/s
Iteration  30: 179437.795 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_570._Benchmark.benchmark_Cluster_570":
  179849.210 ±(99.9%) 205.635 ops/s [Average]
  (min, avg, max) = (179254.439, 179849.210, 180520.008), stdev = 307.786
  CI (99.9%): [179643.574, 180054.845] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_570._Benchmark.benchmark_Cluster_570  thrpt   30  179849.210 ± 205.635  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_571._Benchmark.benchmark_Cluster_571$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_571._Benchmark.benchmark_Cluster_571

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43747.205 ops/s
# Warmup Iteration   2: 79299.648 ops/s
# Warmup Iteration   3: 131890.755 ops/s
# Warmup Iteration   4: 132795.422 ops/s
# Warmup Iteration   5: 133578.244 ops/s
# Warmup Iteration   6: 133614.714 ops/s
# Warmup Iteration   7: 133562.109 ops/s
# Warmup Iteration   8: 118757.929 ops/s
# Warmup Iteration   9: 119965.145 ops/s
# Warmup Iteration  10: 133549.596 ops/s
# Warmup Iteration  11: 133616.501 ops/s
# Warmup Iteration  12: 133312.733 ops/s
# Warmup Iteration  13: 133362.509 ops/s
# Warmup Iteration  14: 133508.961 ops/s
# Warmup Iteration  15: 133255.537 ops/s
# Warmup Iteration  16: 133436.026 ops/s
# Warmup Iteration  17: 133352.605 ops/s
# Warmup Iteration  18: 133429.972 ops/s
# Warmup Iteration  19: 133063.387 ops/s
# Warmup Iteration  20: 132552.925 ops/s
# Warmup Iteration  21: 133129.125 ops/s
# Warmup Iteration  22: 133207.091 ops/s
# Warmup Iteration  23: 133282.284 ops/s
# Warmup Iteration  24: 132979.249 ops/s
# Warmup Iteration  25: 133386.142 ops/s
# Warmup Iteration  26: 133404.109 ops/s
# Warmup Iteration  27: 133157.479 ops/s
# Warmup Iteration  28: 133402.277 ops/s
# Warmup Iteration  29: 133233.404 ops/s
# Warmup Iteration  30: 133380.477 ops/s
Iteration   1: 133179.100 ops/s
Iteration   2: 133381.477 ops/s
Iteration   3: 133149.080 ops/s
Iteration   4: 133329.695 ops/s
Iteration   5: 133387.192 ops/s
Iteration   6: 133252.113 ops/s
Iteration   7: 133330.147 ops/s
Iteration   8: 133065.598 ops/s
Iteration   9: 133503.102 ops/s
Iteration  10: 133322.862 ops/s
Iteration  11: 133246.545 ops/s
Iteration  12: 133378.235 ops/s
Iteration  13: 133363.870 ops/s
Iteration  14: 133380.234 ops/s
Iteration  15: 133588.642 ops/s
Iteration  16: 133416.707 ops/s
Iteration  17: 133685.796 ops/s
Iteration  18: 133539.431 ops/s
Iteration  19: 133342.235 ops/s
Iteration  20: 133521.266 ops/s
Iteration  21: 133335.357 ops/s
Iteration  22: 133379.045 ops/s
Iteration  23: 133524.798 ops/s
Iteration  24: 133372.022 ops/s
Iteration  25: 133268.167 ops/s
Iteration  26: 133221.359 ops/s
Iteration  27: 133517.239 ops/s
Iteration  28: 133368.234 ops/s
Iteration  29: 133388.781 ops/s
Iteration  30: 133413.169 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_571._Benchmark.benchmark_Cluster_571":
  133371.717 ±(99.9%) 88.984 ops/s [Average]
  (min, avg, max) = (133065.598, 133371.717, 133685.796), stdev = 133.188
  CI (99.9%): [133282.732, 133460.701] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score    Error  Units
Cluster_571._Benchmark.benchmark_Cluster_571  thrpt   30  133371.717 ± 88.984  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_572._Benchmark.benchmark_Cluster_572$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_572._Benchmark.benchmark_Cluster_572

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63517.355 ops/s
# Warmup Iteration   2: 110216.420 ops/s
# Warmup Iteration   3: 155825.410 ops/s
# Warmup Iteration   4: 154270.411 ops/s
# Warmup Iteration   5: 156035.061 ops/s
# Warmup Iteration   6: 155859.968 ops/s
# Warmup Iteration   7: 123142.500 ops/s
# Warmup Iteration   8: 156359.634 ops/s
# Warmup Iteration   9: 156526.418 ops/s
# Warmup Iteration  10: 156511.523 ops/s
# Warmup Iteration  11: 156282.076 ops/s
# Warmup Iteration  12: 156284.130 ops/s
# Warmup Iteration  13: 156212.957 ops/s
# Warmup Iteration  14: 156272.967 ops/s
# Warmup Iteration  15: 156177.517 ops/s
# Warmup Iteration  16: 156260.054 ops/s
# Warmup Iteration  17: 157187.823 ops/s
# Warmup Iteration  18: 157819.951 ops/s
# Warmup Iteration  19: 157898.529 ops/s
# Warmup Iteration  20: 157527.160 ops/s
# Warmup Iteration  21: 157517.069 ops/s
# Warmup Iteration  22: 157817.971 ops/s
# Warmup Iteration  23: 157506.752 ops/s
# Warmup Iteration  24: 157724.277 ops/s
# Warmup Iteration  25: 157682.983 ops/s
# Warmup Iteration  26: 157628.161 ops/s
# Warmup Iteration  27: 157655.538 ops/s
# Warmup Iteration  28: 157737.488 ops/s
# Warmup Iteration  29: 157715.551 ops/s
# Warmup Iteration  30: 157602.085 ops/s
Iteration   1: 157849.146 ops/s
Iteration   2: 157351.913 ops/s
Iteration   3: 157592.916 ops/s
Iteration   4: 157582.412 ops/s
Iteration   5: 157933.860 ops/s
Iteration   6: 157157.799 ops/s
Iteration   7: 157311.790 ops/s
Iteration   8: 157321.903 ops/s
Iteration   9: 157952.358 ops/s
Iteration  10: 157304.471 ops/s
Iteration  11: 158011.629 ops/s
Iteration  12: 157847.476 ops/s
Iteration  13: 157893.101 ops/s
Iteration  14: 157654.166 ops/s
Iteration  15: 157994.684 ops/s
Iteration  16: 157679.118 ops/s
Iteration  17: 157504.356 ops/s
Iteration  18: 157377.616 ops/s
Iteration  19: 157667.095 ops/s
Iteration  20: 157337.727 ops/s
Iteration  21: 157792.860 ops/s
Iteration  22: 157250.246 ops/s
Iteration  23: 157946.964 ops/s
Iteration  24: 157541.710 ops/s
Iteration  25: 157426.428 ops/s
Iteration  26: 157364.457 ops/s
Iteration  27: 157915.368 ops/s
Iteration  28: 157423.972 ops/s
Iteration  29: 157967.230 ops/s
Iteration  30: 157726.752 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_572._Benchmark.benchmark_Cluster_572":
  157622.717 ±(99.9%) 177.684 ops/s [Average]
  (min, avg, max) = (157157.799, 157622.717, 158011.629), stdev = 265.949
  CI (99.9%): [157445.034, 157800.401] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_572._Benchmark.benchmark_Cluster_572  thrpt   30  157622.717 ± 177.684  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_573._Benchmark.benchmark_Cluster_573$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_573._Benchmark.benchmark_Cluster_573

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86437.624 ops/s
# Warmup Iteration   2: 154422.047 ops/s
# Warmup Iteration   3: 195980.133 ops/s
# Warmup Iteration   4: 197899.528 ops/s
# Warmup Iteration   5: 197778.754 ops/s
# Warmup Iteration   6: 156453.984 ops/s
# Warmup Iteration   7: 197828.762 ops/s
# Warmup Iteration   8: 198265.329 ops/s
# Warmup Iteration   9: 197836.340 ops/s
# Warmup Iteration  10: 197940.884 ops/s
# Warmup Iteration  11: 197946.581 ops/s
# Warmup Iteration  12: 197743.554 ops/s
# Warmup Iteration  13: 198201.714 ops/s
# Warmup Iteration  14: 197902.177 ops/s
# Warmup Iteration  15: 198083.937 ops/s
# Warmup Iteration  16: 197627.089 ops/s
# Warmup Iteration  17: 197296.068 ops/s
# Warmup Iteration  18: 197773.563 ops/s
# Warmup Iteration  19: 197947.707 ops/s
# Warmup Iteration  20: 197982.014 ops/s
# Warmup Iteration  21: 197876.265 ops/s
# Warmup Iteration  22: 197634.288 ops/s
# Warmup Iteration  23: 197732.784 ops/s
# Warmup Iteration  24: 198087.902 ops/s
# Warmup Iteration  25: 197745.904 ops/s
# Warmup Iteration  26: 197801.430 ops/s
# Warmup Iteration  27: 197909.767 ops/s
# Warmup Iteration  28: 197864.735 ops/s
# Warmup Iteration  29: 198028.109 ops/s
# Warmup Iteration  30: 197836.079 ops/s
Iteration   1: 197975.376 ops/s
Iteration   2: 197179.415 ops/s
Iteration   3: 197988.063 ops/s
Iteration   4: 198219.457 ops/s
Iteration   5: 197941.532 ops/s
Iteration   6: 197630.725 ops/s
Iteration   7: 197679.248 ops/s
Iteration   8: 198462.584 ops/s
Iteration   9: 197815.624 ops/s
Iteration  10: 198243.052 ops/s
Iteration  11: 197631.642 ops/s
Iteration  12: 198419.344 ops/s
Iteration  13: 198250.356 ops/s
Iteration  14: 197955.499 ops/s
Iteration  15: 198187.512 ops/s
Iteration  16: 197552.052 ops/s
Iteration  17: 198137.990 ops/s
Iteration  18: 197751.468 ops/s
Iteration  19: 198144.756 ops/s
Iteration  20: 197840.430 ops/s
Iteration  21: 197812.255 ops/s
Iteration  22: 198041.295 ops/s
Iteration  23: 197998.950 ops/s
Iteration  24: 198190.232 ops/s
Iteration  25: 197902.759 ops/s
Iteration  26: 198448.554 ops/s
Iteration  27: 198120.714 ops/s
Iteration  28: 198335.876 ops/s
Iteration  29: 197907.279 ops/s
Iteration  30: 198089.963 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_573._Benchmark.benchmark_Cluster_573":
  197995.133 ±(99.9%) 193.732 ops/s [Average]
  (min, avg, max) = (197179.415, 197995.133, 198462.584), stdev = 289.970
  CI (99.9%): [197801.401, 198188.866] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_573._Benchmark.benchmark_Cluster_573  thrpt   30  197995.133 ± 193.732  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_574._Benchmark.benchmark_Cluster_574$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_574._Benchmark.benchmark_Cluster_574

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79918.341 ops/s
# Warmup Iteration   2: 141572.033 ops/s
# Warmup Iteration   3: 198065.032 ops/s
# Warmup Iteration   4: 197768.440 ops/s
# Warmup Iteration   5: 197965.528 ops/s
# Warmup Iteration   6: 195468.276 ops/s
# Warmup Iteration   7: 160222.928 ops/s
# Warmup Iteration   8: 197556.256 ops/s
# Warmup Iteration   9: 198088.201 ops/s
# Warmup Iteration  10: 197894.872 ops/s
# Warmup Iteration  11: 197923.309 ops/s
# Warmup Iteration  12: 197821.270 ops/s
# Warmup Iteration  13: 197940.347 ops/s
# Warmup Iteration  14: 198106.699 ops/s
# Warmup Iteration  15: 197989.952 ops/s
# Warmup Iteration  16: 197692.474 ops/s
# Warmup Iteration  17: 197478.977 ops/s
# Warmup Iteration  18: 197808.147 ops/s
# Warmup Iteration  19: 197933.606 ops/s
# Warmup Iteration  20: 197755.736 ops/s
# Warmup Iteration  21: 197966.659 ops/s
# Warmup Iteration  22: 197905.356 ops/s
# Warmup Iteration  23: 197823.225 ops/s
# Warmup Iteration  24: 197948.112 ops/s
# Warmup Iteration  25: 197818.853 ops/s
# Warmup Iteration  26: 197627.503 ops/s
# Warmup Iteration  27: 197738.005 ops/s
# Warmup Iteration  28: 197915.681 ops/s
# Warmup Iteration  29: 197762.654 ops/s
# Warmup Iteration  30: 197786.861 ops/s
Iteration   1: 197906.713 ops/s
Iteration   2: 197951.106 ops/s
Iteration   3: 197571.786 ops/s
Iteration   4: 197535.791 ops/s
Iteration   5: 197924.593 ops/s
Iteration   6: 197870.517 ops/s
Iteration   7: 198102.180 ops/s
Iteration   8: 197873.369 ops/s
Iteration   9: 198265.114 ops/s
Iteration  10: 197992.716 ops/s
Iteration  11: 198198.789 ops/s
Iteration  12: 197740.051 ops/s
Iteration  13: 197602.621 ops/s
Iteration  14: 197792.480 ops/s
Iteration  15: 198194.240 ops/s
Iteration  16: 197957.970 ops/s
Iteration  17: 198348.365 ops/s
Iteration  18: 197854.875 ops/s
Iteration  19: 197998.863 ops/s
Iteration  20: 197529.608 ops/s
Iteration  21: 197712.799 ops/s
Iteration  22: 197619.805 ops/s
Iteration  23: 197891.314 ops/s
Iteration  24: 197369.823 ops/s
Iteration  25: 197448.909 ops/s
Iteration  26: 197666.527 ops/s
Iteration  27: 197765.902 ops/s
Iteration  28: 198026.216 ops/s
Iteration  29: 198000.672 ops/s
Iteration  30: 197787.698 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_574._Benchmark.benchmark_Cluster_574":
  197850.047 ±(99.9%) 162.584 ops/s [Average]
  (min, avg, max) = (197369.823, 197850.047, 198348.365), stdev = 243.348
  CI (99.9%): [197687.463, 198012.631] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_574._Benchmark.benchmark_Cluster_574  thrpt   30  197850.047 ± 162.584  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_575._Benchmark.benchmark_Cluster_575$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_575._Benchmark.benchmark_Cluster_575

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96618.231 ops/s
# Warmup Iteration   2: 180657.326 ops/s
# Warmup Iteration   3: 244438.259 ops/s
# Warmup Iteration   4: 246807.257 ops/s
# Warmup Iteration   5: 246417.110 ops/s
# Warmup Iteration   6: 216666.093 ops/s
# Warmup Iteration   7: 226857.540 ops/s
# Warmup Iteration   8: 245852.036 ops/s
# Warmup Iteration   9: 246641.327 ops/s
# Warmup Iteration  10: 246462.803 ops/s
# Warmup Iteration  11: 246826.896 ops/s
# Warmup Iteration  12: 246503.778 ops/s
# Warmup Iteration  13: 246814.748 ops/s
# Warmup Iteration  14: 246730.865 ops/s
# Warmup Iteration  15: 246738.648 ops/s
# Warmup Iteration  16: 246209.897 ops/s
# Warmup Iteration  17: 246374.502 ops/s
# Warmup Iteration  18: 247062.227 ops/s
# Warmup Iteration  19: 247006.055 ops/s
# Warmup Iteration  20: 247038.271 ops/s
# Warmup Iteration  21: 246726.297 ops/s
# Warmup Iteration  22: 247301.476 ops/s
# Warmup Iteration  23: 247017.832 ops/s
# Warmup Iteration  24: 246539.808 ops/s
# Warmup Iteration  25: 246763.589 ops/s
# Warmup Iteration  26: 247021.874 ops/s
# Warmup Iteration  27: 246829.617 ops/s
# Warmup Iteration  28: 246541.454 ops/s
# Warmup Iteration  29: 246847.307 ops/s
# Warmup Iteration  30: 246989.810 ops/s
Iteration   1: 246993.988 ops/s
Iteration   2: 246710.714 ops/s
Iteration   3: 246840.540 ops/s
Iteration   4: 246481.214 ops/s
Iteration   5: 246974.061 ops/s
Iteration   6: 246244.159 ops/s
Iteration   7: 246891.218 ops/s
Iteration   8: 247406.480 ops/s
Iteration   9: 246529.136 ops/s
Iteration  10: 246909.569 ops/s
Iteration  11: 246706.815 ops/s
Iteration  12: 247427.627 ops/s
Iteration  13: 247068.401 ops/s
Iteration  14: 246273.691 ops/s
Iteration  15: 246966.150 ops/s
Iteration  16: 246919.234 ops/s
Iteration  17: 246366.921 ops/s
Iteration  18: 246014.041 ops/s
Iteration  19: 246517.731 ops/s
Iteration  20: 246715.631 ops/s
Iteration  21: 246634.652 ops/s
Iteration  22: 246341.029 ops/s
Iteration  23: 246323.469 ops/s
Iteration  24: 246790.324 ops/s
Iteration  25: 246946.565 ops/s
Iteration  26: 245964.529 ops/s
Iteration  27: 246600.409 ops/s
Iteration  28: 245285.164 ops/s
Iteration  29: 246863.879 ops/s
Iteration  30: 246576.316 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_575._Benchmark.benchmark_Cluster_575":
  246642.789 ±(99.9%) 290.087 ops/s [Average]
  (min, avg, max) = (245285.164, 246642.789, 247427.627), stdev = 434.188
  CI (99.9%): [246352.702, 246932.875] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_575._Benchmark.benchmark_Cluster_575  thrpt   30  246642.789 ± 290.087  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_576._Benchmark.benchmark_Cluster_576$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_576._Benchmark.benchmark_Cluster_576

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94143.640 ops/s
# Warmup Iteration   2: 115571.802 ops/s
# Warmup Iteration   3: 142775.642 ops/s
# Warmup Iteration   4: 161641.316 ops/s
# Warmup Iteration   5: 162044.668 ops/s
# Warmup Iteration   6: 160927.317 ops/s
# Warmup Iteration   7: 162345.805 ops/s
# Warmup Iteration   8: 161539.167 ops/s
# Warmup Iteration   9: 161672.263 ops/s
# Warmup Iteration  10: 161855.561 ops/s
# Warmup Iteration  11: 161780.490 ops/s
# Warmup Iteration  12: 161550.606 ops/s
# Warmup Iteration  13: 129230.302 ops/s
# Warmup Iteration  14: 162096.671 ops/s
# Warmup Iteration  15: 162025.616 ops/s
# Warmup Iteration  16: 162057.956 ops/s
# Warmup Iteration  17: 167707.402 ops/s
# Warmup Iteration  18: 167981.207 ops/s
# Warmup Iteration  19: 167833.017 ops/s
# Warmup Iteration  20: 167939.482 ops/s
# Warmup Iteration  21: 167813.064 ops/s
# Warmup Iteration  22: 167708.757 ops/s
# Warmup Iteration  23: 167883.846 ops/s
# Warmup Iteration  24: 167968.606 ops/s
# Warmup Iteration  25: 167683.253 ops/s
# Warmup Iteration  26: 167610.939 ops/s
# Warmup Iteration  27: 168065.135 ops/s
# Warmup Iteration  28: 167764.367 ops/s
# Warmup Iteration  29: 167853.535 ops/s
# Warmup Iteration  30: 168096.984 ops/s
Iteration   1: 167897.082 ops/s
Iteration   2: 167854.835 ops/s
Iteration   3: 167897.296 ops/s
Iteration   4: 168129.404 ops/s
Iteration   5: 167809.333 ops/s
Iteration   6: 168022.990 ops/s
Iteration   7: 167946.689 ops/s
Iteration   8: 167843.103 ops/s
Iteration   9: 168178.201 ops/s
Iteration  10: 167786.687 ops/s
Iteration  11: 167680.749 ops/s
Iteration  12: 167782.439 ops/s
Iteration  13: 167756.042 ops/s
Iteration  14: 167958.196 ops/s
Iteration  15: 168042.500 ops/s
Iteration  16: 167861.969 ops/s
Iteration  17: 167933.951 ops/s
Iteration  18: 168155.228 ops/s
Iteration  19: 167669.665 ops/s
Iteration  20: 167708.236 ops/s
Iteration  21: 167985.409 ops/s
Iteration  22: 167874.808 ops/s
Iteration  23: 167563.428 ops/s
Iteration  24: 167414.163 ops/s
Iteration  25: 167958.051 ops/s
Iteration  26: 168032.316 ops/s
Iteration  27: 167956.164 ops/s
Iteration  28: 167631.362 ops/s
Iteration  29: 168042.573 ops/s
Iteration  30: 168113.886 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_576._Benchmark.benchmark_Cluster_576":
  167882.892 ±(99.9%) 120.816 ops/s [Average]
  (min, avg, max) = (167414.163, 167882.892, 168178.201), stdev = 180.831
  CI (99.9%): [167762.076, 168003.707] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_576._Benchmark.benchmark_Cluster_576  thrpt   30  167882.892 ± 120.816  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_577._Benchmark.benchmark_Cluster_577$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_577._Benchmark.benchmark_Cluster_577

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 98873.796 ops/s
# Warmup Iteration   2: 107172.231 ops/s
# Warmup Iteration   3: 116586.147 ops/s
# Warmup Iteration   4: 139397.549 ops/s
# Warmup Iteration   5: 139090.844 ops/s
# Warmup Iteration   6: 139249.118 ops/s
# Warmup Iteration   7: 139236.851 ops/s
# Warmup Iteration   8: 139692.363 ops/s
# Warmup Iteration   9: 139488.160 ops/s
# Warmup Iteration  10: 139350.835 ops/s
# Warmup Iteration  11: 139527.974 ops/s
# Warmup Iteration  12: 139508.771 ops/s
# Warmup Iteration  13: 139240.963 ops/s
# Warmup Iteration  14: 139338.246 ops/s
# Warmup Iteration  15: 133780.536 ops/s
# Warmup Iteration  16: 116344.969 ops/s
# Warmup Iteration  17: 146543.273 ops/s
# Warmup Iteration  18: 146389.005 ops/s
# Warmup Iteration  19: 146968.472 ops/s
# Warmup Iteration  20: 146988.934 ops/s
# Warmup Iteration  21: 146563.665 ops/s
# Warmup Iteration  22: 147242.255 ops/s
# Warmup Iteration  23: 146955.089 ops/s
# Warmup Iteration  24: 146781.738 ops/s
# Warmup Iteration  25: 146838.347 ops/s
# Warmup Iteration  26: 146732.954 ops/s
# Warmup Iteration  27: 146773.938 ops/s
# Warmup Iteration  28: 146863.757 ops/s
# Warmup Iteration  29: 146970.896 ops/s
# Warmup Iteration  30: 146669.021 ops/s
Iteration   1: 147114.325 ops/s
Iteration   2: 146240.259 ops/s
Iteration   3: 146622.225 ops/s
Iteration   4: 146578.011 ops/s
Iteration   5: 146433.670 ops/s
Iteration   6: 146927.789 ops/s
Iteration   7: 146983.738 ops/s
Iteration   8: 146518.388 ops/s
Iteration   9: 146277.504 ops/s
Iteration  10: 146715.873 ops/s
Iteration  11: 146906.870 ops/s
Iteration  12: 146667.549 ops/s
Iteration  13: 147008.840 ops/s
Iteration  14: 147337.257 ops/s
Iteration  15: 147218.499 ops/s
Iteration  16: 146774.986 ops/s
Iteration  17: 147111.723 ops/s
Iteration  18: 146830.361 ops/s
Iteration  19: 146493.468 ops/s
Iteration  20: 146096.235 ops/s
Iteration  21: 145935.023 ops/s
Iteration  22: 146874.293 ops/s
Iteration  23: 147177.142 ops/s
Iteration  24: 147000.864 ops/s
Iteration  25: 147009.633 ops/s
Iteration  26: 146813.034 ops/s
Iteration  27: 146873.158 ops/s
Iteration  28: 146919.663 ops/s
Iteration  29: 146568.562 ops/s
Iteration  30: 146507.469 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_577._Benchmark.benchmark_Cluster_577":
  146751.214 ±(99.9%) 226.358 ops/s [Average]
  (min, avg, max) = (145935.023, 146751.214, 147337.257), stdev = 338.801
  CI (99.9%): [146524.856, 146977.571] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_577._Benchmark.benchmark_Cluster_577  thrpt   30  146751.214 ± 226.358  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_578._Benchmark.benchmark_Cluster_578$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_578._Benchmark.benchmark_Cluster_578

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 114533.952 ops/s
# Warmup Iteration   2: 126461.320 ops/s
# Warmup Iteration   3: 163240.465 ops/s
# Warmup Iteration   4: 175990.684 ops/s
# Warmup Iteration   5: 176510.505 ops/s
# Warmup Iteration   6: 175127.558 ops/s
# Warmup Iteration   7: 175545.241 ops/s
# Warmup Iteration   8: 176366.185 ops/s
# Warmup Iteration   9: 175920.928 ops/s
# Warmup Iteration  10: 176147.787 ops/s
# Warmup Iteration  11: 175573.200 ops/s
# Warmup Iteration  12: 158635.853 ops/s
# Warmup Iteration  13: 158543.395 ops/s
# Warmup Iteration  14: 175564.606 ops/s
# Warmup Iteration  15: 175957.866 ops/s
# Warmup Iteration  16: 176097.732 ops/s
# Warmup Iteration  17: 184965.376 ops/s
# Warmup Iteration  18: 184952.105 ops/s
# Warmup Iteration  19: 185179.324 ops/s
# Warmup Iteration  20: 185160.892 ops/s
# Warmup Iteration  21: 184956.201 ops/s
# Warmup Iteration  22: 184999.437 ops/s
# Warmup Iteration  23: 184901.077 ops/s
# Warmup Iteration  24: 184897.290 ops/s
# Warmup Iteration  25: 184898.607 ops/s
# Warmup Iteration  26: 185365.012 ops/s
# Warmup Iteration  27: 185113.723 ops/s
# Warmup Iteration  28: 185121.023 ops/s
# Warmup Iteration  29: 184456.889 ops/s
# Warmup Iteration  30: 184849.915 ops/s
Iteration   1: 184833.366 ops/s
Iteration   2: 184946.238 ops/s
Iteration   3: 185268.499 ops/s
Iteration   4: 185334.757 ops/s
Iteration   5: 185051.628 ops/s
Iteration   6: 184456.789 ops/s
Iteration   7: 184196.092 ops/s
Iteration   8: 184661.670 ops/s
Iteration   9: 185001.320 ops/s
Iteration  10: 184484.848 ops/s
Iteration  11: 184769.785 ops/s
Iteration  12: 184750.550 ops/s
Iteration  13: 184596.913 ops/s
Iteration  14: 184718.289 ops/s
Iteration  15: 185303.600 ops/s
Iteration  16: 185339.536 ops/s
Iteration  17: 185300.076 ops/s
Iteration  18: 184940.847 ops/s
Iteration  19: 184776.204 ops/s
Iteration  20: 185274.673 ops/s
Iteration  21: 184938.956 ops/s
Iteration  22: 184739.982 ops/s
Iteration  23: 185403.456 ops/s
Iteration  24: 184913.996 ops/s
Iteration  25: 184771.937 ops/s
Iteration  26: 184911.082 ops/s
Iteration  27: 184221.363 ops/s
Iteration  28: 184997.002 ops/s
Iteration  29: 184347.441 ops/s
Iteration  30: 185225.437 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_578._Benchmark.benchmark_Cluster_578":
  184882.544 ±(99.9%) 225.129 ops/s [Average]
  (min, avg, max) = (184196.092, 184882.544, 185403.456), stdev = 336.962
  CI (99.9%): [184657.415, 185107.673] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_578._Benchmark.benchmark_Cluster_578  thrpt   30  184882.544 ± 225.129  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_579._Benchmark.benchmark_Cluster_579$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_579._Benchmark.benchmark_Cluster_579

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72719.604 ops/s
# Warmup Iteration   2: 114286.232 ops/s
# Warmup Iteration   3: 172014.918 ops/s
# Warmup Iteration   4: 170821.289 ops/s
# Warmup Iteration   5: 171949.258 ops/s
# Warmup Iteration   6: 172053.962 ops/s
# Warmup Iteration   7: 165563.275 ops/s
# Warmup Iteration   8: 141475.654 ops/s
# Warmup Iteration   9: 171219.626 ops/s
# Warmup Iteration  10: 171833.628 ops/s
# Warmup Iteration  11: 171488.791 ops/s
# Warmup Iteration  12: 171489.090 ops/s
# Warmup Iteration  13: 171558.592 ops/s
# Warmup Iteration  14: 171371.272 ops/s
# Warmup Iteration  15: 171451.393 ops/s
# Warmup Iteration  16: 171387.455 ops/s
# Warmup Iteration  17: 176989.855 ops/s
# Warmup Iteration  18: 176890.819 ops/s
# Warmup Iteration  19: 176970.485 ops/s
# Warmup Iteration  20: 177147.267 ops/s
# Warmup Iteration  21: 177283.042 ops/s
# Warmup Iteration  22: 177171.284 ops/s
# Warmup Iteration  23: 176804.610 ops/s
# Warmup Iteration  24: 176919.695 ops/s
# Warmup Iteration  25: 176993.098 ops/s
# Warmup Iteration  26: 176730.034 ops/s
# Warmup Iteration  27: 177585.842 ops/s
# Warmup Iteration  28: 176734.490 ops/s
# Warmup Iteration  29: 177185.719 ops/s
# Warmup Iteration  30: 177286.275 ops/s
Iteration   1: 176698.301 ops/s
Iteration   2: 176946.207 ops/s
Iteration   3: 176605.472 ops/s
Iteration   4: 177089.957 ops/s
Iteration   5: 177252.224 ops/s
Iteration   6: 176988.765 ops/s
Iteration   7: 176669.915 ops/s
Iteration   8: 177390.775 ops/s
Iteration   9: 176893.515 ops/s
Iteration  10: 176723.650 ops/s
Iteration  11: 177062.954 ops/s
Iteration  12: 177261.388 ops/s
Iteration  13: 177219.900 ops/s
Iteration  14: 177440.535 ops/s
Iteration  15: 177426.210 ops/s
Iteration  16: 177483.578 ops/s
Iteration  17: 177283.069 ops/s
Iteration  18: 177134.062 ops/s
Iteration  19: 177113.819 ops/s
Iteration  20: 177518.064 ops/s
Iteration  21: 176971.562 ops/s
Iteration  22: 177098.381 ops/s
Iteration  23: 177128.840 ops/s
Iteration  24: 177171.690 ops/s
Iteration  25: 177286.319 ops/s
Iteration  26: 177092.800 ops/s
Iteration  27: 177276.433 ops/s
Iteration  28: 176788.363 ops/s
Iteration  29: 176771.420 ops/s
Iteration  30: 176722.170 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_579._Benchmark.benchmark_Cluster_579":
  177083.678 ±(99.9%) 174.053 ops/s [Average]
  (min, avg, max) = (176605.472, 177083.678, 177518.064), stdev = 260.515
  CI (99.9%): [176909.624, 177257.731] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_579._Benchmark.benchmark_Cluster_579  thrpt   30  177083.678 ± 174.053  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_58._Benchmark.benchmark_Cluster_58$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_58._Benchmark.benchmark_Cluster_58

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55585.780 ops/s
# Warmup Iteration   2: 101998.628 ops/s
# Warmup Iteration   3: 140636.654 ops/s
# Warmup Iteration   4: 141794.052 ops/s
# Warmup Iteration   5: 141448.258 ops/s
# Warmup Iteration   6: 114948.614 ops/s
# Warmup Iteration   7: 138862.436 ops/s
# Warmup Iteration   8: 141832.165 ops/s
# Warmup Iteration   9: 141834.100 ops/s
# Warmup Iteration  10: 141992.755 ops/s
# Warmup Iteration  11: 142055.922 ops/s
# Warmup Iteration  12: 142436.982 ops/s
# Warmup Iteration  13: 142267.145 ops/s
# Warmup Iteration  14: 142130.699 ops/s
# Warmup Iteration  15: 141755.974 ops/s
# Warmup Iteration  16: 141956.112 ops/s
# Warmup Iteration  17: 141614.687 ops/s
# Warmup Iteration  18: 141633.015 ops/s
# Warmup Iteration  19: 141778.293 ops/s
# Warmup Iteration  20: 141930.920 ops/s
# Warmup Iteration  21: 141717.405 ops/s
# Warmup Iteration  22: 141948.062 ops/s
# Warmup Iteration  23: 141731.416 ops/s
# Warmup Iteration  24: 142447.616 ops/s
# Warmup Iteration  25: 141524.044 ops/s
# Warmup Iteration  26: 142121.610 ops/s
# Warmup Iteration  27: 142058.628 ops/s
# Warmup Iteration  28: 141667.750 ops/s
# Warmup Iteration  29: 141736.308 ops/s
# Warmup Iteration  30: 142055.106 ops/s
Iteration   1: 142311.948 ops/s
Iteration   2: 141959.143 ops/s
Iteration   3: 141542.000 ops/s
Iteration   4: 142114.562 ops/s
Iteration   5: 141759.197 ops/s
Iteration   6: 141511.213 ops/s
Iteration   7: 141666.087 ops/s
Iteration   8: 141871.616 ops/s
Iteration   9: 142086.726 ops/s
Iteration  10: 142241.676 ops/s
Iteration  11: 141611.258 ops/s
Iteration  12: 142046.819 ops/s
Iteration  13: 141645.991 ops/s
Iteration  14: 141360.795 ops/s
Iteration  15: 142094.896 ops/s
Iteration  16: 141963.154 ops/s
Iteration  17: 141434.345 ops/s
Iteration  18: 141740.797 ops/s
Iteration  19: 142069.045 ops/s
Iteration  20: 141776.744 ops/s
Iteration  21: 141790.848 ops/s
Iteration  22: 141820.849 ops/s
Iteration  23: 141659.833 ops/s
Iteration  24: 141831.638 ops/s
Iteration  25: 141445.790 ops/s
Iteration  26: 142173.178 ops/s
Iteration  27: 141990.141 ops/s
Iteration  28: 142384.046 ops/s
Iteration  29: 142146.783 ops/s
Iteration  30: 142134.186 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_58._Benchmark.benchmark_Cluster_58":
  141872.843 ±(99.9%) 184.484 ops/s [Average]
  (min, avg, max) = (141360.795, 141872.843, 142384.046), stdev = 276.127
  CI (99.9%): [141688.360, 142057.327] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_58._Benchmark.benchmark_Cluster_58  thrpt   30  141872.843 ± 184.484  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_580._Benchmark.benchmark_Cluster_580$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_580._Benchmark.benchmark_Cluster_580

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83338.096 ops/s
# Warmup Iteration   2: 89792.972 ops/s
# Warmup Iteration   3: 114858.379 ops/s
# Warmup Iteration   4: 127627.152 ops/s
# Warmup Iteration   5: 127257.977 ops/s
# Warmup Iteration   6: 126191.767 ops/s
# Warmup Iteration   7: 127183.422 ops/s
# Warmup Iteration   8: 127325.623 ops/s
# Warmup Iteration   9: 127010.890 ops/s
# Warmup Iteration  10: 126987.357 ops/s
# Warmup Iteration  11: 127089.505 ops/s
# Warmup Iteration  12: 125716.206 ops/s
# Warmup Iteration  13: 100803.126 ops/s
# Warmup Iteration  14: 127241.472 ops/s
# Warmup Iteration  15: 126898.311 ops/s
# Warmup Iteration  16: 127262.214 ops/s
# Warmup Iteration  17: 133377.334 ops/s
# Warmup Iteration  18: 133112.759 ops/s
# Warmup Iteration  19: 133460.879 ops/s
# Warmup Iteration  20: 133453.352 ops/s
# Warmup Iteration  21: 132961.575 ops/s
# Warmup Iteration  22: 133477.529 ops/s
# Warmup Iteration  23: 133512.032 ops/s
# Warmup Iteration  24: 133373.723 ops/s
# Warmup Iteration  25: 133191.609 ops/s
# Warmup Iteration  26: 133258.574 ops/s
# Warmup Iteration  27: 133428.572 ops/s
# Warmup Iteration  28: 133196.801 ops/s
# Warmup Iteration  29: 133367.670 ops/s
# Warmup Iteration  30: 133043.036 ops/s
Iteration   1: 133035.274 ops/s
Iteration   2: 133591.847 ops/s
Iteration   3: 133486.598 ops/s
Iteration   4: 133562.513 ops/s
Iteration   5: 133201.128 ops/s
Iteration   6: 133167.532 ops/s
Iteration   7: 132824.785 ops/s
Iteration   8: 133387.263 ops/s
Iteration   9: 133366.798 ops/s
Iteration  10: 133092.230 ops/s
Iteration  11: 133534.610 ops/s
Iteration  12: 133167.590 ops/s
Iteration  13: 132860.488 ops/s
Iteration  14: 133444.529 ops/s
Iteration  15: 133248.701 ops/s
Iteration  16: 132853.695 ops/s
Iteration  17: 133078.951 ops/s
Iteration  18: 133148.081 ops/s
Iteration  19: 133406.027 ops/s
Iteration  20: 132943.100 ops/s
Iteration  21: 133183.700 ops/s
Iteration  22: 132934.539 ops/s
Iteration  23: 133349.057 ops/s
Iteration  24: 133111.090 ops/s
Iteration  25: 133564.001 ops/s
Iteration  26: 133344.779 ops/s
Iteration  27: 133402.246 ops/s
Iteration  28: 133241.630 ops/s
Iteration  29: 133302.436 ops/s
Iteration  30: 133279.577 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_580._Benchmark.benchmark_Cluster_580":
  133237.160 ±(99.9%) 147.794 ops/s [Average]
  (min, avg, max) = (132824.785, 133237.160, 133591.847), stdev = 221.211
  CI (99.9%): [133089.366, 133384.954] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_580._Benchmark.benchmark_Cluster_580  thrpt   30  133237.160 ± 147.794  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_581._Benchmark.benchmark_Cluster_581$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_581._Benchmark.benchmark_Cluster_581

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57875.101 ops/s
# Warmup Iteration   2: 136919.910 ops/s
# Warmup Iteration   3: 175059.135 ops/s
# Warmup Iteration   4: 175971.455 ops/s
# Warmup Iteration   5: 140469.191 ops/s
# Warmup Iteration   6: 176420.801 ops/s
# Warmup Iteration   7: 176102.297 ops/s
# Warmup Iteration   8: 176392.258 ops/s
# Warmup Iteration   9: 176512.979 ops/s
# Warmup Iteration  10: 176265.425 ops/s
# Warmup Iteration  11: 176501.408 ops/s
# Warmup Iteration  12: 176245.303 ops/s
# Warmup Iteration  13: 176419.078 ops/s
# Warmup Iteration  14: 176200.883 ops/s
# Warmup Iteration  15: 176127.653 ops/s
# Warmup Iteration  16: 176157.275 ops/s
# Warmup Iteration  17: 175596.013 ops/s
# Warmup Iteration  18: 175268.024 ops/s
# Warmup Iteration  19: 175344.385 ops/s
# Warmup Iteration  20: 175425.845 ops/s
# Warmup Iteration  21: 175395.129 ops/s
# Warmup Iteration  22: 175561.718 ops/s
# Warmup Iteration  23: 175379.161 ops/s
# Warmup Iteration  24: 175527.864 ops/s
# Warmup Iteration  25: 174987.407 ops/s
# Warmup Iteration  26: 175176.258 ops/s
# Warmup Iteration  27: 174992.941 ops/s
# Warmup Iteration  28: 174987.758 ops/s
# Warmup Iteration  29: 175330.615 ops/s
# Warmup Iteration  30: 175482.327 ops/s
Iteration   1: 175496.044 ops/s
Iteration   2: 175215.738 ops/s
Iteration   3: 175219.076 ops/s
Iteration   4: 174961.660 ops/s
Iteration   5: 175354.444 ops/s
Iteration   6: 175168.579 ops/s
Iteration   7: 175287.106 ops/s
Iteration   8: 175699.821 ops/s
Iteration   9: 175434.580 ops/s
Iteration  10: 175556.829 ops/s
Iteration  11: 175398.389 ops/s
Iteration  12: 175836.377 ops/s
Iteration  13: 175254.138 ops/s
Iteration  14: 174853.899 ops/s
Iteration  15: 175246.989 ops/s
Iteration  16: 175571.986 ops/s
Iteration  17: 175395.425 ops/s
Iteration  18: 175498.660 ops/s
Iteration  19: 175862.557 ops/s
Iteration  20: 175441.197 ops/s
Iteration  21: 175435.917 ops/s
Iteration  22: 175480.514 ops/s
Iteration  23: 175150.098 ops/s
Iteration  24: 175328.379 ops/s
Iteration  25: 175391.421 ops/s
Iteration  26: 175475.026 ops/s
Iteration  27: 175132.042 ops/s
Iteration  28: 175327.120 ops/s
Iteration  29: 175762.048 ops/s
Iteration  30: 175238.963 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_581._Benchmark.benchmark_Cluster_581":
  175382.501 ±(99.9%) 154.283 ops/s [Average]
  (min, avg, max) = (174853.899, 175382.501, 175862.557), stdev = 230.923
  CI (99.9%): [175228.218, 175536.783] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_581._Benchmark.benchmark_Cluster_581  thrpt   30  175382.501 ± 154.283  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_582._Benchmark.benchmark_Cluster_582$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_582._Benchmark.benchmark_Cluster_582

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64250.356 ops/s
# Warmup Iteration   2: 133721.343 ops/s
# Warmup Iteration   3: 173460.815 ops/s
# Warmup Iteration   4: 174623.337 ops/s
# Warmup Iteration   5: 165239.170 ops/s
# Warmup Iteration   6: 147100.214 ops/s
# Warmup Iteration   7: 174829.141 ops/s
# Warmup Iteration   8: 174919.994 ops/s
# Warmup Iteration   9: 174351.122 ops/s
# Warmup Iteration  10: 174546.864 ops/s
# Warmup Iteration  11: 174258.008 ops/s
# Warmup Iteration  12: 174561.216 ops/s
# Warmup Iteration  13: 174932.756 ops/s
# Warmup Iteration  14: 174713.313 ops/s
# Warmup Iteration  15: 174926.889 ops/s
# Warmup Iteration  16: 175015.090 ops/s
# Warmup Iteration  17: 175122.509 ops/s
# Warmup Iteration  18: 174932.030 ops/s
# Warmup Iteration  19: 175264.985 ops/s
# Warmup Iteration  20: 175049.871 ops/s
# Warmup Iteration  21: 174903.523 ops/s
# Warmup Iteration  22: 174944.341 ops/s
# Warmup Iteration  23: 175215.305 ops/s
# Warmup Iteration  24: 174958.445 ops/s
# Warmup Iteration  25: 174995.834 ops/s
# Warmup Iteration  26: 175328.070 ops/s
# Warmup Iteration  27: 174892.628 ops/s
# Warmup Iteration  28: 174889.968 ops/s
# Warmup Iteration  29: 175046.155 ops/s
# Warmup Iteration  30: 175153.978 ops/s
Iteration   1: 175084.610 ops/s
Iteration   2: 175113.954 ops/s
Iteration   3: 175163.891 ops/s
Iteration   4: 175094.551 ops/s
Iteration   5: 175052.194 ops/s
Iteration   6: 174905.904 ops/s
Iteration   7: 174927.846 ops/s
Iteration   8: 175260.563 ops/s
Iteration   9: 174848.229 ops/s
Iteration  10: 174947.552 ops/s
Iteration  11: 175291.610 ops/s
Iteration  12: 175021.883 ops/s
Iteration  13: 175033.015 ops/s
Iteration  14: 175330.024 ops/s
Iteration  15: 175096.028 ops/s
Iteration  16: 175028.261 ops/s
Iteration  17: 175125.664 ops/s
Iteration  18: 175019.502 ops/s
Iteration  19: 174888.849 ops/s
Iteration  20: 175058.008 ops/s
Iteration  21: 174359.971 ops/s
Iteration  22: 174782.277 ops/s
Iteration  23: 174720.587 ops/s
Iteration  24: 174751.349 ops/s
Iteration  25: 174791.148 ops/s
Iteration  26: 175043.571 ops/s
Iteration  27: 174907.207 ops/s
Iteration  28: 175255.175 ops/s
Iteration  29: 174669.082 ops/s
Iteration  30: 174843.462 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_582._Benchmark.benchmark_Cluster_582":
  174980.532 ±(99.9%) 138.302 ops/s [Average]
  (min, avg, max) = (174359.971, 174980.532, 175330.024), stdev = 207.003
  CI (99.9%): [174842.231, 175118.834] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_582._Benchmark.benchmark_Cluster_582  thrpt   30  174980.532 ± 138.302  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_583._Benchmark.benchmark_Cluster_583$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_583._Benchmark.benchmark_Cluster_583

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64726.875 ops/s
# Warmup Iteration   2: 82976.927 ops/s
# Warmup Iteration   3: 108211.222 ops/s
# Warmup Iteration   4: 122809.655 ops/s
# Warmup Iteration   5: 123443.488 ops/s
# Warmup Iteration   6: 121795.218 ops/s
# Warmup Iteration   7: 123189.454 ops/s
# Warmup Iteration   8: 122906.925 ops/s
# Warmup Iteration   9: 123681.215 ops/s
# Warmup Iteration  10: 122910.433 ops/s
# Warmup Iteration  11: 123522.158 ops/s
# Warmup Iteration  12: 95242.375 ops/s
# Warmup Iteration  13: 123280.789 ops/s
# Warmup Iteration  14: 123330.064 ops/s
# Warmup Iteration  15: 123354.360 ops/s
# Warmup Iteration  16: 123269.094 ops/s
# Warmup Iteration  17: 127351.188 ops/s
# Warmup Iteration  18: 126807.013 ops/s
# Warmup Iteration  19: 126683.338 ops/s
# Warmup Iteration  20: 126415.361 ops/s
# Warmup Iteration  21: 126604.471 ops/s
# Warmup Iteration  22: 126109.651 ops/s
# Warmup Iteration  23: 126746.331 ops/s
# Warmup Iteration  24: 127111.156 ops/s
# Warmup Iteration  25: 126511.291 ops/s
# Warmup Iteration  26: 126850.140 ops/s
# Warmup Iteration  27: 126887.268 ops/s
# Warmup Iteration  28: 125738.427 ops/s
# Warmup Iteration  29: 126297.473 ops/s
# Warmup Iteration  30: 125903.022 ops/s
Iteration   1: 126097.023 ops/s
Iteration   2: 127859.279 ops/s
Iteration   3: 125681.971 ops/s
Iteration   4: 126968.193 ops/s
Iteration   5: 127149.918 ops/s
Iteration   6: 127008.786 ops/s
Iteration   7: 126399.556 ops/s
Iteration   8: 127081.549 ops/s
Iteration   9: 126859.416 ops/s
Iteration  10: 126416.820 ops/s
Iteration  11: 127287.162 ops/s
Iteration  12: 126467.076 ops/s
Iteration  13: 126114.127 ops/s
Iteration  14: 126452.819 ops/s
Iteration  15: 126045.060 ops/s
Iteration  16: 126431.531 ops/s
Iteration  17: 126272.821 ops/s
Iteration  18: 125903.789 ops/s
Iteration  19: 126763.492 ops/s
Iteration  20: 126620.262 ops/s
Iteration  21: 126994.071 ops/s
Iteration  22: 126043.635 ops/s
Iteration  23: 126818.194 ops/s
Iteration  24: 126665.859 ops/s
Iteration  25: 126414.343 ops/s
Iteration  26: 126417.415 ops/s
Iteration  27: 126570.208 ops/s
Iteration  28: 126936.174 ops/s
Iteration  29: 126644.617 ops/s
Iteration  30: 127044.493 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_583._Benchmark.benchmark_Cluster_583":
  126614.322 ±(99.9%) 310.270 ops/s [Average]
  (min, avg, max) = (125681.971, 126614.322, 127859.279), stdev = 464.397
  CI (99.9%): [126304.052, 126924.592] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_583._Benchmark.benchmark_Cluster_583  thrpt   30  126614.322 ± 310.270  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_584._Benchmark.benchmark_Cluster_584$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_584._Benchmark.benchmark_Cluster_584

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 107480.728 ops/s
# Warmup Iteration   2: 165981.713 ops/s
# Warmup Iteration   3: 242075.541 ops/s
# Warmup Iteration   4: 240832.967 ops/s
# Warmup Iteration   5: 242426.236 ops/s
# Warmup Iteration   6: 241880.864 ops/s
# Warmup Iteration   7: 228315.037 ops/s
# Warmup Iteration   8: 204623.846 ops/s
# Warmup Iteration   9: 241892.357 ops/s
# Warmup Iteration  10: 241821.475 ops/s
# Warmup Iteration  11: 242336.580 ops/s
# Warmup Iteration  12: 241962.376 ops/s
# Warmup Iteration  13: 242209.592 ops/s
# Warmup Iteration  14: 242247.954 ops/s
# Warmup Iteration  15: 242172.279 ops/s
# Warmup Iteration  16: 242331.480 ops/s
# Warmup Iteration  17: 242264.253 ops/s
# Warmup Iteration  18: 242202.522 ops/s
# Warmup Iteration  19: 242070.701 ops/s
# Warmup Iteration  20: 242210.205 ops/s
# Warmup Iteration  21: 242121.913 ops/s
# Warmup Iteration  22: 241765.853 ops/s
# Warmup Iteration  23: 241736.527 ops/s
# Warmup Iteration  24: 242136.302 ops/s
# Warmup Iteration  25: 241961.543 ops/s
# Warmup Iteration  26: 241817.711 ops/s
# Warmup Iteration  27: 242133.020 ops/s
# Warmup Iteration  28: 242174.556 ops/s
# Warmup Iteration  29: 241862.841 ops/s
# Warmup Iteration  30: 242133.832 ops/s
Iteration   1: 241719.301 ops/s
Iteration   2: 242296.798 ops/s
Iteration   3: 241867.588 ops/s
Iteration   4: 242354.410 ops/s
Iteration   5: 242209.554 ops/s
Iteration   6: 241743.299 ops/s
Iteration   7: 242067.452 ops/s
Iteration   8: 242154.592 ops/s
Iteration   9: 242230.224 ops/s
Iteration  10: 242019.789 ops/s
Iteration  11: 242072.176 ops/s
Iteration  12: 241996.536 ops/s
Iteration  13: 242033.984 ops/s
Iteration  14: 241966.338 ops/s
Iteration  15: 241998.562 ops/s
Iteration  16: 241735.095 ops/s
Iteration  17: 241748.349 ops/s
Iteration  18: 242003.239 ops/s
Iteration  19: 242175.288 ops/s
Iteration  20: 241673.706 ops/s
Iteration  21: 242252.131 ops/s
Iteration  22: 241975.366 ops/s
Iteration  23: 242251.320 ops/s
Iteration  24: 242053.668 ops/s
Iteration  25: 241943.489 ops/s
Iteration  26: 241997.912 ops/s
Iteration  27: 242109.936 ops/s
Iteration  28: 242544.290 ops/s
Iteration  29: 242127.060 ops/s
Iteration  30: 242548.001 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_584._Benchmark.benchmark_Cluster_584":
  242062.315 ±(99.9%) 147.924 ops/s [Average]
  (min, avg, max) = (241673.706, 242062.315, 242548.001), stdev = 221.406
  CI (99.9%): [241914.391, 242210.239] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_584._Benchmark.benchmark_Cluster_584  thrpt   30  242062.315 ± 147.924  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_585._Benchmark.benchmark_Cluster_585$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_585._Benchmark.benchmark_Cluster_585

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 136547.144 ops/s
# Warmup Iteration   2: 148077.235 ops/s
# Warmup Iteration   3: 153739.182 ops/s
# Warmup Iteration   4: 194992.135 ops/s
# Warmup Iteration   5: 194649.390 ops/s
# Warmup Iteration   6: 194463.799 ops/s
# Warmup Iteration   7: 194327.665 ops/s
# Warmup Iteration   8: 193249.281 ops/s
# Warmup Iteration   9: 195435.305 ops/s
# Warmup Iteration  10: 194558.730 ops/s
# Warmup Iteration  11: 194941.558 ops/s
# Warmup Iteration  12: 194509.996 ops/s
# Warmup Iteration  13: 194786.446 ops/s
# Warmup Iteration  14: 194570.299 ops/s
# Warmup Iteration  15: 194764.591 ops/s
# Warmup Iteration  16: 176877.689 ops/s
# Warmup Iteration  17: 173702.834 ops/s
# Warmup Iteration  18: 199003.357 ops/s
# Warmup Iteration  19: 199476.259 ops/s
# Warmup Iteration  20: 199286.782 ops/s
# Warmup Iteration  21: 199010.405 ops/s
# Warmup Iteration  22: 199080.949 ops/s
# Warmup Iteration  23: 198371.083 ops/s
# Warmup Iteration  24: 198985.351 ops/s
# Warmup Iteration  25: 199279.357 ops/s
# Warmup Iteration  26: 199314.185 ops/s
# Warmup Iteration  27: 199280.317 ops/s
# Warmup Iteration  28: 199018.618 ops/s
# Warmup Iteration  29: 199128.905 ops/s
# Warmup Iteration  30: 199183.737 ops/s
Iteration   1: 199053.487 ops/s
Iteration   2: 199005.800 ops/s
Iteration   3: 199329.515 ops/s
Iteration   4: 199458.509 ops/s
Iteration   5: 199095.470 ops/s
Iteration   6: 199332.971 ops/s
Iteration   7: 199603.620 ops/s
Iteration   8: 199145.483 ops/s
Iteration   9: 199318.293 ops/s
Iteration  10: 199500.318 ops/s
Iteration  11: 199212.109 ops/s
Iteration  12: 199266.329 ops/s
Iteration  13: 199300.681 ops/s
Iteration  14: 198976.823 ops/s
Iteration  15: 199000.287 ops/s
Iteration  16: 199127.798 ops/s
Iteration  17: 198936.348 ops/s
Iteration  18: 199025.095 ops/s
Iteration  19: 198778.054 ops/s
Iteration  20: 199535.388 ops/s
Iteration  21: 198876.523 ops/s
Iteration  22: 199289.182 ops/s
Iteration  23: 199360.033 ops/s
Iteration  24: 198920.603 ops/s
Iteration  25: 199185.971 ops/s
Iteration  26: 199513.848 ops/s
Iteration  27: 199483.337 ops/s
Iteration  28: 199288.529 ops/s
Iteration  29: 199385.759 ops/s
Iteration  30: 199093.901 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_585._Benchmark.benchmark_Cluster_585":
  199213.335 ±(99.9%) 146.017 ops/s [Average]
  (min, avg, max) = (198778.054, 199213.335, 199603.620), stdev = 218.551
  CI (99.9%): [199067.318, 199359.352] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_585._Benchmark.benchmark_Cluster_585  thrpt   30  199213.335 ± 146.017  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_586._Benchmark.benchmark_Cluster_586$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_586._Benchmark.benchmark_Cluster_586

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56461.859 ops/s
# Warmup Iteration   2: 106793.241 ops/s
# Warmup Iteration   3: 163651.433 ops/s
# Warmup Iteration   4: 162715.124 ops/s
# Warmup Iteration   5: 163146.780 ops/s
# Warmup Iteration   6: 163213.914 ops/s
# Warmup Iteration   7: 130119.222 ops/s
# Warmup Iteration   8: 162887.684 ops/s
# Warmup Iteration   9: 162699.568 ops/s
# Warmup Iteration  10: 163073.793 ops/s
# Warmup Iteration  11: 162669.223 ops/s
# Warmup Iteration  12: 162872.422 ops/s
# Warmup Iteration  13: 162740.999 ops/s
# Warmup Iteration  14: 162757.856 ops/s
# Warmup Iteration  15: 162588.820 ops/s
# Warmup Iteration  16: 162618.155 ops/s
# Warmup Iteration  17: 162912.880 ops/s
# Warmup Iteration  18: 162833.310 ops/s
# Warmup Iteration  19: 162895.170 ops/s
# Warmup Iteration  20: 162802.852 ops/s
# Warmup Iteration  21: 162975.833 ops/s
# Warmup Iteration  22: 163007.995 ops/s
# Warmup Iteration  23: 163326.425 ops/s
# Warmup Iteration  24: 162953.783 ops/s
# Warmup Iteration  25: 162876.136 ops/s
# Warmup Iteration  26: 163109.842 ops/s
# Warmup Iteration  27: 162967.358 ops/s
# Warmup Iteration  28: 162825.022 ops/s
# Warmup Iteration  29: 163067.013 ops/s
# Warmup Iteration  30: 162866.222 ops/s
Iteration   1: 163229.130 ops/s
Iteration   2: 162949.583 ops/s
Iteration   3: 162932.847 ops/s
Iteration   4: 162731.515 ops/s
Iteration   5: 162948.454 ops/s
Iteration   6: 162727.352 ops/s
Iteration   7: 162561.497 ops/s
Iteration   8: 162936.236 ops/s
Iteration   9: 162752.725 ops/s
Iteration  10: 162767.031 ops/s
Iteration  11: 162974.687 ops/s
Iteration  12: 162784.926 ops/s
Iteration  13: 163008.578 ops/s
Iteration  14: 162976.230 ops/s
Iteration  15: 162658.692 ops/s
Iteration  16: 163120.714 ops/s
Iteration  17: 162968.111 ops/s
Iteration  18: 162990.371 ops/s
Iteration  19: 162986.955 ops/s
Iteration  20: 163100.928 ops/s
Iteration  21: 162914.709 ops/s
Iteration  22: 163116.320 ops/s
Iteration  23: 162854.179 ops/s
Iteration  24: 162674.403 ops/s
Iteration  25: 162498.367 ops/s
Iteration  26: 162989.726 ops/s
Iteration  27: 162933.790 ops/s
Iteration  28: 163524.853 ops/s
Iteration  29: 163030.596 ops/s
Iteration  30: 162486.041 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_586._Benchmark.benchmark_Cluster_586":
  162904.318 ±(99.9%) 145.775 ops/s [Average]
  (min, avg, max) = (162486.041, 162904.318, 163524.853), stdev = 218.189
  CI (99.9%): [162758.544, 163050.093] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_586._Benchmark.benchmark_Cluster_586  thrpt   30  162904.318 ± 145.775  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_587._Benchmark.benchmark_Cluster_587$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_587._Benchmark.benchmark_Cluster_587

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51684.866 ops/s
# Warmup Iteration   2: 128726.163 ops/s
# Warmup Iteration   3: 186460.188 ops/s
# Warmup Iteration   4: 187760.215 ops/s
# Warmup Iteration   5: 188000.678 ops/s
# Warmup Iteration   6: 149802.822 ops/s
# Warmup Iteration   7: 187730.976 ops/s
# Warmup Iteration   8: 187480.204 ops/s
# Warmup Iteration   9: 187425.748 ops/s
# Warmup Iteration  10: 187484.256 ops/s
# Warmup Iteration  11: 187559.283 ops/s
# Warmup Iteration  12: 187223.223 ops/s
# Warmup Iteration  13: 187592.985 ops/s
# Warmup Iteration  14: 187364.790 ops/s
# Warmup Iteration  15: 187662.587 ops/s
# Warmup Iteration  16: 187406.627 ops/s
# Warmup Iteration  17: 187832.176 ops/s
# Warmup Iteration  18: 188304.441 ops/s
# Warmup Iteration  19: 188040.897 ops/s
# Warmup Iteration  20: 187742.997 ops/s
# Warmup Iteration  21: 188397.729 ops/s
# Warmup Iteration  22: 187178.380 ops/s
# Warmup Iteration  23: 187941.579 ops/s
# Warmup Iteration  24: 187571.882 ops/s
# Warmup Iteration  25: 187829.028 ops/s
# Warmup Iteration  26: 187675.035 ops/s
# Warmup Iteration  27: 187659.822 ops/s
# Warmup Iteration  28: 187894.432 ops/s
# Warmup Iteration  29: 187559.665 ops/s
# Warmup Iteration  30: 187660.508 ops/s
Iteration   1: 187195.223 ops/s
Iteration   2: 187473.731 ops/s
Iteration   3: 187459.273 ops/s
Iteration   4: 187593.267 ops/s
Iteration   5: 187399.699 ops/s
Iteration   6: 187436.032 ops/s
Iteration   7: 187885.917 ops/s
Iteration   8: 187566.838 ops/s
Iteration   9: 187479.154 ops/s
Iteration  10: 187523.101 ops/s
Iteration  11: 187308.698 ops/s
Iteration  12: 188044.431 ops/s
Iteration  13: 187702.256 ops/s
Iteration  14: 187631.351 ops/s
Iteration  15: 187784.925 ops/s
Iteration  16: 187576.372 ops/s
Iteration  17: 187326.994 ops/s
Iteration  18: 187718.752 ops/s
Iteration  19: 187761.320 ops/s
Iteration  20: 187874.695 ops/s
Iteration  21: 187844.435 ops/s
Iteration  22: 187589.898 ops/s
Iteration  23: 188193.303 ops/s
Iteration  24: 187700.433 ops/s
Iteration  25: 187407.309 ops/s
Iteration  26: 187645.114 ops/s
Iteration  27: 187920.304 ops/s
Iteration  28: 187913.416 ops/s
Iteration  29: 187635.294 ops/s
Iteration  30: 187335.157 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_587._Benchmark.benchmark_Cluster_587":
  187630.890 ±(99.9%) 156.607 ops/s [Average]
  (min, avg, max) = (187195.223, 187630.890, 188193.303), stdev = 234.403
  CI (99.9%): [187474.282, 187787.497] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_587._Benchmark.benchmark_Cluster_587  thrpt   30  187630.890 ± 156.607  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_588._Benchmark.benchmark_Cluster_588$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_588._Benchmark.benchmark_Cluster_588

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77566.990 ops/s
# Warmup Iteration   2: 85001.149 ops/s
# Warmup Iteration   3: 106818.700 ops/s
# Warmup Iteration   4: 121014.088 ops/s
# Warmup Iteration   5: 121458.545 ops/s
# Warmup Iteration   6: 120172.412 ops/s
# Warmup Iteration   7: 121184.924 ops/s
# Warmup Iteration   8: 121322.031 ops/s
# Warmup Iteration   9: 121439.097 ops/s
# Warmup Iteration  10: 121031.745 ops/s
# Warmup Iteration  11: 120945.329 ops/s
# Warmup Iteration  12: 121265.617 ops/s
# Warmup Iteration  13: 93654.852 ops/s
# Warmup Iteration  14: 121462.500 ops/s
# Warmup Iteration  15: 121253.279 ops/s
# Warmup Iteration  16: 121238.984 ops/s
# Warmup Iteration  17: 126696.852 ops/s
# Warmup Iteration  18: 126471.075 ops/s
# Warmup Iteration  19: 126983.817 ops/s
# Warmup Iteration  20: 126994.565 ops/s
# Warmup Iteration  21: 126939.508 ops/s
# Warmup Iteration  22: 126951.086 ops/s
# Warmup Iteration  23: 126872.547 ops/s
# Warmup Iteration  24: 126977.058 ops/s
# Warmup Iteration  25: 126844.492 ops/s
# Warmup Iteration  26: 126839.077 ops/s
# Warmup Iteration  27: 126507.004 ops/s
# Warmup Iteration  28: 126771.355 ops/s
# Warmup Iteration  29: 126889.479 ops/s
# Warmup Iteration  30: 126458.949 ops/s
Iteration   1: 126674.093 ops/s
Iteration   2: 126446.800 ops/s
Iteration   3: 127093.778 ops/s
Iteration   4: 126844.641 ops/s
Iteration   5: 126912.704 ops/s
Iteration   6: 126803.147 ops/s
Iteration   7: 127028.664 ops/s
Iteration   8: 126947.159 ops/s
Iteration   9: 126561.484 ops/s
Iteration  10: 126936.176 ops/s
Iteration  11: 126962.078 ops/s
Iteration  12: 126581.283 ops/s
Iteration  13: 126357.291 ops/s
Iteration  14: 126659.803 ops/s
Iteration  15: 126446.559 ops/s
Iteration  16: 126476.279 ops/s
Iteration  17: 126898.990 ops/s
Iteration  18: 126897.332 ops/s
Iteration  19: 126969.004 ops/s
Iteration  20: 126912.878 ops/s
Iteration  21: 126670.609 ops/s
Iteration  22: 126673.418 ops/s
Iteration  23: 126980.318 ops/s
Iteration  24: 126629.115 ops/s
Iteration  25: 126551.167 ops/s
Iteration  26: 126705.492 ops/s
Iteration  27: 127003.070 ops/s
Iteration  28: 126811.397 ops/s
Iteration  29: 126427.081 ops/s
Iteration  30: 126821.135 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_588._Benchmark.benchmark_Cluster_588":
  126756.098 ±(99.9%) 139.232 ops/s [Average]
  (min, avg, max) = (126357.291, 126756.098, 127093.778), stdev = 208.395
  CI (99.9%): [126616.867, 126895.330] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_588._Benchmark.benchmark_Cluster_588  thrpt   30  126756.098 ± 139.232  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_589._Benchmark.benchmark_Cluster_589$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_589._Benchmark.benchmark_Cluster_589

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 29593.647 ops/s
# Warmup Iteration   2: 49370.787 ops/s
# Warmup Iteration   3: 80057.287 ops/s
# Warmup Iteration   4: 80831.694 ops/s
# Warmup Iteration   5: 81426.455 ops/s
# Warmup Iteration   6: 81078.294 ops/s
# Warmup Iteration   7: 81520.688 ops/s
# Warmup Iteration   8: 63692.044 ops/s
# Warmup Iteration   9: 81591.909 ops/s
# Warmup Iteration  10: 81747.370 ops/s
# Warmup Iteration  11: 81486.363 ops/s
# Warmup Iteration  12: 81591.254 ops/s
# Warmup Iteration  13: 81582.261 ops/s
# Warmup Iteration  14: 81595.697 ops/s
# Warmup Iteration  15: 81328.488 ops/s
# Warmup Iteration  16: 81564.197 ops/s
# Warmup Iteration  17: 81962.727 ops/s
# Warmup Iteration  18: 81674.064 ops/s
# Warmup Iteration  19: 81683.120 ops/s
# Warmup Iteration  20: 81942.890 ops/s
# Warmup Iteration  21: 81630.468 ops/s
# Warmup Iteration  22: 81858.141 ops/s
# Warmup Iteration  23: 81810.008 ops/s
# Warmup Iteration  24: 81878.513 ops/s
# Warmup Iteration  25: 81849.011 ops/s
# Warmup Iteration  26: 81663.069 ops/s
# Warmup Iteration  27: 81981.703 ops/s
# Warmup Iteration  28: 81911.979 ops/s
# Warmup Iteration  29: 81715.187 ops/s
# Warmup Iteration  30: 81983.911 ops/s
Iteration   1: 82135.441 ops/s
Iteration   2: 81824.268 ops/s
Iteration   3: 81723.368 ops/s
Iteration   4: 81946.518 ops/s
Iteration   5: 82244.255 ops/s
Iteration   6: 82215.985 ops/s
Iteration   7: 82000.972 ops/s
Iteration   8: 82418.566 ops/s
Iteration   9: 81921.991 ops/s
Iteration  10: 81852.577 ops/s
Iteration  11: 82111.389 ops/s
Iteration  12: 82173.258 ops/s
Iteration  13: 82192.143 ops/s
Iteration  14: 81869.470 ops/s
Iteration  15: 82100.239 ops/s
Iteration  16: 82139.414 ops/s
Iteration  17: 81722.456 ops/s
Iteration  18: 82124.610 ops/s
Iteration  19: 81746.072 ops/s
Iteration  20: 81927.560 ops/s
Iteration  21: 81754.516 ops/s
Iteration  22: 81992.396 ops/s
Iteration  23: 81647.392 ops/s
Iteration  24: 81813.347 ops/s
Iteration  25: 82217.002 ops/s
Iteration  26: 81830.665 ops/s
Iteration  27: 82458.291 ops/s
Iteration  28: 82032.035 ops/s
Iteration  29: 81904.804 ops/s
Iteration  30: 81823.655 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_589._Benchmark.benchmark_Cluster_589":
  81995.488 ±(99.9%) 139.922 ops/s [Average]
  (min, avg, max) = (81647.392, 81995.488, 82458.291), stdev = 209.429
  CI (99.9%): [81855.566, 82135.411] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_589._Benchmark.benchmark_Cluster_589  thrpt   30  81995.488 ± 139.922  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_59._Benchmark.benchmark_Cluster_59$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_59._Benchmark.benchmark_Cluster_59

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96160.790 ops/s
# Warmup Iteration   2: 186738.754 ops/s
# Warmup Iteration   3: 247704.769 ops/s
# Warmup Iteration   4: 249977.977 ops/s
# Warmup Iteration   5: 249193.728 ops/s
# Warmup Iteration   6: 199439.105 ops/s
# Warmup Iteration   7: 249838.878 ops/s
# Warmup Iteration   8: 249874.827 ops/s
# Warmup Iteration   9: 249754.823 ops/s
# Warmup Iteration  10: 249515.667 ops/s
# Warmup Iteration  11: 249799.457 ops/s
# Warmup Iteration  12: 250063.210 ops/s
# Warmup Iteration  13: 249877.438 ops/s
# Warmup Iteration  14: 249859.150 ops/s
# Warmup Iteration  15: 249890.900 ops/s
# Warmup Iteration  16: 249880.001 ops/s
# Warmup Iteration  17: 249898.088 ops/s
# Warmup Iteration  18: 250042.305 ops/s
# Warmup Iteration  19: 249498.671 ops/s
# Warmup Iteration  20: 249813.721 ops/s
# Warmup Iteration  21: 249668.033 ops/s
# Warmup Iteration  22: 249778.860 ops/s
# Warmup Iteration  23: 249840.833 ops/s
# Warmup Iteration  24: 249732.325 ops/s
# Warmup Iteration  25: 249670.425 ops/s
# Warmup Iteration  26: 249681.490 ops/s
# Warmup Iteration  27: 249549.678 ops/s
# Warmup Iteration  28: 249688.365 ops/s
# Warmup Iteration  29: 249427.864 ops/s
# Warmup Iteration  30: 249804.800 ops/s
Iteration   1: 249523.350 ops/s
Iteration   2: 249574.775 ops/s
Iteration   3: 249605.018 ops/s
Iteration   4: 249545.448 ops/s
Iteration   5: 249674.246 ops/s
Iteration   6: 249367.106 ops/s
Iteration   7: 249588.654 ops/s
Iteration   8: 249715.497 ops/s
Iteration   9: 248875.986 ops/s
Iteration  10: 249640.743 ops/s
Iteration  11: 249548.849 ops/s
Iteration  12: 249972.723 ops/s
Iteration  13: 249891.886 ops/s
Iteration  14: 249845.467 ops/s
Iteration  15: 250137.222 ops/s
Iteration  16: 249732.770 ops/s
Iteration  17: 250120.185 ops/s
Iteration  18: 249677.139 ops/s
Iteration  19: 249861.935 ops/s
Iteration  20: 249666.703 ops/s
Iteration  21: 249760.659 ops/s
Iteration  22: 249186.361 ops/s
Iteration  23: 249731.960 ops/s
Iteration  24: 250081.724 ops/s
Iteration  25: 249571.804 ops/s
Iteration  26: 249960.211 ops/s
Iteration  27: 249786.502 ops/s
Iteration  28: 249669.294 ops/s
Iteration  29: 249811.888 ops/s
Iteration  30: 249876.513 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_59._Benchmark.benchmark_Cluster_59":
  249700.087 ±(99.9%) 174.961 ops/s [Average]
  (min, avg, max) = (248875.986, 249700.087, 250137.222), stdev = 261.874
  CI (99.9%): [249525.126, 249875.049] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_59._Benchmark.benchmark_Cluster_59  thrpt   30  249700.087 ± 174.961  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_590._Benchmark.benchmark_Cluster_590$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_590._Benchmark.benchmark_Cluster_590

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53477.087 ops/s
# Warmup Iteration   2: 115180.024 ops/s
# Warmup Iteration   3: 173643.507 ops/s
# Warmup Iteration   4: 172924.240 ops/s
# Warmup Iteration   5: 174057.989 ops/s
# Warmup Iteration   6: 157384.579 ops/s
# Warmup Iteration   7: 154528.098 ops/s
# Warmup Iteration   8: 173422.953 ops/s
# Warmup Iteration   9: 173842.299 ops/s
# Warmup Iteration  10: 173782.551 ops/s
# Warmup Iteration  11: 174012.503 ops/s
# Warmup Iteration  12: 173754.570 ops/s
# Warmup Iteration  13: 173816.246 ops/s
# Warmup Iteration  14: 173647.371 ops/s
# Warmup Iteration  15: 173675.778 ops/s
# Warmup Iteration  16: 173754.273 ops/s
# Warmup Iteration  17: 173811.028 ops/s
# Warmup Iteration  18: 173748.291 ops/s
# Warmup Iteration  19: 173511.085 ops/s
# Warmup Iteration  20: 173251.826 ops/s
# Warmup Iteration  21: 173610.507 ops/s
# Warmup Iteration  22: 173829.398 ops/s
# Warmup Iteration  23: 173622.702 ops/s
# Warmup Iteration  24: 173801.909 ops/s
# Warmup Iteration  25: 173594.735 ops/s
# Warmup Iteration  26: 173916.428 ops/s
# Warmup Iteration  27: 173194.339 ops/s
# Warmup Iteration  28: 173589.607 ops/s
# Warmup Iteration  29: 173800.905 ops/s
# Warmup Iteration  30: 173838.750 ops/s
Iteration   1: 173299.558 ops/s
Iteration   2: 173866.434 ops/s
Iteration   3: 173140.150 ops/s
Iteration   4: 173808.975 ops/s
Iteration   5: 173721.278 ops/s
Iteration   6: 173681.147 ops/s
Iteration   7: 174107.872 ops/s
Iteration   8: 173884.502 ops/s
Iteration   9: 173906.323 ops/s
Iteration  10: 173499.909 ops/s
Iteration  11: 173741.905 ops/s
Iteration  12: 173568.871 ops/s
Iteration  13: 173983.895 ops/s
Iteration  14: 173791.485 ops/s
Iteration  15: 173795.921 ops/s
Iteration  16: 173655.461 ops/s
Iteration  17: 173813.816 ops/s
Iteration  18: 173589.878 ops/s
Iteration  19: 173584.096 ops/s
Iteration  20: 173780.098 ops/s
Iteration  21: 173774.980 ops/s
Iteration  22: 173815.139 ops/s
Iteration  23: 173473.889 ops/s
Iteration  24: 173690.578 ops/s
Iteration  25: 173359.059 ops/s
Iteration  26: 173970.888 ops/s
Iteration  27: 173291.252 ops/s
Iteration  28: 173437.495 ops/s
Iteration  29: 173273.099 ops/s
Iteration  30: 173746.667 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_590._Benchmark.benchmark_Cluster_590":
  173668.487 ±(99.9%) 157.497 ops/s [Average]
  (min, avg, max) = (173140.150, 173668.487, 174107.872), stdev = 235.733
  CI (99.9%): [173510.991, 173825.984] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_590._Benchmark.benchmark_Cluster_590  thrpt   30  173668.487 ± 157.497  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_591._Benchmark.benchmark_Cluster_591$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_591._Benchmark.benchmark_Cluster_591

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 101109.330 ops/s
# Warmup Iteration   2: 171909.016 ops/s
# Warmup Iteration   3: 236391.576 ops/s
# Warmup Iteration   4: 234789.017 ops/s
# Warmup Iteration   5: 236575.230 ops/s
# Warmup Iteration   6: 236201.224 ops/s
# Warmup Iteration   7: 188702.028 ops/s
# Warmup Iteration   8: 236973.954 ops/s
# Warmup Iteration   9: 236848.628 ops/s
# Warmup Iteration  10: 236909.130 ops/s
# Warmup Iteration  11: 236971.634 ops/s
# Warmup Iteration  12: 236750.409 ops/s
# Warmup Iteration  13: 236891.213 ops/s
# Warmup Iteration  14: 236774.180 ops/s
# Warmup Iteration  15: 236654.126 ops/s
# Warmup Iteration  16: 236842.421 ops/s
# Warmup Iteration  17: 236944.849 ops/s
# Warmup Iteration  18: 236927.292 ops/s
# Warmup Iteration  19: 236763.258 ops/s
# Warmup Iteration  20: 236831.678 ops/s
# Warmup Iteration  21: 236929.535 ops/s
# Warmup Iteration  22: 237040.397 ops/s
# Warmup Iteration  23: 236987.783 ops/s
# Warmup Iteration  24: 236849.537 ops/s
# Warmup Iteration  25: 236946.069 ops/s
# Warmup Iteration  26: 236647.268 ops/s
# Warmup Iteration  27: 236821.370 ops/s
# Warmup Iteration  28: 236777.150 ops/s
# Warmup Iteration  29: 236713.684 ops/s
# Warmup Iteration  30: 236884.523 ops/s
Iteration   1: 237027.906 ops/s
Iteration   2: 237250.353 ops/s
Iteration   3: 236991.963 ops/s
Iteration   4: 236597.455 ops/s
Iteration   5: 236621.247 ops/s
Iteration   6: 236887.203 ops/s
Iteration   7: 237022.134 ops/s
Iteration   8: 236580.969 ops/s
Iteration   9: 237015.588 ops/s
Iteration  10: 236718.195 ops/s
Iteration  11: 236997.549 ops/s
Iteration  12: 236856.533 ops/s
Iteration  13: 237120.377 ops/s
Iteration  14: 236589.695 ops/s
Iteration  15: 236935.765 ops/s
Iteration  16: 236863.256 ops/s
Iteration  17: 237111.488 ops/s
Iteration  18: 236869.450 ops/s
Iteration  19: 237078.256 ops/s
Iteration  20: 236695.930 ops/s
Iteration  21: 236863.270 ops/s
Iteration  22: 236717.372 ops/s
Iteration  23: 237139.870 ops/s
Iteration  24: 236894.724 ops/s
Iteration  25: 237285.552 ops/s
Iteration  26: 236929.249 ops/s
Iteration  27: 237355.225 ops/s
Iteration  28: 236697.939 ops/s
Iteration  29: 237267.284 ops/s
Iteration  30: 237047.782 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_591._Benchmark.benchmark_Cluster_591":
  236934.319 ±(99.9%) 145.177 ops/s [Average]
  (min, avg, max) = (236580.969, 236934.319, 237355.225), stdev = 217.294
  CI (99.9%): [236789.142, 237079.496] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_591._Benchmark.benchmark_Cluster_591  thrpt   30  236934.319 ± 145.177  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_592._Benchmark.benchmark_Cluster_592$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_592._Benchmark.benchmark_Cluster_592

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74276.117 ops/s
# Warmup Iteration   2: 86263.954 ops/s
# Warmup Iteration   3: 115509.445 ops/s
# Warmup Iteration   4: 123332.296 ops/s
# Warmup Iteration   5: 123678.471 ops/s
# Warmup Iteration   6: 122859.599 ops/s
# Warmup Iteration   7: 123825.209 ops/s
# Warmup Iteration   8: 124281.602 ops/s
# Warmup Iteration   9: 122406.391 ops/s
# Warmup Iteration  10: 123728.476 ops/s
# Warmup Iteration  11: 124478.252 ops/s
# Warmup Iteration  12: 98320.744 ops/s
# Warmup Iteration  13: 122873.749 ops/s
# Warmup Iteration  14: 123298.396 ops/s
# Warmup Iteration  15: 124771.210 ops/s
# Warmup Iteration  16: 124162.261 ops/s
# Warmup Iteration  17: 130197.342 ops/s
# Warmup Iteration  18: 130382.896 ops/s
# Warmup Iteration  19: 130135.909 ops/s
# Warmup Iteration  20: 130013.682 ops/s
# Warmup Iteration  21: 130386.489 ops/s
# Warmup Iteration  22: 129175.839 ops/s
# Warmup Iteration  23: 129773.776 ops/s
# Warmup Iteration  24: 129839.165 ops/s
# Warmup Iteration  25: 129559.255 ops/s
# Warmup Iteration  26: 130219.289 ops/s
# Warmup Iteration  27: 129773.172 ops/s
# Warmup Iteration  28: 129880.249 ops/s
# Warmup Iteration  29: 129879.537 ops/s
# Warmup Iteration  30: 130712.363 ops/s
Iteration   1: 129952.979 ops/s
Iteration   2: 129137.896 ops/s
Iteration   3: 130719.001 ops/s
Iteration   4: 130382.525 ops/s
Iteration   5: 128969.815 ops/s
Iteration   6: 130492.985 ops/s
Iteration   7: 129558.608 ops/s
Iteration   8: 129777.892 ops/s
Iteration   9: 128525.037 ops/s
Iteration  10: 129970.369 ops/s
Iteration  11: 128655.955 ops/s
Iteration  12: 130201.222 ops/s
Iteration  13: 128612.974 ops/s
Iteration  14: 129810.734 ops/s
Iteration  15: 130353.350 ops/s
Iteration  16: 130259.266 ops/s
Iteration  17: 128410.316 ops/s
Iteration  18: 130008.786 ops/s
Iteration  19: 128964.163 ops/s
Iteration  20: 129099.802 ops/s
Iteration  21: 130364.275 ops/s
Iteration  22: 128481.349 ops/s
Iteration  23: 129598.514 ops/s
Iteration  24: 129153.014 ops/s
Iteration  25: 128475.670 ops/s
Iteration  26: 129254.364 ops/s
Iteration  27: 129463.454 ops/s
Iteration  28: 129660.090 ops/s
Iteration  29: 129734.256 ops/s
Iteration  30: 129639.659 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_592._Benchmark.benchmark_Cluster_592":
  129522.944 ±(99.9%) 456.121 ops/s [Average]
  (min, avg, max) = (128410.316, 129522.944, 130719.001), stdev = 682.700
  CI (99.9%): [129066.823, 129979.065] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_592._Benchmark.benchmark_Cluster_592  thrpt   30  129522.944 ± 456.121  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_593._Benchmark.benchmark_Cluster_593$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_593._Benchmark.benchmark_Cluster_593

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50003.989 ops/s
# Warmup Iteration   2: 80823.672 ops/s
# Warmup Iteration   3: 125963.197 ops/s
# Warmup Iteration   4: 126053.272 ops/s
# Warmup Iteration   5: 125793.362 ops/s
# Warmup Iteration   6: 125690.948 ops/s
# Warmup Iteration   7: 126466.325 ops/s
# Warmup Iteration   8: 98650.245 ops/s
# Warmup Iteration   9: 127639.237 ops/s
# Warmup Iteration  10: 127184.546 ops/s
# Warmup Iteration  11: 126822.561 ops/s
# Warmup Iteration  12: 127944.132 ops/s
# Warmup Iteration  13: 127122.068 ops/s
# Warmup Iteration  14: 127433.688 ops/s
# Warmup Iteration  15: 127831.985 ops/s
# Warmup Iteration  16: 127942.025 ops/s
# Warmup Iteration  17: 131947.139 ops/s
# Warmup Iteration  18: 131773.948 ops/s
# Warmup Iteration  19: 132354.350 ops/s
# Warmup Iteration  20: 131412.408 ops/s
# Warmup Iteration  21: 131365.629 ops/s
# Warmup Iteration  22: 131563.364 ops/s
# Warmup Iteration  23: 131585.630 ops/s
# Warmup Iteration  24: 131612.194 ops/s
# Warmup Iteration  25: 132370.104 ops/s
# Warmup Iteration  26: 131549.857 ops/s
# Warmup Iteration  27: 131938.243 ops/s
# Warmup Iteration  28: 131975.606 ops/s
# Warmup Iteration  29: 131758.635 ops/s
# Warmup Iteration  30: 131770.422 ops/s
Iteration   1: 132242.667 ops/s
Iteration   2: 130630.441 ops/s
Iteration   3: 131715.978 ops/s
Iteration   4: 131457.387 ops/s
Iteration   5: 131785.335 ops/s
Iteration   6: 131159.770 ops/s
Iteration   7: 131726.054 ops/s
Iteration   8: 131968.357 ops/s
Iteration   9: 132094.900 ops/s
Iteration  10: 131747.106 ops/s
Iteration  11: 131215.873 ops/s
Iteration  12: 131965.996 ops/s
Iteration  13: 131965.327 ops/s
Iteration  14: 132009.073 ops/s
Iteration  15: 131759.509 ops/s
Iteration  16: 132064.680 ops/s
Iteration  17: 130331.595 ops/s
Iteration  18: 131414.406 ops/s
Iteration  19: 132031.772 ops/s
Iteration  20: 132361.330 ops/s
Iteration  21: 131407.468 ops/s
Iteration  22: 131836.640 ops/s
Iteration  23: 130981.368 ops/s
Iteration  24: 131893.029 ops/s
Iteration  25: 132651.208 ops/s
Iteration  26: 132704.820 ops/s
Iteration  27: 132823.600 ops/s
Iteration  28: 132296.148 ops/s
Iteration  29: 132703.053 ops/s
Iteration  30: 132444.748 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_593._Benchmark.benchmark_Cluster_593":
  131846.321 ±(99.9%) 397.114 ops/s [Average]
  (min, avg, max) = (130331.595, 131846.321, 132823.600), stdev = 594.382
  CI (99.9%): [131449.207, 132243.435] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_593._Benchmark.benchmark_Cluster_593  thrpt   30  131846.321 ± 397.114  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_594._Benchmark.benchmark_Cluster_594$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_594._Benchmark.benchmark_Cluster_594

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 25521.086 ops/s
# Warmup Iteration   2: 49551.784 ops/s
# Warmup Iteration   3: 74923.704 ops/s
# Warmup Iteration   4: 83190.366 ops/s
# Warmup Iteration   5: 82910.039 ops/s
# Warmup Iteration   6: 82568.441 ops/s
# Warmup Iteration   7: 83203.528 ops/s
# Warmup Iteration   8: 83011.309 ops/s
# Warmup Iteration   9: 77624.658 ops/s
# Warmup Iteration  10: 70353.045 ops/s
# Warmup Iteration  11: 83176.918 ops/s
# Warmup Iteration  12: 83996.799 ops/s
# Warmup Iteration  13: 83759.881 ops/s
# Warmup Iteration  14: 83729.799 ops/s
# Warmup Iteration  15: 84016.618 ops/s
# Warmup Iteration  16: 83533.529 ops/s
# Warmup Iteration  17: 84165.054 ops/s
# Warmup Iteration  18: 84531.546 ops/s
# Warmup Iteration  19: 84991.807 ops/s
# Warmup Iteration  20: 84876.262 ops/s
# Warmup Iteration  21: 84191.778 ops/s
# Warmup Iteration  22: 84990.289 ops/s
# Warmup Iteration  23: 84543.997 ops/s
# Warmup Iteration  24: 84593.666 ops/s
# Warmup Iteration  25: 85005.131 ops/s
# Warmup Iteration  26: 85133.846 ops/s
# Warmup Iteration  27: 84655.883 ops/s
# Warmup Iteration  28: 85071.320 ops/s
# Warmup Iteration  29: 84867.812 ops/s
# Warmup Iteration  30: 84874.063 ops/s
Iteration   1: 85350.887 ops/s
Iteration   2: 84991.239 ops/s
Iteration   3: 84715.948 ops/s
Iteration   4: 85015.354 ops/s
Iteration   5: 84951.818 ops/s
Iteration   6: 85151.973 ops/s
Iteration   7: 85088.317 ops/s
Iteration   8: 84840.404 ops/s
Iteration   9: 85342.656 ops/s
Iteration  10: 84956.086 ops/s
Iteration  11: 83657.739 ops/s
Iteration  12: 84182.442 ops/s
Iteration  13: 84183.128 ops/s
Iteration  14: 84710.859 ops/s
Iteration  15: 85103.808 ops/s
Iteration  16: 85393.246 ops/s
Iteration  17: 84690.943 ops/s
Iteration  18: 84834.130 ops/s
Iteration  19: 85423.444 ops/s
Iteration  20: 83288.810 ops/s
Iteration  21: 83590.746 ops/s
Iteration  22: 83687.650 ops/s
Iteration  23: 85048.563 ops/s
Iteration  24: 85075.489 ops/s
Iteration  25: 84961.813 ops/s
Iteration  26: 84845.106 ops/s
Iteration  27: 84620.537 ops/s
Iteration  28: 84893.072 ops/s
Iteration  29: 85306.697 ops/s
Iteration  30: 85232.731 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_594._Benchmark.benchmark_Cluster_594":
  84771.188 ±(99.9%) 381.867 ops/s [Average]
  (min, avg, max) = (83288.810, 84771.188, 85423.444), stdev = 571.561
  CI (99.9%): [84389.320, 85153.055] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_594._Benchmark.benchmark_Cluster_594  thrpt   30  84771.188 ± 381.867  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_595._Benchmark.benchmark_Cluster_595$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_595._Benchmark.benchmark_Cluster_595

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 32019.052 ops/s
# Warmup Iteration   2: 84492.686 ops/s
# Warmup Iteration   3: 156992.007 ops/s
# Warmup Iteration   4: 155870.501 ops/s
# Warmup Iteration   5: 156919.239 ops/s
# Warmup Iteration   6: 130892.891 ops/s
# Warmup Iteration   7: 147655.834 ops/s
# Warmup Iteration   8: 156911.312 ops/s
# Warmup Iteration   9: 156712.523 ops/s
# Warmup Iteration  10: 156950.538 ops/s
# Warmup Iteration  11: 156930.039 ops/s
# Warmup Iteration  12: 156514.262 ops/s
# Warmup Iteration  13: 156630.282 ops/s
# Warmup Iteration  14: 157151.321 ops/s
# Warmup Iteration  15: 156730.992 ops/s
# Warmup Iteration  16: 156624.367 ops/s
# Warmup Iteration  17: 156451.598 ops/s
# Warmup Iteration  18: 156068.973 ops/s
# Warmup Iteration  19: 156078.201 ops/s
# Warmup Iteration  20: 155612.212 ops/s
# Warmup Iteration  21: 156145.231 ops/s
# Warmup Iteration  22: 156285.246 ops/s
# Warmup Iteration  23: 156589.974 ops/s
# Warmup Iteration  24: 156105.120 ops/s
# Warmup Iteration  25: 156294.768 ops/s
# Warmup Iteration  26: 156601.967 ops/s
# Warmup Iteration  27: 155742.453 ops/s
# Warmup Iteration  28: 156107.504 ops/s
# Warmup Iteration  29: 156264.111 ops/s
# Warmup Iteration  30: 155926.424 ops/s
Iteration   1: 156324.177 ops/s
Iteration   2: 155919.649 ops/s
Iteration   3: 156256.974 ops/s
Iteration   4: 156108.667 ops/s
Iteration   5: 156752.352 ops/s
Iteration   6: 156483.241 ops/s
Iteration   7: 156757.959 ops/s
Iteration   8: 155876.812 ops/s
Iteration   9: 156486.071 ops/s
Iteration  10: 156405.520 ops/s
Iteration  11: 155921.684 ops/s
Iteration  12: 156655.932 ops/s
Iteration  13: 155223.241 ops/s
Iteration  14: 155554.286 ops/s
Iteration  15: 156414.509 ops/s
Iteration  16: 156169.588 ops/s
Iteration  17: 156509.487 ops/s
Iteration  18: 156404.841 ops/s
Iteration  19: 156213.947 ops/s
Iteration  20: 156268.399 ops/s
Iteration  21: 155980.582 ops/s
Iteration  22: 156282.695 ops/s
Iteration  23: 156404.602 ops/s
Iteration  24: 156452.195 ops/s
Iteration  25: 156412.565 ops/s
Iteration  26: 156118.242 ops/s
Iteration  27: 156714.743 ops/s
Iteration  28: 156084.512 ops/s
Iteration  29: 156093.027 ops/s
Iteration  30: 156108.265 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_595._Benchmark.benchmark_Cluster_595":
  156245.292 ±(99.9%) 226.248 ops/s [Average]
  (min, avg, max) = (155223.241, 156245.292, 156757.959), stdev = 338.638
  CI (99.9%): [156019.044, 156471.540] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_595._Benchmark.benchmark_Cluster_595  thrpt   30  156245.292 ± 226.248  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_596._Benchmark.benchmark_Cluster_596$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_596._Benchmark.benchmark_Cluster_596

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 101447.312 ops/s
# Warmup Iteration   2: 110105.854 ops/s
# Warmup Iteration   3: 122275.330 ops/s
# Warmup Iteration   4: 144125.803 ops/s
# Warmup Iteration   5: 145130.545 ops/s
# Warmup Iteration   6: 145266.821 ops/s
# Warmup Iteration   7: 145634.826 ops/s
# Warmup Iteration   8: 145562.018 ops/s
# Warmup Iteration   9: 145333.189 ops/s
# Warmup Iteration  10: 145254.181 ops/s
# Warmup Iteration  11: 144777.595 ops/s
# Warmup Iteration  12: 145164.690 ops/s
# Warmup Iteration  13: 145331.236 ops/s
# Warmup Iteration  14: 144872.780 ops/s
# Warmup Iteration  15: 120753.873 ops/s
# Warmup Iteration  16: 140129.069 ops/s
# Warmup Iteration  17: 153479.526 ops/s
# Warmup Iteration  18: 153765.834 ops/s
# Warmup Iteration  19: 153178.477 ops/s
# Warmup Iteration  20: 153268.311 ops/s
# Warmup Iteration  21: 153559.775 ops/s
# Warmup Iteration  22: 154011.156 ops/s
# Warmup Iteration  23: 153841.394 ops/s
# Warmup Iteration  24: 153858.728 ops/s
# Warmup Iteration  25: 154372.620 ops/s
# Warmup Iteration  26: 153926.368 ops/s
# Warmup Iteration  27: 153153.011 ops/s
# Warmup Iteration  28: 153426.280 ops/s
# Warmup Iteration  29: 153845.466 ops/s
# Warmup Iteration  30: 153739.233 ops/s
Iteration   1: 154093.796 ops/s
Iteration   2: 154171.444 ops/s
Iteration   3: 153883.553 ops/s
Iteration   4: 154070.387 ops/s
Iteration   5: 153417.266 ops/s
Iteration   6: 153951.971 ops/s
Iteration   7: 153621.195 ops/s
Iteration   8: 153218.868 ops/s
Iteration   9: 153853.101 ops/s
Iteration  10: 153864.266 ops/s
Iteration  11: 153516.161 ops/s
Iteration  12: 153950.712 ops/s
Iteration  13: 153700.107 ops/s
Iteration  14: 153966.430 ops/s
Iteration  15: 153440.948 ops/s
Iteration  16: 153765.053 ops/s
Iteration  17: 153827.043 ops/s
Iteration  18: 154049.241 ops/s
Iteration  19: 154024.243 ops/s
Iteration  20: 153200.049 ops/s
Iteration  21: 153006.826 ops/s
Iteration  22: 153727.706 ops/s
Iteration  23: 153853.836 ops/s
Iteration  24: 153395.773 ops/s
Iteration  25: 153502.001 ops/s
Iteration  26: 152972.491 ops/s
Iteration  27: 152444.651 ops/s
Iteration  28: 152446.305 ops/s
Iteration  29: 153276.086 ops/s
Iteration  30: 153033.839 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_596._Benchmark.benchmark_Cluster_596":
  153574.845 ±(99.9%) 308.399 ops/s [Average]
  (min, avg, max) = (152444.651, 153574.845, 154171.444), stdev = 461.598
  CI (99.9%): [153266.446, 153883.244] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_596._Benchmark.benchmark_Cluster_596  thrpt   30  153574.845 ± 308.399  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_597._Benchmark.benchmark_Cluster_597$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_597._Benchmark.benchmark_Cluster_597

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 44834.822 ops/s
# Warmup Iteration   2: 98839.060 ops/s
# Warmup Iteration   3: 147552.303 ops/s
# Warmup Iteration   4: 149418.526 ops/s
# Warmup Iteration   5: 148687.779 ops/s
# Warmup Iteration   6: 117765.253 ops/s
# Warmup Iteration   7: 149139.380 ops/s
# Warmup Iteration   8: 149251.727 ops/s
# Warmup Iteration   9: 149329.937 ops/s
# Warmup Iteration  10: 149230.102 ops/s
# Warmup Iteration  11: 149188.286 ops/s
# Warmup Iteration  12: 149141.875 ops/s
# Warmup Iteration  13: 149195.221 ops/s
# Warmup Iteration  14: 149034.902 ops/s
# Warmup Iteration  15: 149175.318 ops/s
# Warmup Iteration  16: 149163.601 ops/s
# Warmup Iteration  17: 149059.651 ops/s
# Warmup Iteration  18: 149355.200 ops/s
# Warmup Iteration  19: 149080.529 ops/s
# Warmup Iteration  20: 149123.837 ops/s
# Warmup Iteration  21: 148795.933 ops/s
# Warmup Iteration  22: 149283.497 ops/s
# Warmup Iteration  23: 149386.309 ops/s
# Warmup Iteration  24: 149311.196 ops/s
# Warmup Iteration  25: 149262.722 ops/s
# Warmup Iteration  26: 149031.066 ops/s
# Warmup Iteration  27: 149144.642 ops/s
# Warmup Iteration  28: 148930.522 ops/s
# Warmup Iteration  29: 149086.146 ops/s
# Warmup Iteration  30: 149457.816 ops/s
Iteration   1: 149265.896 ops/s
Iteration   2: 149465.704 ops/s
Iteration   3: 149307.915 ops/s
Iteration   4: 149251.365 ops/s
Iteration   5: 149330.038 ops/s
Iteration   6: 149328.298 ops/s
Iteration   7: 148971.418 ops/s
Iteration   8: 149123.365 ops/s
Iteration   9: 149487.724 ops/s
Iteration  10: 149004.656 ops/s
Iteration  11: 149044.908 ops/s
Iteration  12: 149234.258 ops/s
Iteration  13: 149383.195 ops/s
Iteration  14: 149541.490 ops/s
Iteration  15: 149560.925 ops/s
Iteration  16: 149185.771 ops/s
Iteration  17: 149200.480 ops/s
Iteration  18: 149209.640 ops/s
Iteration  19: 149278.831 ops/s
Iteration  20: 149130.263 ops/s
Iteration  21: 149038.676 ops/s
Iteration  22: 148678.364 ops/s
Iteration  23: 148886.602 ops/s
Iteration  24: 149515.522 ops/s
Iteration  25: 148848.029 ops/s
Iteration  26: 149077.444 ops/s
Iteration  27: 149389.418 ops/s
Iteration  28: 149251.234 ops/s
Iteration  29: 149492.494 ops/s
Iteration  30: 149411.413 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_597._Benchmark.benchmark_Cluster_597":
  149229.844 ±(99.9%) 146.562 ops/s [Average]
  (min, avg, max) = (148678.364, 149229.844, 149560.925), stdev = 219.368
  CI (99.9%): [149083.282, 149376.407] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_597._Benchmark.benchmark_Cluster_597  thrpt   30  149229.844 ± 146.562  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_598._Benchmark.benchmark_Cluster_598$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_598._Benchmark.benchmark_Cluster_598

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58978.692 ops/s
# Warmup Iteration   2: 95176.908 ops/s
# Warmup Iteration   3: 148212.065 ops/s
# Warmup Iteration   4: 147119.487 ops/s
# Warmup Iteration   5: 147749.586 ops/s
# Warmup Iteration   6: 148139.726 ops/s
# Warmup Iteration   7: 139965.883 ops/s
# Warmup Iteration   8: 124373.865 ops/s
# Warmup Iteration   9: 147798.025 ops/s
# Warmup Iteration  10: 148135.838 ops/s
# Warmup Iteration  11: 148196.723 ops/s
# Warmup Iteration  12: 148107.417 ops/s
# Warmup Iteration  13: 147873.141 ops/s
# Warmup Iteration  14: 147979.046 ops/s
# Warmup Iteration  15: 147986.236 ops/s
# Warmup Iteration  16: 147911.550 ops/s
# Warmup Iteration  17: 148396.374 ops/s
# Warmup Iteration  18: 148305.859 ops/s
# Warmup Iteration  19: 148247.190 ops/s
# Warmup Iteration  20: 148306.471 ops/s
# Warmup Iteration  21: 148554.757 ops/s
# Warmup Iteration  22: 148444.610 ops/s
# Warmup Iteration  23: 148430.459 ops/s
# Warmup Iteration  24: 148149.434 ops/s
# Warmup Iteration  25: 148206.905 ops/s
# Warmup Iteration  26: 148176.400 ops/s
# Warmup Iteration  27: 148242.856 ops/s
# Warmup Iteration  28: 147977.021 ops/s
# Warmup Iteration  29: 148436.985 ops/s
# Warmup Iteration  30: 148388.723 ops/s
Iteration   1: 148400.107 ops/s
Iteration   2: 148266.674 ops/s
Iteration   3: 148160.274 ops/s
Iteration   4: 148490.475 ops/s
Iteration   5: 148166.098 ops/s
Iteration   6: 148432.944 ops/s
Iteration   7: 148193.412 ops/s
Iteration   8: 148479.123 ops/s
Iteration   9: 147593.347 ops/s
Iteration  10: 148236.105 ops/s
Iteration  11: 148414.954 ops/s
Iteration  12: 148094.620 ops/s
Iteration  13: 148683.130 ops/s
Iteration  14: 148390.959 ops/s
Iteration  15: 148212.348 ops/s
Iteration  16: 148074.651 ops/s
Iteration  17: 148090.060 ops/s
Iteration  18: 148066.279 ops/s
Iteration  19: 148035.921 ops/s
Iteration  20: 148694.066 ops/s
Iteration  21: 148256.893 ops/s
Iteration  22: 148499.065 ops/s
Iteration  23: 148440.858 ops/s
Iteration  24: 148212.552 ops/s
Iteration  25: 148052.317 ops/s
Iteration  26: 148209.560 ops/s
Iteration  27: 148507.966 ops/s
Iteration  28: 147967.091 ops/s
Iteration  29: 148487.867 ops/s
Iteration  30: 148367.081 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_598._Benchmark.benchmark_Cluster_598":
  148272.560 ±(99.9%) 154.553 ops/s [Average]
  (min, avg, max) = (147593.347, 148272.560, 148694.066), stdev = 231.327
  CI (99.9%): [148118.007, 148427.113] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_598._Benchmark.benchmark_Cluster_598  thrpt   30  148272.560 ± 154.553  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_599._Benchmark.benchmark_Cluster_599$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_599._Benchmark.benchmark_Cluster_599

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 87193.630 ops/s
# Warmup Iteration   2: 124003.587 ops/s
# Warmup Iteration   3: 181991.762 ops/s
# Warmup Iteration   4: 180640.105 ops/s
# Warmup Iteration   5: 181937.508 ops/s
# Warmup Iteration   6: 182246.188 ops/s
# Warmup Iteration   7: 182060.088 ops/s
# Warmup Iteration   8: 142426.984 ops/s
# Warmup Iteration   9: 181814.852 ops/s
# Warmup Iteration  10: 181323.945 ops/s
# Warmup Iteration  11: 181851.882 ops/s
# Warmup Iteration  12: 181612.762 ops/s
# Warmup Iteration  13: 181666.339 ops/s
# Warmup Iteration  14: 181904.128 ops/s
# Warmup Iteration  15: 181373.245 ops/s
# Warmup Iteration  16: 181327.659 ops/s
# Warmup Iteration  17: 181896.107 ops/s
# Warmup Iteration  18: 182240.868 ops/s
# Warmup Iteration  19: 182052.048 ops/s
# Warmup Iteration  20: 182107.053 ops/s
# Warmup Iteration  21: 182080.177 ops/s
# Warmup Iteration  22: 182208.049 ops/s
# Warmup Iteration  23: 182318.295 ops/s
# Warmup Iteration  24: 181995.733 ops/s
# Warmup Iteration  25: 181679.302 ops/s
# Warmup Iteration  26: 182323.675 ops/s
# Warmup Iteration  27: 181543.600 ops/s
# Warmup Iteration  28: 182431.586 ops/s
# Warmup Iteration  29: 182078.254 ops/s
# Warmup Iteration  30: 181704.982 ops/s
Iteration   1: 182235.197 ops/s
Iteration   2: 181626.030 ops/s
Iteration   3: 182252.051 ops/s
Iteration   4: 182391.003 ops/s
Iteration   5: 182176.749 ops/s
Iteration   6: 181446.558 ops/s
Iteration   7: 181451.603 ops/s
Iteration   8: 182224.700 ops/s
Iteration   9: 182252.762 ops/s
Iteration  10: 182158.639 ops/s
Iteration  11: 182230.379 ops/s
Iteration  12: 182270.783 ops/s
Iteration  13: 182370.816 ops/s
Iteration  14: 181914.822 ops/s
Iteration  15: 182580.401 ops/s
Iteration  16: 181564.556 ops/s
Iteration  17: 181719.979 ops/s
Iteration  18: 182211.616 ops/s
Iteration  19: 181267.890 ops/s
Iteration  20: 182112.543 ops/s
Iteration  21: 181788.000 ops/s
Iteration  22: 181225.488 ops/s
Iteration  23: 181833.818 ops/s
Iteration  24: 182016.023 ops/s
Iteration  25: 182247.039 ops/s
Iteration  26: 182110.062 ops/s
Iteration  27: 182219.763 ops/s
Iteration  28: 182241.614 ops/s
Iteration  29: 181526.857 ops/s
Iteration  30: 181992.606 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_599._Benchmark.benchmark_Cluster_599":
  181988.678 ±(99.9%) 239.657 ops/s [Average]
  (min, avg, max) = (181225.488, 181988.678, 182580.401), stdev = 358.707
  CI (99.9%): [181749.021, 182228.335] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_599._Benchmark.benchmark_Cluster_599  thrpt   30  181988.678 ± 239.657  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_6._Benchmark.benchmark_Cluster_6$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_6._Benchmark.benchmark_Cluster_6

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 87475.211 ops/s
# Warmup Iteration   2: 97370.865 ops/s
# Warmup Iteration   3: 148131.175 ops/s
# Warmup Iteration   4: 148250.188 ops/s
# Warmup Iteration   5: 148248.668 ops/s
# Warmup Iteration   6: 149364.636 ops/s
# Warmup Iteration   7: 149268.570 ops/s
# Warmup Iteration   8: 149241.219 ops/s
# Warmup Iteration   9: 148900.244 ops/s
# Warmup Iteration  10: 124248.932 ops/s
# Warmup Iteration  11: 142629.789 ops/s
# Warmup Iteration  12: 148751.223 ops/s
# Warmup Iteration  13: 149098.458 ops/s
# Warmup Iteration  14: 149266.316 ops/s
# Warmup Iteration  15: 149304.553 ops/s
# Warmup Iteration  16: 149054.942 ops/s
# Warmup Iteration  17: 155019.551 ops/s
# Warmup Iteration  18: 155444.136 ops/s
# Warmup Iteration  19: 155099.811 ops/s
# Warmup Iteration  20: 154786.118 ops/s
# Warmup Iteration  21: 154629.911 ops/s
# Warmup Iteration  22: 155032.829 ops/s
# Warmup Iteration  23: 155240.187 ops/s
# Warmup Iteration  24: 155358.985 ops/s
# Warmup Iteration  25: 154979.643 ops/s
# Warmup Iteration  26: 155249.503 ops/s
# Warmup Iteration  27: 155017.728 ops/s
# Warmup Iteration  28: 154739.723 ops/s
# Warmup Iteration  29: 154996.137 ops/s
# Warmup Iteration  30: 154859.840 ops/s
Iteration   1: 155327.727 ops/s
Iteration   2: 155122.859 ops/s
Iteration   3: 155034.356 ops/s
Iteration   4: 155405.315 ops/s
Iteration   5: 155407.688 ops/s
Iteration   6: 155618.849 ops/s
Iteration   7: 155448.104 ops/s
Iteration   8: 155186.677 ops/s
Iteration   9: 155395.757 ops/s
Iteration  10: 155176.853 ops/s
Iteration  11: 155240.520 ops/s
Iteration  12: 155119.819 ops/s
Iteration  13: 154571.909 ops/s
Iteration  14: 154966.478 ops/s
Iteration  15: 155020.767 ops/s
Iteration  16: 155206.319 ops/s
Iteration  17: 155319.536 ops/s
Iteration  18: 155190.763 ops/s
Iteration  19: 155171.016 ops/s
Iteration  20: 155056.799 ops/s
Iteration  21: 155278.134 ops/s
Iteration  22: 155324.291 ops/s
Iteration  23: 154716.634 ops/s
Iteration  24: 155021.404 ops/s
Iteration  25: 155443.303 ops/s
Iteration  26: 155094.482 ops/s
Iteration  27: 154875.416 ops/s
Iteration  28: 155356.128 ops/s
Iteration  29: 154692.583 ops/s
Iteration  30: 155134.352 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_6._Benchmark.benchmark_Cluster_6":
  155164.161 ±(99.9%) 159.191 ops/s [Average]
  (min, avg, max) = (154571.909, 155164.161, 155618.849), stdev = 238.270
  CI (99.9%): [155004.970, 155323.353] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score     Error  Units
Cluster_6._Benchmark.benchmark_Cluster_6  thrpt   30  155164.161 ± 159.191  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_60._Benchmark.benchmark_Cluster_60$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_60._Benchmark.benchmark_Cluster_60

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72090.474 ops/s
# Warmup Iteration   2: 120144.340 ops/s
# Warmup Iteration   3: 167357.226 ops/s
# Warmup Iteration   4: 166054.773 ops/s
# Warmup Iteration   5: 167345.352 ops/s
# Warmup Iteration   6: 166882.692 ops/s
# Warmup Iteration   7: 132105.451 ops/s
# Warmup Iteration   8: 166843.572 ops/s
# Warmup Iteration   9: 166735.522 ops/s
# Warmup Iteration  10: 167073.988 ops/s
# Warmup Iteration  11: 167045.444 ops/s
# Warmup Iteration  12: 166723.255 ops/s
# Warmup Iteration  13: 167146.463 ops/s
# Warmup Iteration  14: 167012.983 ops/s
# Warmup Iteration  15: 166870.744 ops/s
# Warmup Iteration  16: 166977.030 ops/s
# Warmup Iteration  17: 167328.125 ops/s
# Warmup Iteration  18: 166938.637 ops/s
# Warmup Iteration  19: 166955.186 ops/s
# Warmup Iteration  20: 166945.310 ops/s
# Warmup Iteration  21: 167055.847 ops/s
# Warmup Iteration  22: 166952.820 ops/s
# Warmup Iteration  23: 167060.638 ops/s
# Warmup Iteration  24: 166679.597 ops/s
# Warmup Iteration  25: 167258.608 ops/s
# Warmup Iteration  26: 166981.568 ops/s
# Warmup Iteration  27: 167145.663 ops/s
# Warmup Iteration  28: 166998.311 ops/s
# Warmup Iteration  29: 166959.085 ops/s
# Warmup Iteration  30: 166978.663 ops/s
Iteration   1: 166899.722 ops/s
Iteration   2: 166771.264 ops/s
Iteration   3: 166979.703 ops/s
Iteration   4: 166966.224 ops/s
Iteration   5: 166941.439 ops/s
Iteration   6: 167090.508 ops/s
Iteration   7: 167265.054 ops/s
Iteration   8: 166724.919 ops/s
Iteration   9: 167160.978 ops/s
Iteration  10: 166798.039 ops/s
Iteration  11: 166897.542 ops/s
Iteration  12: 166717.083 ops/s
Iteration  13: 167043.060 ops/s
Iteration  14: 166634.998 ops/s
Iteration  15: 167040.007 ops/s
Iteration  16: 167317.156 ops/s
Iteration  17: 166643.677 ops/s
Iteration  18: 167294.246 ops/s
Iteration  19: 167119.494 ops/s
Iteration  20: 166996.399 ops/s
Iteration  21: 167001.182 ops/s
Iteration  22: 167128.122 ops/s
Iteration  23: 166812.105 ops/s
Iteration  24: 167042.697 ops/s
Iteration  25: 166727.461 ops/s
Iteration  26: 167044.757 ops/s
Iteration  27: 166897.568 ops/s
Iteration  28: 166875.761 ops/s
Iteration  29: 166873.334 ops/s
Iteration  30: 166516.597 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_60._Benchmark.benchmark_Cluster_60":
  166940.703 ±(99.9%) 132.687 ops/s [Average]
  (min, avg, max) = (166516.597, 166940.703, 167317.156), stdev = 198.600
  CI (99.9%): [166808.016, 167073.390] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_60._Benchmark.benchmark_Cluster_60  thrpt   30  166940.703 ± 132.687  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_600._Benchmark.benchmark_Cluster_600$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_600._Benchmark.benchmark_Cluster_600

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64993.832 ops/s
# Warmup Iteration   2: 136802.650 ops/s
# Warmup Iteration   3: 181900.002 ops/s
# Warmup Iteration   4: 183443.001 ops/s
# Warmup Iteration   5: 183849.695 ops/s
# Warmup Iteration   6: 146353.380 ops/s
# Warmup Iteration   7: 182463.614 ops/s
# Warmup Iteration   8: 183838.804 ops/s
# Warmup Iteration   9: 183380.852 ops/s
# Warmup Iteration  10: 182909.324 ops/s
# Warmup Iteration  11: 182518.175 ops/s
# Warmup Iteration  12: 183366.958 ops/s
# Warmup Iteration  13: 183263.837 ops/s
# Warmup Iteration  14: 183713.147 ops/s
# Warmup Iteration  15: 183159.253 ops/s
# Warmup Iteration  16: 182839.753 ops/s
# Warmup Iteration  17: 183514.931 ops/s
# Warmup Iteration  18: 182465.133 ops/s
# Warmup Iteration  19: 183021.324 ops/s
# Warmup Iteration  20: 183166.601 ops/s
# Warmup Iteration  21: 183566.394 ops/s
# Warmup Iteration  22: 183399.274 ops/s
# Warmup Iteration  23: 183049.359 ops/s
# Warmup Iteration  24: 183326.938 ops/s
# Warmup Iteration  25: 183410.715 ops/s
# Warmup Iteration  26: 183408.453 ops/s
# Warmup Iteration  27: 183390.887 ops/s
# Warmup Iteration  28: 183001.426 ops/s
# Warmup Iteration  29: 182655.855 ops/s
# Warmup Iteration  30: 183457.461 ops/s
Iteration   1: 183528.363 ops/s
Iteration   2: 182970.499 ops/s
Iteration   3: 183071.859 ops/s
Iteration   4: 182702.974 ops/s
Iteration   5: 183192.537 ops/s
Iteration   6: 183067.510 ops/s
Iteration   7: 183618.909 ops/s
Iteration   8: 182702.121 ops/s
Iteration   9: 183599.186 ops/s
Iteration  10: 182956.796 ops/s
Iteration  11: 182963.431 ops/s
Iteration  12: 183386.302 ops/s
Iteration  13: 183055.952 ops/s
Iteration  14: 182560.699 ops/s
Iteration  15: 181797.951 ops/s
Iteration  16: 181547.783 ops/s
Iteration  17: 183280.858 ops/s
Iteration  18: 183521.880 ops/s
Iteration  19: 183006.304 ops/s
Iteration  20: 183633.985 ops/s
Iteration  21: 184275.857 ops/s
Iteration  22: 183564.223 ops/s
Iteration  23: 183610.558 ops/s
Iteration  24: 183905.909 ops/s
Iteration  25: 184364.058 ops/s
Iteration  26: 183358.020 ops/s
Iteration  27: 182062.762 ops/s
Iteration  28: 184438.016 ops/s
Iteration  29: 183357.762 ops/s
Iteration  30: 183218.422 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_600._Benchmark.benchmark_Cluster_600":
  183210.716 ±(99.9%) 444.215 ops/s [Average]
  (min, avg, max) = (181547.783, 183210.716, 184438.016), stdev = 664.880
  CI (99.9%): [182766.501, 183654.931] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_600._Benchmark.benchmark_Cluster_600  thrpt   30  183210.716 ± 444.215  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_601._Benchmark.benchmark_Cluster_601$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_601._Benchmark.benchmark_Cluster_601

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76860.396 ops/s
# Warmup Iteration   2: 137175.430 ops/s
# Warmup Iteration   3: 171803.343 ops/s
# Warmup Iteration   4: 173654.819 ops/s
# Warmup Iteration   5: 173133.491 ops/s
# Warmup Iteration   6: 136266.355 ops/s
# Warmup Iteration   7: 173438.582 ops/s
# Warmup Iteration   8: 173589.904 ops/s
# Warmup Iteration   9: 173593.758 ops/s
# Warmup Iteration  10: 173710.431 ops/s
# Warmup Iteration  11: 173333.032 ops/s
# Warmup Iteration  12: 173210.568 ops/s
# Warmup Iteration  13: 173253.322 ops/s
# Warmup Iteration  14: 173485.847 ops/s
# Warmup Iteration  15: 173639.319 ops/s
# Warmup Iteration  16: 173601.291 ops/s
# Warmup Iteration  17: 173290.508 ops/s
# Warmup Iteration  18: 173202.435 ops/s
# Warmup Iteration  19: 172945.863 ops/s
# Warmup Iteration  20: 173048.378 ops/s
# Warmup Iteration  21: 173179.903 ops/s
# Warmup Iteration  22: 173310.942 ops/s
# Warmup Iteration  23: 173277.181 ops/s
# Warmup Iteration  24: 173077.522 ops/s
# Warmup Iteration  25: 173104.495 ops/s
# Warmup Iteration  26: 173152.880 ops/s
# Warmup Iteration  27: 173396.417 ops/s
# Warmup Iteration  28: 173235.932 ops/s
# Warmup Iteration  29: 173263.878 ops/s
# Warmup Iteration  30: 173489.088 ops/s
Iteration   1: 173358.090 ops/s
Iteration   2: 173101.974 ops/s
Iteration   3: 172951.728 ops/s
Iteration   4: 173255.947 ops/s
Iteration   5: 173342.917 ops/s
Iteration   6: 173534.826 ops/s
Iteration   7: 173270.702 ops/s
Iteration   8: 173090.103 ops/s
Iteration   9: 173291.247 ops/s
Iteration  10: 173410.579 ops/s
Iteration  11: 173470.956 ops/s
Iteration  12: 173182.472 ops/s
Iteration  13: 173254.668 ops/s
Iteration  14: 173202.101 ops/s
Iteration  15: 173501.616 ops/s
Iteration  16: 173155.698 ops/s
Iteration  17: 173496.551 ops/s
Iteration  18: 172646.437 ops/s
Iteration  19: 172967.419 ops/s
Iteration  20: 173406.767 ops/s
Iteration  21: 173036.067 ops/s
Iteration  22: 173339.764 ops/s
Iteration  23: 173397.234 ops/s
Iteration  24: 173527.526 ops/s
Iteration  25: 172941.624 ops/s
Iteration  26: 173190.017 ops/s
Iteration  27: 173064.454 ops/s
Iteration  28: 173178.746 ops/s
Iteration  29: 173257.231 ops/s
Iteration  30: 173337.332 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_601._Benchmark.benchmark_Cluster_601":
  173238.760 ±(99.9%) 136.914 ops/s [Average]
  (min, avg, max) = (172646.437, 173238.760, 173534.826), stdev = 204.927
  CI (99.9%): [173101.846, 173375.674] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_601._Benchmark.benchmark_Cluster_601  thrpt   30  173238.760 ± 136.914  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_602._Benchmark.benchmark_Cluster_602$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_602._Benchmark.benchmark_Cluster_602

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 90627.197 ops/s
# Warmup Iteration   2: 133663.311 ops/s
# Warmup Iteration   3: 186528.696 ops/s
# Warmup Iteration   4: 185727.088 ops/s
# Warmup Iteration   5: 186600.251 ops/s
# Warmup Iteration   6: 186768.581 ops/s
# Warmup Iteration   7: 183216.818 ops/s
# Warmup Iteration   8: 152205.106 ops/s
# Warmup Iteration   9: 186580.015 ops/s
# Warmup Iteration  10: 187066.586 ops/s
# Warmup Iteration  11: 186992.155 ops/s
# Warmup Iteration  12: 187066.541 ops/s
# Warmup Iteration  13: 186881.253 ops/s
# Warmup Iteration  14: 187008.611 ops/s
# Warmup Iteration  15: 186873.268 ops/s
# Warmup Iteration  16: 187272.954 ops/s
# Warmup Iteration  17: 186970.415 ops/s
# Warmup Iteration  18: 187270.703 ops/s
# Warmup Iteration  19: 186936.759 ops/s
# Warmup Iteration  20: 186721.178 ops/s
# Warmup Iteration  21: 187176.507 ops/s
# Warmup Iteration  22: 186664.067 ops/s
# Warmup Iteration  23: 186953.155 ops/s
# Warmup Iteration  24: 187327.989 ops/s
# Warmup Iteration  25: 186855.504 ops/s
# Warmup Iteration  26: 186882.111 ops/s
# Warmup Iteration  27: 186878.586 ops/s
# Warmup Iteration  28: 187254.928 ops/s
# Warmup Iteration  29: 187201.307 ops/s
# Warmup Iteration  30: 187369.003 ops/s
Iteration   1: 187392.836 ops/s
Iteration   2: 187165.867 ops/s
Iteration   3: 187246.526 ops/s
Iteration   4: 186894.657 ops/s
Iteration   5: 186902.980 ops/s
Iteration   6: 186883.487 ops/s
Iteration   7: 186379.323 ops/s
Iteration   8: 187186.592 ops/s
Iteration   9: 187102.404 ops/s
Iteration  10: 187103.952 ops/s
Iteration  11: 187191.396 ops/s
Iteration  12: 187055.269 ops/s
Iteration  13: 187357.361 ops/s
Iteration  14: 187538.628 ops/s
Iteration  15: 187259.035 ops/s
Iteration  16: 187329.815 ops/s
Iteration  17: 186596.221 ops/s
Iteration  18: 187222.437 ops/s
Iteration  19: 186894.045 ops/s
Iteration  20: 186867.799 ops/s
Iteration  21: 187360.727 ops/s
Iteration  22: 186346.665 ops/s
Iteration  23: 187260.092 ops/s
Iteration  24: 186955.720 ops/s
Iteration  25: 187396.290 ops/s
Iteration  26: 187386.909 ops/s
Iteration  27: 187048.718 ops/s
Iteration  28: 187391.578 ops/s
Iteration  29: 187199.958 ops/s
Iteration  30: 187381.042 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_602._Benchmark.benchmark_Cluster_602":
  187109.944 ±(99.9%) 196.330 ops/s [Average]
  (min, avg, max) = (186346.665, 187109.944, 187538.628), stdev = 293.858
  CI (99.9%): [186913.614, 187306.275] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_602._Benchmark.benchmark_Cluster_602  thrpt   30  187109.944 ± 196.330  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_603._Benchmark.benchmark_Cluster_603$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_603._Benchmark.benchmark_Cluster_603

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78441.173 ops/s
# Warmup Iteration   2: 127344.167 ops/s
# Warmup Iteration   3: 170276.255 ops/s
# Warmup Iteration   4: 168814.189 ops/s
# Warmup Iteration   5: 170538.686 ops/s
# Warmup Iteration   6: 170546.318 ops/s
# Warmup Iteration   7: 134353.120 ops/s
# Warmup Iteration   8: 170403.990 ops/s
# Warmup Iteration   9: 170513.085 ops/s
# Warmup Iteration  10: 170123.696 ops/s
# Warmup Iteration  11: 170321.194 ops/s
# Warmup Iteration  12: 170419.555 ops/s
# Warmup Iteration  13: 170448.994 ops/s
# Warmup Iteration  14: 170546.296 ops/s
# Warmup Iteration  15: 170282.198 ops/s
# Warmup Iteration  16: 170310.119 ops/s
# Warmup Iteration  17: 169885.570 ops/s
# Warmup Iteration  18: 170190.236 ops/s
# Warmup Iteration  19: 169949.453 ops/s
# Warmup Iteration  20: 170353.446 ops/s
# Warmup Iteration  21: 170232.307 ops/s
# Warmup Iteration  22: 170290.487 ops/s
# Warmup Iteration  23: 170042.318 ops/s
# Warmup Iteration  24: 170216.318 ops/s
# Warmup Iteration  25: 170210.114 ops/s
# Warmup Iteration  26: 170231.850 ops/s
# Warmup Iteration  27: 170298.377 ops/s
# Warmup Iteration  28: 170281.164 ops/s
# Warmup Iteration  29: 170243.297 ops/s
# Warmup Iteration  30: 170272.985 ops/s
Iteration   1: 170434.564 ops/s
Iteration   2: 170131.007 ops/s
Iteration   3: 170132.721 ops/s
Iteration   4: 170060.152 ops/s
Iteration   5: 170518.237 ops/s
Iteration   6: 170245.969 ops/s
Iteration   7: 170330.108 ops/s
Iteration   8: 170420.509 ops/s
Iteration   9: 170037.244 ops/s
Iteration  10: 170333.276 ops/s
Iteration  11: 170220.530 ops/s
Iteration  12: 170270.003 ops/s
Iteration  13: 170315.587 ops/s
Iteration  14: 170495.745 ops/s
Iteration  15: 169915.933 ops/s
Iteration  16: 170034.967 ops/s
Iteration  17: 170229.931 ops/s
Iteration  18: 170465.841 ops/s
Iteration  19: 170062.756 ops/s
Iteration  20: 170410.870 ops/s
Iteration  21: 169952.502 ops/s
Iteration  22: 170037.929 ops/s
Iteration  23: 170274.750 ops/s
Iteration  24: 170314.317 ops/s
Iteration  25: 170214.580 ops/s
Iteration  26: 170423.313 ops/s
Iteration  27: 170057.959 ops/s
Iteration  28: 170365.378 ops/s
Iteration  29: 169560.152 ops/s
Iteration  30: 170291.557 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_603._Benchmark.benchmark_Cluster_603":
  170218.613 ±(99.9%) 139.107 ops/s [Average]
  (min, avg, max) = (169560.152, 170218.613, 170518.237), stdev = 208.209
  CI (99.9%): [170079.506, 170357.720] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_603._Benchmark.benchmark_Cluster_603  thrpt   30  170218.613 ± 139.107  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_604._Benchmark.benchmark_Cluster_604$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_604._Benchmark.benchmark_Cluster_604

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 31954.528 ops/s
# Warmup Iteration   2: 70166.061 ops/s
# Warmup Iteration   3: 103155.908 ops/s
# Warmup Iteration   4: 104139.147 ops/s
# Warmup Iteration   5: 103970.342 ops/s
# Warmup Iteration   6: 82704.672 ops/s
# Warmup Iteration   7: 104113.316 ops/s
# Warmup Iteration   8: 104310.004 ops/s
# Warmup Iteration   9: 104366.800 ops/s
# Warmup Iteration  10: 104410.468 ops/s
# Warmup Iteration  11: 104319.727 ops/s
# Warmup Iteration  12: 104332.140 ops/s
# Warmup Iteration  13: 104090.672 ops/s
# Warmup Iteration  14: 104474.030 ops/s
# Warmup Iteration  15: 104377.958 ops/s
# Warmup Iteration  16: 104450.893 ops/s
# Warmup Iteration  17: 104827.754 ops/s
# Warmup Iteration  18: 104971.394 ops/s
# Warmup Iteration  19: 105105.578 ops/s
# Warmup Iteration  20: 104856.688 ops/s
# Warmup Iteration  21: 104815.932 ops/s
# Warmup Iteration  22: 104765.893 ops/s
# Warmup Iteration  23: 104860.200 ops/s
# Warmup Iteration  24: 104950.664 ops/s
# Warmup Iteration  25: 105030.214 ops/s
# Warmup Iteration  26: 104951.617 ops/s
# Warmup Iteration  27: 104932.464 ops/s
# Warmup Iteration  28: 104848.640 ops/s
# Warmup Iteration  29: 104706.387 ops/s
# Warmup Iteration  30: 104842.019 ops/s
Iteration   1: 104654.156 ops/s
Iteration   2: 105299.597 ops/s
Iteration   3: 104592.543 ops/s
Iteration   4: 104999.241 ops/s
Iteration   5: 104982.437 ops/s
Iteration   6: 105093.796 ops/s
Iteration   7: 105251.779 ops/s
Iteration   8: 104981.726 ops/s
Iteration   9: 105210.565 ops/s
Iteration  10: 104811.836 ops/s
Iteration  11: 104465.333 ops/s
Iteration  12: 105051.813 ops/s
Iteration  13: 104778.732 ops/s
Iteration  14: 105148.002 ops/s
Iteration  15: 104857.494 ops/s
Iteration  16: 105090.398 ops/s
Iteration  17: 104789.047 ops/s
Iteration  18: 104691.535 ops/s
Iteration  19: 104742.040 ops/s
Iteration  20: 104634.987 ops/s
Iteration  21: 104880.641 ops/s
Iteration  22: 104931.574 ops/s
Iteration  23: 105077.148 ops/s
Iteration  24: 104853.080 ops/s
Iteration  25: 104868.989 ops/s
Iteration  26: 105160.083 ops/s
Iteration  27: 105032.512 ops/s
Iteration  28: 104993.182 ops/s
Iteration  29: 104769.328 ops/s
Iteration  30: 104963.020 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_604._Benchmark.benchmark_Cluster_604":
  104921.887 ±(99.9%) 136.876 ops/s [Average]
  (min, avg, max) = (104465.333, 104921.887, 105299.597), stdev = 204.870
  CI (99.9%): [104785.011, 105058.763] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_604._Benchmark.benchmark_Cluster_604  thrpt   30  104921.887 ± 136.876  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_605._Benchmark.benchmark_Cluster_605$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_605._Benchmark.benchmark_Cluster_605

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45104.517 ops/s
# Warmup Iteration   2: 75421.958 ops/s
# Warmup Iteration   3: 126693.130 ops/s
# Warmup Iteration   4: 125603.751 ops/s
# Warmup Iteration   5: 126888.891 ops/s
# Warmup Iteration   6: 126113.517 ops/s
# Warmup Iteration   7: 126144.713 ops/s
# Warmup Iteration   8: 97455.028 ops/s
# Warmup Iteration   9: 127052.752 ops/s
# Warmup Iteration  10: 126876.435 ops/s
# Warmup Iteration  11: 126957.037 ops/s
# Warmup Iteration  12: 126708.774 ops/s
# Warmup Iteration  13: 126912.295 ops/s
# Warmup Iteration  14: 126869.227 ops/s
# Warmup Iteration  15: 127106.532 ops/s
# Warmup Iteration  16: 126969.080 ops/s
# Warmup Iteration  17: 129022.577 ops/s
# Warmup Iteration  18: 128736.570 ops/s
# Warmup Iteration  19: 129033.749 ops/s
# Warmup Iteration  20: 129001.325 ops/s
# Warmup Iteration  21: 129015.002 ops/s
# Warmup Iteration  22: 128980.539 ops/s
# Warmup Iteration  23: 129122.287 ops/s
# Warmup Iteration  24: 129123.067 ops/s
# Warmup Iteration  25: 128851.955 ops/s
# Warmup Iteration  26: 128822.783 ops/s
# Warmup Iteration  27: 128671.445 ops/s
# Warmup Iteration  28: 129108.406 ops/s
# Warmup Iteration  29: 128801.012 ops/s
# Warmup Iteration  30: 129034.392 ops/s
Iteration   1: 128789.002 ops/s
Iteration   2: 129511.090 ops/s
Iteration   3: 128679.826 ops/s
Iteration   4: 128994.722 ops/s
Iteration   5: 128961.877 ops/s
Iteration   6: 129123.822 ops/s
Iteration   7: 128852.596 ops/s
Iteration   8: 128828.481 ops/s
Iteration   9: 129279.675 ops/s
Iteration  10: 128618.975 ops/s
Iteration  11: 129053.921 ops/s
Iteration  12: 128675.696 ops/s
Iteration  13: 129039.027 ops/s
Iteration  14: 127847.073 ops/s
Iteration  15: 128724.103 ops/s
Iteration  16: 129431.372 ops/s
Iteration  17: 129021.628 ops/s
Iteration  18: 129120.120 ops/s
Iteration  19: 129302.871 ops/s
Iteration  20: 129150.650 ops/s
Iteration  21: 129281.053 ops/s
Iteration  22: 129188.625 ops/s
Iteration  23: 129212.907 ops/s
Iteration  24: 129239.895 ops/s
Iteration  25: 128903.210 ops/s
Iteration  26: 129069.986 ops/s
Iteration  27: 128170.211 ops/s
Iteration  28: 129203.673 ops/s
Iteration  29: 129257.106 ops/s
Iteration  30: 128421.666 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_605._Benchmark.benchmark_Cluster_605":
  128965.162 ±(99.9%) 243.620 ops/s [Average]
  (min, avg, max) = (127847.073, 128965.162, 129511.090), stdev = 364.639
  CI (99.9%): [128721.542, 129208.782] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_605._Benchmark.benchmark_Cluster_605  thrpt   30  128965.162 ± 243.620  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_606._Benchmark.benchmark_Cluster_606$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_606._Benchmark.benchmark_Cluster_606

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94548.393 ops/s
# Warmup Iteration   2: 106965.726 ops/s
# Warmup Iteration   3: 136680.140 ops/s
# Warmup Iteration   4: 150774.473 ops/s
# Warmup Iteration   5: 152039.218 ops/s
# Warmup Iteration   6: 152094.798 ops/s
# Warmup Iteration   7: 152545.996 ops/s
# Warmup Iteration   8: 152182.608 ops/s
# Warmup Iteration   9: 151978.988 ops/s
# Warmup Iteration  10: 152951.015 ops/s
# Warmup Iteration  11: 152373.527 ops/s
# Warmup Iteration  12: 148611.997 ops/s
# Warmup Iteration  13: 123727.829 ops/s
# Warmup Iteration  14: 152138.718 ops/s
# Warmup Iteration  15: 151617.501 ops/s
# Warmup Iteration  16: 152375.249 ops/s
# Warmup Iteration  17: 160524.673 ops/s
# Warmup Iteration  18: 160384.014 ops/s
# Warmup Iteration  19: 160270.847 ops/s
# Warmup Iteration  20: 160487.135 ops/s
# Warmup Iteration  21: 160316.633 ops/s
# Warmup Iteration  22: 160681.400 ops/s
# Warmup Iteration  23: 160445.290 ops/s
# Warmup Iteration  24: 160675.092 ops/s
# Warmup Iteration  25: 160500.957 ops/s
# Warmup Iteration  26: 160240.033 ops/s
# Warmup Iteration  27: 160109.581 ops/s
# Warmup Iteration  28: 160174.824 ops/s
# Warmup Iteration  29: 160407.754 ops/s
# Warmup Iteration  30: 159707.270 ops/s
Iteration   1: 160353.439 ops/s
Iteration   2: 160658.327 ops/s
Iteration   3: 160497.674 ops/s
Iteration   4: 160406.962 ops/s
Iteration   5: 160344.596 ops/s
Iteration   6: 160464.160 ops/s
Iteration   7: 160465.242 ops/s
Iteration   8: 160293.286 ops/s
Iteration   9: 160554.010 ops/s
Iteration  10: 160607.859 ops/s
Iteration  11: 160082.023 ops/s
Iteration  12: 160757.731 ops/s
Iteration  13: 159906.687 ops/s
Iteration  14: 160664.482 ops/s
Iteration  15: 160225.162 ops/s
Iteration  16: 160275.348 ops/s
Iteration  17: 160427.726 ops/s
Iteration  18: 160025.971 ops/s
Iteration  19: 160043.810 ops/s
Iteration  20: 160899.705 ops/s
Iteration  21: 160571.769 ops/s
Iteration  22: 160553.209 ops/s
Iteration  23: 160213.801 ops/s
Iteration  24: 159851.614 ops/s
Iteration  25: 160416.959 ops/s
Iteration  26: 160057.376 ops/s
Iteration  27: 159872.799 ops/s
Iteration  28: 159934.754 ops/s
Iteration  29: 159982.748 ops/s
Iteration  30: 160471.839 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_606._Benchmark.benchmark_Cluster_606":
  160329.369 ±(99.9%) 188.319 ops/s [Average]
  (min, avg, max) = (159851.614, 160329.369, 160899.705), stdev = 281.867
  CI (99.9%): [160141.050, 160517.688] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_606._Benchmark.benchmark_Cluster_606  thrpt   30  160329.369 ± 188.319  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_607._Benchmark.benchmark_Cluster_607$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_607._Benchmark.benchmark_Cluster_607

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71724.146 ops/s
# Warmup Iteration   2: 98601.535 ops/s
# Warmup Iteration   3: 158797.352 ops/s
# Warmup Iteration   4: 157950.141 ops/s
# Warmup Iteration   5: 159014.898 ops/s
# Warmup Iteration   6: 159360.707 ops/s
# Warmup Iteration   7: 159298.296 ops/s
# Warmup Iteration   8: 138015.875 ops/s
# Warmup Iteration   9: 144695.173 ops/s
# Warmup Iteration  10: 158902.348 ops/s
# Warmup Iteration  11: 159135.854 ops/s
# Warmup Iteration  12: 159312.887 ops/s
# Warmup Iteration  13: 159071.634 ops/s
# Warmup Iteration  14: 159009.424 ops/s
# Warmup Iteration  15: 159452.031 ops/s
# Warmup Iteration  16: 159303.498 ops/s
# Warmup Iteration  17: 160814.825 ops/s
# Warmup Iteration  18: 161187.796 ops/s
# Warmup Iteration  19: 161018.278 ops/s
# Warmup Iteration  20: 160979.448 ops/s
# Warmup Iteration  21: 161360.108 ops/s
# Warmup Iteration  22: 161414.213 ops/s
# Warmup Iteration  23: 161690.128 ops/s
# Warmup Iteration  24: 161251.322 ops/s
# Warmup Iteration  25: 161373.298 ops/s
# Warmup Iteration  26: 160998.449 ops/s
# Warmup Iteration  27: 161335.626 ops/s
# Warmup Iteration  28: 161394.849 ops/s
# Warmup Iteration  29: 161148.091 ops/s
# Warmup Iteration  30: 161377.191 ops/s
Iteration   1: 160904.781 ops/s
Iteration   2: 161630.877 ops/s
Iteration   3: 160870.070 ops/s
Iteration   4: 161624.614 ops/s
Iteration   5: 161138.734 ops/s
Iteration   6: 161579.064 ops/s
Iteration   7: 161391.466 ops/s
Iteration   8: 161083.577 ops/s
Iteration   9: 161446.799 ops/s
Iteration  10: 161528.092 ops/s
Iteration  11: 160868.729 ops/s
Iteration  12: 161406.258 ops/s
Iteration  13: 160958.907 ops/s
Iteration  14: 161246.879 ops/s
Iteration  15: 161331.041 ops/s
Iteration  16: 160885.860 ops/s
Iteration  17: 161252.075 ops/s
Iteration  18: 161840.875 ops/s
Iteration  19: 160848.631 ops/s
Iteration  20: 161379.536 ops/s
Iteration  21: 161252.950 ops/s
Iteration  22: 161176.373 ops/s
Iteration  23: 161051.917 ops/s
Iteration  24: 161123.813 ops/s
Iteration  25: 161529.909 ops/s
Iteration  26: 161785.517 ops/s
Iteration  27: 161093.176 ops/s
Iteration  28: 161185.848 ops/s
Iteration  29: 161007.607 ops/s
Iteration  30: 161218.280 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_607._Benchmark.benchmark_Cluster_607":
  161254.742 ±(99.9%) 186.824 ops/s [Average]
  (min, avg, max) = (160848.631, 161254.742, 161840.875), stdev = 279.629
  CI (99.9%): [161067.918, 161441.566] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_607._Benchmark.benchmark_Cluster_607  thrpt   30  161254.742 ± 186.824  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_608._Benchmark.benchmark_Cluster_608$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_608._Benchmark.benchmark_Cluster_608

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62646.400 ops/s
# Warmup Iteration   2: 94842.074 ops/s
# Warmup Iteration   3: 141387.801 ops/s
# Warmup Iteration   4: 140252.232 ops/s
# Warmup Iteration   5: 141641.098 ops/s
# Warmup Iteration   6: 141379.435 ops/s
# Warmup Iteration   7: 141639.976 ops/s
# Warmup Iteration   8: 111129.403 ops/s
# Warmup Iteration   9: 141635.377 ops/s
# Warmup Iteration  10: 141696.786 ops/s
# Warmup Iteration  11: 141478.056 ops/s
# Warmup Iteration  12: 141839.639 ops/s
# Warmup Iteration  13: 141517.092 ops/s
# Warmup Iteration  14: 141748.214 ops/s
# Warmup Iteration  15: 141866.191 ops/s
# Warmup Iteration  16: 141601.107 ops/s
# Warmup Iteration  17: 142158.962 ops/s
# Warmup Iteration  18: 142216.564 ops/s
# Warmup Iteration  19: 142142.709 ops/s
# Warmup Iteration  20: 142074.228 ops/s
# Warmup Iteration  21: 142331.142 ops/s
# Warmup Iteration  22: 142266.331 ops/s
# Warmup Iteration  23: 142107.532 ops/s
# Warmup Iteration  24: 142042.592 ops/s
# Warmup Iteration  25: 142069.333 ops/s
# Warmup Iteration  26: 141831.701 ops/s
# Warmup Iteration  27: 142100.976 ops/s
# Warmup Iteration  28: 142067.218 ops/s
# Warmup Iteration  29: 142167.023 ops/s
# Warmup Iteration  30: 142267.259 ops/s
Iteration   1: 141875.650 ops/s
Iteration   2: 141743.656 ops/s
Iteration   3: 141747.287 ops/s
Iteration   4: 142019.024 ops/s
Iteration   5: 142159.554 ops/s
Iteration   6: 142031.203 ops/s
Iteration   7: 142228.312 ops/s
Iteration   8: 142100.148 ops/s
Iteration   9: 142235.999 ops/s
Iteration  10: 142035.191 ops/s
Iteration  11: 142165.984 ops/s
Iteration  12: 142098.236 ops/s
Iteration  13: 142276.492 ops/s
Iteration  14: 142053.777 ops/s
Iteration  15: 142296.663 ops/s
Iteration  16: 142392.854 ops/s
Iteration  17: 141914.073 ops/s
Iteration  18: 142078.856 ops/s
Iteration  19: 141902.286 ops/s
Iteration  20: 142175.509 ops/s
Iteration  21: 142297.120 ops/s
Iteration  22: 142166.268 ops/s
Iteration  23: 142513.963 ops/s
Iteration  24: 141892.849 ops/s
Iteration  25: 142361.569 ops/s
Iteration  26: 142164.049 ops/s
Iteration  27: 142277.225 ops/s
Iteration  28: 142240.168 ops/s
Iteration  29: 142048.542 ops/s
Iteration  30: 142020.415 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_608._Benchmark.benchmark_Cluster_608":
  142117.097 ±(99.9%) 122.751 ops/s [Average]
  (min, avg, max) = (141743.656, 142117.097, 142513.963), stdev = 183.728
  CI (99.9%): [141994.347, 142239.848] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_608._Benchmark.benchmark_Cluster_608  thrpt   30  142117.097 ± 122.751  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_609._Benchmark.benchmark_Cluster_609$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_609._Benchmark.benchmark_Cluster_609

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63229.850 ops/s
# Warmup Iteration   2: 124863.789 ops/s
# Warmup Iteration   3: 190508.921 ops/s
# Warmup Iteration   4: 189057.967 ops/s
# Warmup Iteration   5: 190638.522 ops/s
# Warmup Iteration   6: 190465.749 ops/s
# Warmup Iteration   7: 150977.026 ops/s
# Warmup Iteration   8: 190207.507 ops/s
# Warmup Iteration   9: 190364.342 ops/s
# Warmup Iteration  10: 190540.580 ops/s
# Warmup Iteration  11: 190106.925 ops/s
# Warmup Iteration  12: 190298.925 ops/s
# Warmup Iteration  13: 190708.756 ops/s
# Warmup Iteration  14: 190256.889 ops/s
# Warmup Iteration  15: 190466.175 ops/s
# Warmup Iteration  16: 189995.212 ops/s
# Warmup Iteration  17: 190307.721 ops/s
# Warmup Iteration  18: 190221.824 ops/s
# Warmup Iteration  19: 190265.000 ops/s
# Warmup Iteration  20: 190251.244 ops/s
# Warmup Iteration  21: 190495.515 ops/s
# Warmup Iteration  22: 190698.674 ops/s
# Warmup Iteration  23: 190545.434 ops/s
# Warmup Iteration  24: 190665.052 ops/s
# Warmup Iteration  25: 190664.096 ops/s
# Warmup Iteration  26: 190438.212 ops/s
# Warmup Iteration  27: 190432.319 ops/s
# Warmup Iteration  28: 190498.264 ops/s
# Warmup Iteration  29: 190418.739 ops/s
# Warmup Iteration  30: 190432.918 ops/s
Iteration   1: 190150.722 ops/s
Iteration   2: 190247.205 ops/s
Iteration   3: 190158.416 ops/s
Iteration   4: 190077.986 ops/s
Iteration   5: 190684.980 ops/s
Iteration   6: 190594.586 ops/s
Iteration   7: 190284.046 ops/s
Iteration   8: 190694.270 ops/s
Iteration   9: 190497.845 ops/s
Iteration  10: 190610.933 ops/s
Iteration  11: 190882.710 ops/s
Iteration  12: 190175.786 ops/s
Iteration  13: 190610.809 ops/s
Iteration  14: 190038.638 ops/s
Iteration  15: 190184.041 ops/s
Iteration  16: 190211.336 ops/s
Iteration  17: 191011.937 ops/s
Iteration  18: 190458.525 ops/s
Iteration  19: 190670.691 ops/s
Iteration  20: 190393.317 ops/s
Iteration  21: 190585.427 ops/s
Iteration  22: 190181.500 ops/s
Iteration  23: 190734.372 ops/s
Iteration  24: 190496.360 ops/s
Iteration  25: 190372.788 ops/s
Iteration  26: 190454.288 ops/s
Iteration  27: 190247.144 ops/s
Iteration  28: 190280.820 ops/s
Iteration  29: 190516.030 ops/s
Iteration  30: 190541.491 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_609._Benchmark.benchmark_Cluster_609":
  190434.967 ±(99.9%) 164.299 ops/s [Average]
  (min, avg, max) = (190038.638, 190434.967, 191011.937), stdev = 245.915
  CI (99.9%): [190270.668, 190599.265] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_609._Benchmark.benchmark_Cluster_609  thrpt   30  190434.967 ± 164.299  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_61._Benchmark.benchmark_Cluster_61$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_61._Benchmark.benchmark_Cluster_61

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 112114.038 ops/s
# Warmup Iteration   2: 154235.585 ops/s
# Warmup Iteration   3: 225292.429 ops/s
# Warmup Iteration   4: 225525.645 ops/s
# Warmup Iteration   5: 225712.627 ops/s
# Warmup Iteration   6: 225615.383 ops/s
# Warmup Iteration   7: 225683.054 ops/s
# Warmup Iteration   8: 202623.332 ops/s
# Warmup Iteration   9: 201538.519 ops/s
# Warmup Iteration  10: 224944.777 ops/s
# Warmup Iteration  11: 226150.950 ops/s
# Warmup Iteration  12: 225951.283 ops/s
# Warmup Iteration  13: 225673.399 ops/s
# Warmup Iteration  14: 225784.499 ops/s
# Warmup Iteration  15: 225156.367 ops/s
# Warmup Iteration  16: 225434.055 ops/s
# Warmup Iteration  17: 225764.622 ops/s
# Warmup Iteration  18: 225733.333 ops/s
# Warmup Iteration  19: 225830.356 ops/s
# Warmup Iteration  20: 226082.660 ops/s
# Warmup Iteration  21: 225707.795 ops/s
# Warmup Iteration  22: 225516.689 ops/s
# Warmup Iteration  23: 225446.073 ops/s
# Warmup Iteration  24: 226085.701 ops/s
# Warmup Iteration  25: 225730.233 ops/s
# Warmup Iteration  26: 225590.554 ops/s
# Warmup Iteration  27: 225728.477 ops/s
# Warmup Iteration  28: 225912.819 ops/s
# Warmup Iteration  29: 225464.854 ops/s
# Warmup Iteration  30: 225610.733 ops/s
Iteration   1: 225605.524 ops/s
Iteration   2: 225034.525 ops/s
Iteration   3: 225363.801 ops/s
Iteration   4: 226106.999 ops/s
Iteration   5: 225173.979 ops/s
Iteration   6: 225572.123 ops/s
Iteration   7: 225606.338 ops/s
Iteration   8: 225994.407 ops/s
Iteration   9: 226077.094 ops/s
Iteration  10: 225469.560 ops/s
Iteration  11: 226166.964 ops/s
Iteration  12: 225779.935 ops/s
Iteration  13: 225900.395 ops/s
Iteration  14: 225525.526 ops/s
Iteration  15: 225827.956 ops/s
Iteration  16: 226061.634 ops/s
Iteration  17: 226090.367 ops/s
Iteration  18: 225629.047 ops/s
Iteration  19: 225179.448 ops/s
Iteration  20: 225789.633 ops/s
Iteration  21: 225576.016 ops/s
Iteration  22: 225419.309 ops/s
Iteration  23: 225763.782 ops/s
Iteration  24: 225695.762 ops/s
Iteration  25: 225983.699 ops/s
Iteration  26: 225133.747 ops/s
Iteration  27: 226000.233 ops/s
Iteration  28: 226030.721 ops/s
Iteration  29: 225455.557 ops/s
Iteration  30: 224448.229 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_61._Benchmark.benchmark_Cluster_61":
  225648.744 ±(99.9%) 261.412 ops/s [Average]
  (min, avg, max) = (224448.229, 225648.744, 226166.964), stdev = 391.269
  CI (99.9%): [225387.332, 225910.155] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_61._Benchmark.benchmark_Cluster_61  thrpt   30  225648.744 ± 261.412  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_610._Benchmark.benchmark_Cluster_610$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_610._Benchmark.benchmark_Cluster_610

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 38574.518 ops/s
# Warmup Iteration   2: 68010.041 ops/s
# Warmup Iteration   3: 106269.467 ops/s
# Warmup Iteration   4: 114801.579 ops/s
# Warmup Iteration   5: 113196.468 ops/s
# Warmup Iteration   6: 113977.119 ops/s
# Warmup Iteration   7: 114379.518 ops/s
# Warmup Iteration   8: 114480.831 ops/s
# Warmup Iteration   9: 98074.780 ops/s
# Warmup Iteration  10: 105538.959 ops/s
# Warmup Iteration  11: 114290.876 ops/s
# Warmup Iteration  12: 114224.949 ops/s
# Warmup Iteration  13: 114333.880 ops/s
# Warmup Iteration  14: 114391.629 ops/s
# Warmup Iteration  15: 114974.335 ops/s
# Warmup Iteration  16: 113692.415 ops/s
# Warmup Iteration  17: 116303.300 ops/s
# Warmup Iteration  18: 116456.315 ops/s
# Warmup Iteration  19: 116343.613 ops/s
# Warmup Iteration  20: 116248.834 ops/s
# Warmup Iteration  21: 115665.096 ops/s
# Warmup Iteration  22: 116469.073 ops/s
# Warmup Iteration  23: 116628.718 ops/s
# Warmup Iteration  24: 116430.792 ops/s
# Warmup Iteration  25: 116403.512 ops/s
# Warmup Iteration  26: 116948.116 ops/s
# Warmup Iteration  27: 115918.723 ops/s
# Warmup Iteration  28: 116128.312 ops/s
# Warmup Iteration  29: 115950.324 ops/s
# Warmup Iteration  30: 115607.304 ops/s
Iteration   1: 117209.885 ops/s
Iteration   2: 114812.387 ops/s
Iteration   3: 114970.175 ops/s
Iteration   4: 114782.720 ops/s
Iteration   5: 115790.743 ops/s
Iteration   6: 115864.628 ops/s
Iteration   7: 115781.530 ops/s
Iteration   8: 115847.647 ops/s
Iteration   9: 116140.751 ops/s
Iteration  10: 116291.645 ops/s
Iteration  11: 115369.716 ops/s
Iteration  12: 115426.299 ops/s
Iteration  13: 115587.885 ops/s
Iteration  14: 116540.746 ops/s
Iteration  15: 116439.250 ops/s
Iteration  16: 115922.597 ops/s
Iteration  17: 116603.399 ops/s
Iteration  18: 116820.060 ops/s
Iteration  19: 116628.072 ops/s
Iteration  20: 116353.817 ops/s
Iteration  21: 116984.391 ops/s
Iteration  22: 116251.458 ops/s
Iteration  23: 116982.089 ops/s
Iteration  24: 116203.202 ops/s
Iteration  25: 115698.780 ops/s
Iteration  26: 116113.903 ops/s
Iteration  27: 115617.475 ops/s
Iteration  28: 115884.324 ops/s
Iteration  29: 116160.605 ops/s
Iteration  30: 116202.659 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_610._Benchmark.benchmark_Cluster_610":
  116042.761 ±(99.9%) 409.825 ops/s [Average]
  (min, avg, max) = (114782.720, 116042.761, 117209.885), stdev = 613.407
  CI (99.9%): [115632.936, 116452.586] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_610._Benchmark.benchmark_Cluster_610  thrpt   30  116042.761 ± 409.825  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_611._Benchmark.benchmark_Cluster_611$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_611._Benchmark.benchmark_Cluster_611

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67825.214 ops/s
# Warmup Iteration   2: 91898.340 ops/s
# Warmup Iteration   3: 144750.423 ops/s
# Warmup Iteration   4: 147460.261 ops/s
# Warmup Iteration   5: 145296.377 ops/s
# Warmup Iteration   6: 147050.635 ops/s
# Warmup Iteration   7: 147053.685 ops/s
# Warmup Iteration   8: 147107.742 ops/s
# Warmup Iteration   9: 143194.784 ops/s
# Warmup Iteration  10: 119529.877 ops/s
# Warmup Iteration  11: 147423.536 ops/s
# Warmup Iteration  12: 147256.661 ops/s
# Warmup Iteration  13: 147357.272 ops/s
# Warmup Iteration  14: 147351.323 ops/s
# Warmup Iteration  15: 147278.331 ops/s
# Warmup Iteration  16: 147447.738 ops/s
# Warmup Iteration  17: 150622.553 ops/s
# Warmup Iteration  18: 150733.248 ops/s
# Warmup Iteration  19: 150671.957 ops/s
# Warmup Iteration  20: 150694.632 ops/s
# Warmup Iteration  21: 150656.019 ops/s
# Warmup Iteration  22: 150692.359 ops/s
# Warmup Iteration  23: 150710.998 ops/s
# Warmup Iteration  24: 150429.347 ops/s
# Warmup Iteration  25: 150616.804 ops/s
# Warmup Iteration  26: 150827.982 ops/s
# Warmup Iteration  27: 150825.429 ops/s
# Warmup Iteration  28: 150557.343 ops/s
# Warmup Iteration  29: 150701.984 ops/s
# Warmup Iteration  30: 150567.802 ops/s
Iteration   1: 150923.683 ops/s
Iteration   2: 149715.492 ops/s
Iteration   3: 150215.716 ops/s
Iteration   4: 150722.479 ops/s
Iteration   5: 150217.294 ops/s
Iteration   6: 150720.971 ops/s
Iteration   7: 150498.031 ops/s
Iteration   8: 150364.435 ops/s
Iteration   9: 150577.969 ops/s
Iteration  10: 150686.692 ops/s
Iteration  11: 150487.953 ops/s
Iteration  12: 150731.502 ops/s
Iteration  13: 150678.562 ops/s
Iteration  14: 150243.677 ops/s
Iteration  15: 150778.931 ops/s
Iteration  16: 150822.562 ops/s
Iteration  17: 150647.379 ops/s
Iteration  18: 150901.371 ops/s
Iteration  19: 150837.269 ops/s
Iteration  20: 150186.925 ops/s
Iteration  21: 150730.968 ops/s
Iteration  22: 150576.374 ops/s
Iteration  23: 149911.944 ops/s
Iteration  24: 150064.136 ops/s
Iteration  25: 150761.709 ops/s
Iteration  26: 150334.037 ops/s
Iteration  27: 150464.444 ops/s
Iteration  28: 150343.228 ops/s
Iteration  29: 150469.294 ops/s
Iteration  30: 150853.028 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_611._Benchmark.benchmark_Cluster_611":
  150515.602 ±(99.9%) 202.960 ops/s [Average]
  (min, avg, max) = (149715.492, 150515.602, 150923.683), stdev = 303.781
  CI (99.9%): [150312.641, 150718.562] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_611._Benchmark.benchmark_Cluster_611  thrpt   30  150515.602 ± 202.960  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_612._Benchmark.benchmark_Cluster_612$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_612._Benchmark.benchmark_Cluster_612

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66490.530 ops/s
# Warmup Iteration   2: 110728.815 ops/s
# Warmup Iteration   3: 167373.203 ops/s
# Warmup Iteration   4: 166158.644 ops/s
# Warmup Iteration   5: 167096.168 ops/s
# Warmup Iteration   6: 167098.417 ops/s
# Warmup Iteration   7: 146461.816 ops/s
# Warmup Iteration   8: 151899.505 ops/s
# Warmup Iteration   9: 167293.141 ops/s
# Warmup Iteration  10: 167444.158 ops/s
# Warmup Iteration  11: 167517.130 ops/s
# Warmup Iteration  12: 167375.327 ops/s
# Warmup Iteration  13: 167377.431 ops/s
# Warmup Iteration  14: 167274.638 ops/s
# Warmup Iteration  15: 167359.505 ops/s
# Warmup Iteration  16: 167162.259 ops/s
# Warmup Iteration  17: 172145.077 ops/s
# Warmup Iteration  18: 172451.738 ops/s
# Warmup Iteration  19: 171961.351 ops/s
# Warmup Iteration  20: 172011.721 ops/s
# Warmup Iteration  21: 172093.989 ops/s
# Warmup Iteration  22: 172281.888 ops/s
# Warmup Iteration  23: 172071.979 ops/s
# Warmup Iteration  24: 172081.116 ops/s
# Warmup Iteration  25: 172049.296 ops/s
# Warmup Iteration  26: 171885.564 ops/s
# Warmup Iteration  27: 172212.441 ops/s
# Warmup Iteration  28: 172200.855 ops/s
# Warmup Iteration  29: 171990.630 ops/s
# Warmup Iteration  30: 172229.887 ops/s
Iteration   1: 172120.819 ops/s
Iteration   2: 171888.477 ops/s
Iteration   3: 172171.126 ops/s
Iteration   4: 171826.914 ops/s
Iteration   5: 171767.264 ops/s
Iteration   6: 172266.146 ops/s
Iteration   7: 171349.735 ops/s
Iteration   8: 170816.636 ops/s
Iteration   9: 172062.748 ops/s
Iteration  10: 171962.137 ops/s
Iteration  11: 172057.246 ops/s
Iteration  12: 171972.878 ops/s
Iteration  13: 172669.355 ops/s
Iteration  14: 171805.017 ops/s
Iteration  15: 172615.447 ops/s
Iteration  16: 171697.552 ops/s
Iteration  17: 171987.517 ops/s
Iteration  18: 172054.714 ops/s
Iteration  19: 171862.544 ops/s
Iteration  20: 172062.505 ops/s
Iteration  21: 172301.339 ops/s
Iteration  22: 172082.928 ops/s
Iteration  23: 171162.893 ops/s
Iteration  24: 171781.572 ops/s
Iteration  25: 171998.765 ops/s
Iteration  26: 172384.677 ops/s
Iteration  27: 171958.087 ops/s
Iteration  28: 171992.078 ops/s
Iteration  29: 171722.460 ops/s
Iteration  30: 172276.805 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_612._Benchmark.benchmark_Cluster_612":
  171955.946 ±(99.9%) 251.748 ops/s [Average]
  (min, avg, max) = (170816.636, 171955.946, 172669.355), stdev = 376.805
  CI (99.9%): [171704.198, 172207.694] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_612._Benchmark.benchmark_Cluster_612  thrpt   30  171955.946 ± 251.748  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_613._Benchmark.benchmark_Cluster_613$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_613._Benchmark.benchmark_Cluster_613

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 98844.695 ops/s
# Warmup Iteration   2: 205373.564 ops/s
# Warmup Iteration   3: 261750.428 ops/s
# Warmup Iteration   4: 263046.326 ops/s
# Warmup Iteration   5: 262645.855 ops/s
# Warmup Iteration   6: 209531.789 ops/s
# Warmup Iteration   7: 263264.512 ops/s
# Warmup Iteration   8: 262898.269 ops/s
# Warmup Iteration   9: 263242.113 ops/s
# Warmup Iteration  10: 263031.847 ops/s
# Warmup Iteration  11: 262491.502 ops/s
# Warmup Iteration  12: 262795.283 ops/s
# Warmup Iteration  13: 263143.247 ops/s
# Warmup Iteration  14: 263171.318 ops/s
# Warmup Iteration  15: 263033.130 ops/s
# Warmup Iteration  16: 263217.795 ops/s
# Warmup Iteration  17: 260326.690 ops/s
# Warmup Iteration  18: 259437.001 ops/s
# Warmup Iteration  19: 259702.520 ops/s
# Warmup Iteration  20: 259884.586 ops/s
# Warmup Iteration  21: 260339.155 ops/s
# Warmup Iteration  22: 260102.824 ops/s
# Warmup Iteration  23: 260065.303 ops/s
# Warmup Iteration  24: 259573.694 ops/s
# Warmup Iteration  25: 259506.608 ops/s
# Warmup Iteration  26: 259745.039 ops/s
# Warmup Iteration  27: 259991.674 ops/s
# Warmup Iteration  28: 260048.056 ops/s
# Warmup Iteration  29: 260558.645 ops/s
# Warmup Iteration  30: 259597.406 ops/s
Iteration   1: 258671.259 ops/s
Iteration   2: 260728.428 ops/s
Iteration   3: 260439.766 ops/s
Iteration   4: 260469.283 ops/s
Iteration   5: 260297.925 ops/s
Iteration   6: 260694.424 ops/s
Iteration   7: 260915.033 ops/s
Iteration   8: 259593.445 ops/s
Iteration   9: 259198.253 ops/s
Iteration  10: 260332.638 ops/s
Iteration  11: 260193.659 ops/s
Iteration  12: 260856.879 ops/s
Iteration  13: 260301.469 ops/s
Iteration  14: 260697.352 ops/s
Iteration  15: 259213.250 ops/s
Iteration  16: 259850.321 ops/s
Iteration  17: 258966.912 ops/s
Iteration  18: 260521.272 ops/s
Iteration  19: 259215.027 ops/s
Iteration  20: 259446.701 ops/s
Iteration  21: 260070.203 ops/s
Iteration  22: 259774.462 ops/s
Iteration  23: 259718.552 ops/s
Iteration  24: 259559.795 ops/s
Iteration  25: 260539.642 ops/s
Iteration  26: 259882.142 ops/s
Iteration  27: 259071.296 ops/s
Iteration  28: 260240.095 ops/s
Iteration  29: 260063.020 ops/s
Iteration  30: 259956.313 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_613._Benchmark.benchmark_Cluster_613":
  259982.627 ±(99.9%) 408.461 ops/s [Average]
  (min, avg, max) = (258671.259, 259982.627, 260915.033), stdev = 611.365
  CI (99.9%): [259574.166, 260391.088] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_613._Benchmark.benchmark_Cluster_613  thrpt   30  259982.627 ± 408.461  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_614._Benchmark.benchmark_Cluster_614$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_614._Benchmark.benchmark_Cluster_614

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77439.614 ops/s
# Warmup Iteration   2: 186034.395 ops/s
# Warmup Iteration   3: 241829.390 ops/s
# Warmup Iteration   4: 242668.085 ops/s
# Warmup Iteration   5: 189695.974 ops/s
# Warmup Iteration   6: 244173.451 ops/s
# Warmup Iteration   7: 243660.350 ops/s
# Warmup Iteration   8: 243590.877 ops/s
# Warmup Iteration   9: 243297.788 ops/s
# Warmup Iteration  10: 242590.622 ops/s
# Warmup Iteration  11: 243578.561 ops/s
# Warmup Iteration  12: 243757.593 ops/s
# Warmup Iteration  13: 243278.839 ops/s
# Warmup Iteration  14: 244046.335 ops/s
# Warmup Iteration  15: 243731.277 ops/s
# Warmup Iteration  16: 243684.199 ops/s
# Warmup Iteration  17: 243606.267 ops/s
# Warmup Iteration  18: 243475.271 ops/s
# Warmup Iteration  19: 243439.069 ops/s
# Warmup Iteration  20: 244175.940 ops/s
# Warmup Iteration  21: 244077.499 ops/s
# Warmup Iteration  22: 244025.182 ops/s
# Warmup Iteration  23: 243864.109 ops/s
# Warmup Iteration  24: 243392.406 ops/s
# Warmup Iteration  25: 243800.113 ops/s
# Warmup Iteration  26: 244388.995 ops/s
# Warmup Iteration  27: 244686.013 ops/s
# Warmup Iteration  28: 244522.176 ops/s
# Warmup Iteration  29: 244056.573 ops/s
# Warmup Iteration  30: 243905.173 ops/s
Iteration   1: 238510.728 ops/s
Iteration   2: 244618.431 ops/s
Iteration   3: 242947.409 ops/s
Iteration   4: 243286.707 ops/s
Iteration   5: 244470.404 ops/s
Iteration   6: 243610.297 ops/s
Iteration   7: 244332.709 ops/s
Iteration   8: 244318.758 ops/s
Iteration   9: 244077.614 ops/s
Iteration  10: 244601.408 ops/s
Iteration  11: 243763.171 ops/s
Iteration  12: 243826.587 ops/s
Iteration  13: 243412.437 ops/s
Iteration  14: 244045.657 ops/s
Iteration  15: 243994.877 ops/s
Iteration  16: 243800.509 ops/s
Iteration  17: 244190.392 ops/s
Iteration  18: 244707.910 ops/s
Iteration  19: 243503.494 ops/s
Iteration  20: 243584.067 ops/s
Iteration  21: 244986.862 ops/s
Iteration  22: 244144.318 ops/s
Iteration  23: 244178.539 ops/s
Iteration  24: 244595.946 ops/s
Iteration  25: 243942.138 ops/s
Iteration  26: 244551.338 ops/s
Iteration  27: 244659.395 ops/s
Iteration  28: 244116.625 ops/s
Iteration  29: 243526.570 ops/s
Iteration  30: 243987.106 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_614._Benchmark.benchmark_Cluster_614":
  243876.413 ±(99.9%) 748.704 ops/s [Average]
  (min, avg, max) = (238510.728, 243876.413, 244986.862), stdev = 1120.625
  CI (99.9%): [243127.709, 244625.118] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_614._Benchmark.benchmark_Cluster_614  thrpt   30  243876.413 ± 748.704  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_615._Benchmark.benchmark_Cluster_615$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_615._Benchmark.benchmark_Cluster_615

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 37223.251 ops/s
# Warmup Iteration   2: 96772.956 ops/s
# Warmup Iteration   3: 151182.001 ops/s
# Warmup Iteration   4: 152793.577 ops/s
# Warmup Iteration   5: 145268.622 ops/s
# Warmup Iteration   6: 127118.616 ops/s
# Warmup Iteration   7: 152114.703 ops/s
# Warmup Iteration   8: 153158.983 ops/s
# Warmup Iteration   9: 152797.925 ops/s
# Warmup Iteration  10: 152614.954 ops/s
# Warmup Iteration  11: 152850.121 ops/s
# Warmup Iteration  12: 152337.118 ops/s
# Warmup Iteration  13: 152897.690 ops/s
# Warmup Iteration  14: 152473.024 ops/s
# Warmup Iteration  15: 152440.308 ops/s
# Warmup Iteration  16: 152330.493 ops/s
# Warmup Iteration  17: 151522.488 ops/s
# Warmup Iteration  18: 152968.329 ops/s
# Warmup Iteration  19: 153088.592 ops/s
# Warmup Iteration  20: 152952.689 ops/s
# Warmup Iteration  21: 152813.117 ops/s
# Warmup Iteration  22: 152475.457 ops/s
# Warmup Iteration  23: 152849.769 ops/s
# Warmup Iteration  24: 153110.557 ops/s
# Warmup Iteration  25: 153062.673 ops/s
# Warmup Iteration  26: 153166.929 ops/s
# Warmup Iteration  27: 152738.070 ops/s
# Warmup Iteration  28: 152612.058 ops/s
# Warmup Iteration  29: 152847.363 ops/s
# Warmup Iteration  30: 153021.563 ops/s
Iteration   1: 152862.636 ops/s
Iteration   2: 152076.432 ops/s
Iteration   3: 153079.404 ops/s
Iteration   4: 152590.791 ops/s
Iteration   5: 152651.295 ops/s
Iteration   6: 153122.537 ops/s
Iteration   7: 152801.185 ops/s
Iteration   8: 152486.792 ops/s
Iteration   9: 151953.942 ops/s
Iteration  10: 152269.916 ops/s
Iteration  11: 153130.713 ops/s
Iteration  12: 152873.263 ops/s
Iteration  13: 152567.284 ops/s
Iteration  14: 152963.185 ops/s
Iteration  15: 153000.973 ops/s
Iteration  16: 151952.392 ops/s
Iteration  17: 152567.248 ops/s
Iteration  18: 152793.959 ops/s
Iteration  19: 153251.606 ops/s
Iteration  20: 152843.993 ops/s
Iteration  21: 152720.762 ops/s
Iteration  22: 152794.043 ops/s
Iteration  23: 152604.261 ops/s
Iteration  24: 152553.940 ops/s
Iteration  25: 152804.862 ops/s
Iteration  26: 152714.541 ops/s
Iteration  27: 152485.491 ops/s
Iteration  28: 152586.195 ops/s
Iteration  29: 152897.761 ops/s
Iteration  30: 152033.026 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_615._Benchmark.benchmark_Cluster_615":
  152667.814 ±(99.9%) 229.288 ops/s [Average]
  (min, avg, max) = (151952.392, 152667.814, 153251.606), stdev = 343.187
  CI (99.9%): [152438.526, 152897.102] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_615._Benchmark.benchmark_Cluster_615  thrpt   30  152667.814 ± 229.288  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_616._Benchmark.benchmark_Cluster_616$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_616._Benchmark.benchmark_Cluster_616

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54408.747 ops/s
# Warmup Iteration   2: 138504.503 ops/s
# Warmup Iteration   3: 172032.569 ops/s
# Warmup Iteration   4: 172831.268 ops/s
# Warmup Iteration   5: 137194.962 ops/s
# Warmup Iteration   6: 172653.294 ops/s
# Warmup Iteration   7: 172745.563 ops/s
# Warmup Iteration   8: 172604.309 ops/s
# Warmup Iteration   9: 172895.773 ops/s
# Warmup Iteration  10: 173096.971 ops/s
# Warmup Iteration  11: 172522.484 ops/s
# Warmup Iteration  12: 172605.047 ops/s
# Warmup Iteration  13: 172367.775 ops/s
# Warmup Iteration  14: 172376.118 ops/s
# Warmup Iteration  15: 173021.963 ops/s
# Warmup Iteration  16: 172899.175 ops/s
# Warmup Iteration  17: 173432.492 ops/s
# Warmup Iteration  18: 173559.537 ops/s
# Warmup Iteration  19: 172974.456 ops/s
# Warmup Iteration  20: 173111.273 ops/s
# Warmup Iteration  21: 172775.122 ops/s
# Warmup Iteration  22: 173446.216 ops/s
# Warmup Iteration  23: 173448.373 ops/s
# Warmup Iteration  24: 172808.580 ops/s
# Warmup Iteration  25: 173200.759 ops/s
# Warmup Iteration  26: 173544.856 ops/s
# Warmup Iteration  27: 172584.154 ops/s
# Warmup Iteration  28: 173082.263 ops/s
# Warmup Iteration  29: 173237.922 ops/s
# Warmup Iteration  30: 173669.076 ops/s
Iteration   1: 172637.287 ops/s
Iteration   2: 172570.445 ops/s
Iteration   3: 173068.678 ops/s
Iteration   4: 173235.956 ops/s
Iteration   5: 173728.600 ops/s
Iteration   6: 173625.849 ops/s
Iteration   7: 173541.209 ops/s
Iteration   8: 173198.911 ops/s
Iteration   9: 173100.752 ops/s
Iteration  10: 173046.850 ops/s
Iteration  11: 173104.640 ops/s
Iteration  12: 173397.065 ops/s
Iteration  13: 173425.214 ops/s
Iteration  14: 172900.262 ops/s
Iteration  15: 173571.686 ops/s
Iteration  16: 173379.433 ops/s
Iteration  17: 172517.665 ops/s
Iteration  18: 173494.089 ops/s
Iteration  19: 173048.586 ops/s
Iteration  20: 173225.179 ops/s
Iteration  21: 173050.806 ops/s
Iteration  22: 172991.683 ops/s
Iteration  23: 173305.706 ops/s
Iteration  24: 172753.719 ops/s
Iteration  25: 173023.764 ops/s
Iteration  26: 172946.860 ops/s
Iteration  27: 172922.432 ops/s
Iteration  28: 173302.593 ops/s
Iteration  29: 173416.158 ops/s
Iteration  30: 172973.540 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_616._Benchmark.benchmark_Cluster_616":
  173150.187 ±(99.9%) 206.067 ops/s [Average]
  (min, avg, max) = (172517.665, 173150.187, 173728.600), stdev = 308.431
  CI (99.9%): [172944.120, 173356.254] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_616._Benchmark.benchmark_Cluster_616  thrpt   30  173150.187 ± 206.067  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_617._Benchmark.benchmark_Cluster_617$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_617._Benchmark.benchmark_Cluster_617

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50464.580 ops/s
# Warmup Iteration   2: 81239.497 ops/s
# Warmup Iteration   3: 129604.654 ops/s
# Warmup Iteration   4: 135434.335 ops/s
# Warmup Iteration   5: 135803.449 ops/s
# Warmup Iteration   6: 136290.161 ops/s
# Warmup Iteration   7: 136549.182 ops/s
# Warmup Iteration   8: 136060.753 ops/s
# Warmup Iteration   9: 110581.567 ops/s
# Warmup Iteration  10: 131571.903 ops/s
# Warmup Iteration  11: 136231.625 ops/s
# Warmup Iteration  12: 136005.534 ops/s
# Warmup Iteration  13: 136126.252 ops/s
# Warmup Iteration  14: 136195.546 ops/s
# Warmup Iteration  15: 135966.581 ops/s
# Warmup Iteration  16: 136388.868 ops/s
# Warmup Iteration  17: 138549.730 ops/s
# Warmup Iteration  18: 139529.303 ops/s
# Warmup Iteration  19: 138892.547 ops/s
# Warmup Iteration  20: 139204.668 ops/s
# Warmup Iteration  21: 138541.716 ops/s
# Warmup Iteration  22: 138875.967 ops/s
# Warmup Iteration  23: 139355.413 ops/s
# Warmup Iteration  24: 138859.567 ops/s
# Warmup Iteration  25: 138972.585 ops/s
# Warmup Iteration  26: 138949.031 ops/s
# Warmup Iteration  27: 138891.331 ops/s
# Warmup Iteration  28: 138752.784 ops/s
# Warmup Iteration  29: 138707.257 ops/s
# Warmup Iteration  30: 138521.849 ops/s
Iteration   1: 139107.315 ops/s
Iteration   2: 139109.125 ops/s
Iteration   3: 139206.377 ops/s
Iteration   4: 138954.418 ops/s
Iteration   5: 138310.942 ops/s
Iteration   6: 138681.830 ops/s
Iteration   7: 138813.989 ops/s
Iteration   8: 138711.398 ops/s
Iteration   9: 139076.579 ops/s
Iteration  10: 138545.793 ops/s
Iteration  11: 139181.467 ops/s
Iteration  12: 138552.317 ops/s
Iteration  13: 139238.664 ops/s
Iteration  14: 139195.137 ops/s
Iteration  15: 138660.846 ops/s
Iteration  16: 139042.633 ops/s
Iteration  17: 138958.730 ops/s
Iteration  18: 138498.293 ops/s
Iteration  19: 139273.667 ops/s
Iteration  20: 138576.932 ops/s
Iteration  21: 138936.958 ops/s
Iteration  22: 139269.635 ops/s
Iteration  23: 139804.637 ops/s
Iteration  24: 138410.190 ops/s
Iteration  25: 138543.152 ops/s
Iteration  26: 138212.739 ops/s
Iteration  27: 139493.463 ops/s
Iteration  28: 138598.721 ops/s
Iteration  29: 138430.509 ops/s
Iteration  30: 138698.833 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_617._Benchmark.benchmark_Cluster_617":
  138869.843 ±(99.9%) 252.391 ops/s [Average]
  (min, avg, max) = (138212.739, 138869.843, 139804.637), stdev = 377.767
  CI (99.9%): [138617.452, 139122.234] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_617._Benchmark.benchmark_Cluster_617  thrpt   30  138869.843 ± 252.391  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_618._Benchmark.benchmark_Cluster_618$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_618._Benchmark.benchmark_Cluster_618

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78539.089 ops/s
# Warmup Iteration   2: 99560.037 ops/s
# Warmup Iteration   3: 146348.420 ops/s
# Warmup Iteration   4: 153998.576 ops/s
# Warmup Iteration   5: 152891.066 ops/s
# Warmup Iteration   6: 153782.554 ops/s
# Warmup Iteration   7: 154364.010 ops/s
# Warmup Iteration   8: 154172.909 ops/s
# Warmup Iteration   9: 154230.596 ops/s
# Warmup Iteration  10: 138212.099 ops/s
# Warmup Iteration  11: 136497.163 ops/s
# Warmup Iteration  12: 154055.737 ops/s
# Warmup Iteration  13: 153945.110 ops/s
# Warmup Iteration  14: 154216.059 ops/s
# Warmup Iteration  15: 154357.170 ops/s
# Warmup Iteration  16: 154419.544 ops/s
# Warmup Iteration  17: 162275.092 ops/s
# Warmup Iteration  18: 161480.668 ops/s
# Warmup Iteration  19: 162140.907 ops/s
# Warmup Iteration  20: 161560.561 ops/s
# Warmup Iteration  21: 161928.363 ops/s
# Warmup Iteration  22: 162137.312 ops/s
# Warmup Iteration  23: 161830.691 ops/s
# Warmup Iteration  24: 161685.822 ops/s
# Warmup Iteration  25: 161783.374 ops/s
# Warmup Iteration  26: 161844.836 ops/s
# Warmup Iteration  27: 161512.080 ops/s
# Warmup Iteration  28: 161675.115 ops/s
# Warmup Iteration  29: 162147.925 ops/s
# Warmup Iteration  30: 162291.710 ops/s
Iteration   1: 161793.412 ops/s
Iteration   2: 162112.863 ops/s
Iteration   3: 162232.864 ops/s
Iteration   4: 162020.294 ops/s
Iteration   5: 161613.487 ops/s
Iteration   6: 161315.774 ops/s
Iteration   7: 160992.462 ops/s
Iteration   8: 162207.974 ops/s
Iteration   9: 161845.639 ops/s
Iteration  10: 161758.191 ops/s
Iteration  11: 162156.690 ops/s
Iteration  12: 162165.313 ops/s
Iteration  13: 161700.852 ops/s
Iteration  14: 161557.994 ops/s
Iteration  15: 162336.967 ops/s
Iteration  16: 161377.788 ops/s
Iteration  17: 161330.675 ops/s
Iteration  18: 161513.919 ops/s
Iteration  19: 161451.366 ops/s
Iteration  20: 161520.212 ops/s
Iteration  21: 162185.861 ops/s
Iteration  22: 162014.259 ops/s
Iteration  23: 161774.856 ops/s
Iteration  24: 161542.633 ops/s
Iteration  25: 161490.693 ops/s
Iteration  26: 161456.674 ops/s
Iteration  27: 161910.530 ops/s
Iteration  28: 162011.445 ops/s
Iteration  29: 161618.636 ops/s
Iteration  30: 161948.306 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_618._Benchmark.benchmark_Cluster_618":
  161765.288 ±(99.9%) 224.485 ops/s [Average]
  (min, avg, max) = (160992.462, 161765.288, 162336.967), stdev = 335.999
  CI (99.9%): [161540.802, 161989.773] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_618._Benchmark.benchmark_Cluster_618  thrpt   30  161765.288 ± 224.485  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_619._Benchmark.benchmark_Cluster_619$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_619._Benchmark.benchmark_Cluster_619

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 40431.321 ops/s
# Warmup Iteration   2: 95216.865 ops/s
# Warmup Iteration   3: 143707.405 ops/s
# Warmup Iteration   4: 144644.748 ops/s
# Warmup Iteration   5: 144414.042 ops/s
# Warmup Iteration   6: 114018.713 ops/s
# Warmup Iteration   7: 144838.870 ops/s
# Warmup Iteration   8: 144675.202 ops/s
# Warmup Iteration   9: 144512.587 ops/s
# Warmup Iteration  10: 144616.898 ops/s
# Warmup Iteration  11: 144768.131 ops/s
# Warmup Iteration  12: 144704.775 ops/s
# Warmup Iteration  13: 144306.138 ops/s
# Warmup Iteration  14: 144595.550 ops/s
# Warmup Iteration  15: 144360.641 ops/s
# Warmup Iteration  16: 144388.476 ops/s
# Warmup Iteration  17: 143693.838 ops/s
# Warmup Iteration  18: 144168.091 ops/s
# Warmup Iteration  19: 144327.077 ops/s
# Warmup Iteration  20: 144373.848 ops/s
# Warmup Iteration  21: 144189.452 ops/s
# Warmup Iteration  22: 144506.521 ops/s
# Warmup Iteration  23: 144133.548 ops/s
# Warmup Iteration  24: 144440.669 ops/s
# Warmup Iteration  25: 144285.314 ops/s
# Warmup Iteration  26: 144136.702 ops/s
# Warmup Iteration  27: 144455.737 ops/s
# Warmup Iteration  28: 144399.726 ops/s
# Warmup Iteration  29: 144028.920 ops/s
# Warmup Iteration  30: 144033.335 ops/s
Iteration   1: 144704.436 ops/s
Iteration   2: 144505.278 ops/s
Iteration   3: 144620.567 ops/s
Iteration   4: 144557.860 ops/s
Iteration   5: 144370.096 ops/s
Iteration   6: 144730.803 ops/s
Iteration   7: 144384.956 ops/s
Iteration   8: 144648.123 ops/s
Iteration   9: 144137.660 ops/s
Iteration  10: 144231.513 ops/s
Iteration  11: 144309.176 ops/s
Iteration  12: 144246.417 ops/s
Iteration  13: 143963.877 ops/s
Iteration  14: 144247.693 ops/s
Iteration  15: 144150.319 ops/s
Iteration  16: 144331.561 ops/s
Iteration  17: 143456.832 ops/s
Iteration  18: 143244.829 ops/s
Iteration  19: 144808.860 ops/s
Iteration  20: 143812.402 ops/s
Iteration  21: 143607.816 ops/s
Iteration  22: 144271.673 ops/s
Iteration  23: 144053.820 ops/s
Iteration  24: 144618.660 ops/s
Iteration  25: 144412.762 ops/s
Iteration  26: 144021.818 ops/s
Iteration  27: 144332.824 ops/s
Iteration  28: 144061.050 ops/s
Iteration  29: 143969.567 ops/s
Iteration  30: 143966.144 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_619._Benchmark.benchmark_Cluster_619":
  144225.980 ±(99.9%) 249.202 ops/s [Average]
  (min, avg, max) = (143244.829, 144225.980, 144808.860), stdev = 372.994
  CI (99.9%): [143976.777, 144475.182] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_619._Benchmark.benchmark_Cluster_619  thrpt   30  144225.980 ± 249.202  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_62._Benchmark.benchmark_Cluster_62$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_62._Benchmark.benchmark_Cluster_62

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60691.615 ops/s
# Warmup Iteration   2: 86242.590 ops/s
# Warmup Iteration   3: 145385.855 ops/s
# Warmup Iteration   4: 143529.941 ops/s
# Warmup Iteration   5: 144142.259 ops/s
# Warmup Iteration   6: 143864.917 ops/s
# Warmup Iteration   7: 136394.195 ops/s
# Warmup Iteration   8: 114033.186 ops/s
# Warmup Iteration   9: 144156.749 ops/s
# Warmup Iteration  10: 144562.458 ops/s
# Warmup Iteration  11: 144773.471 ops/s
# Warmup Iteration  12: 144286.975 ops/s
# Warmup Iteration  13: 144749.688 ops/s
# Warmup Iteration  14: 144291.838 ops/s
# Warmup Iteration  15: 144413.449 ops/s
# Warmup Iteration  16: 144786.803 ops/s
# Warmup Iteration  17: 145787.178 ops/s
# Warmup Iteration  18: 145114.304 ops/s
# Warmup Iteration  19: 145675.197 ops/s
# Warmup Iteration  20: 146011.566 ops/s
# Warmup Iteration  21: 145508.602 ops/s
# Warmup Iteration  22: 143461.950 ops/s
# Warmup Iteration  23: 144057.328 ops/s
# Warmup Iteration  24: 143915.510 ops/s
# Warmup Iteration  25: 144339.929 ops/s
# Warmup Iteration  26: 145084.085 ops/s
# Warmup Iteration  27: 145900.442 ops/s
# Warmup Iteration  28: 145891.258 ops/s
# Warmup Iteration  29: 145851.898 ops/s
# Warmup Iteration  30: 145893.169 ops/s
Iteration   1: 146012.044 ops/s
Iteration   2: 145846.476 ops/s
Iteration   3: 143391.378 ops/s
Iteration   4: 143486.113 ops/s
Iteration   5: 144474.635 ops/s
Iteration   6: 144739.941 ops/s
Iteration   7: 145211.051 ops/s
Iteration   8: 146156.431 ops/s
Iteration   9: 146779.230 ops/s
Iteration  10: 146096.255 ops/s
Iteration  11: 145817.102 ops/s
Iteration  12: 145884.029 ops/s
Iteration  13: 145947.121 ops/s
Iteration  14: 145119.677 ops/s
Iteration  15: 145396.542 ops/s
Iteration  16: 145830.372 ops/s
Iteration  17: 144749.881 ops/s
Iteration  18: 145428.552 ops/s
Iteration  19: 145612.543 ops/s
Iteration  20: 145391.394 ops/s
Iteration  21: 145510.943 ops/s
Iteration  22: 145779.612 ops/s
Iteration  23: 145605.976 ops/s
Iteration  24: 146229.028 ops/s
Iteration  25: 145567.314 ops/s
Iteration  26: 145862.583 ops/s
Iteration  27: 145303.099 ops/s
Iteration  28: 145484.177 ops/s
Iteration  29: 144704.623 ops/s
Iteration  30: 145966.625 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_62._Benchmark.benchmark_Cluster_62":
  145446.158 ±(99.9%) 494.456 ops/s [Average]
  (min, avg, max) = (143391.378, 145446.158, 146779.230), stdev = 740.079
  CI (99.9%): [144951.702, 145940.615] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_62._Benchmark.benchmark_Cluster_62  thrpt   30  145446.158 ± 494.456  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_620._Benchmark.benchmark_Cluster_620$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_620._Benchmark.benchmark_Cluster_620

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56776.170 ops/s
# Warmup Iteration   2: 88223.288 ops/s
# Warmup Iteration   3: 142390.875 ops/s
# Warmup Iteration   4: 142599.248 ops/s
# Warmup Iteration   5: 142035.294 ops/s
# Warmup Iteration   6: 141643.158 ops/s
# Warmup Iteration   7: 141929.270 ops/s
# Warmup Iteration   8: 141996.024 ops/s
# Warmup Iteration   9: 112927.254 ops/s
# Warmup Iteration  10: 142884.384 ops/s
# Warmup Iteration  11: 142921.594 ops/s
# Warmup Iteration  12: 142369.298 ops/s
# Warmup Iteration  13: 142726.955 ops/s
# Warmup Iteration  14: 142604.850 ops/s
# Warmup Iteration  15: 142961.009 ops/s
# Warmup Iteration  16: 142727.281 ops/s
# Warmup Iteration  17: 142866.674 ops/s
# Warmup Iteration  18: 142893.241 ops/s
# Warmup Iteration  19: 142860.932 ops/s
# Warmup Iteration  20: 142859.486 ops/s
# Warmup Iteration  21: 142932.997 ops/s
# Warmup Iteration  22: 142897.976 ops/s
# Warmup Iteration  23: 142901.923 ops/s
# Warmup Iteration  24: 142953.941 ops/s
# Warmup Iteration  25: 142424.071 ops/s
# Warmup Iteration  26: 142736.554 ops/s
# Warmup Iteration  27: 142831.224 ops/s
# Warmup Iteration  28: 143077.064 ops/s
# Warmup Iteration  29: 142474.413 ops/s
# Warmup Iteration  30: 143107.728 ops/s
Iteration   1: 143164.110 ops/s
Iteration   2: 142904.707 ops/s
Iteration   3: 143066.781 ops/s
Iteration   4: 143047.722 ops/s
Iteration   5: 142331.010 ops/s
Iteration   6: 143018.351 ops/s
Iteration   7: 143051.789 ops/s
Iteration   8: 142674.398 ops/s
Iteration   9: 143077.115 ops/s
Iteration  10: 143095.681 ops/s
Iteration  11: 142945.998 ops/s
Iteration  12: 143147.460 ops/s
Iteration  13: 143082.897 ops/s
Iteration  14: 142800.440 ops/s
Iteration  15: 142972.048 ops/s
Iteration  16: 142836.270 ops/s
Iteration  17: 142818.897 ops/s
Iteration  18: 142862.091 ops/s
Iteration  19: 142743.385 ops/s
Iteration  20: 142834.025 ops/s
Iteration  21: 142835.974 ops/s
Iteration  22: 142679.852 ops/s
Iteration  23: 142891.423 ops/s
Iteration  24: 142926.849 ops/s
Iteration  25: 142786.821 ops/s
Iteration  26: 142884.225 ops/s
Iteration  27: 142965.144 ops/s
Iteration  28: 142714.290 ops/s
Iteration  29: 142858.057 ops/s
Iteration  30: 142896.183 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_620._Benchmark.benchmark_Cluster_620":
  142897.133 ±(99.9%) 115.074 ops/s [Average]
  (min, avg, max) = (142331.010, 142897.133, 143164.110), stdev = 172.238
  CI (99.9%): [142782.059, 143012.207] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_620._Benchmark.benchmark_Cluster_620  thrpt   30  142897.133 ± 115.074  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_621._Benchmark.benchmark_Cluster_621$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_621._Benchmark.benchmark_Cluster_621

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73216.040 ops/s
# Warmup Iteration   2: 117179.984 ops/s
# Warmup Iteration   3: 169811.219 ops/s
# Warmup Iteration   4: 168913.108 ops/s
# Warmup Iteration   5: 169935.052 ops/s
# Warmup Iteration   6: 169748.895 ops/s
# Warmup Iteration   7: 156012.673 ops/s
# Warmup Iteration   8: 149085.600 ops/s
# Warmup Iteration   9: 169774.428 ops/s
# Warmup Iteration  10: 170230.048 ops/s
# Warmup Iteration  11: 170189.942 ops/s
# Warmup Iteration  12: 170278.525 ops/s
# Warmup Iteration  13: 169782.015 ops/s
# Warmup Iteration  14: 170307.035 ops/s
# Warmup Iteration  15: 169891.483 ops/s
# Warmup Iteration  16: 170459.777 ops/s
# Warmup Iteration  17: 169733.107 ops/s
# Warmup Iteration  18: 170044.770 ops/s
# Warmup Iteration  19: 169963.333 ops/s
# Warmup Iteration  20: 170016.307 ops/s
# Warmup Iteration  21: 170049.218 ops/s
# Warmup Iteration  22: 170402.044 ops/s
# Warmup Iteration  23: 170227.430 ops/s
# Warmup Iteration  24: 170102.086 ops/s
# Warmup Iteration  25: 170251.722 ops/s
# Warmup Iteration  26: 169892.283 ops/s
# Warmup Iteration  27: 170350.238 ops/s
# Warmup Iteration  28: 169859.325 ops/s
# Warmup Iteration  29: 170170.261 ops/s
# Warmup Iteration  30: 170297.447 ops/s
Iteration   1: 169922.659 ops/s
Iteration   2: 170207.619 ops/s
Iteration   3: 169989.247 ops/s
Iteration   4: 170166.996 ops/s
Iteration   5: 170271.017 ops/s
Iteration   6: 170293.928 ops/s
Iteration   7: 170107.516 ops/s
Iteration   8: 169677.514 ops/s
Iteration   9: 170266.796 ops/s
Iteration  10: 169744.807 ops/s
Iteration  11: 170092.705 ops/s
Iteration  12: 169946.149 ops/s
Iteration  13: 170151.246 ops/s
Iteration  14: 169650.937 ops/s
Iteration  15: 169999.018 ops/s
Iteration  16: 169838.319 ops/s
Iteration  17: 169632.971 ops/s
Iteration  18: 169893.651 ops/s
Iteration  19: 169601.824 ops/s
Iteration  20: 169958.299 ops/s
Iteration  21: 169897.821 ops/s
Iteration  22: 170037.717 ops/s
Iteration  23: 170215.408 ops/s
Iteration  24: 170087.223 ops/s
Iteration  25: 170325.738 ops/s
Iteration  26: 169895.060 ops/s
Iteration  27: 170545.121 ops/s
Iteration  28: 169760.920 ops/s
Iteration  29: 169974.736 ops/s
Iteration  30: 169994.365 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_621._Benchmark.benchmark_Cluster_621":
  170004.911 ±(99.9%) 152.692 ops/s [Average]
  (min, avg, max) = (169601.824, 170004.911, 170545.121), stdev = 228.542
  CI (99.9%): [169852.219, 170157.602] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_621._Benchmark.benchmark_Cluster_621  thrpt   30  170004.911 ± 152.692  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_622._Benchmark.benchmark_Cluster_622$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_622._Benchmark.benchmark_Cluster_622

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 149827.285 ops/s
# Warmup Iteration   2: 162073.089 ops/s
# Warmup Iteration   3: 176806.056 ops/s
# Warmup Iteration   4: 215325.880 ops/s
# Warmup Iteration   5: 214956.066 ops/s
# Warmup Iteration   6: 214589.669 ops/s
# Warmup Iteration   7: 213056.851 ops/s
# Warmup Iteration   8: 214897.603 ops/s
# Warmup Iteration   9: 214992.594 ops/s
# Warmup Iteration  10: 215456.611 ops/s
# Warmup Iteration  11: 215199.529 ops/s
# Warmup Iteration  12: 215437.137 ops/s
# Warmup Iteration  13: 215153.029 ops/s
# Warmup Iteration  14: 215821.752 ops/s
# Warmup Iteration  15: 205089.160 ops/s
# Warmup Iteration  16: 180130.678 ops/s
# Warmup Iteration  17: 223966.413 ops/s
# Warmup Iteration  18: 223697.861 ops/s
# Warmup Iteration  19: 223601.604 ops/s
# Warmup Iteration  20: 223777.015 ops/s
# Warmup Iteration  21: 223403.501 ops/s
# Warmup Iteration  22: 224128.515 ops/s
# Warmup Iteration  23: 223063.774 ops/s
# Warmup Iteration  24: 222970.250 ops/s
# Warmup Iteration  25: 223690.461 ops/s
# Warmup Iteration  26: 223796.983 ops/s
# Warmup Iteration  27: 223487.326 ops/s
# Warmup Iteration  28: 223136.590 ops/s
# Warmup Iteration  29: 223188.293 ops/s
# Warmup Iteration  30: 223296.670 ops/s
Iteration   1: 222850.739 ops/s
Iteration   2: 222494.219 ops/s
Iteration   3: 223326.419 ops/s
Iteration   4: 223765.467 ops/s
Iteration   5: 223297.885 ops/s
Iteration   6: 223172.340 ops/s
Iteration   7: 223101.118 ops/s
Iteration   8: 223314.132 ops/s
Iteration   9: 223035.928 ops/s
Iteration  10: 223527.580 ops/s
Iteration  11: 222785.604 ops/s
Iteration  12: 223710.163 ops/s
Iteration  13: 223172.811 ops/s
Iteration  14: 223385.784 ops/s
Iteration  15: 222968.049 ops/s
Iteration  16: 223519.655 ops/s
Iteration  17: 222911.740 ops/s
Iteration  18: 222531.073 ops/s
Iteration  19: 222654.328 ops/s
Iteration  20: 222475.458 ops/s
Iteration  21: 223044.060 ops/s
Iteration  22: 222917.765 ops/s
Iteration  23: 223333.424 ops/s
Iteration  24: 222892.331 ops/s
Iteration  25: 223152.356 ops/s
Iteration  26: 223301.125 ops/s
Iteration  27: 223032.986 ops/s
Iteration  28: 222712.253 ops/s
Iteration  29: 223275.477 ops/s
Iteration  30: 223556.260 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_622._Benchmark.benchmark_Cluster_622":
  223107.284 ±(99.9%) 231.081 ops/s [Average]
  (min, avg, max) = (222475.458, 223107.284, 223765.467), stdev = 345.871
  CI (99.9%): [222876.203, 223338.365] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_622._Benchmark.benchmark_Cluster_622  thrpt   30  223107.284 ± 231.081  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_623._Benchmark.benchmark_Cluster_623$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_623._Benchmark.benchmark_Cluster_623

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42181.570 ops/s
# Warmup Iteration   2: 95476.551 ops/s
# Warmup Iteration   3: 158627.966 ops/s
# Warmup Iteration   4: 157754.845 ops/s
# Warmup Iteration   5: 158667.365 ops/s
# Warmup Iteration   6: 158515.928 ops/s
# Warmup Iteration   7: 126061.202 ops/s
# Warmup Iteration   8: 157898.261 ops/s
# Warmup Iteration   9: 158539.915 ops/s
# Warmup Iteration  10: 158553.522 ops/s
# Warmup Iteration  11: 158377.184 ops/s
# Warmup Iteration  12: 158469.745 ops/s
# Warmup Iteration  13: 158459.008 ops/s
# Warmup Iteration  14: 158329.581 ops/s
# Warmup Iteration  15: 158153.829 ops/s
# Warmup Iteration  16: 158424.408 ops/s
# Warmup Iteration  17: 158262.220 ops/s
# Warmup Iteration  18: 158401.332 ops/s
# Warmup Iteration  19: 158302.102 ops/s
# Warmup Iteration  20: 158548.938 ops/s
# Warmup Iteration  21: 158497.007 ops/s
# Warmup Iteration  22: 158485.530 ops/s
# Warmup Iteration  23: 158359.407 ops/s
# Warmup Iteration  24: 158556.270 ops/s
# Warmup Iteration  25: 158412.236 ops/s
# Warmup Iteration  26: 158418.913 ops/s
# Warmup Iteration  27: 158635.541 ops/s
# Warmup Iteration  28: 158542.243 ops/s
# Warmup Iteration  29: 158543.823 ops/s
# Warmup Iteration  30: 158420.577 ops/s
Iteration   1: 158162.970 ops/s
Iteration   2: 158673.202 ops/s
Iteration   3: 158338.742 ops/s
Iteration   4: 158640.968 ops/s
Iteration   5: 158419.511 ops/s
Iteration   6: 158570.716 ops/s
Iteration   7: 158511.037 ops/s
Iteration   8: 158577.853 ops/s
Iteration   9: 158256.087 ops/s
Iteration  10: 158711.818 ops/s
Iteration  11: 158225.006 ops/s
Iteration  12: 158510.317 ops/s
Iteration  13: 158130.556 ops/s
Iteration  14: 158454.692 ops/s
Iteration  15: 158202.729 ops/s
Iteration  16: 158393.448 ops/s
Iteration  17: 158322.091 ops/s
Iteration  18: 158438.427 ops/s
Iteration  19: 158222.017 ops/s
Iteration  20: 158412.640 ops/s
Iteration  21: 158229.603 ops/s
Iteration  22: 158557.352 ops/s
Iteration  23: 158257.101 ops/s
Iteration  24: 158559.914 ops/s
Iteration  25: 158086.548 ops/s
Iteration  26: 158390.735 ops/s
Iteration  27: 158409.833 ops/s
Iteration  28: 158542.280 ops/s
Iteration  29: 158391.181 ops/s
Iteration  30: 158533.520 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_623._Benchmark.benchmark_Cluster_623":
  158404.430 ±(99.9%) 112.111 ops/s [Average]
  (min, avg, max) = (158086.548, 158404.430, 158711.818), stdev = 167.803
  CI (99.9%): [158292.318, 158516.541] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_623._Benchmark.benchmark_Cluster_623  thrpt   30  158404.430 ± 112.111  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_624._Benchmark.benchmark_Cluster_624$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_624._Benchmark.benchmark_Cluster_624

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 121880.697 ops/s
# Warmup Iteration   2: 138977.649 ops/s
# Warmup Iteration   3: 192854.116 ops/s
# Warmup Iteration   4: 201804.495 ops/s
# Warmup Iteration   5: 200491.518 ops/s
# Warmup Iteration   6: 202297.397 ops/s
# Warmup Iteration   7: 202046.143 ops/s
# Warmup Iteration   8: 202027.120 ops/s
# Warmup Iteration   9: 202091.311 ops/s
# Warmup Iteration  10: 201793.721 ops/s
# Warmup Iteration  11: 175504.671 ops/s
# Warmup Iteration  12: 187054.473 ops/s
# Warmup Iteration  13: 202276.492 ops/s
# Warmup Iteration  14: 202642.892 ops/s
# Warmup Iteration  15: 202475.292 ops/s
# Warmup Iteration  16: 202309.244 ops/s
# Warmup Iteration  17: 202296.635 ops/s
# Warmup Iteration  18: 202362.329 ops/s
# Warmup Iteration  19: 202370.451 ops/s
# Warmup Iteration  20: 202659.564 ops/s
# Warmup Iteration  21: 202303.625 ops/s
# Warmup Iteration  22: 202445.781 ops/s
# Warmup Iteration  23: 202556.078 ops/s
# Warmup Iteration  24: 202346.236 ops/s
# Warmup Iteration  25: 202290.982 ops/s
# Warmup Iteration  26: 202412.371 ops/s
# Warmup Iteration  27: 202479.930 ops/s
# Warmup Iteration  28: 202353.808 ops/s
# Warmup Iteration  29: 202558.040 ops/s
# Warmup Iteration  30: 202518.693 ops/s
Iteration   1: 202108.235 ops/s
Iteration   2: 202582.508 ops/s
Iteration   3: 202715.330 ops/s
Iteration   4: 202280.158 ops/s
Iteration   5: 202597.832 ops/s
Iteration   6: 202072.931 ops/s
Iteration   7: 202288.808 ops/s
Iteration   8: 201781.173 ops/s
Iteration   9: 202495.943 ops/s
Iteration  10: 202425.632 ops/s
Iteration  11: 202671.562 ops/s
Iteration  12: 202400.751 ops/s
Iteration  13: 202725.596 ops/s
Iteration  14: 202449.965 ops/s
Iteration  15: 202597.562 ops/s
Iteration  16: 202453.945 ops/s
Iteration  17: 202335.278 ops/s
Iteration  18: 202089.296 ops/s
Iteration  19: 202544.249 ops/s
Iteration  20: 202205.057 ops/s
Iteration  21: 202312.393 ops/s
Iteration  22: 202536.550 ops/s
Iteration  23: 202453.550 ops/s
Iteration  24: 202496.776 ops/s
Iteration  25: 202621.148 ops/s
Iteration  26: 202639.574 ops/s
Iteration  27: 202363.255 ops/s
Iteration  28: 202605.587 ops/s
Iteration  29: 202554.935 ops/s
Iteration  30: 202949.592 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_624._Benchmark.benchmark_Cluster_624":
  202445.172 ±(99.9%) 157.937 ops/s [Average]
  (min, avg, max) = (201781.173, 202445.172, 202949.592), stdev = 236.392
  CI (99.9%): [202287.236, 202603.109] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_624._Benchmark.benchmark_Cluster_624  thrpt   30  202445.172 ± 157.937  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_625._Benchmark.benchmark_Cluster_625$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_625._Benchmark.benchmark_Cluster_625

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45701.556 ops/s
# Warmup Iteration   2: 74842.659 ops/s
# Warmup Iteration   3: 109904.514 ops/s
# Warmup Iteration   4: 118058.194 ops/s
# Warmup Iteration   5: 116678.855 ops/s
# Warmup Iteration   6: 117309.391 ops/s
# Warmup Iteration   7: 117871.641 ops/s
# Warmup Iteration   8: 118265.057 ops/s
# Warmup Iteration   9: 118319.560 ops/s
# Warmup Iteration  10: 92413.352 ops/s
# Warmup Iteration  11: 117500.585 ops/s
# Warmup Iteration  12: 117439.889 ops/s
# Warmup Iteration  13: 117382.028 ops/s
# Warmup Iteration  14: 117362.347 ops/s
# Warmup Iteration  15: 117445.081 ops/s
# Warmup Iteration  16: 117645.925 ops/s
# Warmup Iteration  17: 120208.126 ops/s
# Warmup Iteration  18: 120509.006 ops/s
# Warmup Iteration  19: 120371.700 ops/s
# Warmup Iteration  20: 120510.938 ops/s
# Warmup Iteration  21: 120467.996 ops/s
# Warmup Iteration  22: 120713.729 ops/s
# Warmup Iteration  23: 119837.643 ops/s
# Warmup Iteration  24: 120053.055 ops/s
# Warmup Iteration  25: 120387.471 ops/s
# Warmup Iteration  26: 120685.072 ops/s
# Warmup Iteration  27: 120198.970 ops/s
# Warmup Iteration  28: 120605.554 ops/s
# Warmup Iteration  29: 120395.560 ops/s
# Warmup Iteration  30: 120688.590 ops/s
Iteration   1: 120663.228 ops/s
Iteration   2: 120498.718 ops/s
Iteration   3: 120638.488 ops/s
Iteration   4: 120133.234 ops/s
Iteration   5: 120593.561 ops/s
Iteration   6: 120549.784 ops/s
Iteration   7: 120438.985 ops/s
Iteration   8: 120530.521 ops/s
Iteration   9: 120459.705 ops/s
Iteration  10: 120446.834 ops/s
Iteration  11: 120589.770 ops/s
Iteration  12: 120236.954 ops/s
Iteration  13: 120289.968 ops/s
Iteration  14: 120526.086 ops/s
Iteration  15: 120407.586 ops/s
Iteration  16: 120571.159 ops/s
Iteration  17: 120444.141 ops/s
Iteration  18: 120555.406 ops/s
Iteration  19: 120485.981 ops/s
Iteration  20: 120315.790 ops/s
Iteration  21: 120444.986 ops/s
Iteration  22: 120464.485 ops/s
Iteration  23: 120319.511 ops/s
Iteration  24: 120325.452 ops/s
Iteration  25: 120423.495 ops/s
Iteration  26: 120197.279 ops/s
Iteration  27: 120657.329 ops/s
Iteration  28: 120158.631 ops/s
Iteration  29: 120608.349 ops/s
Iteration  30: 120588.162 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_625._Benchmark.benchmark_Cluster_625":
  120452.119 ±(99.9%) 98.746 ops/s [Average]
  (min, avg, max) = (120133.234, 120452.119, 120663.228), stdev = 147.799
  CI (99.9%): [120353.373, 120550.866] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score    Error  Units
Cluster_625._Benchmark.benchmark_Cluster_625  thrpt   30  120452.119 ± 98.746  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_626._Benchmark.benchmark_Cluster_626$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_626._Benchmark.benchmark_Cluster_626

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54429.499 ops/s
# Warmup Iteration   2: 130614.774 ops/s
# Warmup Iteration   3: 186236.644 ops/s
# Warmup Iteration   4: 187562.466 ops/s
# Warmup Iteration   5: 187830.646 ops/s
# Warmup Iteration   6: 149773.175 ops/s
# Warmup Iteration   7: 187165.551 ops/s
# Warmup Iteration   8: 187353.141 ops/s
# Warmup Iteration   9: 187084.278 ops/s
# Warmup Iteration  10: 187261.585 ops/s
# Warmup Iteration  11: 187182.525 ops/s
# Warmup Iteration  12: 186843.362 ops/s
# Warmup Iteration  13: 187396.390 ops/s
# Warmup Iteration  14: 187096.773 ops/s
# Warmup Iteration  15: 186992.151 ops/s
# Warmup Iteration  16: 186697.609 ops/s
# Warmup Iteration  17: 186930.005 ops/s
# Warmup Iteration  18: 186851.661 ops/s
# Warmup Iteration  19: 186894.585 ops/s
# Warmup Iteration  20: 187000.317 ops/s
# Warmup Iteration  21: 186539.277 ops/s
# Warmup Iteration  22: 186792.754 ops/s
# Warmup Iteration  23: 186450.380 ops/s
# Warmup Iteration  24: 186844.117 ops/s
# Warmup Iteration  25: 187025.889 ops/s
# Warmup Iteration  26: 187104.458 ops/s
# Warmup Iteration  27: 187235.449 ops/s
# Warmup Iteration  28: 187032.754 ops/s
# Warmup Iteration  29: 187020.137 ops/s
# Warmup Iteration  30: 187024.002 ops/s
Iteration   1: 186826.115 ops/s
Iteration   2: 186901.649 ops/s
Iteration   3: 186755.375 ops/s
Iteration   4: 186610.404 ops/s
Iteration   5: 186374.421 ops/s
Iteration   6: 186506.739 ops/s
Iteration   7: 186551.205 ops/s
Iteration   8: 187045.564 ops/s
Iteration   9: 186784.613 ops/s
Iteration  10: 187188.032 ops/s
Iteration  11: 186468.186 ops/s
Iteration  12: 187667.889 ops/s
Iteration  13: 186946.082 ops/s
Iteration  14: 187288.807 ops/s
Iteration  15: 187270.062 ops/s
Iteration  16: 187145.942 ops/s
Iteration  17: 187244.000 ops/s
Iteration  18: 187032.175 ops/s
Iteration  19: 186551.815 ops/s
Iteration  20: 186823.915 ops/s
Iteration  21: 187113.100 ops/s
Iteration  22: 186691.710 ops/s
Iteration  23: 187102.173 ops/s
Iteration  24: 187273.670 ops/s
Iteration  25: 186997.488 ops/s
Iteration  26: 187060.830 ops/s
Iteration  27: 186785.999 ops/s
Iteration  28: 186926.706 ops/s
Iteration  29: 186461.248 ops/s
Iteration  30: 187268.612 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_626._Benchmark.benchmark_Cluster_626":
  186922.151 ±(99.9%) 207.674 ops/s [Average]
  (min, avg, max) = (186374.421, 186922.151, 187667.889), stdev = 310.837
  CI (99.9%): [186714.477, 187129.825] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_626._Benchmark.benchmark_Cluster_626  thrpt   30  186922.151 ± 207.674  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_627._Benchmark.benchmark_Cluster_627$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_627._Benchmark.benchmark_Cluster_627

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67198.738 ops/s
# Warmup Iteration   2: 101674.547 ops/s
# Warmup Iteration   3: 173041.681 ops/s
# Warmup Iteration   4: 171471.784 ops/s
# Warmup Iteration   5: 173201.743 ops/s
# Warmup Iteration   6: 174748.764 ops/s
# Warmup Iteration   7: 174092.754 ops/s
# Warmup Iteration   8: 174965.465 ops/s
# Warmup Iteration   9: 135105.986 ops/s
# Warmup Iteration  10: 174958.122 ops/s
# Warmup Iteration  11: 175594.829 ops/s
# Warmup Iteration  12: 175544.796 ops/s
# Warmup Iteration  13: 174424.268 ops/s
# Warmup Iteration  14: 175203.179 ops/s
# Warmup Iteration  15: 175139.721 ops/s
# Warmup Iteration  16: 175452.622 ops/s
# Warmup Iteration  17: 177742.380 ops/s
# Warmup Iteration  18: 178319.389 ops/s
# Warmup Iteration  19: 178343.979 ops/s
# Warmup Iteration  20: 178629.035 ops/s
# Warmup Iteration  21: 178334.914 ops/s
# Warmup Iteration  22: 178300.187 ops/s
# Warmup Iteration  23: 178296.528 ops/s
# Warmup Iteration  24: 177639.484 ops/s
# Warmup Iteration  25: 178207.793 ops/s
# Warmup Iteration  26: 178225.424 ops/s
# Warmup Iteration  27: 177623.672 ops/s
# Warmup Iteration  28: 178265.798 ops/s
# Warmup Iteration  29: 178606.773 ops/s
# Warmup Iteration  30: 177646.518 ops/s
Iteration   1: 178323.254 ops/s
Iteration   2: 178323.027 ops/s
Iteration   3: 177673.361 ops/s
Iteration   4: 178213.319 ops/s
Iteration   5: 178070.413 ops/s
Iteration   6: 178918.000 ops/s
Iteration   7: 178186.870 ops/s
Iteration   8: 177781.825 ops/s
Iteration   9: 178141.425 ops/s
Iteration  10: 178155.683 ops/s
Iteration  11: 177765.893 ops/s
Iteration  12: 177899.421 ops/s
Iteration  13: 177908.646 ops/s
Iteration  14: 178240.667 ops/s
Iteration  15: 178722.640 ops/s
Iteration  16: 178114.972 ops/s
Iteration  17: 178456.565 ops/s
Iteration  18: 178450.856 ops/s
Iteration  19: 178301.210 ops/s
Iteration  20: 178499.912 ops/s
Iteration  21: 178275.949 ops/s
Iteration  22: 178433.861 ops/s
Iteration  23: 179048.611 ops/s
Iteration  24: 178636.364 ops/s
Iteration  25: 178717.425 ops/s
Iteration  26: 178094.157 ops/s
Iteration  27: 177986.743 ops/s
Iteration  28: 178392.237 ops/s
Iteration  29: 178377.118 ops/s
Iteration  30: 178009.240 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_627._Benchmark.benchmark_Cluster_627":
  178270.655 ±(99.9%) 220.042 ops/s [Average]
  (min, avg, max) = (177673.361, 178270.655, 179048.611), stdev = 329.349
  CI (99.9%): [178050.613, 178490.698] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_627._Benchmark.benchmark_Cluster_627  thrpt   30  178270.655 ± 220.042  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_628._Benchmark.benchmark_Cluster_628$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_628._Benchmark.benchmark_Cluster_628

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 107543.839 ops/s
# Warmup Iteration   2: 119387.964 ops/s
# Warmup Iteration   3: 121418.951 ops/s
# Warmup Iteration   4: 154274.663 ops/s
# Warmup Iteration   5: 154376.263 ops/s
# Warmup Iteration   6: 154494.061 ops/s
# Warmup Iteration   7: 154321.060 ops/s
# Warmup Iteration   8: 153240.052 ops/s
# Warmup Iteration   9: 154819.654 ops/s
# Warmup Iteration  10: 154966.974 ops/s
# Warmup Iteration  11: 154921.911 ops/s
# Warmup Iteration  12: 154110.320 ops/s
# Warmup Iteration  13: 154541.560 ops/s
# Warmup Iteration  14: 154572.611 ops/s
# Warmup Iteration  15: 154469.405 ops/s
# Warmup Iteration  16: 154336.168 ops/s
# Warmup Iteration  17: 137579.806 ops/s
# Warmup Iteration  18: 152360.651 ops/s
# Warmup Iteration  19: 161942.891 ops/s
# Warmup Iteration  20: 161645.220 ops/s
# Warmup Iteration  21: 161093.894 ops/s
# Warmup Iteration  22: 161239.569 ops/s
# Warmup Iteration  23: 161442.583 ops/s
# Warmup Iteration  24: 161738.641 ops/s
# Warmup Iteration  25: 161559.302 ops/s
# Warmup Iteration  26: 160778.140 ops/s
# Warmup Iteration  27: 161712.800 ops/s
# Warmup Iteration  28: 161392.767 ops/s
# Warmup Iteration  29: 161394.324 ops/s
# Warmup Iteration  30: 161769.005 ops/s
Iteration   1: 161400.517 ops/s
Iteration   2: 161405.988 ops/s
Iteration   3: 161771.775 ops/s
Iteration   4: 161788.175 ops/s
Iteration   5: 161893.821 ops/s
Iteration   6: 161687.863 ops/s
Iteration   7: 160984.026 ops/s
Iteration   8: 161344.868 ops/s
Iteration   9: 161233.334 ops/s
Iteration  10: 161244.091 ops/s
Iteration  11: 161181.164 ops/s
Iteration  12: 161536.360 ops/s
Iteration  13: 161283.227 ops/s
Iteration  14: 161629.237 ops/s
Iteration  15: 161060.180 ops/s
Iteration  16: 161910.060 ops/s
Iteration  17: 161772.444 ops/s
Iteration  18: 161801.361 ops/s
Iteration  19: 161846.233 ops/s
Iteration  20: 161136.163 ops/s
Iteration  21: 161160.878 ops/s
Iteration  22: 161821.107 ops/s
Iteration  23: 161446.433 ops/s
Iteration  24: 161531.620 ops/s
Iteration  25: 162012.009 ops/s
Iteration  26: 161766.647 ops/s
Iteration  27: 161799.615 ops/s
Iteration  28: 161280.754 ops/s
Iteration  29: 161725.988 ops/s
Iteration  30: 161750.935 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_628._Benchmark.benchmark_Cluster_628":
  161540.229 ±(99.9%) 196.049 ops/s [Average]
  (min, avg, max) = (160984.026, 161540.229, 162012.009), stdev = 293.437
  CI (99.9%): [161344.180, 161736.278] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_628._Benchmark.benchmark_Cluster_628  thrpt   30  161540.229 ± 196.049  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_629._Benchmark.benchmark_Cluster_629$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_629._Benchmark.benchmark_Cluster_629

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91953.421 ops/s
# Warmup Iteration   2: 115364.698 ops/s
# Warmup Iteration   3: 167036.765 ops/s
# Warmup Iteration   4: 166266.455 ops/s
# Warmup Iteration   5: 166300.684 ops/s
# Warmup Iteration   6: 165857.851 ops/s
# Warmup Iteration   7: 167064.502 ops/s
# Warmup Iteration   8: 167095.247 ops/s
# Warmup Iteration   9: 134389.784 ops/s
# Warmup Iteration  10: 165288.277 ops/s
# Warmup Iteration  11: 167054.225 ops/s
# Warmup Iteration  12: 167196.756 ops/s
# Warmup Iteration  13: 167227.346 ops/s
# Warmup Iteration  14: 166918.312 ops/s
# Warmup Iteration  15: 167157.015 ops/s
# Warmup Iteration  16: 167272.050 ops/s
# Warmup Iteration  17: 167098.110 ops/s
# Warmup Iteration  18: 167262.777 ops/s
# Warmup Iteration  19: 167366.603 ops/s
# Warmup Iteration  20: 167090.275 ops/s
# Warmup Iteration  21: 167258.839 ops/s
# Warmup Iteration  22: 167174.503 ops/s
# Warmup Iteration  23: 167334.782 ops/s
# Warmup Iteration  24: 167213.734 ops/s
# Warmup Iteration  25: 167326.611 ops/s
# Warmup Iteration  26: 167281.659 ops/s
# Warmup Iteration  27: 167218.693 ops/s
# Warmup Iteration  28: 167505.822 ops/s
# Warmup Iteration  29: 167289.267 ops/s
# Warmup Iteration  30: 167343.902 ops/s
Iteration   1: 167347.130 ops/s
Iteration   2: 167321.548 ops/s
Iteration   3: 166595.334 ops/s
Iteration   4: 167462.619 ops/s
Iteration   5: 167396.712 ops/s
Iteration   6: 167257.457 ops/s
Iteration   7: 167268.927 ops/s
Iteration   8: 167427.533 ops/s
Iteration   9: 166825.962 ops/s
Iteration  10: 167152.034 ops/s
Iteration  11: 166994.919 ops/s
Iteration  12: 167140.528 ops/s
Iteration  13: 167376.380 ops/s
Iteration  14: 167286.568 ops/s
Iteration  15: 167314.538 ops/s
Iteration  16: 167429.210 ops/s
Iteration  17: 167214.581 ops/s
Iteration  18: 167243.621 ops/s
Iteration  19: 167438.756 ops/s
Iteration  20: 167273.010 ops/s
Iteration  21: 166981.026 ops/s
Iteration  22: 167386.110 ops/s
Iteration  23: 167381.624 ops/s
Iteration  24: 167063.040 ops/s
Iteration  25: 167501.236 ops/s
Iteration  26: 167251.996 ops/s
Iteration  27: 167408.560 ops/s
Iteration  28: 167452.548 ops/s
Iteration  29: 167433.949 ops/s
Iteration  30: 167387.152 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_629._Benchmark.benchmark_Cluster_629":
  167267.154 ±(99.9%) 136.786 ops/s [Average]
  (min, avg, max) = (166595.334, 167267.154, 167501.236), stdev = 204.734
  CI (99.9%): [167130.368, 167403.939] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_629._Benchmark.benchmark_Cluster_629  thrpt   30  167267.154 ± 136.786  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_63._Benchmark.benchmark_Cluster_63$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_63._Benchmark.benchmark_Cluster_63

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71517.200 ops/s
# Warmup Iteration   2: 135073.014 ops/s
# Warmup Iteration   3: 190733.936 ops/s
# Warmup Iteration   4: 189370.309 ops/s
# Warmup Iteration   5: 171667.607 ops/s
# Warmup Iteration   6: 169214.183 ops/s
# Warmup Iteration   7: 190658.997 ops/s
# Warmup Iteration   8: 190514.617 ops/s
# Warmup Iteration   9: 189899.021 ops/s
# Warmup Iteration  10: 189769.116 ops/s
# Warmup Iteration  11: 190425.774 ops/s
# Warmup Iteration  12: 189523.138 ops/s
# Warmup Iteration  13: 189574.226 ops/s
# Warmup Iteration  14: 189572.354 ops/s
# Warmup Iteration  15: 189627.983 ops/s
# Warmup Iteration  16: 190904.107 ops/s
# Warmup Iteration  17: 190496.134 ops/s
# Warmup Iteration  18: 190439.062 ops/s
# Warmup Iteration  19: 190735.530 ops/s
# Warmup Iteration  20: 190775.930 ops/s
# Warmup Iteration  21: 190288.067 ops/s
# Warmup Iteration  22: 190453.081 ops/s
# Warmup Iteration  23: 191204.139 ops/s
# Warmup Iteration  24: 190746.074 ops/s
# Warmup Iteration  25: 190737.070 ops/s
# Warmup Iteration  26: 190147.536 ops/s
# Warmup Iteration  27: 190512.777 ops/s
# Warmup Iteration  28: 189698.689 ops/s
# Warmup Iteration  29: 189331.354 ops/s
# Warmup Iteration  30: 189953.912 ops/s
Iteration   1: 190900.028 ops/s
Iteration   2: 189551.819 ops/s
Iteration   3: 189170.529 ops/s
Iteration   4: 190479.040 ops/s
Iteration   5: 190237.478 ops/s
Iteration   6: 191318.082 ops/s
Iteration   7: 188659.343 ops/s
Iteration   8: 190359.745 ops/s
Iteration   9: 192020.121 ops/s
Iteration  10: 189754.215 ops/s
Iteration  11: 189547.593 ops/s
Iteration  12: 189924.952 ops/s
Iteration  13: 189742.274 ops/s
Iteration  14: 191024.913 ops/s
Iteration  15: 191304.582 ops/s
Iteration  16: 190368.203 ops/s
Iteration  17: 191120.006 ops/s
Iteration  18: 191022.562 ops/s
Iteration  19: 190148.188 ops/s
Iteration  20: 190240.599 ops/s
Iteration  21: 189886.599 ops/s
Iteration  22: 189820.125 ops/s
Iteration  23: 190417.765 ops/s
Iteration  24: 190641.575 ops/s
Iteration  25: 190921.774 ops/s
Iteration  26: 190720.475 ops/s
Iteration  27: 191707.416 ops/s
Iteration  28: 190337.588 ops/s
Iteration  29: 190262.358 ops/s
Iteration  30: 189437.783 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_63._Benchmark.benchmark_Cluster_63":
  190368.258 ±(99.9%) 506.708 ops/s [Average]
  (min, avg, max) = (188659.343, 190368.258, 192020.121), stdev = 758.416
  CI (99.9%): [189861.550, 190874.965] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_63._Benchmark.benchmark_Cluster_63  thrpt   30  190368.258 ± 506.708  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_630._Benchmark.benchmark_Cluster_630$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_630._Benchmark.benchmark_Cluster_630

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86855.879 ops/s
# Warmup Iteration   2: 94130.054 ops/s
# Warmup Iteration   3: 115844.492 ops/s
# Warmup Iteration   4: 130367.349 ops/s
# Warmup Iteration   5: 129960.755 ops/s
# Warmup Iteration   6: 129787.786 ops/s
# Warmup Iteration   7: 130695.552 ops/s
# Warmup Iteration   8: 130347.124 ops/s
# Warmup Iteration   9: 130787.834 ops/s
# Warmup Iteration  10: 130270.702 ops/s
# Warmup Iteration  11: 130403.122 ops/s
# Warmup Iteration  12: 130415.977 ops/s
# Warmup Iteration  13: 114334.972 ops/s
# Warmup Iteration  14: 118760.632 ops/s
# Warmup Iteration  15: 130432.455 ops/s
# Warmup Iteration  16: 130366.727 ops/s
# Warmup Iteration  17: 137120.581 ops/s
# Warmup Iteration  18: 137281.149 ops/s
# Warmup Iteration  19: 137452.216 ops/s
# Warmup Iteration  20: 137241.038 ops/s
# Warmup Iteration  21: 137534.887 ops/s
# Warmup Iteration  22: 137351.825 ops/s
# Warmup Iteration  23: 137199.435 ops/s
# Warmup Iteration  24: 137466.452 ops/s
# Warmup Iteration  25: 137027.370 ops/s
# Warmup Iteration  26: 137009.196 ops/s
# Warmup Iteration  27: 137990.076 ops/s
# Warmup Iteration  28: 137516.148 ops/s
# Warmup Iteration  29: 136995.911 ops/s
# Warmup Iteration  30: 136993.976 ops/s
Iteration   1: 137172.322 ops/s
Iteration   2: 137117.110 ops/s
Iteration   3: 136814.211 ops/s
Iteration   4: 136873.757 ops/s
Iteration   5: 136878.972 ops/s
Iteration   6: 137034.848 ops/s
Iteration   7: 137255.655 ops/s
Iteration   8: 136924.655 ops/s
Iteration   9: 137399.502 ops/s
Iteration  10: 137621.207 ops/s
Iteration  11: 137780.945 ops/s
Iteration  12: 137129.111 ops/s
Iteration  13: 137463.887 ops/s
Iteration  14: 137288.803 ops/s
Iteration  15: 137091.170 ops/s
Iteration  16: 137362.515 ops/s
Iteration  17: 137179.765 ops/s
Iteration  18: 137647.040 ops/s
Iteration  19: 137656.131 ops/s
Iteration  20: 137893.346 ops/s
Iteration  21: 137621.041 ops/s
Iteration  22: 137546.263 ops/s
Iteration  23: 137343.844 ops/s
Iteration  24: 137312.023 ops/s
Iteration  25: 137429.985 ops/s
Iteration  26: 137160.215 ops/s
Iteration  27: 137129.584 ops/s
Iteration  28: 137352.403 ops/s
Iteration  29: 137205.790 ops/s
Iteration  30: 137526.577 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_630._Benchmark.benchmark_Cluster_630":
  137307.089 ±(99.9%) 184.538 ops/s [Average]
  (min, avg, max) = (136814.211, 137307.089, 137893.346), stdev = 276.207
  CI (99.9%): [137122.552, 137491.627] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_630._Benchmark.benchmark_Cluster_630  thrpt   30  137307.089 ± 184.538  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_631._Benchmark.benchmark_Cluster_631$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_631._Benchmark.benchmark_Cluster_631

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94392.167 ops/s
# Warmup Iteration   2: 103172.082 ops/s
# Warmup Iteration   3: 116933.579 ops/s
# Warmup Iteration   4: 139864.605 ops/s
# Warmup Iteration   5: 139398.439 ops/s
# Warmup Iteration   6: 139016.011 ops/s
# Warmup Iteration   7: 138915.120 ops/s
# Warmup Iteration   8: 139515.422 ops/s
# Warmup Iteration   9: 139439.380 ops/s
# Warmup Iteration  10: 139681.465 ops/s
# Warmup Iteration  11: 138977.508 ops/s
# Warmup Iteration  12: 139041.762 ops/s
# Warmup Iteration  13: 140175.696 ops/s
# Warmup Iteration  14: 134938.451 ops/s
# Warmup Iteration  15: 114794.858 ops/s
# Warmup Iteration  16: 139539.108 ops/s
# Warmup Iteration  17: 146368.783 ops/s
# Warmup Iteration  18: 146523.934 ops/s
# Warmup Iteration  19: 146641.472 ops/s
# Warmup Iteration  20: 146407.709 ops/s
# Warmup Iteration  21: 146010.711 ops/s
# Warmup Iteration  22: 145651.362 ops/s
# Warmup Iteration  23: 146001.611 ops/s
# Warmup Iteration  24: 146480.244 ops/s
# Warmup Iteration  25: 145920.438 ops/s
# Warmup Iteration  26: 146090.640 ops/s
# Warmup Iteration  27: 146215.677 ops/s
# Warmup Iteration  28: 146516.515 ops/s
# Warmup Iteration  29: 145760.205 ops/s
# Warmup Iteration  30: 145820.071 ops/s
Iteration   1: 146828.254 ops/s
Iteration   2: 147264.811 ops/s
Iteration   3: 146716.950 ops/s
Iteration   4: 146649.052 ops/s
Iteration   5: 146770.982 ops/s
Iteration   6: 146215.486 ops/s
Iteration   7: 146323.284 ops/s
Iteration   8: 146310.884 ops/s
Iteration   9: 146268.768 ops/s
Iteration  10: 145981.037 ops/s
Iteration  11: 146206.521 ops/s
Iteration  12: 146939.423 ops/s
Iteration  13: 147007.519 ops/s
Iteration  14: 147481.645 ops/s
Iteration  15: 147225.053 ops/s
Iteration  16: 146706.210 ops/s
Iteration  17: 146545.439 ops/s
Iteration  18: 146395.084 ops/s
Iteration  19: 147128.222 ops/s
Iteration  20: 147289.459 ops/s
Iteration  21: 147105.350 ops/s
Iteration  22: 147002.126 ops/s
Iteration  23: 146525.726 ops/s
Iteration  24: 146630.274 ops/s
Iteration  25: 146484.160 ops/s
Iteration  26: 145849.664 ops/s
Iteration  27: 146532.833 ops/s
Iteration  28: 146401.522 ops/s
Iteration  29: 146336.342 ops/s
Iteration  30: 146683.530 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_631._Benchmark.benchmark_Cluster_631":
  146660.187 ±(99.9%) 270.867 ops/s [Average]
  (min, avg, max) = (145849.664, 146660.187, 147481.645), stdev = 405.421
  CI (99.9%): [146389.320, 146931.054] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_631._Benchmark.benchmark_Cluster_631  thrpt   30  146660.187 ± 270.867  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_632._Benchmark.benchmark_Cluster_632$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_632._Benchmark.benchmark_Cluster_632

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 117225.512 ops/s
# Warmup Iteration   2: 126431.957 ops/s
# Warmup Iteration   3: 148704.936 ops/s
# Warmup Iteration   4: 172997.036 ops/s
# Warmup Iteration   5: 172062.037 ops/s
# Warmup Iteration   6: 172549.430 ops/s
# Warmup Iteration   7: 171699.561 ops/s
# Warmup Iteration   8: 172478.095 ops/s
# Warmup Iteration   9: 173079.243 ops/s
# Warmup Iteration  10: 172682.168 ops/s
# Warmup Iteration  11: 173048.905 ops/s
# Warmup Iteration  12: 172385.149 ops/s
# Warmup Iteration  13: 172417.907 ops/s
# Warmup Iteration  14: 139400.072 ops/s
# Warmup Iteration  15: 168875.723 ops/s
# Warmup Iteration  16: 172664.696 ops/s
# Warmup Iteration  17: 183207.401 ops/s
# Warmup Iteration  18: 184016.975 ops/s
# Warmup Iteration  19: 183705.009 ops/s
# Warmup Iteration  20: 182980.664 ops/s
# Warmup Iteration  21: 183753.088 ops/s
# Warmup Iteration  22: 183260.807 ops/s
# Warmup Iteration  23: 183772.115 ops/s
# Warmup Iteration  24: 183298.934 ops/s
# Warmup Iteration  25: 183576.267 ops/s
# Warmup Iteration  26: 183475.872 ops/s
# Warmup Iteration  27: 183669.380 ops/s
# Warmup Iteration  28: 182668.109 ops/s
# Warmup Iteration  29: 183046.531 ops/s
# Warmup Iteration  30: 183410.854 ops/s
Iteration   1: 183377.986 ops/s
Iteration   2: 183650.597 ops/s
Iteration   3: 183928.319 ops/s
Iteration   4: 183555.883 ops/s
Iteration   5: 182951.041 ops/s
Iteration   6: 183141.756 ops/s
Iteration   7: 182671.791 ops/s
Iteration   8: 183147.269 ops/s
Iteration   9: 183688.108 ops/s
Iteration  10: 183577.621 ops/s
Iteration  11: 183356.493 ops/s
Iteration  12: 183785.167 ops/s
Iteration  13: 183646.152 ops/s
Iteration  14: 183166.385 ops/s
Iteration  15: 184040.864 ops/s
Iteration  16: 184291.168 ops/s
Iteration  17: 182805.565 ops/s
Iteration  18: 183084.786 ops/s
Iteration  19: 183474.995 ops/s
Iteration  20: 183427.094 ops/s
Iteration  21: 183417.677 ops/s
Iteration  22: 183540.429 ops/s
Iteration  23: 183258.610 ops/s
Iteration  24: 182972.728 ops/s
Iteration  25: 183363.502 ops/s
Iteration  26: 184039.801 ops/s
Iteration  27: 183631.325 ops/s
Iteration  28: 183277.081 ops/s
Iteration  29: 183319.679 ops/s
Iteration  30: 183356.365 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_632._Benchmark.benchmark_Cluster_632":
  183431.541 ±(99.9%) 246.682 ops/s [Average]
  (min, avg, max) = (182671.791, 183431.541, 184291.168), stdev = 369.223
  CI (99.9%): [183184.859, 183678.224] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_632._Benchmark.benchmark_Cluster_632  thrpt   30  183431.541 ± 246.682  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_633._Benchmark.benchmark_Cluster_633$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_633._Benchmark.benchmark_Cluster_633

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 95196.215 ops/s
# Warmup Iteration   2: 101465.379 ops/s
# Warmup Iteration   3: 115165.417 ops/s
# Warmup Iteration   4: 135169.330 ops/s
# Warmup Iteration   5: 134816.655 ops/s
# Warmup Iteration   6: 135023.042 ops/s
# Warmup Iteration   7: 134368.577 ops/s
# Warmup Iteration   8: 134920.493 ops/s
# Warmup Iteration   9: 134556.496 ops/s
# Warmup Iteration  10: 134680.682 ops/s
# Warmup Iteration  11: 135060.509 ops/s
# Warmup Iteration  12: 135447.958 ops/s
# Warmup Iteration  13: 134905.152 ops/s
# Warmup Iteration  14: 134898.252 ops/s
# Warmup Iteration  15: 107142.157 ops/s
# Warmup Iteration  16: 135069.992 ops/s
# Warmup Iteration  17: 141743.652 ops/s
# Warmup Iteration  18: 141114.153 ops/s
# Warmup Iteration  19: 141448.369 ops/s
# Warmup Iteration  20: 141479.002 ops/s
# Warmup Iteration  21: 141443.026 ops/s
# Warmup Iteration  22: 141677.364 ops/s
# Warmup Iteration  23: 140879.759 ops/s
# Warmup Iteration  24: 140676.601 ops/s
# Warmup Iteration  25: 141245.566 ops/s
# Warmup Iteration  26: 141974.014 ops/s
# Warmup Iteration  27: 141105.780 ops/s
# Warmup Iteration  28: 141919.493 ops/s
# Warmup Iteration  29: 140984.535 ops/s
# Warmup Iteration  30: 141404.243 ops/s
Iteration   1: 141715.227 ops/s
Iteration   2: 141561.688 ops/s
Iteration   3: 141442.815 ops/s
Iteration   4: 141094.075 ops/s
Iteration   5: 141981.293 ops/s
Iteration   6: 140425.664 ops/s
Iteration   7: 141821.830 ops/s
Iteration   8: 141343.760 ops/s
Iteration   9: 141723.733 ops/s
Iteration  10: 140871.888 ops/s
Iteration  11: 141017.421 ops/s
Iteration  12: 141259.573 ops/s
Iteration  13: 141375.552 ops/s
Iteration  14: 140437.912 ops/s
Iteration  15: 141743.795 ops/s
Iteration  16: 141644.337 ops/s
Iteration  17: 140768.351 ops/s
Iteration  18: 140929.818 ops/s
Iteration  19: 141262.870 ops/s
Iteration  20: 142681.975 ops/s
Iteration  21: 141088.934 ops/s
Iteration  22: 140851.070 ops/s
Iteration  23: 141346.532 ops/s
Iteration  24: 140485.617 ops/s
Iteration  25: 141673.457 ops/s
Iteration  26: 141860.912 ops/s
Iteration  27: 141352.417 ops/s
Iteration  28: 142411.314 ops/s
Iteration  29: 141301.151 ops/s
Iteration  30: 140690.972 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_633._Benchmark.benchmark_Cluster_633":
  141338.865 ±(99.9%) 363.305 ops/s [Average]
  (min, avg, max) = (140425.664, 141338.865, 142681.975), stdev = 543.778
  CI (99.9%): [140975.560, 141702.170] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_633._Benchmark.benchmark_Cluster_633  thrpt   30  141338.865 ± 363.305  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_634._Benchmark.benchmark_Cluster_634$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_634._Benchmark.benchmark_Cluster_634

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71037.897 ops/s
# Warmup Iteration   2: 79082.435 ops/s
# Warmup Iteration   3: 80102.859 ops/s
# Warmup Iteration   4: 98578.200 ops/s
# Warmup Iteration   5: 103144.654 ops/s
# Warmup Iteration   6: 102777.183 ops/s
# Warmup Iteration   7: 103348.865 ops/s
# Warmup Iteration   8: 102178.312 ops/s
# Warmup Iteration   9: 103247.713 ops/s
# Warmup Iteration  10: 102570.783 ops/s
# Warmup Iteration  11: 102918.437 ops/s
# Warmup Iteration  12: 102737.628 ops/s
# Warmup Iteration  13: 103050.809 ops/s
# Warmup Iteration  14: 103329.733 ops/s
# Warmup Iteration  15: 103153.727 ops/s
# Warmup Iteration  16: 102765.790 ops/s
# Warmup Iteration  17: 106711.359 ops/s
# Warmup Iteration  18: 98161.712 ops/s
# Warmup Iteration  19: 90679.937 ops/s
# Warmup Iteration  20: 106171.138 ops/s
# Warmup Iteration  21: 106411.454 ops/s
# Warmup Iteration  22: 106273.314 ops/s
# Warmup Iteration  23: 106532.916 ops/s
# Warmup Iteration  24: 106830.250 ops/s
# Warmup Iteration  25: 105737.525 ops/s
# Warmup Iteration  26: 105887.453 ops/s
# Warmup Iteration  27: 106310.749 ops/s
# Warmup Iteration  28: 106084.131 ops/s
# Warmup Iteration  29: 106520.898 ops/s
# Warmup Iteration  30: 106132.161 ops/s
Iteration   1: 106013.564 ops/s
Iteration   2: 106745.314 ops/s
Iteration   3: 106481.290 ops/s
Iteration   4: 106639.766 ops/s
Iteration   5: 106325.575 ops/s
Iteration   6: 106789.002 ops/s
Iteration   7: 106633.575 ops/s
Iteration   8: 106852.994 ops/s
Iteration   9: 106668.542 ops/s
Iteration  10: 106620.717 ops/s
Iteration  11: 106389.902 ops/s
Iteration  12: 106428.832 ops/s
Iteration  13: 106457.048 ops/s
Iteration  14: 106204.020 ops/s
Iteration  15: 106340.657 ops/s
Iteration  16: 106148.089 ops/s
Iteration  17: 105935.506 ops/s
Iteration  18: 105638.801 ops/s
Iteration  19: 105947.777 ops/s
Iteration  20: 105821.223 ops/s
Iteration  21: 105351.480 ops/s
Iteration  22: 106085.097 ops/s
Iteration  23: 106126.636 ops/s
Iteration  24: 105314.087 ops/s
Iteration  25: 106098.563 ops/s
Iteration  26: 106354.919 ops/s
Iteration  27: 106877.282 ops/s
Iteration  28: 106126.348 ops/s
Iteration  29: 105933.003 ops/s
Iteration  30: 106434.973 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_634._Benchmark.benchmark_Cluster_634":
  106259.486 ±(99.9%) 271.514 ops/s [Average]
  (min, avg, max) = (105314.087, 106259.486, 106877.282), stdev = 406.390
  CI (99.9%): [105987.972, 106531.000] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_634._Benchmark.benchmark_Cluster_634  thrpt   30  106259.486 ± 271.514  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_635._Benchmark.benchmark_Cluster_635$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_635._Benchmark.benchmark_Cluster_635

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70193.477 ops/s
# Warmup Iteration   2: 125110.227 ops/s
# Warmup Iteration   3: 184124.746 ops/s
# Warmup Iteration   4: 182538.166 ops/s
# Warmup Iteration   5: 184415.814 ops/s
# Warmup Iteration   6: 184101.260 ops/s
# Warmup Iteration   7: 146560.695 ops/s
# Warmup Iteration   8: 184331.608 ops/s
# Warmup Iteration   9: 183919.226 ops/s
# Warmup Iteration  10: 183474.395 ops/s
# Warmup Iteration  11: 184024.057 ops/s
# Warmup Iteration  12: 184294.122 ops/s
# Warmup Iteration  13: 184452.548 ops/s
# Warmup Iteration  14: 184360.963 ops/s
# Warmup Iteration  15: 184114.845 ops/s
# Warmup Iteration  16: 184291.249 ops/s
# Warmup Iteration  17: 183241.176 ops/s
# Warmup Iteration  18: 183428.067 ops/s
# Warmup Iteration  19: 183454.100 ops/s
# Warmup Iteration  20: 183352.403 ops/s
# Warmup Iteration  21: 183553.944 ops/s
# Warmup Iteration  22: 183324.001 ops/s
# Warmup Iteration  23: 183558.062 ops/s
# Warmup Iteration  24: 183102.156 ops/s
# Warmup Iteration  25: 183146.901 ops/s
# Warmup Iteration  26: 183111.023 ops/s
# Warmup Iteration  27: 183415.251 ops/s
# Warmup Iteration  28: 183561.722 ops/s
# Warmup Iteration  29: 183270.255 ops/s
# Warmup Iteration  30: 183369.993 ops/s
Iteration   1: 183510.202 ops/s
Iteration   2: 183438.038 ops/s
Iteration   3: 183494.324 ops/s
Iteration   4: 183221.521 ops/s
Iteration   5: 182787.233 ops/s
Iteration   6: 182916.263 ops/s
Iteration   7: 183581.050 ops/s
Iteration   8: 183551.250 ops/s
Iteration   9: 183536.584 ops/s
Iteration  10: 183449.268 ops/s
Iteration  11: 183591.237 ops/s
Iteration  12: 183443.002 ops/s
Iteration  13: 183367.978 ops/s
Iteration  14: 183074.233 ops/s
Iteration  15: 183237.582 ops/s
Iteration  16: 183422.547 ops/s
Iteration  17: 183393.002 ops/s
Iteration  18: 183456.654 ops/s
Iteration  19: 183002.072 ops/s
Iteration  20: 183273.006 ops/s
Iteration  21: 182741.852 ops/s
Iteration  22: 183613.396 ops/s
Iteration  23: 183069.743 ops/s
Iteration  24: 183125.117 ops/s
Iteration  25: 183136.360 ops/s
Iteration  26: 183617.778 ops/s
Iteration  27: 183232.990 ops/s
Iteration  28: 183470.959 ops/s
Iteration  29: 182763.427 ops/s
Iteration  30: 183507.616 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_635._Benchmark.benchmark_Cluster_635":
  183300.876 ±(99.9%) 176.591 ops/s [Average]
  (min, avg, max) = (182741.852, 183300.876, 183617.778), stdev = 264.313
  CI (99.9%): [183124.285, 183477.467] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_635._Benchmark.benchmark_Cluster_635  thrpt   30  183300.876 ± 176.591  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_636._Benchmark.benchmark_Cluster_636$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_636._Benchmark.benchmark_Cluster_636

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96375.894 ops/s
# Warmup Iteration   2: 126679.835 ops/s
# Warmup Iteration   3: 187091.937 ops/s
# Warmup Iteration   4: 185689.281 ops/s
# Warmup Iteration   5: 186909.276 ops/s
# Warmup Iteration   6: 187459.587 ops/s
# Warmup Iteration   7: 186948.724 ops/s
# Warmup Iteration   8: 187715.837 ops/s
# Warmup Iteration   9: 147225.775 ops/s
# Warmup Iteration  10: 186882.304 ops/s
# Warmup Iteration  11: 187112.226 ops/s
# Warmup Iteration  12: 187375.072 ops/s
# Warmup Iteration  13: 187346.633 ops/s
# Warmup Iteration  14: 187220.917 ops/s
# Warmup Iteration  15: 187231.587 ops/s
# Warmup Iteration  16: 186884.246 ops/s
# Warmup Iteration  17: 192463.085 ops/s
# Warmup Iteration  18: 192915.649 ops/s
# Warmup Iteration  19: 192639.936 ops/s
# Warmup Iteration  20: 192789.245 ops/s
# Warmup Iteration  21: 192870.295 ops/s
# Warmup Iteration  22: 192858.445 ops/s
# Warmup Iteration  23: 192213.447 ops/s
# Warmup Iteration  24: 193098.758 ops/s
# Warmup Iteration  25: 191925.883 ops/s
# Warmup Iteration  26: 193015.637 ops/s
# Warmup Iteration  27: 192853.711 ops/s
# Warmup Iteration  28: 192197.359 ops/s
# Warmup Iteration  29: 193007.220 ops/s
# Warmup Iteration  30: 192781.092 ops/s
Iteration   1: 192405.296 ops/s
Iteration   2: 192026.477 ops/s
Iteration   3: 192828.123 ops/s
Iteration   4: 192272.011 ops/s
Iteration   5: 193146.634 ops/s
Iteration   6: 192960.480 ops/s
Iteration   7: 192509.847 ops/s
Iteration   8: 192568.602 ops/s
Iteration   9: 192435.308 ops/s
Iteration  10: 193043.031 ops/s
Iteration  11: 193033.981 ops/s
Iteration  12: 192653.931 ops/s
Iteration  13: 193012.383 ops/s
Iteration  14: 192734.827 ops/s
Iteration  15: 192346.874 ops/s
Iteration  16: 192552.464 ops/s
Iteration  17: 192743.836 ops/s
Iteration  18: 193119.498 ops/s
Iteration  19: 192678.098 ops/s
Iteration  20: 192527.321 ops/s
Iteration  21: 193161.481 ops/s
Iteration  22: 192681.162 ops/s
Iteration  23: 192979.771 ops/s
Iteration  24: 193171.260 ops/s
Iteration  25: 192710.904 ops/s
Iteration  26: 192657.363 ops/s
Iteration  27: 192672.238 ops/s
Iteration  28: 192895.167 ops/s
Iteration  29: 192747.802 ops/s
Iteration  30: 192508.777 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_636._Benchmark.benchmark_Cluster_636":
  192726.165 ±(99.9%) 191.739 ops/s [Average]
  (min, avg, max) = (192026.477, 192726.165, 193171.260), stdev = 286.986
  CI (99.9%): [192534.426, 192917.904] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_636._Benchmark.benchmark_Cluster_636  thrpt   30  192726.165 ± 191.739  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_637._Benchmark.benchmark_Cluster_637$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_637._Benchmark.benchmark_Cluster_637

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54950.445 ops/s
# Warmup Iteration   2: 101599.799 ops/s
# Warmup Iteration   3: 144889.191 ops/s
# Warmup Iteration   4: 143824.019 ops/s
# Warmup Iteration   5: 144986.363 ops/s
# Warmup Iteration   6: 144550.983 ops/s
# Warmup Iteration   7: 113143.263 ops/s
# Warmup Iteration   8: 144586.014 ops/s
# Warmup Iteration   9: 144924.842 ops/s
# Warmup Iteration  10: 144953.155 ops/s
# Warmup Iteration  11: 144639.504 ops/s
# Warmup Iteration  12: 144659.993 ops/s
# Warmup Iteration  13: 144645.144 ops/s
# Warmup Iteration  14: 144384.973 ops/s
# Warmup Iteration  15: 144381.580 ops/s
# Warmup Iteration  16: 144430.433 ops/s
# Warmup Iteration  17: 146333.629 ops/s
# Warmup Iteration  18: 146626.278 ops/s
# Warmup Iteration  19: 146410.942 ops/s
# Warmup Iteration  20: 146659.088 ops/s
# Warmup Iteration  21: 146282.074 ops/s
# Warmup Iteration  22: 146142.710 ops/s
# Warmup Iteration  23: 146212.990 ops/s
# Warmup Iteration  24: 146248.385 ops/s
# Warmup Iteration  25: 146433.411 ops/s
# Warmup Iteration  26: 146631.687 ops/s
# Warmup Iteration  27: 146399.968 ops/s
# Warmup Iteration  28: 146315.042 ops/s
# Warmup Iteration  29: 146097.958 ops/s
# Warmup Iteration  30: 146328.013 ops/s
Iteration   1: 146024.324 ops/s
Iteration   2: 146282.030 ops/s
Iteration   3: 146290.014 ops/s
Iteration   4: 146445.247 ops/s
Iteration   5: 146173.650 ops/s
Iteration   6: 146639.738 ops/s
Iteration   7: 146682.027 ops/s
Iteration   8: 146709.683 ops/s
Iteration   9: 146129.180 ops/s
Iteration  10: 146238.699 ops/s
Iteration  11: 146582.566 ops/s
Iteration  12: 146320.263 ops/s
Iteration  13: 146160.529 ops/s
Iteration  14: 146517.985 ops/s
Iteration  15: 146130.803 ops/s
Iteration  16: 146509.388 ops/s
Iteration  17: 146609.886 ops/s
Iteration  18: 146676.047 ops/s
Iteration  19: 145867.790 ops/s
Iteration  20: 146260.647 ops/s
Iteration  21: 146333.818 ops/s
Iteration  22: 146845.086 ops/s
Iteration  23: 146654.229 ops/s
Iteration  24: 146454.194 ops/s
Iteration  25: 146412.284 ops/s
Iteration  26: 146681.937 ops/s
Iteration  27: 146310.912 ops/s
Iteration  28: 146188.031 ops/s
Iteration  29: 146077.170 ops/s
Iteration  30: 146058.223 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_637._Benchmark.benchmark_Cluster_637":
  146375.546 ±(99.9%) 165.369 ops/s [Average]
  (min, avg, max) = (145867.790, 146375.546, 146845.086), stdev = 247.516
  CI (99.9%): [146210.177, 146540.915] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_637._Benchmark.benchmark_Cluster_637  thrpt   30  146375.546 ± 165.369  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_638._Benchmark.benchmark_Cluster_638$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_638._Benchmark.benchmark_Cluster_638

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93954.788 ops/s
# Warmup Iteration   2: 107686.376 ops/s
# Warmup Iteration   3: 136109.610 ops/s
# Warmup Iteration   4: 152222.577 ops/s
# Warmup Iteration   5: 152148.463 ops/s
# Warmup Iteration   6: 151092.831 ops/s
# Warmup Iteration   7: 152329.883 ops/s
# Warmup Iteration   8: 152794.622 ops/s
# Warmup Iteration   9: 152939.833 ops/s
# Warmup Iteration  10: 152709.670 ops/s
# Warmup Iteration  11: 152508.628 ops/s
# Warmup Iteration  12: 149239.039 ops/s
# Warmup Iteration  13: 123353.273 ops/s
# Warmup Iteration  14: 152562.196 ops/s
# Warmup Iteration  15: 152122.519 ops/s
# Warmup Iteration  16: 153072.733 ops/s
# Warmup Iteration  17: 156846.213 ops/s
# Warmup Iteration  18: 156614.359 ops/s
# Warmup Iteration  19: 156739.556 ops/s
# Warmup Iteration  20: 156120.515 ops/s
# Warmup Iteration  21: 156534.663 ops/s
# Warmup Iteration  22: 155935.567 ops/s
# Warmup Iteration  23: 156454.191 ops/s
# Warmup Iteration  24: 156216.141 ops/s
# Warmup Iteration  25: 156503.408 ops/s
# Warmup Iteration  26: 156179.831 ops/s
# Warmup Iteration  27: 156563.179 ops/s
# Warmup Iteration  28: 156560.786 ops/s
# Warmup Iteration  29: 156489.319 ops/s
# Warmup Iteration  30: 156558.981 ops/s
Iteration   1: 156667.152 ops/s
Iteration   2: 156927.374 ops/s
Iteration   3: 156529.181 ops/s
Iteration   4: 156310.061 ops/s
Iteration   5: 156679.267 ops/s
Iteration   6: 156552.146 ops/s
Iteration   7: 156540.734 ops/s
Iteration   8: 155877.487 ops/s
Iteration   9: 156166.171 ops/s
Iteration  10: 156342.021 ops/s
Iteration  11: 156556.857 ops/s
Iteration  12: 156269.896 ops/s
Iteration  13: 156508.119 ops/s
Iteration  14: 156739.851 ops/s
Iteration  15: 156442.564 ops/s
Iteration  16: 156041.945 ops/s
Iteration  17: 156418.492 ops/s
Iteration  18: 156858.191 ops/s
Iteration  19: 155991.989 ops/s
Iteration  20: 155741.109 ops/s
Iteration  21: 156554.873 ops/s
Iteration  22: 156373.006 ops/s
Iteration  23: 156786.750 ops/s
Iteration  24: 156688.637 ops/s
Iteration  25: 156411.907 ops/s
Iteration  26: 156454.806 ops/s
Iteration  27: 155995.881 ops/s
Iteration  28: 156290.476 ops/s
Iteration  29: 156411.560 ops/s
Iteration  30: 156823.847 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_638._Benchmark.benchmark_Cluster_638":
  156431.745 ±(99.9%) 197.006 ops/s [Average]
  (min, avg, max) = (155741.109, 156431.745, 156927.374), stdev = 294.870
  CI (99.9%): [156234.739, 156628.751] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_638._Benchmark.benchmark_Cluster_638  thrpt   30  156431.745 ± 197.006  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_639._Benchmark.benchmark_Cluster_639$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_639._Benchmark.benchmark_Cluster_639

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68422.453 ops/s
# Warmup Iteration   2: 88745.588 ops/s
# Warmup Iteration   3: 139680.838 ops/s
# Warmup Iteration   4: 140645.828 ops/s
# Warmup Iteration   5: 140086.198 ops/s
# Warmup Iteration   6: 140828.095 ops/s
# Warmup Iteration   7: 140769.869 ops/s
# Warmup Iteration   8: 140915.003 ops/s
# Warmup Iteration   9: 124852.462 ops/s
# Warmup Iteration  10: 124518.057 ops/s
# Warmup Iteration  11: 140562.737 ops/s
# Warmup Iteration  12: 141047.025 ops/s
# Warmup Iteration  13: 140633.025 ops/s
# Warmup Iteration  14: 140769.659 ops/s
# Warmup Iteration  15: 140977.779 ops/s
# Warmup Iteration  16: 140919.661 ops/s
# Warmup Iteration  17: 143947.574 ops/s
# Warmup Iteration  18: 143736.059 ops/s
# Warmup Iteration  19: 144044.192 ops/s
# Warmup Iteration  20: 143789.089 ops/s
# Warmup Iteration  21: 143868.138 ops/s
# Warmup Iteration  22: 143806.158 ops/s
# Warmup Iteration  23: 143991.811 ops/s
# Warmup Iteration  24: 143732.719 ops/s
# Warmup Iteration  25: 143653.912 ops/s
# Warmup Iteration  26: 143769.060 ops/s
# Warmup Iteration  27: 144110.893 ops/s
# Warmup Iteration  28: 143570.617 ops/s
# Warmup Iteration  29: 143930.236 ops/s
# Warmup Iteration  30: 144257.790 ops/s
Iteration   1: 143901.767 ops/s
Iteration   2: 143637.568 ops/s
Iteration   3: 143583.313 ops/s
Iteration   4: 143873.854 ops/s
Iteration   5: 144129.996 ops/s
Iteration   6: 143659.952 ops/s
Iteration   7: 143651.779 ops/s
Iteration   8: 143862.792 ops/s
Iteration   9: 144337.770 ops/s
Iteration  10: 143972.758 ops/s
Iteration  11: 143658.858 ops/s
Iteration  12: 143653.350 ops/s
Iteration  13: 144158.376 ops/s
Iteration  14: 143949.479 ops/s
Iteration  15: 143748.579 ops/s
Iteration  16: 143727.254 ops/s
Iteration  17: 143614.746 ops/s
Iteration  18: 143650.663 ops/s
Iteration  19: 143747.562 ops/s
Iteration  20: 143905.992 ops/s
Iteration  21: 143744.660 ops/s
Iteration  22: 143836.820 ops/s
Iteration  23: 143723.175 ops/s
Iteration  24: 143735.862 ops/s
Iteration  25: 144251.535 ops/s
Iteration  26: 143819.104 ops/s
Iteration  27: 143772.047 ops/s
Iteration  28: 144117.086 ops/s
Iteration  29: 143723.161 ops/s
Iteration  30: 143756.849 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_639._Benchmark.benchmark_Cluster_639":
  143830.224 ±(99.9%) 132.101 ops/s [Average]
  (min, avg, max) = (143583.313, 143830.224, 144337.770), stdev = 197.722
  CI (99.9%): [143698.123, 143962.324] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_639._Benchmark.benchmark_Cluster_639  thrpt   30  143830.224 ± 132.101  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_64._Benchmark.benchmark_Cluster_64$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_64._Benchmark.benchmark_Cluster_64

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71828.199 ops/s
# Warmup Iteration   2: 116900.412 ops/s
# Warmup Iteration   3: 196488.214 ops/s
# Warmup Iteration   4: 193885.118 ops/s
# Warmup Iteration   5: 193700.213 ops/s
# Warmup Iteration   6: 193707.836 ops/s
# Warmup Iteration   7: 193709.940 ops/s
# Warmup Iteration   8: 150657.181 ops/s
# Warmup Iteration   9: 195990.160 ops/s
# Warmup Iteration  10: 194450.099 ops/s
# Warmup Iteration  11: 194293.363 ops/s
# Warmup Iteration  12: 194391.951 ops/s
# Warmup Iteration  13: 194075.470 ops/s
# Warmup Iteration  14: 193075.240 ops/s
# Warmup Iteration  15: 194884.005 ops/s
# Warmup Iteration  16: 195753.499 ops/s
# Warmup Iteration  17: 197273.953 ops/s
# Warmup Iteration  18: 199597.415 ops/s
# Warmup Iteration  19: 198732.514 ops/s
# Warmup Iteration  20: 196663.545 ops/s
# Warmup Iteration  21: 198610.520 ops/s
# Warmup Iteration  22: 197554.473 ops/s
# Warmup Iteration  23: 198505.306 ops/s
# Warmup Iteration  24: 199302.427 ops/s
# Warmup Iteration  25: 197392.604 ops/s
# Warmup Iteration  26: 198045.587 ops/s
# Warmup Iteration  27: 200182.615 ops/s
# Warmup Iteration  28: 198690.572 ops/s
# Warmup Iteration  29: 198078.119 ops/s
# Warmup Iteration  30: 198241.458 ops/s
Iteration   1: 199486.175 ops/s
Iteration   2: 197413.061 ops/s
Iteration   3: 197073.967 ops/s
Iteration   4: 197871.597 ops/s
Iteration   5: 197549.106 ops/s
Iteration   6: 198386.675 ops/s
Iteration   7: 198880.443 ops/s
Iteration   8: 200412.136 ops/s
Iteration   9: 199310.607 ops/s
Iteration  10: 198974.320 ops/s
Iteration  11: 200794.900 ops/s
Iteration  12: 199629.579 ops/s
Iteration  13: 198631.306 ops/s
Iteration  14: 200160.941 ops/s
Iteration  15: 199210.547 ops/s
Iteration  16: 197673.201 ops/s
Iteration  17: 196923.387 ops/s
Iteration  18: 198463.048 ops/s
Iteration  19: 197352.045 ops/s
Iteration  20: 197453.593 ops/s
Iteration  21: 197111.534 ops/s
Iteration  22: 198872.447 ops/s
Iteration  23: 199290.606 ops/s
Iteration  24: 199337.478 ops/s
Iteration  25: 200053.413 ops/s
Iteration  26: 199929.036 ops/s
Iteration  27: 200349.830 ops/s
Iteration  28: 200320.723 ops/s
Iteration  29: 200080.901 ops/s
Iteration  30: 199784.199 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_64._Benchmark.benchmark_Cluster_64":
  198892.693 ±(99.9%) 781.678 ops/s [Average]
  (min, avg, max) = (196923.387, 198892.693, 200794.900), stdev = 1169.978
  CI (99.9%): [198111.016, 199674.371] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_64._Benchmark.benchmark_Cluster_64  thrpt   30  198892.693 ± 781.678  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_640._Benchmark.benchmark_Cluster_640$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_640._Benchmark.benchmark_Cluster_640

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70022.390 ops/s
# Warmup Iteration   2: 124148.226 ops/s
# Warmup Iteration   3: 176564.632 ops/s
# Warmup Iteration   4: 175309.906 ops/s
# Warmup Iteration   5: 176631.541 ops/s
# Warmup Iteration   6: 176311.111 ops/s
# Warmup Iteration   7: 140125.178 ops/s
# Warmup Iteration   8: 176698.389 ops/s
# Warmup Iteration   9: 176813.883 ops/s
# Warmup Iteration  10: 176817.515 ops/s
# Warmup Iteration  11: 176956.818 ops/s
# Warmup Iteration  12: 176599.093 ops/s
# Warmup Iteration  13: 176944.528 ops/s
# Warmup Iteration  14: 176997.446 ops/s
# Warmup Iteration  15: 176701.735 ops/s
# Warmup Iteration  16: 176822.733 ops/s
# Warmup Iteration  17: 176310.836 ops/s
# Warmup Iteration  18: 176620.771 ops/s
# Warmup Iteration  19: 176615.815 ops/s
# Warmup Iteration  20: 176789.654 ops/s
# Warmup Iteration  21: 176689.195 ops/s
# Warmup Iteration  22: 176464.571 ops/s
# Warmup Iteration  23: 176686.058 ops/s
# Warmup Iteration  24: 176708.104 ops/s
# Warmup Iteration  25: 176657.763 ops/s
# Warmup Iteration  26: 176472.890 ops/s
# Warmup Iteration  27: 176745.349 ops/s
# Warmup Iteration  28: 176313.452 ops/s
# Warmup Iteration  29: 176652.826 ops/s
# Warmup Iteration  30: 176880.464 ops/s
Iteration   1: 176681.699 ops/s
Iteration   2: 176940.608 ops/s
Iteration   3: 176319.572 ops/s
Iteration   4: 176682.594 ops/s
Iteration   5: 176789.885 ops/s
Iteration   6: 176696.130 ops/s
Iteration   7: 176558.025 ops/s
Iteration   8: 176824.962 ops/s
Iteration   9: 176588.711 ops/s
Iteration  10: 176771.618 ops/s
Iteration  11: 176365.718 ops/s
Iteration  12: 177085.913 ops/s
Iteration  13: 176494.958 ops/s
Iteration  14: 176445.129 ops/s
Iteration  15: 176101.275 ops/s
Iteration  16: 176521.498 ops/s
Iteration  17: 176845.644 ops/s
Iteration  18: 176811.234 ops/s
Iteration  19: 176834.027 ops/s
Iteration  20: 176639.753 ops/s
Iteration  21: 176711.482 ops/s
Iteration  22: 176806.029 ops/s
Iteration  23: 176708.400 ops/s
Iteration  24: 176532.345 ops/s
Iteration  25: 176934.836 ops/s
Iteration  26: 176163.189 ops/s
Iteration  27: 176661.612 ops/s
Iteration  28: 176490.262 ops/s
Iteration  29: 176786.097 ops/s
Iteration  30: 176737.079 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_640._Benchmark.benchmark_Cluster_640":
  176651.010 ±(99.9%) 149.030 ops/s [Average]
  (min, avg, max) = (176101.275, 176651.010, 177085.913), stdev = 223.062
  CI (99.9%): [176501.979, 176800.040] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_640._Benchmark.benchmark_Cluster_640  thrpt   30  176651.010 ± 149.030  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_641._Benchmark.benchmark_Cluster_641$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_641._Benchmark.benchmark_Cluster_641

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56087.648 ops/s
# Warmup Iteration   2: 119440.665 ops/s
# Warmup Iteration   3: 165462.254 ops/s
# Warmup Iteration   4: 167059.329 ops/s
# Warmup Iteration   5: 166515.395 ops/s
# Warmup Iteration   6: 132446.209 ops/s
# Warmup Iteration   7: 167201.399 ops/s
# Warmup Iteration   8: 167137.668 ops/s
# Warmup Iteration   9: 166734.902 ops/s
# Warmup Iteration  10: 167007.723 ops/s
# Warmup Iteration  11: 167041.879 ops/s
# Warmup Iteration  12: 167171.091 ops/s
# Warmup Iteration  13: 167189.924 ops/s
# Warmup Iteration  14: 166922.111 ops/s
# Warmup Iteration  15: 167045.035 ops/s
# Warmup Iteration  16: 167223.573 ops/s
# Warmup Iteration  17: 166120.805 ops/s
# Warmup Iteration  18: 166405.508 ops/s
# Warmup Iteration  19: 166014.663 ops/s
# Warmup Iteration  20: 166205.785 ops/s
# Warmup Iteration  21: 166127.574 ops/s
# Warmup Iteration  22: 166329.118 ops/s
# Warmup Iteration  23: 166257.523 ops/s
# Warmup Iteration  24: 165905.357 ops/s
# Warmup Iteration  25: 166142.069 ops/s
# Warmup Iteration  26: 165994.485 ops/s
# Warmup Iteration  27: 166432.431 ops/s
# Warmup Iteration  28: 166221.893 ops/s
# Warmup Iteration  29: 166131.677 ops/s
# Warmup Iteration  30: 166476.007 ops/s
Iteration   1: 166536.286 ops/s
Iteration   2: 166624.487 ops/s
Iteration   3: 166404.429 ops/s
Iteration   4: 166052.039 ops/s
Iteration   5: 165967.181 ops/s
Iteration   6: 166333.799 ops/s
Iteration   7: 166279.620 ops/s
Iteration   8: 166788.637 ops/s
Iteration   9: 166305.552 ops/s
Iteration  10: 166258.004 ops/s
Iteration  11: 166656.859 ops/s
Iteration  12: 165754.562 ops/s
Iteration  13: 166354.142 ops/s
Iteration  14: 165969.870 ops/s
Iteration  15: 166338.170 ops/s
Iteration  16: 166558.458 ops/s
Iteration  17: 166474.863 ops/s
Iteration  18: 166475.231 ops/s
Iteration  19: 166643.055 ops/s
Iteration  20: 166484.024 ops/s
Iteration  21: 166657.690 ops/s
Iteration  22: 165991.225 ops/s
Iteration  23: 166543.342 ops/s
Iteration  24: 166159.075 ops/s
Iteration  25: 166391.740 ops/s
Iteration  26: 165918.143 ops/s
Iteration  27: 166267.252 ops/s
Iteration  28: 166480.872 ops/s
Iteration  29: 166101.987 ops/s
Iteration  30: 166115.770 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_641._Benchmark.benchmark_Cluster_641":
  166329.545 ±(99.9%) 172.874 ops/s [Average]
  (min, avg, max) = (165754.562, 166329.545, 166788.637), stdev = 258.750
  CI (99.9%): [166156.671, 166502.420] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_641._Benchmark.benchmark_Cluster_641  thrpt   30  166329.545 ± 172.874  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_642._Benchmark.benchmark_Cluster_642$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_642._Benchmark.benchmark_Cluster_642

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 127310.478 ops/s
# Warmup Iteration   2: 148452.188 ops/s
# Warmup Iteration   3: 180327.190 ops/s
# Warmup Iteration   4: 207406.006 ops/s
# Warmup Iteration   5: 207239.117 ops/s
# Warmup Iteration   6: 205745.021 ops/s
# Warmup Iteration   7: 207678.899 ops/s
# Warmup Iteration   8: 207045.342 ops/s
# Warmup Iteration   9: 207164.125 ops/s
# Warmup Iteration  10: 207267.391 ops/s
# Warmup Iteration  11: 207273.166 ops/s
# Warmup Iteration  12: 207285.001 ops/s
# Warmup Iteration  13: 183824.239 ops/s
# Warmup Iteration  14: 187153.585 ops/s
# Warmup Iteration  15: 207581.011 ops/s
# Warmup Iteration  16: 207433.303 ops/s
# Warmup Iteration  17: 216839.428 ops/s
# Warmup Iteration  18: 217071.393 ops/s
# Warmup Iteration  19: 217544.419 ops/s
# Warmup Iteration  20: 217289.508 ops/s
# Warmup Iteration  21: 217533.809 ops/s
# Warmup Iteration  22: 217172.676 ops/s
# Warmup Iteration  23: 217668.506 ops/s
# Warmup Iteration  24: 217406.606 ops/s
# Warmup Iteration  25: 217152.783 ops/s
# Warmup Iteration  26: 217526.355 ops/s
# Warmup Iteration  27: 217514.944 ops/s
# Warmup Iteration  28: 217489.515 ops/s
# Warmup Iteration  29: 216901.515 ops/s
# Warmup Iteration  30: 217068.142 ops/s
Iteration   1: 216581.352 ops/s
Iteration   2: 217181.761 ops/s
Iteration   3: 217100.030 ops/s
Iteration   4: 217520.258 ops/s
Iteration   5: 217269.057 ops/s
Iteration   6: 217064.243 ops/s
Iteration   7: 217621.995 ops/s
Iteration   8: 217691.398 ops/s
Iteration   9: 217223.042 ops/s
Iteration  10: 216901.947 ops/s
Iteration  11: 216210.478 ops/s
Iteration  12: 216935.806 ops/s
Iteration  13: 217510.037 ops/s
Iteration  14: 217838.123 ops/s
Iteration  15: 216923.504 ops/s
Iteration  16: 216034.604 ops/s
Iteration  17: 217135.933 ops/s
Iteration  18: 217369.422 ops/s
Iteration  19: 217060.483 ops/s
Iteration  20: 217257.684 ops/s
Iteration  21: 216601.386 ops/s
Iteration  22: 216966.734 ops/s
Iteration  23: 216689.076 ops/s
Iteration  24: 216710.475 ops/s
Iteration  25: 216583.132 ops/s
Iteration  26: 217530.437 ops/s
Iteration  27: 217390.951 ops/s
Iteration  28: 216173.442 ops/s
Iteration  29: 216489.990 ops/s
Iteration  30: 217524.886 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_642._Benchmark.benchmark_Cluster_642":
  217036.389 ±(99.9%) 313.133 ops/s [Average]
  (min, avg, max) = (216034.604, 217036.389, 217838.123), stdev = 468.683
  CI (99.9%): [216723.256, 217349.522] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_642._Benchmark.benchmark_Cluster_642  thrpt   30  217036.389 ± 313.133  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_643._Benchmark.benchmark_Cluster_643$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_643._Benchmark.benchmark_Cluster_643

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42108.676 ops/s
# Warmup Iteration   2: 67551.356 ops/s
# Warmup Iteration   3: 113784.771 ops/s
# Warmup Iteration   4: 114898.233 ops/s
# Warmup Iteration   5: 115053.896 ops/s
# Warmup Iteration   6: 115511.865 ops/s
# Warmup Iteration   7: 89638.429 ops/s
# Warmup Iteration   8: 114433.068 ops/s
# Warmup Iteration   9: 115331.368 ops/s
# Warmup Iteration  10: 115684.251 ops/s
# Warmup Iteration  11: 115259.318 ops/s
# Warmup Iteration  12: 115151.273 ops/s
# Warmup Iteration  13: 115506.574 ops/s
# Warmup Iteration  14: 114236.283 ops/s
# Warmup Iteration  15: 114678.508 ops/s
# Warmup Iteration  16: 115656.118 ops/s
# Warmup Iteration  17: 117447.035 ops/s
# Warmup Iteration  18: 117169.975 ops/s
# Warmup Iteration  19: 117533.354 ops/s
# Warmup Iteration  20: 117484.627 ops/s
# Warmup Iteration  21: 117820.567 ops/s
# Warmup Iteration  22: 117405.433 ops/s
# Warmup Iteration  23: 117359.664 ops/s
# Warmup Iteration  24: 117751.007 ops/s
# Warmup Iteration  25: 117242.338 ops/s
# Warmup Iteration  26: 117937.193 ops/s
# Warmup Iteration  27: 116006.803 ops/s
# Warmup Iteration  28: 117597.358 ops/s
# Warmup Iteration  29: 117477.710 ops/s
# Warmup Iteration  30: 116093.489 ops/s
Iteration   1: 116605.951 ops/s
Iteration   2: 118134.297 ops/s
Iteration   3: 117915.034 ops/s
Iteration   4: 117960.052 ops/s
Iteration   5: 116772.315 ops/s
Iteration   6: 116311.312 ops/s
Iteration   7: 117588.207 ops/s
Iteration   8: 117317.705 ops/s
Iteration   9: 116844.700 ops/s
Iteration  10: 117623.802 ops/s
Iteration  11: 117904.286 ops/s
Iteration  12: 117518.457 ops/s
Iteration  13: 116466.594 ops/s
Iteration  14: 117813.775 ops/s
Iteration  15: 118250.675 ops/s
Iteration  16: 118092.413 ops/s
Iteration  17: 116721.838 ops/s
Iteration  18: 117469.968 ops/s
Iteration  19: 116079.360 ops/s
Iteration  20: 117582.572 ops/s
Iteration  21: 117803.569 ops/s
Iteration  22: 117359.283 ops/s
Iteration  23: 116374.673 ops/s
Iteration  24: 116263.398 ops/s
Iteration  25: 116590.757 ops/s
Iteration  26: 117679.046 ops/s
Iteration  27: 116892.597 ops/s
Iteration  28: 117134.998 ops/s
Iteration  29: 116899.909 ops/s
Iteration  30: 117780.209 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_643._Benchmark.benchmark_Cluster_643":
  117258.392 ±(99.9%) 427.004 ops/s [Average]
  (min, avg, max) = (116079.360, 117258.392, 118250.675), stdev = 639.120
  CI (99.9%): [116831.387, 117685.396] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_643._Benchmark.benchmark_Cluster_643  thrpt   30  117258.392 ± 427.004  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_644._Benchmark.benchmark_Cluster_644$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_644._Benchmark.benchmark_Cluster_644

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74795.476 ops/s
# Warmup Iteration   2: 83124.878 ops/s
# Warmup Iteration   3: 121625.598 ops/s
# Warmup Iteration   4: 125862.697 ops/s
# Warmup Iteration   5: 125200.937 ops/s
# Warmup Iteration   6: 125951.634 ops/s
# Warmup Iteration   7: 125236.199 ops/s
# Warmup Iteration   8: 125779.392 ops/s
# Warmup Iteration   9: 125978.600 ops/s
# Warmup Iteration  10: 125939.032 ops/s
# Warmup Iteration  11: 97753.272 ops/s
# Warmup Iteration  12: 125917.459 ops/s
# Warmup Iteration  13: 125935.614 ops/s
# Warmup Iteration  14: 125840.345 ops/s
# Warmup Iteration  15: 125883.773 ops/s
# Warmup Iteration  16: 125950.346 ops/s
# Warmup Iteration  17: 131130.180 ops/s
# Warmup Iteration  18: 131167.005 ops/s
# Warmup Iteration  19: 131151.197 ops/s
# Warmup Iteration  20: 131014.723 ops/s
# Warmup Iteration  21: 131165.265 ops/s
# Warmup Iteration  22: 131087.622 ops/s
# Warmup Iteration  23: 131303.430 ops/s
# Warmup Iteration  24: 131174.545 ops/s
# Warmup Iteration  25: 131272.665 ops/s
# Warmup Iteration  26: 131208.818 ops/s
# Warmup Iteration  27: 131213.934 ops/s
# Warmup Iteration  28: 131023.110 ops/s
# Warmup Iteration  29: 131219.886 ops/s
# Warmup Iteration  30: 131334.270 ops/s
Iteration   1: 131377.966 ops/s
Iteration   2: 130994.776 ops/s
Iteration   3: 131317.033 ops/s
Iteration   4: 131424.693 ops/s
Iteration   5: 131474.026 ops/s
Iteration   6: 131338.981 ops/s
Iteration   7: 131203.912 ops/s
Iteration   8: 131607.798 ops/s
Iteration   9: 131279.999 ops/s
Iteration  10: 131271.161 ops/s
Iteration  11: 131039.617 ops/s
Iteration  12: 131443.674 ops/s
Iteration  13: 130923.596 ops/s
Iteration  14: 131152.629 ops/s
Iteration  15: 131376.570 ops/s
Iteration  16: 131219.141 ops/s
Iteration  17: 130830.984 ops/s
Iteration  18: 130969.699 ops/s
Iteration  19: 130972.113 ops/s
Iteration  20: 131274.245 ops/s
Iteration  21: 130931.549 ops/s
Iteration  22: 131448.119 ops/s
Iteration  23: 130982.892 ops/s
Iteration  24: 130921.744 ops/s
Iteration  25: 131609.036 ops/s
Iteration  26: 131268.908 ops/s
Iteration  27: 131048.468 ops/s
Iteration  28: 131015.833 ops/s
Iteration  29: 131349.749 ops/s
Iteration  30: 131514.170 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_644._Benchmark.benchmark_Cluster_644":
  131219.436 ±(99.9%) 149.344 ops/s [Average]
  (min, avg, max) = (130830.984, 131219.436, 131609.036), stdev = 223.532
  CI (99.9%): [131070.092, 131368.780] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_644._Benchmark.benchmark_Cluster_644  thrpt   30  131219.436 ± 149.344  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_645._Benchmark.benchmark_Cluster_645$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_645._Benchmark.benchmark_Cluster_645

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62050.071 ops/s
# Warmup Iteration   2: 87192.932 ops/s
# Warmup Iteration   3: 146316.899 ops/s
# Warmup Iteration   4: 148473.209 ops/s
# Warmup Iteration   5: 147012.049 ops/s
# Warmup Iteration   6: 149437.294 ops/s
# Warmup Iteration   7: 149680.793 ops/s
# Warmup Iteration   8: 149330.605 ops/s
# Warmup Iteration   9: 113634.388 ops/s
# Warmup Iteration  10: 149658.094 ops/s
# Warmup Iteration  11: 149384.359 ops/s
# Warmup Iteration  12: 149484.765 ops/s
# Warmup Iteration  13: 149494.701 ops/s
# Warmup Iteration  14: 149369.528 ops/s
# Warmup Iteration  15: 149420.570 ops/s
# Warmup Iteration  16: 148388.580 ops/s
# Warmup Iteration  17: 149429.125 ops/s
# Warmup Iteration  18: 151181.908 ops/s
# Warmup Iteration  19: 150579.896 ops/s
# Warmup Iteration  20: 151186.332 ops/s
# Warmup Iteration  21: 149995.263 ops/s
# Warmup Iteration  22: 150962.443 ops/s
# Warmup Iteration  23: 151249.614 ops/s
# Warmup Iteration  24: 150660.127 ops/s
# Warmup Iteration  25: 150890.443 ops/s
# Warmup Iteration  26: 150696.563 ops/s
# Warmup Iteration  27: 151068.362 ops/s
# Warmup Iteration  28: 151029.630 ops/s
# Warmup Iteration  29: 151088.743 ops/s
# Warmup Iteration  30: 151030.022 ops/s
Iteration   1: 150950.204 ops/s
Iteration   2: 150864.902 ops/s
Iteration   3: 150745.515 ops/s
Iteration   4: 150641.745 ops/s
Iteration   5: 150690.346 ops/s
Iteration   6: 150683.816 ops/s
Iteration   7: 150774.416 ops/s
Iteration   8: 151262.185 ops/s
Iteration   9: 150828.061 ops/s
Iteration  10: 151433.915 ops/s
Iteration  11: 151334.273 ops/s
Iteration  12: 150716.723 ops/s
Iteration  13: 151151.760 ops/s
Iteration  14: 151305.222 ops/s
Iteration  15: 151153.130 ops/s
Iteration  16: 151313.364 ops/s
Iteration  17: 150817.781 ops/s
Iteration  18: 151397.765 ops/s
Iteration  19: 151395.768 ops/s
Iteration  20: 150334.939 ops/s
Iteration  21: 150590.543 ops/s
Iteration  22: 151085.009 ops/s
Iteration  23: 151168.955 ops/s
Iteration  24: 151325.128 ops/s
Iteration  25: 151481.780 ops/s
Iteration  26: 150991.715 ops/s
Iteration  27: 150956.381 ops/s
Iteration  28: 150940.035 ops/s
Iteration  29: 150362.032 ops/s
Iteration  30: 151450.035 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_645._Benchmark.benchmark_Cluster_645":
  151004.915 ±(99.9%) 219.248 ops/s [Average]
  (min, avg, max) = (150334.939, 151004.915, 151481.780), stdev = 328.160
  CI (99.9%): [150785.667, 151224.163] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_645._Benchmark.benchmark_Cluster_645  thrpt   30  151004.915 ± 219.248  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_646._Benchmark.benchmark_Cluster_646$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_646._Benchmark.benchmark_Cluster_646

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86894.395 ops/s
# Warmup Iteration   2: 154627.713 ops/s
# Warmup Iteration   3: 207658.864 ops/s
# Warmup Iteration   4: 208809.339 ops/s
# Warmup Iteration   5: 208319.879 ops/s
# Warmup Iteration   6: 167393.373 ops/s
# Warmup Iteration   7: 204781.937 ops/s
# Warmup Iteration   8: 208850.287 ops/s
# Warmup Iteration   9: 208431.445 ops/s
# Warmup Iteration  10: 208591.353 ops/s
# Warmup Iteration  11: 208910.502 ops/s
# Warmup Iteration  12: 208518.113 ops/s
# Warmup Iteration  13: 208639.436 ops/s
# Warmup Iteration  14: 208964.443 ops/s
# Warmup Iteration  15: 209107.657 ops/s
# Warmup Iteration  16: 208800.232 ops/s
# Warmup Iteration  17: 213225.835 ops/s
# Warmup Iteration  18: 213104.165 ops/s
# Warmup Iteration  19: 213025.153 ops/s
# Warmup Iteration  20: 213066.233 ops/s
# Warmup Iteration  21: 213018.600 ops/s
# Warmup Iteration  22: 213388.349 ops/s
# Warmup Iteration  23: 212984.011 ops/s
# Warmup Iteration  24: 212796.381 ops/s
# Warmup Iteration  25: 213460.677 ops/s
# Warmup Iteration  26: 213253.515 ops/s
# Warmup Iteration  27: 213328.631 ops/s
# Warmup Iteration  28: 213454.237 ops/s
# Warmup Iteration  29: 213065.601 ops/s
# Warmup Iteration  30: 213184.167 ops/s
Iteration   1: 212702.550 ops/s
Iteration   2: 213622.050 ops/s
Iteration   3: 213486.222 ops/s
Iteration   4: 213008.187 ops/s
Iteration   5: 213032.706 ops/s
Iteration   6: 213413.412 ops/s
Iteration   7: 213116.949 ops/s
Iteration   8: 213788.674 ops/s
Iteration   9: 213013.781 ops/s
Iteration  10: 212622.518 ops/s
Iteration  11: 212932.337 ops/s
Iteration  12: 212805.411 ops/s
Iteration  13: 213170.882 ops/s
Iteration  14: 212774.402 ops/s
Iteration  15: 213803.815 ops/s
Iteration  16: 212722.191 ops/s
Iteration  17: 213797.086 ops/s
Iteration  18: 212711.013 ops/s
Iteration  19: 213111.070 ops/s
Iteration  20: 213172.667 ops/s
Iteration  21: 212933.409 ops/s
Iteration  22: 213558.761 ops/s
Iteration  23: 212599.957 ops/s
Iteration  24: 213790.236 ops/s
Iteration  25: 213122.262 ops/s
Iteration  26: 212758.709 ops/s
Iteration  27: 212482.607 ops/s
Iteration  28: 212659.937 ops/s
Iteration  29: 213682.454 ops/s
Iteration  30: 213385.210 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_646._Benchmark.benchmark_Cluster_646":
  213126.049 ±(99.9%) 276.425 ops/s [Average]
  (min, avg, max) = (212482.607, 213126.049, 213803.815), stdev = 413.740
  CI (99.9%): [212849.624, 213402.474] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_646._Benchmark.benchmark_Cluster_646  thrpt   30  213126.049 ± 276.425  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_647._Benchmark.benchmark_Cluster_647$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_647._Benchmark.benchmark_Cluster_647

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64436.946 ops/s
# Warmup Iteration   2: 154792.999 ops/s
# Warmup Iteration   3: 186075.845 ops/s
# Warmup Iteration   4: 187162.444 ops/s
# Warmup Iteration   5: 148706.153 ops/s
# Warmup Iteration   6: 187601.061 ops/s
# Warmup Iteration   7: 187658.850 ops/s
# Warmup Iteration   8: 187165.024 ops/s
# Warmup Iteration   9: 187554.768 ops/s
# Warmup Iteration  10: 187470.534 ops/s
# Warmup Iteration  11: 187027.466 ops/s
# Warmup Iteration  12: 187301.189 ops/s
# Warmup Iteration  13: 187086.941 ops/s
# Warmup Iteration  14: 186920.225 ops/s
# Warmup Iteration  15: 186943.988 ops/s
# Warmup Iteration  16: 187224.752 ops/s
# Warmup Iteration  17: 187214.005 ops/s
# Warmup Iteration  18: 187226.791 ops/s
# Warmup Iteration  19: 186893.355 ops/s
# Warmup Iteration  20: 186792.122 ops/s
# Warmup Iteration  21: 187605.836 ops/s
# Warmup Iteration  22: 187388.688 ops/s
# Warmup Iteration  23: 187432.942 ops/s
# Warmup Iteration  24: 187403.185 ops/s
# Warmup Iteration  25: 187128.665 ops/s
# Warmup Iteration  26: 187356.757 ops/s
# Warmup Iteration  27: 187254.911 ops/s
# Warmup Iteration  28: 187405.093 ops/s
# Warmup Iteration  29: 187271.981 ops/s
# Warmup Iteration  30: 187407.573 ops/s
Iteration   1: 187220.460 ops/s
Iteration   2: 186792.202 ops/s
Iteration   3: 186890.736 ops/s
Iteration   4: 187347.707 ops/s
Iteration   5: 187599.773 ops/s
Iteration   6: 187018.953 ops/s
Iteration   7: 187168.679 ops/s
Iteration   8: 187443.478 ops/s
Iteration   9: 187391.199 ops/s
Iteration  10: 187074.303 ops/s
Iteration  11: 187141.401 ops/s
Iteration  12: 187097.492 ops/s
Iteration  13: 187638.297 ops/s
Iteration  14: 187711.176 ops/s
Iteration  15: 186777.713 ops/s
Iteration  16: 187423.293 ops/s
Iteration  17: 187262.825 ops/s
Iteration  18: 187266.775 ops/s
Iteration  19: 187385.873 ops/s
Iteration  20: 187277.806 ops/s
Iteration  21: 187445.668 ops/s
Iteration  22: 187268.820 ops/s
Iteration  23: 187305.161 ops/s
Iteration  24: 187132.232 ops/s
Iteration  25: 187345.881 ops/s
Iteration  26: 187363.994 ops/s
Iteration  27: 187529.677 ops/s
Iteration  28: 187721.460 ops/s
Iteration  29: 187298.093 ops/s
Iteration  30: 187322.813 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_647._Benchmark.benchmark_Cluster_647":
  187288.798 ±(99.9%) 158.474 ops/s [Average]
  (min, avg, max) = (186777.713, 187288.798, 187721.460), stdev = 237.197
  CI (99.9%): [187130.324, 187447.272] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_647._Benchmark.benchmark_Cluster_647  thrpt   30  187288.798 ± 158.474  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_648._Benchmark.benchmark_Cluster_648$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_648._Benchmark.benchmark_Cluster_648

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61589.672 ops/s
# Warmup Iteration   2: 103995.078 ops/s
# Warmup Iteration   3: 140916.523 ops/s
# Warmup Iteration   4: 141827.936 ops/s
# Warmup Iteration   5: 141624.403 ops/s
# Warmup Iteration   6: 132798.573 ops/s
# Warmup Iteration   7: 121156.845 ops/s
# Warmup Iteration   8: 141846.273 ops/s
# Warmup Iteration   9: 141923.614 ops/s
# Warmup Iteration  10: 141935.825 ops/s
# Warmup Iteration  11: 142004.033 ops/s
# Warmup Iteration  12: 141981.521 ops/s
# Warmup Iteration  13: 141870.853 ops/s
# Warmup Iteration  14: 142136.021 ops/s
# Warmup Iteration  15: 141637.346 ops/s
# Warmup Iteration  16: 141779.113 ops/s
# Warmup Iteration  17: 145249.507 ops/s
# Warmup Iteration  18: 145474.579 ops/s
# Warmup Iteration  19: 145347.704 ops/s
# Warmup Iteration  20: 145438.724 ops/s
# Warmup Iteration  21: 145934.197 ops/s
# Warmup Iteration  22: 145623.440 ops/s
# Warmup Iteration  23: 145406.471 ops/s
# Warmup Iteration  24: 145803.646 ops/s
# Warmup Iteration  25: 145832.508 ops/s
# Warmup Iteration  26: 145713.633 ops/s
# Warmup Iteration  27: 146003.655 ops/s
# Warmup Iteration  28: 145720.966 ops/s
# Warmup Iteration  29: 145501.326 ops/s
# Warmup Iteration  30: 145612.661 ops/s
Iteration   1: 145628.307 ops/s
Iteration   2: 145865.404 ops/s
Iteration   3: 145547.102 ops/s
Iteration   4: 146024.550 ops/s
Iteration   5: 145716.412 ops/s
Iteration   6: 145650.236 ops/s
Iteration   7: 145610.021 ops/s
Iteration   8: 145558.377 ops/s
Iteration   9: 145549.508 ops/s
Iteration  10: 145142.627 ops/s
Iteration  11: 145337.514 ops/s
Iteration  12: 145536.660 ops/s
Iteration  13: 146078.618 ops/s
Iteration  14: 144904.157 ops/s
Iteration  15: 145460.059 ops/s
Iteration  16: 145410.157 ops/s
Iteration  17: 145894.051 ops/s
Iteration  18: 145380.714 ops/s
Iteration  19: 145797.888 ops/s
Iteration  20: 145531.835 ops/s
Iteration  21: 145563.428 ops/s
Iteration  22: 145532.166 ops/s
Iteration  23: 145389.442 ops/s
Iteration  24: 145832.383 ops/s
Iteration  25: 145016.334 ops/s
Iteration  26: 145754.756 ops/s
Iteration  27: 145519.620 ops/s
Iteration  28: 145864.734 ops/s
Iteration  29: 145598.719 ops/s
Iteration  30: 145353.514 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_648._Benchmark.benchmark_Cluster_648":
  145568.310 ±(99.9%) 178.937 ops/s [Average]
  (min, avg, max) = (144904.157, 145568.310, 146078.618), stdev = 267.824
  CI (99.9%): [145389.373, 145747.246] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_648._Benchmark.benchmark_Cluster_648  thrpt   30  145568.310 ± 178.937  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_649._Benchmark.benchmark_Cluster_649$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_649._Benchmark.benchmark_Cluster_649

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86909.423 ops/s
# Warmup Iteration   2: 107098.463 ops/s
# Warmup Iteration   3: 182268.309 ops/s
# Warmup Iteration   4: 183979.078 ops/s
# Warmup Iteration   5: 182679.447 ops/s
# Warmup Iteration   6: 183889.063 ops/s
# Warmup Iteration   7: 184286.272 ops/s
# Warmup Iteration   8: 183791.677 ops/s
# Warmup Iteration   9: 138287.199 ops/s
# Warmup Iteration  10: 183806.093 ops/s
# Warmup Iteration  11: 183623.826 ops/s
# Warmup Iteration  12: 184456.471 ops/s
# Warmup Iteration  13: 184604.553 ops/s
# Warmup Iteration  14: 183803.373 ops/s
# Warmup Iteration  15: 184875.771 ops/s
# Warmup Iteration  16: 184478.635 ops/s
# Warmup Iteration  17: 189212.113 ops/s
# Warmup Iteration  18: 188300.030 ops/s
# Warmup Iteration  19: 188397.525 ops/s
# Warmup Iteration  20: 189609.201 ops/s
# Warmup Iteration  21: 188561.496 ops/s
# Warmup Iteration  22: 189518.649 ops/s
# Warmup Iteration  23: 188968.611 ops/s
# Warmup Iteration  24: 189217.084 ops/s
# Warmup Iteration  25: 189091.902 ops/s
# Warmup Iteration  26: 189201.673 ops/s
# Warmup Iteration  27: 189382.990 ops/s
# Warmup Iteration  28: 188215.446 ops/s
# Warmup Iteration  29: 189032.216 ops/s
# Warmup Iteration  30: 188392.621 ops/s
Iteration   1: 188077.480 ops/s
Iteration   2: 188420.975 ops/s
Iteration   3: 188106.869 ops/s
Iteration   4: 189030.729 ops/s
Iteration   5: 187673.560 ops/s
Iteration   6: 187918.825 ops/s
Iteration   7: 188025.495 ops/s
Iteration   8: 188756.753 ops/s
Iteration   9: 188790.236 ops/s
Iteration  10: 188680.068 ops/s
Iteration  11: 188617.537 ops/s
Iteration  12: 188328.488 ops/s
Iteration  13: 188415.874 ops/s
Iteration  14: 189199.338 ops/s
Iteration  15: 188302.980 ops/s
Iteration  16: 188651.650 ops/s
Iteration  17: 188479.366 ops/s
Iteration  18: 188979.214 ops/s
Iteration  19: 188400.764 ops/s
Iteration  20: 189635.742 ops/s
Iteration  21: 188718.067 ops/s
Iteration  22: 188209.226 ops/s
Iteration  23: 188358.045 ops/s
Iteration  24: 188703.387 ops/s
Iteration  25: 188159.167 ops/s
Iteration  26: 188366.108 ops/s
Iteration  27: 188802.693 ops/s
Iteration  28: 189755.200 ops/s
Iteration  29: 188200.664 ops/s
Iteration  30: 189406.140 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_649._Benchmark.benchmark_Cluster_649":
  188572.355 ±(99.9%) 326.578 ops/s [Average]
  (min, avg, max) = (187673.560, 188572.355, 189755.200), stdev = 488.807
  CI (99.9%): [188245.777, 188898.933] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_649._Benchmark.benchmark_Cluster_649  thrpt   30  188572.355 ± 326.578  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_65._Benchmark.benchmark_Cluster_65$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_65._Benchmark.benchmark_Cluster_65

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 103859.959 ops/s
# Warmup Iteration   2: 114721.180 ops/s
# Warmup Iteration   3: 118347.600 ops/s
# Warmup Iteration   4: 147695.609 ops/s
# Warmup Iteration   5: 147562.063 ops/s
# Warmup Iteration   6: 147751.236 ops/s
# Warmup Iteration   7: 148011.722 ops/s
# Warmup Iteration   8: 146322.490 ops/s
# Warmup Iteration   9: 148128.727 ops/s
# Warmup Iteration  10: 147536.300 ops/s
# Warmup Iteration  11: 147700.173 ops/s
# Warmup Iteration  12: 147537.136 ops/s
# Warmup Iteration  13: 148068.767 ops/s
# Warmup Iteration  14: 147497.153 ops/s
# Warmup Iteration  15: 147903.354 ops/s
# Warmup Iteration  16: 148243.792 ops/s
# Warmup Iteration  17: 126587.272 ops/s
# Warmup Iteration  18: 157550.236 ops/s
# Warmup Iteration  19: 156877.157 ops/s
# Warmup Iteration  20: 156971.780 ops/s
# Warmup Iteration  21: 157040.112 ops/s
# Warmup Iteration  22: 157158.446 ops/s
# Warmup Iteration  23: 157190.912 ops/s
# Warmup Iteration  24: 157358.391 ops/s
# Warmup Iteration  25: 157340.819 ops/s
# Warmup Iteration  26: 156999.682 ops/s
# Warmup Iteration  27: 156716.019 ops/s
# Warmup Iteration  28: 157070.970 ops/s
# Warmup Iteration  29: 157043.024 ops/s
# Warmup Iteration  30: 157213.204 ops/s
Iteration   1: 157413.317 ops/s
Iteration   2: 156519.158 ops/s
Iteration   3: 156840.780 ops/s
Iteration   4: 157166.018 ops/s
Iteration   5: 157236.534 ops/s
Iteration   6: 156999.273 ops/s
Iteration   7: 156923.706 ops/s
Iteration   8: 157229.553 ops/s
Iteration   9: 157143.426 ops/s
Iteration  10: 157181.917 ops/s
Iteration  11: 157159.285 ops/s
Iteration  12: 157611.519 ops/s
Iteration  13: 157483.771 ops/s
Iteration  14: 157282.448 ops/s
Iteration  15: 157166.842 ops/s
Iteration  16: 157625.249 ops/s
Iteration  17: 157041.859 ops/s
Iteration  18: 157080.010 ops/s
Iteration  19: 157000.083 ops/s
Iteration  20: 157084.992 ops/s
Iteration  21: 157344.193 ops/s
Iteration  22: 157065.666 ops/s
Iteration  23: 157294.084 ops/s
Iteration  24: 157157.130 ops/s
Iteration  25: 156840.877 ops/s
Iteration  26: 156892.199 ops/s
Iteration  27: 157172.568 ops/s
Iteration  28: 157327.892 ops/s
Iteration  29: 157419.396 ops/s
Iteration  30: 157266.431 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_65._Benchmark.benchmark_Cluster_65":
  157165.673 ±(99.9%) 157.031 ops/s [Average]
  (min, avg, max) = (156519.158, 157165.673, 157625.249), stdev = 235.036
  CI (99.9%): [157008.642, 157322.703] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_65._Benchmark.benchmark_Cluster_65  thrpt   30  157165.673 ± 157.031  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_650._Benchmark.benchmark_Cluster_650$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_650._Benchmark.benchmark_Cluster_650

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42365.471 ops/s
# Warmup Iteration   2: 99829.095 ops/s
# Warmup Iteration   3: 141738.655 ops/s
# Warmup Iteration   4: 142573.556 ops/s
# Warmup Iteration   5: 143087.737 ops/s
# Warmup Iteration   6: 112039.122 ops/s
# Warmup Iteration   7: 142770.760 ops/s
# Warmup Iteration   8: 143110.612 ops/s
# Warmup Iteration   9: 143112.383 ops/s
# Warmup Iteration  10: 142990.479 ops/s
# Warmup Iteration  11: 143016.368 ops/s
# Warmup Iteration  12: 142751.318 ops/s
# Warmup Iteration  13: 143073.175 ops/s
# Warmup Iteration  14: 142712.999 ops/s
# Warmup Iteration  15: 142978.017 ops/s
# Warmup Iteration  16: 143045.545 ops/s
# Warmup Iteration  17: 143073.692 ops/s
# Warmup Iteration  18: 142755.123 ops/s
# Warmup Iteration  19: 142911.684 ops/s
# Warmup Iteration  20: 143207.899 ops/s
# Warmup Iteration  21: 142807.369 ops/s
# Warmup Iteration  22: 143242.406 ops/s
# Warmup Iteration  23: 143163.663 ops/s
# Warmup Iteration  24: 143346.538 ops/s
# Warmup Iteration  25: 143109.193 ops/s
# Warmup Iteration  26: 142933.052 ops/s
# Warmup Iteration  27: 143219.662 ops/s
# Warmup Iteration  28: 143155.689 ops/s
# Warmup Iteration  29: 143087.171 ops/s
# Warmup Iteration  30: 143224.665 ops/s
Iteration   1: 142827.619 ops/s
Iteration   2: 142665.065 ops/s
Iteration   3: 142754.834 ops/s
Iteration   4: 142731.952 ops/s
Iteration   5: 142941.364 ops/s
Iteration   6: 142959.719 ops/s
Iteration   7: 143057.205 ops/s
Iteration   8: 142984.342 ops/s
Iteration   9: 143284.910 ops/s
Iteration  10: 142866.194 ops/s
Iteration  11: 142821.670 ops/s
Iteration  12: 142885.196 ops/s
Iteration  13: 142801.388 ops/s
Iteration  14: 143239.535 ops/s
Iteration  15: 143051.131 ops/s
Iteration  16: 143369.623 ops/s
Iteration  17: 142592.814 ops/s
Iteration  18: 143128.781 ops/s
Iteration  19: 143270.947 ops/s
Iteration  20: 142920.996 ops/s
Iteration  21: 143152.132 ops/s
Iteration  22: 143297.520 ops/s
Iteration  23: 143030.409 ops/s
Iteration  24: 142866.699 ops/s
Iteration  25: 143122.427 ops/s
Iteration  26: 142842.955 ops/s
Iteration  27: 142686.274 ops/s
Iteration  28: 142856.420 ops/s
Iteration  29: 142906.995 ops/s
Iteration  30: 143202.669 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_650._Benchmark.benchmark_Cluster_650":
  142970.659 ±(99.9%) 138.016 ops/s [Average]
  (min, avg, max) = (142592.814, 142970.659, 143369.623), stdev = 206.576
  CI (99.9%): [142832.643, 143108.675] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_650._Benchmark.benchmark_Cluster_650  thrpt   30  142970.659 ± 138.016  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_651._Benchmark.benchmark_Cluster_651$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_651._Benchmark.benchmark_Cluster_651

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65410.470 ops/s
# Warmup Iteration   2: 113013.686 ops/s
# Warmup Iteration   3: 144976.663 ops/s
# Warmup Iteration   4: 146258.682 ops/s
# Warmup Iteration   5: 146029.090 ops/s
# Warmup Iteration   6: 125759.263 ops/s
# Warmup Iteration   7: 136593.419 ops/s
# Warmup Iteration   8: 146299.223 ops/s
# Warmup Iteration   9: 146305.728 ops/s
# Warmup Iteration  10: 146212.632 ops/s
# Warmup Iteration  11: 145976.483 ops/s
# Warmup Iteration  12: 145897.196 ops/s
# Warmup Iteration  13: 145974.408 ops/s
# Warmup Iteration  14: 146201.552 ops/s
# Warmup Iteration  15: 146618.504 ops/s
# Warmup Iteration  16: 146232.522 ops/s
# Warmup Iteration  17: 145947.060 ops/s
# Warmup Iteration  18: 146375.809 ops/s
# Warmup Iteration  19: 145932.646 ops/s
# Warmup Iteration  20: 145959.780 ops/s
# Warmup Iteration  21: 145923.598 ops/s
# Warmup Iteration  22: 145417.840 ops/s
# Warmup Iteration  23: 146076.728 ops/s
# Warmup Iteration  24: 145756.658 ops/s
# Warmup Iteration  25: 146274.554 ops/s
# Warmup Iteration  26: 146188.334 ops/s
# Warmup Iteration  27: 146204.704 ops/s
# Warmup Iteration  28: 145750.366 ops/s
# Warmup Iteration  29: 145634.099 ops/s
# Warmup Iteration  30: 145768.401 ops/s
Iteration   1: 146211.930 ops/s
Iteration   2: 146066.107 ops/s
Iteration   3: 145586.725 ops/s
Iteration   4: 144861.510 ops/s
Iteration   5: 145709.083 ops/s
Iteration   6: 145842.080 ops/s
Iteration   7: 145889.226 ops/s
Iteration   8: 145660.124 ops/s
Iteration   9: 145867.087 ops/s
Iteration  10: 145490.043 ops/s
Iteration  11: 145679.794 ops/s
Iteration  12: 146260.673 ops/s
Iteration  13: 146073.852 ops/s
Iteration  14: 145547.503 ops/s
Iteration  15: 145816.413 ops/s
Iteration  16: 146531.220 ops/s
Iteration  17: 145435.788 ops/s
Iteration  18: 146241.313 ops/s
Iteration  19: 145612.710 ops/s
Iteration  20: 145821.155 ops/s
Iteration  21: 145560.927 ops/s
Iteration  22: 146123.519 ops/s
Iteration  23: 145514.518 ops/s
Iteration  24: 146446.796 ops/s
Iteration  25: 145892.627 ops/s
Iteration  26: 145812.065 ops/s
Iteration  27: 146045.338 ops/s
Iteration  28: 146507.675 ops/s
Iteration  29: 146258.081 ops/s
Iteration  30: 145738.766 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_651._Benchmark.benchmark_Cluster_651":
  145870.155 ±(99.9%) 243.924 ops/s [Average]
  (min, avg, max) = (144861.510, 145870.155, 146531.220), stdev = 365.094
  CI (99.9%): [145626.231, 146114.079] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_651._Benchmark.benchmark_Cluster_651  thrpt   30  145870.155 ± 243.924  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_652._Benchmark.benchmark_Cluster_652$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_652._Benchmark.benchmark_Cluster_652

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 102246.457 ops/s
# Warmup Iteration   2: 172104.888 ops/s
# Warmup Iteration   3: 245277.763 ops/s
# Warmup Iteration   4: 242818.309 ops/s
# Warmup Iteration   5: 244904.201 ops/s
# Warmup Iteration   6: 244679.774 ops/s
# Warmup Iteration   7: 192404.455 ops/s
# Warmup Iteration   8: 244908.759 ops/s
# Warmup Iteration   9: 244566.463 ops/s
# Warmup Iteration  10: 244739.954 ops/s
# Warmup Iteration  11: 245178.302 ops/s
# Warmup Iteration  12: 244940.541 ops/s
# Warmup Iteration  13: 244774.304 ops/s
# Warmup Iteration  14: 244880.477 ops/s
# Warmup Iteration  15: 244870.722 ops/s
# Warmup Iteration  16: 244550.544 ops/s
# Warmup Iteration  17: 244407.347 ops/s
# Warmup Iteration  18: 244380.908 ops/s
# Warmup Iteration  19: 244354.628 ops/s
# Warmup Iteration  20: 244882.277 ops/s
# Warmup Iteration  21: 244854.315 ops/s
# Warmup Iteration  22: 245066.526 ops/s
# Warmup Iteration  23: 245031.271 ops/s
# Warmup Iteration  24: 245144.868 ops/s
# Warmup Iteration  25: 244583.241 ops/s
# Warmup Iteration  26: 244780.745 ops/s
# Warmup Iteration  27: 244860.533 ops/s
# Warmup Iteration  28: 245139.292 ops/s
# Warmup Iteration  29: 244964.108 ops/s
# Warmup Iteration  30: 245023.596 ops/s
Iteration   1: 245241.630 ops/s
Iteration   2: 244485.510 ops/s
Iteration   3: 244645.833 ops/s
Iteration   4: 244990.418 ops/s
Iteration   5: 244559.497 ops/s
Iteration   6: 243884.874 ops/s
Iteration   7: 244530.372 ops/s
Iteration   8: 244855.790 ops/s
Iteration   9: 244879.919 ops/s
Iteration  10: 244775.851 ops/s
Iteration  11: 244616.997 ops/s
Iteration  12: 244622.841 ops/s
Iteration  13: 244429.592 ops/s
Iteration  14: 245590.080 ops/s
Iteration  15: 244561.538 ops/s
Iteration  16: 244615.262 ops/s
Iteration  17: 244224.274 ops/s
Iteration  18: 244432.476 ops/s
Iteration  19: 244751.210 ops/s
Iteration  20: 244553.010 ops/s
Iteration  21: 244706.308 ops/s
Iteration  22: 244970.600 ops/s
Iteration  23: 244880.530 ops/s
Iteration  24: 244903.749 ops/s
Iteration  25: 244273.136 ops/s
Iteration  26: 244216.331 ops/s
Iteration  27: 244520.723 ops/s
Iteration  28: 244402.585 ops/s
Iteration  29: 245230.608 ops/s
Iteration  30: 244733.655 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_652._Benchmark.benchmark_Cluster_652":
  244669.507 ±(99.9%) 227.671 ops/s [Average]
  (min, avg, max) = (243884.874, 244669.507, 245590.080), stdev = 340.768
  CI (99.9%): [244441.836, 244897.178] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_652._Benchmark.benchmark_Cluster_652  thrpt   30  244669.507 ± 227.671  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_653._Benchmark.benchmark_Cluster_653$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_653._Benchmark.benchmark_Cluster_653

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54040.850 ops/s
# Warmup Iteration   2: 104469.928 ops/s
# Warmup Iteration   3: 154540.473 ops/s
# Warmup Iteration   4: 153822.871 ops/s
# Warmup Iteration   5: 154524.930 ops/s
# Warmup Iteration   6: 154388.454 ops/s
# Warmup Iteration   7: 122219.363 ops/s
# Warmup Iteration   8: 154709.534 ops/s
# Warmup Iteration   9: 154617.627 ops/s
# Warmup Iteration  10: 154713.775 ops/s
# Warmup Iteration  11: 154615.415 ops/s
# Warmup Iteration  12: 154515.656 ops/s
# Warmup Iteration  13: 154492.495 ops/s
# Warmup Iteration  14: 154689.908 ops/s
# Warmup Iteration  15: 154777.502 ops/s
# Warmup Iteration  16: 154505.870 ops/s
# Warmup Iteration  17: 154770.627 ops/s
# Warmup Iteration  18: 154746.493 ops/s
# Warmup Iteration  19: 154666.685 ops/s
# Warmup Iteration  20: 154516.056 ops/s
# Warmup Iteration  21: 154560.349 ops/s
# Warmup Iteration  22: 154586.788 ops/s
# Warmup Iteration  23: 154722.213 ops/s
# Warmup Iteration  24: 154564.758 ops/s
# Warmup Iteration  25: 154623.733 ops/s
# Warmup Iteration  26: 154875.169 ops/s
# Warmup Iteration  27: 154731.387 ops/s
# Warmup Iteration  28: 154601.874 ops/s
# Warmup Iteration  29: 154829.535 ops/s
# Warmup Iteration  30: 154618.236 ops/s
Iteration   1: 154851.413 ops/s
Iteration   2: 154329.038 ops/s
Iteration   3: 154499.920 ops/s
Iteration   4: 154564.497 ops/s
Iteration   5: 154984.362 ops/s
Iteration   6: 154731.901 ops/s
Iteration   7: 154926.472 ops/s
Iteration   8: 154740.490 ops/s
Iteration   9: 154746.551 ops/s
Iteration  10: 154730.152 ops/s
Iteration  11: 154943.872 ops/s
Iteration  12: 154319.088 ops/s
Iteration  13: 154617.670 ops/s
Iteration  14: 154499.496 ops/s
Iteration  15: 154930.682 ops/s
Iteration  16: 154781.453 ops/s
Iteration  17: 154776.606 ops/s
Iteration  18: 154999.281 ops/s
Iteration  19: 154202.832 ops/s
Iteration  20: 154593.131 ops/s
Iteration  21: 154743.759 ops/s
Iteration  22: 154920.040 ops/s
Iteration  23: 154608.810 ops/s
Iteration  24: 154745.458 ops/s
Iteration  25: 154727.777 ops/s
Iteration  26: 154975.110 ops/s
Iteration  27: 154644.223 ops/s
Iteration  28: 154789.368 ops/s
Iteration  29: 154469.399 ops/s
Iteration  30: 154810.118 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_653._Benchmark.benchmark_Cluster_653":
  154706.766 ±(99.9%) 137.844 ops/s [Average]
  (min, avg, max) = (154202.832, 154706.766, 154999.281), stdev = 206.318
  CI (99.9%): [154568.922, 154844.609] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_653._Benchmark.benchmark_Cluster_653  thrpt   30  154706.766 ± 137.844  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_654._Benchmark.benchmark_Cluster_654$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_654._Benchmark.benchmark_Cluster_654

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63082.981 ops/s
# Warmup Iteration   2: 100386.351 ops/s
# Warmup Iteration   3: 157804.898 ops/s
# Warmup Iteration   4: 158748.577 ops/s
# Warmup Iteration   5: 159658.854 ops/s
# Warmup Iteration   6: 158723.238 ops/s
# Warmup Iteration   7: 159028.392 ops/s
# Warmup Iteration   8: 125069.094 ops/s
# Warmup Iteration   9: 159392.192 ops/s
# Warmup Iteration  10: 160145.301 ops/s
# Warmup Iteration  11: 159785.097 ops/s
# Warmup Iteration  12: 159980.390 ops/s
# Warmup Iteration  13: 159926.530 ops/s
# Warmup Iteration  14: 159238.621 ops/s
# Warmup Iteration  15: 159305.107 ops/s
# Warmup Iteration  16: 159241.175 ops/s
# Warmup Iteration  17: 164044.133 ops/s
# Warmup Iteration  18: 163751.589 ops/s
# Warmup Iteration  19: 163145.614 ops/s
# Warmup Iteration  20: 163541.047 ops/s
# Warmup Iteration  21: 163330.922 ops/s
# Warmup Iteration  22: 164343.912 ops/s
# Warmup Iteration  23: 163804.453 ops/s
# Warmup Iteration  24: 163242.796 ops/s
# Warmup Iteration  25: 163683.056 ops/s
# Warmup Iteration  26: 163548.382 ops/s
# Warmup Iteration  27: 163425.062 ops/s
# Warmup Iteration  28: 163133.723 ops/s
# Warmup Iteration  29: 164040.205 ops/s
# Warmup Iteration  30: 163870.929 ops/s
Iteration   1: 163018.126 ops/s
Iteration   2: 162981.666 ops/s
Iteration   3: 162824.784 ops/s
Iteration   4: 163806.481 ops/s
Iteration   5: 162894.653 ops/s
Iteration   6: 162913.370 ops/s
Iteration   7: 162961.262 ops/s
Iteration   8: 163874.460 ops/s
Iteration   9: 164569.963 ops/s
Iteration  10: 164107.457 ops/s
Iteration  11: 163423.019 ops/s
Iteration  12: 162521.868 ops/s
Iteration  13: 163309.362 ops/s
Iteration  14: 164290.234 ops/s
Iteration  15: 164069.685 ops/s
Iteration  16: 163356.751 ops/s
Iteration  17: 164479.795 ops/s
Iteration  18: 164123.397 ops/s
Iteration  19: 163510.871 ops/s
Iteration  20: 162938.389 ops/s
Iteration  21: 164155.018 ops/s
Iteration  22: 163816.602 ops/s
Iteration  23: 162955.817 ops/s
Iteration  24: 162957.362 ops/s
Iteration  25: 163661.054 ops/s
Iteration  26: 163438.186 ops/s
Iteration  27: 163478.339 ops/s
Iteration  28: 163069.052 ops/s
Iteration  29: 163293.467 ops/s
Iteration  30: 164048.203 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_654._Benchmark.benchmark_Cluster_654":
  163494.957 ±(99.9%) 372.538 ops/s [Average]
  (min, avg, max) = (162521.868, 163494.957, 164569.963), stdev = 557.597
  CI (99.9%): [163122.419, 163867.494] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_654._Benchmark.benchmark_Cluster_654  thrpt   30  163494.957 ± 372.538  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_655._Benchmark.benchmark_Cluster_655$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_655._Benchmark.benchmark_Cluster_655

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 31405.865 ops/s
# Warmup Iteration   2: 68128.305 ops/s
# Warmup Iteration   3: 111039.888 ops/s
# Warmup Iteration   4: 110731.295 ops/s
# Warmup Iteration   5: 111538.516 ops/s
# Warmup Iteration   6: 111674.389 ops/s
# Warmup Iteration   7: 87914.113 ops/s
# Warmup Iteration   8: 111392.386 ops/s
# Warmup Iteration   9: 111099.451 ops/s
# Warmup Iteration  10: 110934.542 ops/s
# Warmup Iteration  11: 111793.385 ops/s
# Warmup Iteration  12: 111814.145 ops/s
# Warmup Iteration  13: 111932.972 ops/s
# Warmup Iteration  14: 111528.108 ops/s
# Warmup Iteration  15: 111612.989 ops/s
# Warmup Iteration  16: 111677.853 ops/s
# Warmup Iteration  17: 111852.643 ops/s
# Warmup Iteration  18: 111939.356 ops/s
# Warmup Iteration  19: 111882.923 ops/s
# Warmup Iteration  20: 111780.128 ops/s
# Warmup Iteration  21: 112152.698 ops/s
# Warmup Iteration  22: 112159.712 ops/s
# Warmup Iteration  23: 112042.602 ops/s
# Warmup Iteration  24: 112167.986 ops/s
# Warmup Iteration  25: 111584.170 ops/s
# Warmup Iteration  26: 112067.745 ops/s
# Warmup Iteration  27: 112269.056 ops/s
# Warmup Iteration  28: 112135.454 ops/s
# Warmup Iteration  29: 112312.853 ops/s
# Warmup Iteration  30: 111859.589 ops/s
Iteration   1: 112030.435 ops/s
Iteration   2: 112131.080 ops/s
Iteration   3: 111594.653 ops/s
Iteration   4: 112337.124 ops/s
Iteration   5: 111776.004 ops/s
Iteration   6: 112190.782 ops/s
Iteration   7: 111648.771 ops/s
Iteration   8: 111402.329 ops/s
Iteration   9: 111760.158 ops/s
Iteration  10: 112303.113 ops/s
Iteration  11: 111869.693 ops/s
Iteration  12: 112198.768 ops/s
Iteration  13: 111815.294 ops/s
Iteration  14: 111729.454 ops/s
Iteration  15: 112161.901 ops/s
Iteration  16: 112240.811 ops/s
Iteration  17: 111664.052 ops/s
Iteration  18: 111869.036 ops/s
Iteration  19: 112159.001 ops/s
Iteration  20: 111898.090 ops/s
Iteration  21: 111526.974 ops/s
Iteration  22: 111893.318 ops/s
Iteration  23: 112168.385 ops/s
Iteration  24: 111685.711 ops/s
Iteration  25: 112329.491 ops/s
Iteration  26: 112173.601 ops/s
Iteration  27: 112239.195 ops/s
Iteration  28: 111840.154 ops/s
Iteration  29: 111832.784 ops/s
Iteration  30: 112077.743 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_655._Benchmark.benchmark_Cluster_655":
  111951.597 ±(99.9%) 174.300 ops/s [Average]
  (min, avg, max) = (111402.329, 111951.597, 112337.124), stdev = 260.883
  CI (99.9%): [111777.297, 112125.897] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_655._Benchmark.benchmark_Cluster_655  thrpt   30  111951.597 ± 174.300  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_656._Benchmark.benchmark_Cluster_656$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_656._Benchmark.benchmark_Cluster_656

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59794.334 ops/s
# Warmup Iteration   2: 114537.460 ops/s
# Warmup Iteration   3: 170455.937 ops/s
# Warmup Iteration   4: 169467.773 ops/s
# Warmup Iteration   5: 170969.900 ops/s
# Warmup Iteration   6: 170953.531 ops/s
# Warmup Iteration   7: 135875.202 ops/s
# Warmup Iteration   8: 170701.659 ops/s
# Warmup Iteration   9: 170958.010 ops/s
# Warmup Iteration  10: 170485.117 ops/s
# Warmup Iteration  11: 171040.773 ops/s
# Warmup Iteration  12: 170944.887 ops/s
# Warmup Iteration  13: 170835.339 ops/s
# Warmup Iteration  14: 170723.765 ops/s
# Warmup Iteration  15: 170832.287 ops/s
# Warmup Iteration  16: 170987.121 ops/s
# Warmup Iteration  17: 170829.149 ops/s
# Warmup Iteration  18: 170945.975 ops/s
# Warmup Iteration  19: 170885.635 ops/s
# Warmup Iteration  20: 170716.466 ops/s
# Warmup Iteration  21: 170641.598 ops/s
# Warmup Iteration  22: 170905.722 ops/s
# Warmup Iteration  23: 170887.426 ops/s
# Warmup Iteration  24: 170909.726 ops/s
# Warmup Iteration  25: 170383.986 ops/s
# Warmup Iteration  26: 170593.968 ops/s
# Warmup Iteration  27: 170709.511 ops/s
# Warmup Iteration  28: 170802.315 ops/s
# Warmup Iteration  29: 170456.850 ops/s
# Warmup Iteration  30: 170834.583 ops/s
Iteration   1: 170915.508 ops/s
Iteration   2: 170910.227 ops/s
Iteration   3: 171073.323 ops/s
Iteration   4: 170689.694 ops/s
Iteration   5: 170602.807 ops/s
Iteration   6: 170729.357 ops/s
Iteration   7: 170985.111 ops/s
Iteration   8: 171221.686 ops/s
Iteration   9: 171418.711 ops/s
Iteration  10: 170245.828 ops/s
Iteration  11: 170577.153 ops/s
Iteration  12: 170544.522 ops/s
Iteration  13: 171179.136 ops/s
Iteration  14: 169719.027 ops/s
Iteration  15: 170330.943 ops/s
Iteration  16: 170960.990 ops/s
Iteration  17: 170538.299 ops/s
Iteration  18: 170741.803 ops/s
Iteration  19: 169995.605 ops/s
Iteration  20: 171305.978 ops/s
Iteration  21: 170318.807 ops/s
Iteration  22: 171229.626 ops/s
Iteration  23: 171144.611 ops/s
Iteration  24: 170713.604 ops/s
Iteration  25: 170474.261 ops/s
Iteration  26: 170669.644 ops/s
Iteration  27: 170613.661 ops/s
Iteration  28: 171456.037 ops/s
Iteration  29: 170754.849 ops/s
Iteration  30: 171173.299 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_656._Benchmark.benchmark_Cluster_656":
  170774.470 ±(99.9%) 276.270 ops/s [Average]
  (min, avg, max) = (169719.027, 170774.470, 171456.037), stdev = 413.508
  CI (99.9%): [170498.200, 171050.740] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_656._Benchmark.benchmark_Cluster_656  thrpt   30  170774.470 ± 276.270  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_657._Benchmark.benchmark_Cluster_657$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_657._Benchmark.benchmark_Cluster_657

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70870.050 ops/s
# Warmup Iteration   2: 195777.232 ops/s
# Warmup Iteration   3: 250847.345 ops/s
# Warmup Iteration   4: 250439.451 ops/s
# Warmup Iteration   5: 200321.755 ops/s
# Warmup Iteration   6: 251191.786 ops/s
# Warmup Iteration   7: 251252.619 ops/s
# Warmup Iteration   8: 251502.336 ops/s
# Warmup Iteration   9: 250917.015 ops/s
# Warmup Iteration  10: 251439.597 ops/s
# Warmup Iteration  11: 250695.790 ops/s
# Warmup Iteration  12: 251287.573 ops/s
# Warmup Iteration  13: 251389.798 ops/s
# Warmup Iteration  14: 251363.748 ops/s
# Warmup Iteration  15: 251000.440 ops/s
# Warmup Iteration  16: 251096.746 ops/s
# Warmup Iteration  17: 257061.601 ops/s
# Warmup Iteration  18: 257875.846 ops/s
# Warmup Iteration  19: 257571.968 ops/s
# Warmup Iteration  20: 257341.241 ops/s
# Warmup Iteration  21: 257392.588 ops/s
# Warmup Iteration  22: 255421.605 ops/s
# Warmup Iteration  23: 257414.624 ops/s
# Warmup Iteration  24: 257814.385 ops/s
# Warmup Iteration  25: 257268.406 ops/s
# Warmup Iteration  26: 257009.640 ops/s
# Warmup Iteration  27: 257043.360 ops/s
# Warmup Iteration  28: 257244.994 ops/s
# Warmup Iteration  29: 257779.084 ops/s
# Warmup Iteration  30: 257588.503 ops/s
Iteration   1: 257519.769 ops/s
Iteration   2: 257089.848 ops/s
Iteration   3: 257409.974 ops/s
Iteration   4: 256477.455 ops/s
Iteration   5: 257264.581 ops/s
Iteration   6: 257021.749 ops/s
Iteration   7: 257128.326 ops/s
Iteration   8: 256470.632 ops/s
Iteration   9: 256949.477 ops/s
Iteration  10: 256131.594 ops/s
Iteration  11: 256975.414 ops/s
Iteration  12: 256915.079 ops/s
Iteration  13: 257823.426 ops/s
Iteration  14: 255854.824 ops/s
Iteration  15: 257340.494 ops/s
Iteration  16: 257291.739 ops/s
Iteration  17: 256450.828 ops/s
Iteration  18: 257173.504 ops/s
Iteration  19: 257312.112 ops/s
Iteration  20: 257159.547 ops/s
Iteration  21: 258220.638 ops/s
Iteration  22: 257926.463 ops/s
Iteration  23: 257748.537 ops/s
Iteration  24: 257452.654 ops/s
Iteration  25: 257259.126 ops/s
Iteration  26: 257817.775 ops/s
Iteration  27: 256799.400 ops/s
Iteration  28: 257601.265 ops/s
Iteration  29: 256133.721 ops/s
Iteration  30: 257288.397 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_657._Benchmark.benchmark_Cluster_657":
  257133.612 ±(99.9%) 373.132 ops/s [Average]
  (min, avg, max) = (255854.824, 257133.612, 258220.638), stdev = 558.487
  CI (99.9%): [256760.479, 257506.744] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_657._Benchmark.benchmark_Cluster_657  thrpt   30  257133.612 ± 373.132  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_658._Benchmark.benchmark_Cluster_658$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_658._Benchmark.benchmark_Cluster_658

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48407.779 ops/s
# Warmup Iteration   2: 132021.341 ops/s
# Warmup Iteration   3: 203001.353 ops/s
# Warmup Iteration   4: 204671.455 ops/s
# Warmup Iteration   5: 185772.513 ops/s
# Warmup Iteration   6: 180596.375 ops/s
# Warmup Iteration   7: 204408.402 ops/s
# Warmup Iteration   8: 204506.549 ops/s
# Warmup Iteration   9: 204604.162 ops/s
# Warmup Iteration  10: 204901.026 ops/s
# Warmup Iteration  11: 204293.210 ops/s
# Warmup Iteration  12: 204659.957 ops/s
# Warmup Iteration  13: 204770.206 ops/s
# Warmup Iteration  14: 204788.007 ops/s
# Warmup Iteration  15: 205174.431 ops/s
# Warmup Iteration  16: 204857.355 ops/s
# Warmup Iteration  17: 204950.080 ops/s
# Warmup Iteration  18: 205096.916 ops/s
# Warmup Iteration  19: 204902.008 ops/s
# Warmup Iteration  20: 205103.583 ops/s
# Warmup Iteration  21: 205140.513 ops/s
# Warmup Iteration  22: 204647.665 ops/s
# Warmup Iteration  23: 205190.182 ops/s
# Warmup Iteration  24: 204973.553 ops/s
# Warmup Iteration  25: 204787.722 ops/s
# Warmup Iteration  26: 204677.457 ops/s
# Warmup Iteration  27: 204969.873 ops/s
# Warmup Iteration  28: 205045.859 ops/s
# Warmup Iteration  29: 204545.483 ops/s
# Warmup Iteration  30: 204987.969 ops/s
Iteration   1: 204709.532 ops/s
Iteration   2: 204814.832 ops/s
Iteration   3: 204599.215 ops/s
Iteration   4: 204980.836 ops/s
Iteration   5: 205020.935 ops/s
Iteration   6: 204806.817 ops/s
Iteration   7: 204514.765 ops/s
Iteration   8: 204714.462 ops/s
Iteration   9: 204707.838 ops/s
Iteration  10: 204947.647 ops/s
Iteration  11: 205138.952 ops/s
Iteration  12: 205421.115 ops/s
Iteration  13: 204830.534 ops/s
Iteration  14: 205163.332 ops/s
Iteration  15: 205495.944 ops/s
Iteration  16: 205196.297 ops/s
Iteration  17: 205063.674 ops/s
Iteration  18: 205422.538 ops/s
Iteration  19: 205024.743 ops/s
Iteration  20: 204741.195 ops/s
Iteration  21: 204690.743 ops/s
Iteration  22: 205025.141 ops/s
Iteration  23: 204492.953 ops/s
Iteration  24: 204878.979 ops/s
Iteration  25: 205252.817 ops/s
Iteration  26: 204808.136 ops/s
Iteration  27: 205202.508 ops/s
Iteration  28: 205025.042 ops/s
Iteration  29: 204977.622 ops/s
Iteration  30: 204729.119 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_658._Benchmark.benchmark_Cluster_658":
  204946.609 ±(99.9%) 175.804 ops/s [Average]
  (min, avg, max) = (204492.953, 204946.609, 205495.944), stdev = 263.135
  CI (99.9%): [204770.805, 205122.412] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_658._Benchmark.benchmark_Cluster_658  thrpt   30  204946.609 ± 175.804  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_659._Benchmark.benchmark_Cluster_659$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_659._Benchmark.benchmark_Cluster_659

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 100544.358 ops/s
# Warmup Iteration   2: 112883.923 ops/s
# Warmup Iteration   3: 152020.943 ops/s
# Warmup Iteration   4: 164236.739 ops/s
# Warmup Iteration   5: 164510.294 ops/s
# Warmup Iteration   6: 162910.024 ops/s
# Warmup Iteration   7: 164261.116 ops/s
# Warmup Iteration   8: 164715.487 ops/s
# Warmup Iteration   9: 164013.465 ops/s
# Warmup Iteration  10: 164386.974 ops/s
# Warmup Iteration  11: 164788.411 ops/s
# Warmup Iteration  12: 128532.488 ops/s
# Warmup Iteration  13: 164697.290 ops/s
# Warmup Iteration  14: 164596.344 ops/s
# Warmup Iteration  15: 164809.714 ops/s
# Warmup Iteration  16: 164541.957 ops/s
# Warmup Iteration  17: 172816.856 ops/s
# Warmup Iteration  18: 172821.694 ops/s
# Warmup Iteration  19: 173127.445 ops/s
# Warmup Iteration  20: 172547.080 ops/s
# Warmup Iteration  21: 172893.719 ops/s
# Warmup Iteration  22: 172561.092 ops/s
# Warmup Iteration  23: 172477.809 ops/s
# Warmup Iteration  24: 172764.087 ops/s
# Warmup Iteration  25: 172608.129 ops/s
# Warmup Iteration  26: 172582.746 ops/s
# Warmup Iteration  27: 173190.558 ops/s
# Warmup Iteration  28: 173131.324 ops/s
# Warmup Iteration  29: 172605.412 ops/s
# Warmup Iteration  30: 172963.402 ops/s
Iteration   1: 172890.473 ops/s
Iteration   2: 172469.143 ops/s
Iteration   3: 172855.793 ops/s
Iteration   4: 173422.887 ops/s
Iteration   5: 173110.914 ops/s
Iteration   6: 172993.984 ops/s
Iteration   7: 172379.204 ops/s
Iteration   8: 172957.749 ops/s
Iteration   9: 172298.153 ops/s
Iteration  10: 172872.767 ops/s
Iteration  11: 173235.958 ops/s
Iteration  12: 173293.542 ops/s
Iteration  13: 173175.114 ops/s
Iteration  14: 172367.696 ops/s
Iteration  15: 172958.424 ops/s
Iteration  16: 173163.943 ops/s
Iteration  17: 172222.702 ops/s
Iteration  18: 172635.017 ops/s
Iteration  19: 172907.644 ops/s
Iteration  20: 173278.846 ops/s
Iteration  21: 172460.054 ops/s
Iteration  22: 172984.318 ops/s
Iteration  23: 172691.075 ops/s
Iteration  24: 172632.371 ops/s
Iteration  25: 172100.881 ops/s
Iteration  26: 172981.543 ops/s
Iteration  27: 172470.828 ops/s
Iteration  28: 172080.384 ops/s
Iteration  29: 172348.657 ops/s
Iteration  30: 172573.730 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_659._Benchmark.benchmark_Cluster_659":
  172760.460 ±(99.9%) 253.280 ops/s [Average]
  (min, avg, max) = (172080.384, 172760.460, 173422.887), stdev = 379.098
  CI (99.9%): [172507.179, 173013.740] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_659._Benchmark.benchmark_Cluster_659  thrpt   30  172760.460 ± 253.280  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_66._Benchmark.benchmark_Cluster_66$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_66._Benchmark.benchmark_Cluster_66

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79217.416 ops/s
# Warmup Iteration   2: 117340.748 ops/s
# Warmup Iteration   3: 177514.853 ops/s
# Warmup Iteration   4: 176774.454 ops/s
# Warmup Iteration   5: 177566.302 ops/s
# Warmup Iteration   6: 177430.251 ops/s
# Warmup Iteration   7: 177517.171 ops/s
# Warmup Iteration   8: 155248.877 ops/s
# Warmup Iteration   9: 163892.198 ops/s
# Warmup Iteration  10: 177499.781 ops/s
# Warmup Iteration  11: 177385.883 ops/s
# Warmup Iteration  12: 177562.897 ops/s
# Warmup Iteration  13: 177622.121 ops/s
# Warmup Iteration  14: 177639.068 ops/s
# Warmup Iteration  15: 177069.198 ops/s
# Warmup Iteration  16: 177748.170 ops/s
# Warmup Iteration  17: 177289.747 ops/s
# Warmup Iteration  18: 177339.681 ops/s
# Warmup Iteration  19: 177523.081 ops/s
# Warmup Iteration  20: 177689.879 ops/s
# Warmup Iteration  21: 177468.026 ops/s
# Warmup Iteration  22: 177198.403 ops/s
# Warmup Iteration  23: 177035.743 ops/s
# Warmup Iteration  24: 177359.421 ops/s
# Warmup Iteration  25: 177612.958 ops/s
# Warmup Iteration  26: 177476.933 ops/s
# Warmup Iteration  27: 177322.325 ops/s
# Warmup Iteration  28: 177400.601 ops/s
# Warmup Iteration  29: 177546.479 ops/s
# Warmup Iteration  30: 177508.179 ops/s
Iteration   1: 177556.135 ops/s
Iteration   2: 177450.059 ops/s
Iteration   3: 177589.606 ops/s
Iteration   4: 177229.121 ops/s
Iteration   5: 177359.337 ops/s
Iteration   6: 177162.782 ops/s
Iteration   7: 177042.100 ops/s
Iteration   8: 177551.678 ops/s
Iteration   9: 177051.669 ops/s
Iteration  10: 177615.347 ops/s
Iteration  11: 177230.249 ops/s
Iteration  12: 177410.508 ops/s
Iteration  13: 177412.241 ops/s
Iteration  14: 177391.312 ops/s
Iteration  15: 177029.629 ops/s
Iteration  16: 177787.936 ops/s
Iteration  17: 177559.119 ops/s
Iteration  18: 177441.198 ops/s
Iteration  19: 177511.560 ops/s
Iteration  20: 177331.795 ops/s
Iteration  21: 177288.181 ops/s
Iteration  22: 177452.870 ops/s
Iteration  23: 177603.615 ops/s
Iteration  24: 177222.674 ops/s
Iteration  25: 176631.788 ops/s
Iteration  26: 177463.716 ops/s
Iteration  27: 177824.493 ops/s
Iteration  28: 177356.416 ops/s
Iteration  29: 177641.248 ops/s
Iteration  30: 177621.404 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_66._Benchmark.benchmark_Cluster_66":
  177393.993 ±(99.9%) 166.467 ops/s [Average]
  (min, avg, max) = (176631.788, 177393.993, 177824.493), stdev = 249.160
  CI (99.9%): [177227.526, 177560.460] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_66._Benchmark.benchmark_Cluster_66  thrpt   30  177393.993 ± 166.467  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_660._Benchmark.benchmark_Cluster_660$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_660._Benchmark.benchmark_Cluster_660

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47941.849 ops/s
# Warmup Iteration   2: 62964.389 ops/s
# Warmup Iteration   3: 62559.732 ops/s
# Warmup Iteration   4: 83329.866 ops/s
# Warmup Iteration   5: 84271.915 ops/s
# Warmup Iteration   6: 84201.887 ops/s
# Warmup Iteration   7: 84564.853 ops/s
# Warmup Iteration   8: 83207.083 ops/s
# Warmup Iteration   9: 84688.643 ops/s
# Warmup Iteration  10: 84436.338 ops/s
# Warmup Iteration  11: 84468.315 ops/s
# Warmup Iteration  12: 84397.806 ops/s
# Warmup Iteration  13: 84787.495 ops/s
# Warmup Iteration  14: 84629.675 ops/s
# Warmup Iteration  15: 84494.824 ops/s
# Warmup Iteration  16: 79250.400 ops/s
# Warmup Iteration  17: 71635.323 ops/s
# Warmup Iteration  18: 87687.044 ops/s
# Warmup Iteration  19: 87403.681 ops/s
# Warmup Iteration  20: 87314.462 ops/s
# Warmup Iteration  21: 87537.759 ops/s
# Warmup Iteration  22: 87297.707 ops/s
# Warmup Iteration  23: 87051.148 ops/s
# Warmup Iteration  24: 87470.487 ops/s
# Warmup Iteration  25: 87104.938 ops/s
# Warmup Iteration  26: 87312.623 ops/s
# Warmup Iteration  27: 87220.451 ops/s
# Warmup Iteration  28: 87186.197 ops/s
# Warmup Iteration  29: 87388.806 ops/s
# Warmup Iteration  30: 87508.777 ops/s
Iteration   1: 87211.226 ops/s
Iteration   2: 87541.003 ops/s
Iteration   3: 87485.944 ops/s
Iteration   4: 87592.914 ops/s
Iteration   5: 87554.985 ops/s
Iteration   6: 87692.436 ops/s
Iteration   7: 87512.419 ops/s
Iteration   8: 87436.104 ops/s
Iteration   9: 87375.126 ops/s
Iteration  10: 87518.227 ops/s
Iteration  11: 87772.586 ops/s
Iteration  12: 87304.683 ops/s
Iteration  13: 87786.298 ops/s
Iteration  14: 87384.197 ops/s
Iteration  15: 86946.881 ops/s
Iteration  16: 87428.505 ops/s
Iteration  17: 87321.870 ops/s
Iteration  18: 87114.976 ops/s
Iteration  19: 87435.846 ops/s
Iteration  20: 87394.101 ops/s
Iteration  21: 87288.721 ops/s
Iteration  22: 87228.070 ops/s
Iteration  23: 87264.346 ops/s
Iteration  24: 86832.424 ops/s
Iteration  25: 87541.635 ops/s
Iteration  26: 87436.182 ops/s
Iteration  27: 87599.666 ops/s
Iteration  28: 87435.619 ops/s
Iteration  29: 87487.158 ops/s
Iteration  30: 87676.126 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_660._Benchmark.benchmark_Cluster_660":
  87420.009 ±(99.9%) 144.001 ops/s [Average]
  (min, avg, max) = (86832.424, 87420.009, 87786.298), stdev = 215.534
  CI (99.9%): [87276.008, 87564.010] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_660._Benchmark.benchmark_Cluster_660  thrpt   30  87420.009 ± 144.001  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_661._Benchmark.benchmark_Cluster_661$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_661._Benchmark.benchmark_Cluster_661

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 15781.026 ops/s
# Warmup Iteration   2: 20978.813 ops/s
# Warmup Iteration   3: 21149.581 ops/s
# Warmup Iteration   4: 22624.157 ops/s
# Warmup Iteration   5: 26325.326 ops/s
# Warmup Iteration   6: 26348.704 ops/s
# Warmup Iteration   7: 26372.427 ops/s
# Warmup Iteration   8: 26324.988 ops/s
# Warmup Iteration   9: 26315.524 ops/s
# Warmup Iteration  10: 26198.214 ops/s
# Warmup Iteration  11: 26421.076 ops/s
# Warmup Iteration  12: 26353.864 ops/s
# Warmup Iteration  13: 26383.400 ops/s
# Warmup Iteration  14: 26341.971 ops/s
# Warmup Iteration  15: 26290.014 ops/s
# Warmup Iteration  16: 26304.023 ops/s
# Warmup Iteration  17: 26315.134 ops/s
# Warmup Iteration  18: 26259.455 ops/s
# Warmup Iteration  19: 26274.133 ops/s
# Warmup Iteration  20: 26228.414 ops/s
# Warmup Iteration  21: 25903.600 ops/s
# Warmup Iteration  22: 21422.820 ops/s
# Warmup Iteration  23: 25959.836 ops/s
# Warmup Iteration  24: 26310.067 ops/s
# Warmup Iteration  25: 26410.853 ops/s
# Warmup Iteration  26: 26239.851 ops/s
# Warmup Iteration  27: 26337.549 ops/s
# Warmup Iteration  28: 26295.513 ops/s
# Warmup Iteration  29: 26341.528 ops/s
# Warmup Iteration  30: 26291.617 ops/s
Iteration   1: 26262.181 ops/s
Iteration   2: 26352.007 ops/s
Iteration   3: 26374.227 ops/s
Iteration   4: 26368.846 ops/s
Iteration   5: 26301.066 ops/s
Iteration   6: 26232.991 ops/s
Iteration   7: 26231.446 ops/s
Iteration   8: 26150.370 ops/s
Iteration   9: 26244.479 ops/s
Iteration  10: 26274.744 ops/s
Iteration  11: 26285.255 ops/s
Iteration  12: 26314.287 ops/s
Iteration  13: 26292.990 ops/s
Iteration  14: 26379.123 ops/s
Iteration  15: 26328.207 ops/s
Iteration  16: 26386.670 ops/s
Iteration  17: 26260.169 ops/s
Iteration  18: 26297.118 ops/s
Iteration  19: 26347.374 ops/s
Iteration  20: 26301.437 ops/s
Iteration  21: 26232.497 ops/s
Iteration  22: 26267.768 ops/s
Iteration  23: 26139.690 ops/s
Iteration  24: 26364.909 ops/s
Iteration  25: 26282.869 ops/s
Iteration  26: 26361.548 ops/s
Iteration  27: 26338.532 ops/s
Iteration  28: 26395.523 ops/s
Iteration  29: 26266.151 ops/s
Iteration  30: 26329.960 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_661._Benchmark.benchmark_Cluster_661":
  26298.814 ±(99.9%) 43.114 ops/s [Average]
  (min, avg, max) = (26139.690, 26298.814, 26395.523), stdev = 64.531
  CI (99.9%): [26255.700, 26341.929] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score    Error  Units
Cluster_661._Benchmark.benchmark_Cluster_661  thrpt   30  26298.814 ± 43.114  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_662._Benchmark.benchmark_Cluster_662$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_662._Benchmark.benchmark_Cluster_662

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60562.923 ops/s
# Warmup Iteration   2: 91959.432 ops/s
# Warmup Iteration   3: 131991.731 ops/s
# Warmup Iteration   4: 146254.318 ops/s
# Warmup Iteration   5: 145830.720 ops/s
# Warmup Iteration   6: 145969.735 ops/s
# Warmup Iteration   7: 148253.853 ops/s
# Warmup Iteration   8: 146590.449 ops/s
# Warmup Iteration   9: 146464.094 ops/s
# Warmup Iteration  10: 126565.276 ops/s
# Warmup Iteration  11: 133611.126 ops/s
# Warmup Iteration  12: 147095.241 ops/s
# Warmup Iteration  13: 147674.447 ops/s
# Warmup Iteration  14: 146951.388 ops/s
# Warmup Iteration  15: 147703.508 ops/s
# Warmup Iteration  16: 147955.671 ops/s
# Warmup Iteration  17: 151025.668 ops/s
# Warmup Iteration  18: 151160.781 ops/s
# Warmup Iteration  19: 151810.296 ops/s
# Warmup Iteration  20: 151789.118 ops/s
# Warmup Iteration  21: 151884.927 ops/s
# Warmup Iteration  22: 151396.198 ops/s
# Warmup Iteration  23: 152127.838 ops/s
# Warmup Iteration  24: 151224.637 ops/s
# Warmup Iteration  25: 151453.372 ops/s
# Warmup Iteration  26: 152066.380 ops/s
# Warmup Iteration  27: 151572.150 ops/s
# Warmup Iteration  28: 151965.136 ops/s
# Warmup Iteration  29: 151496.002 ops/s
# Warmup Iteration  30: 151143.971 ops/s
Iteration   1: 151802.035 ops/s
Iteration   2: 150662.004 ops/s
Iteration   3: 150490.154 ops/s
Iteration   4: 150963.754 ops/s
Iteration   5: 151190.557 ops/s
Iteration   6: 150913.926 ops/s
Iteration   7: 152066.693 ops/s
Iteration   8: 150600.920 ops/s
Iteration   9: 150875.165 ops/s
Iteration  10: 152033.449 ops/s
Iteration  11: 151957.770 ops/s
Iteration  12: 151334.163 ops/s
Iteration  13: 151814.254 ops/s
Iteration  14: 152145.441 ops/s
Iteration  15: 152102.020 ops/s
Iteration  16: 151461.031 ops/s
Iteration  17: 151893.388 ops/s
Iteration  18: 151941.665 ops/s
Iteration  19: 151111.963 ops/s
Iteration  20: 151133.004 ops/s
Iteration  21: 151242.070 ops/s
Iteration  22: 151457.041 ops/s
Iteration  23: 151591.670 ops/s
Iteration  24: 151705.606 ops/s
Iteration  25: 151368.932 ops/s
Iteration  26: 151298.657 ops/s
Iteration  27: 151193.838 ops/s
Iteration  28: 150393.974 ops/s
Iteration  29: 151346.738 ops/s
Iteration  30: 150886.888 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_662._Benchmark.benchmark_Cluster_662":
  151365.959 ±(99.9%) 338.636 ops/s [Average]
  (min, avg, max) = (150393.974, 151365.959, 152145.441), stdev = 506.854
  CI (99.9%): [151027.323, 151704.595] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_662._Benchmark.benchmark_Cluster_662  thrpt   30  151365.959 ± 338.636  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_663._Benchmark.benchmark_Cluster_663$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_663._Benchmark.benchmark_Cluster_663

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 39838.364 ops/s
# Warmup Iteration   2: 91074.547 ops/s
# Warmup Iteration   3: 152853.921 ops/s
# Warmup Iteration   4: 151844.083 ops/s
# Warmup Iteration   5: 153008.877 ops/s
# Warmup Iteration   6: 143997.578 ops/s
# Warmup Iteration   7: 129196.452 ops/s
# Warmup Iteration   8: 152192.288 ops/s
# Warmup Iteration   9: 152945.504 ops/s
# Warmup Iteration  10: 152758.343 ops/s
# Warmup Iteration  11: 152862.428 ops/s
# Warmup Iteration  12: 153022.504 ops/s
# Warmup Iteration  13: 152985.795 ops/s
# Warmup Iteration  14: 152960.119 ops/s
# Warmup Iteration  15: 152834.949 ops/s
# Warmup Iteration  16: 152913.746 ops/s
# Warmup Iteration  17: 153380.951 ops/s
# Warmup Iteration  18: 153313.627 ops/s
# Warmup Iteration  19: 153312.506 ops/s
# Warmup Iteration  20: 153252.273 ops/s
# Warmup Iteration  21: 153181.135 ops/s
# Warmup Iteration  22: 153368.474 ops/s
# Warmup Iteration  23: 153013.213 ops/s
# Warmup Iteration  24: 152969.364 ops/s
# Warmup Iteration  25: 153373.340 ops/s
# Warmup Iteration  26: 153552.658 ops/s
# Warmup Iteration  27: 153245.738 ops/s
# Warmup Iteration  28: 153161.847 ops/s
# Warmup Iteration  29: 153193.821 ops/s
# Warmup Iteration  30: 153243.329 ops/s
Iteration   1: 153044.420 ops/s
Iteration   2: 152633.778 ops/s
Iteration   3: 152772.557 ops/s
Iteration   4: 153046.110 ops/s
Iteration   5: 153604.196 ops/s
Iteration   6: 153344.432 ops/s
Iteration   7: 153508.754 ops/s
Iteration   8: 153146.890 ops/s
Iteration   9: 153467.690 ops/s
Iteration  10: 153453.078 ops/s
Iteration  11: 153510.789 ops/s
Iteration  12: 153179.293 ops/s
Iteration  13: 153029.563 ops/s
Iteration  14: 153128.487 ops/s
Iteration  15: 152856.542 ops/s
Iteration  16: 153133.309 ops/s
Iteration  17: 153375.326 ops/s
Iteration  18: 153369.258 ops/s
Iteration  19: 153363.662 ops/s
Iteration  20: 153500.390 ops/s
Iteration  21: 153031.325 ops/s
Iteration  22: 153357.816 ops/s
Iteration  23: 153430.536 ops/s
Iteration  24: 153066.261 ops/s
Iteration  25: 153347.595 ops/s
Iteration  26: 153334.032 ops/s
Iteration  27: 153579.760 ops/s
Iteration  28: 153449.027 ops/s
Iteration  29: 153618.809 ops/s
Iteration  30: 153404.256 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_663._Benchmark.benchmark_Cluster_663":
  153269.598 ±(99.9%) 168.358 ops/s [Average]
  (min, avg, max) = (152633.778, 153269.598, 153618.809), stdev = 251.990
  CI (99.9%): [153101.240, 153437.956] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_663._Benchmark.benchmark_Cluster_663  thrpt   30  153269.598 ± 168.358  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_664._Benchmark.benchmark_Cluster_664$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_664._Benchmark.benchmark_Cluster_664

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69782.748 ops/s
# Warmup Iteration   2: 110142.714 ops/s
# Warmup Iteration   3: 161786.698 ops/s
# Warmup Iteration   4: 160654.605 ops/s
# Warmup Iteration   5: 161394.760 ops/s
# Warmup Iteration   6: 161713.600 ops/s
# Warmup Iteration   7: 161322.034 ops/s
# Warmup Iteration   8: 128294.248 ops/s
# Warmup Iteration   9: 161754.356 ops/s
# Warmup Iteration  10: 161698.346 ops/s
# Warmup Iteration  11: 161881.417 ops/s
# Warmup Iteration  12: 161420.681 ops/s
# Warmup Iteration  13: 161651.264 ops/s
# Warmup Iteration  14: 161509.453 ops/s
# Warmup Iteration  15: 161737.031 ops/s
# Warmup Iteration  16: 161618.127 ops/s
# Warmup Iteration  17: 161485.529 ops/s
# Warmup Iteration  18: 161353.269 ops/s
# Warmup Iteration  19: 161283.463 ops/s
# Warmup Iteration  20: 161171.234 ops/s
# Warmup Iteration  21: 161046.833 ops/s
# Warmup Iteration  22: 161384.685 ops/s
# Warmup Iteration  23: 161332.326 ops/s
# Warmup Iteration  24: 161433.435 ops/s
# Warmup Iteration  25: 161326.241 ops/s
# Warmup Iteration  26: 161160.248 ops/s
# Warmup Iteration  27: 160966.610 ops/s
# Warmup Iteration  28: 160981.075 ops/s
# Warmup Iteration  29: 161094.333 ops/s
# Warmup Iteration  30: 161056.743 ops/s
Iteration   1: 161139.066 ops/s
Iteration   2: 161214.441 ops/s
Iteration   3: 161110.575 ops/s
Iteration   4: 161418.920 ops/s
Iteration   5: 161094.656 ops/s
Iteration   6: 160852.377 ops/s
Iteration   7: 161469.897 ops/s
Iteration   8: 160147.852 ops/s
Iteration   9: 161212.903 ops/s
Iteration  10: 160870.957 ops/s
Iteration  11: 160845.884 ops/s
Iteration  12: 161009.449 ops/s
Iteration  13: 161232.784 ops/s
Iteration  14: 161390.257 ops/s
Iteration  15: 160562.493 ops/s
Iteration  16: 161442.691 ops/s
Iteration  17: 161202.393 ops/s
Iteration  18: 161115.359 ops/s
Iteration  19: 161604.396 ops/s
Iteration  20: 161000.798 ops/s
Iteration  21: 161240.625 ops/s
Iteration  22: 161093.921 ops/s
Iteration  23: 160781.979 ops/s
Iteration  24: 161042.192 ops/s
Iteration  25: 161039.691 ops/s
Iteration  26: 161372.890 ops/s
Iteration  27: 161229.528 ops/s
Iteration  28: 161302.801 ops/s
Iteration  29: 160832.569 ops/s
Iteration  30: 160700.520 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_664._Benchmark.benchmark_Cluster_664":
  161085.829 ±(99.9%) 201.115 ops/s [Average]
  (min, avg, max) = (160147.852, 161085.829, 161604.396), stdev = 301.020
  CI (99.9%): [160884.714, 161286.944] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_664._Benchmark.benchmark_Cluster_664  thrpt   30  161085.829 ± 201.115  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_665._Benchmark.benchmark_Cluster_665$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_665._Benchmark.benchmark_Cluster_665

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62192.034 ops/s
# Warmup Iteration   2: 109597.617 ops/s
# Warmup Iteration   3: 162684.275 ops/s
# Warmup Iteration   4: 162392.505 ops/s
# Warmup Iteration   5: 162262.271 ops/s
# Warmup Iteration   6: 162414.615 ops/s
# Warmup Iteration   7: 128923.228 ops/s
# Warmup Iteration   8: 162807.940 ops/s
# Warmup Iteration   9: 162975.009 ops/s
# Warmup Iteration  10: 162672.876 ops/s
# Warmup Iteration  11: 162945.075 ops/s
# Warmup Iteration  12: 162449.362 ops/s
# Warmup Iteration  13: 163474.948 ops/s
# Warmup Iteration  14: 161524.056 ops/s
# Warmup Iteration  15: 163132.489 ops/s
# Warmup Iteration  16: 162629.641 ops/s
# Warmup Iteration  17: 166459.853 ops/s
# Warmup Iteration  18: 166499.521 ops/s
# Warmup Iteration  19: 166713.647 ops/s
# Warmup Iteration  20: 166763.339 ops/s
# Warmup Iteration  21: 166108.539 ops/s
# Warmup Iteration  22: 166735.390 ops/s
# Warmup Iteration  23: 166843.267 ops/s
# Warmup Iteration  24: 166584.493 ops/s
# Warmup Iteration  25: 166778.680 ops/s
# Warmup Iteration  26: 165994.560 ops/s
# Warmup Iteration  27: 165699.589 ops/s
# Warmup Iteration  28: 167185.960 ops/s
# Warmup Iteration  29: 166662.343 ops/s
# Warmup Iteration  30: 167393.370 ops/s
Iteration   1: 166734.522 ops/s
Iteration   2: 166096.618 ops/s
Iteration   3: 165901.785 ops/s
Iteration   4: 166902.244 ops/s
Iteration   5: 166023.992 ops/s
Iteration   6: 166334.123 ops/s
Iteration   7: 166618.442 ops/s
Iteration   8: 166563.350 ops/s
Iteration   9: 166489.675 ops/s
Iteration  10: 166968.007 ops/s
Iteration  11: 166523.069 ops/s
Iteration  12: 166360.011 ops/s
Iteration  13: 166250.205 ops/s
Iteration  14: 166762.520 ops/s
Iteration  15: 167157.486 ops/s
Iteration  16: 166898.759 ops/s
Iteration  17: 167129.899 ops/s
Iteration  18: 166817.573 ops/s
Iteration  19: 166213.985 ops/s
Iteration  20: 166641.552 ops/s
Iteration  21: 166064.847 ops/s
Iteration  22: 166730.413 ops/s
Iteration  23: 167233.890 ops/s
Iteration  24: 166932.196 ops/s
Iteration  25: 167240.337 ops/s
Iteration  26: 166665.737 ops/s
Iteration  27: 166708.951 ops/s
Iteration  28: 166600.278 ops/s
Iteration  29: 167579.800 ops/s
Iteration  30: 167233.840 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_665._Benchmark.benchmark_Cluster_665":
  166679.270 ±(99.9%) 274.864 ops/s [Average]
  (min, avg, max) = (165901.785, 166679.270, 167579.800), stdev = 411.404
  CI (99.9%): [166404.406, 166954.134] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_665._Benchmark.benchmark_Cluster_665  thrpt   30  166679.270 ± 274.864  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_666._Benchmark.benchmark_Cluster_666$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_666._Benchmark.benchmark_Cluster_666

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 100544.525 ops/s
# Warmup Iteration   2: 128167.347 ops/s
# Warmup Iteration   3: 180201.956 ops/s
# Warmup Iteration   4: 180294.050 ops/s
# Warmup Iteration   5: 179175.090 ops/s
# Warmup Iteration   6: 180484.670 ops/s
# Warmup Iteration   7: 180546.964 ops/s
# Warmup Iteration   8: 167787.211 ops/s
# Warmup Iteration   9: 154952.393 ops/s
# Warmup Iteration  10: 179603.704 ops/s
# Warmup Iteration  11: 180463.611 ops/s
# Warmup Iteration  12: 180376.675 ops/s
# Warmup Iteration  13: 180054.909 ops/s
# Warmup Iteration  14: 180171.863 ops/s
# Warmup Iteration  15: 180157.976 ops/s
# Warmup Iteration  16: 179683.794 ops/s
# Warmup Iteration  17: 185737.005 ops/s
# Warmup Iteration  18: 185818.052 ops/s
# Warmup Iteration  19: 186157.364 ops/s
# Warmup Iteration  20: 185595.473 ops/s
# Warmup Iteration  21: 186304.147 ops/s
# Warmup Iteration  22: 186474.507 ops/s
# Warmup Iteration  23: 185282.911 ops/s
# Warmup Iteration  24: 185276.786 ops/s
# Warmup Iteration  25: 185101.671 ops/s
# Warmup Iteration  26: 185186.191 ops/s
# Warmup Iteration  27: 185332.950 ops/s
# Warmup Iteration  28: 186345.811 ops/s
# Warmup Iteration  29: 186576.122 ops/s
# Warmup Iteration  30: 186495.174 ops/s
Iteration   1: 185032.243 ops/s
Iteration   2: 186107.689 ops/s
Iteration   3: 186051.275 ops/s
Iteration   4: 186256.692 ops/s
Iteration   5: 186108.352 ops/s
Iteration   6: 186335.901 ops/s
Iteration   7: 185901.160 ops/s
Iteration   8: 186133.107 ops/s
Iteration   9: 186241.310 ops/s
Iteration  10: 185901.534 ops/s
Iteration  11: 186199.919 ops/s
Iteration  12: 186483.698 ops/s
Iteration  13: 186213.108 ops/s
Iteration  14: 186594.426 ops/s
Iteration  15: 186209.055 ops/s
Iteration  16: 186303.006 ops/s
Iteration  17: 186292.407 ops/s
Iteration  18: 185722.125 ops/s
Iteration  19: 186207.690 ops/s
Iteration  20: 186203.872 ops/s
Iteration  21: 185519.212 ops/s
Iteration  22: 186399.569 ops/s
Iteration  23: 185929.193 ops/s
Iteration  24: 184896.369 ops/s
Iteration  25: 185462.851 ops/s
Iteration  26: 185609.294 ops/s
Iteration  27: 186542.787 ops/s
Iteration  28: 186544.760 ops/s
Iteration  29: 186557.672 ops/s
Iteration  30: 186460.161 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_666._Benchmark.benchmark_Cluster_666":
  186080.681 ±(99.9%) 284.706 ops/s [Average]
  (min, avg, max) = (184896.369, 186080.681, 186594.426), stdev = 426.135
  CI (99.9%): [185795.975, 186365.387] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_666._Benchmark.benchmark_Cluster_666  thrpt   30  186080.681 ± 284.706  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_667._Benchmark.benchmark_Cluster_667$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_667._Benchmark.benchmark_Cluster_667

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62529.825 ops/s
# Warmup Iteration   2: 95391.350 ops/s
# Warmup Iteration   3: 140314.687 ops/s
# Warmup Iteration   4: 139488.009 ops/s
# Warmup Iteration   5: 140482.433 ops/s
# Warmup Iteration   6: 141072.259 ops/s
# Warmup Iteration   7: 118820.739 ops/s
# Warmup Iteration   8: 129750.554 ops/s
# Warmup Iteration   9: 140497.241 ops/s
# Warmup Iteration  10: 140410.408 ops/s
# Warmup Iteration  11: 140118.665 ops/s
# Warmup Iteration  12: 140526.694 ops/s
# Warmup Iteration  13: 140548.345 ops/s
# Warmup Iteration  14: 141493.895 ops/s
# Warmup Iteration  15: 141106.168 ops/s
# Warmup Iteration  16: 141241.689 ops/s
# Warmup Iteration  17: 141419.841 ops/s
# Warmup Iteration  18: 141420.478 ops/s
# Warmup Iteration  19: 141447.034 ops/s
# Warmup Iteration  20: 140702.064 ops/s
# Warmup Iteration  21: 140746.311 ops/s
# Warmup Iteration  22: 140002.982 ops/s
# Warmup Iteration  23: 140297.971 ops/s
# Warmup Iteration  24: 139358.465 ops/s
# Warmup Iteration  25: 141118.494 ops/s
# Warmup Iteration  26: 141011.415 ops/s
# Warmup Iteration  27: 140675.418 ops/s
# Warmup Iteration  28: 140850.211 ops/s
# Warmup Iteration  29: 140928.426 ops/s
# Warmup Iteration  30: 140489.263 ops/s
Iteration   1: 141324.742 ops/s
Iteration   2: 140851.962 ops/s
Iteration   3: 141154.048 ops/s
Iteration   4: 140401.027 ops/s
Iteration   5: 139877.136 ops/s
Iteration   6: 140530.183 ops/s
Iteration   7: 141155.908 ops/s
Iteration   8: 139978.641 ops/s
Iteration   9: 140164.556 ops/s
Iteration  10: 140371.481 ops/s
Iteration  11: 140504.515 ops/s
Iteration  12: 140070.130 ops/s
Iteration  13: 140657.968 ops/s
Iteration  14: 140657.167 ops/s
Iteration  15: 140342.274 ops/s
Iteration  16: 139264.486 ops/s
Iteration  17: 139234.482 ops/s
Iteration  18: 140777.831 ops/s
Iteration  19: 140964.634 ops/s
Iteration  20: 140959.737 ops/s
Iteration  21: 140500.601 ops/s
Iteration  22: 140470.993 ops/s
Iteration  23: 140081.367 ops/s
Iteration  24: 140346.346 ops/s
Iteration  25: 140780.215 ops/s
Iteration  26: 140626.628 ops/s
Iteration  27: 140415.114 ops/s
Iteration  28: 139847.985 ops/s
Iteration  29: 141088.894 ops/s
Iteration  30: 140752.669 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_667._Benchmark.benchmark_Cluster_667":
  140471.791 ±(99.9%) 339.013 ops/s [Average]
  (min, avg, max) = (139234.482, 140471.791, 141324.742), stdev = 507.419
  CI (99.9%): [140132.777, 140810.804] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_667._Benchmark.benchmark_Cluster_667  thrpt   30  140471.791 ± 339.013  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_668._Benchmark.benchmark_Cluster_668$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_668._Benchmark.benchmark_Cluster_668

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48272.503 ops/s
# Warmup Iteration   2: 87427.828 ops/s
# Warmup Iteration   3: 124058.343 ops/s
# Warmup Iteration   4: 122985.403 ops/s
# Warmup Iteration   5: 124457.293 ops/s
# Warmup Iteration   6: 119852.076 ops/s
# Warmup Iteration   7: 101712.738 ops/s
# Warmup Iteration   8: 123616.481 ops/s
# Warmup Iteration   9: 124258.425 ops/s
# Warmup Iteration  10: 123891.830 ops/s
# Warmup Iteration  11: 124371.676 ops/s
# Warmup Iteration  12: 124115.898 ops/s
# Warmup Iteration  13: 124092.522 ops/s
# Warmup Iteration  14: 123862.777 ops/s
# Warmup Iteration  15: 123677.418 ops/s
# Warmup Iteration  16: 124168.359 ops/s
# Warmup Iteration  17: 123879.390 ops/s
# Warmup Iteration  18: 124428.433 ops/s
# Warmup Iteration  19: 124237.864 ops/s
# Warmup Iteration  20: 124097.133 ops/s
# Warmup Iteration  21: 124049.983 ops/s
# Warmup Iteration  22: 124215.630 ops/s
# Warmup Iteration  23: 123977.721 ops/s
# Warmup Iteration  24: 123907.531 ops/s
# Warmup Iteration  25: 124271.295 ops/s
# Warmup Iteration  26: 124021.212 ops/s
# Warmup Iteration  27: 124272.174 ops/s
# Warmup Iteration  28: 124019.983 ops/s
# Warmup Iteration  29: 124038.453 ops/s
# Warmup Iteration  30: 123696.795 ops/s
Iteration   1: 124021.653 ops/s
Iteration   2: 123398.410 ops/s
Iteration   3: 123737.465 ops/s
Iteration   4: 124102.204 ops/s
Iteration   5: 124344.554 ops/s
Iteration   6: 123939.716 ops/s
Iteration   7: 124510.219 ops/s
Iteration   8: 124066.647 ops/s
Iteration   9: 124355.583 ops/s
Iteration  10: 124163.181 ops/s
Iteration  11: 124017.737 ops/s
Iteration  12: 123602.930 ops/s
Iteration  13: 123924.643 ops/s
Iteration  14: 124205.964 ops/s
Iteration  15: 123527.673 ops/s
Iteration  16: 124204.379 ops/s
Iteration  17: 123985.186 ops/s
Iteration  18: 123855.557 ops/s
Iteration  19: 123822.881 ops/s
Iteration  20: 123899.752 ops/s
Iteration  21: 123931.448 ops/s
Iteration  22: 124100.193 ops/s
Iteration  23: 124249.079 ops/s
Iteration  24: 124519.111 ops/s
Iteration  25: 124252.520 ops/s
Iteration  26: 124425.476 ops/s
Iteration  27: 123751.912 ops/s
Iteration  28: 124042.583 ops/s
Iteration  29: 124061.304 ops/s
Iteration  30: 124122.063 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_668._Benchmark.benchmark_Cluster_668":
  124038.067 ±(99.9%) 181.703 ops/s [Average]
  (min, avg, max) = (123398.410, 124038.067, 124519.111), stdev = 271.964
  CI (99.9%): [123856.364, 124219.770] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_668._Benchmark.benchmark_Cluster_668  thrpt   30  124038.067 ± 181.703  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_669._Benchmark.benchmark_Cluster_669$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_669._Benchmark.benchmark_Cluster_669

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93307.354 ops/s
# Warmup Iteration   2: 98603.054 ops/s
# Warmup Iteration   3: 125479.195 ops/s
# Warmup Iteration   4: 137831.097 ops/s
# Warmup Iteration   5: 137541.004 ops/s
# Warmup Iteration   6: 135996.615 ops/s
# Warmup Iteration   7: 137487.445 ops/s
# Warmup Iteration   8: 137075.767 ops/s
# Warmup Iteration   9: 137637.504 ops/s
# Warmup Iteration  10: 138130.808 ops/s
# Warmup Iteration  11: 137681.969 ops/s
# Warmup Iteration  12: 137315.636 ops/s
# Warmup Iteration  13: 108778.329 ops/s
# Warmup Iteration  14: 137479.253 ops/s
# Warmup Iteration  15: 137558.435 ops/s
# Warmup Iteration  16: 137877.460 ops/s
# Warmup Iteration  17: 145748.413 ops/s
# Warmup Iteration  18: 145680.594 ops/s
# Warmup Iteration  19: 145696.577 ops/s
# Warmup Iteration  20: 145317.443 ops/s
# Warmup Iteration  21: 145423.926 ops/s
# Warmup Iteration  22: 145069.088 ops/s
# Warmup Iteration  23: 144804.270 ops/s
# Warmup Iteration  24: 145364.369 ops/s
# Warmup Iteration  25: 145550.373 ops/s
# Warmup Iteration  26: 145589.994 ops/s
# Warmup Iteration  27: 144873.553 ops/s
# Warmup Iteration  28: 145024.230 ops/s
# Warmup Iteration  29: 145159.140 ops/s
# Warmup Iteration  30: 145058.034 ops/s
Iteration   1: 145327.574 ops/s
Iteration   2: 145266.663 ops/s
Iteration   3: 145154.074 ops/s
Iteration   4: 145160.078 ops/s
Iteration   5: 145588.269 ops/s
Iteration   6: 145386.743 ops/s
Iteration   7: 145456.863 ops/s
Iteration   8: 145128.519 ops/s
Iteration   9: 145145.546 ops/s
Iteration  10: 145259.214 ops/s
Iteration  11: 145026.457 ops/s
Iteration  12: 145604.571 ops/s
Iteration  13: 145545.606 ops/s
Iteration  14: 144771.196 ops/s
Iteration  15: 144640.769 ops/s
Iteration  16: 144272.110 ops/s
Iteration  17: 144542.072 ops/s
Iteration  18: 144627.746 ops/s
Iteration  19: 144592.394 ops/s
Iteration  20: 144510.366 ops/s
Iteration  21: 144681.930 ops/s
Iteration  22: 144771.840 ops/s
Iteration  23: 144502.661 ops/s
Iteration  24: 144774.451 ops/s
Iteration  25: 145133.257 ops/s
Iteration  26: 145322.095 ops/s
Iteration  27: 145301.826 ops/s
Iteration  28: 145182.138 ops/s
Iteration  29: 145047.573 ops/s
Iteration  30: 145109.614 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_669._Benchmark.benchmark_Cluster_669":
  145027.807 ±(99.9%) 243.579 ops/s [Average]
  (min, avg, max) = (144272.110, 145027.807, 145604.571), stdev = 364.578
  CI (99.9%): [144784.228, 145271.386] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_669._Benchmark.benchmark_Cluster_669  thrpt   30  145027.807 ± 243.579  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_67._Benchmark.benchmark_Cluster_67$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_67._Benchmark.benchmark_Cluster_67

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77391.323 ops/s
# Warmup Iteration   2: 128181.439 ops/s
# Warmup Iteration   3: 182144.543 ops/s
# Warmup Iteration   4: 180543.729 ops/s
# Warmup Iteration   5: 181840.545 ops/s
# Warmup Iteration   6: 182034.773 ops/s
# Warmup Iteration   7: 143772.652 ops/s
# Warmup Iteration   8: 182006.058 ops/s
# Warmup Iteration   9: 181974.412 ops/s
# Warmup Iteration  10: 182017.449 ops/s
# Warmup Iteration  11: 182042.959 ops/s
# Warmup Iteration  12: 181640.055 ops/s
# Warmup Iteration  13: 181787.119 ops/s
# Warmup Iteration  14: 181663.709 ops/s
# Warmup Iteration  15: 181850.643 ops/s
# Warmup Iteration  16: 181954.331 ops/s
# Warmup Iteration  17: 181970.184 ops/s
# Warmup Iteration  18: 181746.074 ops/s
# Warmup Iteration  19: 181643.181 ops/s
# Warmup Iteration  20: 181680.441 ops/s
# Warmup Iteration  21: 182108.802 ops/s
# Warmup Iteration  22: 182041.262 ops/s
# Warmup Iteration  23: 181974.841 ops/s
# Warmup Iteration  24: 181974.351 ops/s
# Warmup Iteration  25: 181873.553 ops/s
# Warmup Iteration  26: 181565.819 ops/s
# Warmup Iteration  27: 181747.715 ops/s
# Warmup Iteration  28: 182041.974 ops/s
# Warmup Iteration  29: 182022.129 ops/s
# Warmup Iteration  30: 181966.622 ops/s
Iteration   1: 182059.903 ops/s
Iteration   2: 181877.482 ops/s
Iteration   3: 182059.676 ops/s
Iteration   4: 181983.392 ops/s
Iteration   5: 182124.999 ops/s
Iteration   6: 181660.863 ops/s
Iteration   7: 181463.705 ops/s
Iteration   8: 180483.130 ops/s
Iteration   9: 181237.195 ops/s
Iteration  10: 181491.738 ops/s
Iteration  11: 182166.598 ops/s
Iteration  12: 181784.991 ops/s
Iteration  13: 181541.662 ops/s
Iteration  14: 181944.717 ops/s
Iteration  15: 181789.146 ops/s
Iteration  16: 182000.129 ops/s
Iteration  17: 181793.602 ops/s
Iteration  18: 182038.617 ops/s
Iteration  19: 182030.405 ops/s
Iteration  20: 182281.678 ops/s
Iteration  21: 181984.334 ops/s
Iteration  22: 181653.376 ops/s
Iteration  23: 181820.234 ops/s
Iteration  24: 182012.907 ops/s
Iteration  25: 181876.652 ops/s
Iteration  26: 181596.063 ops/s
Iteration  27: 181986.277 ops/s
Iteration  28: 181719.738 ops/s
Iteration  29: 181897.115 ops/s
Iteration  30: 181894.277 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_67._Benchmark.benchmark_Cluster_67":
  181808.487 ±(99.9%) 227.725 ops/s [Average]
  (min, avg, max) = (180483.130, 181808.487, 182281.678), stdev = 340.848
  CI (99.9%): [181580.762, 182036.212] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_67._Benchmark.benchmark_Cluster_67  thrpt   30  181808.487 ± 227.725  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_670._Benchmark.benchmark_Cluster_670$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_670._Benchmark.benchmark_Cluster_670

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 95015.491 ops/s
# Warmup Iteration   2: 101349.755 ops/s
# Warmup Iteration   3: 130292.265 ops/s
# Warmup Iteration   4: 142008.939 ops/s
# Warmup Iteration   5: 141812.026 ops/s
# Warmup Iteration   6: 141066.842 ops/s
# Warmup Iteration   7: 142150.998 ops/s
# Warmup Iteration   8: 142092.254 ops/s
# Warmup Iteration   9: 141837.424 ops/s
# Warmup Iteration  10: 142105.083 ops/s
# Warmup Iteration  11: 141789.166 ops/s
# Warmup Iteration  12: 139354.352 ops/s
# Warmup Iteration  13: 115101.795 ops/s
# Warmup Iteration  14: 142198.016 ops/s
# Warmup Iteration  15: 142175.610 ops/s
# Warmup Iteration  16: 142409.895 ops/s
# Warmup Iteration  17: 150899.628 ops/s
# Warmup Iteration  18: 150650.731 ops/s
# Warmup Iteration  19: 150256.107 ops/s
# Warmup Iteration  20: 150876.073 ops/s
# Warmup Iteration  21: 150663.195 ops/s
# Warmup Iteration  22: 150279.483 ops/s
# Warmup Iteration  23: 150336.905 ops/s
# Warmup Iteration  24: 150742.928 ops/s
# Warmup Iteration  25: 150437.838 ops/s
# Warmup Iteration  26: 150177.403 ops/s
# Warmup Iteration  27: 150211.883 ops/s
# Warmup Iteration  28: 150746.720 ops/s
# Warmup Iteration  29: 150521.579 ops/s
# Warmup Iteration  30: 150693.247 ops/s
Iteration   1: 150106.221 ops/s
Iteration   2: 150118.193 ops/s
Iteration   3: 150660.053 ops/s
Iteration   4: 149531.524 ops/s
Iteration   5: 149821.319 ops/s
Iteration   6: 150550.522 ops/s
Iteration   7: 150435.575 ops/s
Iteration   8: 150626.328 ops/s
Iteration   9: 150655.526 ops/s
Iteration  10: 150624.804 ops/s
Iteration  11: 149961.749 ops/s
Iteration  12: 150095.053 ops/s
Iteration  13: 150612.564 ops/s
Iteration  14: 150463.234 ops/s
Iteration  15: 150662.084 ops/s
Iteration  16: 150598.699 ops/s
Iteration  17: 150840.766 ops/s
Iteration  18: 150575.390 ops/s
Iteration  19: 150121.537 ops/s
Iteration  20: 150630.692 ops/s
Iteration  21: 149944.615 ops/s
Iteration  22: 150275.756 ops/s
Iteration  23: 150595.347 ops/s
Iteration  24: 149924.761 ops/s
Iteration  25: 150331.684 ops/s
Iteration  26: 150397.558 ops/s
Iteration  27: 149686.707 ops/s
Iteration  28: 150770.634 ops/s
Iteration  29: 150876.082 ops/s
Iteration  30: 150941.061 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_670._Benchmark.benchmark_Cluster_670":
  150381.201 ±(99.9%) 246.828 ops/s [Average]
  (min, avg, max) = (149531.524, 150381.201, 150941.061), stdev = 369.441
  CI (99.9%): [150134.373, 150628.029] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_670._Benchmark.benchmark_Cluster_670  thrpt   30  150381.201 ± 246.828  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_671._Benchmark.benchmark_Cluster_671$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_671._Benchmark.benchmark_Cluster_671

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 118221.533 ops/s
# Warmup Iteration   2: 126744.929 ops/s
# Warmup Iteration   3: 132315.439 ops/s
# Warmup Iteration   4: 164274.744 ops/s
# Warmup Iteration   5: 164336.740 ops/s
# Warmup Iteration   6: 164953.825 ops/s
# Warmup Iteration   7: 164838.291 ops/s
# Warmup Iteration   8: 163857.900 ops/s
# Warmup Iteration   9: 165100.620 ops/s
# Warmup Iteration  10: 165332.859 ops/s
# Warmup Iteration  11: 165524.569 ops/s
# Warmup Iteration  12: 165180.856 ops/s
# Warmup Iteration  13: 164890.610 ops/s
# Warmup Iteration  14: 165283.632 ops/s
# Warmup Iteration  15: 164576.230 ops/s
# Warmup Iteration  16: 161841.709 ops/s
# Warmup Iteration  17: 141067.250 ops/s
# Warmup Iteration  18: 174567.916 ops/s
# Warmup Iteration  19: 174602.095 ops/s
# Warmup Iteration  20: 174183.890 ops/s
# Warmup Iteration  21: 173894.472 ops/s
# Warmup Iteration  22: 174822.953 ops/s
# Warmup Iteration  23: 174092.800 ops/s
# Warmup Iteration  24: 174324.353 ops/s
# Warmup Iteration  25: 173557.045 ops/s
# Warmup Iteration  26: 173448.310 ops/s
# Warmup Iteration  27: 173747.723 ops/s
# Warmup Iteration  28: 173802.192 ops/s
# Warmup Iteration  29: 173922.579 ops/s
# Warmup Iteration  30: 174905.761 ops/s
Iteration   1: 174125.950 ops/s
Iteration   2: 173608.766 ops/s
Iteration   3: 173700.842 ops/s
Iteration   4: 174251.357 ops/s
Iteration   5: 174001.048 ops/s
Iteration   6: 174420.881 ops/s
Iteration   7: 174131.078 ops/s
Iteration   8: 174404.983 ops/s
Iteration   9: 174538.698 ops/s
Iteration  10: 174553.895 ops/s
Iteration  11: 174786.288 ops/s
Iteration  12: 174990.890 ops/s
Iteration  13: 175032.463 ops/s
Iteration  14: 174945.934 ops/s
Iteration  15: 174005.547 ops/s
Iteration  16: 173955.564 ops/s
Iteration  17: 174329.716 ops/s
Iteration  18: 173931.229 ops/s
Iteration  19: 174226.823 ops/s
Iteration  20: 174123.819 ops/s
Iteration  21: 174272.946 ops/s
Iteration  22: 174858.604 ops/s
Iteration  23: 173392.183 ops/s
Iteration  24: 173205.227 ops/s
Iteration  25: 173864.572 ops/s
Iteration  26: 174141.522 ops/s
Iteration  27: 174208.567 ops/s
Iteration  28: 173703.934 ops/s
Iteration  29: 174143.885 ops/s
Iteration  30: 174087.537 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_671._Benchmark.benchmark_Cluster_671":
  174198.158 ±(99.9%) 300.144 ops/s [Average]
  (min, avg, max) = (173205.227, 174198.158, 175032.463), stdev = 449.242
  CI (99.9%): [173898.014, 174498.303] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_671._Benchmark.benchmark_Cluster_671  thrpt   30  174198.158 ± 300.144  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_672._Benchmark.benchmark_Cluster_672$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_672._Benchmark.benchmark_Cluster_672

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91240.913 ops/s
# Warmup Iteration   2: 98783.755 ops/s
# Warmup Iteration   3: 108776.712 ops/s
# Warmup Iteration   4: 132178.338 ops/s
# Warmup Iteration   5: 131683.938 ops/s
# Warmup Iteration   6: 131741.599 ops/s
# Warmup Iteration   7: 130982.070 ops/s
# Warmup Iteration   8: 131922.336 ops/s
# Warmup Iteration   9: 131619.183 ops/s
# Warmup Iteration  10: 131680.398 ops/s
# Warmup Iteration  11: 131558.848 ops/s
# Warmup Iteration  12: 131882.501 ops/s
# Warmup Iteration  13: 131869.454 ops/s
# Warmup Iteration  14: 132039.607 ops/s
# Warmup Iteration  15: 117200.013 ops/s
# Warmup Iteration  16: 118475.486 ops/s
# Warmup Iteration  17: 138719.212 ops/s
# Warmup Iteration  18: 138668.621 ops/s
# Warmup Iteration  19: 138611.844 ops/s
# Warmup Iteration  20: 138478.524 ops/s
# Warmup Iteration  21: 138578.874 ops/s
# Warmup Iteration  22: 138630.769 ops/s
# Warmup Iteration  23: 138342.515 ops/s
# Warmup Iteration  24: 138562.780 ops/s
# Warmup Iteration  25: 138076.707 ops/s
# Warmup Iteration  26: 137914.057 ops/s
# Warmup Iteration  27: 138808.600 ops/s
# Warmup Iteration  28: 138728.560 ops/s
# Warmup Iteration  29: 138422.035 ops/s
# Warmup Iteration  30: 138723.193 ops/s
Iteration   1: 138529.177 ops/s
Iteration   2: 138366.496 ops/s
Iteration   3: 138549.507 ops/s
Iteration   4: 138114.912 ops/s
Iteration   5: 138127.309 ops/s
Iteration   6: 138068.959 ops/s
Iteration   7: 137821.915 ops/s
Iteration   8: 138655.026 ops/s
Iteration   9: 138892.990 ops/s
Iteration  10: 138795.326 ops/s
Iteration  11: 138846.796 ops/s
Iteration  12: 138655.745 ops/s
Iteration  13: 138470.131 ops/s
Iteration  14: 138825.043 ops/s
Iteration  15: 138589.890 ops/s
Iteration  16: 138644.786 ops/s
Iteration  17: 138606.859 ops/s
Iteration  18: 138216.858 ops/s
Iteration  19: 138749.603 ops/s
Iteration  20: 138718.445 ops/s
Iteration  21: 138704.181 ops/s
Iteration  22: 138373.143 ops/s
Iteration  23: 138726.896 ops/s
Iteration  24: 138801.392 ops/s
Iteration  25: 138735.964 ops/s
Iteration  26: 138755.049 ops/s
Iteration  27: 138547.263 ops/s
Iteration  28: 138579.089 ops/s
Iteration  29: 138879.688 ops/s
Iteration  30: 138825.905 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_672._Benchmark.benchmark_Cluster_672":
  138572.478 ±(99.9%) 180.788 ops/s [Average]
  (min, avg, max) = (137821.915, 138572.478, 138892.990), stdev = 270.595
  CI (99.9%): [138391.690, 138753.266] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_672._Benchmark.benchmark_Cluster_672  thrpt   30  138572.478 ± 180.788  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_673._Benchmark.benchmark_Cluster_673$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_673._Benchmark.benchmark_Cluster_673

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72519.745 ops/s
# Warmup Iteration   2: 91141.789 ops/s
# Warmup Iteration   3: 100742.522 ops/s
# Warmup Iteration   4: 131191.781 ops/s
# Warmup Iteration   5: 130879.138 ops/s
# Warmup Iteration   6: 130822.481 ops/s
# Warmup Iteration   7: 130299.124 ops/s
# Warmup Iteration   8: 131794.026 ops/s
# Warmup Iteration   9: 131182.659 ops/s
# Warmup Iteration  10: 131364.180 ops/s
# Warmup Iteration  11: 131211.541 ops/s
# Warmup Iteration  12: 131182.357 ops/s
# Warmup Iteration  13: 130801.562 ops/s
# Warmup Iteration  14: 130954.744 ops/s
# Warmup Iteration  15: 104299.795 ops/s
# Warmup Iteration  16: 128658.090 ops/s
# Warmup Iteration  17: 135000.782 ops/s
# Warmup Iteration  18: 134968.187 ops/s
# Warmup Iteration  19: 135512.522 ops/s
# Warmup Iteration  20: 135438.183 ops/s
# Warmup Iteration  21: 135251.770 ops/s
# Warmup Iteration  22: 135219.333 ops/s
# Warmup Iteration  23: 135314.251 ops/s
# Warmup Iteration  24: 135552.277 ops/s
# Warmup Iteration  25: 134791.225 ops/s
# Warmup Iteration  26: 134889.574 ops/s
# Warmup Iteration  27: 134966.038 ops/s
# Warmup Iteration  28: 135303.383 ops/s
# Warmup Iteration  29: 135107.449 ops/s
# Warmup Iteration  30: 134923.253 ops/s
Iteration   1: 134809.081 ops/s
Iteration   2: 134617.660 ops/s
Iteration   3: 134853.328 ops/s
Iteration   4: 134757.640 ops/s
Iteration   5: 135108.648 ops/s
Iteration   6: 135297.974 ops/s
Iteration   7: 135219.427 ops/s
Iteration   8: 135264.604 ops/s
Iteration   9: 135369.134 ops/s
Iteration  10: 134754.584 ops/s
Iteration  11: 134929.832 ops/s
Iteration  12: 135129.962 ops/s
Iteration  13: 134957.980 ops/s
Iteration  14: 135393.982 ops/s
Iteration  15: 135109.345 ops/s
Iteration  16: 134635.995 ops/s
Iteration  17: 134905.916 ops/s
Iteration  18: 134479.183 ops/s
Iteration  19: 134807.395 ops/s
Iteration  20: 134474.310 ops/s
Iteration  21: 134451.278 ops/s
Iteration  22: 134716.789 ops/s
Iteration  23: 135179.049 ops/s
Iteration  24: 134950.451 ops/s
Iteration  25: 135179.347 ops/s
Iteration  26: 135201.009 ops/s
Iteration  27: 135210.571 ops/s
Iteration  28: 135032.125 ops/s
Iteration  29: 135176.739 ops/s
Iteration  30: 134817.077 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_673._Benchmark.benchmark_Cluster_673":
  134959.680 ±(99.9%) 181.688 ops/s [Average]
  (min, avg, max) = (134451.278, 134959.680, 135393.982), stdev = 271.942
  CI (99.9%): [134777.992, 135141.369] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_673._Benchmark.benchmark_Cluster_673  thrpt   30  134959.680 ± 181.688  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_674._Benchmark.benchmark_Cluster_674$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_674._Benchmark.benchmark_Cluster_674

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 120043.118 ops/s
# Warmup Iteration   2: 133051.990 ops/s
# Warmup Iteration   3: 175352.226 ops/s
# Warmup Iteration   4: 186773.252 ops/s
# Warmup Iteration   5: 185882.210 ops/s
# Warmup Iteration   6: 185621.838 ops/s
# Warmup Iteration   7: 186957.546 ops/s
# Warmup Iteration   8: 187130.967 ops/s
# Warmup Iteration   9: 185677.914 ops/s
# Warmup Iteration  10: 185894.969 ops/s
# Warmup Iteration  11: 187152.244 ops/s
# Warmup Iteration  12: 149864.149 ops/s
# Warmup Iteration  13: 185084.256 ops/s
# Warmup Iteration  14: 186873.546 ops/s
# Warmup Iteration  15: 186532.715 ops/s
# Warmup Iteration  16: 186450.462 ops/s
# Warmup Iteration  17: 187340.836 ops/s
# Warmup Iteration  18: 187537.917 ops/s
# Warmup Iteration  19: 187278.730 ops/s
# Warmup Iteration  20: 187019.787 ops/s
# Warmup Iteration  21: 187104.445 ops/s
# Warmup Iteration  22: 187164.918 ops/s
# Warmup Iteration  23: 187091.080 ops/s
# Warmup Iteration  24: 186983.116 ops/s
# Warmup Iteration  25: 187369.289 ops/s
# Warmup Iteration  26: 187115.215 ops/s
# Warmup Iteration  27: 187303.093 ops/s
# Warmup Iteration  28: 187325.726 ops/s
# Warmup Iteration  29: 187162.074 ops/s
# Warmup Iteration  30: 187115.674 ops/s
Iteration   1: 186954.709 ops/s
Iteration   2: 187526.026 ops/s
Iteration   3: 187429.068 ops/s
Iteration   4: 187380.999 ops/s
Iteration   5: 187027.907 ops/s
Iteration   6: 187451.945 ops/s
Iteration   7: 186933.354 ops/s
Iteration   8: 186681.876 ops/s
Iteration   9: 187281.695 ops/s
Iteration  10: 187285.441 ops/s
Iteration  11: 187384.454 ops/s
Iteration  12: 187339.324 ops/s
Iteration  13: 186924.037 ops/s
Iteration  14: 187320.260 ops/s
Iteration  15: 187313.891 ops/s
Iteration  16: 187306.481 ops/s
Iteration  17: 187306.305 ops/s
Iteration  18: 187371.190 ops/s
Iteration  19: 187359.386 ops/s
Iteration  20: 187272.388 ops/s
Iteration  21: 187398.396 ops/s
Iteration  22: 187061.215 ops/s
Iteration  23: 187193.688 ops/s
Iteration  24: 187420.532 ops/s
Iteration  25: 187499.072 ops/s
Iteration  26: 187412.034 ops/s
Iteration  27: 187353.868 ops/s
Iteration  28: 187299.990 ops/s
Iteration  29: 187129.687 ops/s
Iteration  30: 186284.879 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_674._Benchmark.benchmark_Cluster_674":
  187230.137 ±(99.9%) 176.698 ops/s [Average]
  (min, avg, max) = (186284.879, 187230.137, 187526.026), stdev = 264.474
  CI (99.9%): [187053.438, 187406.835] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_674._Benchmark.benchmark_Cluster_674  thrpt   30  187230.137 ± 176.698  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_675._Benchmark.benchmark_Cluster_675$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_675._Benchmark.benchmark_Cluster_675

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62713.094 ops/s
# Warmup Iteration   2: 96305.053 ops/s
# Warmup Iteration   3: 132586.255 ops/s
# Warmup Iteration   4: 131863.580 ops/s
# Warmup Iteration   5: 132532.054 ops/s
# Warmup Iteration   6: 132504.596 ops/s
# Warmup Iteration   7: 132632.881 ops/s
# Warmup Iteration   8: 103582.949 ops/s
# Warmup Iteration   9: 133170.491 ops/s
# Warmup Iteration  10: 132889.990 ops/s
# Warmup Iteration  11: 132933.557 ops/s
# Warmup Iteration  12: 132730.926 ops/s
# Warmup Iteration  13: 132918.230 ops/s
# Warmup Iteration  14: 132758.640 ops/s
# Warmup Iteration  15: 132572.830 ops/s
# Warmup Iteration  16: 133197.556 ops/s
# Warmup Iteration  17: 135138.835 ops/s
# Warmup Iteration  18: 134994.888 ops/s
# Warmup Iteration  19: 135129.049 ops/s
# Warmup Iteration  20: 134778.077 ops/s
# Warmup Iteration  21: 134710.883 ops/s
# Warmup Iteration  22: 134780.056 ops/s
# Warmup Iteration  23: 135189.599 ops/s
# Warmup Iteration  24: 135302.004 ops/s
# Warmup Iteration  25: 135159.962 ops/s
# Warmup Iteration  26: 134570.724 ops/s
# Warmup Iteration  27: 135346.420 ops/s
# Warmup Iteration  28: 135143.474 ops/s
# Warmup Iteration  29: 134403.453 ops/s
# Warmup Iteration  30: 135137.278 ops/s
Iteration   1: 135161.853 ops/s
Iteration   2: 134721.433 ops/s
Iteration   3: 134724.278 ops/s
Iteration   4: 135055.152 ops/s
Iteration   5: 135174.606 ops/s
Iteration   6: 134353.529 ops/s
Iteration   7: 134404.257 ops/s
Iteration   8: 134150.997 ops/s
Iteration   9: 134750.531 ops/s
Iteration  10: 134711.107 ops/s
Iteration  11: 134772.858 ops/s
Iteration  12: 134953.951 ops/s
Iteration  13: 135014.007 ops/s
Iteration  14: 134945.350 ops/s
Iteration  15: 134927.123 ops/s
Iteration  16: 134833.461 ops/s
Iteration  17: 134865.063 ops/s
Iteration  18: 134471.811 ops/s
Iteration  19: 134447.585 ops/s
Iteration  20: 135010.959 ops/s
Iteration  21: 135019.252 ops/s
Iteration  22: 135200.130 ops/s
Iteration  23: 134730.572 ops/s
Iteration  24: 135035.385 ops/s
Iteration  25: 135059.577 ops/s
Iteration  26: 134932.380 ops/s
Iteration  27: 135193.582 ops/s
Iteration  28: 135013.189 ops/s
Iteration  29: 135108.645 ops/s
Iteration  30: 135200.970 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_675._Benchmark.benchmark_Cluster_675":
  134864.787 ±(99.9%) 184.388 ops/s [Average]
  (min, avg, max) = (134150.997, 134864.787, 135200.970), stdev = 275.984
  CI (99.9%): [134680.398, 135049.175] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_675._Benchmark.benchmark_Cluster_675  thrpt   30  134864.787 ± 184.388  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_676._Benchmark.benchmark_Cluster_676$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_676._Benchmark.benchmark_Cluster_676

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83431.632 ops/s
# Warmup Iteration   2: 135421.669 ops/s
# Warmup Iteration   3: 187763.807 ops/s
# Warmup Iteration   4: 187432.495 ops/s
# Warmup Iteration   5: 188491.951 ops/s
# Warmup Iteration   6: 188807.593 ops/s
# Warmup Iteration   7: 149670.228 ops/s
# Warmup Iteration   8: 188897.035 ops/s
# Warmup Iteration   9: 188582.454 ops/s
# Warmup Iteration  10: 188822.658 ops/s
# Warmup Iteration  11: 188188.405 ops/s
# Warmup Iteration  12: 187595.307 ops/s
# Warmup Iteration  13: 188847.142 ops/s
# Warmup Iteration  14: 188793.156 ops/s
# Warmup Iteration  15: 188788.214 ops/s
# Warmup Iteration  16: 188721.031 ops/s
# Warmup Iteration  17: 187319.029 ops/s
# Warmup Iteration  18: 188096.543 ops/s
# Warmup Iteration  19: 188040.149 ops/s
# Warmup Iteration  20: 187938.267 ops/s
# Warmup Iteration  21: 188254.702 ops/s
# Warmup Iteration  22: 188205.340 ops/s
# Warmup Iteration  23: 188034.991 ops/s
# Warmup Iteration  24: 187854.866 ops/s
# Warmup Iteration  25: 188188.634 ops/s
# Warmup Iteration  26: 187835.857 ops/s
# Warmup Iteration  27: 187703.552 ops/s
# Warmup Iteration  28: 188163.235 ops/s
# Warmup Iteration  29: 187992.194 ops/s
# Warmup Iteration  30: 188139.540 ops/s
Iteration   1: 187392.405 ops/s
Iteration   2: 186980.065 ops/s
Iteration   3: 188232.221 ops/s
Iteration   4: 187594.606 ops/s
Iteration   5: 187656.372 ops/s
Iteration   6: 188284.031 ops/s
Iteration   7: 188137.471 ops/s
Iteration   8: 187920.408 ops/s
Iteration   9: 187803.970 ops/s
Iteration  10: 188080.841 ops/s
Iteration  11: 187705.717 ops/s
Iteration  12: 188214.129 ops/s
Iteration  13: 188227.862 ops/s
Iteration  14: 188108.122 ops/s
Iteration  15: 187833.776 ops/s
Iteration  16: 188545.898 ops/s
Iteration  17: 188191.893 ops/s
Iteration  18: 187801.453 ops/s
Iteration  19: 187984.462 ops/s
Iteration  20: 187683.128 ops/s
Iteration  21: 187637.486 ops/s
Iteration  22: 187452.708 ops/s
Iteration  23: 187621.691 ops/s
Iteration  24: 187852.774 ops/s
Iteration  25: 188058.954 ops/s
Iteration  26: 187831.885 ops/s
Iteration  27: 187980.710 ops/s
Iteration  28: 188005.649 ops/s
Iteration  29: 187878.592 ops/s
Iteration  30: 188097.942 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_676._Benchmark.benchmark_Cluster_676":
  187893.241 ±(99.9%) 211.477 ops/s [Average]
  (min, avg, max) = (186980.065, 187893.241, 188545.898), stdev = 316.530
  CI (99.9%): [187681.763, 188104.718] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_676._Benchmark.benchmark_Cluster_676  thrpt   30  187893.241 ± 211.477  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_677._Benchmark.benchmark_Cluster_677$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_677._Benchmark.benchmark_Cluster_677

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54573.546 ops/s
# Warmup Iteration   2: 138154.141 ops/s
# Warmup Iteration   3: 175152.314 ops/s
# Warmup Iteration   4: 176337.524 ops/s
# Warmup Iteration   5: 139399.186 ops/s
# Warmup Iteration   6: 176030.356 ops/s
# Warmup Iteration   7: 176160.202 ops/s
# Warmup Iteration   8: 176189.124 ops/s
# Warmup Iteration   9: 176343.062 ops/s
# Warmup Iteration  10: 176025.839 ops/s
# Warmup Iteration  11: 175840.542 ops/s
# Warmup Iteration  12: 176046.341 ops/s
# Warmup Iteration  13: 175860.219 ops/s
# Warmup Iteration  14: 175867.594 ops/s
# Warmup Iteration  15: 175868.348 ops/s
# Warmup Iteration  16: 176176.679 ops/s
# Warmup Iteration  17: 175981.194 ops/s
# Warmup Iteration  18: 175715.302 ops/s
# Warmup Iteration  19: 175805.706 ops/s
# Warmup Iteration  20: 175877.890 ops/s
# Warmup Iteration  21: 176152.341 ops/s
# Warmup Iteration  22: 176034.372 ops/s
# Warmup Iteration  23: 176045.855 ops/s
# Warmup Iteration  24: 175654.758 ops/s
# Warmup Iteration  25: 176392.329 ops/s
# Warmup Iteration  26: 176255.580 ops/s
# Warmup Iteration  27: 176481.318 ops/s
# Warmup Iteration  28: 176686.798 ops/s
# Warmup Iteration  29: 176701.013 ops/s
# Warmup Iteration  30: 175998.278 ops/s
Iteration   1: 176412.904 ops/s
Iteration   2: 176143.044 ops/s
Iteration   3: 176386.255 ops/s
Iteration   4: 176449.594 ops/s
Iteration   5: 176348.865 ops/s
Iteration   6: 176469.435 ops/s
Iteration   7: 176492.107 ops/s
Iteration   8: 176689.111 ops/s
Iteration   9: 176497.114 ops/s
Iteration  10: 176531.445 ops/s
Iteration  11: 176077.332 ops/s
Iteration  12: 176623.301 ops/s
Iteration  13: 176710.912 ops/s
Iteration  14: 176086.700 ops/s
Iteration  15: 175886.889 ops/s
Iteration  16: 175473.631 ops/s
Iteration  17: 176071.827 ops/s
Iteration  18: 175773.755 ops/s
Iteration  19: 176193.048 ops/s
Iteration  20: 175891.470 ops/s
Iteration  21: 176179.846 ops/s
Iteration  22: 177007.773 ops/s
Iteration  23: 176299.961 ops/s
Iteration  24: 176089.084 ops/s
Iteration  25: 176292.306 ops/s
Iteration  26: 176188.317 ops/s
Iteration  27: 176692.598 ops/s
Iteration  28: 176529.042 ops/s
Iteration  29: 176353.346 ops/s
Iteration  30: 176057.447 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_677._Benchmark.benchmark_Cluster_677":
  176296.615 ±(99.9%) 213.042 ops/s [Average]
  (min, avg, max) = (175473.631, 176296.615, 177007.773), stdev = 318.871
  CI (99.9%): [176083.573, 176509.657] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_677._Benchmark.benchmark_Cluster_677  thrpt   30  176296.615 ± 213.042  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_678._Benchmark.benchmark_Cluster_678$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_678._Benchmark.benchmark_Cluster_678

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46990.942 ops/s
# Warmup Iteration   2: 71681.528 ops/s
# Warmup Iteration   3: 108617.668 ops/s
# Warmup Iteration   4: 113799.798 ops/s
# Warmup Iteration   5: 114523.472 ops/s
# Warmup Iteration   6: 115644.346 ops/s
# Warmup Iteration   7: 115271.617 ops/s
# Warmup Iteration   8: 114235.123 ops/s
# Warmup Iteration   9: 114231.070 ops/s
# Warmup Iteration  10: 88235.183 ops/s
# Warmup Iteration  11: 114739.132 ops/s
# Warmup Iteration  12: 114797.909 ops/s
# Warmup Iteration  13: 114850.200 ops/s
# Warmup Iteration  14: 116002.509 ops/s
# Warmup Iteration  15: 115520.282 ops/s
# Warmup Iteration  16: 115052.975 ops/s
# Warmup Iteration  17: 116060.558 ops/s
# Warmup Iteration  18: 118033.414 ops/s
# Warmup Iteration  19: 118411.694 ops/s
# Warmup Iteration  20: 117676.541 ops/s
# Warmup Iteration  21: 117380.454 ops/s
# Warmup Iteration  22: 117470.838 ops/s
# Warmup Iteration  23: 117484.171 ops/s
# Warmup Iteration  24: 116156.682 ops/s
# Warmup Iteration  25: 117481.147 ops/s
# Warmup Iteration  26: 117572.634 ops/s
# Warmup Iteration  27: 118552.390 ops/s
# Warmup Iteration  28: 118353.303 ops/s
# Warmup Iteration  29: 117715.427 ops/s
# Warmup Iteration  30: 117596.789 ops/s
Iteration   1: 117733.171 ops/s
Iteration   2: 117555.244 ops/s
Iteration   3: 117136.308 ops/s
Iteration   4: 117025.017 ops/s
Iteration   5: 117714.042 ops/s
Iteration   6: 117837.271 ops/s
Iteration   7: 117739.481 ops/s
Iteration   8: 117037.887 ops/s
Iteration   9: 117707.924 ops/s
Iteration  10: 117841.921 ops/s
Iteration  11: 118190.999 ops/s
Iteration  12: 117977.491 ops/s
Iteration  13: 117878.250 ops/s
Iteration  14: 116283.251 ops/s
Iteration  15: 118617.490 ops/s
Iteration  16: 116811.948 ops/s
Iteration  17: 116795.810 ops/s
Iteration  18: 117716.373 ops/s
Iteration  19: 117714.231 ops/s
Iteration  20: 117619.853 ops/s
Iteration  21: 117595.436 ops/s
Iteration  22: 117733.108 ops/s
Iteration  23: 117432.641 ops/s
Iteration  24: 118119.331 ops/s
Iteration  25: 118232.429 ops/s
Iteration  26: 116118.300 ops/s
Iteration  27: 117024.578 ops/s
Iteration  28: 117189.017 ops/s
Iteration  29: 116933.965 ops/s
Iteration  30: 116745.401 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_678._Benchmark.benchmark_Cluster_678":
  117468.606 ±(99.9%) 387.199 ops/s [Average]
  (min, avg, max) = (116118.300, 117468.606, 118617.490), stdev = 579.542
  CI (99.9%): [117081.407, 117855.805] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_678._Benchmark.benchmark_Cluster_678  thrpt   30  117468.606 ± 387.199  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_679._Benchmark.benchmark_Cluster_679$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_679._Benchmark.benchmark_Cluster_679

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96250.226 ops/s
# Warmup Iteration   2: 182297.208 ops/s
# Warmup Iteration   3: 235861.509 ops/s
# Warmup Iteration   4: 237213.319 ops/s
# Warmup Iteration   5: 237243.036 ops/s
# Warmup Iteration   6: 188458.307 ops/s
# Warmup Iteration   7: 237624.185 ops/s
# Warmup Iteration   8: 237933.631 ops/s
# Warmup Iteration   9: 237747.633 ops/s
# Warmup Iteration  10: 238098.348 ops/s
# Warmup Iteration  11: 238210.642 ops/s
# Warmup Iteration  12: 237910.058 ops/s
# Warmup Iteration  13: 237304.189 ops/s
# Warmup Iteration  14: 237747.959 ops/s
# Warmup Iteration  15: 237997.800 ops/s
# Warmup Iteration  16: 238034.432 ops/s
# Warmup Iteration  17: 238075.140 ops/s
# Warmup Iteration  18: 238176.579 ops/s
# Warmup Iteration  19: 238045.829 ops/s
# Warmup Iteration  20: 237891.380 ops/s
# Warmup Iteration  21: 237210.640 ops/s
# Warmup Iteration  22: 237936.446 ops/s
# Warmup Iteration  23: 237937.653 ops/s
# Warmup Iteration  24: 237745.881 ops/s
# Warmup Iteration  25: 237643.143 ops/s
# Warmup Iteration  26: 237577.503 ops/s
# Warmup Iteration  27: 238271.396 ops/s
# Warmup Iteration  28: 237902.994 ops/s
# Warmup Iteration  29: 237978.290 ops/s
# Warmup Iteration  30: 237874.639 ops/s
Iteration   1: 238067.844 ops/s
Iteration   2: 237829.314 ops/s
Iteration   3: 237772.704 ops/s
Iteration   4: 238209.314 ops/s
Iteration   5: 238002.162 ops/s
Iteration   6: 237635.117 ops/s
Iteration   7: 238265.144 ops/s
Iteration   8: 237576.890 ops/s
Iteration   9: 238342.960 ops/s
Iteration  10: 237808.688 ops/s
Iteration  11: 238195.542 ops/s
Iteration  12: 236958.712 ops/s
Iteration  13: 236804.091 ops/s
Iteration  14: 237239.667 ops/s
Iteration  15: 237702.476 ops/s
Iteration  16: 238277.796 ops/s
Iteration  17: 237932.042 ops/s
Iteration  18: 238159.963 ops/s
Iteration  19: 238083.547 ops/s
Iteration  20: 238073.184 ops/s
Iteration  21: 238233.813 ops/s
Iteration  22: 238120.430 ops/s
Iteration  23: 238410.029 ops/s
Iteration  24: 237998.376 ops/s
Iteration  25: 237001.110 ops/s
Iteration  26: 237456.948 ops/s
Iteration  27: 237581.594 ops/s
Iteration  28: 237687.796 ops/s
Iteration  29: 237572.044 ops/s
Iteration  30: 238329.747 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_679._Benchmark.benchmark_Cluster_679":
  237844.301 ±(99.9%) 287.556 ops/s [Average]
  (min, avg, max) = (236804.091, 237844.301, 238410.029), stdev = 430.401
  CI (99.9%): [237556.745, 238131.858] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_679._Benchmark.benchmark_Cluster_679  thrpt   30  237844.301 ± 287.556  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_68._Benchmark.benchmark_Cluster_68$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_68._Benchmark.benchmark_Cluster_68

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94990.253 ops/s
# Warmup Iteration   2: 106025.299 ops/s
# Warmup Iteration   3: 124968.085 ops/s
# Warmup Iteration   4: 144901.975 ops/s
# Warmup Iteration   5: 144519.855 ops/s
# Warmup Iteration   6: 144360.512 ops/s
# Warmup Iteration   7: 143771.549 ops/s
# Warmup Iteration   8: 144709.018 ops/s
# Warmup Iteration   9: 145059.828 ops/s
# Warmup Iteration  10: 144761.347 ops/s
# Warmup Iteration  11: 144917.368 ops/s
# Warmup Iteration  12: 144552.886 ops/s
# Warmup Iteration  13: 144521.136 ops/s
# Warmup Iteration  14: 120061.182 ops/s
# Warmup Iteration  15: 139247.797 ops/s
# Warmup Iteration  16: 144678.800 ops/s
# Warmup Iteration  17: 150871.557 ops/s
# Warmup Iteration  18: 151036.659 ops/s
# Warmup Iteration  19: 150944.620 ops/s
# Warmup Iteration  20: 151262.745 ops/s
# Warmup Iteration  21: 151033.864 ops/s
# Warmup Iteration  22: 150931.104 ops/s
# Warmup Iteration  23: 151226.887 ops/s
# Warmup Iteration  24: 151357.486 ops/s
# Warmup Iteration  25: 151142.601 ops/s
# Warmup Iteration  26: 150850.949 ops/s
# Warmup Iteration  27: 150839.341 ops/s
# Warmup Iteration  28: 150886.516 ops/s
# Warmup Iteration  29: 150706.427 ops/s
# Warmup Iteration  30: 151110.375 ops/s
Iteration   1: 151008.720 ops/s
Iteration   2: 151258.194 ops/s
Iteration   3: 151035.804 ops/s
Iteration   4: 150907.065 ops/s
Iteration   5: 151166.636 ops/s
Iteration   6: 150961.756 ops/s
Iteration   7: 150917.115 ops/s
Iteration   8: 151168.532 ops/s
Iteration   9: 150969.338 ops/s
Iteration  10: 151034.576 ops/s
Iteration  11: 149827.799 ops/s
Iteration  12: 151313.341 ops/s
Iteration  13: 151137.176 ops/s
Iteration  14: 150787.691 ops/s
Iteration  15: 150404.045 ops/s
Iteration  16: 150757.868 ops/s
Iteration  17: 151407.723 ops/s
Iteration  18: 151159.437 ops/s
Iteration  19: 151009.223 ops/s
Iteration  20: 151243.362 ops/s
Iteration  21: 151359.872 ops/s
Iteration  22: 151081.413 ops/s
Iteration  23: 151125.987 ops/s
Iteration  24: 150677.152 ops/s
Iteration  25: 150796.542 ops/s
Iteration  26: 150860.120 ops/s
Iteration  27: 150703.500 ops/s
Iteration  28: 150886.919 ops/s
Iteration  29: 150788.598 ops/s
Iteration  30: 150904.796 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_68._Benchmark.benchmark_Cluster_68":
  150955.343 ±(99.9%) 205.964 ops/s [Average]
  (min, avg, max) = (149827.799, 150955.343, 151407.723), stdev = 308.277
  CI (99.9%): [150749.379, 151161.307] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_68._Benchmark.benchmark_Cluster_68  thrpt   30  150955.343 ± 205.964  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_680._Benchmark.benchmark_Cluster_680$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_680._Benchmark.benchmark_Cluster_680

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51253.183 ops/s
# Warmup Iteration   2: 122620.812 ops/s
# Warmup Iteration   3: 167079.789 ops/s
# Warmup Iteration   4: 168413.102 ops/s
# Warmup Iteration   5: 140275.563 ops/s
# Warmup Iteration   6: 161066.981 ops/s
# Warmup Iteration   7: 167866.815 ops/s
# Warmup Iteration   8: 167938.433 ops/s
# Warmup Iteration   9: 168155.644 ops/s
# Warmup Iteration  10: 168677.566 ops/s
# Warmup Iteration  11: 168280.317 ops/s
# Warmup Iteration  12: 168464.395 ops/s
# Warmup Iteration  13: 167938.997 ops/s
# Warmup Iteration  14: 168176.304 ops/s
# Warmup Iteration  15: 168155.489 ops/s
# Warmup Iteration  16: 168193.531 ops/s
# Warmup Iteration  17: 168449.073 ops/s
# Warmup Iteration  18: 168752.215 ops/s
# Warmup Iteration  19: 168152.521 ops/s
# Warmup Iteration  20: 168044.911 ops/s
# Warmup Iteration  21: 167936.848 ops/s
# Warmup Iteration  22: 168186.872 ops/s
# Warmup Iteration  23: 168808.975 ops/s
# Warmup Iteration  24: 168632.310 ops/s
# Warmup Iteration  25: 168428.732 ops/s
# Warmup Iteration  26: 168554.596 ops/s
# Warmup Iteration  27: 168326.977 ops/s
# Warmup Iteration  28: 168343.843 ops/s
# Warmup Iteration  29: 168851.278 ops/s
# Warmup Iteration  30: 168650.910 ops/s
Iteration   1: 168550.022 ops/s
Iteration   2: 167919.659 ops/s
Iteration   3: 168738.599 ops/s
Iteration   4: 168135.002 ops/s
Iteration   5: 168408.557 ops/s
Iteration   6: 168106.194 ops/s
Iteration   7: 167902.584 ops/s
Iteration   8: 168465.033 ops/s
Iteration   9: 168821.628 ops/s
Iteration  10: 168673.501 ops/s
Iteration  11: 168608.225 ops/s
Iteration  12: 168651.049 ops/s
Iteration  13: 168765.437 ops/s
Iteration  14: 168270.627 ops/s
Iteration  15: 167985.575 ops/s
Iteration  16: 167997.406 ops/s
Iteration  17: 168072.706 ops/s
Iteration  18: 168308.459 ops/s
Iteration  19: 168089.786 ops/s
Iteration  20: 168195.697 ops/s
Iteration  21: 168132.593 ops/s
Iteration  22: 168467.825 ops/s
Iteration  23: 168875.106 ops/s
Iteration  24: 168722.146 ops/s
Iteration  25: 168707.702 ops/s
Iteration  26: 168688.320 ops/s
Iteration  27: 168775.962 ops/s
Iteration  28: 168122.276 ops/s
Iteration  29: 168409.604 ops/s
Iteration  30: 168467.531 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_680._Benchmark.benchmark_Cluster_680":
  168401.160 ±(99.9%) 203.074 ops/s [Average]
  (min, avg, max) = (167902.584, 168401.160, 168875.106), stdev = 303.951
  CI (99.9%): [168198.087, 168604.234] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_680._Benchmark.benchmark_Cluster_680  thrpt   30  168401.160 ± 203.074  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_681._Benchmark.benchmark_Cluster_681$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_681._Benchmark.benchmark_Cluster_681

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54338.824 ops/s
# Warmup Iteration   2: 92248.645 ops/s
# Warmup Iteration   3: 147705.260 ops/s
# Warmup Iteration   4: 147446.219 ops/s
# Warmup Iteration   5: 147840.189 ops/s
# Warmup Iteration   6: 148082.900 ops/s
# Warmup Iteration   7: 148176.336 ops/s
# Warmup Iteration   8: 122976.761 ops/s
# Warmup Iteration   9: 142167.484 ops/s
# Warmup Iteration  10: 147931.842 ops/s
# Warmup Iteration  11: 148517.498 ops/s
# Warmup Iteration  12: 148097.689 ops/s
# Warmup Iteration  13: 148116.285 ops/s
# Warmup Iteration  14: 148446.834 ops/s
# Warmup Iteration  15: 148522.429 ops/s
# Warmup Iteration  16: 148284.261 ops/s
# Warmup Iteration  17: 148552.078 ops/s
# Warmup Iteration  18: 148810.018 ops/s
# Warmup Iteration  19: 148639.549 ops/s
# Warmup Iteration  20: 148622.149 ops/s
# Warmup Iteration  21: 148624.821 ops/s
# Warmup Iteration  22: 148346.309 ops/s
# Warmup Iteration  23: 148715.649 ops/s
# Warmup Iteration  24: 148414.546 ops/s
# Warmup Iteration  25: 148458.296 ops/s
# Warmup Iteration  26: 148462.611 ops/s
# Warmup Iteration  27: 148693.863 ops/s
# Warmup Iteration  28: 148719.504 ops/s
# Warmup Iteration  29: 148491.792 ops/s
# Warmup Iteration  30: 148608.614 ops/s
Iteration   1: 148777.851 ops/s
Iteration   2: 148476.612 ops/s
Iteration   3: 148775.244 ops/s
Iteration   4: 148657.859 ops/s
Iteration   5: 148370.047 ops/s
Iteration   6: 148665.411 ops/s
Iteration   7: 148275.236 ops/s
Iteration   8: 148625.816 ops/s
Iteration   9: 148462.275 ops/s
Iteration  10: 148621.745 ops/s
Iteration  11: 148382.736 ops/s
Iteration  12: 148784.076 ops/s
Iteration  13: 148652.292 ops/s
Iteration  14: 148861.870 ops/s
Iteration  15: 148564.139 ops/s
Iteration  16: 148625.705 ops/s
Iteration  17: 148471.604 ops/s
Iteration  18: 148023.139 ops/s
Iteration  19: 148741.982 ops/s
Iteration  20: 148642.034 ops/s
Iteration  21: 148596.267 ops/s
Iteration  22: 148662.516 ops/s
Iteration  23: 148374.986 ops/s
Iteration  24: 148680.960 ops/s
Iteration  25: 148155.769 ops/s
Iteration  26: 148276.986 ops/s
Iteration  27: 148779.867 ops/s
Iteration  28: 148378.357 ops/s
Iteration  29: 148540.292 ops/s
Iteration  30: 148464.327 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_681._Benchmark.benchmark_Cluster_681":
  148545.600 ±(99.9%) 134.004 ops/s [Average]
  (min, avg, max) = (148023.139, 148545.600, 148861.870), stdev = 200.571
  CI (99.9%): [148411.596, 148679.604] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_681._Benchmark.benchmark_Cluster_681  thrpt   30  148545.600 ± 134.004  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_682._Benchmark.benchmark_Cluster_682$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_682._Benchmark.benchmark_Cluster_682

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 117203.271 ops/s
# Warmup Iteration   2: 174470.501 ops/s
# Warmup Iteration   3: 261311.603 ops/s
# Warmup Iteration   4: 259758.880 ops/s
# Warmup Iteration   5: 261101.885 ops/s
# Warmup Iteration   6: 260843.460 ops/s
# Warmup Iteration   7: 260904.385 ops/s
# Warmup Iteration   8: 210201.062 ops/s
# Warmup Iteration   9: 258049.457 ops/s
# Warmup Iteration  10: 260811.257 ops/s
# Warmup Iteration  11: 261119.006 ops/s
# Warmup Iteration  12: 261005.200 ops/s
# Warmup Iteration  13: 261251.222 ops/s
# Warmup Iteration  14: 260689.297 ops/s
# Warmup Iteration  15: 261291.609 ops/s
# Warmup Iteration  16: 261307.266 ops/s
# Warmup Iteration  17: 259240.340 ops/s
# Warmup Iteration  18: 259776.190 ops/s
# Warmup Iteration  19: 259800.489 ops/s
# Warmup Iteration  20: 260100.513 ops/s
# Warmup Iteration  21: 259947.432 ops/s
# Warmup Iteration  22: 259827.956 ops/s
# Warmup Iteration  23: 259826.819 ops/s
# Warmup Iteration  24: 260081.991 ops/s
# Warmup Iteration  25: 259944.789 ops/s
# Warmup Iteration  26: 259953.894 ops/s
# Warmup Iteration  27: 259875.852 ops/s
# Warmup Iteration  28: 259839.615 ops/s
# Warmup Iteration  29: 259678.573 ops/s
# Warmup Iteration  30: 260005.674 ops/s
Iteration   1: 260057.602 ops/s
Iteration   2: 259591.034 ops/s
Iteration   3: 260057.486 ops/s
Iteration   4: 259575.868 ops/s
Iteration   5: 259832.914 ops/s
Iteration   6: 260023.177 ops/s
Iteration   7: 259625.416 ops/s
Iteration   8: 259722.404 ops/s
Iteration   9: 259937.012 ops/s
Iteration  10: 260105.377 ops/s
Iteration  11: 259425.248 ops/s
Iteration  12: 259246.997 ops/s
Iteration  13: 259867.322 ops/s
Iteration  14: 260335.025 ops/s
Iteration  15: 265677.018 ops/s
Iteration  16: 265424.573 ops/s
Iteration  17: 265736.799 ops/s
Iteration  18: 265069.948 ops/s
Iteration  19: 265453.585 ops/s
Iteration  20: 265210.993 ops/s
Iteration  21: 264867.287 ops/s
Iteration  22: 265368.820 ops/s
Iteration  23: 264855.927 ops/s
Iteration  24: 265407.873 ops/s
Iteration  25: 265655.848 ops/s
Iteration  26: 265512.866 ops/s
Iteration  27: 265666.485 ops/s
Iteration  28: 265470.101 ops/s
Iteration  29: 265411.236 ops/s
Iteration  30: 265513.936 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_682._Benchmark.benchmark_Cluster_682":
  262790.206 ±(99.9%) 1900.618 ops/s [Average]
  (min, avg, max) = (259246.997, 262790.206, 265736.799), stdev = 2844.755
  CI (99.9%): [260889.588, 264690.824] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_682._Benchmark.benchmark_Cluster_682  thrpt   30  262790.206 ± 1900.618  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_683._Benchmark.benchmark_Cluster_683$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_683._Benchmark.benchmark_Cluster_683

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75136.405 ops/s
# Warmup Iteration   2: 116871.281 ops/s
# Warmup Iteration   3: 180975.517 ops/s
# Warmup Iteration   4: 180467.003 ops/s
# Warmup Iteration   5: 181695.375 ops/s
# Warmup Iteration   6: 181553.728 ops/s
# Warmup Iteration   7: 181384.288 ops/s
# Warmup Iteration   8: 143687.140 ops/s
# Warmup Iteration   9: 181555.669 ops/s
# Warmup Iteration  10: 181358.530 ops/s
# Warmup Iteration  11: 181389.047 ops/s
# Warmup Iteration  12: 181607.578 ops/s
# Warmup Iteration  13: 181421.608 ops/s
# Warmup Iteration  14: 181689.170 ops/s
# Warmup Iteration  15: 181821.344 ops/s
# Warmup Iteration  16: 181727.701 ops/s
# Warmup Iteration  17: 181454.636 ops/s
# Warmup Iteration  18: 181184.141 ops/s
# Warmup Iteration  19: 181518.931 ops/s
# Warmup Iteration  20: 181225.487 ops/s
# Warmup Iteration  21: 181305.662 ops/s
# Warmup Iteration  22: 181261.102 ops/s
# Warmup Iteration  23: 181016.547 ops/s
# Warmup Iteration  24: 181285.544 ops/s
# Warmup Iteration  25: 181483.633 ops/s
# Warmup Iteration  26: 181126.883 ops/s
# Warmup Iteration  27: 181448.799 ops/s
# Warmup Iteration  28: 181273.048 ops/s
# Warmup Iteration  29: 181458.295 ops/s
# Warmup Iteration  30: 181602.787 ops/s
Iteration   1: 181147.170 ops/s
Iteration   2: 181568.132 ops/s
Iteration   3: 181478.396 ops/s
Iteration   4: 181397.174 ops/s
Iteration   5: 181352.503 ops/s
Iteration   6: 181150.417 ops/s
Iteration   7: 181641.552 ops/s
Iteration   8: 181550.751 ops/s
Iteration   9: 181065.593 ops/s
Iteration  10: 181599.767 ops/s
Iteration  11: 181078.622 ops/s
Iteration  12: 180834.721 ops/s
Iteration  13: 181410.009 ops/s
Iteration  14: 181322.663 ops/s
Iteration  15: 180977.044 ops/s
Iteration  16: 180591.102 ops/s
Iteration  17: 181356.302 ops/s
Iteration  18: 181509.345 ops/s
Iteration  19: 181076.007 ops/s
Iteration  20: 181249.306 ops/s
Iteration  21: 181059.342 ops/s
Iteration  22: 181319.154 ops/s
Iteration  23: 181670.101 ops/s
Iteration  24: 181457.042 ops/s
Iteration  25: 181643.891 ops/s
Iteration  26: 181296.590 ops/s
Iteration  27: 181645.876 ops/s
Iteration  28: 181676.575 ops/s
Iteration  29: 181483.338 ops/s
Iteration  30: 181454.205 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_683._Benchmark.benchmark_Cluster_683":
  181335.423 ±(99.9%) 179.362 ops/s [Average]
  (min, avg, max) = (180591.102, 181335.423, 181676.575), stdev = 268.460
  CI (99.9%): [181156.061, 181514.785] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_683._Benchmark.benchmark_Cluster_683  thrpt   30  181335.423 ± 179.362  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_684._Benchmark.benchmark_Cluster_684$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_684._Benchmark.benchmark_Cluster_684

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 85048.133 ops/s
# Warmup Iteration   2: 148317.700 ops/s
# Warmup Iteration   3: 186375.857 ops/s
# Warmup Iteration   4: 187698.361 ops/s
# Warmup Iteration   5: 187604.469 ops/s
# Warmup Iteration   6: 149791.902 ops/s
# Warmup Iteration   7: 187856.110 ops/s
# Warmup Iteration   8: 187372.163 ops/s
# Warmup Iteration   9: 188642.337 ops/s
# Warmup Iteration  10: 187911.187 ops/s
# Warmup Iteration  11: 187977.915 ops/s
# Warmup Iteration  12: 187609.213 ops/s
# Warmup Iteration  13: 187669.843 ops/s
# Warmup Iteration  14: 187955.240 ops/s
# Warmup Iteration  15: 187581.216 ops/s
# Warmup Iteration  16: 188641.077 ops/s
# Warmup Iteration  17: 187519.569 ops/s
# Warmup Iteration  18: 187831.795 ops/s
# Warmup Iteration  19: 187704.902 ops/s
# Warmup Iteration  20: 188108.072 ops/s
# Warmup Iteration  21: 188148.021 ops/s
# Warmup Iteration  22: 187632.446 ops/s
# Warmup Iteration  23: 187558.353 ops/s
# Warmup Iteration  24: 188695.122 ops/s
# Warmup Iteration  25: 187904.224 ops/s
# Warmup Iteration  26: 188146.041 ops/s
# Warmup Iteration  27: 189183.119 ops/s
# Warmup Iteration  28: 187471.066 ops/s
# Warmup Iteration  29: 187561.542 ops/s
# Warmup Iteration  30: 187759.959 ops/s
Iteration   1: 188294.912 ops/s
Iteration   2: 187726.901 ops/s
Iteration   3: 187909.412 ops/s
Iteration   4: 187952.211 ops/s
Iteration   5: 187532.210 ops/s
Iteration   6: 187492.650 ops/s
Iteration   7: 188115.530 ops/s
Iteration   8: 187670.725 ops/s
Iteration   9: 187470.812 ops/s
Iteration  10: 188150.829 ops/s
Iteration  11: 187828.566 ops/s
Iteration  12: 188018.268 ops/s
Iteration  13: 187728.178 ops/s
Iteration  14: 187669.210 ops/s
Iteration  15: 187027.821 ops/s
Iteration  16: 187707.803 ops/s
Iteration  17: 187503.203 ops/s
Iteration  18: 188042.318 ops/s
Iteration  19: 188594.876 ops/s
Iteration  20: 188854.297 ops/s
Iteration  21: 189226.332 ops/s
Iteration  22: 188997.008 ops/s
Iteration  23: 188048.392 ops/s
Iteration  24: 187047.839 ops/s
Iteration  25: 187427.887 ops/s
Iteration  26: 187506.368 ops/s
Iteration  27: 188236.898 ops/s
Iteration  28: 187554.637 ops/s
Iteration  29: 188018.519 ops/s
Iteration  30: 186897.007 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_684._Benchmark.benchmark_Cluster_684":
  187875.054 ±(99.9%) 364.457 ops/s [Average]
  (min, avg, max) = (186897.007, 187875.054, 189226.332), stdev = 545.502
  CI (99.9%): [187510.597, 188239.511] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_684._Benchmark.benchmark_Cluster_684  thrpt   30  187875.054 ± 364.457  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_685._Benchmark.benchmark_Cluster_685$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_685._Benchmark.benchmark_Cluster_685

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59868.607 ops/s
# Warmup Iteration   2: 111495.069 ops/s
# Warmup Iteration   3: 138890.840 ops/s
# Warmup Iteration   4: 139981.875 ops/s
# Warmup Iteration   5: 140026.661 ops/s
# Warmup Iteration   6: 111345.019 ops/s
# Warmup Iteration   7: 139643.538 ops/s
# Warmup Iteration   8: 139469.643 ops/s
# Warmup Iteration   9: 139489.144 ops/s
# Warmup Iteration  10: 139374.510 ops/s
# Warmup Iteration  11: 139882.986 ops/s
# Warmup Iteration  12: 139331.841 ops/s
# Warmup Iteration  13: 139577.132 ops/s
# Warmup Iteration  14: 139271.703 ops/s
# Warmup Iteration  15: 139249.109 ops/s
# Warmup Iteration  16: 139715.675 ops/s
# Warmup Iteration  17: 139560.855 ops/s
# Warmup Iteration  18: 139435.112 ops/s
# Warmup Iteration  19: 139157.448 ops/s
# Warmup Iteration  20: 139321.045 ops/s
# Warmup Iteration  21: 139532.884 ops/s
# Warmup Iteration  22: 139274.167 ops/s
# Warmup Iteration  23: 139410.324 ops/s
# Warmup Iteration  24: 139341.085 ops/s
# Warmup Iteration  25: 139529.342 ops/s
# Warmup Iteration  26: 139667.533 ops/s
# Warmup Iteration  27: 139100.543 ops/s
# Warmup Iteration  28: 139189.552 ops/s
# Warmup Iteration  29: 139611.514 ops/s
# Warmup Iteration  30: 139301.804 ops/s
Iteration   1: 139621.908 ops/s
Iteration   2: 139787.701 ops/s
Iteration   3: 139541.383 ops/s
Iteration   4: 139143.849 ops/s
Iteration   5: 139320.625 ops/s
Iteration   6: 139426.870 ops/s
Iteration   7: 139365.535 ops/s
Iteration   8: 139537.676 ops/s
Iteration   9: 139502.716 ops/s
Iteration  10: 139314.160 ops/s
Iteration  11: 139674.065 ops/s
Iteration  12: 139593.521 ops/s
Iteration  13: 139269.554 ops/s
Iteration  14: 139548.332 ops/s
Iteration  15: 139159.888 ops/s
Iteration  16: 139143.628 ops/s
Iteration  17: 139444.719 ops/s
Iteration  18: 139421.884 ops/s
Iteration  19: 139397.485 ops/s
Iteration  20: 139723.026 ops/s
Iteration  21: 139357.928 ops/s
Iteration  22: 139673.323 ops/s
Iteration  23: 139618.244 ops/s
Iteration  24: 139883.558 ops/s
Iteration  25: 139001.414 ops/s
Iteration  26: 139206.896 ops/s
Iteration  27: 139041.581 ops/s
Iteration  28: 139308.442 ops/s
Iteration  29: 139373.085 ops/s
Iteration  30: 139150.716 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_685._Benchmark.benchmark_Cluster_685":
  139418.457 ±(99.9%) 149.684 ops/s [Average]
  (min, avg, max) = (139001.414, 139418.457, 139883.558), stdev = 224.040
  CI (99.9%): [139268.773, 139568.141] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_685._Benchmark.benchmark_Cluster_685  thrpt   30  139418.457 ± 149.684  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_686._Benchmark.benchmark_Cluster_686$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_686._Benchmark.benchmark_Cluster_686

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91274.480 ops/s
# Warmup Iteration   2: 104302.851 ops/s
# Warmup Iteration   3: 104969.666 ops/s
# Warmup Iteration   4: 127989.873 ops/s
# Warmup Iteration   5: 133748.467 ops/s
# Warmup Iteration   6: 133234.476 ops/s
# Warmup Iteration   7: 133126.700 ops/s
# Warmup Iteration   8: 132367.795 ops/s
# Warmup Iteration   9: 133917.858 ops/s
# Warmup Iteration  10: 133472.308 ops/s
# Warmup Iteration  11: 132906.724 ops/s
# Warmup Iteration  12: 133033.524 ops/s
# Warmup Iteration  13: 133269.922 ops/s
# Warmup Iteration  14: 133256.865 ops/s
# Warmup Iteration  15: 133292.692 ops/s
# Warmup Iteration  16: 133422.472 ops/s
# Warmup Iteration  17: 140895.117 ops/s
# Warmup Iteration  18: 128592.351 ops/s
# Warmup Iteration  19: 123123.947 ops/s
# Warmup Iteration  20: 139909.615 ops/s
# Warmup Iteration  21: 140013.196 ops/s
# Warmup Iteration  22: 139913.086 ops/s
# Warmup Iteration  23: 140589.140 ops/s
# Warmup Iteration  24: 140468.211 ops/s
# Warmup Iteration  25: 140077.326 ops/s
# Warmup Iteration  26: 140387.467 ops/s
# Warmup Iteration  27: 140173.910 ops/s
# Warmup Iteration  28: 140059.330 ops/s
# Warmup Iteration  29: 139916.811 ops/s
# Warmup Iteration  30: 140478.971 ops/s
Iteration   1: 140614.693 ops/s
Iteration   2: 140372.483 ops/s
Iteration   3: 140369.464 ops/s
Iteration   4: 140292.362 ops/s
Iteration   5: 140547.130 ops/s
Iteration   6: 140356.701 ops/s
Iteration   7: 140250.431 ops/s
Iteration   8: 140203.186 ops/s
Iteration   9: 140438.483 ops/s
Iteration  10: 139826.724 ops/s
Iteration  11: 140470.471 ops/s
Iteration  12: 140218.926 ops/s
Iteration  13: 139837.019 ops/s
Iteration  14: 140530.171 ops/s
Iteration  15: 140443.436 ops/s
Iteration  16: 140504.490 ops/s
Iteration  17: 140506.926 ops/s
Iteration  18: 140534.551 ops/s
Iteration  19: 140338.285 ops/s
Iteration  20: 140543.185 ops/s
Iteration  21: 140269.470 ops/s
Iteration  22: 140371.083 ops/s
Iteration  23: 140133.752 ops/s
Iteration  24: 140242.186 ops/s
Iteration  25: 140265.149 ops/s
Iteration  26: 140235.899 ops/s
Iteration  27: 139812.498 ops/s
Iteration  28: 139952.985 ops/s
Iteration  29: 140154.066 ops/s
Iteration  30: 140163.112 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_686._Benchmark.benchmark_Cluster_686":
  140293.311 ±(99.9%) 146.340 ops/s [Average]
  (min, avg, max) = (139812.498, 140293.311, 140614.693), stdev = 219.034
  CI (99.9%): [140146.971, 140439.650] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_686._Benchmark.benchmark_Cluster_686  thrpt   30  140293.311 ± 146.340  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_687._Benchmark.benchmark_Cluster_687$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_687._Benchmark.benchmark_Cluster_687

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57340.499 ops/s
# Warmup Iteration   2: 79373.361 ops/s
# Warmup Iteration   3: 124651.619 ops/s
# Warmup Iteration   4: 125224.930 ops/s
# Warmup Iteration   5: 124136.819 ops/s
# Warmup Iteration   6: 125041.517 ops/s
# Warmup Iteration   7: 125096.712 ops/s
# Warmup Iteration   8: 125149.841 ops/s
# Warmup Iteration   9: 98657.047 ops/s
# Warmup Iteration  10: 125291.226 ops/s
# Warmup Iteration  11: 125248.930 ops/s
# Warmup Iteration  12: 125206.532 ops/s
# Warmup Iteration  13: 124991.196 ops/s
# Warmup Iteration  14: 125171.688 ops/s
# Warmup Iteration  15: 125217.086 ops/s
# Warmup Iteration  16: 125275.835 ops/s
# Warmup Iteration  17: 125762.804 ops/s
# Warmup Iteration  18: 125571.271 ops/s
# Warmup Iteration  19: 125532.739 ops/s
# Warmup Iteration  20: 125592.320 ops/s
# Warmup Iteration  21: 125599.092 ops/s
# Warmup Iteration  22: 125659.562 ops/s
# Warmup Iteration  23: 125679.124 ops/s
# Warmup Iteration  24: 125423.727 ops/s
# Warmup Iteration  25: 125469.922 ops/s
# Warmup Iteration  26: 125861.102 ops/s
# Warmup Iteration  27: 125643.127 ops/s
# Warmup Iteration  28: 125576.713 ops/s
# Warmup Iteration  29: 125546.681 ops/s
# Warmup Iteration  30: 125695.869 ops/s
Iteration   1: 125627.491 ops/s
Iteration   2: 125626.877 ops/s
Iteration   3: 125542.372 ops/s
Iteration   4: 125420.697 ops/s
Iteration   5: 125752.093 ops/s
Iteration   6: 125721.590 ops/s
Iteration   7: 125452.727 ops/s
Iteration   8: 125671.148 ops/s
Iteration   9: 125718.648 ops/s
Iteration  10: 125409.241 ops/s
Iteration  11: 125826.788 ops/s
Iteration  12: 125804.147 ops/s
Iteration  13: 125599.570 ops/s
Iteration  14: 125605.862 ops/s
Iteration  15: 125657.079 ops/s
Iteration  16: 125591.785 ops/s
Iteration  17: 125492.260 ops/s
Iteration  18: 125418.141 ops/s
Iteration  19: 125369.802 ops/s
Iteration  20: 125743.445 ops/s
Iteration  21: 125374.479 ops/s
Iteration  22: 125726.067 ops/s
Iteration  23: 125682.594 ops/s
Iteration  24: 125544.022 ops/s
Iteration  25: 125290.521 ops/s
Iteration  26: 125727.589 ops/s
Iteration  27: 125439.827 ops/s
Iteration  28: 125739.129 ops/s
Iteration  29: 125663.814 ops/s
Iteration  30: 125416.227 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_687._Benchmark.benchmark_Cluster_687":
  125588.534 ±(99.9%) 98.823 ops/s [Average]
  (min, avg, max) = (125290.521, 125588.534, 125826.788), stdev = 147.914
  CI (99.9%): [125489.711, 125687.358] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score    Error  Units
Cluster_687._Benchmark.benchmark_Cluster_687  thrpt   30  125588.534 ± 98.823  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_688._Benchmark.benchmark_Cluster_688$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_688._Benchmark.benchmark_Cluster_688

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 89348.401 ops/s
# Warmup Iteration   2: 135175.004 ops/s
# Warmup Iteration   3: 198702.102 ops/s
# Warmup Iteration   4: 197158.112 ops/s
# Warmup Iteration   5: 198732.392 ops/s
# Warmup Iteration   6: 198961.850 ops/s
# Warmup Iteration   7: 198820.964 ops/s
# Warmup Iteration   8: 158595.340 ops/s
# Warmup Iteration   9: 198965.408 ops/s
# Warmup Iteration  10: 198946.141 ops/s
# Warmup Iteration  11: 198670.958 ops/s
# Warmup Iteration  12: 198958.180 ops/s
# Warmup Iteration  13: 198980.770 ops/s
# Warmup Iteration  14: 199099.458 ops/s
# Warmup Iteration  15: 198530.080 ops/s
# Warmup Iteration  16: 198761.834 ops/s
# Warmup Iteration  17: 198762.530 ops/s
# Warmup Iteration  18: 198575.633 ops/s
# Warmup Iteration  19: 198630.831 ops/s
# Warmup Iteration  20: 198945.482 ops/s
# Warmup Iteration  21: 199040.539 ops/s
# Warmup Iteration  22: 198771.079 ops/s
# Warmup Iteration  23: 198990.995 ops/s
# Warmup Iteration  24: 198873.310 ops/s
# Warmup Iteration  25: 198688.028 ops/s
# Warmup Iteration  26: 198555.869 ops/s
# Warmup Iteration  27: 198981.322 ops/s
# Warmup Iteration  28: 199215.879 ops/s
# Warmup Iteration  29: 199180.336 ops/s
# Warmup Iteration  30: 198762.547 ops/s
Iteration   1: 198941.453 ops/s
Iteration   2: 198699.068 ops/s
Iteration   3: 198641.988 ops/s
Iteration   4: 198612.743 ops/s
Iteration   5: 198991.590 ops/s
Iteration   6: 199082.224 ops/s
Iteration   7: 198906.657 ops/s
Iteration   8: 198861.974 ops/s
Iteration   9: 198946.042 ops/s
Iteration  10: 199020.252 ops/s
Iteration  11: 198978.041 ops/s
Iteration  12: 198911.457 ops/s
Iteration  13: 199293.108 ops/s
Iteration  14: 198798.397 ops/s
Iteration  15: 199084.978 ops/s
Iteration  16: 198951.643 ops/s
Iteration  17: 199113.166 ops/s
Iteration  18: 198410.408 ops/s
Iteration  19: 198812.771 ops/s
Iteration  20: 198973.772 ops/s
Iteration  21: 198224.932 ops/s
Iteration  22: 198925.049 ops/s
Iteration  23: 198960.775 ops/s
Iteration  24: 198638.535 ops/s
Iteration  25: 199189.536 ops/s
Iteration  26: 198923.747 ops/s
Iteration  27: 198704.314 ops/s
Iteration  28: 198332.464 ops/s
Iteration  29: 198785.679 ops/s
Iteration  30: 198557.810 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_688._Benchmark.benchmark_Cluster_688":
  198842.486 ±(99.9%) 164.643 ops/s [Average]
  (min, avg, max) = (198224.932, 198842.486, 199293.108), stdev = 246.430
  CI (99.9%): [198677.842, 199007.129] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_688._Benchmark.benchmark_Cluster_688  thrpt   30  198842.486 ± 164.643  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_689._Benchmark.benchmark_Cluster_689$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_689._Benchmark.benchmark_Cluster_689

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64896.810 ops/s
# Warmup Iteration   2: 85202.615 ops/s
# Warmup Iteration   3: 117013.396 ops/s
# Warmup Iteration   4: 128091.692 ops/s
# Warmup Iteration   5: 127008.764 ops/s
# Warmup Iteration   6: 128193.595 ops/s
# Warmup Iteration   7: 127817.511 ops/s
# Warmup Iteration   8: 126914.496 ops/s
# Warmup Iteration   9: 127732.813 ops/s
# Warmup Iteration  10: 126930.148 ops/s
# Warmup Iteration  11: 107116.460 ops/s
# Warmup Iteration  12: 119580.892 ops/s
# Warmup Iteration  13: 127596.585 ops/s
# Warmup Iteration  14: 127645.113 ops/s
# Warmup Iteration  15: 127027.406 ops/s
# Warmup Iteration  16: 127511.693 ops/s
# Warmup Iteration  17: 133443.772 ops/s
# Warmup Iteration  18: 133348.388 ops/s
# Warmup Iteration  19: 133230.185 ops/s
# Warmup Iteration  20: 133276.472 ops/s
# Warmup Iteration  21: 132844.627 ops/s
# Warmup Iteration  22: 133714.791 ops/s
# Warmup Iteration  23: 133750.288 ops/s
# Warmup Iteration  24: 133336.236 ops/s
# Warmup Iteration  25: 133852.603 ops/s
# Warmup Iteration  26: 133126.616 ops/s
# Warmup Iteration  27: 133506.233 ops/s
# Warmup Iteration  28: 133543.796 ops/s
# Warmup Iteration  29: 133363.527 ops/s
# Warmup Iteration  30: 133577.730 ops/s
Iteration   1: 133538.832 ops/s
Iteration   2: 133556.247 ops/s
Iteration   3: 133869.493 ops/s
Iteration   4: 133716.140 ops/s
Iteration   5: 133920.980 ops/s
Iteration   6: 133483.007 ops/s
Iteration   7: 133808.961 ops/s
Iteration   8: 134284.291 ops/s
Iteration   9: 133153.800 ops/s
Iteration  10: 133364.916 ops/s
Iteration  11: 133431.842 ops/s
Iteration  12: 133299.882 ops/s
Iteration  13: 132835.779 ops/s
Iteration  14: 133502.641 ops/s
Iteration  15: 134236.614 ops/s
Iteration  16: 133807.808 ops/s
Iteration  17: 134040.464 ops/s
Iteration  18: 134001.725 ops/s
Iteration  19: 134085.831 ops/s
Iteration  20: 133828.098 ops/s
Iteration  21: 133833.236 ops/s
Iteration  22: 133610.110 ops/s
Iteration  23: 134065.516 ops/s
Iteration  24: 134063.179 ops/s
Iteration  25: 134225.616 ops/s
Iteration  26: 134180.535 ops/s
Iteration  27: 133242.604 ops/s
Iteration  28: 134218.972 ops/s
Iteration  29: 133374.164 ops/s
Iteration  30: 134024.293 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_689._Benchmark.benchmark_Cluster_689":
  133753.519 ±(99.9%) 248.984 ops/s [Average]
  (min, avg, max) = (132835.779, 133753.519, 134284.291), stdev = 372.667
  CI (99.9%): [133504.536, 134002.503] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_689._Benchmark.benchmark_Cluster_689  thrpt   30  133753.519 ± 248.984  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_69._Benchmark.benchmark_Cluster_69$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_69._Benchmark.benchmark_Cluster_69

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 159676.049 ops/s
# Warmup Iteration   2: 184866.833 ops/s
# Warmup Iteration   3: 250008.625 ops/s
# Warmup Iteration   4: 266840.059 ops/s
# Warmup Iteration   5: 266674.273 ops/s
# Warmup Iteration   6: 265374.745 ops/s
# Warmup Iteration   7: 266248.223 ops/s
# Warmup Iteration   8: 266588.158 ops/s
# Warmup Iteration   9: 268247.987 ops/s
# Warmup Iteration  10: 267488.799 ops/s
# Warmup Iteration  11: 251138.890 ops/s
# Warmup Iteration  12: 227479.524 ops/s
# Warmup Iteration  13: 266067.357 ops/s
# Warmup Iteration  14: 266033.358 ops/s
# Warmup Iteration  15: 266146.720 ops/s
# Warmup Iteration  16: 266605.849 ops/s
# Warmup Iteration  17: 280332.966 ops/s
# Warmup Iteration  18: 279943.134 ops/s
# Warmup Iteration  19: 279970.363 ops/s
# Warmup Iteration  20: 279309.441 ops/s
# Warmup Iteration  21: 279664.382 ops/s
# Warmup Iteration  22: 279128.167 ops/s
# Warmup Iteration  23: 277983.761 ops/s
# Warmup Iteration  24: 279222.677 ops/s
# Warmup Iteration  25: 277480.057 ops/s
# Warmup Iteration  26: 277441.114 ops/s
# Warmup Iteration  27: 279654.952 ops/s
# Warmup Iteration  28: 279951.940 ops/s
# Warmup Iteration  29: 278862.957 ops/s
# Warmup Iteration  30: 279523.918 ops/s
Iteration   1: 278235.082 ops/s
Iteration   2: 279916.258 ops/s
Iteration   3: 279180.943 ops/s
Iteration   4: 278665.555 ops/s
Iteration   5: 278874.740 ops/s
Iteration   6: 280205.115 ops/s
Iteration   7: 280142.860 ops/s
Iteration   8: 279241.785 ops/s
Iteration   9: 279210.080 ops/s
Iteration  10: 278611.447 ops/s
Iteration  11: 278865.044 ops/s
Iteration  12: 279537.466 ops/s
Iteration  13: 279058.105 ops/s
Iteration  14: 279490.376 ops/s
Iteration  15: 279887.716 ops/s
Iteration  16: 279438.945 ops/s
Iteration  17: 280300.334 ops/s
Iteration  18: 279858.989 ops/s
Iteration  19: 279587.608 ops/s
Iteration  20: 280159.003 ops/s
Iteration  21: 280167.933 ops/s
Iteration  22: 279608.199 ops/s
Iteration  23: 278626.777 ops/s
Iteration  24: 279535.178 ops/s
Iteration  25: 279599.498 ops/s
Iteration  26: 279655.020 ops/s
Iteration  27: 280061.995 ops/s
Iteration  28: 280053.866 ops/s
Iteration  29: 279978.111 ops/s
Iteration  30: 279473.132 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_69._Benchmark.benchmark_Cluster_69":
  279507.572 ±(99.9%) 369.793 ops/s [Average]
  (min, avg, max) = (278235.082, 279507.572, 280300.334), stdev = 553.488
  CI (99.9%): [279137.779, 279877.365] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_69._Benchmark.benchmark_Cluster_69  thrpt   30  279507.572 ± 369.793  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_690._Benchmark.benchmark_Cluster_690$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_690._Benchmark.benchmark_Cluster_690

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91698.255 ops/s
# Warmup Iteration   2: 126769.256 ops/s
# Warmup Iteration   3: 184325.073 ops/s
# Warmup Iteration   4: 183256.242 ops/s
# Warmup Iteration   5: 184734.582 ops/s
# Warmup Iteration   6: 184735.939 ops/s
# Warmup Iteration   7: 184943.691 ops/s
# Warmup Iteration   8: 165018.443 ops/s
# Warmup Iteration   9: 166662.962 ops/s
# Warmup Iteration  10: 185149.314 ops/s
# Warmup Iteration  11: 184685.555 ops/s
# Warmup Iteration  12: 184788.675 ops/s
# Warmup Iteration  13: 185119.415 ops/s
# Warmup Iteration  14: 185023.906 ops/s
# Warmup Iteration  15: 184656.818 ops/s
# Warmup Iteration  16: 184930.688 ops/s
# Warmup Iteration  17: 185010.185 ops/s
# Warmup Iteration  18: 184842.697 ops/s
# Warmup Iteration  19: 184801.637 ops/s
# Warmup Iteration  20: 184926.318 ops/s
# Warmup Iteration  21: 184431.425 ops/s
# Warmup Iteration  22: 184671.473 ops/s
# Warmup Iteration  23: 185202.103 ops/s
# Warmup Iteration  24: 185111.551 ops/s
# Warmup Iteration  25: 184629.082 ops/s
# Warmup Iteration  26: 184804.325 ops/s
# Warmup Iteration  27: 183883.518 ops/s
# Warmup Iteration  28: 185012.667 ops/s
# Warmup Iteration  29: 184993.183 ops/s
# Warmup Iteration  30: 184929.817 ops/s
Iteration   1: 185242.873 ops/s
Iteration   2: 184677.747 ops/s
Iteration   3: 184913.763 ops/s
Iteration   4: 184491.770 ops/s
Iteration   5: 183970.280 ops/s
Iteration   6: 184954.052 ops/s
Iteration   7: 185159.330 ops/s
Iteration   8: 185086.956 ops/s
Iteration   9: 184615.453 ops/s
Iteration  10: 184054.677 ops/s
Iteration  11: 184559.857 ops/s
Iteration  12: 184480.785 ops/s
Iteration  13: 184564.371 ops/s
Iteration  14: 185104.840 ops/s
Iteration  15: 185216.181 ops/s
Iteration  16: 184406.566 ops/s
Iteration  17: 185014.746 ops/s
Iteration  18: 184901.169 ops/s
Iteration  19: 185135.876 ops/s
Iteration  20: 184857.638 ops/s
Iteration  21: 184224.847 ops/s
Iteration  22: 184959.489 ops/s
Iteration  23: 185025.428 ops/s
Iteration  24: 185001.472 ops/s
Iteration  25: 185099.209 ops/s
Iteration  26: 184480.197 ops/s
Iteration  27: 184781.395 ops/s
Iteration  28: 185123.481 ops/s
Iteration  29: 184821.123 ops/s
Iteration  30: 185090.883 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_690._Benchmark.benchmark_Cluster_690":
  184800.548 ±(99.9%) 231.115 ops/s [Average]
  (min, avg, max) = (183970.280, 184800.548, 185242.873), stdev = 345.922
  CI (99.9%): [184569.433, 185031.664] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_690._Benchmark.benchmark_Cluster_690  thrpt   30  184800.548 ± 231.115  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_691._Benchmark.benchmark_Cluster_691$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_691._Benchmark.benchmark_Cluster_691

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 49020.445 ops/s
# Warmup Iteration   2: 104767.183 ops/s
# Warmup Iteration   3: 159553.150 ops/s
# Warmup Iteration   4: 158666.830 ops/s
# Warmup Iteration   5: 159802.943 ops/s
# Warmup Iteration   6: 149992.075 ops/s
# Warmup Iteration   7: 137312.842 ops/s
# Warmup Iteration   8: 159656.631 ops/s
# Warmup Iteration   9: 159965.676 ops/s
# Warmup Iteration  10: 160038.421 ops/s
# Warmup Iteration  11: 159019.652 ops/s
# Warmup Iteration  12: 159599.850 ops/s
# Warmup Iteration  13: 159303.534 ops/s
# Warmup Iteration  14: 159765.220 ops/s
# Warmup Iteration  15: 159982.265 ops/s
# Warmup Iteration  16: 160062.499 ops/s
# Warmup Iteration  17: 159431.624 ops/s
# Warmup Iteration  18: 159387.201 ops/s
# Warmup Iteration  19: 159656.475 ops/s
# Warmup Iteration  20: 159430.843 ops/s
# Warmup Iteration  21: 159487.058 ops/s
# Warmup Iteration  22: 159583.246 ops/s
# Warmup Iteration  23: 159089.471 ops/s
# Warmup Iteration  24: 159446.556 ops/s
# Warmup Iteration  25: 160009.369 ops/s
# Warmup Iteration  26: 159648.742 ops/s
# Warmup Iteration  27: 159595.429 ops/s
# Warmup Iteration  28: 159415.587 ops/s
# Warmup Iteration  29: 159178.838 ops/s
# Warmup Iteration  30: 159494.196 ops/s
Iteration   1: 159769.302 ops/s
Iteration   2: 159670.128 ops/s
Iteration   3: 159270.386 ops/s
Iteration   4: 160031.907 ops/s
Iteration   5: 159665.158 ops/s
Iteration   6: 159959.716 ops/s
Iteration   7: 159507.611 ops/s
Iteration   8: 160079.388 ops/s
Iteration   9: 159484.481 ops/s
Iteration  10: 159684.694 ops/s
Iteration  11: 159549.523 ops/s
Iteration  12: 159817.116 ops/s
Iteration  13: 159086.862 ops/s
Iteration  14: 159521.312 ops/s
Iteration  15: 159528.087 ops/s
Iteration  16: 160083.676 ops/s
Iteration  17: 159801.640 ops/s
Iteration  18: 159532.528 ops/s
Iteration  19: 159751.547 ops/s
Iteration  20: 159238.478 ops/s
Iteration  21: 159735.020 ops/s
Iteration  22: 159612.972 ops/s
Iteration  23: 159660.772 ops/s
Iteration  24: 159574.001 ops/s
Iteration  25: 159837.749 ops/s
Iteration  26: 159403.138 ops/s
Iteration  27: 159633.580 ops/s
Iteration  28: 159474.301 ops/s
Iteration  29: 159651.105 ops/s
Iteration  30: 159815.934 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_691._Benchmark.benchmark_Cluster_691":
  159647.737 ±(99.9%) 156.652 ops/s [Average]
  (min, avg, max) = (159086.862, 159647.737, 160083.676), stdev = 234.470
  CI (99.9%): [159491.085, 159804.389] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_691._Benchmark.benchmark_Cluster_691  thrpt   30  159647.737 ± 156.652  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_692._Benchmark.benchmark_Cluster_692$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_692._Benchmark.benchmark_Cluster_692

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55936.198 ops/s
# Warmup Iteration   2: 109901.899 ops/s
# Warmup Iteration   3: 148515.297 ops/s
# Warmup Iteration   4: 149715.467 ops/s
# Warmup Iteration   5: 149383.174 ops/s
# Warmup Iteration   6: 118341.091 ops/s
# Warmup Iteration   7: 150258.484 ops/s
# Warmup Iteration   8: 150098.561 ops/s
# Warmup Iteration   9: 150076.573 ops/s
# Warmup Iteration  10: 149867.246 ops/s
# Warmup Iteration  11: 149584.064 ops/s
# Warmup Iteration  12: 149327.377 ops/s
# Warmup Iteration  13: 149817.037 ops/s
# Warmup Iteration  14: 149986.089 ops/s
# Warmup Iteration  15: 149853.123 ops/s
# Warmup Iteration  16: 149955.569 ops/s
# Warmup Iteration  17: 149550.597 ops/s
# Warmup Iteration  18: 149400.314 ops/s
# Warmup Iteration  19: 149349.629 ops/s
# Warmup Iteration  20: 149548.062 ops/s
# Warmup Iteration  21: 150004.250 ops/s
# Warmup Iteration  22: 149798.167 ops/s
# Warmup Iteration  23: 150206.349 ops/s
# Warmup Iteration  24: 150078.431 ops/s
# Warmup Iteration  25: 149797.906 ops/s
# Warmup Iteration  26: 149866.849 ops/s
# Warmup Iteration  27: 150199.738 ops/s
# Warmup Iteration  28: 150134.136 ops/s
# Warmup Iteration  29: 150185.998 ops/s
# Warmup Iteration  30: 149694.627 ops/s
Iteration   1: 149747.465 ops/s
Iteration   2: 150111.417 ops/s
Iteration   3: 149986.466 ops/s
Iteration   4: 149199.695 ops/s
Iteration   5: 150166.241 ops/s
Iteration   6: 149770.964 ops/s
Iteration   7: 149885.760 ops/s
Iteration   8: 149707.509 ops/s
Iteration   9: 150165.830 ops/s
Iteration  10: 150019.775 ops/s
Iteration  11: 150035.217 ops/s
Iteration  12: 150199.151 ops/s
Iteration  13: 149966.693 ops/s
Iteration  14: 150108.364 ops/s
Iteration  15: 149858.122 ops/s
Iteration  16: 150136.603 ops/s
Iteration  17: 149855.419 ops/s
Iteration  18: 149899.202 ops/s
Iteration  19: 150156.876 ops/s
Iteration  20: 149682.612 ops/s
Iteration  21: 150012.737 ops/s
Iteration  22: 149661.146 ops/s
Iteration  23: 149693.188 ops/s
Iteration  24: 150037.497 ops/s
Iteration  25: 149809.758 ops/s
Iteration  26: 150072.971 ops/s
Iteration  27: 149963.667 ops/s
Iteration  28: 150200.296 ops/s
Iteration  29: 150007.659 ops/s
Iteration  30: 150006.320 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_692._Benchmark.benchmark_Cluster_692":
  149937.487 ±(99.9%) 144.084 ops/s [Average]
  (min, avg, max) = (149199.695, 149937.487, 150200.296), stdev = 215.658
  CI (99.9%): [149793.404, 150081.571] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_692._Benchmark.benchmark_Cluster_692  thrpt   30  149937.487 ± 144.084  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_693._Benchmark.benchmark_Cluster_693$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_693._Benchmark.benchmark_Cluster_693

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76937.854 ops/s
# Warmup Iteration   2: 166363.583 ops/s
# Warmup Iteration   3: 205527.379 ops/s
# Warmup Iteration   4: 207028.075 ops/s
# Warmup Iteration   5: 168716.889 ops/s
# Warmup Iteration   6: 204831.738 ops/s
# Warmup Iteration   7: 206450.688 ops/s
# Warmup Iteration   8: 207054.304 ops/s
# Warmup Iteration   9: 206906.528 ops/s
# Warmup Iteration  10: 206102.239 ops/s
# Warmup Iteration  11: 205963.264 ops/s
# Warmup Iteration  12: 207154.806 ops/s
# Warmup Iteration  13: 207159.543 ops/s
# Warmup Iteration  14: 207043.782 ops/s
# Warmup Iteration  15: 206873.836 ops/s
# Warmup Iteration  16: 207070.132 ops/s
# Warmup Iteration  17: 207085.093 ops/s
# Warmup Iteration  18: 207027.907 ops/s
# Warmup Iteration  19: 207151.097 ops/s
# Warmup Iteration  20: 207196.547 ops/s
# Warmup Iteration  21: 207263.505 ops/s
# Warmup Iteration  22: 205975.280 ops/s
# Warmup Iteration  23: 206304.701 ops/s
# Warmup Iteration  24: 206697.384 ops/s
# Warmup Iteration  25: 206604.362 ops/s
# Warmup Iteration  26: 206842.707 ops/s
# Warmup Iteration  27: 206872.984 ops/s
# Warmup Iteration  28: 205961.118 ops/s
# Warmup Iteration  29: 205811.103 ops/s
# Warmup Iteration  30: 206692.563 ops/s
Iteration   1: 206310.469 ops/s
Iteration   2: 206226.022 ops/s
Iteration   3: 206240.981 ops/s
Iteration   4: 206702.199 ops/s
Iteration   5: 206752.605 ops/s
Iteration   6: 206818.772 ops/s
Iteration   7: 207354.765 ops/s
Iteration   8: 207019.886 ops/s
Iteration   9: 206977.995 ops/s
Iteration  10: 207267.017 ops/s
Iteration  11: 207128.775 ops/s
Iteration  12: 206568.407 ops/s
Iteration  13: 206537.117 ops/s
Iteration  14: 206279.735 ops/s
Iteration  15: 206061.487 ops/s
Iteration  16: 206934.153 ops/s
Iteration  17: 206702.022 ops/s
Iteration  18: 206746.128 ops/s
Iteration  19: 206914.450 ops/s
Iteration  20: 206636.059 ops/s
Iteration  21: 206516.651 ops/s
Iteration  22: 206981.591 ops/s
Iteration  23: 206818.093 ops/s
Iteration  24: 206268.527 ops/s
Iteration  25: 207379.594 ops/s
Iteration  26: 206960.521 ops/s
Iteration  27: 206292.210 ops/s
Iteration  28: 206753.105 ops/s
Iteration  29: 206423.974 ops/s
Iteration  30: 206241.671 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_693._Benchmark.benchmark_Cluster_693":
  206693.833 ±(99.9%) 240.246 ops/s [Average]
  (min, avg, max) = (206061.487, 206693.833, 207379.594), stdev = 359.589
  CI (99.9%): [206453.587, 206934.079] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_693._Benchmark.benchmark_Cluster_693  thrpt   30  206693.833 ± 240.246  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_694._Benchmark.benchmark_Cluster_694$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_694._Benchmark.benchmark_Cluster_694

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83367.490 ops/s
# Warmup Iteration   2: 140995.494 ops/s
# Warmup Iteration   3: 210752.477 ops/s
# Warmup Iteration   4: 209243.833 ops/s
# Warmup Iteration   5: 210867.074 ops/s
# Warmup Iteration   6: 210885.601 ops/s
# Warmup Iteration   7: 196836.580 ops/s
# Warmup Iteration   8: 180519.702 ops/s
# Warmup Iteration   9: 210113.611 ops/s
# Warmup Iteration  10: 210323.028 ops/s
# Warmup Iteration  11: 210307.018 ops/s
# Warmup Iteration  12: 210495.556 ops/s
# Warmup Iteration  13: 210692.251 ops/s
# Warmup Iteration  14: 209992.924 ops/s
# Warmup Iteration  15: 210039.606 ops/s
# Warmup Iteration  16: 210396.146 ops/s
# Warmup Iteration  17: 214498.508 ops/s
# Warmup Iteration  18: 214758.387 ops/s
# Warmup Iteration  19: 213766.156 ops/s
# Warmup Iteration  20: 214270.089 ops/s
# Warmup Iteration  21: 214630.850 ops/s
# Warmup Iteration  22: 215000.826 ops/s
# Warmup Iteration  23: 214775.682 ops/s
# Warmup Iteration  24: 214518.190 ops/s
# Warmup Iteration  25: 214412.280 ops/s
# Warmup Iteration  26: 214329.248 ops/s
# Warmup Iteration  27: 214648.290 ops/s
# Warmup Iteration  28: 214050.110 ops/s
# Warmup Iteration  29: 213893.728 ops/s
# Warmup Iteration  30: 213953.314 ops/s
Iteration   1: 214724.638 ops/s
Iteration   2: 214095.056 ops/s
Iteration   3: 214071.548 ops/s
Iteration   4: 214500.838 ops/s
Iteration   5: 214037.683 ops/s
Iteration   6: 214930.669 ops/s
Iteration   7: 214591.052 ops/s
Iteration   8: 214647.434 ops/s
Iteration   9: 214049.198 ops/s
Iteration  10: 214743.655 ops/s
Iteration  11: 214754.044 ops/s
Iteration  12: 213806.996 ops/s
Iteration  13: 214330.865 ops/s
Iteration  14: 214067.814 ops/s
Iteration  15: 214578.117 ops/s
Iteration  16: 214362.973 ops/s
Iteration  17: 214358.860 ops/s
Iteration  18: 214152.903 ops/s
Iteration  19: 214293.228 ops/s
Iteration  20: 214594.334 ops/s
Iteration  21: 214596.478 ops/s
Iteration  22: 214283.552 ops/s
Iteration  23: 214240.024 ops/s
Iteration  24: 214245.687 ops/s
Iteration  25: 213945.426 ops/s
Iteration  26: 214307.283 ops/s
Iteration  27: 214081.874 ops/s
Iteration  28: 214847.043 ops/s
Iteration  29: 214541.998 ops/s
Iteration  30: 212661.129 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_694._Benchmark.benchmark_Cluster_694":
  214314.747 ±(99.9%) 284.242 ops/s [Average]
  (min, avg, max) = (212661.129, 214314.747, 214930.669), stdev = 425.440
  CI (99.9%): [214030.504, 214598.989] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_694._Benchmark.benchmark_Cluster_694  thrpt   30  214314.747 ± 284.242  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_695._Benchmark.benchmark_Cluster_695$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_695._Benchmark.benchmark_Cluster_695

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66713.781 ops/s
# Warmup Iteration   2: 159485.824 ops/s
# Warmup Iteration   3: 193234.895 ops/s
# Warmup Iteration   4: 180238.105 ops/s
# Warmup Iteration   5: 166526.338 ops/s
# Warmup Iteration   6: 193610.841 ops/s
# Warmup Iteration   7: 193288.155 ops/s
# Warmup Iteration   8: 193296.141 ops/s
# Warmup Iteration   9: 193562.297 ops/s
# Warmup Iteration  10: 193946.950 ops/s
# Warmup Iteration  11: 193494.840 ops/s
# Warmup Iteration  12: 193626.276 ops/s
# Warmup Iteration  13: 193666.520 ops/s
# Warmup Iteration  14: 193446.266 ops/s
# Warmup Iteration  15: 193228.783 ops/s
# Warmup Iteration  16: 193454.308 ops/s
# Warmup Iteration  17: 191783.986 ops/s
# Warmup Iteration  18: 192128.080 ops/s
# Warmup Iteration  19: 191833.307 ops/s
# Warmup Iteration  20: 192467.209 ops/s
# Warmup Iteration  21: 191892.921 ops/s
# Warmup Iteration  22: 191927.302 ops/s
# Warmup Iteration  23: 191699.830 ops/s
# Warmup Iteration  24: 191920.087 ops/s
# Warmup Iteration  25: 192021.816 ops/s
# Warmup Iteration  26: 191546.979 ops/s
# Warmup Iteration  27: 191555.898 ops/s
# Warmup Iteration  28: 191951.052 ops/s
# Warmup Iteration  29: 191381.289 ops/s
# Warmup Iteration  30: 191167.271 ops/s
Iteration   1: 191228.899 ops/s
Iteration   2: 191333.931 ops/s
Iteration   3: 191987.821 ops/s
Iteration   4: 192301.678 ops/s
Iteration   5: 192010.316 ops/s
Iteration   6: 192267.863 ops/s
Iteration   7: 191956.761 ops/s
Iteration   8: 191711.368 ops/s
Iteration   9: 192217.614 ops/s
Iteration  10: 192338.165 ops/s
Iteration  11: 192428.912 ops/s
Iteration  12: 191941.212 ops/s
Iteration  13: 192316.438 ops/s
Iteration  14: 191707.876 ops/s
Iteration  15: 191791.950 ops/s
Iteration  16: 191869.401 ops/s
Iteration  17: 191357.378 ops/s
Iteration  18: 191529.493 ops/s
Iteration  19: 191952.794 ops/s
Iteration  20: 192119.466 ops/s
Iteration  21: 192213.381 ops/s
Iteration  22: 191955.177 ops/s
Iteration  23: 192293.138 ops/s
Iteration  24: 191492.289 ops/s
Iteration  25: 191302.367 ops/s
Iteration  26: 191398.042 ops/s
Iteration  27: 191576.419 ops/s
Iteration  28: 191616.069 ops/s
Iteration  29: 191906.665 ops/s
Iteration  30: 190562.940 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_695._Benchmark.benchmark_Cluster_695":
  191822.861 ±(99.9%) 283.777 ops/s [Average]
  (min, avg, max) = (190562.940, 191822.861, 192428.912), stdev = 424.745
  CI (99.9%): [191539.083, 192106.638] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_695._Benchmark.benchmark_Cluster_695  thrpt   30  191822.861 ± 283.777  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_696._Benchmark.benchmark_Cluster_696$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_696._Benchmark.benchmark_Cluster_696

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79147.858 ops/s
# Warmup Iteration   2: 140701.250 ops/s
# Warmup Iteration   3: 180902.453 ops/s
# Warmup Iteration   4: 182620.587 ops/s
# Warmup Iteration   5: 183028.421 ops/s
# Warmup Iteration   6: 177185.828 ops/s
# Warmup Iteration   7: 151428.432 ops/s
# Warmup Iteration   8: 182847.379 ops/s
# Warmup Iteration   9: 182782.722 ops/s
# Warmup Iteration  10: 182878.688 ops/s
# Warmup Iteration  11: 182646.022 ops/s
# Warmup Iteration  12: 182248.334 ops/s
# Warmup Iteration  13: 182604.645 ops/s
# Warmup Iteration  14: 182952.606 ops/s
# Warmup Iteration  15: 182475.174 ops/s
# Warmup Iteration  16: 183101.589 ops/s
# Warmup Iteration  17: 182899.724 ops/s
# Warmup Iteration  18: 182410.378 ops/s
# Warmup Iteration  19: 182249.194 ops/s
# Warmup Iteration  20: 182183.079 ops/s
# Warmup Iteration  21: 181779.649 ops/s
# Warmup Iteration  22: 181783.621 ops/s
# Warmup Iteration  23: 182534.104 ops/s
# Warmup Iteration  24: 183315.394 ops/s
# Warmup Iteration  25: 183016.762 ops/s
# Warmup Iteration  26: 182819.792 ops/s
# Warmup Iteration  27: 182539.750 ops/s
# Warmup Iteration  28: 182214.477 ops/s
# Warmup Iteration  29: 182836.677 ops/s
# Warmup Iteration  30: 182964.010 ops/s
Iteration   1: 182667.057 ops/s
Iteration   2: 182868.067 ops/s
Iteration   3: 182632.601 ops/s
Iteration   4: 182412.202 ops/s
Iteration   5: 182181.935 ops/s
Iteration   6: 183117.364 ops/s
Iteration   7: 182963.035 ops/s
Iteration   8: 182873.407 ops/s
Iteration   9: 182618.052 ops/s
Iteration  10: 183294.626 ops/s
Iteration  11: 182972.947 ops/s
Iteration  12: 182843.522 ops/s
Iteration  13: 182332.541 ops/s
Iteration  14: 182693.573 ops/s
Iteration  15: 183038.558 ops/s
Iteration  16: 182107.772 ops/s
Iteration  17: 183088.996 ops/s
Iteration  18: 183327.436 ops/s
Iteration  19: 183243.556 ops/s
Iteration  20: 183267.363 ops/s
Iteration  21: 183073.028 ops/s
Iteration  22: 182845.522 ops/s
Iteration  23: 182683.237 ops/s
Iteration  24: 182787.113 ops/s
Iteration  25: 181717.870 ops/s
Iteration  26: 182062.306 ops/s
Iteration  27: 182344.809 ops/s
Iteration  28: 182816.327 ops/s
Iteration  29: 182725.128 ops/s
Iteration  30: 183230.782 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_696._Benchmark.benchmark_Cluster_696":
  182761.024 ±(99.9%) 269.724 ops/s [Average]
  (min, avg, max) = (181717.870, 182761.024, 183327.436), stdev = 403.710
  CI (99.9%): [182491.301, 183030.748] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_696._Benchmark.benchmark_Cluster_696  thrpt   30  182761.024 ± 269.724  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_697._Benchmark.benchmark_Cluster_697$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_697._Benchmark.benchmark_Cluster_697

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 20766.532 ops/s
# Warmup Iteration   2: 48677.069 ops/s
# Warmup Iteration   3: 79809.625 ops/s
# Warmup Iteration   4: 86141.000 ops/s
# Warmup Iteration   5: 86585.899 ops/s
# Warmup Iteration   6: 86465.026 ops/s
# Warmup Iteration   7: 86600.655 ops/s
# Warmup Iteration   8: 72801.733 ops/s
# Warmup Iteration   9: 83024.493 ops/s
# Warmup Iteration  10: 86668.020 ops/s
# Warmup Iteration  11: 86652.748 ops/s
# Warmup Iteration  12: 86606.535 ops/s
# Warmup Iteration  13: 86738.463 ops/s
# Warmup Iteration  14: 86822.349 ops/s
# Warmup Iteration  15: 87070.574 ops/s
# Warmup Iteration  16: 86966.103 ops/s
# Warmup Iteration  17: 86126.650 ops/s
# Warmup Iteration  18: 87855.826 ops/s
# Warmup Iteration  19: 88189.040 ops/s
# Warmup Iteration  20: 88121.164 ops/s
# Warmup Iteration  21: 87995.089 ops/s
# Warmup Iteration  22: 88157.347 ops/s
# Warmup Iteration  23: 88143.343 ops/s
# Warmup Iteration  24: 88117.145 ops/s
# Warmup Iteration  25: 88035.862 ops/s
# Warmup Iteration  26: 87893.591 ops/s
# Warmup Iteration  27: 87814.648 ops/s
# Warmup Iteration  28: 87671.304 ops/s
# Warmup Iteration  29: 87405.544 ops/s
# Warmup Iteration  30: 87727.053 ops/s
Iteration   1: 87950.981 ops/s
Iteration   2: 87670.987 ops/s
Iteration   3: 87995.720 ops/s
Iteration   4: 88073.363 ops/s
Iteration   5: 86616.111 ops/s
Iteration   6: 87760.921 ops/s
Iteration   7: 87724.591 ops/s
Iteration   8: 88000.128 ops/s
Iteration   9: 87733.336 ops/s
Iteration  10: 87335.192 ops/s
Iteration  11: 87437.592 ops/s
Iteration  12: 86810.440 ops/s
Iteration  13: 87226.184 ops/s
Iteration  14: 87555.432 ops/s
Iteration  15: 87855.415 ops/s
Iteration  16: 88035.217 ops/s
Iteration  17: 87344.112 ops/s
Iteration  18: 88117.963 ops/s
Iteration  19: 87722.985 ops/s
Iteration  20: 87642.942 ops/s
Iteration  21: 87372.400 ops/s
Iteration  22: 87507.385 ops/s
Iteration  23: 87801.484 ops/s
Iteration  24: 87792.980 ops/s
Iteration  25: 87290.243 ops/s
Iteration  26: 87698.699 ops/s
Iteration  27: 87537.800 ops/s
Iteration  28: 88127.720 ops/s
Iteration  29: 87661.301 ops/s
Iteration  30: 86660.574 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_697._Benchmark.benchmark_Cluster_697":
  87602.007 ±(99.9%) 265.386 ops/s [Average]
  (min, avg, max) = (86616.111, 87602.007, 88127.720), stdev = 397.217
  CI (99.9%): [87336.621, 87867.393] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_697._Benchmark.benchmark_Cluster_697  thrpt   30  87602.007 ± 265.386  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_698._Benchmark.benchmark_Cluster_698$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_698._Benchmark.benchmark_Cluster_698

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73752.333 ops/s
# Warmup Iteration   2: 127609.242 ops/s
# Warmup Iteration   3: 192960.503 ops/s
# Warmup Iteration   4: 191868.739 ops/s
# Warmup Iteration   5: 192611.340 ops/s
# Warmup Iteration   6: 192775.508 ops/s
# Warmup Iteration   7: 163973.063 ops/s
# Warmup Iteration   8: 181264.081 ops/s
# Warmup Iteration   9: 193077.497 ops/s
# Warmup Iteration  10: 192438.381 ops/s
# Warmup Iteration  11: 192297.324 ops/s
# Warmup Iteration  12: 192590.481 ops/s
# Warmup Iteration  13: 192928.153 ops/s
# Warmup Iteration  14: 192831.222 ops/s
# Warmup Iteration  15: 192610.374 ops/s
# Warmup Iteration  16: 192862.171 ops/s
# Warmup Iteration  17: 192548.596 ops/s
# Warmup Iteration  18: 193172.371 ops/s
# Warmup Iteration  19: 192857.677 ops/s
# Warmup Iteration  20: 192859.798 ops/s
# Warmup Iteration  21: 192350.545 ops/s
# Warmup Iteration  22: 192919.984 ops/s
# Warmup Iteration  23: 192290.744 ops/s
# Warmup Iteration  24: 192496.889 ops/s
# Warmup Iteration  25: 192120.401 ops/s
# Warmup Iteration  26: 193325.174 ops/s
# Warmup Iteration  27: 192975.522 ops/s
# Warmup Iteration  28: 193148.625 ops/s
# Warmup Iteration  29: 193134.356 ops/s
# Warmup Iteration  30: 192480.797 ops/s
Iteration   1: 192996.659 ops/s
Iteration   2: 192680.299 ops/s
Iteration   3: 192785.103 ops/s
Iteration   4: 193012.952 ops/s
Iteration   5: 193336.007 ops/s
Iteration   6: 192588.060 ops/s
Iteration   7: 192847.119 ops/s
Iteration   8: 193008.159 ops/s
Iteration   9: 193149.593 ops/s
Iteration  10: 192933.538 ops/s
Iteration  11: 192817.280 ops/s
Iteration  12: 192651.025 ops/s
Iteration  13: 193011.857 ops/s
Iteration  14: 193033.443 ops/s
Iteration  15: 192477.869 ops/s
Iteration  16: 192499.212 ops/s
Iteration  17: 192883.908 ops/s
Iteration  18: 192677.814 ops/s
Iteration  19: 193023.023 ops/s
Iteration  20: 193299.911 ops/s
Iteration  21: 192966.858 ops/s
Iteration  22: 192263.649 ops/s
Iteration  23: 192410.835 ops/s
Iteration  24: 193619.740 ops/s
Iteration  25: 193090.666 ops/s
Iteration  26: 193451.304 ops/s
Iteration  27: 192883.135 ops/s
Iteration  28: 193271.307 ops/s
Iteration  29: 192865.750 ops/s
Iteration  30: 192978.758 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_698._Benchmark.benchmark_Cluster_698":
  192917.161 ±(99.9%) 205.936 ops/s [Average]
  (min, avg, max) = (192263.649, 192917.161, 193619.740), stdev = 308.236
  CI (99.9%): [192711.225, 193123.097] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_698._Benchmark.benchmark_Cluster_698  thrpt   30  192917.161 ± 205.936  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_699._Benchmark.benchmark_Cluster_699$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_699._Benchmark.benchmark_Cluster_699

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51242.575 ops/s
# Warmup Iteration   2: 133984.754 ops/s
# Warmup Iteration   3: 207748.208 ops/s
# Warmup Iteration   4: 206130.038 ops/s
# Warmup Iteration   5: 207048.479 ops/s
# Warmup Iteration   6: 174352.880 ops/s
# Warmup Iteration   7: 199629.031 ops/s
# Warmup Iteration   8: 208689.436 ops/s
# Warmup Iteration   9: 208251.809 ops/s
# Warmup Iteration  10: 208124.320 ops/s
# Warmup Iteration  11: 208700.542 ops/s
# Warmup Iteration  12: 208002.183 ops/s
# Warmup Iteration  13: 208767.817 ops/s
# Warmup Iteration  14: 208608.923 ops/s
# Warmup Iteration  15: 208223.475 ops/s
# Warmup Iteration  16: 208631.844 ops/s
# Warmup Iteration  17: 207613.703 ops/s
# Warmup Iteration  18: 207665.874 ops/s
# Warmup Iteration  19: 207655.880 ops/s
# Warmup Iteration  20: 207734.997 ops/s
# Warmup Iteration  21: 208038.561 ops/s
# Warmup Iteration  22: 207924.217 ops/s
# Warmup Iteration  23: 207324.503 ops/s
# Warmup Iteration  24: 207522.935 ops/s
# Warmup Iteration  25: 207757.719 ops/s
# Warmup Iteration  26: 208198.897 ops/s
# Warmup Iteration  27: 207855.987 ops/s
# Warmup Iteration  28: 208188.247 ops/s
# Warmup Iteration  29: 207640.756 ops/s
# Warmup Iteration  30: 207954.649 ops/s
Iteration   1: 208320.112 ops/s
Iteration   2: 207737.043 ops/s
Iteration   3: 208199.763 ops/s
Iteration   4: 207866.030 ops/s
Iteration   5: 208060.999 ops/s
Iteration   6: 208206.976 ops/s
Iteration   7: 208223.056 ops/s
Iteration   8: 207481.065 ops/s
Iteration   9: 207305.102 ops/s
Iteration  10: 207588.476 ops/s
Iteration  11: 207574.995 ops/s
Iteration  12: 207995.223 ops/s
Iteration  13: 207481.957 ops/s
Iteration  14: 207353.466 ops/s
Iteration  15: 207634.621 ops/s
Iteration  16: 207764.665 ops/s
Iteration  17: 208268.779 ops/s
Iteration  18: 207980.804 ops/s
Iteration  19: 208273.915 ops/s
Iteration  20: 207886.307 ops/s
Iteration  21: 208166.581 ops/s
Iteration  22: 207905.954 ops/s
Iteration  23: 208501.238 ops/s
Iteration  24: 208098.251 ops/s
Iteration  25: 207647.391 ops/s
Iteration  26: 207912.840 ops/s
Iteration  27: 207535.528 ops/s
Iteration  28: 207252.955 ops/s
Iteration  29: 207203.835 ops/s
Iteration  30: 207082.642 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_699._Benchmark.benchmark_Cluster_699":
  207817.019 ±(99.9%) 252.374 ops/s [Average]
  (min, avg, max) = (207082.642, 207817.019, 208501.238), stdev = 377.742
  CI (99.9%): [207564.645, 208069.393] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_699._Benchmark.benchmark_Cluster_699  thrpt   30  207817.019 ± 252.374  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_7._Benchmark.benchmark_Cluster_7$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_7._Benchmark.benchmark_Cluster_7

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72901.550 ops/s
# Warmup Iteration   2: 134818.304 ops/s
# Warmup Iteration   3: 200855.747 ops/s
# Warmup Iteration   4: 198937.045 ops/s
# Warmup Iteration   5: 200163.766 ops/s
# Warmup Iteration   6: 200514.854 ops/s
# Warmup Iteration   7: 156395.748 ops/s
# Warmup Iteration   8: 200911.310 ops/s
# Warmup Iteration   9: 200732.930 ops/s
# Warmup Iteration  10: 200783.471 ops/s
# Warmup Iteration  11: 200856.786 ops/s
# Warmup Iteration  12: 200730.606 ops/s
# Warmup Iteration  13: 200594.708 ops/s
# Warmup Iteration  14: 200585.646 ops/s
# Warmup Iteration  15: 200126.637 ops/s
# Warmup Iteration  16: 200850.252 ops/s
# Warmup Iteration  17: 200915.376 ops/s
# Warmup Iteration  18: 201060.223 ops/s
# Warmup Iteration  19: 200865.171 ops/s
# Warmup Iteration  20: 200746.368 ops/s
# Warmup Iteration  21: 200490.788 ops/s
# Warmup Iteration  22: 199940.304 ops/s
# Warmup Iteration  23: 200649.249 ops/s
# Warmup Iteration  24: 200724.792 ops/s
# Warmup Iteration  25: 201028.077 ops/s
# Warmup Iteration  26: 201140.696 ops/s
# Warmup Iteration  27: 200789.643 ops/s
# Warmup Iteration  28: 200916.993 ops/s
# Warmup Iteration  29: 201281.434 ops/s
# Warmup Iteration  30: 201050.145 ops/s
Iteration   1: 201171.886 ops/s
Iteration   2: 201399.902 ops/s
Iteration   3: 200755.139 ops/s
Iteration   4: 201413.139 ops/s
Iteration   5: 201114.288 ops/s
Iteration   6: 201445.992 ops/s
Iteration   7: 201240.567 ops/s
Iteration   8: 201515.932 ops/s
Iteration   9: 200833.614 ops/s
Iteration  10: 200774.807 ops/s
Iteration  11: 200775.486 ops/s
Iteration  12: 200813.037 ops/s
Iteration  13: 200821.825 ops/s
Iteration  14: 201178.514 ops/s
Iteration  15: 200837.855 ops/s
Iteration  16: 201184.542 ops/s
Iteration  17: 200769.445 ops/s
Iteration  18: 201062.218 ops/s
Iteration  19: 201137.425 ops/s
Iteration  20: 201227.909 ops/s
Iteration  21: 201024.283 ops/s
Iteration  22: 201194.537 ops/s
Iteration  23: 201015.315 ops/s
Iteration  24: 200783.454 ops/s
Iteration  25: 200910.460 ops/s
Iteration  26: 200492.865 ops/s
Iteration  27: 200715.437 ops/s
Iteration  28: 200475.407 ops/s
Iteration  29: 200904.826 ops/s
Iteration  30: 200950.726 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_7._Benchmark.benchmark_Cluster_7":
  200998.028 ±(99.9%) 179.360 ops/s [Average]
  (min, avg, max) = (200475.407, 200998.028, 201515.932), stdev = 268.458
  CI (99.9%): [200818.668, 201177.388] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score     Error  Units
Cluster_7._Benchmark.benchmark_Cluster_7  thrpt   30  200998.028 ± 179.360  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_70._Benchmark.benchmark_Cluster_70$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_70._Benchmark.benchmark_Cluster_70

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93480.926 ops/s
# Warmup Iteration   2: 108560.118 ops/s
# Warmup Iteration   3: 113008.039 ops/s
# Warmup Iteration   4: 141785.781 ops/s
# Warmup Iteration   5: 142149.976 ops/s
# Warmup Iteration   6: 142044.568 ops/s
# Warmup Iteration   7: 141821.053 ops/s
# Warmup Iteration   8: 140661.694 ops/s
# Warmup Iteration   9: 142029.852 ops/s
# Warmup Iteration  10: 141684.276 ops/s
# Warmup Iteration  11: 141898.570 ops/s
# Warmup Iteration  12: 141803.377 ops/s
# Warmup Iteration  13: 142263.729 ops/s
# Warmup Iteration  14: 142058.848 ops/s
# Warmup Iteration  15: 142188.841 ops/s
# Warmup Iteration  16: 128981.448 ops/s
# Warmup Iteration  17: 133283.985 ops/s
# Warmup Iteration  18: 150322.835 ops/s
# Warmup Iteration  19: 149856.056 ops/s
# Warmup Iteration  20: 150232.530 ops/s
# Warmup Iteration  21: 150239.653 ops/s
# Warmup Iteration  22: 150100.601 ops/s
# Warmup Iteration  23: 150345.895 ops/s
# Warmup Iteration  24: 150198.938 ops/s
# Warmup Iteration  25: 149865.676 ops/s
# Warmup Iteration  26: 149811.969 ops/s
# Warmup Iteration  27: 149781.240 ops/s
# Warmup Iteration  28: 150279.598 ops/s
# Warmup Iteration  29: 150293.785 ops/s
# Warmup Iteration  30: 150280.357 ops/s
Iteration   1: 150238.456 ops/s
Iteration   2: 150378.775 ops/s
Iteration   3: 150036.775 ops/s
Iteration   4: 150219.381 ops/s
Iteration   5: 150549.296 ops/s
Iteration   6: 149923.185 ops/s
Iteration   7: 150101.927 ops/s
Iteration   8: 149179.462 ops/s
Iteration   9: 150015.263 ops/s
Iteration  10: 150020.393 ops/s
Iteration  11: 149835.468 ops/s
Iteration  12: 149937.756 ops/s
Iteration  13: 150145.790 ops/s
Iteration  14: 149755.207 ops/s
Iteration  15: 150456.528 ops/s
Iteration  16: 150710.399 ops/s
Iteration  17: 150157.662 ops/s
Iteration  18: 150145.408 ops/s
Iteration  19: 150149.953 ops/s
Iteration  20: 150228.523 ops/s
Iteration  21: 150484.327 ops/s
Iteration  22: 149929.748 ops/s
Iteration  23: 150107.783 ops/s
Iteration  24: 150312.291 ops/s
Iteration  25: 150813.109 ops/s
Iteration  26: 150326.450 ops/s
Iteration  27: 150317.461 ops/s
Iteration  28: 149850.138 ops/s
Iteration  29: 150427.387 ops/s
Iteration  30: 150513.587 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_70._Benchmark.benchmark_Cluster_70":
  150175.596 ±(99.9%) 213.042 ops/s [Average]
  (min, avg, max) = (149179.462, 150175.596, 150813.109), stdev = 318.872
  CI (99.9%): [149962.554, 150388.638] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_70._Benchmark.benchmark_Cluster_70  thrpt   30  150175.596 ± 213.042  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_700._Benchmark.benchmark_Cluster_700$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_700._Benchmark.benchmark_Cluster_700

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 97198.131 ops/s
# Warmup Iteration   2: 104334.761 ops/s
# Warmup Iteration   3: 116868.571 ops/s
# Warmup Iteration   4: 139056.079 ops/s
# Warmup Iteration   5: 139105.699 ops/s
# Warmup Iteration   6: 139769.853 ops/s
# Warmup Iteration   7: 138379.772 ops/s
# Warmup Iteration   8: 139030.576 ops/s
# Warmup Iteration   9: 139275.399 ops/s
# Warmup Iteration  10: 139224.150 ops/s
# Warmup Iteration  11: 138967.757 ops/s
# Warmup Iteration  12: 139347.868 ops/s
# Warmup Iteration  13: 139476.719 ops/s
# Warmup Iteration  14: 139531.630 ops/s
# Warmup Iteration  15: 119424.936 ops/s
# Warmup Iteration  16: 131673.889 ops/s
# Warmup Iteration  17: 147513.961 ops/s
# Warmup Iteration  18: 147188.753 ops/s
# Warmup Iteration  19: 147794.853 ops/s
# Warmup Iteration  20: 147667.991 ops/s
# Warmup Iteration  21: 148091.448 ops/s
# Warmup Iteration  22: 148326.173 ops/s
# Warmup Iteration  23: 148055.931 ops/s
# Warmup Iteration  24: 148180.914 ops/s
# Warmup Iteration  25: 147836.850 ops/s
# Warmup Iteration  26: 147755.160 ops/s
# Warmup Iteration  27: 147884.404 ops/s
# Warmup Iteration  28: 147899.088 ops/s
# Warmup Iteration  29: 148079.158 ops/s
# Warmup Iteration  30: 148302.178 ops/s
Iteration   1: 148029.250 ops/s
Iteration   2: 147344.577 ops/s
Iteration   3: 147660.811 ops/s
Iteration   4: 148058.029 ops/s
Iteration   5: 148081.674 ops/s
Iteration   6: 147452.195 ops/s
Iteration   7: 147182.814 ops/s
Iteration   8: 148185.097 ops/s
Iteration   9: 148157.892 ops/s
Iteration  10: 148363.936 ops/s
Iteration  11: 147582.577 ops/s
Iteration  12: 147440.055 ops/s
Iteration  13: 147654.576 ops/s
Iteration  14: 148017.470 ops/s
Iteration  15: 148073.508 ops/s
Iteration  16: 147964.782 ops/s
Iteration  17: 148078.716 ops/s
Iteration  18: 147820.776 ops/s
Iteration  19: 148176.313 ops/s
Iteration  20: 147829.498 ops/s
Iteration  21: 147582.209 ops/s
Iteration  22: 147055.263 ops/s
Iteration  23: 147418.510 ops/s
Iteration  24: 146958.457 ops/s
Iteration  25: 146937.977 ops/s
Iteration  26: 146631.280 ops/s
Iteration  27: 147229.997 ops/s
Iteration  28: 147524.085 ops/s
Iteration  29: 147500.991 ops/s
Iteration  30: 148178.051 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_700._Benchmark.benchmark_Cluster_700":
  147672.379 ±(99.9%) 298.761 ops/s [Average]
  (min, avg, max) = (146631.280, 147672.379, 148363.936), stdev = 447.172
  CI (99.9%): [147373.618, 147971.140] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_700._Benchmark.benchmark_Cluster_700  thrpt   30  147672.379 ± 298.761  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_701._Benchmark.benchmark_Cluster_701$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_701._Benchmark.benchmark_Cluster_701

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96685.095 ops/s
# Warmup Iteration   2: 104541.349 ops/s
# Warmup Iteration   3: 109753.396 ops/s
# Warmup Iteration   4: 135039.243 ops/s
# Warmup Iteration   5: 134764.198 ops/s
# Warmup Iteration   6: 135413.837 ops/s
# Warmup Iteration   7: 135425.520 ops/s
# Warmup Iteration   8: 134349.850 ops/s
# Warmup Iteration   9: 135034.551 ops/s
# Warmup Iteration  10: 134929.227 ops/s
# Warmup Iteration  11: 135436.220 ops/s
# Warmup Iteration  12: 135210.089 ops/s
# Warmup Iteration  13: 135231.598 ops/s
# Warmup Iteration  14: 134940.479 ops/s
# Warmup Iteration  15: 135465.683 ops/s
# Warmup Iteration  16: 123556.760 ops/s
# Warmup Iteration  17: 124017.315 ops/s
# Warmup Iteration  18: 141943.185 ops/s
# Warmup Iteration  19: 141969.263 ops/s
# Warmup Iteration  20: 141873.162 ops/s
# Warmup Iteration  21: 141791.792 ops/s
# Warmup Iteration  22: 142141.586 ops/s
# Warmup Iteration  23: 142161.236 ops/s
# Warmup Iteration  24: 141626.954 ops/s
# Warmup Iteration  25: 141968.698 ops/s
# Warmup Iteration  26: 142097.625 ops/s
# Warmup Iteration  27: 141740.530 ops/s
# Warmup Iteration  28: 142029.003 ops/s
# Warmup Iteration  29: 141684.078 ops/s
# Warmup Iteration  30: 142025.513 ops/s
Iteration   1: 141357.598 ops/s
Iteration   2: 141449.666 ops/s
Iteration   3: 141503.616 ops/s
Iteration   4: 141333.042 ops/s
Iteration   5: 141509.485 ops/s
Iteration   6: 141130.478 ops/s
Iteration   7: 141823.942 ops/s
Iteration   8: 141988.401 ops/s
Iteration   9: 141666.404 ops/s
Iteration  10: 142000.812 ops/s
Iteration  11: 142130.122 ops/s
Iteration  12: 141871.287 ops/s
Iteration  13: 142093.408 ops/s
Iteration  14: 141918.737 ops/s
Iteration  15: 141404.814 ops/s
Iteration  16: 141666.328 ops/s
Iteration  17: 141459.248 ops/s
Iteration  18: 141226.719 ops/s
Iteration  19: 141231.428 ops/s
Iteration  20: 141399.513 ops/s
Iteration  21: 141262.699 ops/s
Iteration  22: 141141.680 ops/s
Iteration  23: 141704.512 ops/s
Iteration  24: 142273.027 ops/s
Iteration  25: 142155.910 ops/s
Iteration  26: 142237.915 ops/s
Iteration  27: 142215.916 ops/s
Iteration  28: 142049.932 ops/s
Iteration  29: 142044.112 ops/s
Iteration  30: 142068.736 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_701._Benchmark.benchmark_Cluster_701":
  141710.650 ±(99.9%) 247.171 ops/s [Average]
  (min, avg, max) = (141130.478, 141710.650, 142273.027), stdev = 369.954
  CI (99.9%): [141463.479, 141957.821] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_701._Benchmark.benchmark_Cluster_701  thrpt   30  141710.650 ± 247.171  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_702._Benchmark.benchmark_Cluster_702$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_702._Benchmark.benchmark_Cluster_702

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 95307.248 ops/s
# Warmup Iteration   2: 102346.563 ops/s
# Warmup Iteration   3: 122502.078 ops/s
# Warmup Iteration   4: 141032.364 ops/s
# Warmup Iteration   5: 140232.232 ops/s
# Warmup Iteration   6: 140301.997 ops/s
# Warmup Iteration   7: 139976.501 ops/s
# Warmup Iteration   8: 140178.470 ops/s
# Warmup Iteration   9: 140568.124 ops/s
# Warmup Iteration  10: 140242.389 ops/s
# Warmup Iteration  11: 140193.111 ops/s
# Warmup Iteration  12: 139775.651 ops/s
# Warmup Iteration  13: 140002.588 ops/s
# Warmup Iteration  14: 111838.772 ops/s
# Warmup Iteration  15: 139479.860 ops/s
# Warmup Iteration  16: 139900.689 ops/s
# Warmup Iteration  17: 147948.316 ops/s
# Warmup Iteration  18: 147878.126 ops/s
# Warmup Iteration  19: 147832.969 ops/s
# Warmup Iteration  20: 147358.910 ops/s
# Warmup Iteration  21: 147487.296 ops/s
# Warmup Iteration  22: 147942.245 ops/s
# Warmup Iteration  23: 147208.661 ops/s
# Warmup Iteration  24: 147819.121 ops/s
# Warmup Iteration  25: 147288.230 ops/s
# Warmup Iteration  26: 147573.225 ops/s
# Warmup Iteration  27: 147964.795 ops/s
# Warmup Iteration  28: 147629.770 ops/s
# Warmup Iteration  29: 147600.548 ops/s
# Warmup Iteration  30: 147441.021 ops/s
Iteration   1: 147121.481 ops/s
Iteration   2: 147085.601 ops/s
Iteration   3: 147694.882 ops/s
Iteration   4: 147337.951 ops/s
Iteration   5: 147105.919 ops/s
Iteration   6: 147748.886 ops/s
Iteration   7: 147845.263 ops/s
Iteration   8: 147818.450 ops/s
Iteration   9: 147460.534 ops/s
Iteration  10: 147207.026 ops/s
Iteration  11: 147555.615 ops/s
Iteration  12: 147644.469 ops/s
Iteration  13: 147675.632 ops/s
Iteration  14: 147226.747 ops/s
Iteration  15: 147531.483 ops/s
Iteration  16: 147928.790 ops/s
Iteration  17: 147449.894 ops/s
Iteration  18: 147256.326 ops/s
Iteration  19: 147052.892 ops/s
Iteration  20: 147300.105 ops/s
Iteration  21: 147283.220 ops/s
Iteration  22: 147853.110 ops/s
Iteration  23: 147674.512 ops/s
Iteration  24: 147995.446 ops/s
Iteration  25: 147711.315 ops/s
Iteration  26: 147692.383 ops/s
Iteration  27: 147785.371 ops/s
Iteration  28: 146646.262 ops/s
Iteration  29: 147832.131 ops/s
Iteration  30: 147478.716 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_702._Benchmark.benchmark_Cluster_702":
  147500.014 ±(99.9%) 213.843 ops/s [Average]
  (min, avg, max) = (146646.262, 147500.014, 147995.446), stdev = 320.071
  CI (99.9%): [147286.170, 147713.857] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_702._Benchmark.benchmark_Cluster_702  thrpt   30  147500.014 ± 213.843  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_703._Benchmark.benchmark_Cluster_703$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_703._Benchmark.benchmark_Cluster_703

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 130667.342 ops/s
# Warmup Iteration   2: 140480.453 ops/s
# Warmup Iteration   3: 149308.053 ops/s
# Warmup Iteration   4: 182886.753 ops/s
# Warmup Iteration   5: 182744.725 ops/s
# Warmup Iteration   6: 183032.719 ops/s
# Warmup Iteration   7: 181941.094 ops/s
# Warmup Iteration   8: 182698.035 ops/s
# Warmup Iteration   9: 183471.314 ops/s
# Warmup Iteration  10: 182363.141 ops/s
# Warmup Iteration  11: 183316.122 ops/s
# Warmup Iteration  12: 183713.519 ops/s
# Warmup Iteration  13: 183687.108 ops/s
# Warmup Iteration  14: 183544.568 ops/s
# Warmup Iteration  15: 183684.799 ops/s
# Warmup Iteration  16: 162043.609 ops/s
# Warmup Iteration  17: 175125.016 ops/s
# Warmup Iteration  18: 192746.856 ops/s
# Warmup Iteration  19: 192766.870 ops/s
# Warmup Iteration  20: 193318.108 ops/s
# Warmup Iteration  21: 192644.908 ops/s
# Warmup Iteration  22: 192423.807 ops/s
# Warmup Iteration  23: 192915.681 ops/s
# Warmup Iteration  24: 193201.913 ops/s
# Warmup Iteration  25: 193217.828 ops/s
# Warmup Iteration  26: 194064.352 ops/s
# Warmup Iteration  27: 193712.089 ops/s
# Warmup Iteration  28: 193601.654 ops/s
# Warmup Iteration  29: 193565.683 ops/s
# Warmup Iteration  30: 193792.276 ops/s
Iteration   1: 194124.424 ops/s
Iteration   2: 194083.807 ops/s
Iteration   3: 193960.433 ops/s
Iteration   4: 193310.439 ops/s
Iteration   5: 194061.479 ops/s
Iteration   6: 193670.942 ops/s
Iteration   7: 193361.819 ops/s
Iteration   8: 192806.775 ops/s
Iteration   9: 192455.677 ops/s
Iteration  10: 192804.813 ops/s
Iteration  11: 193202.239 ops/s
Iteration  12: 193792.594 ops/s
Iteration  13: 192889.765 ops/s
Iteration  14: 193446.770 ops/s
Iteration  15: 193786.594 ops/s
Iteration  16: 193653.091 ops/s
Iteration  17: 193641.456 ops/s
Iteration  18: 193843.094 ops/s
Iteration  19: 193395.539 ops/s
Iteration  20: 193844.695 ops/s
Iteration  21: 193914.769 ops/s
Iteration  22: 192893.568 ops/s
Iteration  23: 192892.309 ops/s
Iteration  24: 193870.106 ops/s
Iteration  25: 193410.730 ops/s
Iteration  26: 193661.789 ops/s
Iteration  27: 193408.986 ops/s
Iteration  28: 193527.319 ops/s
Iteration  29: 193363.027 ops/s
Iteration  30: 193220.935 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_703._Benchmark.benchmark_Cluster_703":
  193476.666 ±(99.9%) 290.662 ops/s [Average]
  (min, avg, max) = (192455.677, 193476.666, 194124.424), stdev = 435.049
  CI (99.9%): [193186.004, 193767.328] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_703._Benchmark.benchmark_Cluster_703  thrpt   30  193476.666 ± 290.662  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_704._Benchmark.benchmark_Cluster_704$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_704._Benchmark.benchmark_Cluster_704

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 92605.790 ops/s
# Warmup Iteration   2: 105300.583 ops/s
# Warmup Iteration   3: 105152.735 ops/s
# Warmup Iteration   4: 136846.370 ops/s
# Warmup Iteration   5: 138854.561 ops/s
# Warmup Iteration   6: 138426.895 ops/s
# Warmup Iteration   7: 137893.477 ops/s
# Warmup Iteration   8: 136666.887 ops/s
# Warmup Iteration   9: 138822.942 ops/s
# Warmup Iteration  10: 138966.217 ops/s
# Warmup Iteration  11: 139190.160 ops/s
# Warmup Iteration  12: 138872.630 ops/s
# Warmup Iteration  13: 138471.546 ops/s
# Warmup Iteration  14: 138416.463 ops/s
# Warmup Iteration  15: 138426.267 ops/s
# Warmup Iteration  16: 137633.458 ops/s
# Warmup Iteration  17: 135101.635 ops/s
# Warmup Iteration  18: 122595.707 ops/s
# Warmup Iteration  19: 145543.271 ops/s
# Warmup Iteration  20: 145512.570 ops/s
# Warmup Iteration  21: 145106.158 ops/s
# Warmup Iteration  22: 144867.930 ops/s
# Warmup Iteration  23: 144659.971 ops/s
# Warmup Iteration  24: 144991.831 ops/s
# Warmup Iteration  25: 145383.475 ops/s
# Warmup Iteration  26: 145273.447 ops/s
# Warmup Iteration  27: 144768.982 ops/s
# Warmup Iteration  28: 145000.358 ops/s
# Warmup Iteration  29: 145077.722 ops/s
# Warmup Iteration  30: 144781.868 ops/s
Iteration   1: 144857.861 ops/s
Iteration   2: 145129.370 ops/s
Iteration   3: 145062.859 ops/s
Iteration   4: 145021.438 ops/s
Iteration   5: 144723.489 ops/s
Iteration   6: 145338.385 ops/s
Iteration   7: 144885.069 ops/s
Iteration   8: 144848.075 ops/s
Iteration   9: 145240.593 ops/s
Iteration  10: 145351.458 ops/s
Iteration  11: 145239.218 ops/s
Iteration  12: 145576.054 ops/s
Iteration  13: 145481.751 ops/s
Iteration  14: 145241.275 ops/s
Iteration  15: 145097.602 ops/s
Iteration  16: 145247.513 ops/s
Iteration  17: 145201.351 ops/s
Iteration  18: 145332.737 ops/s
Iteration  19: 145003.760 ops/s
Iteration  20: 145099.899 ops/s
Iteration  21: 145224.374 ops/s
Iteration  22: 144803.282 ops/s
Iteration  23: 144869.769 ops/s
Iteration  24: 144851.095 ops/s
Iteration  25: 144821.019 ops/s
Iteration  26: 144786.997 ops/s
Iteration  27: 144663.653 ops/s
Iteration  28: 144517.940 ops/s
Iteration  29: 145034.353 ops/s
Iteration  30: 144902.800 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_704._Benchmark.benchmark_Cluster_704":
  145048.501 ±(99.9%) 168.864 ops/s [Average]
  (min, avg, max) = (144517.940, 145048.501, 145576.054), stdev = 252.748
  CI (99.9%): [144879.637, 145217.365] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_704._Benchmark.benchmark_Cluster_704  thrpt   30  145048.501 ± 168.864  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_705._Benchmark.benchmark_Cluster_705$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_705._Benchmark.benchmark_Cluster_705

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68663.368 ops/s
# Warmup Iteration   2: 90858.769 ops/s
# Warmup Iteration   3: 140335.116 ops/s
# Warmup Iteration   4: 139555.019 ops/s
# Warmup Iteration   5: 139578.453 ops/s
# Warmup Iteration   6: 140594.276 ops/s
# Warmup Iteration   7: 140878.315 ops/s
# Warmup Iteration   8: 140981.292 ops/s
# Warmup Iteration   9: 131765.946 ops/s
# Warmup Iteration  10: 120808.683 ops/s
# Warmup Iteration  11: 140419.485 ops/s
# Warmup Iteration  12: 140708.419 ops/s
# Warmup Iteration  13: 140549.076 ops/s
# Warmup Iteration  14: 140458.576 ops/s
# Warmup Iteration  15: 140437.464 ops/s
# Warmup Iteration  16: 140897.574 ops/s
# Warmup Iteration  17: 140026.716 ops/s
# Warmup Iteration  18: 139784.951 ops/s
# Warmup Iteration  19: 140057.712 ops/s
# Warmup Iteration  20: 140051.343 ops/s
# Warmup Iteration  21: 140148.849 ops/s
# Warmup Iteration  22: 139659.243 ops/s
# Warmup Iteration  23: 140253.981 ops/s
# Warmup Iteration  24: 140274.026 ops/s
# Warmup Iteration  25: 139977.873 ops/s
# Warmup Iteration  26: 140008.519 ops/s
# Warmup Iteration  27: 140036.390 ops/s
# Warmup Iteration  28: 140052.387 ops/s
# Warmup Iteration  29: 140246.530 ops/s
# Warmup Iteration  30: 139766.392 ops/s
Iteration   1: 139929.034 ops/s
Iteration   2: 139887.959 ops/s
Iteration   3: 139754.982 ops/s
Iteration   4: 139983.936 ops/s
Iteration   5: 139418.885 ops/s
Iteration   6: 139859.231 ops/s
Iteration   7: 139852.528 ops/s
Iteration   8: 139792.931 ops/s
Iteration   9: 139964.434 ops/s
Iteration  10: 139934.522 ops/s
Iteration  11: 140003.345 ops/s
Iteration  12: 139777.206 ops/s
Iteration  13: 140223.074 ops/s
Iteration  14: 140018.981 ops/s
Iteration  15: 139946.677 ops/s
Iteration  16: 139857.670 ops/s
Iteration  17: 140044.704 ops/s
Iteration  18: 139847.819 ops/s
Iteration  19: 140305.136 ops/s
Iteration  20: 139968.317 ops/s
Iteration  21: 139906.381 ops/s
Iteration  22: 139562.269 ops/s
Iteration  23: 140019.016 ops/s
Iteration  24: 139499.094 ops/s
Iteration  25: 139766.652 ops/s
Iteration  26: 140166.025 ops/s
Iteration  27: 139574.354 ops/s
Iteration  28: 139944.669 ops/s
Iteration  29: 140017.202 ops/s
Iteration  30: 139612.441 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_705._Benchmark.benchmark_Cluster_705":
  139881.316 ±(99.9%) 135.540 ops/s [Average]
  (min, avg, max) = (139418.885, 139881.316, 140305.136), stdev = 202.869
  CI (99.9%): [139745.776, 140016.855] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_705._Benchmark.benchmark_Cluster_705  thrpt   30  139881.316 ± 135.540  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_706._Benchmark.benchmark_Cluster_706$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_706._Benchmark.benchmark_Cluster_706

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70455.254 ops/s
# Warmup Iteration   2: 120571.287 ops/s
# Warmup Iteration   3: 173054.607 ops/s
# Warmup Iteration   4: 172004.065 ops/s
# Warmup Iteration   5: 173079.505 ops/s
# Warmup Iteration   6: 173345.209 ops/s
# Warmup Iteration   7: 138314.737 ops/s
# Warmup Iteration   8: 173382.802 ops/s
# Warmup Iteration   9: 173469.827 ops/s
# Warmup Iteration  10: 173081.959 ops/s
# Warmup Iteration  11: 173285.832 ops/s
# Warmup Iteration  12: 173262.401 ops/s
# Warmup Iteration  13: 173100.076 ops/s
# Warmup Iteration  14: 173366.439 ops/s
# Warmup Iteration  15: 173497.681 ops/s
# Warmup Iteration  16: 173382.947 ops/s
# Warmup Iteration  17: 173225.913 ops/s
# Warmup Iteration  18: 173052.121 ops/s
# Warmup Iteration  19: 172903.984 ops/s
# Warmup Iteration  20: 173066.034 ops/s
# Warmup Iteration  21: 173170.446 ops/s
# Warmup Iteration  22: 173409.873 ops/s
# Warmup Iteration  23: 173203.379 ops/s
# Warmup Iteration  24: 172675.609 ops/s
# Warmup Iteration  25: 173021.234 ops/s
# Warmup Iteration  26: 172852.584 ops/s
# Warmup Iteration  27: 172896.269 ops/s
# Warmup Iteration  28: 173027.273 ops/s
# Warmup Iteration  29: 173248.344 ops/s
# Warmup Iteration  30: 173300.199 ops/s
Iteration   1: 172659.948 ops/s
Iteration   2: 173347.996 ops/s
Iteration   3: 173381.996 ops/s
Iteration   4: 173563.791 ops/s
Iteration   5: 172944.302 ops/s
Iteration   6: 173147.743 ops/s
Iteration   7: 173059.986 ops/s
Iteration   8: 173081.957 ops/s
Iteration   9: 173116.246 ops/s
Iteration  10: 173470.221 ops/s
Iteration  11: 173294.309 ops/s
Iteration  12: 173436.930 ops/s
Iteration  13: 173320.600 ops/s
Iteration  14: 173441.854 ops/s
Iteration  15: 173291.647 ops/s
Iteration  16: 172928.859 ops/s
Iteration  17: 172741.135 ops/s
Iteration  18: 172932.100 ops/s
Iteration  19: 172731.372 ops/s
Iteration  20: 173587.600 ops/s
Iteration  21: 173237.717 ops/s
Iteration  22: 173169.658 ops/s
Iteration  23: 173488.698 ops/s
Iteration  24: 173003.532 ops/s
Iteration  25: 173222.622 ops/s
Iteration  26: 173437.828 ops/s
Iteration  27: 173542.518 ops/s
Iteration  28: 173396.722 ops/s
Iteration  29: 173470.398 ops/s
Iteration  30: 172394.602 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_706._Benchmark.benchmark_Cluster_706":
  173194.829 ±(99.9%) 199.712 ops/s [Average]
  (min, avg, max) = (172394.602, 173194.829, 173587.600), stdev = 298.919
  CI (99.9%): [172995.118, 173394.541] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_706._Benchmark.benchmark_Cluster_706  thrpt   30  173194.829 ± 199.712  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_707._Benchmark.benchmark_Cluster_707$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_707._Benchmark.benchmark_Cluster_707

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 139608.564 ops/s
# Warmup Iteration   2: 151747.037 ops/s
# Warmup Iteration   3: 160871.394 ops/s
# Warmup Iteration   4: 199152.090 ops/s
# Warmup Iteration   5: 199195.557 ops/s
# Warmup Iteration   6: 199504.887 ops/s
# Warmup Iteration   7: 197988.862 ops/s
# Warmup Iteration   8: 199062.339 ops/s
# Warmup Iteration   9: 198564.107 ops/s
# Warmup Iteration  10: 198960.960 ops/s
# Warmup Iteration  11: 199448.198 ops/s
# Warmup Iteration  12: 199165.059 ops/s
# Warmup Iteration  13: 199288.432 ops/s
# Warmup Iteration  14: 199383.418 ops/s
# Warmup Iteration  15: 199263.660 ops/s
# Warmup Iteration  16: 171455.402 ops/s
# Warmup Iteration  17: 192104.073 ops/s
# Warmup Iteration  18: 206149.176 ops/s
# Warmup Iteration  19: 206201.658 ops/s
# Warmup Iteration  20: 206762.165 ops/s
# Warmup Iteration  21: 207307.996 ops/s
# Warmup Iteration  22: 206622.626 ops/s
# Warmup Iteration  23: 206788.052 ops/s
# Warmup Iteration  24: 206430.047 ops/s
# Warmup Iteration  25: 206897.771 ops/s
# Warmup Iteration  26: 206672.674 ops/s
# Warmup Iteration  27: 207080.314 ops/s
# Warmup Iteration  28: 206921.909 ops/s
# Warmup Iteration  29: 207006.344 ops/s
# Warmup Iteration  30: 206694.465 ops/s
Iteration   1: 206902.835 ops/s
Iteration   2: 206766.017 ops/s
Iteration   3: 206823.684 ops/s
Iteration   4: 206836.527 ops/s
Iteration   5: 206679.134 ops/s
Iteration   6: 206821.240 ops/s
Iteration   7: 207023.409 ops/s
Iteration   8: 207402.839 ops/s
Iteration   9: 207126.885 ops/s
Iteration  10: 207428.039 ops/s
Iteration  11: 206641.699 ops/s
Iteration  12: 207173.782 ops/s
Iteration  13: 206461.143 ops/s
Iteration  14: 206704.588 ops/s
Iteration  15: 206798.687 ops/s
Iteration  16: 206889.991 ops/s
Iteration  17: 206189.120 ops/s
Iteration  18: 206697.955 ops/s
Iteration  19: 206502.657 ops/s
Iteration  20: 205926.842 ops/s
Iteration  21: 206726.064 ops/s
Iteration  22: 206193.598 ops/s
Iteration  23: 207087.647 ops/s
Iteration  24: 207303.044 ops/s
Iteration  25: 207029.882 ops/s
Iteration  26: 207247.586 ops/s
Iteration  27: 206894.232 ops/s
Iteration  28: 206823.774 ops/s
Iteration  29: 206925.156 ops/s
Iteration  30: 206672.055 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_707._Benchmark.benchmark_Cluster_707":
  206823.337 ±(99.9%) 230.835 ops/s [Average]
  (min, avg, max) = (205926.842, 206823.337, 207428.039), stdev = 345.503
  CI (99.9%): [206592.502, 207054.172] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_707._Benchmark.benchmark_Cluster_707  thrpt   30  206823.337 ± 230.835  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_708._Benchmark.benchmark_Cluster_708$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_708._Benchmark.benchmark_Cluster_708

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75814.574 ops/s
# Warmup Iteration   2: 118703.139 ops/s
# Warmup Iteration   3: 169077.476 ops/s
# Warmup Iteration   4: 168657.044 ops/s
# Warmup Iteration   5: 170032.727 ops/s
# Warmup Iteration   6: 169484.756 ops/s
# Warmup Iteration   7: 156357.169 ops/s
# Warmup Iteration   8: 148592.087 ops/s
# Warmup Iteration   9: 169643.239 ops/s
# Warmup Iteration  10: 169445.003 ops/s
# Warmup Iteration  11: 169430.578 ops/s
# Warmup Iteration  12: 169562.957 ops/s
# Warmup Iteration  13: 169992.339 ops/s
# Warmup Iteration  14: 169737.341 ops/s
# Warmup Iteration  15: 169678.613 ops/s
# Warmup Iteration  16: 169922.123 ops/s
# Warmup Iteration  17: 173312.523 ops/s
# Warmup Iteration  18: 173416.430 ops/s
# Warmup Iteration  19: 173392.664 ops/s
# Warmup Iteration  20: 173513.579 ops/s
# Warmup Iteration  21: 173245.274 ops/s
# Warmup Iteration  22: 173188.366 ops/s
# Warmup Iteration  23: 173479.117 ops/s
# Warmup Iteration  24: 173774.049 ops/s
# Warmup Iteration  25: 173559.351 ops/s
# Warmup Iteration  26: 173804.580 ops/s
# Warmup Iteration  27: 173886.575 ops/s
# Warmup Iteration  28: 173753.967 ops/s
# Warmup Iteration  29: 173750.919 ops/s
# Warmup Iteration  30: 173293.553 ops/s
Iteration   1: 173320.567 ops/s
Iteration   2: 173296.942 ops/s
Iteration   3: 173150.294 ops/s
Iteration   4: 173754.975 ops/s
Iteration   5: 173402.070 ops/s
Iteration   6: 173332.533 ops/s
Iteration   7: 173664.650 ops/s
Iteration   8: 173782.454 ops/s
Iteration   9: 173178.862 ops/s
Iteration  10: 173287.514 ops/s
Iteration  11: 173448.905 ops/s
Iteration  12: 172514.180 ops/s
Iteration  13: 173199.160 ops/s
Iteration  14: 173633.221 ops/s
Iteration  15: 173789.847 ops/s
Iteration  16: 173090.786 ops/s
Iteration  17: 173748.060 ops/s
Iteration  18: 173452.875 ops/s
Iteration  19: 173533.602 ops/s
Iteration  20: 173294.117 ops/s
Iteration  21: 173158.787 ops/s
Iteration  22: 173563.881 ops/s
Iteration  23: 173408.606 ops/s
Iteration  24: 173944.754 ops/s
Iteration  25: 173456.427 ops/s
Iteration  26: 173656.654 ops/s
Iteration  27: 173263.142 ops/s
Iteration  28: 173457.999 ops/s
Iteration  29: 173041.893 ops/s
Iteration  30: 173532.358 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_708._Benchmark.benchmark_Cluster_708":
  173412.004 ±(99.9%) 191.582 ops/s [Average]
  (min, avg, max) = (172514.180, 173412.004, 173944.754), stdev = 286.751
  CI (99.9%): [173220.422, 173603.586] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_708._Benchmark.benchmark_Cluster_708  thrpt   30  173412.004 ± 191.582  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_709._Benchmark.benchmark_Cluster_709$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_709._Benchmark.benchmark_Cluster_709

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45646.085 ops/s
# Warmup Iteration   2: 79483.211 ops/s
# Warmup Iteration   3: 134945.418 ops/s
# Warmup Iteration   4: 134630.173 ops/s
# Warmup Iteration   5: 135578.293 ops/s
# Warmup Iteration   6: 135508.104 ops/s
# Warmup Iteration   7: 135392.525 ops/s
# Warmup Iteration   8: 110973.601 ops/s
# Warmup Iteration   9: 131335.612 ops/s
# Warmup Iteration  10: 135625.289 ops/s
# Warmup Iteration  11: 135372.931 ops/s
# Warmup Iteration  12: 135405.638 ops/s
# Warmup Iteration  13: 135239.180 ops/s
# Warmup Iteration  14: 135449.279 ops/s
# Warmup Iteration  15: 135574.654 ops/s
# Warmup Iteration  16: 135582.573 ops/s
# Warmup Iteration  17: 137153.592 ops/s
# Warmup Iteration  18: 137107.865 ops/s
# Warmup Iteration  19: 136886.381 ops/s
# Warmup Iteration  20: 136737.444 ops/s
# Warmup Iteration  21: 136327.100 ops/s
# Warmup Iteration  22: 136705.521 ops/s
# Warmup Iteration  23: 136815.106 ops/s
# Warmup Iteration  24: 136844.652 ops/s
# Warmup Iteration  25: 136891.723 ops/s
# Warmup Iteration  26: 136757.999 ops/s
# Warmup Iteration  27: 137050.261 ops/s
# Warmup Iteration  28: 136518.236 ops/s
# Warmup Iteration  29: 136833.262 ops/s
# Warmup Iteration  30: 136764.992 ops/s
Iteration   1: 136509.572 ops/s
Iteration   2: 136858.772 ops/s
Iteration   3: 137005.341 ops/s
Iteration   4: 136607.332 ops/s
Iteration   5: 137079.111 ops/s
Iteration   6: 136821.756 ops/s
Iteration   7: 137031.353 ops/s
Iteration   8: 136906.462 ops/s
Iteration   9: 136964.475 ops/s
Iteration  10: 136992.400 ops/s
Iteration  11: 136700.600 ops/s
Iteration  12: 137068.196 ops/s
Iteration  13: 137019.859 ops/s
Iteration  14: 136772.166 ops/s
Iteration  15: 136700.179 ops/s
Iteration  16: 136611.557 ops/s
Iteration  17: 137049.040 ops/s
Iteration  18: 137139.089 ops/s
Iteration  19: 137133.633 ops/s
Iteration  20: 136964.091 ops/s
Iteration  21: 136824.590 ops/s
Iteration  22: 137082.295 ops/s
Iteration  23: 136248.912 ops/s
Iteration  24: 136913.864 ops/s
Iteration  25: 137171.340 ops/s
Iteration  26: 136413.921 ops/s
Iteration  27: 137276.482 ops/s
Iteration  28: 137331.172 ops/s
Iteration  29: 137096.420 ops/s
Iteration  30: 136932.789 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_709._Benchmark.benchmark_Cluster_709":
  136907.559 ±(99.9%) 167.261 ops/s [Average]
  (min, avg, max) = (136248.912, 136907.559, 137331.172), stdev = 250.348
  CI (99.9%): [136740.298, 137074.820] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_709._Benchmark.benchmark_Cluster_709  thrpt   30  136907.559 ± 167.261  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_71._Benchmark.benchmark_Cluster_71$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_71._Benchmark.benchmark_Cluster_71

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 90184.534 ops/s
# Warmup Iteration   2: 156874.505 ops/s
# Warmup Iteration   3: 226233.691 ops/s
# Warmup Iteration   4: 224834.870 ops/s
# Warmup Iteration   5: 225800.691 ops/s
# Warmup Iteration   6: 226184.085 ops/s
# Warmup Iteration   7: 179464.162 ops/s
# Warmup Iteration   8: 226175.769 ops/s
# Warmup Iteration   9: 226484.914 ops/s
# Warmup Iteration  10: 226215.629 ops/s
# Warmup Iteration  11: 226120.998 ops/s
# Warmup Iteration  12: 225895.541 ops/s
# Warmup Iteration  13: 226295.456 ops/s
# Warmup Iteration  14: 226112.014 ops/s
# Warmup Iteration  15: 226087.339 ops/s
# Warmup Iteration  16: 226302.220 ops/s
# Warmup Iteration  17: 226181.838 ops/s
# Warmup Iteration  18: 226113.604 ops/s
# Warmup Iteration  19: 226075.323 ops/s
# Warmup Iteration  20: 225802.578 ops/s
# Warmup Iteration  21: 226139.485 ops/s
# Warmup Iteration  22: 225893.427 ops/s
# Warmup Iteration  23: 225766.160 ops/s
# Warmup Iteration  24: 226146.328 ops/s
# Warmup Iteration  25: 225624.233 ops/s
# Warmup Iteration  26: 225568.331 ops/s
# Warmup Iteration  27: 226019.019 ops/s
# Warmup Iteration  28: 225827.647 ops/s
# Warmup Iteration  29: 225869.676 ops/s
# Warmup Iteration  30: 226072.377 ops/s
Iteration   1: 226109.394 ops/s
Iteration   2: 226346.592 ops/s
Iteration   3: 226159.243 ops/s
Iteration   4: 226221.215 ops/s
Iteration   5: 226194.807 ops/s
Iteration   6: 226134.798 ops/s
Iteration   7: 225825.650 ops/s
Iteration   8: 226216.384 ops/s
Iteration   9: 225539.742 ops/s
Iteration  10: 225948.919 ops/s
Iteration  11: 225863.233 ops/s
Iteration  12: 225752.466 ops/s
Iteration  13: 225779.918 ops/s
Iteration  14: 225455.867 ops/s
Iteration  15: 225695.858 ops/s
Iteration  16: 225869.738 ops/s
Iteration  17: 226212.259 ops/s
Iteration  18: 225947.259 ops/s
Iteration  19: 226217.250 ops/s
Iteration  20: 225986.974 ops/s
Iteration  21: 225528.530 ops/s
Iteration  22: 225751.303 ops/s
Iteration  23: 226026.541 ops/s
Iteration  24: 225776.342 ops/s
Iteration  25: 226148.067 ops/s
Iteration  26: 225803.092 ops/s
Iteration  27: 225933.606 ops/s
Iteration  28: 225774.795 ops/s
Iteration  29: 225704.567 ops/s
Iteration  30: 226193.233 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_71._Benchmark.benchmark_Cluster_71":
  225937.255 ±(99.9%) 158.907 ops/s [Average]
  (min, avg, max) = (225455.867, 225937.255, 226346.592), stdev = 237.845
  CI (99.9%): [225778.347, 226096.162] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_71._Benchmark.benchmark_Cluster_71  thrpt   30  225937.255 ± 158.907  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_710._Benchmark.benchmark_Cluster_710$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_710._Benchmark.benchmark_Cluster_710

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 85078.469 ops/s
# Warmup Iteration   2: 113595.483 ops/s
# Warmup Iteration   3: 166670.249 ops/s
# Warmup Iteration   4: 165769.511 ops/s
# Warmup Iteration   5: 166832.952 ops/s
# Warmup Iteration   6: 166357.659 ops/s
# Warmup Iteration   7: 167323.128 ops/s
# Warmup Iteration   8: 166976.473 ops/s
# Warmup Iteration   9: 132084.207 ops/s
# Warmup Iteration  10: 166556.619 ops/s
# Warmup Iteration  11: 167214.014 ops/s
# Warmup Iteration  12: 166510.003 ops/s
# Warmup Iteration  13: 167287.627 ops/s
# Warmup Iteration  14: 167596.847 ops/s
# Warmup Iteration  15: 167417.695 ops/s
# Warmup Iteration  16: 167412.679 ops/s
# Warmup Iteration  17: 173220.061 ops/s
# Warmup Iteration  18: 173055.161 ops/s
# Warmup Iteration  19: 173340.860 ops/s
# Warmup Iteration  20: 172992.917 ops/s
# Warmup Iteration  21: 172870.742 ops/s
# Warmup Iteration  22: 173387.727 ops/s
# Warmup Iteration  23: 173243.848 ops/s
# Warmup Iteration  24: 173121.173 ops/s
# Warmup Iteration  25: 173302.698 ops/s
# Warmup Iteration  26: 173260.098 ops/s
# Warmup Iteration  27: 172310.833 ops/s
# Warmup Iteration  28: 172266.162 ops/s
# Warmup Iteration  29: 173248.144 ops/s
# Warmup Iteration  30: 172744.960 ops/s
Iteration   1: 172620.317 ops/s
Iteration   2: 173532.074 ops/s
Iteration   3: 173656.092 ops/s
Iteration   4: 173423.585 ops/s
Iteration   5: 173467.030 ops/s
Iteration   6: 172515.868 ops/s
Iteration   7: 172536.833 ops/s
Iteration   8: 172382.389 ops/s
Iteration   9: 172196.601 ops/s
Iteration  10: 172834.457 ops/s
Iteration  11: 173390.634 ops/s
Iteration  12: 173477.048 ops/s
Iteration  13: 173513.216 ops/s
Iteration  14: 172927.280 ops/s
Iteration  15: 173099.230 ops/s
Iteration  16: 173097.528 ops/s
Iteration  17: 172743.683 ops/s
Iteration  18: 173210.695 ops/s
Iteration  19: 172780.101 ops/s
Iteration  20: 172698.142 ops/s
Iteration  21: 172748.771 ops/s
Iteration  22: 173078.281 ops/s
Iteration  23: 173435.130 ops/s
Iteration  24: 173367.700 ops/s
Iteration  25: 172968.009 ops/s
Iteration  26: 173149.240 ops/s
Iteration  27: 173114.896 ops/s
Iteration  28: 172716.866 ops/s
Iteration  29: 172524.974 ops/s
Iteration  30: 173332.386 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_710._Benchmark.benchmark_Cluster_710":
  173017.969 ±(99.9%) 263.566 ops/s [Average]
  (min, avg, max) = (172196.601, 173017.969, 173656.092), stdev = 394.493
  CI (99.9%): [172754.402, 173281.535] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_710._Benchmark.benchmark_Cluster_710  thrpt   30  173017.969 ± 263.566  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_711._Benchmark.benchmark_Cluster_711$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_711._Benchmark.benchmark_Cluster_711

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67673.831 ops/s
# Warmup Iteration   2: 118051.694 ops/s
# Warmup Iteration   3: 168010.742 ops/s
# Warmup Iteration   4: 167091.960 ops/s
# Warmup Iteration   5: 168139.374 ops/s
# Warmup Iteration   6: 168101.567 ops/s
# Warmup Iteration   7: 132277.960 ops/s
# Warmup Iteration   8: 168258.614 ops/s
# Warmup Iteration   9: 167939.920 ops/s
# Warmup Iteration  10: 167502.764 ops/s
# Warmup Iteration  11: 168153.799 ops/s
# Warmup Iteration  12: 168238.414 ops/s
# Warmup Iteration  13: 168116.523 ops/s
# Warmup Iteration  14: 168121.735 ops/s
# Warmup Iteration  15: 168549.935 ops/s
# Warmup Iteration  16: 168035.358 ops/s
# Warmup Iteration  17: 167888.832 ops/s
# Warmup Iteration  18: 168165.732 ops/s
# Warmup Iteration  19: 167907.325 ops/s
# Warmup Iteration  20: 168143.005 ops/s
# Warmup Iteration  21: 168244.365 ops/s
# Warmup Iteration  22: 168251.528 ops/s
# Warmup Iteration  23: 168061.059 ops/s
# Warmup Iteration  24: 168018.308 ops/s
# Warmup Iteration  25: 167984.160 ops/s
# Warmup Iteration  26: 167704.185 ops/s
# Warmup Iteration  27: 168304.942 ops/s
# Warmup Iteration  28: 167814.519 ops/s
# Warmup Iteration  29: 168036.394 ops/s
# Warmup Iteration  30: 168064.419 ops/s
Iteration   1: 167974.651 ops/s
Iteration   2: 167971.237 ops/s
Iteration   3: 168165.105 ops/s
Iteration   4: 168053.320 ops/s
Iteration   5: 168036.112 ops/s
Iteration   6: 167703.397 ops/s
Iteration   7: 167918.495 ops/s
Iteration   8: 168095.381 ops/s
Iteration   9: 168120.273 ops/s
Iteration  10: 167584.474 ops/s
Iteration  11: 168150.770 ops/s
Iteration  12: 167637.586 ops/s
Iteration  13: 167961.852 ops/s
Iteration  14: 167985.599 ops/s
Iteration  15: 168137.011 ops/s
Iteration  16: 168435.264 ops/s
Iteration  17: 168274.519 ops/s
Iteration  18: 168160.745 ops/s
Iteration  19: 167960.884 ops/s
Iteration  20: 167872.482 ops/s
Iteration  21: 167392.806 ops/s
Iteration  22: 168151.120 ops/s
Iteration  23: 167831.744 ops/s
Iteration  24: 167594.125 ops/s
Iteration  25: 167843.587 ops/s
Iteration  26: 167894.076 ops/s
Iteration  27: 167968.296 ops/s
Iteration  28: 168109.789 ops/s
Iteration  29: 168056.304 ops/s
Iteration  30: 168388.373 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_711._Benchmark.benchmark_Cluster_711":
  167980.979 ±(99.9%) 156.102 ops/s [Average]
  (min, avg, max) = (167392.806, 167980.979, 168435.264), stdev = 233.647
  CI (99.9%): [167824.877, 168137.082] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_711._Benchmark.benchmark_Cluster_711  thrpt   30  167980.979 ± 156.102  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_712._Benchmark.benchmark_Cluster_712$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_712._Benchmark.benchmark_Cluster_712

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77927.288 ops/s
# Warmup Iteration   2: 144915.713 ops/s
# Warmup Iteration   3: 198865.633 ops/s
# Warmup Iteration   4: 200557.134 ops/s
# Warmup Iteration   5: 200434.884 ops/s
# Warmup Iteration   6: 175649.855 ops/s
# Warmup Iteration   7: 184065.188 ops/s
# Warmup Iteration   8: 199845.628 ops/s
# Warmup Iteration   9: 200511.879 ops/s
# Warmup Iteration  10: 200482.713 ops/s
# Warmup Iteration  11: 200555.091 ops/s
# Warmup Iteration  12: 200575.962 ops/s
# Warmup Iteration  13: 200413.082 ops/s
# Warmup Iteration  14: 200651.235 ops/s
# Warmup Iteration  15: 200402.568 ops/s
# Warmup Iteration  16: 200604.946 ops/s
# Warmup Iteration  17: 200909.786 ops/s
# Warmup Iteration  18: 200535.325 ops/s
# Warmup Iteration  19: 200883.207 ops/s
# Warmup Iteration  20: 200734.314 ops/s
# Warmup Iteration  21: 200704.928 ops/s
# Warmup Iteration  22: 200758.140 ops/s
# Warmup Iteration  23: 200349.800 ops/s
# Warmup Iteration  24: 200770.072 ops/s
# Warmup Iteration  25: 200943.033 ops/s
# Warmup Iteration  26: 200673.684 ops/s
# Warmup Iteration  27: 200457.331 ops/s
# Warmup Iteration  28: 201004.257 ops/s
# Warmup Iteration  29: 200716.897 ops/s
# Warmup Iteration  30: 200528.750 ops/s
Iteration   1: 200117.639 ops/s
Iteration   2: 200289.048 ops/s
Iteration   3: 200825.524 ops/s
Iteration   4: 200892.683 ops/s
Iteration   5: 200543.577 ops/s
Iteration   6: 200782.157 ops/s
Iteration   7: 200239.160 ops/s
Iteration   8: 200780.068 ops/s
Iteration   9: 200580.063 ops/s
Iteration  10: 201001.968 ops/s
Iteration  11: 200541.896 ops/s
Iteration  12: 201041.462 ops/s
Iteration  13: 200634.512 ops/s
Iteration  14: 200744.370 ops/s
Iteration  15: 200843.956 ops/s
Iteration  16: 200353.604 ops/s
Iteration  17: 200788.277 ops/s
Iteration  18: 200293.465 ops/s
Iteration  19: 200812.708 ops/s
Iteration  20: 200538.881 ops/s
Iteration  21: 201066.260 ops/s
Iteration  22: 200674.070 ops/s
Iteration  23: 200813.111 ops/s
Iteration  24: 200177.602 ops/s
Iteration  25: 200753.738 ops/s
Iteration  26: 200650.405 ops/s
Iteration  27: 200916.519 ops/s
Iteration  28: 200451.903 ops/s
Iteration  29: 200698.173 ops/s
Iteration  30: 200790.126 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_712._Benchmark.benchmark_Cluster_712":
  200654.564 ±(99.9%) 170.889 ops/s [Average]
  (min, avg, max) = (200117.639, 200654.564, 201066.260), stdev = 255.779
  CI (99.9%): [200483.675, 200825.453] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_712._Benchmark.benchmark_Cluster_712  thrpt   30  200654.564 ± 170.889  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_713._Benchmark.benchmark_Cluster_713$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_713._Benchmark.benchmark_Cluster_713

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 107861.197 ops/s
# Warmup Iteration   2: 209091.529 ops/s
# Warmup Iteration   3: 254870.012 ops/s
# Warmup Iteration   4: 254732.185 ops/s
# Warmup Iteration   5: 243636.288 ops/s
# Warmup Iteration   6: 215978.571 ops/s
# Warmup Iteration   7: 256669.597 ops/s
# Warmup Iteration   8: 256683.735 ops/s
# Warmup Iteration   9: 256690.626 ops/s
# Warmup Iteration  10: 256552.227 ops/s
# Warmup Iteration  11: 256524.851 ops/s
# Warmup Iteration  12: 256524.186 ops/s
# Warmup Iteration  13: 256093.819 ops/s
# Warmup Iteration  14: 255573.742 ops/s
# Warmup Iteration  15: 255787.445 ops/s
# Warmup Iteration  16: 256579.379 ops/s
# Warmup Iteration  17: 256676.443 ops/s
# Warmup Iteration  18: 255042.130 ops/s
# Warmup Iteration  19: 256543.117 ops/s
# Warmup Iteration  20: 256030.269 ops/s
# Warmup Iteration  21: 257345.901 ops/s
# Warmup Iteration  22: 254531.791 ops/s
# Warmup Iteration  23: 254928.938 ops/s
# Warmup Iteration  24: 256033.814 ops/s
# Warmup Iteration  25: 255759.106 ops/s
# Warmup Iteration  26: 256049.658 ops/s
# Warmup Iteration  27: 255140.809 ops/s
# Warmup Iteration  28: 256295.276 ops/s
# Warmup Iteration  29: 255422.911 ops/s
# Warmup Iteration  30: 255849.376 ops/s
Iteration   1: 255697.966 ops/s
Iteration   2: 256265.912 ops/s
Iteration   3: 256267.674 ops/s
Iteration   4: 256494.403 ops/s
Iteration   5: 255703.821 ops/s
Iteration   6: 254769.723 ops/s
Iteration   7: 256382.017 ops/s
Iteration   8: 255182.925 ops/s
Iteration   9: 256872.414 ops/s
Iteration  10: 256616.121 ops/s
Iteration  11: 255678.534 ops/s
Iteration  12: 255681.925 ops/s
Iteration  13: 254645.529 ops/s
Iteration  14: 256229.520 ops/s
Iteration  15: 256248.478 ops/s
Iteration  16: 256179.454 ops/s
Iteration  17: 255841.698 ops/s
Iteration  18: 255189.148 ops/s
Iteration  19: 255116.138 ops/s
Iteration  20: 256548.041 ops/s
Iteration  21: 256196.197 ops/s
Iteration  22: 255568.210 ops/s
Iteration  23: 255912.714 ops/s
Iteration  24: 255775.905 ops/s
Iteration  25: 256423.140 ops/s
Iteration  26: 256634.178 ops/s
Iteration  27: 257303.186 ops/s
Iteration  28: 256847.711 ops/s
Iteration  29: 256218.569 ops/s
Iteration  30: 255609.735 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_713._Benchmark.benchmark_Cluster_713":
  256003.366 ±(99.9%) 420.068 ops/s [Average]
  (min, avg, max) = (254645.529, 256003.366, 257303.186), stdev = 628.739
  CI (99.9%): [255583.298, 256423.435] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_713._Benchmark.benchmark_Cluster_713  thrpt   30  256003.366 ± 420.068  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_714._Benchmark.benchmark_Cluster_714$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_714._Benchmark.benchmark_Cluster_714

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61462.808 ops/s
# Warmup Iteration   2: 97128.612 ops/s
# Warmup Iteration   3: 152329.454 ops/s
# Warmup Iteration   4: 151380.874 ops/s
# Warmup Iteration   5: 152598.266 ops/s
# Warmup Iteration   6: 152825.088 ops/s
# Warmup Iteration   7: 152025.713 ops/s
# Warmup Iteration   8: 117602.418 ops/s
# Warmup Iteration   9: 151982.663 ops/s
# Warmup Iteration  10: 152286.662 ops/s
# Warmup Iteration  11: 152662.744 ops/s
# Warmup Iteration  12: 152932.270 ops/s
# Warmup Iteration  13: 152790.410 ops/s
# Warmup Iteration  14: 152763.322 ops/s
# Warmup Iteration  15: 152437.242 ops/s
# Warmup Iteration  16: 152404.386 ops/s
# Warmup Iteration  17: 154097.680 ops/s
# Warmup Iteration  18: 153739.851 ops/s
# Warmup Iteration  19: 153733.990 ops/s
# Warmup Iteration  20: 154422.922 ops/s
# Warmup Iteration  21: 154191.910 ops/s
# Warmup Iteration  22: 154256.323 ops/s
# Warmup Iteration  23: 154125.637 ops/s
# Warmup Iteration  24: 153964.060 ops/s
# Warmup Iteration  25: 153970.665 ops/s
# Warmup Iteration  26: 153361.675 ops/s
# Warmup Iteration  27: 153760.748 ops/s
# Warmup Iteration  28: 154119.728 ops/s
# Warmup Iteration  29: 153699.235 ops/s
# Warmup Iteration  30: 154184.997 ops/s
Iteration   1: 153990.085 ops/s
Iteration   2: 153606.125 ops/s
Iteration   3: 153430.639 ops/s
Iteration   4: 153402.378 ops/s
Iteration   5: 153437.854 ops/s
Iteration   6: 153995.931 ops/s
Iteration   7: 153876.877 ops/s
Iteration   8: 153864.685 ops/s
Iteration   9: 154328.228 ops/s
Iteration  10: 153828.251 ops/s
Iteration  11: 154016.758 ops/s
Iteration  12: 153960.917 ops/s
Iteration  13: 153859.751 ops/s
Iteration  14: 153677.507 ops/s
Iteration  15: 154372.862 ops/s
Iteration  16: 153908.679 ops/s
Iteration  17: 154075.891 ops/s
Iteration  18: 153397.825 ops/s
Iteration  19: 153763.836 ops/s
Iteration  20: 153467.731 ops/s
Iteration  21: 154483.508 ops/s
Iteration  22: 153861.491 ops/s
Iteration  23: 154408.342 ops/s
Iteration  24: 154095.758 ops/s
Iteration  25: 153602.382 ops/s
Iteration  26: 153983.492 ops/s
Iteration  27: 154300.502 ops/s
Iteration  28: 153657.040 ops/s
Iteration  29: 154082.403 ops/s
Iteration  30: 153858.841 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_714._Benchmark.benchmark_Cluster_714":
  153886.552 ±(99.9%) 205.341 ops/s [Average]
  (min, avg, max) = (153397.825, 153886.552, 154483.508), stdev = 307.345
  CI (99.9%): [153681.211, 154091.893] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_714._Benchmark.benchmark_Cluster_714  thrpt   30  153886.552 ± 205.341  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_715._Benchmark.benchmark_Cluster_715$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_715._Benchmark.benchmark_Cluster_715

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 81285.062 ops/s
# Warmup Iteration   2: 136836.573 ops/s
# Warmup Iteration   3: 188156.330 ops/s
# Warmup Iteration   4: 186395.990 ops/s
# Warmup Iteration   5: 188290.694 ops/s
# Warmup Iteration   6: 188163.867 ops/s
# Warmup Iteration   7: 149952.290 ops/s
# Warmup Iteration   8: 188667.771 ops/s
# Warmup Iteration   9: 188630.857 ops/s
# Warmup Iteration  10: 188808.993 ops/s
# Warmup Iteration  11: 188811.367 ops/s
# Warmup Iteration  12: 188249.070 ops/s
# Warmup Iteration  13: 188669.469 ops/s
# Warmup Iteration  14: 188686.635 ops/s
# Warmup Iteration  15: 188760.088 ops/s
# Warmup Iteration  16: 188705.790 ops/s
# Warmup Iteration  17: 188923.571 ops/s
# Warmup Iteration  18: 188788.406 ops/s
# Warmup Iteration  19: 188991.229 ops/s
# Warmup Iteration  20: 188702.921 ops/s
# Warmup Iteration  21: 188847.907 ops/s
# Warmup Iteration  22: 188187.096 ops/s
# Warmup Iteration  23: 188834.139 ops/s
# Warmup Iteration  24: 188732.470 ops/s
# Warmup Iteration  25: 188994.784 ops/s
# Warmup Iteration  26: 188982.436 ops/s
# Warmup Iteration  27: 188647.449 ops/s
# Warmup Iteration  28: 188947.862 ops/s
# Warmup Iteration  29: 188976.091 ops/s
# Warmup Iteration  30: 189080.876 ops/s
Iteration   1: 188763.727 ops/s
Iteration   2: 189209.697 ops/s
Iteration   3: 188883.889 ops/s
Iteration   4: 189148.750 ops/s
Iteration   5: 189170.840 ops/s
Iteration   6: 188941.997 ops/s
Iteration   7: 188798.365 ops/s
Iteration   8: 188675.415 ops/s
Iteration   9: 189088.565 ops/s
Iteration  10: 188703.814 ops/s
Iteration  11: 188818.444 ops/s
Iteration  12: 188826.886 ops/s
Iteration  13: 189116.726 ops/s
Iteration  14: 188889.217 ops/s
Iteration  15: 189046.972 ops/s
Iteration  16: 188911.699 ops/s
Iteration  17: 189216.983 ops/s
Iteration  18: 189166.487 ops/s
Iteration  19: 189034.228 ops/s
Iteration  20: 189168.173 ops/s
Iteration  21: 189103.742 ops/s
Iteration  22: 189230.211 ops/s
Iteration  23: 188748.967 ops/s
Iteration  24: 188705.504 ops/s
Iteration  25: 188713.780 ops/s
Iteration  26: 188989.973 ops/s
Iteration  27: 188839.468 ops/s
Iteration  28: 188832.310 ops/s
Iteration  29: 188770.500 ops/s
Iteration  30: 189087.795 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_715._Benchmark.benchmark_Cluster_715":
  188953.437 ±(99.9%) 121.393 ops/s [Average]
  (min, avg, max) = (188675.415, 188953.437, 189230.211), stdev = 181.695
  CI (99.9%): [188832.045, 189074.830] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_715._Benchmark.benchmark_Cluster_715  thrpt   30  188953.437 ± 121.393  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_716._Benchmark.benchmark_Cluster_716$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_716._Benchmark.benchmark_Cluster_716

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47390.895 ops/s
# Warmup Iteration   2: 126442.414 ops/s
# Warmup Iteration   3: 173362.437 ops/s
# Warmup Iteration   4: 174577.607 ops/s
# Warmup Iteration   5: 146354.271 ops/s
# Warmup Iteration   6: 166794.772 ops/s
# Warmup Iteration   7: 174909.355 ops/s
# Warmup Iteration   8: 175239.971 ops/s
# Warmup Iteration   9: 174918.674 ops/s
# Warmup Iteration  10: 174818.168 ops/s
# Warmup Iteration  11: 174686.958 ops/s
# Warmup Iteration  12: 174768.903 ops/s
# Warmup Iteration  13: 174818.794 ops/s
# Warmup Iteration  14: 174586.726 ops/s
# Warmup Iteration  15: 174129.523 ops/s
# Warmup Iteration  16: 174812.677 ops/s
# Warmup Iteration  17: 174443.185 ops/s
# Warmup Iteration  18: 174817.093 ops/s
# Warmup Iteration  19: 174528.765 ops/s
# Warmup Iteration  20: 174806.317 ops/s
# Warmup Iteration  21: 174894.544 ops/s
# Warmup Iteration  22: 175077.083 ops/s
# Warmup Iteration  23: 174541.611 ops/s
# Warmup Iteration  24: 175032.401 ops/s
# Warmup Iteration  25: 174815.260 ops/s
# Warmup Iteration  26: 174708.991 ops/s
# Warmup Iteration  27: 174810.245 ops/s
# Warmup Iteration  28: 174557.057 ops/s
# Warmup Iteration  29: 174489.118 ops/s
# Warmup Iteration  30: 175065.621 ops/s
Iteration   1: 174720.942 ops/s
Iteration   2: 174746.175 ops/s
Iteration   3: 174654.486 ops/s
Iteration   4: 175325.492 ops/s
Iteration   5: 174248.850 ops/s
Iteration   6: 174589.008 ops/s
Iteration   7: 174569.564 ops/s
Iteration   8: 174192.467 ops/s
Iteration   9: 174411.171 ops/s
Iteration  10: 175015.961 ops/s
Iteration  11: 174776.152 ops/s
Iteration  12: 174966.353 ops/s
Iteration  13: 174981.117 ops/s
Iteration  14: 175172.654 ops/s
Iteration  15: 175086.010 ops/s
Iteration  16: 174687.600 ops/s
Iteration  17: 175153.698 ops/s
Iteration  18: 174562.508 ops/s
Iteration  19: 174713.141 ops/s
Iteration  20: 174962.358 ops/s
Iteration  21: 174733.572 ops/s
Iteration  22: 174599.966 ops/s
Iteration  23: 175135.277 ops/s
Iteration  24: 175217.815 ops/s
Iteration  25: 175154.927 ops/s
Iteration  26: 175090.259 ops/s
Iteration  27: 175126.951 ops/s
Iteration  28: 175081.924 ops/s
Iteration  29: 174762.744 ops/s
Iteration  30: 174915.290 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_716._Benchmark.benchmark_Cluster_716":
  174845.148 ±(99.9%) 194.829 ops/s [Average]
  (min, avg, max) = (174192.467, 174845.148, 175325.492), stdev = 291.611
  CI (99.9%): [174650.319, 175039.977] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_716._Benchmark.benchmark_Cluster_716  thrpt   30  174845.148 ± 194.829  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_717._Benchmark.benchmark_Cluster_717$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_717._Benchmark.benchmark_Cluster_717

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45173.180 ops/s
# Warmup Iteration   2: 118736.432 ops/s
# Warmup Iteration   3: 183307.451 ops/s
# Warmup Iteration   4: 184368.778 ops/s
# Warmup Iteration   5: 184903.580 ops/s
# Warmup Iteration   6: 147020.474 ops/s
# Warmup Iteration   7: 184098.509 ops/s
# Warmup Iteration   8: 184799.355 ops/s
# Warmup Iteration   9: 184857.813 ops/s
# Warmup Iteration  10: 184987.964 ops/s
# Warmup Iteration  11: 182991.228 ops/s
# Warmup Iteration  12: 183393.789 ops/s
# Warmup Iteration  13: 184745.479 ops/s
# Warmup Iteration  14: 185192.989 ops/s
# Warmup Iteration  15: 183570.318 ops/s
# Warmup Iteration  16: 184930.412 ops/s
# Warmup Iteration  17: 185097.820 ops/s
# Warmup Iteration  18: 184684.305 ops/s
# Warmup Iteration  19: 184657.887 ops/s
# Warmup Iteration  20: 184815.554 ops/s
# Warmup Iteration  21: 184657.986 ops/s
# Warmup Iteration  22: 185183.737 ops/s
# Warmup Iteration  23: 184157.098 ops/s
# Warmup Iteration  24: 184524.018 ops/s
# Warmup Iteration  25: 184625.080 ops/s
# Warmup Iteration  26: 184662.001 ops/s
# Warmup Iteration  27: 185179.543 ops/s
# Warmup Iteration  28: 184773.432 ops/s
# Warmup Iteration  29: 183833.602 ops/s
# Warmup Iteration  30: 184343.822 ops/s
Iteration   1: 184097.290 ops/s
Iteration   2: 183450.023 ops/s
Iteration   3: 183636.109 ops/s
Iteration   4: 184914.382 ops/s
Iteration   5: 184760.706 ops/s
Iteration   6: 184878.254 ops/s
Iteration   7: 184686.283 ops/s
Iteration   8: 184805.584 ops/s
Iteration   9: 184905.937 ops/s
Iteration  10: 183836.984 ops/s
Iteration  11: 183583.319 ops/s
Iteration  12: 184052.719 ops/s
Iteration  13: 184815.695 ops/s
Iteration  14: 183083.242 ops/s
Iteration  15: 185136.103 ops/s
Iteration  16: 184927.583 ops/s
Iteration  17: 185129.236 ops/s
Iteration  18: 184252.408 ops/s
Iteration  19: 184822.154 ops/s
Iteration  20: 184679.922 ops/s
Iteration  21: 184144.926 ops/s
Iteration  22: 184839.249 ops/s
Iteration  23: 185013.409 ops/s
Iteration  24: 185038.582 ops/s
Iteration  25: 184895.543 ops/s
Iteration  26: 184938.320 ops/s
Iteration  27: 184906.849 ops/s
Iteration  28: 184834.866 ops/s
Iteration  29: 185074.248 ops/s
Iteration  30: 185132.017 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_717._Benchmark.benchmark_Cluster_717":
  184575.731 ±(99.9%) 381.033 ops/s [Average]
  (min, avg, max) = (183083.242, 184575.731, 185136.103), stdev = 570.313
  CI (99.9%): [184194.698, 184956.765] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_717._Benchmark.benchmark_Cluster_717  thrpt   30  184575.731 ± 381.033  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_718._Benchmark.benchmark_Cluster_718$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_718._Benchmark.benchmark_Cluster_718

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79576.854 ops/s
# Warmup Iteration   2: 115779.833 ops/s
# Warmup Iteration   3: 171129.836 ops/s
# Warmup Iteration   4: 180863.978 ops/s
# Warmup Iteration   5: 178825.397 ops/s
# Warmup Iteration   6: 181424.279 ops/s
# Warmup Iteration   7: 180606.367 ops/s
# Warmup Iteration   8: 180521.572 ops/s
# Warmup Iteration   9: 181444.982 ops/s
# Warmup Iteration  10: 140161.174 ops/s
# Warmup Iteration  11: 180188.521 ops/s
# Warmup Iteration  12: 180818.278 ops/s
# Warmup Iteration  13: 180613.049 ops/s
# Warmup Iteration  14: 180838.212 ops/s
# Warmup Iteration  15: 181193.088 ops/s
# Warmup Iteration  16: 180205.621 ops/s
# Warmup Iteration  17: 184336.221 ops/s
# Warmup Iteration  18: 183302.439 ops/s
# Warmup Iteration  19: 183474.608 ops/s
# Warmup Iteration  20: 182999.878 ops/s
# Warmup Iteration  21: 183499.884 ops/s
# Warmup Iteration  22: 184201.856 ops/s
# Warmup Iteration  23: 183939.641 ops/s
# Warmup Iteration  24: 183267.978 ops/s
# Warmup Iteration  25: 183415.895 ops/s
# Warmup Iteration  26: 183794.278 ops/s
# Warmup Iteration  27: 184782.444 ops/s
# Warmup Iteration  28: 184201.217 ops/s
# Warmup Iteration  29: 183279.847 ops/s
# Warmup Iteration  30: 183830.220 ops/s
Iteration   1: 183664.978 ops/s
Iteration   2: 184201.135 ops/s
Iteration   3: 184355.823 ops/s
Iteration   4: 184640.978 ops/s
Iteration   5: 183315.136 ops/s
Iteration   6: 183950.653 ops/s
Iteration   7: 183805.169 ops/s
Iteration   8: 183470.543 ops/s
Iteration   9: 183182.526 ops/s
Iteration  10: 182883.420 ops/s
Iteration  11: 184338.268 ops/s
Iteration  12: 183652.892 ops/s
Iteration  13: 184520.373 ops/s
Iteration  14: 183323.597 ops/s
Iteration  15: 184465.733 ops/s
Iteration  16: 182823.531 ops/s
Iteration  17: 183665.575 ops/s
Iteration  18: 184588.564 ops/s
Iteration  19: 182415.284 ops/s
Iteration  20: 183363.914 ops/s
Iteration  21: 180377.673 ops/s
Iteration  22: 182662.337 ops/s
Iteration  23: 183371.831 ops/s
Iteration  24: 184739.065 ops/s
Iteration  25: 184163.191 ops/s
Iteration  26: 183144.522 ops/s
Iteration  27: 183467.892 ops/s
Iteration  28: 184081.972 ops/s
Iteration  29: 183190.541 ops/s
Iteration  30: 183223.722 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_718._Benchmark.benchmark_Cluster_718":
  183568.361 ±(99.9%) 580.615 ops/s [Average]
  (min, avg, max) = (180377.673, 183568.361, 184739.065), stdev = 869.037
  CI (99.9%): [182987.747, 184148.976] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_718._Benchmark.benchmark_Cluster_718  thrpt   30  183568.361 ± 580.615  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_719._Benchmark.benchmark_Cluster_719$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_719._Benchmark.benchmark_Cluster_719

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58657.635 ops/s
# Warmup Iteration   2: 118111.048 ops/s
# Warmup Iteration   3: 168295.576 ops/s
# Warmup Iteration   4: 169584.429 ops/s
# Warmup Iteration   5: 169689.723 ops/s
# Warmup Iteration   6: 132228.502 ops/s
# Warmup Iteration   7: 169725.476 ops/s
# Warmup Iteration   8: 169394.434 ops/s
# Warmup Iteration   9: 169152.476 ops/s
# Warmup Iteration  10: 169410.054 ops/s
# Warmup Iteration  11: 169327.644 ops/s
# Warmup Iteration  12: 169699.466 ops/s
# Warmup Iteration  13: 169757.808 ops/s
# Warmup Iteration  14: 169433.053 ops/s
# Warmup Iteration  15: 169160.231 ops/s
# Warmup Iteration  16: 169488.069 ops/s
# Warmup Iteration  17: 169455.027 ops/s
# Warmup Iteration  18: 169518.684 ops/s
# Warmup Iteration  19: 169322.605 ops/s
# Warmup Iteration  20: 170020.267 ops/s
# Warmup Iteration  21: 169850.305 ops/s
# Warmup Iteration  22: 169426.850 ops/s
# Warmup Iteration  23: 169388.707 ops/s
# Warmup Iteration  24: 169645.734 ops/s
# Warmup Iteration  25: 169265.014 ops/s
# Warmup Iteration  26: 169314.854 ops/s
# Warmup Iteration  27: 169672.719 ops/s
# Warmup Iteration  28: 169824.244 ops/s
# Warmup Iteration  29: 169554.575 ops/s
# Warmup Iteration  30: 169371.947 ops/s
Iteration   1: 169338.272 ops/s
Iteration   2: 169551.897 ops/s
Iteration   3: 169525.450 ops/s
Iteration   4: 168834.301 ops/s
Iteration   5: 169741.586 ops/s
Iteration   6: 169262.628 ops/s
Iteration   7: 169662.199 ops/s
Iteration   8: 169583.667 ops/s
Iteration   9: 169482.474 ops/s
Iteration  10: 169755.869 ops/s
Iteration  11: 169605.137 ops/s
Iteration  12: 169633.755 ops/s
Iteration  13: 169376.816 ops/s
Iteration  14: 169515.460 ops/s
Iteration  15: 169733.498 ops/s
Iteration  16: 170075.120 ops/s
Iteration  17: 169557.320 ops/s
Iteration  18: 169399.068 ops/s
Iteration  19: 169379.425 ops/s
Iteration  20: 169458.254 ops/s
Iteration  21: 169139.845 ops/s
Iteration  22: 169563.237 ops/s
Iteration  23: 169612.681 ops/s
Iteration  24: 169974.694 ops/s
Iteration  25: 169957.280 ops/s
Iteration  26: 169298.115 ops/s
Iteration  27: 169506.232 ops/s
Iteration  28: 169635.151 ops/s
Iteration  29: 168871.673 ops/s
Iteration  30: 169676.719 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_719._Benchmark.benchmark_Cluster_719":
  169523.594 ±(99.9%) 183.813 ops/s [Average]
  (min, avg, max) = (168834.301, 169523.594, 170075.120), stdev = 275.122
  CI (99.9%): [169339.781, 169707.407] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_719._Benchmark.benchmark_Cluster_719  thrpt   30  169523.594 ± 183.813  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_72._Benchmark.benchmark_Cluster_72$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_72._Benchmark.benchmark_Cluster_72

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 98766.613 ops/s
# Warmup Iteration   2: 111562.012 ops/s
# Warmup Iteration   3: 139554.714 ops/s
# Warmup Iteration   4: 157641.769 ops/s
# Warmup Iteration   5: 157702.099 ops/s
# Warmup Iteration   6: 157692.954 ops/s
# Warmup Iteration   7: 157406.916 ops/s
# Warmup Iteration   8: 157323.392 ops/s
# Warmup Iteration   9: 156908.576 ops/s
# Warmup Iteration  10: 157032.495 ops/s
# Warmup Iteration  11: 156840.818 ops/s
# Warmup Iteration  12: 156639.714 ops/s
# Warmup Iteration  13: 124276.626 ops/s
# Warmup Iteration  14: 157496.212 ops/s
# Warmup Iteration  15: 157706.108 ops/s
# Warmup Iteration  16: 156824.651 ops/s
# Warmup Iteration  17: 164612.101 ops/s
# Warmup Iteration  18: 165014.247 ops/s
# Warmup Iteration  19: 165499.139 ops/s
# Warmup Iteration  20: 164493.592 ops/s
# Warmup Iteration  21: 164031.310 ops/s
# Warmup Iteration  22: 164777.272 ops/s
# Warmup Iteration  23: 164885.846 ops/s
# Warmup Iteration  24: 164870.910 ops/s
# Warmup Iteration  25: 165122.327 ops/s
# Warmup Iteration  26: 164969.970 ops/s
# Warmup Iteration  27: 165299.859 ops/s
# Warmup Iteration  28: 165159.542 ops/s
# Warmup Iteration  29: 164919.526 ops/s
# Warmup Iteration  30: 165117.369 ops/s
Iteration   1: 165267.050 ops/s
Iteration   2: 165710.512 ops/s
Iteration   3: 165222.675 ops/s
Iteration   4: 164967.810 ops/s
Iteration   5: 165183.989 ops/s
Iteration   6: 165467.867 ops/s
Iteration   7: 165110.226 ops/s
Iteration   8: 165518.260 ops/s
Iteration   9: 165323.918 ops/s
Iteration  10: 165133.164 ops/s
Iteration  11: 164831.149 ops/s
Iteration  12: 164989.609 ops/s
Iteration  13: 165245.043 ops/s
Iteration  14: 165485.285 ops/s
Iteration  15: 165346.625 ops/s
Iteration  16: 164400.589 ops/s
Iteration  17: 165065.103 ops/s
Iteration  18: 165293.727 ops/s
Iteration  19: 165174.117 ops/s
Iteration  20: 164493.357 ops/s
Iteration  21: 165393.374 ops/s
Iteration  22: 165502.203 ops/s
Iteration  23: 165452.899 ops/s
Iteration  24: 164754.017 ops/s
Iteration  25: 164318.858 ops/s
Iteration  26: 164426.334 ops/s
Iteration  27: 164108.951 ops/s
Iteration  28: 164256.765 ops/s
Iteration  29: 164612.680 ops/s
Iteration  30: 165692.159 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_72._Benchmark.benchmark_Cluster_72":
  165058.277 ±(99.9%) 298.873 ops/s [Average]
  (min, avg, max) = (164108.951, 165058.277, 165710.512), stdev = 447.339
  CI (99.9%): [164759.404, 165357.150] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_72._Benchmark.benchmark_Cluster_72  thrpt   30  165058.277 ± 298.873  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_720._Benchmark.benchmark_Cluster_720$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_720._Benchmark.benchmark_Cluster_720

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68311.704 ops/s
# Warmup Iteration   2: 88603.353 ops/s
# Warmup Iteration   3: 143975.045 ops/s
# Warmup Iteration   4: 146343.952 ops/s
# Warmup Iteration   5: 143768.066 ops/s
# Warmup Iteration   6: 146062.339 ops/s
# Warmup Iteration   7: 145714.082 ops/s
# Warmup Iteration   8: 145817.362 ops/s
# Warmup Iteration   9: 134945.925 ops/s
# Warmup Iteration  10: 122821.987 ops/s
# Warmup Iteration  11: 146145.466 ops/s
# Warmup Iteration  12: 145653.361 ops/s
# Warmup Iteration  13: 146004.238 ops/s
# Warmup Iteration  14: 145667.411 ops/s
# Warmup Iteration  15: 145806.196 ops/s
# Warmup Iteration  16: 145858.706 ops/s
# Warmup Iteration  17: 149891.521 ops/s
# Warmup Iteration  18: 150126.066 ops/s
# Warmup Iteration  19: 149949.429 ops/s
# Warmup Iteration  20: 149794.698 ops/s
# Warmup Iteration  21: 149634.987 ops/s
# Warmup Iteration  22: 150007.599 ops/s
# Warmup Iteration  23: 149980.662 ops/s
# Warmup Iteration  24: 149615.028 ops/s
# Warmup Iteration  25: 149661.845 ops/s
# Warmup Iteration  26: 149821.520 ops/s
# Warmup Iteration  27: 149700.377 ops/s
# Warmup Iteration  28: 149822.784 ops/s
# Warmup Iteration  29: 149952.353 ops/s
# Warmup Iteration  30: 149714.925 ops/s
Iteration   1: 149757.361 ops/s
Iteration   2: 149860.823 ops/s
Iteration   3: 150049.086 ops/s
Iteration   4: 150165.804 ops/s
Iteration   5: 150141.990 ops/s
Iteration   6: 150441.052 ops/s
Iteration   7: 149819.037 ops/s
Iteration   8: 150122.089 ops/s
Iteration   9: 149458.167 ops/s
Iteration  10: 149984.331 ops/s
Iteration  11: 150141.224 ops/s
Iteration  12: 150120.890 ops/s
Iteration  13: 148868.898 ops/s
Iteration  14: 149959.015 ops/s
Iteration  15: 150079.405 ops/s
Iteration  16: 149447.929 ops/s
Iteration  17: 149640.654 ops/s
Iteration  18: 150288.115 ops/s
Iteration  19: 149777.198 ops/s
Iteration  20: 149973.158 ops/s
Iteration  21: 149996.013 ops/s
Iteration  22: 150123.696 ops/s
Iteration  23: 149759.954 ops/s
Iteration  24: 150000.063 ops/s
Iteration  25: 149848.256 ops/s
Iteration  26: 149653.217 ops/s
Iteration  27: 150218.801 ops/s
Iteration  28: 149979.592 ops/s
Iteration  29: 149840.932 ops/s
Iteration  30: 149968.838 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_720._Benchmark.benchmark_Cluster_720":
  149916.186 ±(99.9%) 201.337 ops/s [Average]
  (min, avg, max) = (148868.898, 149916.186, 150441.052), stdev = 301.352
  CI (99.9%): [149714.849, 150117.523] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_720._Benchmark.benchmark_Cluster_720  thrpt   30  149916.186 ± 201.337  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_721._Benchmark.benchmark_Cluster_721$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_721._Benchmark.benchmark_Cluster_721

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 30269.777 ops/s
# Warmup Iteration   2: 54913.981 ops/s
# Warmup Iteration   3: 95132.840 ops/s
# Warmup Iteration   4: 93542.571 ops/s
# Warmup Iteration   5: 94681.700 ops/s
# Warmup Iteration   6: 94606.406 ops/s
# Warmup Iteration   7: 94563.936 ops/s
# Warmup Iteration   8: 74409.493 ops/s
# Warmup Iteration   9: 95075.789 ops/s
# Warmup Iteration  10: 95020.484 ops/s
# Warmup Iteration  11: 94976.780 ops/s
# Warmup Iteration  12: 95093.223 ops/s
# Warmup Iteration  13: 94918.358 ops/s
# Warmup Iteration  14: 95065.981 ops/s
# Warmup Iteration  15: 95010.099 ops/s
# Warmup Iteration  16: 95125.064 ops/s
# Warmup Iteration  17: 95073.858 ops/s
# Warmup Iteration  18: 95002.917 ops/s
# Warmup Iteration  19: 94940.357 ops/s
# Warmup Iteration  20: 94716.664 ops/s
# Warmup Iteration  21: 95068.526 ops/s
# Warmup Iteration  22: 94769.362 ops/s
# Warmup Iteration  23: 94757.411 ops/s
# Warmup Iteration  24: 95236.957 ops/s
# Warmup Iteration  25: 95367.383 ops/s
# Warmup Iteration  26: 94974.699 ops/s
# Warmup Iteration  27: 94600.729 ops/s
# Warmup Iteration  28: 94887.044 ops/s
# Warmup Iteration  29: 95139.263 ops/s
# Warmup Iteration  30: 94949.468 ops/s
Iteration   1: 94946.040 ops/s
Iteration   2: 95004.885 ops/s
Iteration   3: 95175.300 ops/s
Iteration   4: 94806.556 ops/s
Iteration   5: 95164.445 ops/s
Iteration   6: 95391.735 ops/s
Iteration   7: 95047.381 ops/s
Iteration   8: 94972.468 ops/s
Iteration   9: 95164.543 ops/s
Iteration  10: 95143.869 ops/s
Iteration  11: 94502.264 ops/s
Iteration  12: 94464.324 ops/s
Iteration  13: 94703.166 ops/s
Iteration  14: 94760.653 ops/s
Iteration  15: 95177.756 ops/s
Iteration  16: 95307.871 ops/s
Iteration  17: 94643.262 ops/s
Iteration  18: 94716.260 ops/s
Iteration  19: 94624.824 ops/s
Iteration  20: 94935.968 ops/s
Iteration  21: 95021.905 ops/s
Iteration  22: 94433.571 ops/s
Iteration  23: 94770.650 ops/s
Iteration  24: 94673.752 ops/s
Iteration  25: 95144.090 ops/s
Iteration  26: 94916.599 ops/s
Iteration  27: 95259.650 ops/s
Iteration  28: 95317.115 ops/s
Iteration  29: 94937.267 ops/s
Iteration  30: 94788.060 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_721._Benchmark.benchmark_Cluster_721":
  94930.541 ±(99.9%) 177.272 ops/s [Average]
  (min, avg, max) = (94433.571, 94930.541, 95391.735), stdev = 265.332
  CI (99.9%): [94753.269, 95107.813] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_721._Benchmark.benchmark_Cluster_721  thrpt   30  94930.541 ± 177.272  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_722._Benchmark.benchmark_Cluster_722$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_722._Benchmark.benchmark_Cluster_722

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 92194.311 ops/s
# Warmup Iteration   2: 148235.787 ops/s
# Warmup Iteration   3: 207113.390 ops/s
# Warmup Iteration   4: 205814.948 ops/s
# Warmup Iteration   5: 207201.897 ops/s
# Warmup Iteration   6: 206924.130 ops/s
# Warmup Iteration   7: 172108.506 ops/s
# Warmup Iteration   8: 200324.432 ops/s
# Warmup Iteration   9: 207356.326 ops/s
# Warmup Iteration  10: 207290.456 ops/s
# Warmup Iteration  11: 206977.105 ops/s
# Warmup Iteration  12: 206927.140 ops/s
# Warmup Iteration  13: 207342.310 ops/s
# Warmup Iteration  14: 207366.358 ops/s
# Warmup Iteration  15: 207224.453 ops/s
# Warmup Iteration  16: 207003.788 ops/s
# Warmup Iteration  17: 207528.919 ops/s
# Warmup Iteration  18: 207422.031 ops/s
# Warmup Iteration  19: 207664.849 ops/s
# Warmup Iteration  20: 207374.478 ops/s
# Warmup Iteration  21: 207463.190 ops/s
# Warmup Iteration  22: 207971.074 ops/s
# Warmup Iteration  23: 207792.554 ops/s
# Warmup Iteration  24: 207106.646 ops/s
# Warmup Iteration  25: 207069.334 ops/s
# Warmup Iteration  26: 207667.327 ops/s
# Warmup Iteration  27: 207337.386 ops/s
# Warmup Iteration  28: 207854.014 ops/s
# Warmup Iteration  29: 207789.885 ops/s
# Warmup Iteration  30: 207913.836 ops/s
Iteration   1: 208026.416 ops/s
Iteration   2: 207822.691 ops/s
Iteration   3: 207608.265 ops/s
Iteration   4: 207683.669 ops/s
Iteration   5: 207075.783 ops/s
Iteration   6: 207671.217 ops/s
Iteration   7: 207522.352 ops/s
Iteration   8: 207541.610 ops/s
Iteration   9: 207919.419 ops/s
Iteration  10: 206975.744 ops/s
Iteration  11: 207236.517 ops/s
Iteration  12: 207370.466 ops/s
Iteration  13: 207889.295 ops/s
Iteration  14: 207858.871 ops/s
Iteration  15: 208045.069 ops/s
Iteration  16: 208092.133 ops/s
Iteration  17: 207723.482 ops/s
Iteration  18: 207648.940 ops/s
Iteration  19: 207300.437 ops/s
Iteration  20: 207610.382 ops/s
Iteration  21: 207160.897 ops/s
Iteration  22: 207357.356 ops/s
Iteration  23: 207223.698 ops/s
Iteration  24: 207849.632 ops/s
Iteration  25: 207450.022 ops/s
Iteration  26: 207653.527 ops/s
Iteration  27: 207932.113 ops/s
Iteration  28: 207732.623 ops/s
Iteration  29: 207562.529 ops/s
Iteration  30: 207401.035 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_722._Benchmark.benchmark_Cluster_722":
  207598.206 ±(99.9%) 198.216 ops/s [Average]
  (min, avg, max) = (206975.744, 207598.206, 208092.133), stdev = 296.680
  CI (99.9%): [207399.990, 207796.422] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_722._Benchmark.benchmark_Cluster_722  thrpt   30  207598.206 ± 198.216  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_723._Benchmark.benchmark_Cluster_723$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_723._Benchmark.benchmark_Cluster_723

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71750.756 ops/s
# Warmup Iteration   2: 142586.374 ops/s
# Warmup Iteration   3: 179860.352 ops/s
# Warmup Iteration   4: 180705.293 ops/s
# Warmup Iteration   5: 180843.860 ops/s
# Warmup Iteration   6: 143403.629 ops/s
# Warmup Iteration   7: 180548.307 ops/s
# Warmup Iteration   8: 180690.590 ops/s
# Warmup Iteration   9: 180804.598 ops/s
# Warmup Iteration  10: 180645.383 ops/s
# Warmup Iteration  11: 180884.750 ops/s
# Warmup Iteration  12: 180787.572 ops/s
# Warmup Iteration  13: 180666.935 ops/s
# Warmup Iteration  14: 180614.819 ops/s
# Warmup Iteration  15: 180845.256 ops/s
# Warmup Iteration  16: 180028.118 ops/s
# Warmup Iteration  17: 180593.868 ops/s
# Warmup Iteration  18: 180518.256 ops/s
# Warmup Iteration  19: 180512.678 ops/s
# Warmup Iteration  20: 180500.623 ops/s
# Warmup Iteration  21: 180940.271 ops/s
# Warmup Iteration  22: 180794.070 ops/s
# Warmup Iteration  23: 180448.846 ops/s
# Warmup Iteration  24: 180613.124 ops/s
# Warmup Iteration  25: 180218.940 ops/s
# Warmup Iteration  26: 180375.297 ops/s
# Warmup Iteration  27: 180771.538 ops/s
# Warmup Iteration  28: 180647.233 ops/s
# Warmup Iteration  29: 180881.866 ops/s
# Warmup Iteration  30: 180078.836 ops/s
Iteration   1: 180126.467 ops/s
Iteration   2: 180476.597 ops/s
Iteration   3: 179955.951 ops/s
Iteration   4: 181024.550 ops/s
Iteration   5: 179740.478 ops/s
Iteration   6: 180894.508 ops/s
Iteration   7: 181058.593 ops/s
Iteration   8: 180738.295 ops/s
Iteration   9: 181314.534 ops/s
Iteration  10: 180618.373 ops/s
Iteration  11: 180755.282 ops/s
Iteration  12: 180768.054 ops/s
Iteration  13: 180497.471 ops/s
Iteration  14: 180793.533 ops/s
Iteration  15: 180429.030 ops/s
Iteration  16: 180544.582 ops/s
Iteration  17: 180686.311 ops/s
Iteration  18: 180520.789 ops/s
Iteration  19: 180275.570 ops/s
Iteration  20: 180303.264 ops/s
Iteration  21: 180520.262 ops/s
Iteration  22: 180492.135 ops/s
Iteration  23: 180250.023 ops/s
Iteration  24: 180757.065 ops/s
Iteration  25: 181072.109 ops/s
Iteration  26: 180677.586 ops/s
Iteration  27: 180889.146 ops/s
Iteration  28: 180945.912 ops/s
Iteration  29: 180876.361 ops/s
Iteration  30: 180347.788 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_723._Benchmark.benchmark_Cluster_723":
  180611.687 ±(99.9%) 231.215 ops/s [Average]
  (min, avg, max) = (179740.478, 180611.687, 181314.534), stdev = 346.072
  CI (99.9%): [180380.472, 180842.902] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_723._Benchmark.benchmark_Cluster_723  thrpt   30  180611.687 ± 231.215  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_724._Benchmark.benchmark_Cluster_724$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_724._Benchmark.benchmark_Cluster_724

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 88291.354 ops/s
# Warmup Iteration   2: 136995.021 ops/s
# Warmup Iteration   3: 205350.964 ops/s
# Warmup Iteration   4: 204691.778 ops/s
# Warmup Iteration   5: 206061.880 ops/s
# Warmup Iteration   6: 206095.964 ops/s
# Warmup Iteration   7: 205892.845 ops/s
# Warmup Iteration   8: 162971.390 ops/s
# Warmup Iteration   9: 205594.510 ops/s
# Warmup Iteration  10: 205327.669 ops/s
# Warmup Iteration  11: 205179.057 ops/s
# Warmup Iteration  12: 205824.235 ops/s
# Warmup Iteration  13: 205849.483 ops/s
# Warmup Iteration  14: 205500.897 ops/s
# Warmup Iteration  15: 205268.676 ops/s
# Warmup Iteration  16: 205545.933 ops/s
# Warmup Iteration  17: 206251.933 ops/s
# Warmup Iteration  18: 206182.342 ops/s
# Warmup Iteration  19: 206381.843 ops/s
# Warmup Iteration  20: 205871.906 ops/s
# Warmup Iteration  21: 206275.167 ops/s
# Warmup Iteration  22: 206179.301 ops/s
# Warmup Iteration  23: 206238.445 ops/s
# Warmup Iteration  24: 206192.045 ops/s
# Warmup Iteration  25: 205657.869 ops/s
# Warmup Iteration  26: 205952.821 ops/s
# Warmup Iteration  27: 206345.565 ops/s
# Warmup Iteration  28: 206229.436 ops/s
# Warmup Iteration  29: 206156.977 ops/s
# Warmup Iteration  30: 205584.720 ops/s
Iteration   1: 205736.654 ops/s
Iteration   2: 205809.766 ops/s
Iteration   3: 205924.212 ops/s
Iteration   4: 205731.536 ops/s
Iteration   5: 206064.515 ops/s
Iteration   6: 206027.138 ops/s
Iteration   7: 206315.651 ops/s
Iteration   8: 206581.139 ops/s
Iteration   9: 205853.235 ops/s
Iteration  10: 206492.000 ops/s
Iteration  11: 206130.914 ops/s
Iteration  12: 205963.573 ops/s
Iteration  13: 206028.722 ops/s
Iteration  14: 206190.851 ops/s
Iteration  15: 206442.887 ops/s
Iteration  16: 205799.124 ops/s
Iteration  17: 206133.209 ops/s
Iteration  18: 206071.169 ops/s
Iteration  19: 205597.603 ops/s
Iteration  20: 206466.129 ops/s
Iteration  21: 205863.998 ops/s
Iteration  22: 206375.388 ops/s
Iteration  23: 206505.149 ops/s
Iteration  24: 206393.114 ops/s
Iteration  25: 206565.054 ops/s
Iteration  26: 206244.580 ops/s
Iteration  27: 205794.317 ops/s
Iteration  28: 206264.627 ops/s
Iteration  29: 205938.945 ops/s
Iteration  30: 205606.731 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_724._Benchmark.benchmark_Cluster_724":
  206097.064 ±(99.9%) 196.938 ops/s [Average]
  (min, avg, max) = (205597.603, 206097.064, 206581.139), stdev = 294.768
  CI (99.9%): [205900.126, 206294.002] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_724._Benchmark.benchmark_Cluster_724  thrpt   30  206097.064 ± 196.938  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_725._Benchmark.benchmark_Cluster_725$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_725._Benchmark.benchmark_Cluster_725

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64133.450 ops/s
# Warmup Iteration   2: 131397.122 ops/s
# Warmup Iteration   3: 178152.369 ops/s
# Warmup Iteration   4: 179637.200 ops/s
# Warmup Iteration   5: 179204.904 ops/s
# Warmup Iteration   6: 143373.270 ops/s
# Warmup Iteration   7: 179736.178 ops/s
# Warmup Iteration   8: 179681.156 ops/s
# Warmup Iteration   9: 179090.257 ops/s
# Warmup Iteration  10: 179764.060 ops/s
# Warmup Iteration  11: 179531.680 ops/s
# Warmup Iteration  12: 179641.994 ops/s
# Warmup Iteration  13: 179690.391 ops/s
# Warmup Iteration  14: 179884.465 ops/s
# Warmup Iteration  15: 179924.570 ops/s
# Warmup Iteration  16: 179811.789 ops/s
# Warmup Iteration  17: 179419.489 ops/s
# Warmup Iteration  18: 179537.857 ops/s
# Warmup Iteration  19: 179742.424 ops/s
# Warmup Iteration  20: 179639.697 ops/s
# Warmup Iteration  21: 178843.733 ops/s
# Warmup Iteration  22: 179353.777 ops/s
# Warmup Iteration  23: 179375.681 ops/s
# Warmup Iteration  24: 179398.725 ops/s
# Warmup Iteration  25: 179559.692 ops/s
# Warmup Iteration  26: 179754.390 ops/s
# Warmup Iteration  27: 179750.717 ops/s
# Warmup Iteration  28: 179547.674 ops/s
# Warmup Iteration  29: 179364.025 ops/s
# Warmup Iteration  30: 179448.998 ops/s
Iteration   1: 179135.087 ops/s
Iteration   2: 178536.018 ops/s
Iteration   3: 179991.367 ops/s
Iteration   4: 179681.266 ops/s
Iteration   5: 179563.129 ops/s
Iteration   6: 179614.012 ops/s
Iteration   7: 179932.004 ops/s
Iteration   8: 179499.934 ops/s
Iteration   9: 179468.841 ops/s
Iteration  10: 180041.338 ops/s
Iteration  11: 179136.464 ops/s
Iteration  12: 179410.796 ops/s
Iteration  13: 179796.794 ops/s
Iteration  14: 179783.964 ops/s
Iteration  15: 179184.870 ops/s
Iteration  16: 178931.055 ops/s
Iteration  17: 178691.656 ops/s
Iteration  18: 179123.016 ops/s
Iteration  19: 179663.047 ops/s
Iteration  20: 179411.112 ops/s
Iteration  21: 179534.255 ops/s
Iteration  22: 179726.954 ops/s
Iteration  23: 179720.163 ops/s
Iteration  24: 179922.079 ops/s
Iteration  25: 179793.013 ops/s
Iteration  26: 179433.563 ops/s
Iteration  27: 179781.478 ops/s
Iteration  28: 179459.627 ops/s
Iteration  29: 179475.310 ops/s
Iteration  30: 178803.728 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_725._Benchmark.benchmark_Cluster_725":
  179474.865 ±(99.9%) 257.659 ops/s [Average]
  (min, avg, max) = (178536.018, 179474.865, 180041.338), stdev = 385.652
  CI (99.9%): [179217.206, 179732.524] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_725._Benchmark.benchmark_Cluster_725  thrpt   30  179474.865 ± 257.659  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_726._Benchmark.benchmark_Cluster_726$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_726._Benchmark.benchmark_Cluster_726

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60572.566 ops/s
# Warmup Iteration   2: 139465.639 ops/s
# Warmup Iteration   3: 188314.034 ops/s
# Warmup Iteration   4: 188859.794 ops/s
# Warmup Iteration   5: 171746.452 ops/s
# Warmup Iteration   6: 168114.959 ops/s
# Warmup Iteration   7: 189965.731 ops/s
# Warmup Iteration   8: 189572.140 ops/s
# Warmup Iteration   9: 189242.922 ops/s
# Warmup Iteration  10: 189797.255 ops/s
# Warmup Iteration  11: 189759.482 ops/s
# Warmup Iteration  12: 189103.914 ops/s
# Warmup Iteration  13: 189629.130 ops/s
# Warmup Iteration  14: 188912.566 ops/s
# Warmup Iteration  15: 188898.779 ops/s
# Warmup Iteration  16: 189540.758 ops/s
# Warmup Iteration  17: 188975.244 ops/s
# Warmup Iteration  18: 189059.822 ops/s
# Warmup Iteration  19: 188651.153 ops/s
# Warmup Iteration  20: 188956.795 ops/s
# Warmup Iteration  21: 189033.117 ops/s
# Warmup Iteration  22: 189532.554 ops/s
# Warmup Iteration  23: 189703.142 ops/s
# Warmup Iteration  24: 189728.236 ops/s
# Warmup Iteration  25: 189824.357 ops/s
# Warmup Iteration  26: 189921.694 ops/s
# Warmup Iteration  27: 189109.005 ops/s
# Warmup Iteration  28: 189076.075 ops/s
# Warmup Iteration  29: 188227.002 ops/s
# Warmup Iteration  30: 188492.637 ops/s
Iteration   1: 187291.112 ops/s
Iteration   2: 189669.350 ops/s
Iteration   3: 189503.170 ops/s
Iteration   4: 189868.247 ops/s
Iteration   5: 189307.364 ops/s
Iteration   6: 189609.003 ops/s
Iteration   7: 189404.585 ops/s
Iteration   8: 188738.868 ops/s
Iteration   9: 189429.216 ops/s
Iteration  10: 189676.365 ops/s
Iteration  11: 188744.880 ops/s
Iteration  12: 189684.646 ops/s
Iteration  13: 189895.974 ops/s
Iteration  14: 188518.489 ops/s
Iteration  15: 189240.288 ops/s
Iteration  16: 190142.760 ops/s
Iteration  17: 189812.746 ops/s
Iteration  18: 189865.484 ops/s
Iteration  19: 190082.407 ops/s
Iteration  20: 189462.432 ops/s
Iteration  21: 189131.314 ops/s
Iteration  22: 188940.679 ops/s
Iteration  23: 189336.388 ops/s
Iteration  24: 188160.998 ops/s
Iteration  25: 189322.345 ops/s
Iteration  26: 188727.883 ops/s
Iteration  27: 188745.791 ops/s
Iteration  28: 189657.896 ops/s
Iteration  29: 188679.576 ops/s
Iteration  30: 189217.395 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_726._Benchmark.benchmark_Cluster_726":
  189262.255 ±(99.9%) 412.250 ops/s [Average]
  (min, avg, max) = (187291.112, 189262.255, 190142.760), stdev = 617.037
  CI (99.9%): [188850.005, 189674.505] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_726._Benchmark.benchmark_Cluster_726  thrpt   30  189262.255 ± 412.250  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_727._Benchmark.benchmark_Cluster_727$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_727._Benchmark.benchmark_Cluster_727

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56964.898 ops/s
# Warmup Iteration   2: 135078.653 ops/s
# Warmup Iteration   3: 181646.454 ops/s
# Warmup Iteration   4: 182752.434 ops/s
# Warmup Iteration   5: 152220.595 ops/s
# Warmup Iteration   6: 175081.103 ops/s
# Warmup Iteration   7: 182445.144 ops/s
# Warmup Iteration   8: 182815.598 ops/s
# Warmup Iteration   9: 182700.864 ops/s
# Warmup Iteration  10: 182990.624 ops/s
# Warmup Iteration  11: 182332.627 ops/s
# Warmup Iteration  12: 182058.497 ops/s
# Warmup Iteration  13: 182345.914 ops/s
# Warmup Iteration  14: 182409.391 ops/s
# Warmup Iteration  15: 182639.042 ops/s
# Warmup Iteration  16: 182524.698 ops/s
# Warmup Iteration  17: 182783.509 ops/s
# Warmup Iteration  18: 182849.559 ops/s
# Warmup Iteration  19: 181790.231 ops/s
# Warmup Iteration  20: 182708.102 ops/s
# Warmup Iteration  21: 182747.803 ops/s
# Warmup Iteration  22: 182823.861 ops/s
# Warmup Iteration  23: 182902.017 ops/s
# Warmup Iteration  24: 182654.165 ops/s
# Warmup Iteration  25: 182889.510 ops/s
# Warmup Iteration  26: 182573.185 ops/s
# Warmup Iteration  27: 182233.416 ops/s
# Warmup Iteration  28: 182537.477 ops/s
# Warmup Iteration  29: 182077.970 ops/s
# Warmup Iteration  30: 182553.799 ops/s
Iteration   1: 182464.525 ops/s
Iteration   2: 182898.257 ops/s
Iteration   3: 182993.182 ops/s
Iteration   4: 182756.445 ops/s
Iteration   5: 182393.806 ops/s
Iteration   6: 182901.704 ops/s
Iteration   7: 182860.548 ops/s
Iteration   8: 182815.858 ops/s
Iteration   9: 182818.078 ops/s
Iteration  10: 182874.869 ops/s
Iteration  11: 182887.838 ops/s
Iteration  12: 183116.104 ops/s
Iteration  13: 182807.088 ops/s
Iteration  14: 182014.500 ops/s
Iteration  15: 182955.209 ops/s
Iteration  16: 182863.129 ops/s
Iteration  17: 182726.769 ops/s
Iteration  18: 183117.830 ops/s
Iteration  19: 183047.586 ops/s
Iteration  20: 182861.075 ops/s
Iteration  21: 182776.156 ops/s
Iteration  22: 182740.876 ops/s
Iteration  23: 183034.326 ops/s
Iteration  24: 182583.040 ops/s
Iteration  25: 183167.080 ops/s
Iteration  26: 182941.660 ops/s
Iteration  27: 182622.870 ops/s
Iteration  28: 182460.976 ops/s
Iteration  29: 182594.396 ops/s
Iteration  30: 182907.648 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_727._Benchmark.benchmark_Cluster_727":
  182800.114 ±(99.9%) 163.268 ops/s [Average]
  (min, avg, max) = (182014.500, 182800.114, 183167.080), stdev = 244.372
  CI (99.9%): [182636.846, 182963.382] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_727._Benchmark.benchmark_Cluster_727  thrpt   30  182800.114 ± 163.268  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_728._Benchmark.benchmark_Cluster_728$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_728._Benchmark.benchmark_Cluster_728

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 84340.003 ops/s
# Warmup Iteration   2: 94294.979 ops/s
# Warmup Iteration   3: 135582.319 ops/s
# Warmup Iteration   4: 140726.055 ops/s
# Warmup Iteration   5: 138950.996 ops/s
# Warmup Iteration   6: 140440.890 ops/s
# Warmup Iteration   7: 141068.988 ops/s
# Warmup Iteration   8: 141042.378 ops/s
# Warmup Iteration   9: 140595.241 ops/s
# Warmup Iteration  10: 140424.352 ops/s
# Warmup Iteration  11: 110681.374 ops/s
# Warmup Iteration  12: 140008.988 ops/s
# Warmup Iteration  13: 140010.826 ops/s
# Warmup Iteration  14: 140206.349 ops/s
# Warmup Iteration  15: 140042.412 ops/s
# Warmup Iteration  16: 139706.708 ops/s
# Warmup Iteration  17: 146079.329 ops/s
# Warmup Iteration  18: 145981.730 ops/s
# Warmup Iteration  19: 146618.346 ops/s
# Warmup Iteration  20: 146680.513 ops/s
# Warmup Iteration  21: 146788.097 ops/s
# Warmup Iteration  22: 146969.680 ops/s
# Warmup Iteration  23: 146291.579 ops/s
# Warmup Iteration  24: 146592.594 ops/s
# Warmup Iteration  25: 147030.374 ops/s
# Warmup Iteration  26: 146355.003 ops/s
# Warmup Iteration  27: 146233.600 ops/s
# Warmup Iteration  28: 146662.887 ops/s
# Warmup Iteration  29: 146854.889 ops/s
# Warmup Iteration  30: 147015.937 ops/s
Iteration   1: 146656.420 ops/s
Iteration   2: 146800.844 ops/s
Iteration   3: 146756.460 ops/s
Iteration   4: 146813.796 ops/s
Iteration   5: 146016.534 ops/s
Iteration   6: 146503.376 ops/s
Iteration   7: 146562.986 ops/s
Iteration   8: 146648.539 ops/s
Iteration   9: 146889.940 ops/s
Iteration  10: 146520.502 ops/s
Iteration  11: 146815.858 ops/s
Iteration  12: 146840.630 ops/s
Iteration  13: 146859.658 ops/s
Iteration  14: 146032.624 ops/s
Iteration  15: 146843.834 ops/s
Iteration  16: 147027.585 ops/s
Iteration  17: 146860.013 ops/s
Iteration  18: 146901.486 ops/s
Iteration  19: 146385.135 ops/s
Iteration  20: 146672.514 ops/s
Iteration  21: 146285.766 ops/s
Iteration  22: 146556.346 ops/s
Iteration  23: 146400.817 ops/s
Iteration  24: 146406.451 ops/s
Iteration  25: 146296.828 ops/s
Iteration  26: 146229.505 ops/s
Iteration  27: 146904.430 ops/s
Iteration  28: 146772.471 ops/s
Iteration  29: 146337.246 ops/s
Iteration  30: 146775.276 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_728._Benchmark.benchmark_Cluster_728":
  146612.462 ±(99.9%) 180.988 ops/s [Average]
  (min, avg, max) = (146016.534, 146612.462, 147027.585), stdev = 270.894
  CI (99.9%): [146431.475, 146793.450] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_728._Benchmark.benchmark_Cluster_728  thrpt   30  146612.462 ± 180.988  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_729._Benchmark.benchmark_Cluster_729$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_729._Benchmark.benchmark_Cluster_729

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 17682.629 ops/s
# Warmup Iteration   2: 43367.251 ops/s
# Warmup Iteration   3: 58956.301 ops/s
# Warmup Iteration   4: 73517.097 ops/s
# Warmup Iteration   5: 73889.321 ops/s
# Warmup Iteration   6: 73954.427 ops/s
# Warmup Iteration   7: 73622.853 ops/s
# Warmup Iteration   8: 73002.144 ops/s
# Warmup Iteration   9: 58510.776 ops/s
# Warmup Iteration  10: 73666.251 ops/s
# Warmup Iteration  11: 73557.196 ops/s
# Warmup Iteration  12: 73843.726 ops/s
# Warmup Iteration  13: 73915.335 ops/s
# Warmup Iteration  14: 74076.242 ops/s
# Warmup Iteration  15: 74192.329 ops/s
# Warmup Iteration  16: 74131.986 ops/s
# Warmup Iteration  17: 74516.225 ops/s
# Warmup Iteration  18: 73315.472 ops/s
# Warmup Iteration  19: 73726.640 ops/s
# Warmup Iteration  20: 74283.450 ops/s
# Warmup Iteration  21: 74546.278 ops/s
# Warmup Iteration  22: 74619.689 ops/s
# Warmup Iteration  23: 74665.293 ops/s
# Warmup Iteration  24: 74383.109 ops/s
# Warmup Iteration  25: 74281.570 ops/s
# Warmup Iteration  26: 74581.361 ops/s
# Warmup Iteration  27: 74019.955 ops/s
# Warmup Iteration  28: 74388.476 ops/s
# Warmup Iteration  29: 74041.457 ops/s
# Warmup Iteration  30: 74077.418 ops/s
Iteration   1: 73988.964 ops/s
Iteration   2: 73239.371 ops/s
Iteration   3: 73349.939 ops/s
Iteration   4: 73537.682 ops/s
Iteration   5: 72913.136 ops/s
Iteration   6: 73615.194 ops/s
Iteration   7: 73748.924 ops/s
Iteration   8: 74006.422 ops/s
Iteration   9: 73789.439 ops/s
Iteration  10: 73831.645 ops/s
Iteration  11: 73897.851 ops/s
Iteration  12: 74416.114 ops/s
Iteration  13: 74251.853 ops/s
Iteration  14: 74044.751 ops/s
Iteration  15: 73302.642 ops/s
Iteration  16: 74048.902 ops/s
Iteration  17: 74724.769 ops/s
Iteration  18: 74713.547 ops/s
Iteration  19: 73376.859 ops/s
Iteration  20: 73395.467 ops/s
Iteration  21: 73464.093 ops/s
Iteration  22: 73316.117 ops/s
Iteration  23: 73980.213 ops/s
Iteration  24: 74539.648 ops/s
Iteration  25: 73269.969 ops/s
Iteration  26: 73115.970 ops/s
Iteration  27: 74392.767 ops/s
Iteration  28: 74320.213 ops/s
Iteration  29: 74714.852 ops/s
Iteration  30: 74723.458 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_729._Benchmark.benchmark_Cluster_729":
  73867.692 ±(99.9%) 358.140 ops/s [Average]
  (min, avg, max) = (72913.136, 73867.692, 74724.769), stdev = 536.047
  CI (99.9%): [73509.553, 74225.832] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_729._Benchmark.benchmark_Cluster_729  thrpt   30  73867.692 ± 358.140  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_73._Benchmark.benchmark_Cluster_73$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_73._Benchmark.benchmark_Cluster_73

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56007.805 ops/s
# Warmup Iteration   2: 103993.419 ops/s
# Warmup Iteration   3: 161099.757 ops/s
# Warmup Iteration   4: 160169.412 ops/s
# Warmup Iteration   5: 161144.873 ops/s
# Warmup Iteration   6: 161307.072 ops/s
# Warmup Iteration   7: 127728.387 ops/s
# Warmup Iteration   8: 160728.967 ops/s
# Warmup Iteration   9: 159736.269 ops/s
# Warmup Iteration  10: 160735.323 ops/s
# Warmup Iteration  11: 160300.971 ops/s
# Warmup Iteration  12: 160079.239 ops/s
# Warmup Iteration  13: 160938.687 ops/s
# Warmup Iteration  14: 160464.881 ops/s
# Warmup Iteration  15: 160995.738 ops/s
# Warmup Iteration  16: 160655.950 ops/s
# Warmup Iteration  17: 161070.912 ops/s
# Warmup Iteration  18: 161333.748 ops/s
# Warmup Iteration  19: 161506.256 ops/s
# Warmup Iteration  20: 161331.216 ops/s
# Warmup Iteration  21: 160925.115 ops/s
# Warmup Iteration  22: 160920.647 ops/s
# Warmup Iteration  23: 161192.905 ops/s
# Warmup Iteration  24: 161046.807 ops/s
# Warmup Iteration  25: 160780.110 ops/s
# Warmup Iteration  26: 161157.584 ops/s
# Warmup Iteration  27: 161633.650 ops/s
# Warmup Iteration  28: 161125.397 ops/s
# Warmup Iteration  29: 161234.949 ops/s
# Warmup Iteration  30: 161192.942 ops/s
Iteration   1: 160608.386 ops/s
Iteration   2: 161125.865 ops/s
Iteration   3: 160849.371 ops/s
Iteration   4: 161377.453 ops/s
Iteration   5: 160569.341 ops/s
Iteration   6: 160407.778 ops/s
Iteration   7: 160985.042 ops/s
Iteration   8: 161957.738 ops/s
Iteration   9: 161732.050 ops/s
Iteration  10: 161693.623 ops/s
Iteration  11: 161452.934 ops/s
Iteration  12: 161495.342 ops/s
Iteration  13: 161153.304 ops/s
Iteration  14: 161436.923 ops/s
Iteration  15: 160300.203 ops/s
Iteration  16: 160446.664 ops/s
Iteration  17: 161488.301 ops/s
Iteration  18: 160992.375 ops/s
Iteration  19: 161258.835 ops/s
Iteration  20: 160818.457 ops/s
Iteration  21: 161870.712 ops/s
Iteration  22: 161075.345 ops/s
Iteration  23: 161466.109 ops/s
Iteration  24: 161371.517 ops/s
Iteration  25: 161856.805 ops/s
Iteration  26: 161577.103 ops/s
Iteration  27: 159756.772 ops/s
Iteration  28: 160792.402 ops/s
Iteration  29: 161128.931 ops/s
Iteration  30: 161638.577 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_73._Benchmark.benchmark_Cluster_73":
  161156.142 ±(99.9%) 352.492 ops/s [Average]
  (min, avg, max) = (159756.772, 161156.142, 161957.738), stdev = 527.593
  CI (99.9%): [160803.650, 161508.634] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_73._Benchmark.benchmark_Cluster_73  thrpt   30  161156.142 ± 352.492  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_730._Benchmark.benchmark_Cluster_730$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_730._Benchmark.benchmark_Cluster_730

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61344.990 ops/s
# Warmup Iteration   2: 77845.614 ops/s
# Warmup Iteration   3: 117242.495 ops/s
# Warmup Iteration   4: 122241.290 ops/s
# Warmup Iteration   5: 122009.076 ops/s
# Warmup Iteration   6: 122218.134 ops/s
# Warmup Iteration   7: 121568.010 ops/s
# Warmup Iteration   8: 123362.253 ops/s
# Warmup Iteration   9: 123648.458 ops/s
# Warmup Iteration  10: 107501.526 ops/s
# Warmup Iteration  11: 112946.251 ops/s
# Warmup Iteration  12: 122470.611 ops/s
# Warmup Iteration  13: 122436.402 ops/s
# Warmup Iteration  14: 122709.067 ops/s
# Warmup Iteration  15: 123599.236 ops/s
# Warmup Iteration  16: 122840.140 ops/s
# Warmup Iteration  17: 128584.976 ops/s
# Warmup Iteration  18: 128780.971 ops/s
# Warmup Iteration  19: 128736.591 ops/s
# Warmup Iteration  20: 129446.673 ops/s
# Warmup Iteration  21: 129590.850 ops/s
# Warmup Iteration  22: 129519.212 ops/s
# Warmup Iteration  23: 129636.914 ops/s
# Warmup Iteration  24: 128528.726 ops/s
# Warmup Iteration  25: 128738.170 ops/s
# Warmup Iteration  26: 129661.726 ops/s
# Warmup Iteration  27: 128970.980 ops/s
# Warmup Iteration  28: 129592.766 ops/s
# Warmup Iteration  29: 128735.782 ops/s
# Warmup Iteration  30: 129322.368 ops/s
Iteration   1: 129517.019 ops/s
Iteration   2: 129665.043 ops/s
Iteration   3: 129527.865 ops/s
Iteration   4: 129558.507 ops/s
Iteration   5: 129696.929 ops/s
Iteration   6: 129177.403 ops/s
Iteration   7: 129574.935 ops/s
Iteration   8: 129590.780 ops/s
Iteration   9: 129564.781 ops/s
Iteration  10: 129641.915 ops/s
Iteration  11: 129597.908 ops/s
Iteration  12: 129455.434 ops/s
Iteration  13: 128941.822 ops/s
Iteration  14: 129715.319 ops/s
Iteration  15: 129601.717 ops/s
Iteration  16: 129446.698 ops/s
Iteration  17: 129683.946 ops/s
Iteration  18: 129794.647 ops/s
Iteration  19: 129507.973 ops/s
Iteration  20: 129727.678 ops/s
Iteration  21: 129711.106 ops/s
Iteration  22: 129690.851 ops/s
Iteration  23: 129900.920 ops/s
Iteration  24: 129737.568 ops/s
Iteration  25: 129614.564 ops/s
Iteration  26: 129489.664 ops/s
Iteration  27: 129620.565 ops/s
Iteration  28: 129514.528 ops/s
Iteration  29: 128625.597 ops/s
Iteration  30: 129480.699 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_730._Benchmark.benchmark_Cluster_730":
  129545.813 ±(99.9%) 166.273 ops/s [Average]
  (min, avg, max) = (128625.597, 129545.813, 129900.920), stdev = 248.869
  CI (99.9%): [129379.540, 129712.085] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_730._Benchmark.benchmark_Cluster_730  thrpt   30  129545.813 ± 166.273  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_731._Benchmark.benchmark_Cluster_731$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_731._Benchmark.benchmark_Cluster_731

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65901.439 ops/s
# Warmup Iteration   2: 125037.857 ops/s
# Warmup Iteration   3: 185278.640 ops/s
# Warmup Iteration   4: 183614.884 ops/s
# Warmup Iteration   5: 185189.079 ops/s
# Warmup Iteration   6: 185295.662 ops/s
# Warmup Iteration   7: 147756.041 ops/s
# Warmup Iteration   8: 184889.853 ops/s
# Warmup Iteration   9: 185122.129 ops/s
# Warmup Iteration  10: 184711.532 ops/s
# Warmup Iteration  11: 184778.343 ops/s
# Warmup Iteration  12: 185241.694 ops/s
# Warmup Iteration  13: 185003.926 ops/s
# Warmup Iteration  14: 185338.266 ops/s
# Warmup Iteration  15: 184929.818 ops/s
# Warmup Iteration  16: 185250.501 ops/s
# Warmup Iteration  17: 185868.429 ops/s
# Warmup Iteration  18: 185364.838 ops/s
# Warmup Iteration  19: 185566.583 ops/s
# Warmup Iteration  20: 185023.802 ops/s
# Warmup Iteration  21: 185657.554 ops/s
# Warmup Iteration  22: 184915.162 ops/s
# Warmup Iteration  23: 185544.857 ops/s
# Warmup Iteration  24: 185508.339 ops/s
# Warmup Iteration  25: 185538.441 ops/s
# Warmup Iteration  26: 185448.696 ops/s
# Warmup Iteration  27: 185681.789 ops/s
# Warmup Iteration  28: 185473.684 ops/s
# Warmup Iteration  29: 184844.539 ops/s
# Warmup Iteration  30: 185182.202 ops/s
Iteration   1: 185709.435 ops/s
Iteration   2: 185384.436 ops/s
Iteration   3: 185706.400 ops/s
Iteration   4: 185360.853 ops/s
Iteration   5: 185309.890 ops/s
Iteration   6: 185401.243 ops/s
Iteration   7: 184376.876 ops/s
Iteration   8: 184976.042 ops/s
Iteration   9: 185550.876 ops/s
Iteration  10: 185564.162 ops/s
Iteration  11: 185696.995 ops/s
Iteration  12: 184691.594 ops/s
Iteration  13: 185958.354 ops/s
Iteration  14: 185268.104 ops/s
Iteration  15: 185603.985 ops/s
Iteration  16: 185636.661 ops/s
Iteration  17: 186023.830 ops/s
Iteration  18: 185631.900 ops/s
Iteration  19: 185654.738 ops/s
Iteration  20: 185056.254 ops/s
Iteration  21: 185266.769 ops/s
Iteration  22: 185253.723 ops/s
Iteration  23: 185534.871 ops/s
Iteration  24: 184949.225 ops/s
Iteration  25: 185559.321 ops/s
Iteration  26: 185579.514 ops/s
Iteration  27: 185667.402 ops/s
Iteration  28: 184805.110 ops/s
Iteration  29: 185494.846 ops/s
Iteration  30: 185503.667 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_731._Benchmark.benchmark_Cluster_731":
  185405.903 ±(99.9%) 244.406 ops/s [Average]
  (min, avg, max) = (184376.876, 185405.903, 186023.830), stdev = 365.816
  CI (99.9%): [185161.496, 185650.309] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_731._Benchmark.benchmark_Cluster_731  thrpt   30  185405.903 ± 244.406  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_732._Benchmark.benchmark_Cluster_732$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_732._Benchmark.benchmark_Cluster_732

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69787.710 ops/s
# Warmup Iteration   2: 98662.063 ops/s
# Warmup Iteration   3: 160314.833 ops/s
# Warmup Iteration   4: 160832.849 ops/s
# Warmup Iteration   5: 161929.815 ops/s
# Warmup Iteration   6: 161647.867 ops/s
# Warmup Iteration   7: 161597.363 ops/s
# Warmup Iteration   8: 161978.329 ops/s
# Warmup Iteration   9: 124828.871 ops/s
# Warmup Iteration  10: 161187.450 ops/s
# Warmup Iteration  11: 161372.661 ops/s
# Warmup Iteration  12: 161397.325 ops/s
# Warmup Iteration  13: 161206.936 ops/s
# Warmup Iteration  14: 161234.336 ops/s
# Warmup Iteration  15: 161508.191 ops/s
# Warmup Iteration  16: 161586.368 ops/s
# Warmup Iteration  17: 164405.762 ops/s
# Warmup Iteration  18: 164272.841 ops/s
# Warmup Iteration  19: 163940.735 ops/s
# Warmup Iteration  20: 164086.153 ops/s
# Warmup Iteration  21: 164252.177 ops/s
# Warmup Iteration  22: 164249.675 ops/s
# Warmup Iteration  23: 164009.902 ops/s
# Warmup Iteration  24: 164301.436 ops/s
# Warmup Iteration  25: 163731.879 ops/s
# Warmup Iteration  26: 164184.915 ops/s
# Warmup Iteration  27: 164192.820 ops/s
# Warmup Iteration  28: 164131.245 ops/s
# Warmup Iteration  29: 164193.120 ops/s
# Warmup Iteration  30: 164370.278 ops/s
Iteration   1: 164507.587 ops/s
Iteration   2: 164221.025 ops/s
Iteration   3: 164169.961 ops/s
Iteration   4: 164328.981 ops/s
Iteration   5: 164396.316 ops/s
Iteration   6: 164240.851 ops/s
Iteration   7: 163916.508 ops/s
Iteration   8: 163777.655 ops/s
Iteration   9: 163938.757 ops/s
Iteration  10: 164198.880 ops/s
Iteration  11: 162742.978 ops/s
Iteration  12: 164269.912 ops/s
Iteration  13: 164367.827 ops/s
Iteration  14: 164096.853 ops/s
Iteration  15: 164240.579 ops/s
Iteration  16: 164692.039 ops/s
Iteration  17: 163742.466 ops/s
Iteration  18: 164084.775 ops/s
Iteration  19: 164154.877 ops/s
Iteration  20: 163664.985 ops/s
Iteration  21: 163843.418 ops/s
Iteration  22: 163970.411 ops/s
Iteration  23: 163937.950 ops/s
Iteration  24: 164107.509 ops/s
Iteration  25: 164467.305 ops/s
Iteration  26: 164724.076 ops/s
Iteration  27: 164237.647 ops/s
Iteration  28: 163903.850 ops/s
Iteration  29: 164199.851 ops/s
Iteration  30: 164381.685 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_732._Benchmark.benchmark_Cluster_732":
  164117.584 ±(99.9%) 245.718 ops/s [Average]
  (min, avg, max) = (162742.978, 164117.584, 164724.076), stdev = 367.780
  CI (99.9%): [163871.866, 164363.302] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_732._Benchmark.benchmark_Cluster_732  thrpt   30  164117.584 ± 245.718  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_733._Benchmark.benchmark_Cluster_733$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_733._Benchmark.benchmark_Cluster_733

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43227.560 ops/s
# Warmup Iteration   2: 111460.797 ops/s
# Warmup Iteration   3: 170623.816 ops/s
# Warmup Iteration   4: 172034.598 ops/s
# Warmup Iteration   5: 171345.445 ops/s
# Warmup Iteration   6: 137472.341 ops/s
# Warmup Iteration   7: 172289.582 ops/s
# Warmup Iteration   8: 172002.938 ops/s
# Warmup Iteration   9: 172623.887 ops/s
# Warmup Iteration  10: 172247.444 ops/s
# Warmup Iteration  11: 172565.458 ops/s
# Warmup Iteration  12: 172650.935 ops/s
# Warmup Iteration  13: 172518.584 ops/s
# Warmup Iteration  14: 172655.417 ops/s
# Warmup Iteration  15: 172626.708 ops/s
# Warmup Iteration  16: 172588.924 ops/s
# Warmup Iteration  17: 171575.451 ops/s
# Warmup Iteration  18: 171268.661 ops/s
# Warmup Iteration  19: 171443.263 ops/s
# Warmup Iteration  20: 171289.345 ops/s
# Warmup Iteration  21: 171701.287 ops/s
# Warmup Iteration  22: 171427.973 ops/s
# Warmup Iteration  23: 171192.279 ops/s
# Warmup Iteration  24: 171091.263 ops/s
# Warmup Iteration  25: 171520.824 ops/s
# Warmup Iteration  26: 171154.133 ops/s
# Warmup Iteration  27: 171212.121 ops/s
# Warmup Iteration  28: 171679.860 ops/s
# Warmup Iteration  29: 171702.970 ops/s
# Warmup Iteration  30: 171443.945 ops/s
Iteration   1: 171139.864 ops/s
Iteration   2: 171507.785 ops/s
Iteration   3: 171224.842 ops/s
Iteration   4: 171674.979 ops/s
Iteration   5: 171157.614 ops/s
Iteration   6: 170729.085 ops/s
Iteration   7: 171214.805 ops/s
Iteration   8: 171277.407 ops/s
Iteration   9: 171227.508 ops/s
Iteration  10: 171435.812 ops/s
Iteration  11: 171326.305 ops/s
Iteration  12: 171207.663 ops/s
Iteration  13: 171502.357 ops/s
Iteration  14: 171370.785 ops/s
Iteration  15: 171335.795 ops/s
Iteration  16: 171865.076 ops/s
Iteration  17: 171296.977 ops/s
Iteration  18: 171576.788 ops/s
Iteration  19: 171406.564 ops/s
Iteration  20: 171205.146 ops/s
Iteration  21: 171102.986 ops/s
Iteration  22: 171668.374 ops/s
Iteration  23: 171505.291 ops/s
Iteration  24: 171919.918 ops/s
Iteration  25: 171226.114 ops/s
Iteration  26: 171275.989 ops/s
Iteration  27: 171888.862 ops/s
Iteration  28: 171524.261 ops/s
Iteration  29: 171542.333 ops/s
Iteration  30: 171814.334 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_733._Benchmark.benchmark_Cluster_733":
  171405.054 ±(99.9%) 178.142 ops/s [Average]
  (min, avg, max) = (170729.085, 171405.054, 171919.918), stdev = 266.634
  CI (99.9%): [171226.912, 171583.196] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_733._Benchmark.benchmark_Cluster_733  thrpt   30  171405.054 ± 178.142  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_734._Benchmark.benchmark_Cluster_734$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_734._Benchmark.benchmark_Cluster_734

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 103816.675 ops/s
# Warmup Iteration   2: 115330.748 ops/s
# Warmup Iteration   3: 143925.706 ops/s
# Warmup Iteration   4: 159322.836 ops/s
# Warmup Iteration   5: 159663.307 ops/s
# Warmup Iteration   6: 158587.885 ops/s
# Warmup Iteration   7: 159316.186 ops/s
# Warmup Iteration   8: 159105.034 ops/s
# Warmup Iteration   9: 158953.021 ops/s
# Warmup Iteration  10: 159045.610 ops/s
# Warmup Iteration  11: 158178.768 ops/s
# Warmup Iteration  12: 158224.209 ops/s
# Warmup Iteration  13: 128424.267 ops/s
# Warmup Iteration  14: 157145.452 ops/s
# Warmup Iteration  15: 159179.379 ops/s
# Warmup Iteration  16: 159322.299 ops/s
# Warmup Iteration  17: 166539.477 ops/s
# Warmup Iteration  18: 166772.750 ops/s
# Warmup Iteration  19: 167271.738 ops/s
# Warmup Iteration  20: 167234.669 ops/s
# Warmup Iteration  21: 167292.161 ops/s
# Warmup Iteration  22: 166767.454 ops/s
# Warmup Iteration  23: 166704.797 ops/s
# Warmup Iteration  24: 166950.510 ops/s
# Warmup Iteration  25: 166921.225 ops/s
# Warmup Iteration  26: 166924.179 ops/s
# Warmup Iteration  27: 167354.548 ops/s
# Warmup Iteration  28: 167214.181 ops/s
# Warmup Iteration  29: 166839.224 ops/s
# Warmup Iteration  30: 167055.300 ops/s
Iteration   1: 166796.594 ops/s
Iteration   2: 166639.149 ops/s
Iteration   3: 167250.230 ops/s
Iteration   4: 167041.962 ops/s
Iteration   5: 166770.601 ops/s
Iteration   6: 167138.850 ops/s
Iteration   7: 167099.944 ops/s
Iteration   8: 167366.040 ops/s
Iteration   9: 166781.059 ops/s
Iteration  10: 167393.614 ops/s
Iteration  11: 167314.026 ops/s
Iteration  12: 166776.246 ops/s
Iteration  13: 166747.110 ops/s
Iteration  14: 166449.818 ops/s
Iteration  15: 166969.205 ops/s
Iteration  16: 167042.042 ops/s
Iteration  17: 166167.519 ops/s
Iteration  18: 166769.891 ops/s
Iteration  19: 166939.231 ops/s
Iteration  20: 166887.589 ops/s
Iteration  21: 167381.777 ops/s
Iteration  22: 167027.523 ops/s
Iteration  23: 167242.677 ops/s
Iteration  24: 167325.861 ops/s
Iteration  25: 167241.499 ops/s
Iteration  26: 166805.056 ops/s
Iteration  27: 166008.886 ops/s
Iteration  28: 166757.671 ops/s
Iteration  29: 167246.979 ops/s
Iteration  30: 167094.264 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_734._Benchmark.benchmark_Cluster_734":
  166949.097 ±(99.9%) 227.962 ops/s [Average]
  (min, avg, max) = (166008.886, 166949.097, 167393.614), stdev = 341.202
  CI (99.9%): [166721.135, 167177.059] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_734._Benchmark.benchmark_Cluster_734  thrpt   30  166949.097 ± 227.962  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_735._Benchmark.benchmark_Cluster_735$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_735._Benchmark.benchmark_Cluster_735

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56051.968 ops/s
# Warmup Iteration   2: 83081.779 ops/s
# Warmup Iteration   3: 120114.783 ops/s
# Warmup Iteration   4: 132475.376 ops/s
# Warmup Iteration   5: 131140.883 ops/s
# Warmup Iteration   6: 132137.307 ops/s
# Warmup Iteration   7: 132806.544 ops/s
# Warmup Iteration   8: 132285.985 ops/s
# Warmup Iteration   9: 131195.942 ops/s
# Warmup Iteration  10: 113385.382 ops/s
# Warmup Iteration  11: 118577.268 ops/s
# Warmup Iteration  12: 132457.376 ops/s
# Warmup Iteration  13: 132020.557 ops/s
# Warmup Iteration  14: 132337.847 ops/s
# Warmup Iteration  15: 132157.714 ops/s
# Warmup Iteration  16: 132567.987 ops/s
# Warmup Iteration  17: 133609.178 ops/s
# Warmup Iteration  18: 133668.536 ops/s
# Warmup Iteration  19: 133795.033 ops/s
# Warmup Iteration  20: 133786.612 ops/s
# Warmup Iteration  21: 133938.810 ops/s
# Warmup Iteration  22: 132976.120 ops/s
# Warmup Iteration  23: 132430.064 ops/s
# Warmup Iteration  24: 132974.127 ops/s
# Warmup Iteration  25: 133348.315 ops/s
# Warmup Iteration  26: 133476.832 ops/s
# Warmup Iteration  27: 132933.934 ops/s
# Warmup Iteration  28: 132878.086 ops/s
# Warmup Iteration  29: 131982.885 ops/s
# Warmup Iteration  30: 133627.837 ops/s
Iteration   1: 131792.631 ops/s
Iteration   2: 132978.885 ops/s
Iteration   3: 132494.149 ops/s
Iteration   4: 133187.047 ops/s
Iteration   5: 133287.025 ops/s
Iteration   6: 133616.106 ops/s
Iteration   7: 133415.025 ops/s
Iteration   8: 133332.440 ops/s
Iteration   9: 133118.530 ops/s
Iteration  10: 132713.338 ops/s
Iteration  11: 133076.003 ops/s
Iteration  12: 133536.202 ops/s
Iteration  13: 132909.127 ops/s
Iteration  14: 132815.150 ops/s
Iteration  15: 133263.849 ops/s
Iteration  16: 133025.845 ops/s
Iteration  17: 133635.885 ops/s
Iteration  18: 133628.889 ops/s
Iteration  19: 133592.550 ops/s
Iteration  20: 133106.945 ops/s
Iteration  21: 133430.778 ops/s
Iteration  22: 133288.099 ops/s
Iteration  23: 133696.397 ops/s
Iteration  24: 133178.012 ops/s
Iteration  25: 133157.428 ops/s
Iteration  26: 133283.877 ops/s
Iteration  27: 133664.483 ops/s
Iteration  28: 133770.639 ops/s
Iteration  29: 132378.017 ops/s
Iteration  30: 133362.458 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_735._Benchmark.benchmark_Cluster_735":
  133191.194 ±(99.9%) 291.119 ops/s [Average]
  (min, avg, max) = (131792.631, 133191.194, 133770.639), stdev = 435.733
  CI (99.9%): [132900.075, 133482.312] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_735._Benchmark.benchmark_Cluster_735  thrpt   30  133191.194 ± 291.119  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_736._Benchmark.benchmark_Cluster_736$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_736._Benchmark.benchmark_Cluster_736

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 109395.418 ops/s
# Warmup Iteration   2: 134285.827 ops/s
# Warmup Iteration   3: 161839.181 ops/s
# Warmup Iteration   4: 188751.965 ops/s
# Warmup Iteration   5: 188819.961 ops/s
# Warmup Iteration   6: 187439.243 ops/s
# Warmup Iteration   7: 189408.044 ops/s
# Warmup Iteration   8: 189643.524 ops/s
# Warmup Iteration   9: 190137.952 ops/s
# Warmup Iteration  10: 189156.515 ops/s
# Warmup Iteration  11: 188698.762 ops/s
# Warmup Iteration  12: 189146.029 ops/s
# Warmup Iteration  13: 158498.463 ops/s
# Warmup Iteration  14: 179163.860 ops/s
# Warmup Iteration  15: 189908.048 ops/s
# Warmup Iteration  16: 189465.699 ops/s
# Warmup Iteration  17: 196971.425 ops/s
# Warmup Iteration  18: 196370.124 ops/s
# Warmup Iteration  19: 196502.787 ops/s
# Warmup Iteration  20: 195880.977 ops/s
# Warmup Iteration  21: 196209.645 ops/s
# Warmup Iteration  22: 196519.599 ops/s
# Warmup Iteration  23: 196712.648 ops/s
# Warmup Iteration  24: 196324.873 ops/s
# Warmup Iteration  25: 196651.765 ops/s
# Warmup Iteration  26: 196931.148 ops/s
# Warmup Iteration  27: 196900.159 ops/s
# Warmup Iteration  28: 196785.694 ops/s
# Warmup Iteration  29: 196463.848 ops/s
# Warmup Iteration  30: 196414.019 ops/s
Iteration   1: 196419.412 ops/s
Iteration   2: 196592.345 ops/s
Iteration   3: 196725.720 ops/s
Iteration   4: 196683.905 ops/s
Iteration   5: 197018.767 ops/s
Iteration   6: 196679.250 ops/s
Iteration   7: 196486.322 ops/s
Iteration   8: 196496.413 ops/s
Iteration   9: 196775.246 ops/s
Iteration  10: 196203.203 ops/s
Iteration  11: 196609.568 ops/s
Iteration  12: 196526.392 ops/s
Iteration  13: 196547.683 ops/s
Iteration  14: 194895.172 ops/s
Iteration  15: 196873.297 ops/s
Iteration  16: 196241.872 ops/s
Iteration  17: 196294.084 ops/s
Iteration  18: 196109.222 ops/s
Iteration  19: 196908.288 ops/s
Iteration  20: 196343.410 ops/s
Iteration  21: 194956.398 ops/s
Iteration  22: 196821.632 ops/s
Iteration  23: 196117.660 ops/s
Iteration  24: 196939.133 ops/s
Iteration  25: 196785.071 ops/s
Iteration  26: 196369.496 ops/s
Iteration  27: 195833.910 ops/s
Iteration  28: 196356.253 ops/s
Iteration  29: 196073.831 ops/s
Iteration  30: 196110.897 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_736._Benchmark.benchmark_Cluster_736":
  196393.128 ±(99.9%) 331.188 ops/s [Average]
  (min, avg, max) = (194895.172, 196393.128, 197018.767), stdev = 495.707
  CI (99.9%): [196061.940, 196724.317] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_736._Benchmark.benchmark_Cluster_736  thrpt   30  196393.128 ± 331.188  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_737._Benchmark.benchmark_Cluster_737$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_737._Benchmark.benchmark_Cluster_737

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 85120.914 ops/s
# Warmup Iteration   2: 95116.953 ops/s
# Warmup Iteration   3: 110360.242 ops/s
# Warmup Iteration   4: 133759.869 ops/s
# Warmup Iteration   5: 132812.459 ops/s
# Warmup Iteration   6: 133430.262 ops/s
# Warmup Iteration   7: 132180.397 ops/s
# Warmup Iteration   8: 133357.572 ops/s
# Warmup Iteration   9: 133817.086 ops/s
# Warmup Iteration  10: 133331.941 ops/s
# Warmup Iteration  11: 134288.910 ops/s
# Warmup Iteration  12: 133989.283 ops/s
# Warmup Iteration  13: 133872.344 ops/s
# Warmup Iteration  14: 113045.196 ops/s
# Warmup Iteration  15: 124025.281 ops/s
# Warmup Iteration  16: 134028.623 ops/s
# Warmup Iteration  17: 138299.596 ops/s
# Warmup Iteration  18: 138217.739 ops/s
# Warmup Iteration  19: 138138.659 ops/s
# Warmup Iteration  20: 138192.548 ops/s
# Warmup Iteration  21: 138248.345 ops/s
# Warmup Iteration  22: 138309.730 ops/s
# Warmup Iteration  23: 138430.020 ops/s
# Warmup Iteration  24: 137605.222 ops/s
# Warmup Iteration  25: 138222.353 ops/s
# Warmup Iteration  26: 138092.191 ops/s
# Warmup Iteration  27: 137890.270 ops/s
# Warmup Iteration  28: 138075.519 ops/s
# Warmup Iteration  29: 138344.247 ops/s
# Warmup Iteration  30: 138405.467 ops/s
Iteration   1: 138396.234 ops/s
Iteration   2: 138049.543 ops/s
Iteration   3: 138255.948 ops/s
Iteration   4: 138329.674 ops/s
Iteration   5: 138449.806 ops/s
Iteration   6: 138392.275 ops/s
Iteration   7: 137820.062 ops/s
Iteration   8: 137595.458 ops/s
Iteration   9: 137635.777 ops/s
Iteration  10: 137445.299 ops/s
Iteration  11: 137633.777 ops/s
Iteration  12: 137653.364 ops/s
Iteration  13: 137979.734 ops/s
Iteration  14: 137975.847 ops/s
Iteration  15: 137937.715 ops/s
Iteration  16: 138276.463 ops/s
Iteration  17: 138086.047 ops/s
Iteration  18: 138182.901 ops/s
Iteration  19: 138183.388 ops/s
Iteration  20: 138338.183 ops/s
Iteration  21: 137892.726 ops/s
Iteration  22: 137972.657 ops/s
Iteration  23: 138217.071 ops/s
Iteration  24: 138447.723 ops/s
Iteration  25: 138507.756 ops/s
Iteration  26: 137658.310 ops/s
Iteration  27: 137987.982 ops/s
Iteration  28: 138040.159 ops/s
Iteration  29: 138007.629 ops/s
Iteration  30: 137820.637 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_737._Benchmark.benchmark_Cluster_737":
  138039.005 ±(99.9%) 195.119 ops/s [Average]
  (min, avg, max) = (137445.299, 138039.005, 138507.756), stdev = 292.045
  CI (99.9%): [137843.886, 138234.124] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_737._Benchmark.benchmark_Cluster_737  thrpt   30  138039.005 ± 195.119  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_738._Benchmark.benchmark_Cluster_738$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_738._Benchmark.benchmark_Cluster_738

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79253.246 ops/s
# Warmup Iteration   2: 146985.842 ops/s
# Warmup Iteration   3: 187562.236 ops/s
# Warmup Iteration   4: 189320.230 ops/s
# Warmup Iteration   5: 188389.467 ops/s
# Warmup Iteration   6: 149498.927 ops/s
# Warmup Iteration   7: 189295.077 ops/s
# Warmup Iteration   8: 189161.826 ops/s
# Warmup Iteration   9: 188795.358 ops/s
# Warmup Iteration  10: 188820.353 ops/s
# Warmup Iteration  11: 188953.715 ops/s
# Warmup Iteration  12: 189384.922 ops/s
# Warmup Iteration  13: 189347.474 ops/s
# Warmup Iteration  14: 189425.595 ops/s
# Warmup Iteration  15: 189209.868 ops/s
# Warmup Iteration  16: 189177.509 ops/s
# Warmup Iteration  17: 189035.645 ops/s
# Warmup Iteration  18: 188882.567 ops/s
# Warmup Iteration  19: 188766.263 ops/s
# Warmup Iteration  20: 189134.510 ops/s
# Warmup Iteration  21: 189056.666 ops/s
# Warmup Iteration  22: 188991.267 ops/s
# Warmup Iteration  23: 189079.255 ops/s
# Warmup Iteration  24: 189215.510 ops/s
# Warmup Iteration  25: 189010.266 ops/s
# Warmup Iteration  26: 189116.009 ops/s
# Warmup Iteration  27: 189379.565 ops/s
# Warmup Iteration  28: 189301.578 ops/s
# Warmup Iteration  29: 188999.098 ops/s
# Warmup Iteration  30: 189008.245 ops/s
Iteration   1: 189137.019 ops/s
Iteration   2: 189234.102 ops/s
Iteration   3: 188979.622 ops/s
Iteration   4: 189456.509 ops/s
Iteration   5: 189005.362 ops/s
Iteration   6: 189000.788 ops/s
Iteration   7: 189058.916 ops/s
Iteration   8: 188873.666 ops/s
Iteration   9: 188624.762 ops/s
Iteration  10: 188293.199 ops/s
Iteration  11: 189468.038 ops/s
Iteration  12: 189167.339 ops/s
Iteration  13: 189296.836 ops/s
Iteration  14: 188692.506 ops/s
Iteration  15: 189011.527 ops/s
Iteration  16: 188151.498 ops/s
Iteration  17: 188797.125 ops/s
Iteration  18: 188800.880 ops/s
Iteration  19: 188276.796 ops/s
Iteration  20: 189032.719 ops/s
Iteration  21: 188869.457 ops/s
Iteration  22: 188768.276 ops/s
Iteration  23: 188834.459 ops/s
Iteration  24: 188846.423 ops/s
Iteration  25: 188869.982 ops/s
Iteration  26: 189118.931 ops/s
Iteration  27: 188926.742 ops/s
Iteration  28: 188984.182 ops/s
Iteration  29: 188765.695 ops/s
Iteration  30: 189113.562 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_738._Benchmark.benchmark_Cluster_738":
  188915.231 ±(99.9%) 204.145 ops/s [Average]
  (min, avg, max) = (188151.498, 188915.231, 189468.038), stdev = 305.555
  CI (99.9%): [188711.085, 189119.376] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_738._Benchmark.benchmark_Cluster_738  thrpt   30  188915.231 ± 204.145  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_739._Benchmark.benchmark_Cluster_739$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_739._Benchmark.benchmark_Cluster_739

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46665.375 ops/s
# Warmup Iteration   2: 114468.882 ops/s
# Warmup Iteration   3: 164338.242 ops/s
# Warmup Iteration   4: 165369.180 ops/s
# Warmup Iteration   5: 163756.406 ops/s
# Warmup Iteration   6: 133042.622 ops/s
# Warmup Iteration   7: 165115.065 ops/s
# Warmup Iteration   8: 164900.250 ops/s
# Warmup Iteration   9: 165090.532 ops/s
# Warmup Iteration  10: 165306.417 ops/s
# Warmup Iteration  11: 165021.633 ops/s
# Warmup Iteration  12: 165094.257 ops/s
# Warmup Iteration  13: 165215.911 ops/s
# Warmup Iteration  14: 164809.705 ops/s
# Warmup Iteration  15: 165204.775 ops/s
# Warmup Iteration  16: 165007.103 ops/s
# Warmup Iteration  17: 164879.678 ops/s
# Warmup Iteration  18: 165451.298 ops/s
# Warmup Iteration  19: 165284.083 ops/s
# Warmup Iteration  20: 165505.990 ops/s
# Warmup Iteration  21: 165794.812 ops/s
# Warmup Iteration  22: 165486.750 ops/s
# Warmup Iteration  23: 165268.594 ops/s
# Warmup Iteration  24: 165277.579 ops/s
# Warmup Iteration  25: 165620.497 ops/s
# Warmup Iteration  26: 164996.352 ops/s
# Warmup Iteration  27: 165426.019 ops/s
# Warmup Iteration  28: 165656.062 ops/s
# Warmup Iteration  29: 165624.874 ops/s
# Warmup Iteration  30: 165483.279 ops/s
Iteration   1: 165666.329 ops/s
Iteration   2: 165434.847 ops/s
Iteration   3: 165690.724 ops/s
Iteration   4: 165868.866 ops/s
Iteration   5: 165472.714 ops/s
Iteration   6: 165476.709 ops/s
Iteration   7: 164763.592 ops/s
Iteration   8: 165803.721 ops/s
Iteration   9: 165406.805 ops/s
Iteration  10: 165616.277 ops/s
Iteration  11: 165302.185 ops/s
Iteration  12: 165493.579 ops/s
Iteration  13: 165923.785 ops/s
Iteration  14: 165631.635 ops/s
Iteration  15: 165823.457 ops/s
Iteration  16: 165555.987 ops/s
Iteration  17: 165545.592 ops/s
Iteration  18: 165856.018 ops/s
Iteration  19: 165850.978 ops/s
Iteration  20: 165722.681 ops/s
Iteration  21: 165944.990 ops/s
Iteration  22: 165967.586 ops/s
Iteration  23: 165685.795 ops/s
Iteration  24: 165950.893 ops/s
Iteration  25: 165928.176 ops/s
Iteration  26: 165852.667 ops/s
Iteration  27: 165722.269 ops/s
Iteration  28: 165527.944 ops/s
Iteration  29: 165763.380 ops/s
Iteration  30: 165801.833 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_739._Benchmark.benchmark_Cluster_739":
  165668.400 ±(99.9%) 167.829 ops/s [Average]
  (min, avg, max) = (164763.592, 165668.400, 165967.586), stdev = 251.198
  CI (99.9%): [165500.572, 165836.229] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_739._Benchmark.benchmark_Cluster_739  thrpt   30  165668.400 ± 167.829  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_74._Benchmark.benchmark_Cluster_74$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_74._Benchmark.benchmark_Cluster_74

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 89426.279 ops/s
# Warmup Iteration   2: 101994.494 ops/s
# Warmup Iteration   3: 137003.561 ops/s
# Warmup Iteration   4: 150496.919 ops/s
# Warmup Iteration   5: 150749.905 ops/s
# Warmup Iteration   6: 148935.164 ops/s
# Warmup Iteration   7: 149948.585 ops/s
# Warmup Iteration   8: 150122.664 ops/s
# Warmup Iteration   9: 149920.258 ops/s
# Warmup Iteration  10: 149910.372 ops/s
# Warmup Iteration  11: 149629.675 ops/s
# Warmup Iteration  12: 115721.143 ops/s
# Warmup Iteration  13: 150333.205 ops/s
# Warmup Iteration  14: 150007.487 ops/s
# Warmup Iteration  15: 150547.069 ops/s
# Warmup Iteration  16: 150222.416 ops/s
# Warmup Iteration  17: 154602.548 ops/s
# Warmup Iteration  18: 154544.857 ops/s
# Warmup Iteration  19: 154835.621 ops/s
# Warmup Iteration  20: 154767.773 ops/s
# Warmup Iteration  21: 154521.478 ops/s
# Warmup Iteration  22: 154770.093 ops/s
# Warmup Iteration  23: 154780.052 ops/s
# Warmup Iteration  24: 154761.096 ops/s
# Warmup Iteration  25: 154724.916 ops/s
# Warmup Iteration  26: 154831.603 ops/s
# Warmup Iteration  27: 154921.850 ops/s
# Warmup Iteration  28: 154558.685 ops/s
# Warmup Iteration  29: 154879.405 ops/s
# Warmup Iteration  30: 154705.395 ops/s
Iteration   1: 154998.142 ops/s
Iteration   2: 154448.196 ops/s
Iteration   3: 154379.123 ops/s
Iteration   4: 154547.197 ops/s
Iteration   5: 155010.699 ops/s
Iteration   6: 155221.307 ops/s
Iteration   7: 154842.411 ops/s
Iteration   8: 155150.814 ops/s
Iteration   9: 154837.025 ops/s
Iteration  10: 154885.702 ops/s
Iteration  11: 154537.556 ops/s
Iteration  12: 155073.247 ops/s
Iteration  13: 155067.378 ops/s
Iteration  14: 154905.453 ops/s
Iteration  15: 154777.879 ops/s
Iteration  16: 154712.521 ops/s
Iteration  17: 154948.728 ops/s
Iteration  18: 153898.612 ops/s
Iteration  19: 154972.366 ops/s
Iteration  20: 155276.295 ops/s
Iteration  21: 155041.430 ops/s
Iteration  22: 154738.993 ops/s
Iteration  23: 155230.470 ops/s
Iteration  24: 154604.692 ops/s
Iteration  25: 155072.642 ops/s
Iteration  26: 154794.563 ops/s
Iteration  27: 154635.879 ops/s
Iteration  28: 154751.410 ops/s
Iteration  29: 154513.951 ops/s
Iteration  30: 154407.283 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_74._Benchmark.benchmark_Cluster_74":
  154809.399 ±(99.9%) 204.145 ops/s [Average]
  (min, avg, max) = (153898.612, 154809.399, 155276.295), stdev = 305.555
  CI (99.9%): [154605.253, 155013.544] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_74._Benchmark.benchmark_Cluster_74  thrpt   30  154809.399 ± 204.145  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_740._Benchmark.benchmark_Cluster_740$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_740._Benchmark.benchmark_Cluster_740

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80551.356 ops/s
# Warmup Iteration   2: 120179.080 ops/s
# Warmup Iteration   3: 192338.387 ops/s
# Warmup Iteration   4: 191143.703 ops/s
# Warmup Iteration   5: 192877.904 ops/s
# Warmup Iteration   6: 192489.691 ops/s
# Warmup Iteration   7: 192631.400 ops/s
# Warmup Iteration   8: 148987.622 ops/s
# Warmup Iteration   9: 193096.098 ops/s
# Warmup Iteration  10: 193027.966 ops/s
# Warmup Iteration  11: 193104.406 ops/s
# Warmup Iteration  12: 193384.165 ops/s
# Warmup Iteration  13: 193308.213 ops/s
# Warmup Iteration  14: 193163.559 ops/s
# Warmup Iteration  15: 193369.350 ops/s
# Warmup Iteration  16: 192797.250 ops/s
# Warmup Iteration  17: 194041.836 ops/s
# Warmup Iteration  18: 194125.603 ops/s
# Warmup Iteration  19: 194080.325 ops/s
# Warmup Iteration  20: 193846.797 ops/s
# Warmup Iteration  21: 194034.044 ops/s
# Warmup Iteration  22: 193495.148 ops/s
# Warmup Iteration  23: 193870.753 ops/s
# Warmup Iteration  24: 194037.672 ops/s
# Warmup Iteration  25: 193731.338 ops/s
# Warmup Iteration  26: 193908.556 ops/s
# Warmup Iteration  27: 193997.599 ops/s
# Warmup Iteration  28: 193925.840 ops/s
# Warmup Iteration  29: 193700.562 ops/s
# Warmup Iteration  30: 193994.899 ops/s
Iteration   1: 193689.464 ops/s
Iteration   2: 193868.551 ops/s
Iteration   3: 194162.553 ops/s
Iteration   4: 193990.728 ops/s
Iteration   5: 194223.047 ops/s
Iteration   6: 194233.116 ops/s
Iteration   7: 194228.755 ops/s
Iteration   8: 193907.699 ops/s
Iteration   9: 194086.481 ops/s
Iteration  10: 193825.490 ops/s
Iteration  11: 193910.462 ops/s
Iteration  12: 194014.182 ops/s
Iteration  13: 193994.689 ops/s
Iteration  14: 193749.375 ops/s
Iteration  15: 193440.976 ops/s
Iteration  16: 194009.903 ops/s
Iteration  17: 194110.259 ops/s
Iteration  18: 193805.093 ops/s
Iteration  19: 194095.933 ops/s
Iteration  20: 194064.921 ops/s
Iteration  21: 193901.767 ops/s
Iteration  22: 194113.933 ops/s
Iteration  23: 193942.547 ops/s
Iteration  24: 194120.697 ops/s
Iteration  25: 193944.486 ops/s
Iteration  26: 194046.116 ops/s
Iteration  27: 193851.864 ops/s
Iteration  28: 193613.622 ops/s
Iteration  29: 193840.320 ops/s
Iteration  30: 193816.323 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_740._Benchmark.benchmark_Cluster_740":
  193953.445 ±(99.9%) 124.157 ops/s [Average]
  (min, avg, max) = (193440.976, 193953.445, 194233.116), stdev = 185.832
  CI (99.9%): [193829.288, 194077.602] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_740._Benchmark.benchmark_Cluster_740  thrpt   30  193953.445 ± 124.157  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_741._Benchmark.benchmark_Cluster_741$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_741._Benchmark.benchmark_Cluster_741

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 124119.484 ops/s
# Warmup Iteration   2: 193660.298 ops/s
# Warmup Iteration   3: 278572.868 ops/s
# Warmup Iteration   4: 276279.991 ops/s
# Warmup Iteration   5: 278465.192 ops/s
# Warmup Iteration   6: 278271.656 ops/s
# Warmup Iteration   7: 251363.095 ops/s
# Warmup Iteration   8: 246164.480 ops/s
# Warmup Iteration   9: 277895.686 ops/s
# Warmup Iteration  10: 279046.510 ops/s
# Warmup Iteration  11: 278735.477 ops/s
# Warmup Iteration  12: 278359.026 ops/s
# Warmup Iteration  13: 278573.593 ops/s
# Warmup Iteration  14: 278355.120 ops/s
# Warmup Iteration  15: 278185.020 ops/s
# Warmup Iteration  16: 278484.532 ops/s
# Warmup Iteration  17: 278813.801 ops/s
# Warmup Iteration  18: 277869.388 ops/s
# Warmup Iteration  19: 278712.150 ops/s
# Warmup Iteration  20: 278314.793 ops/s
# Warmup Iteration  21: 278505.689 ops/s
# Warmup Iteration  22: 279077.143 ops/s
# Warmup Iteration  23: 278980.740 ops/s
# Warmup Iteration  24: 278645.270 ops/s
# Warmup Iteration  25: 278452.791 ops/s
# Warmup Iteration  26: 277665.843 ops/s
# Warmup Iteration  27: 277502.228 ops/s
# Warmup Iteration  28: 277666.482 ops/s
# Warmup Iteration  29: 278625.872 ops/s
# Warmup Iteration  30: 278741.486 ops/s
Iteration   1: 278331.350 ops/s
Iteration   2: 278797.295 ops/s
Iteration   3: 277803.401 ops/s
Iteration   4: 278631.224 ops/s
Iteration   5: 277368.741 ops/s
Iteration   6: 278174.599 ops/s
Iteration   7: 277960.994 ops/s
Iteration   8: 276611.477 ops/s
Iteration   9: 279104.973 ops/s
Iteration  10: 278628.271 ops/s
Iteration  11: 278646.436 ops/s
Iteration  12: 277439.553 ops/s
Iteration  13: 278119.456 ops/s
Iteration  14: 277939.901 ops/s
Iteration  15: 278770.040 ops/s
Iteration  16: 279006.146 ops/s
Iteration  17: 278381.507 ops/s
Iteration  18: 278854.141 ops/s
Iteration  19: 278609.243 ops/s
Iteration  20: 278916.575 ops/s
Iteration  21: 278598.826 ops/s
Iteration  22: 278916.818 ops/s
Iteration  23: 277719.452 ops/s
Iteration  24: 278366.419 ops/s
Iteration  25: 279024.545 ops/s
Iteration  26: 278444.045 ops/s
Iteration  27: 279064.966 ops/s
Iteration  28: 278263.342 ops/s
Iteration  29: 278738.184 ops/s
Iteration  30: 279068.849 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_741._Benchmark.benchmark_Cluster_741":
  278410.026 ±(99.9%) 394.374 ops/s [Average]
  (min, avg, max) = (276611.477, 278410.026, 279104.973), stdev = 590.280
  CI (99.9%): [278015.652, 278804.400] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_741._Benchmark.benchmark_Cluster_741  thrpt   30  278410.026 ± 394.374  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_742._Benchmark.benchmark_Cluster_742$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_742._Benchmark.benchmark_Cluster_742

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68923.441 ops/s
# Warmup Iteration   2: 98788.408 ops/s
# Warmup Iteration   3: 153008.995 ops/s
# Warmup Iteration   4: 154332.794 ops/s
# Warmup Iteration   5: 154147.810 ops/s
# Warmup Iteration   6: 154514.994 ops/s
# Warmup Iteration   7: 153716.788 ops/s
# Warmup Iteration   8: 150994.962 ops/s
# Warmup Iteration   9: 124392.129 ops/s
# Warmup Iteration  10: 154748.109 ops/s
# Warmup Iteration  11: 155066.596 ops/s
# Warmup Iteration  12: 154265.711 ops/s
# Warmup Iteration  13: 154356.520 ops/s
# Warmup Iteration  14: 154581.113 ops/s
# Warmup Iteration  15: 154723.316 ops/s
# Warmup Iteration  16: 154758.438 ops/s
# Warmup Iteration  17: 158335.863 ops/s
# Warmup Iteration  18: 158692.942 ops/s
# Warmup Iteration  19: 158250.017 ops/s
# Warmup Iteration  20: 158884.640 ops/s
# Warmup Iteration  21: 158782.582 ops/s
# Warmup Iteration  22: 159276.869 ops/s
# Warmup Iteration  23: 158835.337 ops/s
# Warmup Iteration  24: 159015.232 ops/s
# Warmup Iteration  25: 158991.364 ops/s
# Warmup Iteration  26: 159029.376 ops/s
# Warmup Iteration  27: 159018.355 ops/s
# Warmup Iteration  28: 158859.724 ops/s
# Warmup Iteration  29: 158595.327 ops/s
# Warmup Iteration  30: 158997.573 ops/s
Iteration   1: 159353.597 ops/s
Iteration   2: 159053.095 ops/s
Iteration   3: 159279.220 ops/s
Iteration   4: 158738.163 ops/s
Iteration   5: 158813.015 ops/s
Iteration   6: 159177.629 ops/s
Iteration   7: 158697.344 ops/s
Iteration   8: 158574.340 ops/s
Iteration   9: 158709.608 ops/s
Iteration  10: 158339.095 ops/s
Iteration  11: 159308.327 ops/s
Iteration  12: 159335.757 ops/s
Iteration  13: 159109.605 ops/s
Iteration  14: 159378.450 ops/s
Iteration  15: 159158.671 ops/s
Iteration  16: 158923.836 ops/s
Iteration  17: 159142.283 ops/s
Iteration  18: 158523.064 ops/s
Iteration  19: 158466.434 ops/s
Iteration  20: 158388.351 ops/s
Iteration  21: 158505.265 ops/s
Iteration  22: 158898.811 ops/s
Iteration  23: 159200.142 ops/s
Iteration  24: 158700.307 ops/s
Iteration  25: 158787.872 ops/s
Iteration  26: 158941.483 ops/s
Iteration  27: 159238.208 ops/s
Iteration  28: 159164.002 ops/s
Iteration  29: 159086.757 ops/s
Iteration  30: 159335.998 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_742._Benchmark.benchmark_Cluster_742":
  158944.291 ±(99.9%) 214.155 ops/s [Average]
  (min, avg, max) = (158339.095, 158944.291, 159378.450), stdev = 320.538
  CI (99.9%): [158730.136, 159158.446] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_742._Benchmark.benchmark_Cluster_742  thrpt   30  158944.291 ± 214.155  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_743._Benchmark.benchmark_Cluster_743$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_743._Benchmark.benchmark_Cluster_743

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79478.662 ops/s
# Warmup Iteration   2: 101325.597 ops/s
# Warmup Iteration   3: 154335.755 ops/s
# Warmup Iteration   4: 154955.045 ops/s
# Warmup Iteration   5: 154778.230 ops/s
# Warmup Iteration   6: 154107.452 ops/s
# Warmup Iteration   7: 155047.270 ops/s
# Warmup Iteration   8: 154877.475 ops/s
# Warmup Iteration   9: 121311.089 ops/s
# Warmup Iteration  10: 154761.626 ops/s
# Warmup Iteration  11: 155001.829 ops/s
# Warmup Iteration  12: 155065.969 ops/s
# Warmup Iteration  13: 155211.636 ops/s
# Warmup Iteration  14: 154819.790 ops/s
# Warmup Iteration  15: 154857.937 ops/s
# Warmup Iteration  16: 154928.344 ops/s
# Warmup Iteration  17: 160403.752 ops/s
# Warmup Iteration  18: 159898.105 ops/s
# Warmup Iteration  19: 159675.417 ops/s
# Warmup Iteration  20: 159887.941 ops/s
# Warmup Iteration  21: 159888.484 ops/s
# Warmup Iteration  22: 159628.938 ops/s
# Warmup Iteration  23: 160444.871 ops/s
# Warmup Iteration  24: 160242.058 ops/s
# Warmup Iteration  25: 160441.444 ops/s
# Warmup Iteration  26: 160564.356 ops/s
# Warmup Iteration  27: 160528.885 ops/s
# Warmup Iteration  28: 160393.399 ops/s
# Warmup Iteration  29: 160223.686 ops/s
# Warmup Iteration  30: 159668.057 ops/s
Iteration   1: 159281.112 ops/s
Iteration   2: 159753.515 ops/s
Iteration   3: 159474.622 ops/s
Iteration   4: 159333.207 ops/s
Iteration   5: 159840.181 ops/s
Iteration   6: 159831.038 ops/s
Iteration   7: 160007.007 ops/s
Iteration   8: 160452.811 ops/s
Iteration   9: 160258.775 ops/s
Iteration  10: 160563.662 ops/s
Iteration  11: 160708.103 ops/s
Iteration  12: 160440.815 ops/s
Iteration  13: 160733.586 ops/s
Iteration  14: 160470.845 ops/s
Iteration  15: 160405.498 ops/s
Iteration  16: 160431.929 ops/s
Iteration  17: 160386.637 ops/s
Iteration  18: 160097.468 ops/s
Iteration  19: 160584.926 ops/s
Iteration  20: 160275.199 ops/s
Iteration  21: 160256.249 ops/s
Iteration  22: 160526.540 ops/s
Iteration  23: 160519.906 ops/s
Iteration  24: 160512.348 ops/s
Iteration  25: 160788.386 ops/s
Iteration  26: 160257.969 ops/s
Iteration  27: 160584.998 ops/s
Iteration  28: 160691.654 ops/s
Iteration  29: 160489.927 ops/s
Iteration  30: 160307.420 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_743._Benchmark.benchmark_Cluster_743":
  160275.544 ±(99.9%) 270.869 ops/s [Average]
  (min, avg, max) = (159281.112, 160275.544, 160788.386), stdev = 405.424
  CI (99.9%): [160004.676, 160546.413] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_743._Benchmark.benchmark_Cluster_743  thrpt   30  160275.544 ± 270.869  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_744._Benchmark.benchmark_Cluster_744$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_744._Benchmark.benchmark_Cluster_744

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 89853.397 ops/s
# Warmup Iteration   2: 115560.466 ops/s
# Warmup Iteration   3: 174441.025 ops/s
# Warmup Iteration   4: 173976.273 ops/s
# Warmup Iteration   5: 175115.317 ops/s
# Warmup Iteration   6: 175258.288 ops/s
# Warmup Iteration   7: 175222.516 ops/s
# Warmup Iteration   8: 172054.070 ops/s
# Warmup Iteration   9: 138027.038 ops/s
# Warmup Iteration  10: 175014.665 ops/s
# Warmup Iteration  11: 174743.079 ops/s
# Warmup Iteration  12: 174478.716 ops/s
# Warmup Iteration  13: 175131.557 ops/s
# Warmup Iteration  14: 175140.615 ops/s
# Warmup Iteration  15: 173708.268 ops/s
# Warmup Iteration  16: 175214.423 ops/s
# Warmup Iteration  17: 182519.444 ops/s
# Warmup Iteration  18: 182012.047 ops/s
# Warmup Iteration  19: 182855.210 ops/s
# Warmup Iteration  20: 182311.159 ops/s
# Warmup Iteration  21: 182784.963 ops/s
# Warmup Iteration  22: 182941.193 ops/s
# Warmup Iteration  23: 181431.549 ops/s
# Warmup Iteration  24: 181902.966 ops/s
# Warmup Iteration  25: 181528.933 ops/s
# Warmup Iteration  26: 182581.203 ops/s
# Warmup Iteration  27: 181824.799 ops/s
# Warmup Iteration  28: 182020.422 ops/s
# Warmup Iteration  29: 182607.191 ops/s
# Warmup Iteration  30: 181876.926 ops/s
Iteration   1: 181813.322 ops/s
Iteration   2: 181544.421 ops/s
Iteration   3: 182455.054 ops/s
Iteration   4: 182283.706 ops/s
Iteration   5: 181934.697 ops/s
Iteration   6: 182012.676 ops/s
Iteration   7: 181878.605 ops/s
Iteration   8: 181545.524 ops/s
Iteration   9: 183193.258 ops/s
Iteration  10: 182237.650 ops/s
Iteration  11: 182227.946 ops/s
Iteration  12: 182069.225 ops/s
Iteration  13: 181537.983 ops/s
Iteration  14: 181666.649 ops/s
Iteration  15: 181318.644 ops/s
Iteration  16: 182411.629 ops/s
Iteration  17: 182882.851 ops/s
Iteration  18: 182040.880 ops/s
Iteration  19: 182123.530 ops/s
Iteration  20: 181931.237 ops/s
Iteration  21: 181231.381 ops/s
Iteration  22: 181734.841 ops/s
Iteration  23: 182265.744 ops/s
Iteration  24: 181925.500 ops/s
Iteration  25: 181666.379 ops/s
Iteration  26: 182018.064 ops/s
Iteration  27: 182604.742 ops/s
Iteration  28: 182407.756 ops/s
Iteration  29: 182395.465 ops/s
Iteration  30: 181981.248 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_744._Benchmark.benchmark_Cluster_744":
  182044.687 ±(99.9%) 291.747 ops/s [Average]
  (min, avg, max) = (181231.381, 182044.687, 183193.258), stdev = 436.673
  CI (99.9%): [181752.940, 182336.434] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_744._Benchmark.benchmark_Cluster_744  thrpt   30  182044.687 ± 291.747  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_745._Benchmark.benchmark_Cluster_745$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_745._Benchmark.benchmark_Cluster_745

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93769.139 ops/s
# Warmup Iteration   2: 116331.703 ops/s
# Warmup Iteration   3: 170665.563 ops/s
# Warmup Iteration   4: 169868.622 ops/s
# Warmup Iteration   5: 169691.508 ops/s
# Warmup Iteration   6: 169741.477 ops/s
# Warmup Iteration   7: 169853.096 ops/s
# Warmup Iteration   8: 164616.840 ops/s
# Warmup Iteration   9: 138724.742 ops/s
# Warmup Iteration  10: 169704.497 ops/s
# Warmup Iteration  11: 170274.258 ops/s
# Warmup Iteration  12: 169545.078 ops/s
# Warmup Iteration  13: 169792.624 ops/s
# Warmup Iteration  14: 170429.797 ops/s
# Warmup Iteration  15: 170501.840 ops/s
# Warmup Iteration  16: 170189.410 ops/s
# Warmup Iteration  17: 177915.138 ops/s
# Warmup Iteration  18: 177826.151 ops/s
# Warmup Iteration  19: 177777.255 ops/s
# Warmup Iteration  20: 177525.243 ops/s
# Warmup Iteration  21: 177123.484 ops/s
# Warmup Iteration  22: 177678.747 ops/s
# Warmup Iteration  23: 178649.769 ops/s
# Warmup Iteration  24: 177779.113 ops/s
# Warmup Iteration  25: 177395.871 ops/s
# Warmup Iteration  26: 178415.967 ops/s
# Warmup Iteration  27: 177477.266 ops/s
# Warmup Iteration  28: 177652.929 ops/s
# Warmup Iteration  29: 178407.051 ops/s
# Warmup Iteration  30: 177801.811 ops/s
Iteration   1: 177248.782 ops/s
Iteration   2: 177415.677 ops/s
Iteration   3: 178011.075 ops/s
Iteration   4: 178211.914 ops/s
Iteration   5: 177651.357 ops/s
Iteration   6: 178323.967 ops/s
Iteration   7: 178859.980 ops/s
Iteration   8: 178194.877 ops/s
Iteration   9: 178374.943 ops/s
Iteration  10: 178230.112 ops/s
Iteration  11: 178200.341 ops/s
Iteration  12: 177885.210 ops/s
Iteration  13: 178041.968 ops/s
Iteration  14: 178169.419 ops/s
Iteration  15: 178224.609 ops/s
Iteration  16: 177886.897 ops/s
Iteration  17: 178186.009 ops/s
Iteration  18: 178026.937 ops/s
Iteration  19: 178050.276 ops/s
Iteration  20: 178048.798 ops/s
Iteration  21: 177813.104 ops/s
Iteration  22: 178500.984 ops/s
Iteration  23: 178148.333 ops/s
Iteration  24: 178314.130 ops/s
Iteration  25: 178231.242 ops/s
Iteration  26: 177711.662 ops/s
Iteration  27: 178099.197 ops/s
Iteration  28: 177842.304 ops/s
Iteration  29: 178032.056 ops/s
Iteration  30: 178386.209 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_745._Benchmark.benchmark_Cluster_745":
  178077.412 ±(99.9%) 210.690 ops/s [Average]
  (min, avg, max) = (177248.782, 178077.412, 178859.980), stdev = 315.351
  CI (99.9%): [177866.722, 178288.103] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_745._Benchmark.benchmark_Cluster_745  thrpt   30  178077.412 ± 210.690  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_746._Benchmark.benchmark_Cluster_746$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_746._Benchmark.benchmark_Cluster_746

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67460.673 ops/s
# Warmup Iteration   2: 120270.100 ops/s
# Warmup Iteration   3: 150227.514 ops/s
# Warmup Iteration   4: 150949.396 ops/s
# Warmup Iteration   5: 151330.010 ops/s
# Warmup Iteration   6: 120332.472 ops/s
# Warmup Iteration   7: 151223.066 ops/s
# Warmup Iteration   8: 151343.029 ops/s
# Warmup Iteration   9: 151140.233 ops/s
# Warmup Iteration  10: 151481.516 ops/s
# Warmup Iteration  11: 150634.154 ops/s
# Warmup Iteration  12: 151576.491 ops/s
# Warmup Iteration  13: 151690.997 ops/s
# Warmup Iteration  14: 151628.535 ops/s
# Warmup Iteration  15: 151185.546 ops/s
# Warmup Iteration  16: 151360.535 ops/s
# Warmup Iteration  17: 150824.687 ops/s
# Warmup Iteration  18: 151589.103 ops/s
# Warmup Iteration  19: 151279.839 ops/s
# Warmup Iteration  20: 151108.713 ops/s
# Warmup Iteration  21: 151475.477 ops/s
# Warmup Iteration  22: 151563.564 ops/s
# Warmup Iteration  23: 151214.953 ops/s
# Warmup Iteration  24: 151258.626 ops/s
# Warmup Iteration  25: 150642.886 ops/s
# Warmup Iteration  26: 150630.645 ops/s
# Warmup Iteration  27: 150971.847 ops/s
# Warmup Iteration  28: 151524.282 ops/s
# Warmup Iteration  29: 151549.090 ops/s
# Warmup Iteration  30: 151347.538 ops/s
Iteration   1: 151440.053 ops/s
Iteration   2: 150887.090 ops/s
Iteration   3: 151031.711 ops/s
Iteration   4: 151273.547 ops/s
Iteration   5: 151444.321 ops/s
Iteration   6: 151933.615 ops/s
Iteration   7: 151396.264 ops/s
Iteration   8: 151866.481 ops/s
Iteration   9: 151695.401 ops/s
Iteration  10: 151480.274 ops/s
Iteration  11: 151874.457 ops/s
Iteration  12: 151463.375 ops/s
Iteration  13: 151781.445 ops/s
Iteration  14: 151466.502 ops/s
Iteration  15: 151452.574 ops/s
Iteration  16: 151150.047 ops/s
Iteration  17: 151636.078 ops/s
Iteration  18: 150850.608 ops/s
Iteration  19: 151107.839 ops/s
Iteration  20: 151792.312 ops/s
Iteration  21: 151321.260 ops/s
Iteration  22: 151543.259 ops/s
Iteration  23: 151473.417 ops/s
Iteration  24: 151768.669 ops/s
Iteration  25: 151653.439 ops/s
Iteration  26: 151665.763 ops/s
Iteration  27: 151835.802 ops/s
Iteration  28: 151578.848 ops/s
Iteration  29: 151716.959 ops/s
Iteration  30: 151426.030 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_746._Benchmark.benchmark_Cluster_746":
  151500.248 ±(99.9%) 191.395 ops/s [Average]
  (min, avg, max) = (150850.608, 151500.248, 151933.615), stdev = 286.472
  CI (99.9%): [151308.853, 151691.643] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_746._Benchmark.benchmark_Cluster_746  thrpt   30  151500.248 ± 191.395  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_747._Benchmark.benchmark_Cluster_747$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_747._Benchmark.benchmark_Cluster_747

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 89776.485 ops/s
# Warmup Iteration   2: 202097.064 ops/s
# Warmup Iteration   3: 244192.542 ops/s
# Warmup Iteration   4: 245302.894 ops/s
# Warmup Iteration   5: 194835.965 ops/s
# Warmup Iteration   6: 245972.326 ops/s
# Warmup Iteration   7: 245691.301 ops/s
# Warmup Iteration   8: 245600.564 ops/s
# Warmup Iteration   9: 245863.672 ops/s
# Warmup Iteration  10: 245906.710 ops/s
# Warmup Iteration  11: 245582.595 ops/s
# Warmup Iteration  12: 245613.258 ops/s
# Warmup Iteration  13: 245330.739 ops/s
# Warmup Iteration  14: 246301.542 ops/s
# Warmup Iteration  15: 245846.013 ops/s
# Warmup Iteration  16: 245393.382 ops/s
# Warmup Iteration  17: 246111.063 ops/s
# Warmup Iteration  18: 246544.870 ops/s
# Warmup Iteration  19: 245930.723 ops/s
# Warmup Iteration  20: 246113.077 ops/s
# Warmup Iteration  21: 246276.991 ops/s
# Warmup Iteration  22: 245987.725 ops/s
# Warmup Iteration  23: 246435.158 ops/s
# Warmup Iteration  24: 246131.842 ops/s
# Warmup Iteration  25: 245940.366 ops/s
# Warmup Iteration  26: 245908.639 ops/s
# Warmup Iteration  27: 246108.353 ops/s
# Warmup Iteration  28: 246006.621 ops/s
# Warmup Iteration  29: 245226.152 ops/s
# Warmup Iteration  30: 246326.451 ops/s
Iteration   1: 246317.052 ops/s
Iteration   2: 245445.139 ops/s
Iteration   3: 245961.969 ops/s
Iteration   4: 246564.176 ops/s
Iteration   5: 246614.585 ops/s
Iteration   6: 246214.374 ops/s
Iteration   7: 245545.973 ops/s
Iteration   8: 246069.398 ops/s
Iteration   9: 246385.471 ops/s
Iteration  10: 246443.132 ops/s
Iteration  11: 246052.910 ops/s
Iteration  12: 246357.049 ops/s
Iteration  13: 246734.862 ops/s
Iteration  14: 246069.724 ops/s
Iteration  15: 246261.759 ops/s
Iteration  16: 246372.075 ops/s
Iteration  17: 246319.385 ops/s
Iteration  18: 245906.476 ops/s
Iteration  19: 246008.344 ops/s
Iteration  20: 246350.905 ops/s
Iteration  21: 245299.535 ops/s
Iteration  22: 245322.592 ops/s
Iteration  23: 245901.152 ops/s
Iteration  24: 246264.787 ops/s
Iteration  25: 246113.354 ops/s
Iteration  26: 246232.713 ops/s
Iteration  27: 246607.268 ops/s
Iteration  28: 246497.155 ops/s
Iteration  29: 246031.341 ops/s
Iteration  30: 245153.534 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_747._Benchmark.benchmark_Cluster_747":
  246113.940 ±(99.9%) 273.625 ops/s [Average]
  (min, avg, max) = (245153.534, 246113.940, 246734.862), stdev = 409.549
  CI (99.9%): [245840.315, 246387.564] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_747._Benchmark.benchmark_Cluster_747  thrpt   30  246113.940 ± 273.625  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_748._Benchmark.benchmark_Cluster_748$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_748._Benchmark.benchmark_Cluster_748

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65344.995 ops/s
# Warmup Iteration   2: 118652.187 ops/s
# Warmup Iteration   3: 148979.150 ops/s
# Warmup Iteration   4: 150462.008 ops/s
# Warmup Iteration   5: 149843.711 ops/s
# Warmup Iteration   6: 119238.462 ops/s
# Warmup Iteration   7: 150405.982 ops/s
# Warmup Iteration   8: 150345.014 ops/s
# Warmup Iteration   9: 150523.985 ops/s
# Warmup Iteration  10: 150181.479 ops/s
# Warmup Iteration  11: 150683.550 ops/s
# Warmup Iteration  12: 150065.529 ops/s
# Warmup Iteration  13: 150164.508 ops/s
# Warmup Iteration  14: 150536.252 ops/s
# Warmup Iteration  15: 150466.924 ops/s
# Warmup Iteration  16: 150384.184 ops/s
# Warmup Iteration  17: 149558.422 ops/s
# Warmup Iteration  18: 149376.254 ops/s
# Warmup Iteration  19: 149393.573 ops/s
# Warmup Iteration  20: 149515.681 ops/s
# Warmup Iteration  21: 149531.866 ops/s
# Warmup Iteration  22: 149467.130 ops/s
# Warmup Iteration  23: 149630.900 ops/s
# Warmup Iteration  24: 149625.442 ops/s
# Warmup Iteration  25: 149410.298 ops/s
# Warmup Iteration  26: 149509.492 ops/s
# Warmup Iteration  27: 149206.604 ops/s
# Warmup Iteration  28: 149386.891 ops/s
# Warmup Iteration  29: 149610.782 ops/s
# Warmup Iteration  30: 149509.196 ops/s
Iteration   1: 149551.594 ops/s
Iteration   2: 149679.507 ops/s
Iteration   3: 149761.869 ops/s
Iteration   4: 149542.264 ops/s
Iteration   5: 149202.146 ops/s
Iteration   6: 149229.600 ops/s
Iteration   7: 149579.691 ops/s
Iteration   8: 149858.525 ops/s
Iteration   9: 148632.733 ops/s
Iteration  10: 149957.339 ops/s
Iteration  11: 149609.056 ops/s
Iteration  12: 149286.798 ops/s
Iteration  13: 149538.507 ops/s
Iteration  14: 149794.666 ops/s
Iteration  15: 149830.162 ops/s
Iteration  16: 149551.438 ops/s
Iteration  17: 149940.025 ops/s
Iteration  18: 149638.497 ops/s
Iteration  19: 149865.643 ops/s
Iteration  20: 149605.510 ops/s
Iteration  21: 149510.027 ops/s
Iteration  22: 149511.985 ops/s
Iteration  23: 149395.738 ops/s
Iteration  24: 149694.515 ops/s
Iteration  25: 149433.194 ops/s
Iteration  26: 149555.444 ops/s
Iteration  27: 149686.525 ops/s
Iteration  28: 149981.777 ops/s
Iteration  29: 149768.029 ops/s
Iteration  30: 149935.489 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_748._Benchmark.benchmark_Cluster_748":
  149604.276 ±(99.9%) 185.555 ops/s [Average]
  (min, avg, max) = (148632.733, 149604.276, 149981.777), stdev = 277.731
  CI (99.9%): [149418.721, 149789.832] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_748._Benchmark.benchmark_Cluster_748  thrpt   30  149604.276 ± 185.555  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_749._Benchmark.benchmark_Cluster_749$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_749._Benchmark.benchmark_Cluster_749

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63006.937 ops/s
# Warmup Iteration   2: 120699.974 ops/s
# Warmup Iteration   3: 156708.410 ops/s
# Warmup Iteration   4: 158007.813 ops/s
# Warmup Iteration   5: 157604.266 ops/s
# Warmup Iteration   6: 125136.531 ops/s
# Warmup Iteration   7: 158293.856 ops/s
# Warmup Iteration   8: 158140.580 ops/s
# Warmup Iteration   9: 158011.290 ops/s
# Warmup Iteration  10: 157846.238 ops/s
# Warmup Iteration  11: 157921.603 ops/s
# Warmup Iteration  12: 158223.252 ops/s
# Warmup Iteration  13: 158071.490 ops/s
# Warmup Iteration  14: 158180.024 ops/s
# Warmup Iteration  15: 158165.964 ops/s
# Warmup Iteration  16: 158052.605 ops/s
# Warmup Iteration  17: 157588.711 ops/s
# Warmup Iteration  18: 157985.711 ops/s
# Warmup Iteration  19: 158079.154 ops/s
# Warmup Iteration  20: 157981.595 ops/s
# Warmup Iteration  21: 158248.915 ops/s
# Warmup Iteration  22: 158088.969 ops/s
# Warmup Iteration  23: 158110.886 ops/s
# Warmup Iteration  24: 158002.491 ops/s
# Warmup Iteration  25: 158130.836 ops/s
# Warmup Iteration  26: 158213.757 ops/s
# Warmup Iteration  27: 157990.018 ops/s
# Warmup Iteration  28: 158032.679 ops/s
# Warmup Iteration  29: 158219.625 ops/s
# Warmup Iteration  30: 158083.327 ops/s
Iteration   1: 158190.512 ops/s
Iteration   2: 157974.465 ops/s
Iteration   3: 157959.704 ops/s
Iteration   4: 158006.536 ops/s
Iteration   5: 158014.515 ops/s
Iteration   6: 157956.943 ops/s
Iteration   7: 157736.227 ops/s
Iteration   8: 158350.485 ops/s
Iteration   9: 158099.491 ops/s
Iteration  10: 158060.575 ops/s
Iteration  11: 158092.158 ops/s
Iteration  12: 158052.820 ops/s
Iteration  13: 158161.057 ops/s
Iteration  14: 157950.484 ops/s
Iteration  15: 158234.937 ops/s
Iteration  16: 158019.768 ops/s
Iteration  17: 158336.681 ops/s
Iteration  18: 157964.018 ops/s
Iteration  19: 158050.140 ops/s
Iteration  20: 158386.663 ops/s
Iteration  21: 158135.579 ops/s
Iteration  22: 157451.239 ops/s
Iteration  23: 158046.456 ops/s
Iteration  24: 158019.789 ops/s
Iteration  25: 157906.929 ops/s
Iteration  26: 158074.391 ops/s
Iteration  27: 158057.328 ops/s
Iteration  28: 157585.233 ops/s
Iteration  29: 157931.210 ops/s
Iteration  30: 157874.819 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_749._Benchmark.benchmark_Cluster_749":
  158022.705 ±(99.9%) 131.598 ops/s [Average]
  (min, avg, max) = (157451.239, 158022.705, 158386.663), stdev = 196.970
  CI (99.9%): [157891.107, 158154.303] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_749._Benchmark.benchmark_Cluster_749  thrpt   30  158022.705 ± 131.598  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_75._Benchmark.benchmark_Cluster_75$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_75._Benchmark.benchmark_Cluster_75

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75035.452 ops/s
# Warmup Iteration   2: 109341.525 ops/s
# Warmup Iteration   3: 158858.154 ops/s
# Warmup Iteration   4: 157757.436 ops/s
# Warmup Iteration   5: 158346.969 ops/s
# Warmup Iteration   6: 158485.819 ops/s
# Warmup Iteration   7: 158369.942 ops/s
# Warmup Iteration   8: 123515.117 ops/s
# Warmup Iteration   9: 158034.305 ops/s
# Warmup Iteration  10: 158546.839 ops/s
# Warmup Iteration  11: 158336.653 ops/s
# Warmup Iteration  12: 158466.922 ops/s
# Warmup Iteration  13: 158432.891 ops/s
# Warmup Iteration  14: 158449.004 ops/s
# Warmup Iteration  15: 158421.630 ops/s
# Warmup Iteration  16: 158393.761 ops/s
# Warmup Iteration  17: 160078.931 ops/s
# Warmup Iteration  18: 160231.699 ops/s
# Warmup Iteration  19: 160046.267 ops/s
# Warmup Iteration  20: 160152.044 ops/s
# Warmup Iteration  21: 160254.065 ops/s
# Warmup Iteration  22: 160238.238 ops/s
# Warmup Iteration  23: 160279.990 ops/s
# Warmup Iteration  24: 160114.248 ops/s
# Warmup Iteration  25: 160237.710 ops/s
# Warmup Iteration  26: 160205.200 ops/s
# Warmup Iteration  27: 160049.016 ops/s
# Warmup Iteration  28: 159979.005 ops/s
# Warmup Iteration  29: 159784.396 ops/s
# Warmup Iteration  30: 160145.133 ops/s
Iteration   1: 160275.092 ops/s
Iteration   2: 159934.012 ops/s
Iteration   3: 159916.611 ops/s
Iteration   4: 159737.756 ops/s
Iteration   5: 160354.050 ops/s
Iteration   6: 160331.596 ops/s
Iteration   7: 159949.378 ops/s
Iteration   8: 160049.864 ops/s
Iteration   9: 159517.941 ops/s
Iteration  10: 160145.886 ops/s
Iteration  11: 159899.538 ops/s
Iteration  12: 160212.756 ops/s
Iteration  13: 159866.076 ops/s
Iteration  14: 160522.107 ops/s
Iteration  15: 160282.644 ops/s
Iteration  16: 160025.191 ops/s
Iteration  17: 160158.600 ops/s
Iteration  18: 160068.327 ops/s
Iteration  19: 160002.295 ops/s
Iteration  20: 159908.926 ops/s
Iteration  21: 159693.700 ops/s
Iteration  22: 159893.746 ops/s
Iteration  23: 160008.760 ops/s
Iteration  24: 160069.695 ops/s
Iteration  25: 160021.756 ops/s
Iteration  26: 160217.775 ops/s
Iteration  27: 160256.874 ops/s
Iteration  28: 160137.587 ops/s
Iteration  29: 160179.900 ops/s
Iteration  30: 159994.344 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_75._Benchmark.benchmark_Cluster_75":
  160054.426 ±(99.9%) 141.494 ops/s [Average]
  (min, avg, max) = (159517.941, 160054.426, 160522.107), stdev = 211.782
  CI (99.9%): [159912.932, 160195.920] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_75._Benchmark.benchmark_Cluster_75  thrpt   30  160054.426 ± 141.494  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_750._Benchmark.benchmark_Cluster_750$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_750._Benchmark.benchmark_Cluster_750

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74755.877 ops/s
# Warmup Iteration   2: 98796.597 ops/s
# Warmup Iteration   3: 150469.297 ops/s
# Warmup Iteration   4: 149247.831 ops/s
# Warmup Iteration   5: 150349.920 ops/s
# Warmup Iteration   6: 150015.450 ops/s
# Warmup Iteration   7: 150142.177 ops/s
# Warmup Iteration   8: 150226.240 ops/s
# Warmup Iteration   9: 117272.393 ops/s
# Warmup Iteration  10: 150219.334 ops/s
# Warmup Iteration  11: 150337.437 ops/s
# Warmup Iteration  12: 150021.670 ops/s
# Warmup Iteration  13: 150206.372 ops/s
# Warmup Iteration  14: 150004.981 ops/s
# Warmup Iteration  15: 149892.861 ops/s
# Warmup Iteration  16: 150086.583 ops/s
# Warmup Iteration  17: 154202.483 ops/s
# Warmup Iteration  18: 154244.346 ops/s
# Warmup Iteration  19: 154196.805 ops/s
# Warmup Iteration  20: 154443.859 ops/s
# Warmup Iteration  21: 154273.955 ops/s
# Warmup Iteration  22: 154372.685 ops/s
# Warmup Iteration  23: 154111.823 ops/s
# Warmup Iteration  24: 153791.468 ops/s
# Warmup Iteration  25: 154307.925 ops/s
# Warmup Iteration  26: 154568.175 ops/s
# Warmup Iteration  27: 154695.759 ops/s
# Warmup Iteration  28: 154380.143 ops/s
# Warmup Iteration  29: 154466.484 ops/s
# Warmup Iteration  30: 154548.541 ops/s
Iteration   1: 154180.721 ops/s
Iteration   2: 154655.605 ops/s
Iteration   3: 154441.732 ops/s
Iteration   4: 154248.063 ops/s
Iteration   5: 154132.220 ops/s
Iteration   6: 154248.804 ops/s
Iteration   7: 154521.715 ops/s
Iteration   8: 154571.956 ops/s
Iteration   9: 154257.539 ops/s
Iteration  10: 154507.276 ops/s
Iteration  11: 154410.331 ops/s
Iteration  12: 153989.308 ops/s
Iteration  13: 154078.383 ops/s
Iteration  14: 153867.274 ops/s
Iteration  15: 153868.947 ops/s
Iteration  16: 154450.959 ops/s
Iteration  17: 153687.622 ops/s
Iteration  18: 154571.752 ops/s
Iteration  19: 154525.784 ops/s
Iteration  20: 154133.253 ops/s
Iteration  21: 154790.232 ops/s
Iteration  22: 154259.253 ops/s
Iteration  23: 154462.639 ops/s
Iteration  24: 154728.041 ops/s
Iteration  25: 154170.444 ops/s
Iteration  26: 154578.294 ops/s
Iteration  27: 154453.141 ops/s
Iteration  28: 154106.400 ops/s
Iteration  29: 154739.251 ops/s
Iteration  30: 154787.180 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_750._Benchmark.benchmark_Cluster_750":
  154347.471 ±(99.9%) 192.719 ops/s [Average]
  (min, avg, max) = (153687.622, 154347.471, 154790.232), stdev = 288.452
  CI (99.9%): [154154.752, 154540.189] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_750._Benchmark.benchmark_Cluster_750  thrpt   30  154347.471 ± 192.719  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_751._Benchmark.benchmark_Cluster_751$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_751._Benchmark.benchmark_Cluster_751

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69658.314 ops/s
# Warmup Iteration   2: 136206.738 ops/s
# Warmup Iteration   3: 185012.768 ops/s
# Warmup Iteration   4: 186726.014 ops/s
# Warmup Iteration   5: 186161.417 ops/s
# Warmup Iteration   6: 153679.252 ops/s
# Warmup Iteration   7: 181718.468 ops/s
# Warmup Iteration   8: 186649.514 ops/s
# Warmup Iteration   9: 186537.708 ops/s
# Warmup Iteration  10: 186889.918 ops/s
# Warmup Iteration  11: 186994.473 ops/s
# Warmup Iteration  12: 187180.166 ops/s
# Warmup Iteration  13: 187206.873 ops/s
# Warmup Iteration  14: 186056.858 ops/s
# Warmup Iteration  15: 186549.879 ops/s
# Warmup Iteration  16: 186293.701 ops/s
# Warmup Iteration  17: 186216.124 ops/s
# Warmup Iteration  18: 186415.603 ops/s
# Warmup Iteration  19: 186774.238 ops/s
# Warmup Iteration  20: 186964.947 ops/s
# Warmup Iteration  21: 186443.423 ops/s
# Warmup Iteration  22: 186475.919 ops/s
# Warmup Iteration  23: 186572.754 ops/s
# Warmup Iteration  24: 186206.061 ops/s
# Warmup Iteration  25: 185759.680 ops/s
# Warmup Iteration  26: 186389.365 ops/s
# Warmup Iteration  27: 187446.269 ops/s
# Warmup Iteration  28: 186496.343 ops/s
# Warmup Iteration  29: 186148.213 ops/s
# Warmup Iteration  30: 186731.687 ops/s
Iteration   1: 187535.548 ops/s
Iteration   2: 186304.769 ops/s
Iteration   3: 187567.191 ops/s
Iteration   4: 186411.817 ops/s
Iteration   5: 187757.534 ops/s
Iteration   6: 186771.212 ops/s
Iteration   7: 187366.331 ops/s
Iteration   8: 186740.089 ops/s
Iteration   9: 187536.684 ops/s
Iteration  10: 186908.427 ops/s
Iteration  11: 185874.423 ops/s
Iteration  12: 187883.483 ops/s
Iteration  13: 186574.549 ops/s
Iteration  14: 186766.600 ops/s
Iteration  15: 186518.790 ops/s
Iteration  16: 186625.386 ops/s
Iteration  17: 187352.905 ops/s
Iteration  18: 187203.277 ops/s
Iteration  19: 186704.199 ops/s
Iteration  20: 187080.822 ops/s
Iteration  21: 186141.417 ops/s
Iteration  22: 186143.060 ops/s
Iteration  23: 186465.438 ops/s
Iteration  24: 186545.186 ops/s
Iteration  25: 187571.883 ops/s
Iteration  26: 187095.982 ops/s
Iteration  27: 187275.290 ops/s
Iteration  28: 186447.839 ops/s
Iteration  29: 186683.149 ops/s
Iteration  30: 186600.582 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_751._Benchmark.benchmark_Cluster_751":
  186881.795 ±(99.9%) 350.883 ops/s [Average]
  (min, avg, max) = (185874.423, 186881.795, 187883.483), stdev = 525.185
  CI (99.9%): [186530.913, 187232.678] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_751._Benchmark.benchmark_Cluster_751  thrpt   30  186881.795 ± 350.883  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_752._Benchmark.benchmark_Cluster_752$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_752._Benchmark.benchmark_Cluster_752

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 111382.407 ops/s
# Warmup Iteration   2: 233412.356 ops/s
# Warmup Iteration   3: 284563.332 ops/s
# Warmup Iteration   4: 286830.068 ops/s
# Warmup Iteration   5: 234648.314 ops/s
# Warmup Iteration   6: 280227.309 ops/s
# Warmup Iteration   7: 286691.991 ops/s
# Warmup Iteration   8: 286947.349 ops/s
# Warmup Iteration   9: 286825.803 ops/s
# Warmup Iteration  10: 285554.746 ops/s
# Warmup Iteration  11: 285077.529 ops/s
# Warmup Iteration  12: 286220.752 ops/s
# Warmup Iteration  13: 286028.343 ops/s
# Warmup Iteration  14: 286641.517 ops/s
# Warmup Iteration  15: 286976.212 ops/s
# Warmup Iteration  16: 286910.489 ops/s
# Warmup Iteration  17: 284677.837 ops/s
# Warmup Iteration  18: 286529.900 ops/s
# Warmup Iteration  19: 286380.453 ops/s
# Warmup Iteration  20: 286181.907 ops/s
# Warmup Iteration  21: 285742.678 ops/s
# Warmup Iteration  22: 286572.661 ops/s
# Warmup Iteration  23: 285138.704 ops/s
# Warmup Iteration  24: 285919.352 ops/s
# Warmup Iteration  25: 286470.421 ops/s
# Warmup Iteration  26: 285883.290 ops/s
# Warmup Iteration  27: 286676.371 ops/s
# Warmup Iteration  28: 285822.876 ops/s
# Warmup Iteration  29: 285267.296 ops/s
# Warmup Iteration  30: 286952.009 ops/s
Iteration   1: 285590.779 ops/s
Iteration   2: 286216.384 ops/s
Iteration   3: 285914.309 ops/s
Iteration   4: 285470.182 ops/s
Iteration   5: 285977.643 ops/s
Iteration   6: 286769.956 ops/s
Iteration   7: 285779.489 ops/s
Iteration   8: 286747.005 ops/s
Iteration   9: 286027.216 ops/s
Iteration  10: 286041.444 ops/s
Iteration  11: 287041.691 ops/s
Iteration  12: 286124.520 ops/s
Iteration  13: 286686.057 ops/s
Iteration  14: 285717.016 ops/s
Iteration  15: 286004.582 ops/s
Iteration  16: 285956.103 ops/s
Iteration  17: 286756.447 ops/s
Iteration  18: 286595.721 ops/s
Iteration  19: 285377.213 ops/s
Iteration  20: 286208.172 ops/s
Iteration  21: 285963.307 ops/s
Iteration  22: 284889.368 ops/s
Iteration  23: 285807.868 ops/s
Iteration  24: 286792.314 ops/s
Iteration  25: 286169.509 ops/s
Iteration  26: 285236.122 ops/s
Iteration  27: 285541.381 ops/s
Iteration  28: 286461.150 ops/s
Iteration  29: 286279.756 ops/s
Iteration  30: 287205.444 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_752._Benchmark.benchmark_Cluster_752":
  286111.605 ±(99.9%) 368.222 ops/s [Average]
  (min, avg, max) = (284889.368, 286111.605, 287205.444), stdev = 551.138
  CI (99.9%): [285743.383, 286479.827] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_752._Benchmark.benchmark_Cluster_752  thrpt   30  286111.605 ± 368.222  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_753._Benchmark.benchmark_Cluster_753$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_753._Benchmark.benchmark_Cluster_753

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48630.546 ops/s
# Warmup Iteration   2: 79627.570 ops/s
# Warmup Iteration   3: 131629.569 ops/s
# Warmup Iteration   4: 144462.709 ops/s
# Warmup Iteration   5: 143973.999 ops/s
# Warmup Iteration   6: 143853.412 ops/s
# Warmup Iteration   7: 142530.884 ops/s
# Warmup Iteration   8: 144440.146 ops/s
# Warmup Iteration   9: 111572.152 ops/s
# Warmup Iteration  10: 144797.483 ops/s
# Warmup Iteration  11: 145028.947 ops/s
# Warmup Iteration  12: 145061.825 ops/s
# Warmup Iteration  13: 145051.885 ops/s
# Warmup Iteration  14: 144924.606 ops/s
# Warmup Iteration  15: 144974.879 ops/s
# Warmup Iteration  16: 144746.874 ops/s
# Warmup Iteration  17: 146275.024 ops/s
# Warmup Iteration  18: 145611.199 ops/s
# Warmup Iteration  19: 146098.838 ops/s
# Warmup Iteration  20: 146094.651 ops/s
# Warmup Iteration  21: 146375.956 ops/s
# Warmup Iteration  22: 146386.750 ops/s
# Warmup Iteration  23: 146205.165 ops/s
# Warmup Iteration  24: 146147.189 ops/s
# Warmup Iteration  25: 145781.904 ops/s
# Warmup Iteration  26: 146227.576 ops/s
# Warmup Iteration  27: 146206.365 ops/s
# Warmup Iteration  28: 146344.683 ops/s
# Warmup Iteration  29: 146120.557 ops/s
# Warmup Iteration  30: 146234.382 ops/s
Iteration   1: 146375.464 ops/s
Iteration   2: 146302.301 ops/s
Iteration   3: 146126.759 ops/s
Iteration   4: 146354.555 ops/s
Iteration   5: 145933.995 ops/s
Iteration   6: 146221.061 ops/s
Iteration   7: 145951.553 ops/s
Iteration   8: 145550.329 ops/s
Iteration   9: 145810.662 ops/s
Iteration  10: 146159.289 ops/s
Iteration  11: 146402.611 ops/s
Iteration  12: 146249.867 ops/s
Iteration  13: 146054.057 ops/s
Iteration  14: 146357.511 ops/s
Iteration  15: 145927.002 ops/s
Iteration  16: 146553.028 ops/s
Iteration  17: 146396.948 ops/s
Iteration  18: 145966.330 ops/s
Iteration  19: 146478.177 ops/s
Iteration  20: 145847.696 ops/s
Iteration  21: 145856.496 ops/s
Iteration  22: 146128.349 ops/s
Iteration  23: 146324.224 ops/s
Iteration  24: 145991.112 ops/s
Iteration  25: 146217.511 ops/s
Iteration  26: 145831.161 ops/s
Iteration  27: 146409.793 ops/s
Iteration  28: 146102.251 ops/s
Iteration  29: 145794.780 ops/s
Iteration  30: 146058.025 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_753._Benchmark.benchmark_Cluster_753":
  146124.430 ±(99.9%) 164.010 ops/s [Average]
  (min, avg, max) = (145550.329, 146124.430, 146553.028), stdev = 245.482
  CI (99.9%): [145960.420, 146288.440] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_753._Benchmark.benchmark_Cluster_753  thrpt   30  146124.430 ± 164.010  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_754._Benchmark.benchmark_Cluster_754$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_754._Benchmark.benchmark_Cluster_754

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64508.956 ops/s
# Warmup Iteration   2: 130992.547 ops/s
# Warmup Iteration   3: 185838.979 ops/s
# Warmup Iteration   4: 187743.090 ops/s
# Warmup Iteration   5: 187388.471 ops/s
# Warmup Iteration   6: 147892.113 ops/s
# Warmup Iteration   7: 187295.130 ops/s
# Warmup Iteration   8: 187060.451 ops/s
# Warmup Iteration   9: 187355.880 ops/s
# Warmup Iteration  10: 187020.319 ops/s
# Warmup Iteration  11: 187207.892 ops/s
# Warmup Iteration  12: 187210.894 ops/s
# Warmup Iteration  13: 187519.636 ops/s
# Warmup Iteration  14: 187199.006 ops/s
# Warmup Iteration  15: 187102.101 ops/s
# Warmup Iteration  16: 187098.160 ops/s
# Warmup Iteration  17: 187495.366 ops/s
# Warmup Iteration  18: 187221.866 ops/s
# Warmup Iteration  19: 187229.095 ops/s
# Warmup Iteration  20: 186804.497 ops/s
# Warmup Iteration  21: 187087.483 ops/s
# Warmup Iteration  22: 187056.441 ops/s
# Warmup Iteration  23: 187296.360 ops/s
# Warmup Iteration  24: 187831.749 ops/s
# Warmup Iteration  25: 187297.320 ops/s
# Warmup Iteration  26: 187058.412 ops/s
# Warmup Iteration  27: 187143.993 ops/s
# Warmup Iteration  28: 187417.180 ops/s
# Warmup Iteration  29: 187221.709 ops/s
# Warmup Iteration  30: 187417.749 ops/s
Iteration   1: 187151.812 ops/s
Iteration   2: 187574.351 ops/s
Iteration   3: 187459.030 ops/s
Iteration   4: 187191.863 ops/s
Iteration   5: 187347.638 ops/s
Iteration   6: 187344.401 ops/s
Iteration   7: 187348.543 ops/s
Iteration   8: 187524.452 ops/s
Iteration   9: 187602.367 ops/s
Iteration  10: 187253.390 ops/s
Iteration  11: 187365.828 ops/s
Iteration  12: 187507.892 ops/s
Iteration  13: 187239.997 ops/s
Iteration  14: 188162.099 ops/s
Iteration  15: 187528.222 ops/s
Iteration  16: 187686.257 ops/s
Iteration  17: 187416.119 ops/s
Iteration  18: 187057.151 ops/s
Iteration  19: 187312.916 ops/s
Iteration  20: 187349.398 ops/s
Iteration  21: 187521.780 ops/s
Iteration  22: 187235.178 ops/s
Iteration  23: 187385.303 ops/s
Iteration  24: 187465.451 ops/s
Iteration  25: 187445.257 ops/s
Iteration  26: 187406.764 ops/s
Iteration  27: 187436.950 ops/s
Iteration  28: 187460.207 ops/s
Iteration  29: 187188.831 ops/s
Iteration  30: 187345.324 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_754._Benchmark.benchmark_Cluster_754":
  187410.492 ±(99.9%) 134.118 ops/s [Average]
  (min, avg, max) = (187057.151, 187410.492, 188162.099), stdev = 200.741
  CI (99.9%): [187276.374, 187544.610] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_754._Benchmark.benchmark_Cluster_754  thrpt   30  187410.492 ± 134.118  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_755._Benchmark.benchmark_Cluster_755$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_755._Benchmark.benchmark_Cluster_755

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45671.337 ops/s
# Warmup Iteration   2: 108278.667 ops/s
# Warmup Iteration   3: 159394.174 ops/s
# Warmup Iteration   4: 160849.731 ops/s
# Warmup Iteration   5: 160825.651 ops/s
# Warmup Iteration   6: 128481.275 ops/s
# Warmup Iteration   7: 161035.654 ops/s
# Warmup Iteration   8: 160479.624 ops/s
# Warmup Iteration   9: 160644.521 ops/s
# Warmup Iteration  10: 160547.302 ops/s
# Warmup Iteration  11: 160577.798 ops/s
# Warmup Iteration  12: 160671.719 ops/s
# Warmup Iteration  13: 160801.847 ops/s
# Warmup Iteration  14: 160612.729 ops/s
# Warmup Iteration  15: 160527.678 ops/s
# Warmup Iteration  16: 160838.999 ops/s
# Warmup Iteration  17: 160564.673 ops/s
# Warmup Iteration  18: 160684.466 ops/s
# Warmup Iteration  19: 160722.850 ops/s
# Warmup Iteration  20: 160829.773 ops/s
# Warmup Iteration  21: 160673.071 ops/s
# Warmup Iteration  22: 160527.021 ops/s
# Warmup Iteration  23: 160630.163 ops/s
# Warmup Iteration  24: 160211.431 ops/s
# Warmup Iteration  25: 160575.877 ops/s
# Warmup Iteration  26: 160622.293 ops/s
# Warmup Iteration  27: 161057.736 ops/s
# Warmup Iteration  28: 160593.186 ops/s
# Warmup Iteration  29: 160393.177 ops/s
# Warmup Iteration  30: 160474.119 ops/s
Iteration   1: 160613.006 ops/s
Iteration   2: 160701.291 ops/s
Iteration   3: 160609.203 ops/s
Iteration   4: 160817.832 ops/s
Iteration   5: 160566.728 ops/s
Iteration   6: 160977.375 ops/s
Iteration   7: 160846.111 ops/s
Iteration   8: 160854.617 ops/s
Iteration   9: 160717.021 ops/s
Iteration  10: 160493.193 ops/s
Iteration  11: 160767.187 ops/s
Iteration  12: 160266.899 ops/s
Iteration  13: 160530.431 ops/s
Iteration  14: 160776.605 ops/s
Iteration  15: 160507.863 ops/s
Iteration  16: 161050.396 ops/s
Iteration  17: 160259.140 ops/s
Iteration  18: 160423.590 ops/s
Iteration  19: 160852.656 ops/s
Iteration  20: 160629.779 ops/s
Iteration  21: 160440.817 ops/s
Iteration  22: 160440.099 ops/s
Iteration  23: 160314.013 ops/s
Iteration  24: 160366.448 ops/s
Iteration  25: 160308.087 ops/s
Iteration  26: 160508.285 ops/s
Iteration  27: 160643.494 ops/s
Iteration  28: 160761.336 ops/s
Iteration  29: 160868.369 ops/s
Iteration  30: 160898.166 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_755._Benchmark.benchmark_Cluster_755":
  160627.001 ±(99.9%) 146.699 ops/s [Average]
  (min, avg, max) = (160259.140, 160627.001, 161050.396), stdev = 219.572
  CI (99.9%): [160480.303, 160773.700] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_755._Benchmark.benchmark_Cluster_755  thrpt   30  160627.001 ± 146.699  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_756._Benchmark.benchmark_Cluster_756$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_756._Benchmark.benchmark_Cluster_756

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42956.926 ops/s
# Warmup Iteration   2: 109477.416 ops/s
# Warmup Iteration   3: 175921.702 ops/s
# Warmup Iteration   4: 177631.489 ops/s
# Warmup Iteration   5: 177680.661 ops/s
# Warmup Iteration   6: 138747.691 ops/s
# Warmup Iteration   7: 177739.272 ops/s
# Warmup Iteration   8: 177310.882 ops/s
# Warmup Iteration   9: 177576.006 ops/s
# Warmup Iteration  10: 177335.736 ops/s
# Warmup Iteration  11: 177581.132 ops/s
# Warmup Iteration  12: 177980.467 ops/s
# Warmup Iteration  13: 177686.031 ops/s
# Warmup Iteration  14: 178010.246 ops/s
# Warmup Iteration  15: 177241.497 ops/s
# Warmup Iteration  16: 177860.689 ops/s
# Warmup Iteration  17: 178032.225 ops/s
# Warmup Iteration  18: 177981.276 ops/s
# Warmup Iteration  19: 177577.396 ops/s
# Warmup Iteration  20: 177777.631 ops/s
# Warmup Iteration  21: 178126.903 ops/s
# Warmup Iteration  22: 177681.509 ops/s
# Warmup Iteration  23: 178212.034 ops/s
# Warmup Iteration  24: 178312.088 ops/s
# Warmup Iteration  25: 177996.281 ops/s
# Warmup Iteration  26: 178447.716 ops/s
# Warmup Iteration  27: 178452.263 ops/s
# Warmup Iteration  28: 177840.595 ops/s
# Warmup Iteration  29: 178058.292 ops/s
# Warmup Iteration  30: 178071.824 ops/s
Iteration   1: 178201.576 ops/s
Iteration   2: 178157.670 ops/s
Iteration   3: 177729.868 ops/s
Iteration   4: 177938.646 ops/s
Iteration   5: 178254.674 ops/s
Iteration   6: 177724.396 ops/s
Iteration   7: 177939.159 ops/s
Iteration   8: 177917.283 ops/s
Iteration   9: 178171.068 ops/s
Iteration  10: 178083.945 ops/s
Iteration  11: 177628.032 ops/s
Iteration  12: 177772.094 ops/s
Iteration  13: 178211.562 ops/s
Iteration  14: 177830.515 ops/s
Iteration  15: 177633.697 ops/s
Iteration  16: 178113.096 ops/s
Iteration  17: 177990.137 ops/s
Iteration  18: 177437.005 ops/s
Iteration  19: 178150.810 ops/s
Iteration  20: 177751.591 ops/s
Iteration  21: 177930.417 ops/s
Iteration  22: 177917.033 ops/s
Iteration  23: 177324.006 ops/s
Iteration  24: 177452.555 ops/s
Iteration  25: 177991.147 ops/s
Iteration  26: 178724.987 ops/s
Iteration  27: 178033.212 ops/s
Iteration  28: 177844.974 ops/s
Iteration  29: 177861.719 ops/s
Iteration  30: 178310.660 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_756._Benchmark.benchmark_Cluster_756":
  177934.251 ±(99.9%) 194.087 ops/s [Average]
  (min, avg, max) = (177324.006, 177934.251, 178724.987), stdev = 290.500
  CI (99.9%): [177740.164, 178128.338] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_756._Benchmark.benchmark_Cluster_756  thrpt   30  177934.251 ± 194.087  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_757._Benchmark.benchmark_Cluster_757$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_757._Benchmark.benchmark_Cluster_757

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94873.934 ops/s
# Warmup Iteration   2: 103390.477 ops/s
# Warmup Iteration   3: 119970.407 ops/s
# Warmup Iteration   4: 139848.372 ops/s
# Warmup Iteration   5: 139948.405 ops/s
# Warmup Iteration   6: 140196.500 ops/s
# Warmup Iteration   7: 138829.987 ops/s
# Warmup Iteration   8: 139597.529 ops/s
# Warmup Iteration   9: 140077.502 ops/s
# Warmup Iteration  10: 139858.247 ops/s
# Warmup Iteration  11: 140167.301 ops/s
# Warmup Iteration  12: 139887.464 ops/s
# Warmup Iteration  13: 140502.440 ops/s
# Warmup Iteration  14: 123977.838 ops/s
# Warmup Iteration  15: 126649.880 ops/s
# Warmup Iteration  16: 140362.350 ops/s
# Warmup Iteration  17: 147906.905 ops/s
# Warmup Iteration  18: 148393.309 ops/s
# Warmup Iteration  19: 148260.670 ops/s
# Warmup Iteration  20: 148180.316 ops/s
# Warmup Iteration  21: 148285.658 ops/s
# Warmup Iteration  22: 148134.469 ops/s
# Warmup Iteration  23: 147849.046 ops/s
# Warmup Iteration  24: 147941.830 ops/s
# Warmup Iteration  25: 147842.824 ops/s
# Warmup Iteration  26: 148252.083 ops/s
# Warmup Iteration  27: 147965.172 ops/s
# Warmup Iteration  28: 147905.112 ops/s
# Warmup Iteration  29: 148142.241 ops/s
# Warmup Iteration  30: 148394.699 ops/s
Iteration   1: 148353.260 ops/s
Iteration   2: 147610.032 ops/s
Iteration   3: 148190.476 ops/s
Iteration   4: 148607.874 ops/s
Iteration   5: 148259.605 ops/s
Iteration   6: 148311.600 ops/s
Iteration   7: 147969.362 ops/s
Iteration   8: 148121.669 ops/s
Iteration   9: 148216.722 ops/s
Iteration  10: 148439.667 ops/s
Iteration  11: 148339.510 ops/s
Iteration  12: 148515.371 ops/s
Iteration  13: 148563.938 ops/s
Iteration  14: 148549.512 ops/s
Iteration  15: 148452.105 ops/s
Iteration  16: 148137.700 ops/s
Iteration  17: 148414.658 ops/s
Iteration  18: 148330.321 ops/s
Iteration  19: 148641.793 ops/s
Iteration  20: 148591.204 ops/s
Iteration  21: 148403.628 ops/s
Iteration  22: 148597.155 ops/s
Iteration  23: 148170.535 ops/s
Iteration  24: 148118.582 ops/s
Iteration  25: 147724.881 ops/s
Iteration  26: 147631.830 ops/s
Iteration  27: 148176.467 ops/s
Iteration  28: 148496.467 ops/s
Iteration  29: 148565.551 ops/s
Iteration  30: 147486.843 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_757._Benchmark.benchmark_Cluster_757":
  148266.277 ±(99.9%) 210.453 ops/s [Average]
  (min, avg, max) = (147486.843, 148266.277, 148641.793), stdev = 314.996
  CI (99.9%): [148055.824, 148476.730] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_757._Benchmark.benchmark_Cluster_757  thrpt   30  148266.277 ± 210.453  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_758._Benchmark.benchmark_Cluster_758$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_758._Benchmark.benchmark_Cluster_758

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93461.967 ops/s
# Warmup Iteration   2: 100906.233 ops/s
# Warmup Iteration   3: 109737.670 ops/s
# Warmup Iteration   4: 133405.528 ops/s
# Warmup Iteration   5: 133168.764 ops/s
# Warmup Iteration   6: 133657.993 ops/s
# Warmup Iteration   7: 132577.612 ops/s
# Warmup Iteration   8: 133589.281 ops/s
# Warmup Iteration   9: 133371.151 ops/s
# Warmup Iteration  10: 132798.966 ops/s
# Warmup Iteration  11: 132966.492 ops/s
# Warmup Iteration  12: 133717.834 ops/s
# Warmup Iteration  13: 133140.568 ops/s
# Warmup Iteration  14: 133589.374 ops/s
# Warmup Iteration  15: 128291.328 ops/s
# Warmup Iteration  16: 110462.404 ops/s
# Warmup Iteration  17: 140584.479 ops/s
# Warmup Iteration  18: 140503.069 ops/s
# Warmup Iteration  19: 139258.958 ops/s
# Warmup Iteration  20: 139788.983 ops/s
# Warmup Iteration  21: 139475.455 ops/s
# Warmup Iteration  22: 140235.179 ops/s
# Warmup Iteration  23: 139750.373 ops/s
# Warmup Iteration  24: 140755.013 ops/s
# Warmup Iteration  25: 140753.630 ops/s
# Warmup Iteration  26: 140968.605 ops/s
# Warmup Iteration  27: 140481.253 ops/s
# Warmup Iteration  28: 140314.089 ops/s
# Warmup Iteration  29: 139907.037 ops/s
# Warmup Iteration  30: 139657.030 ops/s
Iteration   1: 139716.428 ops/s
Iteration   2: 140797.026 ops/s
Iteration   3: 140429.425 ops/s
Iteration   4: 140716.550 ops/s
Iteration   5: 140029.891 ops/s
Iteration   6: 140310.003 ops/s
Iteration   7: 140332.775 ops/s
Iteration   8: 140968.766 ops/s
Iteration   9: 140439.949 ops/s
Iteration  10: 139959.901 ops/s
Iteration  11: 139837.867 ops/s
Iteration  12: 139964.182 ops/s
Iteration  13: 139894.370 ops/s
Iteration  14: 139805.103 ops/s
Iteration  15: 140715.798 ops/s
Iteration  16: 140669.299 ops/s
Iteration  17: 140832.370 ops/s
Iteration  18: 140656.525 ops/s
Iteration  19: 139579.006 ops/s
Iteration  20: 140902.505 ops/s
Iteration  21: 140977.436 ops/s
Iteration  22: 140985.821 ops/s
Iteration  23: 140805.265 ops/s
Iteration  24: 140143.819 ops/s
Iteration  25: 140660.084 ops/s
Iteration  26: 140678.538 ops/s
Iteration  27: 140343.391 ops/s
Iteration  28: 139808.298 ops/s
Iteration  29: 139696.655 ops/s
Iteration  30: 139765.272 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_758._Benchmark.benchmark_Cluster_758":
  140347.411 ±(99.9%) 305.942 ops/s [Average]
  (min, avg, max) = (139579.006, 140347.411, 140985.821), stdev = 457.920
  CI (99.9%): [140041.469, 140653.352] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_758._Benchmark.benchmark_Cluster_758  thrpt   30  140347.411 ± 305.942  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_759._Benchmark.benchmark_Cluster_759$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_759._Benchmark.benchmark_Cluster_759

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 87349.556 ops/s
# Warmup Iteration   2: 94320.948 ops/s
# Warmup Iteration   3: 113777.098 ops/s
# Warmup Iteration   4: 129242.805 ops/s
# Warmup Iteration   5: 129368.073 ops/s
# Warmup Iteration   6: 128877.222 ops/s
# Warmup Iteration   7: 130085.594 ops/s
# Warmup Iteration   8: 129586.776 ops/s
# Warmup Iteration   9: 129860.047 ops/s
# Warmup Iteration  10: 129488.520 ops/s
# Warmup Iteration  11: 129526.967 ops/s
# Warmup Iteration  12: 129638.892 ops/s
# Warmup Iteration  13: 125939.328 ops/s
# Warmup Iteration  14: 106415.461 ops/s
# Warmup Iteration  15: 129614.885 ops/s
# Warmup Iteration  16: 129767.400 ops/s
# Warmup Iteration  17: 136046.679 ops/s
# Warmup Iteration  18: 135952.958 ops/s
# Warmup Iteration  19: 135594.978 ops/s
# Warmup Iteration  20: 136150.187 ops/s
# Warmup Iteration  21: 135871.449 ops/s
# Warmup Iteration  22: 135653.733 ops/s
# Warmup Iteration  23: 135917.014 ops/s
# Warmup Iteration  24: 136369.512 ops/s
# Warmup Iteration  25: 136177.002 ops/s
# Warmup Iteration  26: 135534.408 ops/s
# Warmup Iteration  27: 135830.032 ops/s
# Warmup Iteration  28: 135820.009 ops/s
# Warmup Iteration  29: 136043.278 ops/s
# Warmup Iteration  30: 135904.352 ops/s
Iteration   1: 135902.043 ops/s
Iteration   2: 135845.868 ops/s
Iteration   3: 135828.550 ops/s
Iteration   4: 135335.578 ops/s
Iteration   5: 136168.145 ops/s
Iteration   6: 136267.283 ops/s
Iteration   7: 136240.869 ops/s
Iteration   8: 135430.101 ops/s
Iteration   9: 135720.940 ops/s
Iteration  10: 136066.648 ops/s
Iteration  11: 136090.984 ops/s
Iteration  12: 135799.345 ops/s
Iteration  13: 135620.289 ops/s
Iteration  14: 135855.151 ops/s
Iteration  15: 135995.410 ops/s
Iteration  16: 135387.874 ops/s
Iteration  17: 134427.656 ops/s
Iteration  18: 136236.411 ops/s
Iteration  19: 136129.425 ops/s
Iteration  20: 136351.616 ops/s
Iteration  21: 136199.337 ops/s
Iteration  22: 135816.612 ops/s
Iteration  23: 136267.825 ops/s
Iteration  24: 136267.945 ops/s
Iteration  25: 136286.654 ops/s
Iteration  26: 135726.498 ops/s
Iteration  27: 135448.775 ops/s
Iteration  28: 135865.788 ops/s
Iteration  29: 136085.940 ops/s
Iteration  30: 136033.390 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_759._Benchmark.benchmark_Cluster_759":
  135889.965 ±(99.9%) 268.021 ops/s [Average]
  (min, avg, max) = (134427.656, 135889.965, 136351.616), stdev = 401.162
  CI (99.9%): [135621.944, 136157.986] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_759._Benchmark.benchmark_Cluster_759  thrpt   30  135889.965 ± 268.021  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_76._Benchmark.benchmark_Cluster_76$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_76._Benchmark.benchmark_Cluster_76

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 110821.457 ops/s
# Warmup Iteration   2: 148880.085 ops/s
# Warmup Iteration   3: 216141.763 ops/s
# Warmup Iteration   4: 213934.194 ops/s
# Warmup Iteration   5: 213903.725 ops/s
# Warmup Iteration   6: 215008.386 ops/s
# Warmup Iteration   7: 216078.572 ops/s
# Warmup Iteration   8: 186616.280 ops/s
# Warmup Iteration   9: 200325.637 ops/s
# Warmup Iteration  10: 216220.313 ops/s
# Warmup Iteration  11: 215932.221 ops/s
# Warmup Iteration  12: 215734.474 ops/s
# Warmup Iteration  13: 215700.369 ops/s
# Warmup Iteration  14: 215852.793 ops/s
# Warmup Iteration  15: 216255.895 ops/s
# Warmup Iteration  16: 216414.802 ops/s
# Warmup Iteration  17: 221184.239 ops/s
# Warmup Iteration  18: 221187.115 ops/s
# Warmup Iteration  19: 219427.051 ops/s
# Warmup Iteration  20: 219746.330 ops/s
# Warmup Iteration  21: 220655.724 ops/s
# Warmup Iteration  22: 219899.852 ops/s
# Warmup Iteration  23: 220548.396 ops/s
# Warmup Iteration  24: 220871.872 ops/s
# Warmup Iteration  25: 220592.727 ops/s
# Warmup Iteration  26: 220743.529 ops/s
# Warmup Iteration  27: 220505.275 ops/s
# Warmup Iteration  28: 220810.513 ops/s
# Warmup Iteration  29: 220441.445 ops/s
# Warmup Iteration  30: 219037.399 ops/s
Iteration   1: 220122.655 ops/s
Iteration   2: 219511.501 ops/s
Iteration   3: 219486.763 ops/s
Iteration   4: 220344.163 ops/s
Iteration   5: 221402.672 ops/s
Iteration   6: 220308.826 ops/s
Iteration   7: 221197.259 ops/s
Iteration   8: 219722.120 ops/s
Iteration   9: 220120.053 ops/s
Iteration  10: 220584.109 ops/s
Iteration  11: 220942.501 ops/s
Iteration  12: 219180.122 ops/s
Iteration  13: 220123.979 ops/s
Iteration  14: 219063.944 ops/s
Iteration  15: 221380.412 ops/s
Iteration  16: 221011.482 ops/s
Iteration  17: 218107.688 ops/s
Iteration  18: 218421.849 ops/s
Iteration  19: 217888.872 ops/s
Iteration  20: 219320.689 ops/s
Iteration  21: 222026.329 ops/s
Iteration  22: 222020.430 ops/s
Iteration  23: 222227.501 ops/s
Iteration  24: 221191.384 ops/s
Iteration  25: 220861.960 ops/s
Iteration  26: 220705.496 ops/s
Iteration  27: 220449.337 ops/s
Iteration  28: 220691.539 ops/s
Iteration  29: 221044.513 ops/s
Iteration  30: 220340.264 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_76._Benchmark.benchmark_Cluster_76":
  220326.680 ±(99.9%) 738.480 ops/s [Average]
  (min, avg, max) = (217888.872, 220326.680, 222227.501), stdev = 1105.323
  CI (99.9%): [219588.200, 221065.161] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_76._Benchmark.benchmark_Cluster_76  thrpt   30  220326.680 ± 738.480  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_760._Benchmark.benchmark_Cluster_760$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_760._Benchmark.benchmark_Cluster_760

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 129864.947 ops/s
# Warmup Iteration   2: 138561.308 ops/s
# Warmup Iteration   3: 140423.652 ops/s
# Warmup Iteration   4: 175481.171 ops/s
# Warmup Iteration   5: 175368.033 ops/s
# Warmup Iteration   6: 175537.476 ops/s
# Warmup Iteration   7: 175442.473 ops/s
# Warmup Iteration   8: 173590.839 ops/s
# Warmup Iteration   9: 174772.069 ops/s
# Warmup Iteration  10: 175048.842 ops/s
# Warmup Iteration  11: 175051.320 ops/s
# Warmup Iteration  12: 174626.714 ops/s
# Warmup Iteration  13: 175397.944 ops/s
# Warmup Iteration  14: 175139.071 ops/s
# Warmup Iteration  15: 174064.538 ops/s
# Warmup Iteration  16: 174559.552 ops/s
# Warmup Iteration  17: 162894.020 ops/s
# Warmup Iteration  18: 168427.698 ops/s
# Warmup Iteration  19: 184572.072 ops/s
# Warmup Iteration  20: 184277.359 ops/s
# Warmup Iteration  21: 185211.577 ops/s
# Warmup Iteration  22: 185487.431 ops/s
# Warmup Iteration  23: 185572.672 ops/s
# Warmup Iteration  24: 185267.796 ops/s
# Warmup Iteration  25: 184563.404 ops/s
# Warmup Iteration  26: 184690.636 ops/s
# Warmup Iteration  27: 184206.417 ops/s
# Warmup Iteration  28: 184333.284 ops/s
# Warmup Iteration  29: 184323.534 ops/s
# Warmup Iteration  30: 184695.347 ops/s
Iteration   1: 184309.949 ops/s
Iteration   2: 185039.239 ops/s
Iteration   3: 184211.511 ops/s
Iteration   4: 184710.100 ops/s
Iteration   5: 185574.929 ops/s
Iteration   6: 185644.591 ops/s
Iteration   7: 185529.226 ops/s
Iteration   8: 185546.592 ops/s
Iteration   9: 185225.464 ops/s
Iteration  10: 185603.700 ops/s
Iteration  11: 185720.169 ops/s
Iteration  12: 185480.752 ops/s
Iteration  13: 185054.471 ops/s
Iteration  14: 185440.168 ops/s
Iteration  15: 184888.379 ops/s
Iteration  16: 184482.059 ops/s
Iteration  17: 184335.415 ops/s
Iteration  18: 184491.746 ops/s
Iteration  19: 184589.142 ops/s
Iteration  20: 185685.282 ops/s
Iteration  21: 185437.050 ops/s
Iteration  22: 185997.101 ops/s
Iteration  23: 185584.497 ops/s
Iteration  24: 184679.571 ops/s
Iteration  25: 185419.836 ops/s
Iteration  26: 185042.854 ops/s
Iteration  27: 184914.903 ops/s
Iteration  28: 185581.481 ops/s
Iteration  29: 184940.871 ops/s
Iteration  30: 185666.323 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_760._Benchmark.benchmark_Cluster_760":
  185160.912 ±(99.9%) 335.504 ops/s [Average]
  (min, avg, max) = (184211.511, 185160.912, 185997.101), stdev = 502.166
  CI (99.9%): [184825.409, 185496.416] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_760._Benchmark.benchmark_Cluster_760  thrpt   30  185160.912 ± 335.504  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_761._Benchmark.benchmark_Cluster_761$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_761._Benchmark.benchmark_Cluster_761

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45088.373 ops/s
# Warmup Iteration   2: 80544.733 ops/s
# Warmup Iteration   3: 117923.405 ops/s
# Warmup Iteration   4: 127847.563 ops/s
# Warmup Iteration   5: 126448.927 ops/s
# Warmup Iteration   6: 127136.153 ops/s
# Warmup Iteration   7: 128713.220 ops/s
# Warmup Iteration   8: 127931.578 ops/s
# Warmup Iteration   9: 126855.705 ops/s
# Warmup Iteration  10: 99557.886 ops/s
# Warmup Iteration  11: 128599.894 ops/s
# Warmup Iteration  12: 129237.298 ops/s
# Warmup Iteration  13: 129170.714 ops/s
# Warmup Iteration  14: 128362.196 ops/s
# Warmup Iteration  15: 128631.267 ops/s
# Warmup Iteration  16: 128206.932 ops/s
# Warmup Iteration  17: 132866.716 ops/s
# Warmup Iteration  18: 132513.669 ops/s
# Warmup Iteration  19: 132613.391 ops/s
# Warmup Iteration  20: 132931.074 ops/s
# Warmup Iteration  21: 132106.079 ops/s
# Warmup Iteration  22: 131778.347 ops/s
# Warmup Iteration  23: 131649.002 ops/s
# Warmup Iteration  24: 132492.001 ops/s
# Warmup Iteration  25: 132755.981 ops/s
# Warmup Iteration  26: 132970.011 ops/s
# Warmup Iteration  27: 132363.137 ops/s
# Warmup Iteration  28: 132470.511 ops/s
# Warmup Iteration  29: 132243.031 ops/s
# Warmup Iteration  30: 131881.110 ops/s
Iteration   1: 131587.253 ops/s
Iteration   2: 131828.038 ops/s
Iteration   3: 132215.700 ops/s
Iteration   4: 132094.588 ops/s
Iteration   5: 132446.506 ops/s
Iteration   6: 132122.146 ops/s
Iteration   7: 132359.876 ops/s
Iteration   8: 131494.544 ops/s
Iteration   9: 131998.344 ops/s
Iteration  10: 132773.841 ops/s
Iteration  11: 132426.327 ops/s
Iteration  12: 132579.109 ops/s
Iteration  13: 131701.248 ops/s
Iteration  14: 131215.346 ops/s
Iteration  15: 132968.319 ops/s
Iteration  16: 131659.773 ops/s
Iteration  17: 132648.107 ops/s
Iteration  18: 131532.357 ops/s
Iteration  19: 131596.869 ops/s
Iteration  20: 132414.895 ops/s
Iteration  21: 132509.741 ops/s
Iteration  22: 131133.416 ops/s
Iteration  23: 132558.442 ops/s
Iteration  24: 131936.094 ops/s
Iteration  25: 131774.456 ops/s
Iteration  26: 132180.331 ops/s
Iteration  27: 132286.510 ops/s
Iteration  28: 132297.608 ops/s
Iteration  29: 131573.567 ops/s
Iteration  30: 132455.341 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_761._Benchmark.benchmark_Cluster_761":
  132078.956 ±(99.9%) 315.948 ops/s [Average]
  (min, avg, max) = (131133.416, 132078.956, 132968.319), stdev = 472.897
  CI (99.9%): [131763.008, 132394.905] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_761._Benchmark.benchmark_Cluster_761  thrpt   30  132078.956 ± 315.948  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_762._Benchmark.benchmark_Cluster_762$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_762._Benchmark.benchmark_Cluster_762

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42466.569 ops/s
# Warmup Iteration   2: 65525.515 ops/s
# Warmup Iteration   3: 89397.870 ops/s
# Warmup Iteration   4: 97861.346 ops/s
# Warmup Iteration   5: 97864.642 ops/s
# Warmup Iteration   6: 98264.024 ops/s
# Warmup Iteration   7: 97507.679 ops/s
# Warmup Iteration   8: 98116.488 ops/s
# Warmup Iteration   9: 84707.973 ops/s
# Warmup Iteration  10: 91562.125 ops/s
# Warmup Iteration  11: 98144.198 ops/s
# Warmup Iteration  12: 97876.750 ops/s
# Warmup Iteration  13: 97676.829 ops/s
# Warmup Iteration  14: 98268.543 ops/s
# Warmup Iteration  15: 97747.148 ops/s
# Warmup Iteration  16: 97856.235 ops/s
# Warmup Iteration  17: 97974.313 ops/s
# Warmup Iteration  18: 98147.595 ops/s
# Warmup Iteration  19: 98052.658 ops/s
# Warmup Iteration  20: 98139.202 ops/s
# Warmup Iteration  21: 97994.846 ops/s
# Warmup Iteration  22: 98100.922 ops/s
# Warmup Iteration  23: 98011.769 ops/s
# Warmup Iteration  24: 98082.910 ops/s
# Warmup Iteration  25: 98198.628 ops/s
# Warmup Iteration  26: 98111.654 ops/s
# Warmup Iteration  27: 97819.432 ops/s
# Warmup Iteration  28: 97915.654 ops/s
# Warmup Iteration  29: 98372.194 ops/s
# Warmup Iteration  30: 97951.217 ops/s
Iteration   1: 97899.904 ops/s
Iteration   2: 98414.255 ops/s
Iteration   3: 98075.101 ops/s
Iteration   4: 98005.454 ops/s
Iteration   5: 98296.482 ops/s
Iteration   6: 98498.632 ops/s
Iteration   7: 98100.664 ops/s
Iteration   8: 98304.680 ops/s
Iteration   9: 98359.677 ops/s
Iteration  10: 97877.642 ops/s
Iteration  11: 98146.198 ops/s
Iteration  12: 97699.578 ops/s
Iteration  13: 98321.951 ops/s
Iteration  14: 97839.985 ops/s
Iteration  15: 98068.388 ops/s
Iteration  16: 97772.434 ops/s
Iteration  17: 97745.337 ops/s
Iteration  18: 98084.921 ops/s
Iteration  19: 98147.889 ops/s
Iteration  20: 97711.256 ops/s
Iteration  21: 97957.014 ops/s
Iteration  22: 98430.474 ops/s
Iteration  23: 98092.835 ops/s
Iteration  24: 98503.840 ops/s
Iteration  25: 98677.024 ops/s
Iteration  26: 98347.456 ops/s
Iteration  27: 98308.827 ops/s
Iteration  28: 98588.318 ops/s
Iteration  29: 98580.635 ops/s
Iteration  30: 98264.007 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_762._Benchmark.benchmark_Cluster_762":
  98170.695 ±(99.9%) 186.046 ops/s [Average]
  (min, avg, max) = (97699.578, 98170.695, 98677.024), stdev = 278.464
  CI (99.9%): [97984.650, 98356.741] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_762._Benchmark.benchmark_Cluster_762  thrpt   30  98170.695 ± 186.046  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_763._Benchmark.benchmark_Cluster_763$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_763._Benchmark.benchmark_Cluster_763

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 111672.301 ops/s
# Warmup Iteration   2: 205909.894 ops/s
# Warmup Iteration   3: 274418.202 ops/s
# Warmup Iteration   4: 277116.987 ops/s
# Warmup Iteration   5: 276861.070 ops/s
# Warmup Iteration   6: 245604.727 ops/s
# Warmup Iteration   7: 252840.935 ops/s
# Warmup Iteration   8: 276134.129 ops/s
# Warmup Iteration   9: 276639.990 ops/s
# Warmup Iteration  10: 276353.014 ops/s
# Warmup Iteration  11: 276033.324 ops/s
# Warmup Iteration  12: 276449.004 ops/s
# Warmup Iteration  13: 276679.310 ops/s
# Warmup Iteration  14: 277060.747 ops/s
# Warmup Iteration  15: 276832.247 ops/s
# Warmup Iteration  16: 276771.905 ops/s
# Warmup Iteration  17: 277182.003 ops/s
# Warmup Iteration  18: 276917.875 ops/s
# Warmup Iteration  19: 276796.385 ops/s
# Warmup Iteration  20: 276468.995 ops/s
# Warmup Iteration  21: 276906.740 ops/s
# Warmup Iteration  22: 276970.125 ops/s
# Warmup Iteration  23: 277059.479 ops/s
# Warmup Iteration  24: 277013.255 ops/s
# Warmup Iteration  25: 277063.446 ops/s
# Warmup Iteration  26: 276401.777 ops/s
# Warmup Iteration  27: 276933.664 ops/s
# Warmup Iteration  28: 276920.766 ops/s
# Warmup Iteration  29: 277143.932 ops/s
# Warmup Iteration  30: 276509.819 ops/s
Iteration   1: 277256.600 ops/s
Iteration   2: 276757.976 ops/s
Iteration   3: 276963.959 ops/s
Iteration   4: 276340.479 ops/s
Iteration   5: 276372.472 ops/s
Iteration   6: 276662.162 ops/s
Iteration   7: 277316.775 ops/s
Iteration   8: 276708.569 ops/s
Iteration   9: 277209.172 ops/s
Iteration  10: 276392.932 ops/s
Iteration  11: 276960.366 ops/s
Iteration  12: 276882.416 ops/s
Iteration  13: 276960.433 ops/s
Iteration  14: 276788.613 ops/s
Iteration  15: 276196.466 ops/s
Iteration  16: 276500.777 ops/s
Iteration  17: 276575.253 ops/s
Iteration  18: 277098.803 ops/s
Iteration  19: 276937.222 ops/s
Iteration  20: 276925.130 ops/s
Iteration  21: 276698.019 ops/s
Iteration  22: 277087.724 ops/s
Iteration  23: 276349.023 ops/s
Iteration  24: 276888.339 ops/s
Iteration  25: 277017.278 ops/s
Iteration  26: 277304.495 ops/s
Iteration  27: 277014.467 ops/s
Iteration  28: 277202.738 ops/s
Iteration  29: 276911.469 ops/s
Iteration  30: 276169.556 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_763._Benchmark.benchmark_Cluster_763":
  276814.989 ±(99.9%) 220.631 ops/s [Average]
  (min, avg, max) = (276169.556, 276814.989, 277316.775), stdev = 330.229
  CI (99.9%): [276594.359, 277035.620] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_763._Benchmark.benchmark_Cluster_763  thrpt   30  276814.989 ± 220.631  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_764._Benchmark.benchmark_Cluster_764$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_764._Benchmark.benchmark_Cluster_764

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 137521.005 ops/s
# Warmup Iteration   2: 149281.419 ops/s
# Warmup Iteration   3: 158726.047 ops/s
# Warmup Iteration   4: 196726.958 ops/s
# Warmup Iteration   5: 196844.479 ops/s
# Warmup Iteration   6: 197445.580 ops/s
# Warmup Iteration   7: 195661.514 ops/s
# Warmup Iteration   8: 197033.511 ops/s
# Warmup Iteration   9: 196906.702 ops/s
# Warmup Iteration  10: 197085.566 ops/s
# Warmup Iteration  11: 196969.595 ops/s
# Warmup Iteration  12: 196792.070 ops/s
# Warmup Iteration  13: 197021.726 ops/s
# Warmup Iteration  14: 196640.157 ops/s
# Warmup Iteration  15: 196979.254 ops/s
# Warmup Iteration  16: 164700.883 ops/s
# Warmup Iteration  17: 192976.925 ops/s
# Warmup Iteration  18: 202769.894 ops/s
# Warmup Iteration  19: 202684.970 ops/s
# Warmup Iteration  20: 202771.918 ops/s
# Warmup Iteration  21: 203014.139 ops/s
# Warmup Iteration  22: 202398.918 ops/s
# Warmup Iteration  23: 202833.585 ops/s
# Warmup Iteration  24: 202996.637 ops/s
# Warmup Iteration  25: 202810.288 ops/s
# Warmup Iteration  26: 202280.309 ops/s
# Warmup Iteration  27: 202750.599 ops/s
# Warmup Iteration  28: 202505.598 ops/s
# Warmup Iteration  29: 202908.960 ops/s
# Warmup Iteration  30: 202492.077 ops/s
Iteration   1: 202849.205 ops/s
Iteration   2: 202510.863 ops/s
Iteration   3: 202982.559 ops/s
Iteration   4: 202853.051 ops/s
Iteration   5: 203042.702 ops/s
Iteration   6: 202888.442 ops/s
Iteration   7: 202922.748 ops/s
Iteration   8: 202994.248 ops/s
Iteration   9: 202798.129 ops/s
Iteration  10: 202803.043 ops/s
Iteration  11: 201791.611 ops/s
Iteration  12: 202935.704 ops/s
Iteration  13: 202908.409 ops/s
Iteration  14: 202882.260 ops/s
Iteration  15: 202769.514 ops/s
Iteration  16: 201773.978 ops/s
Iteration  17: 202708.728 ops/s
Iteration  18: 202736.199 ops/s
Iteration  19: 202637.540 ops/s
Iteration  20: 202643.559 ops/s
Iteration  21: 202626.334 ops/s
Iteration  22: 202124.323 ops/s
Iteration  23: 202687.612 ops/s
Iteration  24: 202537.332 ops/s
Iteration  25: 202186.296 ops/s
Iteration  26: 202628.830 ops/s
Iteration  27: 202040.616 ops/s
Iteration  28: 202734.974 ops/s
Iteration  29: 202816.590 ops/s
Iteration  30: 202605.517 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_764._Benchmark.benchmark_Cluster_764":
  202647.364 ±(99.9%) 225.605 ops/s [Average]
  (min, avg, max) = (201773.978, 202647.364, 203042.702), stdev = 337.676
  CI (99.9%): [202421.758, 202872.969] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_764._Benchmark.benchmark_Cluster_764  thrpt   30  202647.364 ± 225.605  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_765._Benchmark.benchmark_Cluster_765$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_765._Benchmark.benchmark_Cluster_765

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 85343.162 ops/s
# Warmup Iteration   2: 97154.104 ops/s
# Warmup Iteration   3: 126826.639 ops/s
# Warmup Iteration   4: 142727.216 ops/s
# Warmup Iteration   5: 143113.122 ops/s
# Warmup Iteration   6: 141876.978 ops/s
# Warmup Iteration   7: 142530.009 ops/s
# Warmup Iteration   8: 142817.117 ops/s
# Warmup Iteration   9: 142640.922 ops/s
# Warmup Iteration  10: 142577.667 ops/s
# Warmup Iteration  11: 142080.790 ops/s
# Warmup Iteration  12: 124634.819 ops/s
# Warmup Iteration  13: 127392.040 ops/s
# Warmup Iteration  14: 142631.631 ops/s
# Warmup Iteration  15: 142510.630 ops/s
# Warmup Iteration  16: 142529.161 ops/s
# Warmup Iteration  17: 149515.934 ops/s
# Warmup Iteration  18: 149545.514 ops/s
# Warmup Iteration  19: 149418.114 ops/s
# Warmup Iteration  20: 149599.246 ops/s
# Warmup Iteration  21: 149689.806 ops/s
# Warmup Iteration  22: 149588.359 ops/s
# Warmup Iteration  23: 149367.398 ops/s
# Warmup Iteration  24: 149539.603 ops/s
# Warmup Iteration  25: 149557.277 ops/s
# Warmup Iteration  26: 149353.644 ops/s
# Warmup Iteration  27: 149486.902 ops/s
# Warmup Iteration  28: 149487.678 ops/s
# Warmup Iteration  29: 149385.157 ops/s
# Warmup Iteration  30: 149550.476 ops/s
Iteration   1: 149230.141 ops/s
Iteration   2: 149306.617 ops/s
Iteration   3: 149321.243 ops/s
Iteration   4: 149565.948 ops/s
Iteration   5: 149494.382 ops/s
Iteration   6: 149650.583 ops/s
Iteration   7: 149579.291 ops/s
Iteration   8: 149758.623 ops/s
Iteration   9: 149425.092 ops/s
Iteration  10: 149431.409 ops/s
Iteration  11: 149364.096 ops/s
Iteration  12: 149295.667 ops/s
Iteration  13: 149273.817 ops/s
Iteration  14: 149297.460 ops/s
Iteration  15: 149585.260 ops/s
Iteration  16: 149574.165 ops/s
Iteration  17: 149596.872 ops/s
Iteration  18: 149693.243 ops/s
Iteration  19: 149442.476 ops/s
Iteration  20: 149301.709 ops/s
Iteration  21: 149479.804 ops/s
Iteration  22: 149742.502 ops/s
Iteration  23: 149602.434 ops/s
Iteration  24: 149368.280 ops/s
Iteration  25: 149397.006 ops/s
Iteration  26: 149588.566 ops/s
Iteration  27: 149281.223 ops/s
Iteration  28: 149425.254 ops/s
Iteration  29: 149235.092 ops/s
Iteration  30: 149349.003 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_765._Benchmark.benchmark_Cluster_765":
  149455.242 ±(99.9%) 103.733 ops/s [Average]
  (min, avg, max) = (149230.141, 149455.242, 149758.623), stdev = 155.262
  CI (99.9%): [149351.509, 149558.975] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_765._Benchmark.benchmark_Cluster_765  thrpt   30  149455.242 ± 103.733  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_766._Benchmark.benchmark_Cluster_766$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_766._Benchmark.benchmark_Cluster_766

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66035.448 ops/s
# Warmup Iteration   2: 89219.766 ops/s
# Warmup Iteration   3: 134553.923 ops/s
# Warmup Iteration   4: 133883.812 ops/s
# Warmup Iteration   5: 134851.133 ops/s
# Warmup Iteration   6: 135049.481 ops/s
# Warmup Iteration   7: 134604.392 ops/s
# Warmup Iteration   8: 127014.344 ops/s
# Warmup Iteration   9: 112972.529 ops/s
# Warmup Iteration  10: 134510.127 ops/s
# Warmup Iteration  11: 134540.198 ops/s
# Warmup Iteration  12: 134645.495 ops/s
# Warmup Iteration  13: 134613.850 ops/s
# Warmup Iteration  14: 134116.990 ops/s
# Warmup Iteration  15: 134418.421 ops/s
# Warmup Iteration  16: 134269.653 ops/s
# Warmup Iteration  17: 138401.203 ops/s
# Warmup Iteration  18: 138491.625 ops/s
# Warmup Iteration  19: 138811.737 ops/s
# Warmup Iteration  20: 138690.745 ops/s
# Warmup Iteration  21: 138338.724 ops/s
# Warmup Iteration  22: 138747.740 ops/s
# Warmup Iteration  23: 138455.256 ops/s
# Warmup Iteration  24: 138684.041 ops/s
# Warmup Iteration  25: 138689.498 ops/s
# Warmup Iteration  26: 138470.820 ops/s
# Warmup Iteration  27: 138123.918 ops/s
# Warmup Iteration  28: 138798.905 ops/s
# Warmup Iteration  29: 138792.766 ops/s
# Warmup Iteration  30: 138775.307 ops/s
Iteration   1: 138424.790 ops/s
Iteration   2: 137946.344 ops/s
Iteration   3: 138529.535 ops/s
Iteration   4: 138455.101 ops/s
Iteration   5: 138248.382 ops/s
Iteration   6: 138936.641 ops/s
Iteration   7: 138748.143 ops/s
Iteration   8: 138577.227 ops/s
Iteration   9: 138509.477 ops/s
Iteration  10: 138877.373 ops/s
Iteration  11: 138986.233 ops/s
Iteration  12: 138977.136 ops/s
Iteration  13: 138878.750 ops/s
Iteration  14: 138711.910 ops/s
Iteration  15: 138630.119 ops/s
Iteration  16: 138756.504 ops/s
Iteration  17: 138605.140 ops/s
Iteration  18: 138410.704 ops/s
Iteration  19: 138520.096 ops/s
Iteration  20: 138486.048 ops/s
Iteration  21: 138279.397 ops/s
Iteration  22: 138299.490 ops/s
Iteration  23: 138706.889 ops/s
Iteration  24: 139028.127 ops/s
Iteration  25: 138544.209 ops/s
Iteration  26: 138588.402 ops/s
Iteration  27: 138983.913 ops/s
Iteration  28: 138755.064 ops/s
Iteration  29: 137937.863 ops/s
Iteration  30: 138680.164 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_766._Benchmark.benchmark_Cluster_766":
  138600.639 ±(99.9%) 188.076 ops/s [Average]
  (min, avg, max) = (137937.863, 138600.639, 139028.127), stdev = 281.503
  CI (99.9%): [138412.563, 138788.715] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_766._Benchmark.benchmark_Cluster_766  thrpt   30  138600.639 ± 188.076  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_767._Benchmark.benchmark_Cluster_767$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_767._Benchmark.benchmark_Cluster_767

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93963.798 ops/s
# Warmup Iteration   2: 126400.359 ops/s
# Warmup Iteration   3: 188008.448 ops/s
# Warmup Iteration   4: 202647.118 ops/s
# Warmup Iteration   5: 201152.933 ops/s
# Warmup Iteration   6: 202699.357 ops/s
# Warmup Iteration   7: 202483.975 ops/s
# Warmup Iteration   8: 202498.623 ops/s
# Warmup Iteration   9: 202564.777 ops/s
# Warmup Iteration  10: 166239.486 ops/s
# Warmup Iteration  11: 189143.551 ops/s
# Warmup Iteration  12: 203171.585 ops/s
# Warmup Iteration  13: 202967.569 ops/s
# Warmup Iteration  14: 202940.527 ops/s
# Warmup Iteration  15: 203116.854 ops/s
# Warmup Iteration  16: 202637.684 ops/s
# Warmup Iteration  17: 206091.143 ops/s
# Warmup Iteration  18: 206515.564 ops/s
# Warmup Iteration  19: 206147.669 ops/s
# Warmup Iteration  20: 206041.415 ops/s
# Warmup Iteration  21: 206312.338 ops/s
# Warmup Iteration  22: 206184.302 ops/s
# Warmup Iteration  23: 206576.084 ops/s
# Warmup Iteration  24: 206412.695 ops/s
# Warmup Iteration  25: 206467.219 ops/s
# Warmup Iteration  26: 206467.203 ops/s
# Warmup Iteration  27: 206273.165 ops/s
# Warmup Iteration  28: 206567.341 ops/s
# Warmup Iteration  29: 206228.678 ops/s
# Warmup Iteration  30: 206203.650 ops/s
Iteration   1: 206432.419 ops/s
Iteration   2: 206542.979 ops/s
Iteration   3: 206330.513 ops/s
Iteration   4: 206339.359 ops/s
Iteration   5: 206491.201 ops/s
Iteration   6: 206077.289 ops/s
Iteration   7: 206440.405 ops/s
Iteration   8: 206480.973 ops/s
Iteration   9: 206661.997 ops/s
Iteration  10: 206125.847 ops/s
Iteration  11: 206633.457 ops/s
Iteration  12: 206429.808 ops/s
Iteration  13: 206087.372 ops/s
Iteration  14: 206602.060 ops/s
Iteration  15: 206431.488 ops/s
Iteration  16: 206082.810 ops/s
Iteration  17: 206440.586 ops/s
Iteration  18: 206394.883 ops/s
Iteration  19: 205610.301 ops/s
Iteration  20: 206600.385 ops/s
Iteration  21: 206509.763 ops/s
Iteration  22: 206408.283 ops/s
Iteration  23: 205879.745 ops/s
Iteration  24: 205866.071 ops/s
Iteration  25: 206245.687 ops/s
Iteration  26: 205848.256 ops/s
Iteration  27: 206602.713 ops/s
Iteration  28: 206405.922 ops/s
Iteration  29: 206167.263 ops/s
Iteration  30: 206427.762 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_767._Benchmark.benchmark_Cluster_767":
  206319.920 ±(99.9%) 177.861 ops/s [Average]
  (min, avg, max) = (205610.301, 206319.920, 206661.997), stdev = 266.215
  CI (99.9%): [206142.059, 206497.781] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_767._Benchmark.benchmark_Cluster_767  thrpt   30  206319.920 ± 177.861  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_768._Benchmark.benchmark_Cluster_768$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_768._Benchmark.benchmark_Cluster_768

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72639.522 ops/s
# Warmup Iteration   2: 136692.826 ops/s
# Warmup Iteration   3: 189159.071 ops/s
# Warmup Iteration   4: 189389.916 ops/s
# Warmup Iteration   5: 188362.380 ops/s
# Warmup Iteration   6: 165910.822 ops/s
# Warmup Iteration   7: 174488.248 ops/s
# Warmup Iteration   8: 189135.660 ops/s
# Warmup Iteration   9: 189331.809 ops/s
# Warmup Iteration  10: 188866.579 ops/s
# Warmup Iteration  11: 189137.238 ops/s
# Warmup Iteration  12: 189671.907 ops/s
# Warmup Iteration  13: 189606.789 ops/s
# Warmup Iteration  14: 189113.315 ops/s
# Warmup Iteration  15: 189428.470 ops/s
# Warmup Iteration  16: 189017.163 ops/s
# Warmup Iteration  17: 189539.946 ops/s
# Warmup Iteration  18: 189317.146 ops/s
# Warmup Iteration  19: 189706.693 ops/s
# Warmup Iteration  20: 189290.415 ops/s
# Warmup Iteration  21: 189519.100 ops/s
# Warmup Iteration  22: 189497.215 ops/s
# Warmup Iteration  23: 189259.078 ops/s
# Warmup Iteration  24: 189407.843 ops/s
# Warmup Iteration  25: 189570.173 ops/s
# Warmup Iteration  26: 189861.662 ops/s
# Warmup Iteration  27: 189780.513 ops/s
# Warmup Iteration  28: 189319.448 ops/s
# Warmup Iteration  29: 189665.191 ops/s
# Warmup Iteration  30: 189888.685 ops/s
Iteration   1: 189359.073 ops/s
Iteration   2: 189688.763 ops/s
Iteration   3: 189618.404 ops/s
Iteration   4: 189813.075 ops/s
Iteration   5: 189591.805 ops/s
Iteration   6: 189477.156 ops/s
Iteration   7: 189554.056 ops/s
Iteration   8: 189853.205 ops/s
Iteration   9: 189616.548 ops/s
Iteration  10: 188732.826 ops/s
Iteration  11: 189757.285 ops/s
Iteration  12: 189826.037 ops/s
Iteration  13: 189756.034 ops/s
Iteration  14: 189672.261 ops/s
Iteration  15: 189785.744 ops/s
Iteration  16: 189480.532 ops/s
Iteration  17: 189617.721 ops/s
Iteration  18: 189421.651 ops/s
Iteration  19: 189808.409 ops/s
Iteration  20: 189536.446 ops/s
Iteration  21: 189712.357 ops/s
Iteration  22: 189395.837 ops/s
Iteration  23: 189321.940 ops/s
Iteration  24: 189210.127 ops/s
Iteration  25: 189466.471 ops/s
Iteration  26: 189651.366 ops/s
Iteration  27: 189262.409 ops/s
Iteration  28: 189702.621 ops/s
Iteration  29: 189353.007 ops/s
Iteration  30: 189945.441 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_768._Benchmark.benchmark_Cluster_768":
  189566.287 ±(99.9%) 164.306 ops/s [Average]
  (min, avg, max) = (188732.826, 189566.287, 189945.441), stdev = 245.926
  CI (99.9%): [189401.980, 189730.593] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_768._Benchmark.benchmark_Cluster_768  thrpt   30  189566.287 ± 164.306  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_769._Benchmark.benchmark_Cluster_769$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_769._Benchmark.benchmark_Cluster_769

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 137409.094 ops/s
# Warmup Iteration   2: 149698.067 ops/s
# Warmup Iteration   3: 160646.833 ops/s
# Warmup Iteration   4: 196948.537 ops/s
# Warmup Iteration   5: 196532.990 ops/s
# Warmup Iteration   6: 196481.485 ops/s
# Warmup Iteration   7: 195412.354 ops/s
# Warmup Iteration   8: 196788.589 ops/s
# Warmup Iteration   9: 196488.961 ops/s
# Warmup Iteration  10: 196530.210 ops/s
# Warmup Iteration  11: 196245.318 ops/s
# Warmup Iteration  12: 197264.200 ops/s
# Warmup Iteration  13: 196913.056 ops/s
# Warmup Iteration  14: 196300.567 ops/s
# Warmup Iteration  15: 196274.560 ops/s
# Warmup Iteration  16: 155295.335 ops/s
# Warmup Iteration  17: 204041.956 ops/s
# Warmup Iteration  18: 203657.724 ops/s
# Warmup Iteration  19: 203435.938 ops/s
# Warmup Iteration  20: 203667.249 ops/s
# Warmup Iteration  21: 203807.933 ops/s
# Warmup Iteration  22: 203582.712 ops/s
# Warmup Iteration  23: 203870.399 ops/s
# Warmup Iteration  24: 203548.238 ops/s
# Warmup Iteration  25: 204031.852 ops/s
# Warmup Iteration  26: 204041.461 ops/s
# Warmup Iteration  27: 203786.043 ops/s
# Warmup Iteration  28: 203552.906 ops/s
# Warmup Iteration  29: 203286.157 ops/s
# Warmup Iteration  30: 203330.205 ops/s
Iteration   1: 203935.095 ops/s
Iteration   2: 204087.241 ops/s
Iteration   3: 204201.634 ops/s
Iteration   4: 203790.344 ops/s
Iteration   5: 203926.804 ops/s
Iteration   6: 203968.011 ops/s
Iteration   7: 203263.208 ops/s
Iteration   8: 203816.136 ops/s
Iteration   9: 203938.588 ops/s
Iteration  10: 203573.679 ops/s
Iteration  11: 203902.415 ops/s
Iteration  12: 203836.505 ops/s
Iteration  13: 203438.687 ops/s
Iteration  14: 203676.837 ops/s
Iteration  15: 203823.081 ops/s
Iteration  16: 203719.838 ops/s
Iteration  17: 203827.176 ops/s
Iteration  18: 203893.768 ops/s
Iteration  19: 203977.273 ops/s
Iteration  20: 203537.085 ops/s
Iteration  21: 203985.470 ops/s
Iteration  22: 204079.039 ops/s
Iteration  23: 204029.412 ops/s
Iteration  24: 203940.384 ops/s
Iteration  25: 203888.161 ops/s
Iteration  26: 203676.263 ops/s
Iteration  27: 203875.246 ops/s
Iteration  28: 203983.112 ops/s
Iteration  29: 203715.783 ops/s
Iteration  30: 203943.982 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_769._Benchmark.benchmark_Cluster_769":
  203841.675 ±(99.9%) 133.765 ops/s [Average]
  (min, avg, max) = (203263.208, 203841.675, 204201.634), stdev = 200.213
  CI (99.9%): [203707.910, 203975.440] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_769._Benchmark.benchmark_Cluster_769  thrpt   30  203841.675 ± 133.765  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_77._Benchmark.benchmark_Cluster_77$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_77._Benchmark.benchmark_Cluster_77

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77608.927 ops/s
# Warmup Iteration   2: 116701.379 ops/s
# Warmup Iteration   3: 166762.684 ops/s
# Warmup Iteration   4: 166027.118 ops/s
# Warmup Iteration   5: 167373.799 ops/s
# Warmup Iteration   6: 166931.463 ops/s
# Warmup Iteration   7: 151849.022 ops/s
# Warmup Iteration   8: 144589.102 ops/s
# Warmup Iteration   9: 166805.849 ops/s
# Warmup Iteration  10: 166805.846 ops/s
# Warmup Iteration  11: 166813.750 ops/s
# Warmup Iteration  12: 167007.342 ops/s
# Warmup Iteration  13: 166697.068 ops/s
# Warmup Iteration  14: 166638.984 ops/s
# Warmup Iteration  15: 166473.748 ops/s
# Warmup Iteration  16: 167028.644 ops/s
# Warmup Iteration  17: 168151.534 ops/s
# Warmup Iteration  18: 168229.338 ops/s
# Warmup Iteration  19: 168420.789 ops/s
# Warmup Iteration  20: 168673.720 ops/s
# Warmup Iteration  21: 168546.135 ops/s
# Warmup Iteration  22: 168370.218 ops/s
# Warmup Iteration  23: 167736.488 ops/s
# Warmup Iteration  24: 168564.604 ops/s
# Warmup Iteration  25: 168653.354 ops/s
# Warmup Iteration  26: 168309.691 ops/s
# Warmup Iteration  27: 168566.722 ops/s
# Warmup Iteration  28: 168356.152 ops/s
# Warmup Iteration  29: 168846.431 ops/s
# Warmup Iteration  30: 168185.751 ops/s
Iteration   1: 167961.115 ops/s
Iteration   2: 168330.673 ops/s
Iteration   3: 168216.968 ops/s
Iteration   4: 167910.515 ops/s
Iteration   5: 167539.337 ops/s
Iteration   6: 168712.871 ops/s
Iteration   7: 168530.329 ops/s
Iteration   8: 168427.227 ops/s
Iteration   9: 168470.680 ops/s
Iteration  10: 168227.335 ops/s
Iteration  11: 168546.616 ops/s
Iteration  12: 168139.372 ops/s
Iteration  13: 168250.479 ops/s
Iteration  14: 167947.640 ops/s
Iteration  15: 168034.873 ops/s
Iteration  16: 168212.422 ops/s
Iteration  17: 168440.292 ops/s
Iteration  18: 169245.395 ops/s
Iteration  19: 168756.613 ops/s
Iteration  20: 169216.309 ops/s
Iteration  21: 168512.742 ops/s
Iteration  22: 169247.546 ops/s
Iteration  23: 169002.969 ops/s
Iteration  24: 168140.058 ops/s
Iteration  25: 168469.326 ops/s
Iteration  26: 168022.382 ops/s
Iteration  27: 167927.520 ops/s
Iteration  28: 167980.908 ops/s
Iteration  29: 167817.093 ops/s
Iteration  30: 169158.831 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_77._Benchmark.benchmark_Cluster_77":
  168379.881 ±(99.9%) 303.095 ops/s [Average]
  (min, avg, max) = (167539.337, 168379.881, 169247.546), stdev = 453.658
  CI (99.9%): [168076.786, 168682.976] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_77._Benchmark.benchmark_Cluster_77  thrpt   30  168379.881 ± 303.095  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_770._Benchmark.benchmark_Cluster_770$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_770._Benchmark.benchmark_Cluster_770

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58833.404 ops/s
# Warmup Iteration   2: 105512.875 ops/s
# Warmup Iteration   3: 161482.820 ops/s
# Warmup Iteration   4: 160416.455 ops/s
# Warmup Iteration   5: 161522.646 ops/s
# Warmup Iteration   6: 161105.512 ops/s
# Warmup Iteration   7: 141229.901 ops/s
# Warmup Iteration   8: 148289.976 ops/s
# Warmup Iteration   9: 161795.384 ops/s
# Warmup Iteration  10: 161769.972 ops/s
# Warmup Iteration  11: 161637.819 ops/s
# Warmup Iteration  12: 161448.724 ops/s
# Warmup Iteration  13: 161776.683 ops/s
# Warmup Iteration  14: 161781.636 ops/s
# Warmup Iteration  15: 161777.182 ops/s
# Warmup Iteration  16: 161661.044 ops/s
# Warmup Iteration  17: 162854.751 ops/s
# Warmup Iteration  18: 162965.396 ops/s
# Warmup Iteration  19: 163019.587 ops/s
# Warmup Iteration  20: 163122.316 ops/s
# Warmup Iteration  21: 162834.478 ops/s
# Warmup Iteration  22: 162827.388 ops/s
# Warmup Iteration  23: 162985.529 ops/s
# Warmup Iteration  24: 163048.675 ops/s
# Warmup Iteration  25: 162899.898 ops/s
# Warmup Iteration  26: 163091.060 ops/s
# Warmup Iteration  27: 162690.379 ops/s
# Warmup Iteration  28: 162650.306 ops/s
# Warmup Iteration  29: 163039.702 ops/s
# Warmup Iteration  30: 163060.319 ops/s
Iteration   1: 162566.769 ops/s
Iteration   2: 162704.422 ops/s
Iteration   3: 162741.967 ops/s
Iteration   4: 162750.393 ops/s
Iteration   5: 162917.187 ops/s
Iteration   6: 162656.905 ops/s
Iteration   7: 163066.542 ops/s
Iteration   8: 163001.001 ops/s
Iteration   9: 163057.637 ops/s
Iteration  10: 162930.878 ops/s
Iteration  11: 162821.622 ops/s
Iteration  12: 162806.061 ops/s
Iteration  13: 162954.210 ops/s
Iteration  14: 162448.522 ops/s
Iteration  15: 162868.899 ops/s
Iteration  16: 162807.404 ops/s
Iteration  17: 162793.603 ops/s
Iteration  18: 162995.631 ops/s
Iteration  19: 162914.852 ops/s
Iteration  20: 163126.394 ops/s
Iteration  21: 162942.357 ops/s
Iteration  22: 162929.542 ops/s
Iteration  23: 162753.543 ops/s
Iteration  24: 163199.990 ops/s
Iteration  25: 162931.312 ops/s
Iteration  26: 163184.736 ops/s
Iteration  27: 163085.030 ops/s
Iteration  28: 162860.452 ops/s
Iteration  29: 162717.751 ops/s
Iteration  30: 163049.186 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_770._Benchmark.benchmark_Cluster_770":
  162886.160 ±(99.9%) 118.005 ops/s [Average]
  (min, avg, max) = (162448.522, 162886.160, 163199.990), stdev = 176.625
  CI (99.9%): [162768.155, 163004.165] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_770._Benchmark.benchmark_Cluster_770  thrpt   30  162886.160 ± 118.005  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_771._Benchmark.benchmark_Cluster_771$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_771._Benchmark.benchmark_Cluster_771

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96674.437 ops/s
# Warmup Iteration   2: 103673.989 ops/s
# Warmup Iteration   3: 117247.493 ops/s
# Warmup Iteration   4: 136889.383 ops/s
# Warmup Iteration   5: 137215.588 ops/s
# Warmup Iteration   6: 137685.229 ops/s
# Warmup Iteration   7: 136840.820 ops/s
# Warmup Iteration   8: 137822.230 ops/s
# Warmup Iteration   9: 137697.705 ops/s
# Warmup Iteration  10: 137665.985 ops/s
# Warmup Iteration  11: 137522.736 ops/s
# Warmup Iteration  12: 137229.293 ops/s
# Warmup Iteration  13: 137547.480 ops/s
# Warmup Iteration  14: 137756.417 ops/s
# Warmup Iteration  15: 109162.956 ops/s
# Warmup Iteration  16: 137375.643 ops/s
# Warmup Iteration  17: 144604.074 ops/s
# Warmup Iteration  18: 144738.900 ops/s
# Warmup Iteration  19: 144918.960 ops/s
# Warmup Iteration  20: 144531.666 ops/s
# Warmup Iteration  21: 144510.106 ops/s
# Warmup Iteration  22: 144701.638 ops/s
# Warmup Iteration  23: 144858.919 ops/s
# Warmup Iteration  24: 145013.493 ops/s
# Warmup Iteration  25: 145015.456 ops/s
# Warmup Iteration  26: 144676.324 ops/s
# Warmup Iteration  27: 145113.576 ops/s
# Warmup Iteration  28: 144699.442 ops/s
# Warmup Iteration  29: 144977.807 ops/s
# Warmup Iteration  30: 144637.462 ops/s
Iteration   1: 144880.874 ops/s
Iteration   2: 145410.898 ops/s
Iteration   3: 144642.743 ops/s
Iteration   4: 144481.196 ops/s
Iteration   5: 144779.427 ops/s
Iteration   6: 144998.202 ops/s
Iteration   7: 144835.675 ops/s
Iteration   8: 145355.831 ops/s
Iteration   9: 145126.542 ops/s
Iteration  10: 144652.733 ops/s
Iteration  11: 144638.890 ops/s
Iteration  12: 144757.177 ops/s
Iteration  13: 144809.453 ops/s
Iteration  14: 145137.798 ops/s
Iteration  15: 145154.560 ops/s
Iteration  16: 145298.671 ops/s
Iteration  17: 144791.372 ops/s
Iteration  18: 144958.084 ops/s
Iteration  19: 144979.396 ops/s
Iteration  20: 144117.922 ops/s
Iteration  21: 144801.867 ops/s
Iteration  22: 144619.447 ops/s
Iteration  23: 144892.725 ops/s
Iteration  24: 144456.666 ops/s
Iteration  25: 144466.892 ops/s
Iteration  26: 144859.502 ops/s
Iteration  27: 145165.664 ops/s
Iteration  28: 145060.388 ops/s
Iteration  29: 144650.997 ops/s
Iteration  30: 145063.757 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_771._Benchmark.benchmark_Cluster_771":
  144861.512 ±(99.9%) 195.243 ops/s [Average]
  (min, avg, max) = (144117.922, 144861.512, 145410.898), stdev = 292.230
  CI (99.9%): [144666.269, 145056.754] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_771._Benchmark.benchmark_Cluster_771  thrpt   30  144861.512 ± 195.243  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_772._Benchmark.benchmark_Cluster_772$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_772._Benchmark.benchmark_Cluster_772

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94797.691 ops/s
# Warmup Iteration   2: 102853.479 ops/s
# Warmup Iteration   3: 112913.624 ops/s
# Warmup Iteration   4: 135347.157 ops/s
# Warmup Iteration   5: 134919.923 ops/s
# Warmup Iteration   6: 135097.819 ops/s
# Warmup Iteration   7: 134181.023 ops/s
# Warmup Iteration   8: 135603.810 ops/s
# Warmup Iteration   9: 135270.064 ops/s
# Warmup Iteration  10: 135117.750 ops/s
# Warmup Iteration  11: 135230.174 ops/s
# Warmup Iteration  12: 135609.495 ops/s
# Warmup Iteration  13: 135451.785 ops/s
# Warmup Iteration  14: 135446.703 ops/s
# Warmup Iteration  15: 121163.614 ops/s
# Warmup Iteration  16: 121065.657 ops/s
# Warmup Iteration  17: 141872.114 ops/s
# Warmup Iteration  18: 141932.211 ops/s
# Warmup Iteration  19: 141550.277 ops/s
# Warmup Iteration  20: 141742.633 ops/s
# Warmup Iteration  21: 141634.115 ops/s
# Warmup Iteration  22: 142094.231 ops/s
# Warmup Iteration  23: 141668.903 ops/s
# Warmup Iteration  24: 142187.829 ops/s
# Warmup Iteration  25: 141523.394 ops/s
# Warmup Iteration  26: 141783.599 ops/s
# Warmup Iteration  27: 141915.637 ops/s
# Warmup Iteration  28: 141884.348 ops/s
# Warmup Iteration  29: 141462.289 ops/s
# Warmup Iteration  30: 141675.497 ops/s
Iteration   1: 141899.682 ops/s
Iteration   2: 141240.263 ops/s
Iteration   3: 141955.307 ops/s
Iteration   4: 141897.985 ops/s
Iteration   5: 141798.806 ops/s
Iteration   6: 141825.098 ops/s
Iteration   7: 141692.109 ops/s
Iteration   8: 141503.566 ops/s
Iteration   9: 141494.985 ops/s
Iteration  10: 141793.153 ops/s
Iteration  11: 141580.424 ops/s
Iteration  12: 141402.571 ops/s
Iteration  13: 141850.423 ops/s
Iteration  14: 142096.440 ops/s
Iteration  15: 142003.687 ops/s
Iteration  16: 142052.936 ops/s
Iteration  17: 141584.425 ops/s
Iteration  18: 142161.662 ops/s
Iteration  19: 142029.504 ops/s
Iteration  20: 141448.436 ops/s
Iteration  21: 141815.165 ops/s
Iteration  22: 141466.930 ops/s
Iteration  23: 141839.481 ops/s
Iteration  24: 141524.528 ops/s
Iteration  25: 141985.597 ops/s
Iteration  26: 141589.337 ops/s
Iteration  27: 141892.390 ops/s
Iteration  28: 142294.074 ops/s
Iteration  29: 142113.879 ops/s
Iteration  30: 142152.084 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_772._Benchmark.benchmark_Cluster_772":
  141799.498 ±(99.9%) 177.562 ops/s [Average]
  (min, avg, max) = (141240.263, 141799.498, 142294.074), stdev = 265.767
  CI (99.9%): [141621.935, 141977.060] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_772._Benchmark.benchmark_Cluster_772  thrpt   30  141799.498 ± 177.562  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_773._Benchmark.benchmark_Cluster_773$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_773._Benchmark.benchmark_Cluster_773

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96792.561 ops/s
# Warmup Iteration   2: 104569.514 ops/s
# Warmup Iteration   3: 114201.407 ops/s
# Warmup Iteration   4: 137058.615 ops/s
# Warmup Iteration   5: 136615.964 ops/s
# Warmup Iteration   6: 136534.669 ops/s
# Warmup Iteration   7: 135842.384 ops/s
# Warmup Iteration   8: 137426.851 ops/s
# Warmup Iteration   9: 136789.261 ops/s
# Warmup Iteration  10: 136316.213 ops/s
# Warmup Iteration  11: 136453.622 ops/s
# Warmup Iteration  12: 136362.040 ops/s
# Warmup Iteration  13: 136538.591 ops/s
# Warmup Iteration  14: 137063.070 ops/s
# Warmup Iteration  15: 133772.374 ops/s
# Warmup Iteration  16: 111865.892 ops/s
# Warmup Iteration  17: 144957.949 ops/s
# Warmup Iteration  18: 144078.290 ops/s
# Warmup Iteration  19: 144343.393 ops/s
# Warmup Iteration  20: 144199.877 ops/s
# Warmup Iteration  21: 144615.222 ops/s
# Warmup Iteration  22: 144602.425 ops/s
# Warmup Iteration  23: 144450.280 ops/s
# Warmup Iteration  24: 144749.047 ops/s
# Warmup Iteration  25: 144338.267 ops/s
# Warmup Iteration  26: 144366.734 ops/s
# Warmup Iteration  27: 144267.160 ops/s
# Warmup Iteration  28: 144533.085 ops/s
# Warmup Iteration  29: 144262.266 ops/s
# Warmup Iteration  30: 144353.101 ops/s
Iteration   1: 144241.304 ops/s
Iteration   2: 144175.407 ops/s
Iteration   3: 144339.362 ops/s
Iteration   4: 144725.707 ops/s
Iteration   5: 144931.892 ops/s
Iteration   6: 144676.468 ops/s
Iteration   7: 144659.464 ops/s
Iteration   8: 145001.786 ops/s
Iteration   9: 144803.343 ops/s
Iteration  10: 144682.800 ops/s
Iteration  11: 144768.415 ops/s
Iteration  12: 144941.529 ops/s
Iteration  13: 144483.473 ops/s
Iteration  14: 144186.118 ops/s
Iteration  15: 144945.419 ops/s
Iteration  16: 145286.709 ops/s
Iteration  17: 145032.865 ops/s
Iteration  18: 144749.242 ops/s
Iteration  19: 144246.623 ops/s
Iteration  20: 144446.260 ops/s
Iteration  21: 144412.756 ops/s
Iteration  22: 143984.444 ops/s
Iteration  23: 144367.121 ops/s
Iteration  24: 144492.211 ops/s
Iteration  25: 144919.597 ops/s
Iteration  26: 144322.951 ops/s
Iteration  27: 144493.199 ops/s
Iteration  28: 144345.350 ops/s
Iteration  29: 143811.256 ops/s
Iteration  30: 144147.898 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_773._Benchmark.benchmark_Cluster_773":
  144554.032 ±(99.9%) 232.068 ops/s [Average]
  (min, avg, max) = (143811.256, 144554.032, 145286.709), stdev = 347.348
  CI (99.9%): [144321.965, 144786.100] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_773._Benchmark.benchmark_Cluster_773  thrpt   30  144554.032 ± 232.068  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_774._Benchmark.benchmark_Cluster_774$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_774._Benchmark.benchmark_Cluster_774

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 97590.484 ops/s
# Warmup Iteration   2: 105401.445 ops/s
# Warmup Iteration   3: 112326.793 ops/s
# Warmup Iteration   4: 137272.199 ops/s
# Warmup Iteration   5: 136878.929 ops/s
# Warmup Iteration   6: 137333.573 ops/s
# Warmup Iteration   7: 136030.801 ops/s
# Warmup Iteration   8: 136709.838 ops/s
# Warmup Iteration   9: 137079.496 ops/s
# Warmup Iteration  10: 137521.582 ops/s
# Warmup Iteration  11: 137657.261 ops/s
# Warmup Iteration  12: 137296.246 ops/s
# Warmup Iteration  13: 137746.532 ops/s
# Warmup Iteration  14: 136806.845 ops/s
# Warmup Iteration  15: 136893.121 ops/s
# Warmup Iteration  16: 120603.404 ops/s
# Warmup Iteration  17: 132983.373 ops/s
# Warmup Iteration  18: 144669.533 ops/s
# Warmup Iteration  19: 144726.573 ops/s
# Warmup Iteration  20: 144958.129 ops/s
# Warmup Iteration  21: 144901.332 ops/s
# Warmup Iteration  22: 144507.455 ops/s
# Warmup Iteration  23: 144801.788 ops/s
# Warmup Iteration  24: 144396.555 ops/s
# Warmup Iteration  25: 144987.447 ops/s
# Warmup Iteration  26: 144775.759 ops/s
# Warmup Iteration  27: 145291.099 ops/s
# Warmup Iteration  28: 145100.265 ops/s
# Warmup Iteration  29: 145018.598 ops/s
# Warmup Iteration  30: 144907.042 ops/s
Iteration   1: 145191.030 ops/s
Iteration   2: 144943.173 ops/s
Iteration   3: 144996.826 ops/s
Iteration   4: 145438.594 ops/s
Iteration   5: 144904.618 ops/s
Iteration   6: 145187.489 ops/s
Iteration   7: 144661.713 ops/s
Iteration   8: 144806.186 ops/s
Iteration   9: 144158.478 ops/s
Iteration  10: 144724.376 ops/s
Iteration  11: 144799.008 ops/s
Iteration  12: 145305.340 ops/s
Iteration  13: 145334.409 ops/s
Iteration  14: 144995.603 ops/s
Iteration  15: 144599.433 ops/s
Iteration  16: 145014.442 ops/s
Iteration  17: 145199.923 ops/s
Iteration  18: 144666.152 ops/s
Iteration  19: 144586.567 ops/s
Iteration  20: 145224.843 ops/s
Iteration  21: 144377.719 ops/s
Iteration  22: 144878.602 ops/s
Iteration  23: 145055.428 ops/s
Iteration  24: 144955.564 ops/s
Iteration  25: 144784.387 ops/s
Iteration  26: 144961.854 ops/s
Iteration  27: 144676.308 ops/s
Iteration  28: 144641.105 ops/s
Iteration  29: 144585.159 ops/s
Iteration  30: 144796.402 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_774._Benchmark.benchmark_Cluster_774":
  144881.691 ±(99.9%) 195.130 ops/s [Average]
  (min, avg, max) = (144158.478, 144881.691, 145438.594), stdev = 292.062
  CI (99.9%): [144686.561, 145076.821] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_774._Benchmark.benchmark_Cluster_774  thrpt   30  144881.691 ± 195.130  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_775._Benchmark.benchmark_Cluster_775$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_775._Benchmark.benchmark_Cluster_775

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 15627.947 ops/s
# Warmup Iteration   2: 30295.039 ops/s
# Warmup Iteration   3: 30752.978 ops/s
# Warmup Iteration   4: 36077.858 ops/s
# Warmup Iteration   5: 39889.447 ops/s
# Warmup Iteration   6: 40523.468 ops/s
# Warmup Iteration   7: 40304.721 ops/s
# Warmup Iteration   8: 40330.986 ops/s
# Warmup Iteration   9: 40562.448 ops/s
# Warmup Iteration  10: 40342.558 ops/s
# Warmup Iteration  11: 40036.543 ops/s
# Warmup Iteration  12: 40447.757 ops/s
# Warmup Iteration  13: 40142.532 ops/s
# Warmup Iteration  14: 40339.226 ops/s
# Warmup Iteration  15: 38671.821 ops/s
# Warmup Iteration  16: 33236.690 ops/s
# Warmup Iteration  17: 40200.248 ops/s
# Warmup Iteration  18: 39833.286 ops/s
# Warmup Iteration  19: 40249.214 ops/s
# Warmup Iteration  20: 40363.303 ops/s
# Warmup Iteration  21: 40307.136 ops/s
# Warmup Iteration  22: 40337.949 ops/s
# Warmup Iteration  23: 40216.517 ops/s
# Warmup Iteration  24: 40200.595 ops/s
# Warmup Iteration  25: 40311.302 ops/s
# Warmup Iteration  26: 39905.253 ops/s
# Warmup Iteration  27: 40424.172 ops/s
# Warmup Iteration  28: 40381.928 ops/s
# Warmup Iteration  29: 40182.652 ops/s
# Warmup Iteration  30: 40009.089 ops/s
Iteration   1: 40528.035 ops/s
Iteration   2: 40215.809 ops/s
Iteration   3: 40202.564 ops/s
Iteration   4: 40549.499 ops/s
Iteration   5: 40363.325 ops/s
Iteration   6: 40236.551 ops/s
Iteration   7: 40426.682 ops/s
Iteration   8: 40075.154 ops/s
Iteration   9: 40268.000 ops/s
Iteration  10: 40137.136 ops/s
Iteration  11: 40219.011 ops/s
Iteration  12: 40411.594 ops/s
Iteration  13: 40187.219 ops/s
Iteration  14: 40351.775 ops/s
Iteration  15: 40260.621 ops/s
Iteration  16: 39975.522 ops/s
Iteration  17: 40097.834 ops/s
Iteration  18: 40394.675 ops/s
Iteration  19: 40286.582 ops/s
Iteration  20: 40337.642 ops/s
Iteration  21: 40240.559 ops/s
Iteration  22: 40298.832 ops/s
Iteration  23: 40283.010 ops/s
Iteration  24: 39882.690 ops/s
Iteration  25: 40172.668 ops/s
Iteration  26: 40463.267 ops/s
Iteration  27: 40474.978 ops/s
Iteration  28: 40328.726 ops/s
Iteration  29: 40319.361 ops/s
Iteration  30: 40372.648 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_775._Benchmark.benchmark_Cluster_775":
  40278.732 ±(99.9%) 101.557 ops/s [Average]
  (min, avg, max) = (39882.690, 40278.732, 40549.499), stdev = 152.006
  CI (99.9%): [40177.175, 40380.289] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_775._Benchmark.benchmark_Cluster_775  thrpt   30  40278.732 ± 101.557  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_776._Benchmark.benchmark_Cluster_776$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_776._Benchmark.benchmark_Cluster_776

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 28457.142 ops/s
# Warmup Iteration   2: 73640.311 ops/s
# Warmup Iteration   3: 107201.133 ops/s
# Warmup Iteration   4: 122576.852 ops/s
# Warmup Iteration   5: 121861.308 ops/s
# Warmup Iteration   6: 122388.329 ops/s
# Warmup Iteration   7: 122579.530 ops/s
# Warmup Iteration   8: 122667.726 ops/s
# Warmup Iteration   9: 98839.608 ops/s
# Warmup Iteration  10: 120167.941 ops/s
# Warmup Iteration  11: 122419.411 ops/s
# Warmup Iteration  12: 122469.365 ops/s
# Warmup Iteration  13: 122537.949 ops/s
# Warmup Iteration  14: 122597.209 ops/s
# Warmup Iteration  15: 122612.653 ops/s
# Warmup Iteration  16: 122515.458 ops/s
# Warmup Iteration  17: 122489.486 ops/s
# Warmup Iteration  18: 122726.785 ops/s
# Warmup Iteration  19: 122673.412 ops/s
# Warmup Iteration  20: 122670.530 ops/s
# Warmup Iteration  21: 122716.434 ops/s
# Warmup Iteration  22: 122710.669 ops/s
# Warmup Iteration  23: 122492.217 ops/s
# Warmup Iteration  24: 122434.564 ops/s
# Warmup Iteration  25: 122599.683 ops/s
# Warmup Iteration  26: 122547.798 ops/s
# Warmup Iteration  27: 122616.040 ops/s
# Warmup Iteration  28: 122561.490 ops/s
# Warmup Iteration  29: 122723.771 ops/s
# Warmup Iteration  30: 122578.325 ops/s
Iteration   1: 122737.520 ops/s
Iteration   2: 122504.238 ops/s
Iteration   3: 122020.939 ops/s
Iteration   4: 122705.140 ops/s
Iteration   5: 122626.680 ops/s
Iteration   6: 122483.800 ops/s
Iteration   7: 122741.554 ops/s
Iteration   8: 122722.436 ops/s
Iteration   9: 122584.149 ops/s
Iteration  10: 122896.650 ops/s
Iteration  11: 122705.616 ops/s
Iteration  12: 122756.784 ops/s
Iteration  13: 122623.916 ops/s
Iteration  14: 122431.840 ops/s
Iteration  15: 122760.105 ops/s
Iteration  16: 122742.306 ops/s
Iteration  17: 122609.037 ops/s
Iteration  18: 122791.483 ops/s
Iteration  19: 122730.635 ops/s
Iteration  20: 122519.757 ops/s
Iteration  21: 122604.869 ops/s
Iteration  22: 122726.168 ops/s
Iteration  23: 122601.546 ops/s
Iteration  24: 122587.575 ops/s
Iteration  25: 122456.261 ops/s
Iteration  26: 122699.969 ops/s
Iteration  27: 122689.990 ops/s
Iteration  28: 122609.432 ops/s
Iteration  29: 122720.141 ops/s
Iteration  30: 122576.694 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_776._Benchmark.benchmark_Cluster_776":
  122632.241 ±(99.9%) 105.375 ops/s [Average]
  (min, avg, max) = (122020.939, 122632.241, 122896.650), stdev = 157.721
  CI (99.9%): [122526.866, 122737.616] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_776._Benchmark.benchmark_Cluster_776  thrpt   30  122632.241 ± 105.375  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_777._Benchmark.benchmark_Cluster_777$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_777._Benchmark.benchmark_Cluster_777

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74141.991 ops/s
# Warmup Iteration   2: 100133.560 ops/s
# Warmup Iteration   3: 162376.567 ops/s
# Warmup Iteration   4: 165484.980 ops/s
# Warmup Iteration   5: 164233.005 ops/s
# Warmup Iteration   6: 165791.891 ops/s
# Warmup Iteration   7: 165056.979 ops/s
# Warmup Iteration   8: 166072.961 ops/s
# Warmup Iteration   9: 141303.328 ops/s
# Warmup Iteration  10: 150104.847 ops/s
# Warmup Iteration  11: 166055.261 ops/s
# Warmup Iteration  12: 165412.753 ops/s
# Warmup Iteration  13: 165455.995 ops/s
# Warmup Iteration  14: 165471.496 ops/s
# Warmup Iteration  15: 165819.915 ops/s
# Warmup Iteration  16: 165381.646 ops/s
# Warmup Iteration  17: 172157.165 ops/s
# Warmup Iteration  18: 171926.391 ops/s
# Warmup Iteration  19: 172083.350 ops/s
# Warmup Iteration  20: 172274.844 ops/s
# Warmup Iteration  21: 172241.555 ops/s
# Warmup Iteration  22: 172377.382 ops/s
# Warmup Iteration  23: 172502.860 ops/s
# Warmup Iteration  24: 172340.214 ops/s
# Warmup Iteration  25: 172310.466 ops/s
# Warmup Iteration  26: 172331.842 ops/s
# Warmup Iteration  27: 171803.989 ops/s
# Warmup Iteration  28: 172098.176 ops/s
# Warmup Iteration  29: 172046.970 ops/s
# Warmup Iteration  30: 171663.964 ops/s
Iteration   1: 171962.160 ops/s
Iteration   2: 171801.158 ops/s
Iteration   3: 171953.403 ops/s
Iteration   4: 172098.194 ops/s
Iteration   5: 172157.121 ops/s
Iteration   6: 172522.826 ops/s
Iteration   7: 172383.475 ops/s
Iteration   8: 172001.640 ops/s
Iteration   9: 171984.008 ops/s
Iteration  10: 172634.137 ops/s
Iteration  11: 172433.116 ops/s
Iteration  12: 172284.829 ops/s
Iteration  13: 171584.822 ops/s
Iteration  14: 172099.592 ops/s
Iteration  15: 172729.790 ops/s
Iteration  16: 172229.127 ops/s
Iteration  17: 172503.912 ops/s
Iteration  18: 172141.701 ops/s
Iteration  19: 171670.603 ops/s
Iteration  20: 172594.637 ops/s
Iteration  21: 172386.217 ops/s
Iteration  22: 172023.381 ops/s
Iteration  23: 172310.873 ops/s
Iteration  24: 172315.028 ops/s
Iteration  25: 171813.549 ops/s
Iteration  26: 172254.225 ops/s
Iteration  27: 171938.760 ops/s
Iteration  28: 171846.932 ops/s
Iteration  29: 172556.443 ops/s
Iteration  30: 172138.867 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_777._Benchmark.benchmark_Cluster_777":
  172178.484 ±(99.9%) 196.864 ops/s [Average]
  (min, avg, max) = (171584.822, 172178.484, 172729.790), stdev = 294.656
  CI (99.9%): [171981.621, 172375.348] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_777._Benchmark.benchmark_Cluster_777  thrpt   30  172178.484 ± 196.864  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_778._Benchmark.benchmark_Cluster_778$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_778._Benchmark.benchmark_Cluster_778

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69907.228 ops/s
# Warmup Iteration   2: 130148.355 ops/s
# Warmup Iteration   3: 173392.239 ops/s
# Warmup Iteration   4: 174859.611 ops/s
# Warmup Iteration   5: 174667.117 ops/s
# Warmup Iteration   6: 138790.544 ops/s
# Warmup Iteration   7: 174472.984 ops/s
# Warmup Iteration   8: 174928.339 ops/s
# Warmup Iteration   9: 175027.930 ops/s
# Warmup Iteration  10: 175155.197 ops/s
# Warmup Iteration  11: 175374.724 ops/s
# Warmup Iteration  12: 174978.121 ops/s
# Warmup Iteration  13: 174987.490 ops/s
# Warmup Iteration  14: 174938.859 ops/s
# Warmup Iteration  15: 174868.520 ops/s
# Warmup Iteration  16: 174867.521 ops/s
# Warmup Iteration  17: 175078.481 ops/s
# Warmup Iteration  18: 175106.560 ops/s
# Warmup Iteration  19: 175053.835 ops/s
# Warmup Iteration  20: 175099.327 ops/s
# Warmup Iteration  21: 174707.436 ops/s
# Warmup Iteration  22: 174842.650 ops/s
# Warmup Iteration  23: 174901.211 ops/s
# Warmup Iteration  24: 175054.788 ops/s
# Warmup Iteration  25: 175069.188 ops/s
# Warmup Iteration  26: 174974.630 ops/s
# Warmup Iteration  27: 174955.956 ops/s
# Warmup Iteration  28: 175041.233 ops/s
# Warmup Iteration  29: 174993.962 ops/s
# Warmup Iteration  30: 174855.033 ops/s
Iteration   1: 175100.651 ops/s
Iteration   2: 174671.298 ops/s
Iteration   3: 174894.674 ops/s
Iteration   4: 175053.388 ops/s
Iteration   5: 174995.035 ops/s
Iteration   6: 175256.107 ops/s
Iteration   7: 175017.827 ops/s
Iteration   8: 175223.083 ops/s
Iteration   9: 175164.248 ops/s
Iteration  10: 175213.067 ops/s
Iteration  11: 174786.665 ops/s
Iteration  12: 174983.736 ops/s
Iteration  13: 174708.577 ops/s
Iteration  14: 174944.417 ops/s
Iteration  15: 175400.448 ops/s
Iteration  16: 175065.537 ops/s
Iteration  17: 175008.683 ops/s
Iteration  18: 174914.626 ops/s
Iteration  19: 175187.726 ops/s
Iteration  20: 175048.983 ops/s
Iteration  21: 175042.648 ops/s
Iteration  22: 175039.291 ops/s
Iteration  23: 175193.200 ops/s
Iteration  24: 175275.846 ops/s
Iteration  25: 174995.087 ops/s
Iteration  26: 175434.277 ops/s
Iteration  27: 174967.543 ops/s
Iteration  28: 175374.911 ops/s
Iteration  29: 175039.084 ops/s
Iteration  30: 175049.607 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_778._Benchmark.benchmark_Cluster_778":
  175068.342 ±(99.9%) 122.475 ops/s [Average]
  (min, avg, max) = (174671.298, 175068.342, 175434.277), stdev = 183.315
  CI (99.9%): [174945.867, 175190.817] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_778._Benchmark.benchmark_Cluster_778  thrpt   30  175068.342 ± 122.475  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_779._Benchmark.benchmark_Cluster_779$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_779._Benchmark.benchmark_Cluster_779

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 38876.368 ops/s
# Warmup Iteration   2: 106325.131 ops/s
# Warmup Iteration   3: 156773.373 ops/s
# Warmup Iteration   4: 157640.153 ops/s
# Warmup Iteration   5: 128345.419 ops/s
# Warmup Iteration   6: 153796.021 ops/s
# Warmup Iteration   7: 158083.635 ops/s
# Warmup Iteration   8: 158057.363 ops/s
# Warmup Iteration   9: 157780.847 ops/s
# Warmup Iteration  10: 158151.842 ops/s
# Warmup Iteration  11: 158211.918 ops/s
# Warmup Iteration  12: 157797.380 ops/s
# Warmup Iteration  13: 158111.810 ops/s
# Warmup Iteration  14: 158069.039 ops/s
# Warmup Iteration  15: 157482.683 ops/s
# Warmup Iteration  16: 158098.348 ops/s
# Warmup Iteration  17: 158151.347 ops/s
# Warmup Iteration  18: 157634.240 ops/s
# Warmup Iteration  19: 157719.795 ops/s
# Warmup Iteration  20: 157799.941 ops/s
# Warmup Iteration  21: 158060.345 ops/s
# Warmup Iteration  22: 157967.660 ops/s
# Warmup Iteration  23: 157254.057 ops/s
# Warmup Iteration  24: 157855.831 ops/s
# Warmup Iteration  25: 157694.526 ops/s
# Warmup Iteration  26: 158015.658 ops/s
# Warmup Iteration  27: 158090.778 ops/s
# Warmup Iteration  28: 158208.700 ops/s
# Warmup Iteration  29: 158034.438 ops/s
# Warmup Iteration  30: 158342.924 ops/s
Iteration   1: 157200.630 ops/s
Iteration   2: 158179.119 ops/s
Iteration   3: 157717.173 ops/s
Iteration   4: 158158.184 ops/s
Iteration   5: 158062.083 ops/s
Iteration   6: 158159.898 ops/s
Iteration   7: 158096.207 ops/s
Iteration   8: 158163.607 ops/s
Iteration   9: 158382.562 ops/s
Iteration  10: 157407.287 ops/s
Iteration  11: 157340.635 ops/s
Iteration  12: 158299.828 ops/s
Iteration  13: 158210.850 ops/s
Iteration  14: 158381.660 ops/s
Iteration  15: 157844.034 ops/s
Iteration  16: 158190.738 ops/s
Iteration  17: 158341.525 ops/s
Iteration  18: 158486.743 ops/s
Iteration  19: 157602.406 ops/s
Iteration  20: 158180.933 ops/s
Iteration  21: 157866.106 ops/s
Iteration  22: 158421.687 ops/s
Iteration  23: 158189.436 ops/s
Iteration  24: 158196.057 ops/s
Iteration  25: 157910.158 ops/s
Iteration  26: 158234.918 ops/s
Iteration  27: 157532.984 ops/s
Iteration  28: 157345.941 ops/s
Iteration  29: 157742.286 ops/s
Iteration  30: 158135.223 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_779._Benchmark.benchmark_Cluster_779":
  157999.363 ±(99.9%) 239.385 ops/s [Average]
  (min, avg, max) = (157200.630, 157999.363, 158486.743), stdev = 358.299
  CI (99.9%): [157759.979, 158238.748] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_779._Benchmark.benchmark_Cluster_779  thrpt   30  157999.363 ± 239.385  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_78._Benchmark.benchmark_Cluster_78$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_78._Benchmark.benchmark_Cluster_78

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53214.051 ops/s
# Warmup Iteration   2: 94643.435 ops/s
# Warmup Iteration   3: 143063.113 ops/s
# Warmup Iteration   4: 142737.085 ops/s
# Warmup Iteration   5: 143627.037 ops/s
# Warmup Iteration   6: 144173.790 ops/s
# Warmup Iteration   7: 110580.050 ops/s
# Warmup Iteration   8: 143469.672 ops/s
# Warmup Iteration   9: 143551.997 ops/s
# Warmup Iteration  10: 143227.302 ops/s
# Warmup Iteration  11: 143355.906 ops/s
# Warmup Iteration  12: 143593.373 ops/s
# Warmup Iteration  13: 143481.658 ops/s
# Warmup Iteration  14: 143663.561 ops/s
# Warmup Iteration  15: 143317.498 ops/s
# Warmup Iteration  16: 143659.674 ops/s
# Warmup Iteration  17: 145029.655 ops/s
# Warmup Iteration  18: 145065.726 ops/s
# Warmup Iteration  19: 144796.886 ops/s
# Warmup Iteration  20: 144784.744 ops/s
# Warmup Iteration  21: 144624.836 ops/s
# Warmup Iteration  22: 144508.174 ops/s
# Warmup Iteration  23: 144400.878 ops/s
# Warmup Iteration  24: 144894.903 ops/s
# Warmup Iteration  25: 144761.653 ops/s
# Warmup Iteration  26: 144567.350 ops/s
# Warmup Iteration  27: 144732.217 ops/s
# Warmup Iteration  28: 144958.342 ops/s
# Warmup Iteration  29: 144658.849 ops/s
# Warmup Iteration  30: 144580.289 ops/s
Iteration   1: 144937.313 ops/s
Iteration   2: 144967.270 ops/s
Iteration   3: 145211.022 ops/s
Iteration   4: 144271.423 ops/s
Iteration   5: 145059.129 ops/s
Iteration   6: 144573.532 ops/s
Iteration   7: 145357.053 ops/s
Iteration   8: 144382.810 ops/s
Iteration   9: 145235.502 ops/s
Iteration  10: 144774.621 ops/s
Iteration  11: 144842.431 ops/s
Iteration  12: 145025.575 ops/s
Iteration  13: 145109.737 ops/s
Iteration  14: 144388.053 ops/s
Iteration  15: 145127.291 ops/s
Iteration  16: 144387.393 ops/s
Iteration  17: 144301.716 ops/s
Iteration  18: 144688.696 ops/s
Iteration  19: 144829.556 ops/s
Iteration  20: 144835.129 ops/s
Iteration  21: 144600.040 ops/s
Iteration  22: 144743.789 ops/s
Iteration  23: 144741.486 ops/s
Iteration  24: 144696.622 ops/s
Iteration  25: 145085.302 ops/s
Iteration  26: 144423.901 ops/s
Iteration  27: 144274.005 ops/s
Iteration  28: 144449.867 ops/s
Iteration  29: 144774.203 ops/s
Iteration  30: 144546.997 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_78._Benchmark.benchmark_Cluster_78":
  144754.715 ±(99.9%) 208.683 ops/s [Average]
  (min, avg, max) = (144271.423, 144754.715, 145357.053), stdev = 312.347
  CI (99.9%): [144546.032, 144963.398] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_78._Benchmark.benchmark_Cluster_78  thrpt   30  144754.715 ± 208.683  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_780._Benchmark.benchmark_Cluster_780$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_780._Benchmark.benchmark_Cluster_780

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 107459.840 ops/s
# Warmup Iteration   2: 127942.245 ops/s
# Warmup Iteration   3: 197216.095 ops/s
# Warmup Iteration   4: 196154.590 ops/s
# Warmup Iteration   5: 196184.577 ops/s
# Warmup Iteration   6: 197437.157 ops/s
# Warmup Iteration   7: 197138.637 ops/s
# Warmup Iteration   8: 197830.135 ops/s
# Warmup Iteration   9: 191440.206 ops/s
# Warmup Iteration  10: 161046.203 ops/s
# Warmup Iteration  11: 197551.550 ops/s
# Warmup Iteration  12: 197891.928 ops/s
# Warmup Iteration  13: 197505.109 ops/s
# Warmup Iteration  14: 197188.671 ops/s
# Warmup Iteration  15: 197644.513 ops/s
# Warmup Iteration  16: 197340.483 ops/s
# Warmup Iteration  17: 203042.037 ops/s
# Warmup Iteration  18: 202889.667 ops/s
# Warmup Iteration  19: 202774.172 ops/s
# Warmup Iteration  20: 203000.976 ops/s
# Warmup Iteration  21: 203004.791 ops/s
# Warmup Iteration  22: 203202.030 ops/s
# Warmup Iteration  23: 202984.178 ops/s
# Warmup Iteration  24: 202661.578 ops/s
# Warmup Iteration  25: 203127.256 ops/s
# Warmup Iteration  26: 203196.188 ops/s
# Warmup Iteration  27: 202866.037 ops/s
# Warmup Iteration  28: 202957.406 ops/s
# Warmup Iteration  29: 203077.536 ops/s
# Warmup Iteration  30: 202671.721 ops/s
Iteration   1: 203149.306 ops/s
Iteration   2: 202957.666 ops/s
Iteration   3: 203248.518 ops/s
Iteration   4: 203237.973 ops/s
Iteration   5: 202887.461 ops/s
Iteration   6: 202940.301 ops/s
Iteration   7: 202757.666 ops/s
Iteration   8: 202613.716 ops/s
Iteration   9: 203335.971 ops/s
Iteration  10: 203158.503 ops/s
Iteration  11: 202952.825 ops/s
Iteration  12: 203327.327 ops/s
Iteration  13: 203172.663 ops/s
Iteration  14: 203059.453 ops/s
Iteration  15: 203341.448 ops/s
Iteration  16: 203123.603 ops/s
Iteration  17: 203343.591 ops/s
Iteration  18: 203024.423 ops/s
Iteration  19: 203101.984 ops/s
Iteration  20: 202581.166 ops/s
Iteration  21: 202941.580 ops/s
Iteration  22: 203361.696 ops/s
Iteration  23: 203648.215 ops/s
Iteration  24: 203476.926 ops/s
Iteration  25: 203413.403 ops/s
Iteration  26: 203493.526 ops/s
Iteration  27: 203221.303 ops/s
Iteration  28: 203638.372 ops/s
Iteration  29: 202982.080 ops/s
Iteration  30: 203200.502 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_780._Benchmark.benchmark_Cluster_780":
  203156.439 ±(99.9%) 177.326 ops/s [Average]
  (min, avg, max) = (202581.166, 203156.439, 203648.215), stdev = 265.412
  CI (99.9%): [202979.113, 203333.764] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_780._Benchmark.benchmark_Cluster_780  thrpt   30  203156.439 ± 177.326  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_781._Benchmark.benchmark_Cluster_781$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_781._Benchmark.benchmark_Cluster_781

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67021.308 ops/s
# Warmup Iteration   2: 87003.814 ops/s
# Warmup Iteration   3: 126232.979 ops/s
# Warmup Iteration   4: 138187.508 ops/s
# Warmup Iteration   5: 137137.342 ops/s
# Warmup Iteration   6: 138930.916 ops/s
# Warmup Iteration   7: 138303.838 ops/s
# Warmup Iteration   8: 138670.528 ops/s
# Warmup Iteration   9: 138437.738 ops/s
# Warmup Iteration  10: 137013.898 ops/s
# Warmup Iteration  11: 107290.043 ops/s
# Warmup Iteration  12: 138525.997 ops/s
# Warmup Iteration  13: 138947.892 ops/s
# Warmup Iteration  14: 138613.024 ops/s
# Warmup Iteration  15: 138454.297 ops/s
# Warmup Iteration  16: 138449.345 ops/s
# Warmup Iteration  17: 142563.130 ops/s
# Warmup Iteration  18: 142528.186 ops/s
# Warmup Iteration  19: 142933.737 ops/s
# Warmup Iteration  20: 143010.671 ops/s
# Warmup Iteration  21: 143038.353 ops/s
# Warmup Iteration  22: 142697.451 ops/s
# Warmup Iteration  23: 142304.917 ops/s
# Warmup Iteration  24: 142797.413 ops/s
# Warmup Iteration  25: 142416.409 ops/s
# Warmup Iteration  26: 142826.464 ops/s
# Warmup Iteration  27: 142994.439 ops/s
# Warmup Iteration  28: 142870.466 ops/s
# Warmup Iteration  29: 142897.165 ops/s
# Warmup Iteration  30: 142950.563 ops/s
Iteration   1: 142475.878 ops/s
Iteration   2: 142466.062 ops/s
Iteration   3: 142874.870 ops/s
Iteration   4: 142609.151 ops/s
Iteration   5: 142827.923 ops/s
Iteration   6: 142832.191 ops/s
Iteration   7: 143194.834 ops/s
Iteration   8: 143392.223 ops/s
Iteration   9: 143047.633 ops/s
Iteration  10: 143108.813 ops/s
Iteration  11: 142719.548 ops/s
Iteration  12: 142779.340 ops/s
Iteration  13: 142672.589 ops/s
Iteration  14: 143194.696 ops/s
Iteration  15: 142511.266 ops/s
Iteration  16: 142466.735 ops/s
Iteration  17: 142724.597 ops/s
Iteration  18: 142764.520 ops/s
Iteration  19: 142907.085 ops/s
Iteration  20: 142805.977 ops/s
Iteration  21: 142689.821 ops/s
Iteration  22: 143046.476 ops/s
Iteration  23: 142539.689 ops/s
Iteration  24: 142644.356 ops/s
Iteration  25: 142726.072 ops/s
Iteration  26: 142399.186 ops/s
Iteration  27: 142417.518 ops/s
Iteration  28: 142820.860 ops/s
Iteration  29: 142593.293 ops/s
Iteration  30: 143026.627 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_781._Benchmark.benchmark_Cluster_781":
  142775.994 ±(99.9%) 169.659 ops/s [Average]
  (min, avg, max) = (142399.186, 142775.994, 143392.223), stdev = 253.937
  CI (99.9%): [142606.335, 142945.653] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_781._Benchmark.benchmark_Cluster_781  thrpt   30  142775.994 ± 169.659  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_782._Benchmark.benchmark_Cluster_782$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_782._Benchmark.benchmark_Cluster_782

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67240.179 ops/s
# Warmup Iteration   2: 92371.494 ops/s
# Warmup Iteration   3: 142986.105 ops/s
# Warmup Iteration   4: 142355.162 ops/s
# Warmup Iteration   5: 143735.194 ops/s
# Warmup Iteration   6: 143186.310 ops/s
# Warmup Iteration   7: 143653.476 ops/s
# Warmup Iteration   8: 112217.818 ops/s
# Warmup Iteration   9: 143676.211 ops/s
# Warmup Iteration  10: 143527.205 ops/s
# Warmup Iteration  11: 143537.566 ops/s
# Warmup Iteration  12: 143431.634 ops/s
# Warmup Iteration  13: 143672.320 ops/s
# Warmup Iteration  14: 143436.300 ops/s
# Warmup Iteration  15: 143060.667 ops/s
# Warmup Iteration  16: 143347.853 ops/s
# Warmup Iteration  17: 144972.116 ops/s
# Warmup Iteration  18: 144919.832 ops/s
# Warmup Iteration  19: 144882.323 ops/s
# Warmup Iteration  20: 145119.908 ops/s
# Warmup Iteration  21: 144824.554 ops/s
# Warmup Iteration  22: 144870.990 ops/s
# Warmup Iteration  23: 144493.245 ops/s
# Warmup Iteration  24: 144669.001 ops/s
# Warmup Iteration  25: 144646.211 ops/s
# Warmup Iteration  26: 144643.727 ops/s
# Warmup Iteration  27: 145037.301 ops/s
# Warmup Iteration  28: 145074.000 ops/s
# Warmup Iteration  29: 144853.964 ops/s
# Warmup Iteration  30: 145187.222 ops/s
Iteration   1: 144928.114 ops/s
Iteration   2: 144775.956 ops/s
Iteration   3: 145078.216 ops/s
Iteration   4: 144715.622 ops/s
Iteration   5: 144656.660 ops/s
Iteration   6: 144174.550 ops/s
Iteration   7: 144806.048 ops/s
Iteration   8: 144705.408 ops/s
Iteration   9: 145113.198 ops/s
Iteration  10: 144617.946 ops/s
Iteration  11: 144786.809 ops/s
Iteration  12: 145043.542 ops/s
Iteration  13: 144639.458 ops/s
Iteration  14: 144859.869 ops/s
Iteration  15: 144821.515 ops/s
Iteration  16: 144861.700 ops/s
Iteration  17: 144944.304 ops/s
Iteration  18: 144532.444 ops/s
Iteration  19: 145042.911 ops/s
Iteration  20: 144950.489 ops/s
Iteration  21: 144762.418 ops/s
Iteration  22: 144546.676 ops/s
Iteration  23: 145067.905 ops/s
Iteration  24: 144986.464 ops/s
Iteration  25: 144898.976 ops/s
Iteration  26: 144504.791 ops/s
Iteration  27: 145110.577 ops/s
Iteration  28: 144789.125 ops/s
Iteration  29: 144608.589 ops/s
Iteration  30: 144994.624 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_782._Benchmark.benchmark_Cluster_782":
  144810.830 ±(99.9%) 144.540 ops/s [Average]
  (min, avg, max) = (144174.550, 144810.830, 145113.198), stdev = 216.341
  CI (99.9%): [144666.290, 144955.370] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_782._Benchmark.benchmark_Cluster_782  thrpt   30  144810.830 ± 144.540  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_783._Benchmark.benchmark_Cluster_783$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_783._Benchmark.benchmark_Cluster_783

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59341.809 ops/s
# Warmup Iteration   2: 113319.179 ops/s
# Warmup Iteration   3: 158323.689 ops/s
# Warmup Iteration   4: 159750.651 ops/s
# Warmup Iteration   5: 159585.922 ops/s
# Warmup Iteration   6: 141780.015 ops/s
# Warmup Iteration   7: 144581.146 ops/s
# Warmup Iteration   8: 159186.196 ops/s
# Warmup Iteration   9: 159451.849 ops/s
# Warmup Iteration  10: 159699.235 ops/s
# Warmup Iteration  11: 159576.136 ops/s
# Warmup Iteration  12: 159541.783 ops/s
# Warmup Iteration  13: 159661.111 ops/s
# Warmup Iteration  14: 159670.169 ops/s
# Warmup Iteration  15: 159669.226 ops/s
# Warmup Iteration  16: 159473.473 ops/s
# Warmup Iteration  17: 159211.754 ops/s
# Warmup Iteration  18: 159456.373 ops/s
# Warmup Iteration  19: 159593.205 ops/s
# Warmup Iteration  20: 159497.396 ops/s
# Warmup Iteration  21: 159611.722 ops/s
# Warmup Iteration  22: 159427.841 ops/s
# Warmup Iteration  23: 159402.822 ops/s
# Warmup Iteration  24: 159377.077 ops/s
# Warmup Iteration  25: 159396.937 ops/s
# Warmup Iteration  26: 159586.777 ops/s
# Warmup Iteration  27: 159582.915 ops/s
# Warmup Iteration  28: 159441.211 ops/s
# Warmup Iteration  29: 159491.564 ops/s
# Warmup Iteration  30: 159479.534 ops/s
Iteration   1: 159505.763 ops/s
Iteration   2: 159621.067 ops/s
Iteration   3: 159327.487 ops/s
Iteration   4: 159508.304 ops/s
Iteration   5: 159610.221 ops/s
Iteration   6: 159678.942 ops/s
Iteration   7: 159209.501 ops/s
Iteration   8: 159561.095 ops/s
Iteration   9: 159300.576 ops/s
Iteration  10: 159708.812 ops/s
Iteration  11: 159501.381 ops/s
Iteration  12: 159609.685 ops/s
Iteration  13: 159210.523 ops/s
Iteration  14: 159301.992 ops/s
Iteration  15: 159245.735 ops/s
Iteration  16: 159602.330 ops/s
Iteration  17: 159286.915 ops/s
Iteration  18: 159277.497 ops/s
Iteration  19: 159517.355 ops/s
Iteration  20: 159533.961 ops/s
Iteration  21: 159845.937 ops/s
Iteration  22: 159296.837 ops/s
Iteration  23: 159328.757 ops/s
Iteration  24: 159387.278 ops/s
Iteration  25: 159848.339 ops/s
Iteration  26: 159555.974 ops/s
Iteration  27: 159721.385 ops/s
Iteration  28: 159591.434 ops/s
Iteration  29: 159546.772 ops/s
Iteration  30: 159427.316 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_783._Benchmark.benchmark_Cluster_783":
  159488.972 ±(99.9%) 121.264 ops/s [Average]
  (min, avg, max) = (159209.501, 159488.972, 159848.339), stdev = 181.503
  CI (99.9%): [159367.708, 159610.237] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_783._Benchmark.benchmark_Cluster_783  thrpt   30  159488.972 ± 121.264  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_784._Benchmark.benchmark_Cluster_784$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_784._Benchmark.benchmark_Cluster_784

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55817.929 ops/s
# Warmup Iteration   2: 105054.840 ops/s
# Warmup Iteration   3: 157905.211 ops/s
# Warmup Iteration   4: 156866.902 ops/s
# Warmup Iteration   5: 158395.404 ops/s
# Warmup Iteration   6: 158376.131 ops/s
# Warmup Iteration   7: 124592.550 ops/s
# Warmup Iteration   8: 158363.172 ops/s
# Warmup Iteration   9: 158288.887 ops/s
# Warmup Iteration  10: 158436.502 ops/s
# Warmup Iteration  11: 158478.022 ops/s
# Warmup Iteration  12: 158269.014 ops/s
# Warmup Iteration  13: 158223.233 ops/s
# Warmup Iteration  14: 158531.086 ops/s
# Warmup Iteration  15: 158238.974 ops/s
# Warmup Iteration  16: 158297.494 ops/s
# Warmup Iteration  17: 158257.494 ops/s
# Warmup Iteration  18: 158283.516 ops/s
# Warmup Iteration  19: 158604.219 ops/s
# Warmup Iteration  20: 158499.373 ops/s
# Warmup Iteration  21: 158453.511 ops/s
# Warmup Iteration  22: 158156.120 ops/s
# Warmup Iteration  23: 158285.786 ops/s
# Warmup Iteration  24: 158025.894 ops/s
# Warmup Iteration  25: 158270.342 ops/s
# Warmup Iteration  26: 158360.507 ops/s
# Warmup Iteration  27: 158119.474 ops/s
# Warmup Iteration  28: 158343.180 ops/s
# Warmup Iteration  29: 158236.469 ops/s
# Warmup Iteration  30: 158534.651 ops/s
Iteration   1: 158368.330 ops/s
Iteration   2: 157987.051 ops/s
Iteration   3: 158051.245 ops/s
Iteration   4: 158128.393 ops/s
Iteration   5: 158442.842 ops/s
Iteration   6: 158055.008 ops/s
Iteration   7: 158210.886 ops/s
Iteration   8: 158274.875 ops/s
Iteration   9: 157994.267 ops/s
Iteration  10: 158083.168 ops/s
Iteration  11: 158326.349 ops/s
Iteration  12: 158418.137 ops/s
Iteration  13: 158425.115 ops/s
Iteration  14: 158163.505 ops/s
Iteration  15: 158496.334 ops/s
Iteration  16: 158180.528 ops/s
Iteration  17: 158667.538 ops/s
Iteration  18: 158248.158 ops/s
Iteration  19: 158389.020 ops/s
Iteration  20: 158111.881 ops/s
Iteration  21: 158114.339 ops/s
Iteration  22: 158068.244 ops/s
Iteration  23: 158566.030 ops/s
Iteration  24: 158185.968 ops/s
Iteration  25: 158731.982 ops/s
Iteration  26: 158357.340 ops/s
Iteration  27: 158786.153 ops/s
Iteration  28: 158495.385 ops/s
Iteration  29: 158335.020 ops/s
Iteration  30: 158091.322 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_784._Benchmark.benchmark_Cluster_784":
  158291.814 ±(99.9%) 146.029 ops/s [Average]
  (min, avg, max) = (157987.051, 158291.814, 158786.153), stdev = 218.569
  CI (99.9%): [158145.785, 158437.842] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_784._Benchmark.benchmark_Cluster_784  thrpt   30  158291.814 ± 146.029  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_785._Benchmark.benchmark_Cluster_785$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_785._Benchmark.benchmark_Cluster_785

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43242.466 ops/s
# Warmup Iteration   2: 81989.858 ops/s
# Warmup Iteration   3: 128725.945 ops/s
# Warmup Iteration   4: 127574.315 ops/s
# Warmup Iteration   5: 128327.260 ops/s
# Warmup Iteration   6: 129035.714 ops/s
# Warmup Iteration   7: 100999.174 ops/s
# Warmup Iteration   8: 128314.339 ops/s
# Warmup Iteration   9: 128996.687 ops/s
# Warmup Iteration  10: 128731.616 ops/s
# Warmup Iteration  11: 129434.445 ops/s
# Warmup Iteration  12: 129238.977 ops/s
# Warmup Iteration  13: 129140.308 ops/s
# Warmup Iteration  14: 129214.737 ops/s
# Warmup Iteration  15: 128567.833 ops/s
# Warmup Iteration  16: 128471.295 ops/s
# Warmup Iteration  17: 133450.338 ops/s
# Warmup Iteration  18: 132928.735 ops/s
# Warmup Iteration  19: 133051.840 ops/s
# Warmup Iteration  20: 133114.671 ops/s
# Warmup Iteration  21: 133401.919 ops/s
# Warmup Iteration  22: 133257.976 ops/s
# Warmup Iteration  23: 133227.643 ops/s
# Warmup Iteration  24: 133395.793 ops/s
# Warmup Iteration  25: 133412.352 ops/s
# Warmup Iteration  26: 133534.839 ops/s
# Warmup Iteration  27: 133559.223 ops/s
# Warmup Iteration  28: 133679.556 ops/s
# Warmup Iteration  29: 132945.663 ops/s
# Warmup Iteration  30: 132230.231 ops/s
Iteration   1: 133048.772 ops/s
Iteration   2: 133407.765 ops/s
Iteration   3: 133606.398 ops/s
Iteration   4: 132228.937 ops/s
Iteration   5: 132966.108 ops/s
Iteration   6: 133543.736 ops/s
Iteration   7: 133645.867 ops/s
Iteration   8: 133557.020 ops/s
Iteration   9: 132749.875 ops/s
Iteration  10: 132267.295 ops/s
Iteration  11: 132452.518 ops/s
Iteration  12: 132446.227 ops/s
Iteration  13: 131997.257 ops/s
Iteration  14: 133437.332 ops/s
Iteration  15: 133428.014 ops/s
Iteration  16: 133727.137 ops/s
Iteration  17: 133726.471 ops/s
Iteration  18: 132869.019 ops/s
Iteration  19: 132784.441 ops/s
Iteration  20: 133183.530 ops/s
Iteration  21: 133127.724 ops/s
Iteration  22: 133915.008 ops/s
Iteration  23: 133847.422 ops/s
Iteration  24: 133484.096 ops/s
Iteration  25: 133423.474 ops/s
Iteration  26: 133481.996 ops/s
Iteration  27: 133038.974 ops/s
Iteration  28: 133706.148 ops/s
Iteration  29: 132781.059 ops/s
Iteration  30: 133192.407 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_785._Benchmark.benchmark_Cluster_785":
  133169.068 ±(99.9%) 347.382 ops/s [Average]
  (min, avg, max) = (131997.257, 133169.068, 133915.008), stdev = 519.946
  CI (99.9%): [132821.685, 133516.450] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_785._Benchmark.benchmark_Cluster_785  thrpt   30  133169.068 ± 347.382  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_786._Benchmark.benchmark_Cluster_786$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_786._Benchmark.benchmark_Cluster_786

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48436.367 ops/s
# Warmup Iteration   2: 100334.145 ops/s
# Warmup Iteration   3: 148633.361 ops/s
# Warmup Iteration   4: 147780.486 ops/s
# Warmup Iteration   5: 148728.708 ops/s
# Warmup Iteration   6: 147106.935 ops/s
# Warmup Iteration   7: 119596.705 ops/s
# Warmup Iteration   8: 148779.838 ops/s
# Warmup Iteration   9: 148908.703 ops/s
# Warmup Iteration  10: 149044.661 ops/s
# Warmup Iteration  11: 148800.216 ops/s
# Warmup Iteration  12: 149170.771 ops/s
# Warmup Iteration  13: 148966.120 ops/s
# Warmup Iteration  14: 149026.560 ops/s
# Warmup Iteration  15: 148754.004 ops/s
# Warmup Iteration  16: 148826.412 ops/s
# Warmup Iteration  17: 148699.688 ops/s
# Warmup Iteration  18: 148547.445 ops/s
# Warmup Iteration  19: 148639.849 ops/s
# Warmup Iteration  20: 148517.017 ops/s
# Warmup Iteration  21: 148497.685 ops/s
# Warmup Iteration  22: 148629.565 ops/s
# Warmup Iteration  23: 148683.175 ops/s
# Warmup Iteration  24: 148789.768 ops/s
# Warmup Iteration  25: 148961.079 ops/s
# Warmup Iteration  26: 148919.694 ops/s
# Warmup Iteration  27: 148743.987 ops/s
# Warmup Iteration  28: 148889.688 ops/s
# Warmup Iteration  29: 148514.561 ops/s
# Warmup Iteration  30: 148329.258 ops/s
Iteration   1: 148902.795 ops/s
Iteration   2: 148659.392 ops/s
Iteration   3: 148471.359 ops/s
Iteration   4: 148888.048 ops/s
Iteration   5: 148752.804 ops/s
Iteration   6: 149244.798 ops/s
Iteration   7: 148936.414 ops/s
Iteration   8: 149065.515 ops/s
Iteration   9: 148741.535 ops/s
Iteration  10: 148628.333 ops/s
Iteration  11: 148620.721 ops/s
Iteration  12: 148739.056 ops/s
Iteration  13: 148494.643 ops/s
Iteration  14: 148894.423 ops/s
Iteration  15: 148751.078 ops/s
Iteration  16: 148930.621 ops/s
Iteration  17: 148576.507 ops/s
Iteration  18: 148708.014 ops/s
Iteration  19: 148705.861 ops/s
Iteration  20: 148547.514 ops/s
Iteration  21: 148329.202 ops/s
Iteration  22: 148827.057 ops/s
Iteration  23: 148460.055 ops/s
Iteration  24: 148604.380 ops/s
Iteration  25: 149143.187 ops/s
Iteration  26: 148388.252 ops/s
Iteration  27: 149183.842 ops/s
Iteration  28: 148664.937 ops/s
Iteration  29: 148807.289 ops/s
Iteration  30: 148733.335 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_786._Benchmark.benchmark_Cluster_786":
  148746.699 ±(99.9%) 152.203 ops/s [Average]
  (min, avg, max) = (148329.202, 148746.699, 149244.798), stdev = 227.810
  CI (99.9%): [148594.496, 148898.902] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_786._Benchmark.benchmark_Cluster_786  thrpt   30  148746.699 ± 152.203  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_787._Benchmark.benchmark_Cluster_787$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_787._Benchmark.benchmark_Cluster_787

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52187.148 ops/s
# Warmup Iteration   2: 98336.967 ops/s
# Warmup Iteration   3: 160857.781 ops/s
# Warmup Iteration   4: 159951.683 ops/s
# Warmup Iteration   5: 160973.442 ops/s
# Warmup Iteration   6: 161237.253 ops/s
# Warmup Iteration   7: 155443.286 ops/s
# Warmup Iteration   8: 132658.084 ops/s
# Warmup Iteration   9: 160943.111 ops/s
# Warmup Iteration  10: 160852.867 ops/s
# Warmup Iteration  11: 161105.094 ops/s
# Warmup Iteration  12: 161038.875 ops/s
# Warmup Iteration  13: 160867.804 ops/s
# Warmup Iteration  14: 160954.418 ops/s
# Warmup Iteration  15: 161032.716 ops/s
# Warmup Iteration  16: 161115.388 ops/s
# Warmup Iteration  17: 160814.445 ops/s
# Warmup Iteration  18: 160911.627 ops/s
# Warmup Iteration  19: 160718.036 ops/s
# Warmup Iteration  20: 160764.120 ops/s
# Warmup Iteration  21: 160879.564 ops/s
# Warmup Iteration  22: 161223.049 ops/s
# Warmup Iteration  23: 160896.723 ops/s
# Warmup Iteration  24: 160852.686 ops/s
# Warmup Iteration  25: 161036.149 ops/s
# Warmup Iteration  26: 161067.993 ops/s
# Warmup Iteration  27: 161183.407 ops/s
# Warmup Iteration  28: 160854.002 ops/s
# Warmup Iteration  29: 160845.614 ops/s
# Warmup Iteration  30: 161169.649 ops/s
Iteration   1: 160870.804 ops/s
Iteration   2: 160948.213 ops/s
Iteration   3: 160917.483 ops/s
Iteration   4: 161234.051 ops/s
Iteration   5: 160935.562 ops/s
Iteration   6: 160968.872 ops/s
Iteration   7: 160750.935 ops/s
Iteration   8: 160981.253 ops/s
Iteration   9: 161134.758 ops/s
Iteration  10: 161039.326 ops/s
Iteration  11: 161277.945 ops/s
Iteration  12: 160810.488 ops/s
Iteration  13: 160971.751 ops/s
Iteration  14: 160840.329 ops/s
Iteration  15: 160951.105 ops/s
Iteration  16: 161202.005 ops/s
Iteration  17: 161154.863 ops/s
Iteration  18: 161103.423 ops/s
Iteration  19: 161162.090 ops/s
Iteration  20: 161324.496 ops/s
Iteration  21: 161169.862 ops/s
Iteration  22: 161331.831 ops/s
Iteration  23: 160917.296 ops/s
Iteration  24: 161295.268 ops/s
Iteration  25: 161212.138 ops/s
Iteration  26: 161087.907 ops/s
Iteration  27: 161025.714 ops/s
Iteration  28: 160657.992 ops/s
Iteration  29: 160907.503 ops/s
Iteration  30: 160897.151 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_787._Benchmark.benchmark_Cluster_787":
  161036.080 ±(99.9%) 117.732 ops/s [Average]
  (min, avg, max) = (160657.992, 161036.080, 161331.831), stdev = 176.216
  CI (99.9%): [160918.348, 161153.813] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_787._Benchmark.benchmark_Cluster_787  thrpt   30  161036.080 ± 117.732  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_788._Benchmark.benchmark_Cluster_788$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_788._Benchmark.benchmark_Cluster_788

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45136.247 ops/s
# Warmup Iteration   2: 112175.229 ops/s
# Warmup Iteration   3: 157498.060 ops/s
# Warmup Iteration   4: 158451.791 ops/s
# Warmup Iteration   5: 134015.038 ops/s
# Warmup Iteration   6: 151150.338 ops/s
# Warmup Iteration   7: 159556.866 ops/s
# Warmup Iteration   8: 159414.046 ops/s
# Warmup Iteration   9: 159426.188 ops/s
# Warmup Iteration  10: 159595.999 ops/s
# Warmup Iteration  11: 158713.173 ops/s
# Warmup Iteration  12: 159325.874 ops/s
# Warmup Iteration  13: 159189.968 ops/s
# Warmup Iteration  14: 159052.449 ops/s
# Warmup Iteration  15: 159293.902 ops/s
# Warmup Iteration  16: 158851.110 ops/s
# Warmup Iteration  17: 159547.375 ops/s
# Warmup Iteration  18: 158972.799 ops/s
# Warmup Iteration  19: 158980.070 ops/s
# Warmup Iteration  20: 159075.424 ops/s
# Warmup Iteration  21: 159108.565 ops/s
# Warmup Iteration  22: 159243.916 ops/s
# Warmup Iteration  23: 159308.845 ops/s
# Warmup Iteration  24: 159534.830 ops/s
# Warmup Iteration  25: 158796.387 ops/s
# Warmup Iteration  26: 159174.049 ops/s
# Warmup Iteration  27: 159507.621 ops/s
# Warmup Iteration  28: 158817.594 ops/s
# Warmup Iteration  29: 158695.049 ops/s
# Warmup Iteration  30: 159602.189 ops/s
Iteration   1: 158749.972 ops/s
Iteration   2: 158949.423 ops/s
Iteration   3: 159125.833 ops/s
Iteration   4: 159595.153 ops/s
Iteration   5: 158987.383 ops/s
Iteration   6: 158729.095 ops/s
Iteration   7: 159001.534 ops/s
Iteration   8: 158999.475 ops/s
Iteration   9: 159066.572 ops/s
Iteration  10: 159286.210 ops/s
Iteration  11: 159254.208 ops/s
Iteration  12: 159009.866 ops/s
Iteration  13: 158833.689 ops/s
Iteration  14: 158901.516 ops/s
Iteration  15: 158949.915 ops/s
Iteration  16: 159177.681 ops/s
Iteration  17: 159868.343 ops/s
Iteration  18: 158595.524 ops/s
Iteration  19: 158285.430 ops/s
Iteration  20: 158974.492 ops/s
Iteration  21: 159035.635 ops/s
Iteration  22: 158805.912 ops/s
Iteration  23: 158937.515 ops/s
Iteration  24: 159444.647 ops/s
Iteration  25: 159331.039 ops/s
Iteration  26: 159244.961 ops/s
Iteration  27: 158779.949 ops/s
Iteration  28: 158764.194 ops/s
Iteration  29: 159045.293 ops/s
Iteration  30: 159334.252 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_788._Benchmark.benchmark_Cluster_788":
  159035.490 ±(99.9%) 205.747 ops/s [Average]
  (min, avg, max) = (158285.430, 159035.490, 159868.343), stdev = 307.953
  CI (99.9%): [158829.743, 159241.238] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_788._Benchmark.benchmark_Cluster_788  thrpt   30  159035.490 ± 205.747  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_789._Benchmark.benchmark_Cluster_789$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_789._Benchmark.benchmark_Cluster_789

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 39277.256 ops/s
# Warmup Iteration   2: 66677.060 ops/s
# Warmup Iteration   3: 97817.755 ops/s
# Warmup Iteration   4: 107469.688 ops/s
# Warmup Iteration   5: 107480.833 ops/s
# Warmup Iteration   6: 107156.998 ops/s
# Warmup Iteration   7: 107524.661 ops/s
# Warmup Iteration   8: 102112.038 ops/s
# Warmup Iteration   9: 89381.506 ops/s
# Warmup Iteration  10: 107465.268 ops/s
# Warmup Iteration  11: 107507.151 ops/s
# Warmup Iteration  12: 107249.391 ops/s
# Warmup Iteration  13: 107340.421 ops/s
# Warmup Iteration  14: 107460.716 ops/s
# Warmup Iteration  15: 107168.423 ops/s
# Warmup Iteration  16: 107456.195 ops/s
# Warmup Iteration  17: 107396.136 ops/s
# Warmup Iteration  18: 107119.959 ops/s
# Warmup Iteration  19: 107428.590 ops/s
# Warmup Iteration  20: 107329.593 ops/s
# Warmup Iteration  21: 107288.078 ops/s
# Warmup Iteration  22: 107311.384 ops/s
# Warmup Iteration  23: 107461.953 ops/s
# Warmup Iteration  24: 107332.411 ops/s
# Warmup Iteration  25: 107115.301 ops/s
# Warmup Iteration  26: 107139.869 ops/s
# Warmup Iteration  27: 107103.700 ops/s
# Warmup Iteration  28: 107258.116 ops/s
# Warmup Iteration  29: 107245.465 ops/s
# Warmup Iteration  30: 107207.354 ops/s
Iteration   1: 107054.742 ops/s
Iteration   2: 107528.743 ops/s
Iteration   3: 107263.375 ops/s
Iteration   4: 107272.250 ops/s
Iteration   5: 107320.030 ops/s
Iteration   6: 107212.171 ops/s
Iteration   7: 107238.783 ops/s
Iteration   8: 107046.049 ops/s
Iteration   9: 106657.570 ops/s
Iteration  10: 107422.999 ops/s
Iteration  11: 107370.426 ops/s
Iteration  12: 107122.785 ops/s
Iteration  13: 107195.213 ops/s
Iteration  14: 107145.522 ops/s
Iteration  15: 107062.458 ops/s
Iteration  16: 107389.155 ops/s
Iteration  17: 107310.887 ops/s
Iteration  18: 107137.950 ops/s
Iteration  19: 107255.522 ops/s
Iteration  20: 107240.638 ops/s
Iteration  21: 107007.440 ops/s
Iteration  22: 107157.810 ops/s
Iteration  23: 107430.740 ops/s
Iteration  24: 107231.373 ops/s
Iteration  25: 107253.032 ops/s
Iteration  26: 107385.437 ops/s
Iteration  27: 107125.954 ops/s
Iteration  28: 107391.756 ops/s
Iteration  29: 107328.732 ops/s
Iteration  30: 107121.715 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_789._Benchmark.benchmark_Cluster_789":
  107222.709 ±(99.9%) 112.035 ops/s [Average]
  (min, avg, max) = (106657.570, 107222.709, 107528.743), stdev = 167.689
  CI (99.9%): [107110.673, 107334.744] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_789._Benchmark.benchmark_Cluster_789  thrpt   30  107222.709 ± 112.035  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_79._Benchmark.benchmark_Cluster_79$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_79._Benchmark.benchmark_Cluster_79

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66647.299 ops/s
# Warmup Iteration   2: 127232.756 ops/s
# Warmup Iteration   3: 184275.430 ops/s
# Warmup Iteration   4: 182556.404 ops/s
# Warmup Iteration   5: 183515.274 ops/s
# Warmup Iteration   6: 167898.189 ops/s
# Warmup Iteration   7: 161965.053 ops/s
# Warmup Iteration   8: 184411.178 ops/s
# Warmup Iteration   9: 184465.116 ops/s
# Warmup Iteration  10: 184541.777 ops/s
# Warmup Iteration  11: 185071.053 ops/s
# Warmup Iteration  12: 184752.707 ops/s
# Warmup Iteration  13: 183617.590 ops/s
# Warmup Iteration  14: 184933.570 ops/s
# Warmup Iteration  15: 184641.802 ops/s
# Warmup Iteration  16: 184385.739 ops/s
# Warmup Iteration  17: 187986.325 ops/s
# Warmup Iteration  18: 188309.441 ops/s
# Warmup Iteration  19: 188578.983 ops/s
# Warmup Iteration  20: 188392.301 ops/s
# Warmup Iteration  21: 188626.486 ops/s
# Warmup Iteration  22: 188237.222 ops/s
# Warmup Iteration  23: 188742.904 ops/s
# Warmup Iteration  24: 188331.096 ops/s
# Warmup Iteration  25: 187724.594 ops/s
# Warmup Iteration  26: 188473.004 ops/s
# Warmup Iteration  27: 188553.563 ops/s
# Warmup Iteration  28: 187731.908 ops/s
# Warmup Iteration  29: 187640.550 ops/s
# Warmup Iteration  30: 187821.887 ops/s
Iteration   1: 188164.536 ops/s
Iteration   2: 188772.284 ops/s
Iteration   3: 187721.382 ops/s
Iteration   4: 188073.733 ops/s
Iteration   5: 188758.020 ops/s
Iteration   6: 188453.924 ops/s
Iteration   7: 188246.762 ops/s
Iteration   8: 188325.351 ops/s
Iteration   9: 189052.499 ops/s
Iteration  10: 188525.135 ops/s
Iteration  11: 188796.340 ops/s
Iteration  12: 188124.525 ops/s
Iteration  13: 189108.768 ops/s
Iteration  14: 188592.207 ops/s
Iteration  15: 188980.076 ops/s
Iteration  16: 188284.698 ops/s
Iteration  17: 188817.038 ops/s
Iteration  18: 188120.005 ops/s
Iteration  19: 187581.288 ops/s
Iteration  20: 188074.488 ops/s
Iteration  21: 188240.827 ops/s
Iteration  22: 188961.885 ops/s
Iteration  23: 187785.963 ops/s
Iteration  24: 188517.179 ops/s
Iteration  25: 189223.832 ops/s
Iteration  26: 188930.598 ops/s
Iteration  27: 188425.794 ops/s
Iteration  28: 188900.757 ops/s
Iteration  29: 189265.929 ops/s
Iteration  30: 188449.191 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_79._Benchmark.benchmark_Cluster_79":
  188509.167 ±(99.9%) 300.110 ops/s [Average]
  (min, avg, max) = (187581.288, 188509.167, 189265.929), stdev = 449.190
  CI (99.9%): [188209.057, 188809.277] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_79._Benchmark.benchmark_Cluster_79  thrpt   30  188509.167 ± 300.110  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_790._Benchmark.benchmark_Cluster_790$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_790._Benchmark.benchmark_Cluster_790

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62592.816 ops/s
# Warmup Iteration   2: 148056.879 ops/s
# Warmup Iteration   3: 205896.036 ops/s
# Warmup Iteration   4: 206952.748 ops/s
# Warmup Iteration   5: 207221.129 ops/s
# Warmup Iteration   6: 165316.064 ops/s
# Warmup Iteration   7: 207363.050 ops/s
# Warmup Iteration   8: 207059.893 ops/s
# Warmup Iteration   9: 207006.834 ops/s
# Warmup Iteration  10: 206572.887 ops/s
# Warmup Iteration  11: 206769.906 ops/s
# Warmup Iteration  12: 207095.229 ops/s
# Warmup Iteration  13: 207200.062 ops/s
# Warmup Iteration  14: 206910.891 ops/s
# Warmup Iteration  15: 207252.221 ops/s
# Warmup Iteration  16: 206436.948 ops/s
# Warmup Iteration  17: 206842.610 ops/s
# Warmup Iteration  18: 207305.164 ops/s
# Warmup Iteration  19: 207170.359 ops/s
# Warmup Iteration  20: 207127.265 ops/s
# Warmup Iteration  21: 207350.351 ops/s
# Warmup Iteration  22: 207060.290 ops/s
# Warmup Iteration  23: 207273.768 ops/s
# Warmup Iteration  24: 206765.187 ops/s
# Warmup Iteration  25: 206547.795 ops/s
# Warmup Iteration  26: 207075.637 ops/s
# Warmup Iteration  27: 207011.445 ops/s
# Warmup Iteration  28: 206928.841 ops/s
# Warmup Iteration  29: 206750.073 ops/s
# Warmup Iteration  30: 207342.528 ops/s
Iteration   1: 206977.034 ops/s
Iteration   2: 207695.891 ops/s
Iteration   3: 207057.602 ops/s
Iteration   4: 207059.353 ops/s
Iteration   5: 207555.187 ops/s
Iteration   6: 207557.592 ops/s
Iteration   7: 207005.280 ops/s
Iteration   8: 207340.892 ops/s
Iteration   9: 206908.188 ops/s
Iteration  10: 207140.420 ops/s
Iteration  11: 206878.519 ops/s
Iteration  12: 207083.219 ops/s
Iteration  13: 207317.452 ops/s
Iteration  14: 207380.171 ops/s
Iteration  15: 207507.128 ops/s
Iteration  16: 207756.111 ops/s
Iteration  17: 207233.261 ops/s
Iteration  18: 207270.573 ops/s
Iteration  19: 207094.641 ops/s
Iteration  20: 207349.645 ops/s
Iteration  21: 207590.423 ops/s
Iteration  22: 206866.802 ops/s
Iteration  23: 206961.100 ops/s
Iteration  24: 207537.116 ops/s
Iteration  25: 207530.648 ops/s
Iteration  26: 207508.054 ops/s
Iteration  27: 207477.921 ops/s
Iteration  28: 207169.710 ops/s
Iteration  29: 207634.957 ops/s
Iteration  30: 207553.035 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_790._Benchmark.benchmark_Cluster_790":
  207299.931 ±(99.9%) 178.645 ops/s [Average]
  (min, avg, max) = (206866.802, 207299.931, 207756.111), stdev = 267.387
  CI (99.9%): [207121.286, 207478.576] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_790._Benchmark.benchmark_Cluster_790  thrpt   30  207299.931 ± 178.645  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_791._Benchmark.benchmark_Cluster_791$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_791._Benchmark.benchmark_Cluster_791

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70447.261 ops/s
# Warmup Iteration   2: 164939.365 ops/s
# Warmup Iteration   3: 230311.315 ops/s
# Warmup Iteration   4: 231498.111 ops/s
# Warmup Iteration   5: 232672.826 ops/s
# Warmup Iteration   6: 184999.498 ops/s
# Warmup Iteration   7: 232506.736 ops/s
# Warmup Iteration   8: 233031.097 ops/s
# Warmup Iteration   9: 232503.542 ops/s
# Warmup Iteration  10: 232524.134 ops/s
# Warmup Iteration  11: 232430.433 ops/s
# Warmup Iteration  12: 232886.822 ops/s
# Warmup Iteration  13: 232514.817 ops/s
# Warmup Iteration  14: 232864.686 ops/s
# Warmup Iteration  15: 232815.833 ops/s
# Warmup Iteration  16: 232804.192 ops/s
# Warmup Iteration  17: 232834.154 ops/s
# Warmup Iteration  18: 232223.303 ops/s
# Warmup Iteration  19: 232317.869 ops/s
# Warmup Iteration  20: 232792.522 ops/s
# Warmup Iteration  21: 231817.821 ops/s
# Warmup Iteration  22: 232039.072 ops/s
# Warmup Iteration  23: 232396.185 ops/s
# Warmup Iteration  24: 232172.568 ops/s
# Warmup Iteration  25: 231757.496 ops/s
# Warmup Iteration  26: 231754.556 ops/s
# Warmup Iteration  27: 231927.224 ops/s
# Warmup Iteration  28: 232233.315 ops/s
# Warmup Iteration  29: 231911.791 ops/s
# Warmup Iteration  30: 232865.162 ops/s
Iteration   1: 231361.599 ops/s
Iteration   2: 231636.617 ops/s
Iteration   3: 232158.671 ops/s
Iteration   4: 232263.145 ops/s
Iteration   5: 232001.031 ops/s
Iteration   6: 232386.500 ops/s
Iteration   7: 232127.120 ops/s
Iteration   8: 232167.485 ops/s
Iteration   9: 232924.002 ops/s
Iteration  10: 232670.632 ops/s
Iteration  11: 232397.248 ops/s
Iteration  12: 232865.884 ops/s
Iteration  13: 232053.457 ops/s
Iteration  14: 232612.520 ops/s
Iteration  15: 232407.181 ops/s
Iteration  16: 232295.449 ops/s
Iteration  17: 232712.879 ops/s
Iteration  18: 232111.940 ops/s
Iteration  19: 231330.395 ops/s
Iteration  20: 231838.006 ops/s
Iteration  21: 231502.015 ops/s
Iteration  22: 231437.958 ops/s
Iteration  23: 231924.112 ops/s
Iteration  24: 231259.809 ops/s
Iteration  25: 231029.547 ops/s
Iteration  26: 230956.672 ops/s
Iteration  27: 231901.931 ops/s
Iteration  28: 232460.437 ops/s
Iteration  29: 231607.690 ops/s
Iteration  30: 231761.517 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_791._Benchmark.benchmark_Cluster_791":
  232005.448 ±(99.9%) 356.232 ops/s [Average]
  (min, avg, max) = (230956.672, 232005.448, 232924.002), stdev = 533.192
  CI (99.9%): [231649.216, 232361.681] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_791._Benchmark.benchmark_Cluster_791  thrpt   30  232005.448 ± 356.232  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_792._Benchmark.benchmark_Cluster_792$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_792._Benchmark.benchmark_Cluster_792

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 12610.504 ops/s
# Warmup Iteration   2: 52854.618 ops/s
# Warmup Iteration   3: 95487.472 ops/s
# Warmup Iteration   4: 118329.651 ops/s
# Warmup Iteration   5: 119118.103 ops/s
# Warmup Iteration   6: 119440.764 ops/s
# Warmup Iteration   7: 119139.962 ops/s
# Warmup Iteration   8: 90738.687 ops/s
# Warmup Iteration   9: 118939.932 ops/s
# Warmup Iteration  10: 118870.014 ops/s
# Warmup Iteration  11: 119482.769 ops/s
# Warmup Iteration  12: 119562.039 ops/s
# Warmup Iteration  13: 119467.830 ops/s
# Warmup Iteration  14: 119488.426 ops/s
# Warmup Iteration  15: 119562.686 ops/s
# Warmup Iteration  16: 119532.968 ops/s
# Warmup Iteration  17: 119096.210 ops/s
# Warmup Iteration  18: 118530.444 ops/s
# Warmup Iteration  19: 118935.701 ops/s
# Warmup Iteration  20: 118555.637 ops/s
# Warmup Iteration  21: 119061.555 ops/s
# Warmup Iteration  22: 118700.775 ops/s
# Warmup Iteration  23: 118917.312 ops/s
# Warmup Iteration  24: 118990.192 ops/s
# Warmup Iteration  25: 119035.972 ops/s
# Warmup Iteration  26: 119221.977 ops/s
# Warmup Iteration  27: 119106.534 ops/s
# Warmup Iteration  28: 119197.155 ops/s
# Warmup Iteration  29: 119209.713 ops/s
# Warmup Iteration  30: 118913.890 ops/s
Iteration   1: 118984.905 ops/s
Iteration   2: 119326.751 ops/s
Iteration   3: 118292.040 ops/s
Iteration   4: 119088.855 ops/s
Iteration   5: 118591.493 ops/s
Iteration   6: 118995.086 ops/s
Iteration   7: 118788.167 ops/s
Iteration   8: 118913.943 ops/s
Iteration   9: 118966.413 ops/s
Iteration  10: 118992.938 ops/s
Iteration  11: 119080.461 ops/s
Iteration  12: 118341.087 ops/s
Iteration  13: 118770.356 ops/s
Iteration  14: 118619.887 ops/s
Iteration  15: 119393.890 ops/s
Iteration  16: 119154.164 ops/s
Iteration  17: 118682.942 ops/s
Iteration  18: 118825.966 ops/s
Iteration  19: 118817.932 ops/s
Iteration  20: 118815.781 ops/s
Iteration  21: 118701.634 ops/s
Iteration  22: 119110.815 ops/s
Iteration  23: 118958.199 ops/s
Iteration  24: 118978.654 ops/s
Iteration  25: 119133.290 ops/s
Iteration  26: 119122.659 ops/s
Iteration  27: 119189.286 ops/s
Iteration  28: 119138.712 ops/s
Iteration  29: 119235.631 ops/s
Iteration  30: 118802.918 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_792._Benchmark.benchmark_Cluster_792":
  118927.162 ±(99.9%) 174.475 ops/s [Average]
  (min, avg, max) = (118292.040, 118927.162, 119393.890), stdev = 261.146
  CI (99.9%): [118752.687, 119101.637] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_792._Benchmark.benchmark_Cluster_792  thrpt   30  118927.162 ± 174.475  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_793._Benchmark.benchmark_Cluster_793$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_793._Benchmark.benchmark_Cluster_793

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 81662.399 ops/s
# Warmup Iteration   2: 100057.969 ops/s
# Warmup Iteration   3: 154406.413 ops/s
# Warmup Iteration   4: 154849.171 ops/s
# Warmup Iteration   5: 154078.065 ops/s
# Warmup Iteration   6: 154464.914 ops/s
# Warmup Iteration   7: 154181.674 ops/s
# Warmup Iteration   8: 154310.407 ops/s
# Warmup Iteration   9: 135889.562 ops/s
# Warmup Iteration  10: 139711.428 ops/s
# Warmup Iteration  11: 154803.415 ops/s
# Warmup Iteration  12: 154673.846 ops/s
# Warmup Iteration  13: 154602.010 ops/s
# Warmup Iteration  14: 154336.939 ops/s
# Warmup Iteration  15: 154481.771 ops/s
# Warmup Iteration  16: 154287.069 ops/s
# Warmup Iteration  17: 159217.191 ops/s
# Warmup Iteration  18: 159454.193 ops/s
# Warmup Iteration  19: 159735.950 ops/s
# Warmup Iteration  20: 159508.058 ops/s
# Warmup Iteration  21: 159475.906 ops/s
# Warmup Iteration  22: 159105.982 ops/s
# Warmup Iteration  23: 159947.456 ops/s
# Warmup Iteration  24: 159809.915 ops/s
# Warmup Iteration  25: 159747.651 ops/s
# Warmup Iteration  26: 160088.153 ops/s
# Warmup Iteration  27: 159838.532 ops/s
# Warmup Iteration  28: 159470.254 ops/s
# Warmup Iteration  29: 159291.999 ops/s
# Warmup Iteration  30: 159520.311 ops/s
Iteration   1: 159671.895 ops/s
Iteration   2: 159908.881 ops/s
Iteration   3: 159743.460 ops/s
Iteration   4: 159602.841 ops/s
Iteration   5: 159757.668 ops/s
Iteration   6: 159506.459 ops/s
Iteration   7: 159626.165 ops/s
Iteration   8: 159270.954 ops/s
Iteration   9: 159147.456 ops/s
Iteration  10: 159840.790 ops/s
Iteration  11: 160192.489 ops/s
Iteration  12: 159243.331 ops/s
Iteration  13: 159832.692 ops/s
Iteration  14: 159824.588 ops/s
Iteration  15: 159944.948 ops/s
Iteration  16: 160219.849 ops/s
Iteration  17: 160069.827 ops/s
Iteration  18: 159797.564 ops/s
Iteration  19: 160266.649 ops/s
Iteration  20: 160019.772 ops/s
Iteration  21: 159929.820 ops/s
Iteration  22: 160465.540 ops/s
Iteration  23: 159717.084 ops/s
Iteration  24: 159341.069 ops/s
Iteration  25: 160013.433 ops/s
Iteration  26: 160253.396 ops/s
Iteration  27: 159410.233 ops/s
Iteration  28: 160301.691 ops/s
Iteration  29: 160364.572 ops/s
Iteration  30: 159061.852 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_793._Benchmark.benchmark_Cluster_793":
  159811.566 ±(99.9%) 250.884 ops/s [Average]
  (min, avg, max) = (159061.852, 159811.566, 160465.540), stdev = 375.511
  CI (99.9%): [159560.682, 160062.450] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_793._Benchmark.benchmark_Cluster_793  thrpt   30  159811.566 ± 250.884  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_794._Benchmark.benchmark_Cluster_794$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_794._Benchmark.benchmark_Cluster_794

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56094.701 ops/s
# Warmup Iteration   2: 128376.787 ops/s
# Warmup Iteration   3: 184042.633 ops/s
# Warmup Iteration   4: 185734.871 ops/s
# Warmup Iteration   5: 185080.767 ops/s
# Warmup Iteration   6: 147279.320 ops/s
# Warmup Iteration   7: 185618.738 ops/s
# Warmup Iteration   8: 185757.290 ops/s
# Warmup Iteration   9: 185807.429 ops/s
# Warmup Iteration  10: 185845.460 ops/s
# Warmup Iteration  11: 185652.067 ops/s
# Warmup Iteration  12: 185899.183 ops/s
# Warmup Iteration  13: 185895.340 ops/s
# Warmup Iteration  14: 185786.958 ops/s
# Warmup Iteration  15: 185627.099 ops/s
# Warmup Iteration  16: 185794.223 ops/s
# Warmup Iteration  17: 186074.126 ops/s
# Warmup Iteration  18: 185694.997 ops/s
# Warmup Iteration  19: 185849.134 ops/s
# Warmup Iteration  20: 185468.897 ops/s
# Warmup Iteration  21: 185662.354 ops/s
# Warmup Iteration  22: 185754.459 ops/s
# Warmup Iteration  23: 185457.537 ops/s
# Warmup Iteration  24: 185654.760 ops/s
# Warmup Iteration  25: 185933.993 ops/s
# Warmup Iteration  26: 185785.561 ops/s
# Warmup Iteration  27: 185699.192 ops/s
# Warmup Iteration  28: 185784.947 ops/s
# Warmup Iteration  29: 185868.990 ops/s
# Warmup Iteration  30: 185516.721 ops/s
Iteration   1: 185248.421 ops/s
Iteration   2: 185011.122 ops/s
Iteration   3: 185686.802 ops/s
Iteration   4: 185438.882 ops/s
Iteration   5: 185516.977 ops/s
Iteration   6: 185359.531 ops/s
Iteration   7: 185468.735 ops/s
Iteration   8: 185496.714 ops/s
Iteration   9: 185081.451 ops/s
Iteration  10: 185865.094 ops/s
Iteration  11: 185615.208 ops/s
Iteration  12: 185895.763 ops/s
Iteration  13: 185523.954 ops/s
Iteration  14: 185737.306 ops/s
Iteration  15: 185723.516 ops/s
Iteration  16: 185106.978 ops/s
Iteration  17: 185652.253 ops/s
Iteration  18: 185401.410 ops/s
Iteration  19: 185743.077 ops/s
Iteration  20: 185713.134 ops/s
Iteration  21: 185823.594 ops/s
Iteration  22: 186041.559 ops/s
Iteration  23: 185602.989 ops/s
Iteration  24: 185102.306 ops/s
Iteration  25: 185688.254 ops/s
Iteration  26: 185438.004 ops/s
Iteration  27: 185187.432 ops/s
Iteration  28: 184992.763 ops/s
Iteration  29: 185386.587 ops/s
Iteration  30: 185669.436 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_794._Benchmark.benchmark_Cluster_794":
  185507.308 ±(99.9%) 185.686 ops/s [Average]
  (min, avg, max) = (184992.763, 185507.308, 186041.559), stdev = 277.926
  CI (99.9%): [185321.622, 185692.994] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_794._Benchmark.benchmark_Cluster_794  thrpt   30  185507.308 ± 185.686  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_795._Benchmark.benchmark_Cluster_795$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_795._Benchmark.benchmark_Cluster_795

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53110.238 ops/s
# Warmup Iteration   2: 107689.816 ops/s
# Warmup Iteration   3: 179255.792 ops/s
# Warmup Iteration   4: 179289.787 ops/s
# Warmup Iteration   5: 180393.238 ops/s
# Warmup Iteration   6: 180016.271 ops/s
# Warmup Iteration   7: 139120.979 ops/s
# Warmup Iteration   8: 180142.076 ops/s
# Warmup Iteration   9: 180563.622 ops/s
# Warmup Iteration  10: 179652.019 ops/s
# Warmup Iteration  11: 180691.158 ops/s
# Warmup Iteration  12: 180664.428 ops/s
# Warmup Iteration  13: 180300.986 ops/s
# Warmup Iteration  14: 180463.717 ops/s
# Warmup Iteration  15: 180464.054 ops/s
# Warmup Iteration  16: 180664.007 ops/s
# Warmup Iteration  17: 183871.235 ops/s
# Warmup Iteration  18: 183198.457 ops/s
# Warmup Iteration  19: 182213.296 ops/s
# Warmup Iteration  20: 182220.284 ops/s
# Warmup Iteration  21: 184283.760 ops/s
# Warmup Iteration  22: 182962.674 ops/s
# Warmup Iteration  23: 182294.983 ops/s
# Warmup Iteration  24: 184286.733 ops/s
# Warmup Iteration  25: 184401.887 ops/s
# Warmup Iteration  26: 183311.451 ops/s
# Warmup Iteration  27: 183211.652 ops/s
# Warmup Iteration  28: 183205.641 ops/s
# Warmup Iteration  29: 183060.596 ops/s
# Warmup Iteration  30: 183762.543 ops/s
Iteration   1: 184275.013 ops/s
Iteration   2: 183214.758 ops/s
Iteration   3: 183357.191 ops/s
Iteration   4: 184186.519 ops/s
Iteration   5: 182799.601 ops/s
Iteration   6: 184331.257 ops/s
Iteration   7: 183921.684 ops/s
Iteration   8: 184810.917 ops/s
Iteration   9: 182685.040 ops/s
Iteration  10: 182905.009 ops/s
Iteration  11: 183855.348 ops/s
Iteration  12: 184018.343 ops/s
Iteration  13: 182902.143 ops/s
Iteration  14: 184346.616 ops/s
Iteration  15: 183731.957 ops/s
Iteration  16: 184056.159 ops/s
Iteration  17: 183881.707 ops/s
Iteration  18: 183595.591 ops/s
Iteration  19: 184860.368 ops/s
Iteration  20: 184349.161 ops/s
Iteration  21: 183783.939 ops/s
Iteration  22: 184196.260 ops/s
Iteration  23: 184589.446 ops/s
Iteration  24: 183577.225 ops/s
Iteration  25: 183525.251 ops/s
Iteration  26: 183028.968 ops/s
Iteration  27: 184291.651 ops/s
Iteration  28: 183434.269 ops/s
Iteration  29: 184065.280 ops/s
Iteration  30: 184521.031 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_795._Benchmark.benchmark_Cluster_795":
  183836.590 ±(99.9%) 400.168 ops/s [Average]
  (min, avg, max) = (182685.040, 183836.590, 184860.368), stdev = 598.953
  CI (99.9%): [183436.422, 184236.758] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_795._Benchmark.benchmark_Cluster_795  thrpt   30  183836.590 ± 400.168  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_796._Benchmark.benchmark_Cluster_796$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_796._Benchmark.benchmark_Cluster_796

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50361.282 ops/s
# Warmup Iteration   2: 86765.488 ops/s
# Warmup Iteration   3: 138152.632 ops/s
# Warmup Iteration   4: 137417.694 ops/s
# Warmup Iteration   5: 138050.281 ops/s
# Warmup Iteration   6: 138374.429 ops/s
# Warmup Iteration   7: 138215.599 ops/s
# Warmup Iteration   8: 109848.282 ops/s
# Warmup Iteration   9: 138390.990 ops/s
# Warmup Iteration  10: 138336.193 ops/s
# Warmup Iteration  11: 138217.167 ops/s
# Warmup Iteration  12: 138482.001 ops/s
# Warmup Iteration  13: 138234.369 ops/s
# Warmup Iteration  14: 138513.973 ops/s
# Warmup Iteration  15: 138392.780 ops/s
# Warmup Iteration  16: 138496.936 ops/s
# Warmup Iteration  17: 137721.464 ops/s
# Warmup Iteration  18: 137999.105 ops/s
# Warmup Iteration  19: 138179.602 ops/s
# Warmup Iteration  20: 138074.206 ops/s
# Warmup Iteration  21: 137976.391 ops/s
# Warmup Iteration  22: 138061.326 ops/s
# Warmup Iteration  23: 138151.001 ops/s
# Warmup Iteration  24: 138229.499 ops/s
# Warmup Iteration  25: 137574.860 ops/s
# Warmup Iteration  26: 137714.306 ops/s
# Warmup Iteration  27: 138114.901 ops/s
# Warmup Iteration  28: 138067.468 ops/s
# Warmup Iteration  29: 137752.009 ops/s
# Warmup Iteration  30: 138160.219 ops/s
Iteration   1: 137953.433 ops/s
Iteration   2: 138190.209 ops/s
Iteration   3: 138160.527 ops/s
Iteration   4: 137977.786 ops/s
Iteration   5: 138029.101 ops/s
Iteration   6: 137962.175 ops/s
Iteration   7: 138069.533 ops/s
Iteration   8: 138099.919 ops/s
Iteration   9: 137792.211 ops/s
Iteration  10: 137903.374 ops/s
Iteration  11: 137984.783 ops/s
Iteration  12: 137904.366 ops/s
Iteration  13: 137819.810 ops/s
Iteration  14: 137950.974 ops/s
Iteration  15: 138129.681 ops/s
Iteration  16: 137935.985 ops/s
Iteration  17: 137883.115 ops/s
Iteration  18: 137637.704 ops/s
Iteration  19: 137602.538 ops/s
Iteration  20: 137699.802 ops/s
Iteration  21: 137710.334 ops/s
Iteration  22: 138193.069 ops/s
Iteration  23: 138218.480 ops/s
Iteration  24: 138051.023 ops/s
Iteration  25: 137857.276 ops/s
Iteration  26: 137467.709 ops/s
Iteration  27: 137848.487 ops/s
Iteration  28: 137958.019 ops/s
Iteration  29: 137811.561 ops/s
Iteration  30: 137993.134 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_796._Benchmark.benchmark_Cluster_796":
  137926.537 ±(99.9%) 121.938 ops/s [Average]
  (min, avg, max) = (137467.709, 137926.537, 138218.480), stdev = 182.511
  CI (99.9%): [137804.600, 138048.475] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_796._Benchmark.benchmark_Cluster_796  thrpt   30  137926.537 ± 121.938  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_797._Benchmark.benchmark_Cluster_797$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_797._Benchmark.benchmark_Cluster_797

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 100900.959 ops/s
# Warmup Iteration   2: 113577.819 ops/s
# Warmup Iteration   3: 143657.464 ops/s
# Warmup Iteration   4: 157246.523 ops/s
# Warmup Iteration   5: 157772.782 ops/s
# Warmup Iteration   6: 157022.067 ops/s
# Warmup Iteration   7: 158256.640 ops/s
# Warmup Iteration   8: 158001.503 ops/s
# Warmup Iteration   9: 157693.554 ops/s
# Warmup Iteration  10: 157071.138 ops/s
# Warmup Iteration  11: 157130.528 ops/s
# Warmup Iteration  12: 154212.281 ops/s
# Warmup Iteration  13: 127220.149 ops/s
# Warmup Iteration  14: 157837.353 ops/s
# Warmup Iteration  15: 157726.636 ops/s
# Warmup Iteration  16: 158199.124 ops/s
# Warmup Iteration  17: 165119.770 ops/s
# Warmup Iteration  18: 165243.863 ops/s
# Warmup Iteration  19: 165154.786 ops/s
# Warmup Iteration  20: 165163.196 ops/s
# Warmup Iteration  21: 164938.673 ops/s
# Warmup Iteration  22: 164535.296 ops/s
# Warmup Iteration  23: 165125.974 ops/s
# Warmup Iteration  24: 165171.149 ops/s
# Warmup Iteration  25: 164625.095 ops/s
# Warmup Iteration  26: 164450.930 ops/s
# Warmup Iteration  27: 164526.632 ops/s
# Warmup Iteration  28: 164248.954 ops/s
# Warmup Iteration  29: 165312.289 ops/s
# Warmup Iteration  30: 165150.949 ops/s
Iteration   1: 164676.263 ops/s
Iteration   2: 164503.693 ops/s
Iteration   3: 164211.506 ops/s
Iteration   4: 164428.839 ops/s
Iteration   5: 164120.109 ops/s
Iteration   6: 164424.439 ops/s
Iteration   7: 164291.356 ops/s
Iteration   8: 164271.453 ops/s
Iteration   9: 164125.595 ops/s
Iteration  10: 164192.795 ops/s
Iteration  11: 164224.289 ops/s
Iteration  12: 165263.498 ops/s
Iteration  13: 164096.391 ops/s
Iteration  14: 164729.790 ops/s
Iteration  15: 165160.289 ops/s
Iteration  16: 165138.149 ops/s
Iteration  17: 165225.586 ops/s
Iteration  18: 165110.740 ops/s
Iteration  19: 164856.462 ops/s
Iteration  20: 164690.802 ops/s
Iteration  21: 165332.926 ops/s
Iteration  22: 164916.869 ops/s
Iteration  23: 164210.832 ops/s
Iteration  24: 164157.991 ops/s
Iteration  25: 164349.748 ops/s
Iteration  26: 164626.516 ops/s
Iteration  27: 164583.223 ops/s
Iteration  28: 164726.863 ops/s
Iteration  29: 165416.571 ops/s
Iteration  30: 165049.123 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_797._Benchmark.benchmark_Cluster_797":
  164637.090 ±(99.9%) 280.823 ops/s [Average]
  (min, avg, max) = (164096.391, 164637.090, 165416.571), stdev = 420.323
  CI (99.9%): [164356.267, 164917.913] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_797._Benchmark.benchmark_Cluster_797  thrpt   30  164637.090 ± 280.823  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_798._Benchmark.benchmark_Cluster_798$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_798._Benchmark.benchmark_Cluster_798

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91578.530 ops/s
# Warmup Iteration   2: 112309.757 ops/s
# Warmup Iteration   3: 172703.592 ops/s
# Warmup Iteration   4: 174753.128 ops/s
# Warmup Iteration   5: 173335.070 ops/s
# Warmup Iteration   6: 174403.699 ops/s
# Warmup Iteration   7: 174827.992 ops/s
# Warmup Iteration   8: 175241.581 ops/s
# Warmup Iteration   9: 174501.433 ops/s
# Warmup Iteration  10: 136781.431 ops/s
# Warmup Iteration  11: 174367.360 ops/s
# Warmup Iteration  12: 174221.673 ops/s
# Warmup Iteration  13: 174441.864 ops/s
# Warmup Iteration  14: 174744.138 ops/s
# Warmup Iteration  15: 174149.164 ops/s
# Warmup Iteration  16: 174209.349 ops/s
# Warmup Iteration  17: 181981.030 ops/s
# Warmup Iteration  18: 181708.845 ops/s
# Warmup Iteration  19: 182255.769 ops/s
# Warmup Iteration  20: 181712.301 ops/s
# Warmup Iteration  21: 181696.649 ops/s
# Warmup Iteration  22: 181481.638 ops/s
# Warmup Iteration  23: 181163.129 ops/s
# Warmup Iteration  24: 181476.988 ops/s
# Warmup Iteration  25: 181253.845 ops/s
# Warmup Iteration  26: 181602.438 ops/s
# Warmup Iteration  27: 182037.493 ops/s
# Warmup Iteration  28: 181781.288 ops/s
# Warmup Iteration  29: 181783.631 ops/s
# Warmup Iteration  30: 181249.461 ops/s
Iteration   1: 181702.212 ops/s
Iteration   2: 181862.037 ops/s
Iteration   3: 182292.462 ops/s
Iteration   4: 181588.564 ops/s
Iteration   5: 181863.289 ops/s
Iteration   6: 181968.411 ops/s
Iteration   7: 181796.339 ops/s
Iteration   8: 182040.803 ops/s
Iteration   9: 181565.793 ops/s
Iteration  10: 181135.971 ops/s
Iteration  11: 182174.198 ops/s
Iteration  12: 182069.000 ops/s
Iteration  13: 181116.479 ops/s
Iteration  14: 182250.608 ops/s
Iteration  15: 181716.967 ops/s
Iteration  16: 181917.135 ops/s
Iteration  17: 181905.561 ops/s
Iteration  18: 181618.562 ops/s
Iteration  19: 181767.182 ops/s
Iteration  20: 181135.288 ops/s
Iteration  21: 181255.186 ops/s
Iteration  22: 181371.096 ops/s
Iteration  23: 182121.184 ops/s
Iteration  24: 182735.979 ops/s
Iteration  25: 182380.998 ops/s
Iteration  26: 182099.950 ops/s
Iteration  27: 181991.705 ops/s
Iteration  28: 181874.306 ops/s
Iteration  29: 181646.035 ops/s
Iteration  30: 181887.049 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_798._Benchmark.benchmark_Cluster_798":
  181828.345 ±(99.9%) 254.682 ops/s [Average]
  (min, avg, max) = (181116.479, 181828.345, 182735.979), stdev = 381.196
  CI (99.9%): [181573.663, 182083.027] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_798._Benchmark.benchmark_Cluster_798  thrpt   30  181828.345 ± 254.682  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_799._Benchmark.benchmark_Cluster_799$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_799._Benchmark.benchmark_Cluster_799

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 81635.600 ops/s
# Warmup Iteration   2: 163544.918 ops/s
# Warmup Iteration   3: 205243.759 ops/s
# Warmup Iteration   4: 205833.781 ops/s
# Warmup Iteration   5: 206026.303 ops/s
# Warmup Iteration   6: 164592.710 ops/s
# Warmup Iteration   7: 206219.206 ops/s
# Warmup Iteration   8: 206456.531 ops/s
# Warmup Iteration   9: 206620.361 ops/s
# Warmup Iteration  10: 206065.497 ops/s
# Warmup Iteration  11: 206805.559 ops/s
# Warmup Iteration  12: 206677.400 ops/s
# Warmup Iteration  13: 206722.363 ops/s
# Warmup Iteration  14: 206044.010 ops/s
# Warmup Iteration  15: 206348.802 ops/s
# Warmup Iteration  16: 206668.449 ops/s
# Warmup Iteration  17: 206959.684 ops/s
# Warmup Iteration  18: 208010.562 ops/s
# Warmup Iteration  19: 207604.539 ops/s
# Warmup Iteration  20: 206824.357 ops/s
# Warmup Iteration  21: 207719.842 ops/s
# Warmup Iteration  22: 207615.662 ops/s
# Warmup Iteration  23: 207871.043 ops/s
# Warmup Iteration  24: 207942.044 ops/s
# Warmup Iteration  25: 207546.733 ops/s
# Warmup Iteration  26: 207879.434 ops/s
# Warmup Iteration  27: 208000.019 ops/s
# Warmup Iteration  28: 207179.970 ops/s
# Warmup Iteration  29: 207712.238 ops/s
# Warmup Iteration  30: 207930.841 ops/s
Iteration   1: 207867.004 ops/s
Iteration   2: 207731.803 ops/s
Iteration   3: 206969.817 ops/s
Iteration   4: 206702.155 ops/s
Iteration   5: 208269.276 ops/s
Iteration   6: 208050.086 ops/s
Iteration   7: 208290.502 ops/s
Iteration   8: 207912.021 ops/s
Iteration   9: 207810.807 ops/s
Iteration  10: 208105.365 ops/s
Iteration  11: 207154.945 ops/s
Iteration  12: 207723.257 ops/s
Iteration  13: 207849.976 ops/s
Iteration  14: 207476.052 ops/s
Iteration  15: 207525.906 ops/s
Iteration  16: 207898.143 ops/s
Iteration  17: 207770.206 ops/s
Iteration  18: 208046.810 ops/s
Iteration  19: 207871.730 ops/s
Iteration  20: 208052.180 ops/s
Iteration  21: 208318.900 ops/s
Iteration  22: 207891.539 ops/s
Iteration  23: 207993.153 ops/s
Iteration  24: 207977.359 ops/s
Iteration  25: 207695.307 ops/s
Iteration  26: 208113.056 ops/s
Iteration  27: 207760.383 ops/s
Iteration  28: 208015.534 ops/s
Iteration  29: 207947.005 ops/s
Iteration  30: 207473.702 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_799._Benchmark.benchmark_Cluster_799":
  207808.799 ±(99.9%) 245.222 ops/s [Average]
  (min, avg, max) = (206702.155, 207808.799, 208318.900), stdev = 367.036
  CI (99.9%): [207563.578, 208054.021] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_799._Benchmark.benchmark_Cluster_799  thrpt   30  207808.799 ± 245.222  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_8._Benchmark.benchmark_Cluster_8$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_8._Benchmark.benchmark_Cluster_8

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 27848.321 ops/s
# Warmup Iteration   2: 44333.480 ops/s
# Warmup Iteration   3: 71881.764 ops/s
# Warmup Iteration   4: 72205.220 ops/s
# Warmup Iteration   5: 72844.365 ops/s
# Warmup Iteration   6: 72814.269 ops/s
# Warmup Iteration   7: 72886.070 ops/s
# Warmup Iteration   8: 60168.436 ops/s
# Warmup Iteration   9: 70042.808 ops/s
# Warmup Iteration  10: 72696.419 ops/s
# Warmup Iteration  11: 72819.805 ops/s
# Warmup Iteration  12: 72603.720 ops/s
# Warmup Iteration  13: 73100.891 ops/s
# Warmup Iteration  14: 72704.310 ops/s
# Warmup Iteration  15: 72581.821 ops/s
# Warmup Iteration  16: 72521.509 ops/s
# Warmup Iteration  17: 72514.772 ops/s
# Warmup Iteration  18: 73413.650 ops/s
# Warmup Iteration  19: 72960.164 ops/s
# Warmup Iteration  20: 72799.606 ops/s
# Warmup Iteration  21: 72714.489 ops/s
# Warmup Iteration  22: 72928.085 ops/s
# Warmup Iteration  23: 72967.504 ops/s
# Warmup Iteration  24: 72672.220 ops/s
# Warmup Iteration  25: 73255.468 ops/s
# Warmup Iteration  26: 72883.682 ops/s
# Warmup Iteration  27: 72752.214 ops/s
# Warmup Iteration  28: 72551.784 ops/s
# Warmup Iteration  29: 72983.424 ops/s
# Warmup Iteration  30: 73026.486 ops/s
Iteration   1: 73460.370 ops/s
Iteration   2: 72938.725 ops/s
Iteration   3: 72855.506 ops/s
Iteration   4: 72988.080 ops/s
Iteration   5: 72682.982 ops/s
Iteration   6: 72982.041 ops/s
Iteration   7: 73031.352 ops/s
Iteration   8: 73008.868 ops/s
Iteration   9: 73066.474 ops/s
Iteration  10: 72986.433 ops/s
Iteration  11: 72718.804 ops/s
Iteration  12: 72961.383 ops/s
Iteration  13: 72961.951 ops/s
Iteration  14: 73189.443 ops/s
Iteration  15: 72983.202 ops/s
Iteration  16: 72990.639 ops/s
Iteration  17: 73001.835 ops/s
Iteration  18: 73183.297 ops/s
Iteration  19: 73386.164 ops/s
Iteration  20: 73080.344 ops/s
Iteration  21: 73413.978 ops/s
Iteration  22: 72931.410 ops/s
Iteration  23: 73148.297 ops/s
Iteration  24: 72987.660 ops/s
Iteration  25: 72832.483 ops/s
Iteration  26: 72928.053 ops/s
Iteration  27: 72701.387 ops/s
Iteration  28: 72805.244 ops/s
Iteration  29: 72862.533 ops/s
Iteration  30: 72825.642 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_8._Benchmark.benchmark_Cluster_8":
  72996.486 ±(99.9%) 127.621 ops/s [Average]
  (min, avg, max) = (72682.982, 72996.486, 73460.370), stdev = 191.017
  CI (99.9%): [72868.865, 73124.107] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt      Score     Error  Units
Cluster_8._Benchmark.benchmark_Cluster_8  thrpt   30  72996.486 ± 127.621  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_80._Benchmark.benchmark_Cluster_80$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_80._Benchmark.benchmark_Cluster_80

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83219.595 ops/s
# Warmup Iteration   2: 193457.972 ops/s
# Warmup Iteration   3: 232671.668 ops/s
# Warmup Iteration   4: 233611.384 ops/s
# Warmup Iteration   5: 185963.389 ops/s
# Warmup Iteration   6: 234709.621 ops/s
# Warmup Iteration   7: 233434.549 ops/s
# Warmup Iteration   8: 235019.928 ops/s
# Warmup Iteration   9: 234582.581 ops/s
# Warmup Iteration  10: 234852.636 ops/s
# Warmup Iteration  11: 234603.104 ops/s
# Warmup Iteration  12: 234128.105 ops/s
# Warmup Iteration  13: 233285.269 ops/s
# Warmup Iteration  14: 233544.833 ops/s
# Warmup Iteration  15: 233434.592 ops/s
# Warmup Iteration  16: 233276.458 ops/s
# Warmup Iteration  17: 231789.849 ops/s
# Warmup Iteration  18: 230865.473 ops/s
# Warmup Iteration  19: 230844.801 ops/s
# Warmup Iteration  20: 231169.503 ops/s
# Warmup Iteration  21: 231824.985 ops/s
# Warmup Iteration  22: 231208.658 ops/s
# Warmup Iteration  23: 231115.773 ops/s
# Warmup Iteration  24: 231433.325 ops/s
# Warmup Iteration  25: 230345.714 ops/s
# Warmup Iteration  26: 231332.377 ops/s
# Warmup Iteration  27: 230428.429 ops/s
# Warmup Iteration  28: 230579.006 ops/s
# Warmup Iteration  29: 229625.313 ops/s
# Warmup Iteration  30: 230252.503 ops/s
Iteration   1: 230464.426 ops/s
Iteration   2: 231262.992 ops/s
Iteration   3: 231695.278 ops/s
Iteration   4: 230697.937 ops/s
Iteration   5: 230643.421 ops/s
Iteration   6: 231145.481 ops/s
Iteration   7: 230340.580 ops/s
Iteration   8: 231257.811 ops/s
Iteration   9: 230764.048 ops/s
Iteration  10: 231601.547 ops/s
Iteration  11: 230545.786 ops/s
Iteration  12: 230009.521 ops/s
Iteration  13: 232150.068 ops/s
Iteration  14: 231005.038 ops/s
Iteration  15: 230747.165 ops/s
Iteration  16: 230986.873 ops/s
Iteration  17: 230863.034 ops/s
Iteration  18: 229790.809 ops/s
Iteration  19: 230591.042 ops/s
Iteration  20: 230966.715 ops/s
Iteration  21: 232048.571 ops/s
Iteration  22: 232488.449 ops/s
Iteration  23: 231527.539 ops/s
Iteration  24: 231391.770 ops/s
Iteration  25: 231051.014 ops/s
Iteration  26: 231309.556 ops/s
Iteration  27: 231082.918 ops/s
Iteration  28: 231653.461 ops/s
Iteration  29: 230911.215 ops/s
Iteration  30: 231270.747 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_80._Benchmark.benchmark_Cluster_80":
  231075.494 ±(99.9%) 400.301 ops/s [Average]
  (min, avg, max) = (229790.809, 231075.494, 232488.449), stdev = 599.151
  CI (99.9%): [230675.193, 231475.794] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_80._Benchmark.benchmark_Cluster_80  thrpt   30  231075.494 ± 400.301  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_800._Benchmark.benchmark_Cluster_800$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_800._Benchmark.benchmark_Cluster_800

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78700.353 ops/s
# Warmup Iteration   2: 129922.713 ops/s
# Warmup Iteration   3: 212297.696 ops/s
# Warmup Iteration   4: 211529.119 ops/s
# Warmup Iteration   5: 212962.301 ops/s
# Warmup Iteration   6: 212617.295 ops/s
# Warmup Iteration   7: 213097.339 ops/s
# Warmup Iteration   8: 165489.746 ops/s
# Warmup Iteration   9: 212947.579 ops/s
# Warmup Iteration  10: 212647.673 ops/s
# Warmup Iteration  11: 212300.189 ops/s
# Warmup Iteration  12: 212890.065 ops/s
# Warmup Iteration  13: 212538.497 ops/s
# Warmup Iteration  14: 212973.957 ops/s
# Warmup Iteration  15: 212210.259 ops/s
# Warmup Iteration  16: 212628.109 ops/s
# Warmup Iteration  17: 216087.460 ops/s
# Warmup Iteration  18: 216611.294 ops/s
# Warmup Iteration  19: 216800.731 ops/s
# Warmup Iteration  20: 216905.116 ops/s
# Warmup Iteration  21: 217061.220 ops/s
# Warmup Iteration  22: 216582.425 ops/s
# Warmup Iteration  23: 216906.930 ops/s
# Warmup Iteration  24: 217481.719 ops/s
# Warmup Iteration  25: 217566.871 ops/s
# Warmup Iteration  26: 217024.181 ops/s
# Warmup Iteration  27: 216422.103 ops/s
# Warmup Iteration  28: 216497.317 ops/s
# Warmup Iteration  29: 217216.128 ops/s
# Warmup Iteration  30: 217278.387 ops/s
Iteration   1: 217748.645 ops/s
Iteration   2: 216645.453 ops/s
Iteration   3: 217129.343 ops/s
Iteration   4: 216552.137 ops/s
Iteration   5: 216448.643 ops/s
Iteration   6: 216632.626 ops/s
Iteration   7: 217070.158 ops/s
Iteration   8: 216882.194 ops/s
Iteration   9: 217291.065 ops/s
Iteration  10: 217533.845 ops/s
Iteration  11: 217031.628 ops/s
Iteration  12: 217627.591 ops/s
Iteration  13: 217002.692 ops/s
Iteration  14: 217179.756 ops/s
Iteration  15: 216900.086 ops/s
Iteration  16: 217327.910 ops/s
Iteration  17: 217589.596 ops/s
Iteration  18: 217418.711 ops/s
Iteration  19: 217696.523 ops/s
Iteration  20: 216713.708 ops/s
Iteration  21: 217060.278 ops/s
Iteration  22: 217391.026 ops/s
Iteration  23: 216693.156 ops/s
Iteration  24: 216530.038 ops/s
Iteration  25: 216599.497 ops/s
Iteration  26: 216506.551 ops/s
Iteration  27: 217059.315 ops/s
Iteration  28: 216203.089 ops/s
Iteration  29: 217173.684 ops/s
Iteration  30: 216052.941 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_800._Benchmark.benchmark_Cluster_800":
  216989.729 ±(99.9%) 298.883 ops/s [Average]
  (min, avg, max) = (216052.941, 216989.729, 217748.645), stdev = 447.354
  CI (99.9%): [216690.846, 217288.613] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_800._Benchmark.benchmark_Cluster_800  thrpt   30  216989.729 ± 298.883  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_801._Benchmark.benchmark_Cluster_801$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_801._Benchmark.benchmark_Cluster_801

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70290.737 ops/s
# Warmup Iteration   2: 120253.853 ops/s
# Warmup Iteration   3: 167535.861 ops/s
# Warmup Iteration   4: 166276.318 ops/s
# Warmup Iteration   5: 167877.178 ops/s
# Warmup Iteration   6: 167829.489 ops/s
# Warmup Iteration   7: 132575.463 ops/s
# Warmup Iteration   8: 167761.073 ops/s
# Warmup Iteration   9: 167809.157 ops/s
# Warmup Iteration  10: 167822.995 ops/s
# Warmup Iteration  11: 168046.591 ops/s
# Warmup Iteration  12: 168183.855 ops/s
# Warmup Iteration  13: 167736.531 ops/s
# Warmup Iteration  14: 167731.284 ops/s
# Warmup Iteration  15: 168052.582 ops/s
# Warmup Iteration  16: 168177.941 ops/s
# Warmup Iteration  17: 167840.365 ops/s
# Warmup Iteration  18: 167804.589 ops/s
# Warmup Iteration  19: 167846.392 ops/s
# Warmup Iteration  20: 167215.490 ops/s
# Warmup Iteration  21: 167694.748 ops/s
# Warmup Iteration  22: 167814.362 ops/s
# Warmup Iteration  23: 168036.252 ops/s
# Warmup Iteration  24: 168000.239 ops/s
# Warmup Iteration  25: 168375.126 ops/s
# Warmup Iteration  26: 168091.554 ops/s
# Warmup Iteration  27: 168085.355 ops/s
# Warmup Iteration  28: 167767.551 ops/s
# Warmup Iteration  29: 167715.278 ops/s
# Warmup Iteration  30: 168051.074 ops/s
Iteration   1: 168312.348 ops/s
Iteration   2: 168318.914 ops/s
Iteration   3: 167931.339 ops/s
Iteration   4: 168141.838 ops/s
Iteration   5: 167870.807 ops/s
Iteration   6: 168116.369 ops/s
Iteration   7: 167781.696 ops/s
Iteration   8: 168487.724 ops/s
Iteration   9: 168316.257 ops/s
Iteration  10: 168179.496 ops/s
Iteration  11: 168055.542 ops/s
Iteration  12: 168178.754 ops/s
Iteration  13: 168091.670 ops/s
Iteration  14: 167993.486 ops/s
Iteration  15: 168023.674 ops/s
Iteration  16: 168244.099 ops/s
Iteration  17: 168201.017 ops/s
Iteration  18: 168141.827 ops/s
Iteration  19: 167841.281 ops/s
Iteration  20: 167962.169 ops/s
Iteration  21: 167719.763 ops/s
Iteration  22: 168305.182 ops/s
Iteration  23: 168220.994 ops/s
Iteration  24: 168477.401 ops/s
Iteration  25: 168471.363 ops/s
Iteration  26: 168352.900 ops/s
Iteration  27: 168294.537 ops/s
Iteration  28: 167905.058 ops/s
Iteration  29: 168472.944 ops/s
Iteration  30: 167097.033 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_801._Benchmark.benchmark_Cluster_801":
  168116.916 ±(99.9%) 191.508 ops/s [Average]
  (min, avg, max) = (167097.033, 168116.916, 168487.724), stdev = 286.641
  CI (99.9%): [167925.408, 168308.424] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_801._Benchmark.benchmark_Cluster_801  thrpt   30  168116.916 ± 191.508  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_802._Benchmark.benchmark_Cluster_802$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_802._Benchmark.benchmark_Cluster_802

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68898.313 ops/s
# Warmup Iteration   2: 112780.907 ops/s
# Warmup Iteration   3: 156547.715 ops/s
# Warmup Iteration   4: 155152.704 ops/s
# Warmup Iteration   5: 156309.647 ops/s
# Warmup Iteration   6: 156494.049 ops/s
# Warmup Iteration   7: 124184.391 ops/s
# Warmup Iteration   8: 157012.586 ops/s
# Warmup Iteration   9: 156999.311 ops/s
# Warmup Iteration  10: 156764.574 ops/s
# Warmup Iteration  11: 156981.298 ops/s
# Warmup Iteration  12: 157124.457 ops/s
# Warmup Iteration  13: 157445.014 ops/s
# Warmup Iteration  14: 157378.952 ops/s
# Warmup Iteration  15: 156976.848 ops/s
# Warmup Iteration  16: 157275.390 ops/s
# Warmup Iteration  17: 161474.422 ops/s
# Warmup Iteration  18: 161480.600 ops/s
# Warmup Iteration  19: 161441.365 ops/s
# Warmup Iteration  20: 161370.838 ops/s
# Warmup Iteration  21: 161336.293 ops/s
# Warmup Iteration  22: 161334.666 ops/s
# Warmup Iteration  23: 161232.635 ops/s
# Warmup Iteration  24: 161270.524 ops/s
# Warmup Iteration  25: 160998.462 ops/s
# Warmup Iteration  26: 160754.131 ops/s
# Warmup Iteration  27: 161174.759 ops/s
# Warmup Iteration  28: 161218.673 ops/s
# Warmup Iteration  29: 161494.596 ops/s
# Warmup Iteration  30: 161403.211 ops/s
Iteration   1: 160758.813 ops/s
Iteration   2: 160724.085 ops/s
Iteration   3: 160717.744 ops/s
Iteration   4: 160966.764 ops/s
Iteration   5: 160817.354 ops/s
Iteration   6: 161142.191 ops/s
Iteration   7: 160726.021 ops/s
Iteration   8: 160596.436 ops/s
Iteration   9: 160493.203 ops/s
Iteration  10: 161024.172 ops/s
Iteration  11: 160738.485 ops/s
Iteration  12: 160315.117 ops/s
Iteration  13: 160237.980 ops/s
Iteration  14: 160146.401 ops/s
Iteration  15: 160817.654 ops/s
Iteration  16: 160351.500 ops/s
Iteration  17: 160447.064 ops/s
Iteration  18: 160521.008 ops/s
Iteration  19: 160935.007 ops/s
Iteration  20: 160693.235 ops/s
Iteration  21: 160887.907 ops/s
Iteration  22: 160762.260 ops/s
Iteration  23: 161174.808 ops/s
Iteration  24: 161076.804 ops/s
Iteration  25: 160933.943 ops/s
Iteration  26: 161086.363 ops/s
Iteration  27: 160561.956 ops/s
Iteration  28: 160596.885 ops/s
Iteration  29: 161200.657 ops/s
Iteration  30: 160542.531 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_802._Benchmark.benchmark_Cluster_802":
  160733.145 ±(99.9%) 187.458 ops/s [Average]
  (min, avg, max) = (160146.401, 160733.145, 161200.657), stdev = 280.579
  CI (99.9%): [160545.687, 160920.603] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_802._Benchmark.benchmark_Cluster_802  thrpt   30  160733.145 ± 187.458  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_803._Benchmark.benchmark_Cluster_803$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_803._Benchmark.benchmark_Cluster_803

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56623.597 ops/s
# Warmup Iteration   2: 131341.114 ops/s
# Warmup Iteration   3: 189700.031 ops/s
# Warmup Iteration   4: 191572.862 ops/s
# Warmup Iteration   5: 192042.599 ops/s
# Warmup Iteration   6: 151884.636 ops/s
# Warmup Iteration   7: 191350.113 ops/s
# Warmup Iteration   8: 191153.900 ops/s
# Warmup Iteration   9: 190934.125 ops/s
# Warmup Iteration  10: 191120.406 ops/s
# Warmup Iteration  11: 191116.341 ops/s
# Warmup Iteration  12: 191009.465 ops/s
# Warmup Iteration  13: 190757.294 ops/s
# Warmup Iteration  14: 191610.752 ops/s
# Warmup Iteration  15: 190660.089 ops/s
# Warmup Iteration  16: 190014.164 ops/s
# Warmup Iteration  17: 190215.144 ops/s
# Warmup Iteration  18: 189998.274 ops/s
# Warmup Iteration  19: 190141.428 ops/s
# Warmup Iteration  20: 189844.985 ops/s
# Warmup Iteration  21: 190199.189 ops/s
# Warmup Iteration  22: 189735.996 ops/s
# Warmup Iteration  23: 189493.330 ops/s
# Warmup Iteration  24: 190504.095 ops/s
# Warmup Iteration  25: 190013.384 ops/s
# Warmup Iteration  26: 189896.528 ops/s
# Warmup Iteration  27: 190487.743 ops/s
# Warmup Iteration  28: 190620.205 ops/s
# Warmup Iteration  29: 190153.892 ops/s
# Warmup Iteration  30: 190181.559 ops/s
Iteration   1: 190020.558 ops/s
Iteration   2: 191288.658 ops/s
Iteration   3: 191962.391 ops/s
Iteration   4: 190522.723 ops/s
Iteration   5: 190953.951 ops/s
Iteration   6: 190842.387 ops/s
Iteration   7: 191103.879 ops/s
Iteration   8: 191204.630 ops/s
Iteration   9: 190139.650 ops/s
Iteration  10: 191544.223 ops/s
Iteration  11: 191892.257 ops/s
Iteration  12: 190768.152 ops/s
Iteration  13: 190897.670 ops/s
Iteration  14: 189819.394 ops/s
Iteration  15: 191144.994 ops/s
Iteration  16: 190824.583 ops/s
Iteration  17: 190726.461 ops/s
Iteration  18: 191425.989 ops/s
Iteration  19: 190280.911 ops/s
Iteration  20: 190122.695 ops/s
Iteration  21: 190340.303 ops/s
Iteration  22: 190315.359 ops/s
Iteration  23: 189839.362 ops/s
Iteration  24: 190939.173 ops/s
Iteration  25: 190821.229 ops/s
Iteration  26: 191030.438 ops/s
Iteration  27: 191406.983 ops/s
Iteration  28: 189859.646 ops/s
Iteration  29: 191040.234 ops/s
Iteration  30: 189600.300 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_803._Benchmark.benchmark_Cluster_803":
  190755.973 ±(99.9%) 413.151 ops/s [Average]
  (min, avg, max) = (189600.300, 190755.973, 191962.391), stdev = 618.385
  CI (99.9%): [190342.822, 191169.124] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_803._Benchmark.benchmark_Cluster_803  thrpt   30  190755.973 ± 413.151  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_804._Benchmark.benchmark_Cluster_804$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_804._Benchmark.benchmark_Cluster_804

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91253.511 ops/s
# Warmup Iteration   2: 114220.466 ops/s
# Warmup Iteration   3: 150674.615 ops/s
# Warmup Iteration   4: 171064.136 ops/s
# Warmup Iteration   5: 171339.901 ops/s
# Warmup Iteration   6: 169882.035 ops/s
# Warmup Iteration   7: 171043.967 ops/s
# Warmup Iteration   8: 171197.078 ops/s
# Warmup Iteration   9: 171418.144 ops/s
# Warmup Iteration  10: 170886.429 ops/s
# Warmup Iteration  11: 171425.636 ops/s
# Warmup Iteration  12: 132189.949 ops/s
# Warmup Iteration  13: 171553.830 ops/s
# Warmup Iteration  14: 171435.406 ops/s
# Warmup Iteration  15: 171442.044 ops/s
# Warmup Iteration  16: 171322.603 ops/s
# Warmup Iteration  17: 179254.875 ops/s
# Warmup Iteration  18: 179030.355 ops/s
# Warmup Iteration  19: 179150.512 ops/s
# Warmup Iteration  20: 178970.316 ops/s
# Warmup Iteration  21: 179053.288 ops/s
# Warmup Iteration  22: 178213.782 ops/s
# Warmup Iteration  23: 179136.849 ops/s
# Warmup Iteration  24: 178935.037 ops/s
# Warmup Iteration  25: 179335.897 ops/s
# Warmup Iteration  26: 178549.276 ops/s
# Warmup Iteration  27: 179026.325 ops/s
# Warmup Iteration  28: 179127.581 ops/s
# Warmup Iteration  29: 178537.173 ops/s
# Warmup Iteration  30: 178999.697 ops/s
Iteration   1: 179101.484 ops/s
Iteration   2: 178796.148 ops/s
Iteration   3: 178995.073 ops/s
Iteration   4: 179200.497 ops/s
Iteration   5: 178053.636 ops/s
Iteration   6: 178688.396 ops/s
Iteration   7: 178194.530 ops/s
Iteration   8: 178241.882 ops/s
Iteration   9: 178631.434 ops/s
Iteration  10: 178758.170 ops/s
Iteration  11: 179043.901 ops/s
Iteration  12: 178880.948 ops/s
Iteration  13: 178746.910 ops/s
Iteration  14: 178548.510 ops/s
Iteration  15: 178472.489 ops/s
Iteration  16: 179135.364 ops/s
Iteration  17: 178755.040 ops/s
Iteration  18: 179075.540 ops/s
Iteration  19: 178462.816 ops/s
Iteration  20: 177967.446 ops/s
Iteration  21: 178768.007 ops/s
Iteration  22: 179139.513 ops/s
Iteration  23: 179089.099 ops/s
Iteration  24: 179200.317 ops/s
Iteration  25: 178746.131 ops/s
Iteration  26: 179101.282 ops/s
Iteration  27: 179119.770 ops/s
Iteration  28: 178793.474 ops/s
Iteration  29: 178981.734 ops/s
Iteration  30: 178265.350 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_804._Benchmark.benchmark_Cluster_804":
  178765.163 ±(99.9%) 236.777 ops/s [Average]
  (min, avg, max) = (177967.446, 178765.163, 179200.497), stdev = 354.397
  CI (99.9%): [178528.386, 179001.940] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_804._Benchmark.benchmark_Cluster_804  thrpt   30  178765.163 ± 236.777  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_805._Benchmark.benchmark_Cluster_805$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_805._Benchmark.benchmark_Cluster_805

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53016.509 ops/s
# Warmup Iteration   2: 122375.662 ops/s
# Warmup Iteration   3: 179978.025 ops/s
# Warmup Iteration   4: 181283.079 ops/s
# Warmup Iteration   5: 181708.249 ops/s
# Warmup Iteration   6: 143293.812 ops/s
# Warmup Iteration   7: 182062.008 ops/s
# Warmup Iteration   8: 181825.445 ops/s
# Warmup Iteration   9: 181309.478 ops/s
# Warmup Iteration  10: 182048.844 ops/s
# Warmup Iteration  11: 182149.718 ops/s
# Warmup Iteration  12: 181824.229 ops/s
# Warmup Iteration  13: 181673.706 ops/s
# Warmup Iteration  14: 181435.017 ops/s
# Warmup Iteration  15: 181689.043 ops/s
# Warmup Iteration  16: 182134.035 ops/s
# Warmup Iteration  17: 181734.321 ops/s
# Warmup Iteration  18: 181210.137 ops/s
# Warmup Iteration  19: 181457.637 ops/s
# Warmup Iteration  20: 181821.620 ops/s
# Warmup Iteration  21: 182401.539 ops/s
# Warmup Iteration  22: 181766.216 ops/s
# Warmup Iteration  23: 181932.001 ops/s
# Warmup Iteration  24: 181292.806 ops/s
# Warmup Iteration  25: 181913.891 ops/s
# Warmup Iteration  26: 181891.187 ops/s
# Warmup Iteration  27: 182128.897 ops/s
# Warmup Iteration  28: 181755.610 ops/s
# Warmup Iteration  29: 180995.076 ops/s
# Warmup Iteration  30: 181404.217 ops/s
Iteration   1: 181354.148 ops/s
Iteration   2: 181760.874 ops/s
Iteration   3: 181961.352 ops/s
Iteration   4: 181509.075 ops/s
Iteration   5: 181574.198 ops/s
Iteration   6: 181940.802 ops/s
Iteration   7: 181926.662 ops/s
Iteration   8: 181779.429 ops/s
Iteration   9: 181364.156 ops/s
Iteration  10: 181013.428 ops/s
Iteration  11: 180959.012 ops/s
Iteration  12: 181095.880 ops/s
Iteration  13: 181867.029 ops/s
Iteration  14: 181677.666 ops/s
Iteration  15: 181016.806 ops/s
Iteration  16: 181383.535 ops/s
Iteration  17: 181360.929 ops/s
Iteration  18: 180951.433 ops/s
Iteration  19: 181447.560 ops/s
Iteration  20: 181195.581 ops/s
Iteration  21: 181219.087 ops/s
Iteration  22: 181516.669 ops/s
Iteration  23: 182082.238 ops/s
Iteration  24: 182173.513 ops/s
Iteration  25: 181526.731 ops/s
Iteration  26: 181902.075 ops/s
Iteration  27: 181318.032 ops/s
Iteration  28: 181009.230 ops/s
Iteration  29: 181690.097 ops/s
Iteration  30: 181707.841 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_805._Benchmark.benchmark_Cluster_805":
  181509.502 ±(99.9%) 238.230 ops/s [Average]
  (min, avg, max) = (180951.433, 181509.502, 182173.513), stdev = 356.572
  CI (99.9%): [181271.272, 181747.733] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_805._Benchmark.benchmark_Cluster_805  thrpt   30  181509.502 ± 238.230  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_806._Benchmark.benchmark_Cluster_806$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_806._Benchmark.benchmark_Cluster_806

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80669.925 ops/s
# Warmup Iteration   2: 127425.566 ops/s
# Warmup Iteration   3: 167103.843 ops/s
# Warmup Iteration   4: 165444.105 ops/s
# Warmup Iteration   5: 166900.674 ops/s
# Warmup Iteration   6: 166850.706 ops/s
# Warmup Iteration   7: 131626.536 ops/s
# Warmup Iteration   8: 167131.457 ops/s
# Warmup Iteration   9: 167322.457 ops/s
# Warmup Iteration  10: 167368.539 ops/s
# Warmup Iteration  11: 167346.469 ops/s
# Warmup Iteration  12: 167377.995 ops/s
# Warmup Iteration  13: 167076.461 ops/s
# Warmup Iteration  14: 167142.721 ops/s
# Warmup Iteration  15: 167186.408 ops/s
# Warmup Iteration  16: 167281.320 ops/s
# Warmup Iteration  17: 166986.863 ops/s
# Warmup Iteration  18: 166847.110 ops/s
# Warmup Iteration  19: 167375.122 ops/s
# Warmup Iteration  20: 167143.348 ops/s
# Warmup Iteration  21: 167077.170 ops/s
# Warmup Iteration  22: 167163.244 ops/s
# Warmup Iteration  23: 167272.902 ops/s
# Warmup Iteration  24: 167346.064 ops/s
# Warmup Iteration  25: 167468.184 ops/s
# Warmup Iteration  26: 167302.722 ops/s
# Warmup Iteration  27: 167305.726 ops/s
# Warmup Iteration  28: 166917.782 ops/s
# Warmup Iteration  29: 167332.674 ops/s
# Warmup Iteration  30: 167196.767 ops/s
Iteration   1: 167271.049 ops/s
Iteration   2: 167427.758 ops/s
Iteration   3: 167387.561 ops/s
Iteration   4: 167569.116 ops/s
Iteration   5: 167038.608 ops/s
Iteration   6: 167505.863 ops/s
Iteration   7: 167364.366 ops/s
Iteration   8: 167486.123 ops/s
Iteration   9: 167334.990 ops/s
Iteration  10: 167385.342 ops/s
Iteration  11: 167619.452 ops/s
Iteration  12: 167311.130 ops/s
Iteration  13: 167299.531 ops/s
Iteration  14: 167319.004 ops/s
Iteration  15: 167301.841 ops/s
Iteration  16: 167295.427 ops/s
Iteration  17: 167492.313 ops/s
Iteration  18: 167389.888 ops/s
Iteration  19: 167326.664 ops/s
Iteration  20: 167104.992 ops/s
Iteration  21: 167463.239 ops/s
Iteration  22: 167366.621 ops/s
Iteration  23: 167320.465 ops/s
Iteration  24: 167301.185 ops/s
Iteration  25: 167519.555 ops/s
Iteration  26: 167359.898 ops/s
Iteration  27: 167527.952 ops/s
Iteration  28: 167240.790 ops/s
Iteration  29: 167361.801 ops/s
Iteration  30: 167473.074 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_806._Benchmark.benchmark_Cluster_806":
  167372.187 ±(99.9%) 83.946 ops/s [Average]
  (min, avg, max) = (167038.608, 167372.187, 167619.452), stdev = 125.646
  CI (99.9%): [167288.241, 167456.133] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score    Error  Units
Cluster_806._Benchmark.benchmark_Cluster_806  thrpt   30  167372.187 ± 83.946  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_807._Benchmark.benchmark_Cluster_807$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_807._Benchmark.benchmark_Cluster_807

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73545.152 ops/s
# Warmup Iteration   2: 116012.698 ops/s
# Warmup Iteration   3: 164846.632 ops/s
# Warmup Iteration   4: 164180.441 ops/s
# Warmup Iteration   5: 165612.098 ops/s
# Warmup Iteration   6: 165207.862 ops/s
# Warmup Iteration   7: 140011.811 ops/s
# Warmup Iteration   8: 156088.200 ops/s
# Warmup Iteration   9: 164999.287 ops/s
# Warmup Iteration  10: 165509.424 ops/s
# Warmup Iteration  11: 165348.661 ops/s
# Warmup Iteration  12: 165566.787 ops/s
# Warmup Iteration  13: 165247.315 ops/s
# Warmup Iteration  14: 165452.233 ops/s
# Warmup Iteration  15: 165243.672 ops/s
# Warmup Iteration  16: 165355.992 ops/s
# Warmup Iteration  17: 165909.053 ops/s
# Warmup Iteration  18: 165863.546 ops/s
# Warmup Iteration  19: 165174.557 ops/s
# Warmup Iteration  20: 165614.125 ops/s
# Warmup Iteration  21: 165538.558 ops/s
# Warmup Iteration  22: 165665.463 ops/s
# Warmup Iteration  23: 165771.953 ops/s
# Warmup Iteration  24: 165579.976 ops/s
# Warmup Iteration  25: 165502.272 ops/s
# Warmup Iteration  26: 165726.891 ops/s
# Warmup Iteration  27: 165787.928 ops/s
# Warmup Iteration  28: 165617.068 ops/s
# Warmup Iteration  29: 165863.036 ops/s
# Warmup Iteration  30: 165682.362 ops/s
Iteration   1: 165851.852 ops/s
Iteration   2: 165754.396 ops/s
Iteration   3: 165675.368 ops/s
Iteration   4: 165391.829 ops/s
Iteration   5: 165399.217 ops/s
Iteration   6: 165525.686 ops/s
Iteration   7: 165611.681 ops/s
Iteration   8: 165694.683 ops/s
Iteration   9: 165891.283 ops/s
Iteration  10: 166001.821 ops/s
Iteration  11: 165843.770 ops/s
Iteration  12: 165863.554 ops/s
Iteration  13: 165578.454 ops/s
Iteration  14: 165669.306 ops/s
Iteration  15: 165675.687 ops/s
Iteration  16: 166033.433 ops/s
Iteration  17: 165300.622 ops/s
Iteration  18: 165803.756 ops/s
Iteration  19: 165725.560 ops/s
Iteration  20: 165539.717 ops/s
Iteration  21: 165351.086 ops/s
Iteration  22: 165106.647 ops/s
Iteration  23: 165672.675 ops/s
Iteration  24: 165198.492 ops/s
Iteration  25: 165185.590 ops/s
Iteration  26: 165060.738 ops/s
Iteration  27: 165440.576 ops/s
Iteration  28: 165385.235 ops/s
Iteration  29: 165740.217 ops/s
Iteration  30: 165859.760 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_807._Benchmark.benchmark_Cluster_807":
  165594.423 ±(99.9%) 175.803 ops/s [Average]
  (min, avg, max) = (165060.738, 165594.423, 166033.433), stdev = 263.134
  CI (99.9%): [165418.620, 165770.226] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_807._Benchmark.benchmark_Cluster_807  thrpt   30  165594.423 ± 175.803  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_808._Benchmark.benchmark_Cluster_808$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_808._Benchmark.benchmark_Cluster_808

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 87043.452 ops/s
# Warmup Iteration   2: 94007.965 ops/s
# Warmup Iteration   3: 121449.711 ops/s
# Warmup Iteration   4: 132784.384 ops/s
# Warmup Iteration   5: 133263.044 ops/s
# Warmup Iteration   6: 132719.827 ops/s
# Warmup Iteration   7: 133579.478 ops/s
# Warmup Iteration   8: 132747.273 ops/s
# Warmup Iteration   9: 132988.994 ops/s
# Warmup Iteration  10: 132458.558 ops/s
# Warmup Iteration  11: 132984.384 ops/s
# Warmup Iteration  12: 123456.705 ops/s
# Warmup Iteration  13: 114937.273 ops/s
# Warmup Iteration  14: 133461.562 ops/s
# Warmup Iteration  15: 132997.384 ops/s
# Warmup Iteration  16: 133255.453 ops/s
# Warmup Iteration  17: 139377.003 ops/s
# Warmup Iteration  18: 139566.073 ops/s
# Warmup Iteration  19: 139297.020 ops/s
# Warmup Iteration  20: 139701.629 ops/s
# Warmup Iteration  21: 139369.353 ops/s
# Warmup Iteration  22: 139353.261 ops/s
# Warmup Iteration  23: 139208.276 ops/s
# Warmup Iteration  24: 139815.409 ops/s
# Warmup Iteration  25: 139621.872 ops/s
# Warmup Iteration  26: 139306.302 ops/s
# Warmup Iteration  27: 139017.144 ops/s
# Warmup Iteration  28: 139219.607 ops/s
# Warmup Iteration  29: 138883.089 ops/s
# Warmup Iteration  30: 139331.991 ops/s
Iteration   1: 139493.569 ops/s
Iteration   2: 139354.564 ops/s
Iteration   3: 139597.395 ops/s
Iteration   4: 139724.049 ops/s
Iteration   5: 139555.753 ops/s
Iteration   6: 139484.931 ops/s
Iteration   7: 139554.247 ops/s
Iteration   8: 139819.265 ops/s
Iteration   9: 139587.714 ops/s
Iteration  10: 139542.372 ops/s
Iteration  11: 139598.665 ops/s
Iteration  12: 139649.272 ops/s
Iteration  13: 139458.019 ops/s
Iteration  14: 138998.398 ops/s
Iteration  15: 139457.670 ops/s
Iteration  16: 139502.125 ops/s
Iteration  17: 139887.259 ops/s
Iteration  18: 139806.545 ops/s
Iteration  19: 139716.422 ops/s
Iteration  20: 139639.332 ops/s
Iteration  21: 139772.571 ops/s
Iteration  22: 139568.952 ops/s
Iteration  23: 139811.506 ops/s
Iteration  24: 140004.555 ops/s
Iteration  25: 140023.031 ops/s
Iteration  26: 139425.163 ops/s
Iteration  27: 139837.039 ops/s
Iteration  28: 139809.258 ops/s
Iteration  29: 139858.514 ops/s
Iteration  30: 139159.435 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_808._Benchmark.benchmark_Cluster_808":
  139623.253 ±(99.9%) 152.140 ops/s [Average]
  (min, avg, max) = (138998.398, 139623.253, 140023.031), stdev = 227.716
  CI (99.9%): [139471.113, 139775.393] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_808._Benchmark.benchmark_Cluster_808  thrpt   30  139623.253 ± 152.140  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_809._Benchmark.benchmark_Cluster_809$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_809._Benchmark.benchmark_Cluster_809

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64572.179 ops/s
# Warmup Iteration   2: 119793.155 ops/s
# Warmup Iteration   3: 181685.400 ops/s
# Warmup Iteration   4: 180205.223 ops/s
# Warmup Iteration   5: 181102.013 ops/s
# Warmup Iteration   6: 181805.278 ops/s
# Warmup Iteration   7: 142416.022 ops/s
# Warmup Iteration   8: 181111.838 ops/s
# Warmup Iteration   9: 181772.216 ops/s
# Warmup Iteration  10: 181723.277 ops/s
# Warmup Iteration  11: 180972.566 ops/s
# Warmup Iteration  12: 180944.199 ops/s
# Warmup Iteration  13: 181213.215 ops/s
# Warmup Iteration  14: 181047.289 ops/s
# Warmup Iteration  15: 180394.307 ops/s
# Warmup Iteration  16: 180600.426 ops/s
# Warmup Iteration  17: 180829.108 ops/s
# Warmup Iteration  18: 180589.837 ops/s
# Warmup Iteration  19: 180659.203 ops/s
# Warmup Iteration  20: 180475.032 ops/s
# Warmup Iteration  21: 180620.716 ops/s
# Warmup Iteration  22: 180655.452 ops/s
# Warmup Iteration  23: 181153.348 ops/s
# Warmup Iteration  24: 181085.758 ops/s
# Warmup Iteration  25: 181014.144 ops/s
# Warmup Iteration  26: 180930.937 ops/s
# Warmup Iteration  27: 181436.327 ops/s
# Warmup Iteration  28: 181366.733 ops/s
# Warmup Iteration  29: 181035.648 ops/s
# Warmup Iteration  30: 181417.178 ops/s
Iteration   1: 180553.434 ops/s
Iteration   2: 181641.159 ops/s
Iteration   3: 180598.087 ops/s
Iteration   4: 180850.294 ops/s
Iteration   5: 180236.132 ops/s
Iteration   6: 181398.878 ops/s
Iteration   7: 181043.009 ops/s
Iteration   8: 181365.008 ops/s
Iteration   9: 181093.693 ops/s
Iteration  10: 181319.597 ops/s
Iteration  11: 180911.797 ops/s
Iteration  12: 180236.173 ops/s
Iteration  13: 180808.272 ops/s
Iteration  14: 180750.898 ops/s
Iteration  15: 181393.306 ops/s
Iteration  16: 181003.710 ops/s
Iteration  17: 180836.296 ops/s
Iteration  18: 181074.010 ops/s
Iteration  19: 181241.439 ops/s
Iteration  20: 180662.383 ops/s
Iteration  21: 180613.609 ops/s
Iteration  22: 180749.335 ops/s
Iteration  23: 181557.541 ops/s
Iteration  24: 181073.574 ops/s
Iteration  25: 180750.799 ops/s
Iteration  26: 181222.012 ops/s
Iteration  27: 181491.464 ops/s
Iteration  28: 180841.269 ops/s
Iteration  29: 180945.593 ops/s
Iteration  30: 180537.840 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_809._Benchmark.benchmark_Cluster_809":
  180960.020 ±(99.9%) 245.244 ops/s [Average]
  (min, avg, max) = (180236.132, 180960.020, 181641.159), stdev = 367.069
  CI (99.9%): [180714.777, 181205.264] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_809._Benchmark.benchmark_Cluster_809  thrpt   30  180960.020 ± 245.244  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_81._Benchmark.benchmark_Cluster_81$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_81._Benchmark.benchmark_Cluster_81

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 85100.084 ops/s
# Warmup Iteration   2: 97100.396 ops/s
# Warmup Iteration   3: 125878.119 ops/s
# Warmup Iteration   4: 138098.383 ops/s
# Warmup Iteration   5: 138148.897 ops/s
# Warmup Iteration   6: 136736.269 ops/s
# Warmup Iteration   7: 138021.494 ops/s
# Warmup Iteration   8: 137985.934 ops/s
# Warmup Iteration   9: 138157.092 ops/s
# Warmup Iteration  10: 137429.501 ops/s
# Warmup Iteration  11: 137574.323 ops/s
# Warmup Iteration  12: 116789.173 ops/s
# Warmup Iteration  13: 129636.933 ops/s
# Warmup Iteration  14: 137597.176 ops/s
# Warmup Iteration  15: 137612.120 ops/s
# Warmup Iteration  16: 137666.899 ops/s
# Warmup Iteration  17: 144774.499 ops/s
# Warmup Iteration  18: 144938.714 ops/s
# Warmup Iteration  19: 144875.246 ops/s
# Warmup Iteration  20: 145198.682 ops/s
# Warmup Iteration  21: 144566.591 ops/s
# Warmup Iteration  22: 144963.481 ops/s
# Warmup Iteration  23: 145322.263 ops/s
# Warmup Iteration  24: 145212.760 ops/s
# Warmup Iteration  25: 144774.644 ops/s
# Warmup Iteration  26: 144950.383 ops/s
# Warmup Iteration  27: 145021.411 ops/s
# Warmup Iteration  28: 144722.012 ops/s
# Warmup Iteration  29: 144768.438 ops/s
# Warmup Iteration  30: 145347.496 ops/s
Iteration   1: 144597.413 ops/s
Iteration   2: 144871.504 ops/s
Iteration   3: 145273.597 ops/s
Iteration   4: 144809.468 ops/s
Iteration   5: 145444.423 ops/s
Iteration   6: 144871.522 ops/s
Iteration   7: 144568.101 ops/s
Iteration   8: 145049.773 ops/s
Iteration   9: 145045.620 ops/s
Iteration  10: 145055.980 ops/s
Iteration  11: 145031.643 ops/s
Iteration  12: 144789.162 ops/s
Iteration  13: 145020.056 ops/s
Iteration  14: 145202.964 ops/s
Iteration  15: 144385.675 ops/s
Iteration  16: 144241.263 ops/s
Iteration  17: 144410.336 ops/s
Iteration  18: 144322.045 ops/s
Iteration  19: 144451.565 ops/s
Iteration  20: 144488.783 ops/s
Iteration  21: 145118.443 ops/s
Iteration  22: 145111.846 ops/s
Iteration  23: 144808.850 ops/s
Iteration  24: 144849.485 ops/s
Iteration  25: 144805.917 ops/s
Iteration  26: 144914.954 ops/s
Iteration  27: 144598.042 ops/s
Iteration  28: 144629.871 ops/s
Iteration  29: 144989.741 ops/s
Iteration  30: 145129.829 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_81._Benchmark.benchmark_Cluster_81":
  144829.596 ±(99.9%) 203.202 ops/s [Average]
  (min, avg, max) = (144241.263, 144829.596, 145444.423), stdev = 304.144
  CI (99.9%): [144626.393, 145032.798] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_81._Benchmark.benchmark_Cluster_81  thrpt   30  144829.596 ± 203.202  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_810._Benchmark.benchmark_Cluster_810$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_810._Benchmark.benchmark_Cluster_810

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 114056.873 ops/s
# Warmup Iteration   2: 175170.072 ops/s
# Warmup Iteration   3: 253044.714 ops/s
# Warmup Iteration   4: 250135.646 ops/s
# Warmup Iteration   5: 252151.230 ops/s
# Warmup Iteration   6: 251619.528 ops/s
# Warmup Iteration   7: 222201.417 ops/s
# Warmup Iteration   8: 229280.478 ops/s
# Warmup Iteration   9: 252054.738 ops/s
# Warmup Iteration  10: 252388.685 ops/s
# Warmup Iteration  11: 252623.389 ops/s
# Warmup Iteration  12: 252694.378 ops/s
# Warmup Iteration  13: 252508.655 ops/s
# Warmup Iteration  14: 252050.542 ops/s
# Warmup Iteration  15: 252839.242 ops/s
# Warmup Iteration  16: 252425.123 ops/s
# Warmup Iteration  17: 259862.139 ops/s
# Warmup Iteration  18: 259648.336 ops/s
# Warmup Iteration  19: 258782.543 ops/s
# Warmup Iteration  20: 258933.837 ops/s
# Warmup Iteration  21: 258649.898 ops/s
# Warmup Iteration  22: 258858.982 ops/s
# Warmup Iteration  23: 258968.248 ops/s
# Warmup Iteration  24: 259267.420 ops/s
# Warmup Iteration  25: 259775.960 ops/s
# Warmup Iteration  26: 259213.665 ops/s
# Warmup Iteration  27: 260319.410 ops/s
# Warmup Iteration  28: 259573.492 ops/s
# Warmup Iteration  29: 259699.742 ops/s
# Warmup Iteration  30: 259568.912 ops/s
Iteration   1: 260095.449 ops/s
Iteration   2: 259687.915 ops/s
Iteration   3: 260850.233 ops/s
Iteration   4: 260044.088 ops/s
Iteration   5: 259871.809 ops/s
Iteration   6: 259454.161 ops/s
Iteration   7: 259521.088 ops/s
Iteration   8: 258790.452 ops/s
Iteration   9: 260288.060 ops/s
Iteration  10: 259983.439 ops/s
Iteration  11: 260592.909 ops/s
Iteration  12: 260683.985 ops/s
Iteration  13: 260487.288 ops/s
Iteration  14: 260573.117 ops/s
Iteration  15: 260240.683 ops/s
Iteration  16: 260614.800 ops/s
Iteration  17: 259822.238 ops/s
Iteration  18: 259484.319 ops/s
Iteration  19: 258601.431 ops/s
Iteration  20: 259225.348 ops/s
Iteration  21: 259183.499 ops/s
Iteration  22: 259536.127 ops/s
Iteration  23: 259701.110 ops/s
Iteration  24: 260111.586 ops/s
Iteration  25: 260137.295 ops/s
Iteration  26: 260001.348 ops/s
Iteration  27: 260445.447 ops/s
Iteration  28: 260117.499 ops/s
Iteration  29: 260161.038 ops/s
Iteration  30: 260090.643 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_810._Benchmark.benchmark_Cluster_810":
  259946.613 ±(99.9%) 367.190 ops/s [Average]
  (min, avg, max) = (258601.431, 259946.613, 260850.233), stdev = 549.592
  CI (99.9%): [259579.424, 260313.803] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_810._Benchmark.benchmark_Cluster_810  thrpt   30  259946.613 ± 367.190  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_811._Benchmark.benchmark_Cluster_811$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_811._Benchmark.benchmark_Cluster_811

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 41863.907 ops/s
# Warmup Iteration   2: 100942.798 ops/s
# Warmup Iteration   3: 168782.426 ops/s
# Warmup Iteration   4: 168063.629 ops/s
# Warmup Iteration   5: 170333.515 ops/s
# Warmup Iteration   6: 169520.476 ops/s
# Warmup Iteration   7: 133848.385 ops/s
# Warmup Iteration   8: 169009.471 ops/s
# Warmup Iteration   9: 169670.729 ops/s
# Warmup Iteration  10: 169073.517 ops/s
# Warmup Iteration  11: 170055.890 ops/s
# Warmup Iteration  12: 169597.768 ops/s
# Warmup Iteration  13: 169337.288 ops/s
# Warmup Iteration  14: 168841.674 ops/s
# Warmup Iteration  15: 168751.122 ops/s
# Warmup Iteration  16: 169378.319 ops/s
# Warmup Iteration  17: 170286.851 ops/s
# Warmup Iteration  18: 169466.075 ops/s
# Warmup Iteration  19: 169145.030 ops/s
# Warmup Iteration  20: 169994.333 ops/s
# Warmup Iteration  21: 169947.590 ops/s
# Warmup Iteration  22: 168981.289 ops/s
# Warmup Iteration  23: 169356.298 ops/s
# Warmup Iteration  24: 169244.542 ops/s
# Warmup Iteration  25: 169300.680 ops/s
# Warmup Iteration  26: 169475.731 ops/s
# Warmup Iteration  27: 169773.865 ops/s
# Warmup Iteration  28: 168860.332 ops/s
# Warmup Iteration  29: 169567.725 ops/s
# Warmup Iteration  30: 169246.480 ops/s
Iteration   1: 169294.020 ops/s
Iteration   2: 169432.602 ops/s
Iteration   3: 169086.189 ops/s
Iteration   4: 167830.891 ops/s
Iteration   5: 168452.831 ops/s
Iteration   6: 168754.967 ops/s
Iteration   7: 169154.507 ops/s
Iteration   8: 169104.623 ops/s
Iteration   9: 169633.022 ops/s
Iteration  10: 168641.204 ops/s
Iteration  11: 168850.850 ops/s
Iteration  12: 168985.047 ops/s
Iteration  13: 169454.766 ops/s
Iteration  14: 169072.035 ops/s
Iteration  15: 169086.500 ops/s
Iteration  16: 169064.694 ops/s
Iteration  17: 170051.021 ops/s
Iteration  18: 169063.752 ops/s
Iteration  19: 168823.037 ops/s
Iteration  20: 168665.092 ops/s
Iteration  21: 169076.373 ops/s
Iteration  22: 169742.377 ops/s
Iteration  23: 169649.452 ops/s
Iteration  24: 169094.400 ops/s
Iteration  25: 169075.694 ops/s
Iteration  26: 169154.540 ops/s
Iteration  27: 169090.429 ops/s
Iteration  28: 168985.628 ops/s
Iteration  29: 169200.488 ops/s
Iteration  30: 170010.086 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_811._Benchmark.benchmark_Cluster_811":
  169119.371 ±(99.9%) 296.942 ops/s [Average]
  (min, avg, max) = (167830.891, 169119.371, 170051.021), stdev = 444.449
  CI (99.9%): [168822.429, 169416.313] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_811._Benchmark.benchmark_Cluster_811  thrpt   30  169119.371 ± 296.942  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_812._Benchmark.benchmark_Cluster_812$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_812._Benchmark.benchmark_Cluster_812

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68868.232 ops/s
# Warmup Iteration   2: 99949.608 ops/s
# Warmup Iteration   3: 154993.028 ops/s
# Warmup Iteration   4: 161798.301 ops/s
# Warmup Iteration   5: 161113.828 ops/s
# Warmup Iteration   6: 160717.739 ops/s
# Warmup Iteration   7: 160743.587 ops/s
# Warmup Iteration   8: 161321.881 ops/s
# Warmup Iteration   9: 155660.521 ops/s
# Warmup Iteration  10: 131874.964 ops/s
# Warmup Iteration  11: 161867.271 ops/s
# Warmup Iteration  12: 161724.596 ops/s
# Warmup Iteration  13: 161555.881 ops/s
# Warmup Iteration  14: 161547.485 ops/s
# Warmup Iteration  15: 161809.856 ops/s
# Warmup Iteration  16: 161540.170 ops/s
# Warmup Iteration  17: 164729.635 ops/s
# Warmup Iteration  18: 164454.087 ops/s
# Warmup Iteration  19: 164441.643 ops/s
# Warmup Iteration  20: 164901.629 ops/s
# Warmup Iteration  21: 164601.554 ops/s
# Warmup Iteration  22: 164773.236 ops/s
# Warmup Iteration  23: 164744.767 ops/s
# Warmup Iteration  24: 164778.637 ops/s
# Warmup Iteration  25: 164665.812 ops/s
# Warmup Iteration  26: 165038.615 ops/s
# Warmup Iteration  27: 165134.536 ops/s
# Warmup Iteration  28: 165003.531 ops/s
# Warmup Iteration  29: 165089.481 ops/s
# Warmup Iteration  30: 165046.499 ops/s
Iteration   1: 165198.632 ops/s
Iteration   2: 164858.024 ops/s
Iteration   3: 164920.114 ops/s
Iteration   4: 164676.088 ops/s
Iteration   5: 164865.989 ops/s
Iteration   6: 164861.373 ops/s
Iteration   7: 164676.607 ops/s
Iteration   8: 165341.114 ops/s
Iteration   9: 165337.076 ops/s
Iteration  10: 165157.419 ops/s
Iteration  11: 165440.861 ops/s
Iteration  12: 165234.144 ops/s
Iteration  13: 165029.686 ops/s
Iteration  14: 165160.432 ops/s
Iteration  15: 165031.024 ops/s
Iteration  16: 164548.388 ops/s
Iteration  17: 164962.994 ops/s
Iteration  18: 164833.290 ops/s
Iteration  19: 164445.964 ops/s
Iteration  20: 164994.316 ops/s
Iteration  21: 164989.825 ops/s
Iteration  22: 164881.167 ops/s
Iteration  23: 165069.113 ops/s
Iteration  24: 165018.033 ops/s
Iteration  25: 164777.067 ops/s
Iteration  26: 165055.225 ops/s
Iteration  27: 165005.737 ops/s
Iteration  28: 164952.201 ops/s
Iteration  29: 165036.212 ops/s
Iteration  30: 164765.810 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_812._Benchmark.benchmark_Cluster_812":
  164970.798 ±(99.9%) 151.404 ops/s [Average]
  (min, avg, max) = (164445.964, 164970.798, 165440.861), stdev = 226.614
  CI (99.9%): [164819.394, 165122.201] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_812._Benchmark.benchmark_Cluster_812  thrpt   30  164970.798 ± 151.404  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_813._Benchmark.benchmark_Cluster_813$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_813._Benchmark.benchmark_Cluster_813

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63344.686 ops/s
# Warmup Iteration   2: 87166.441 ops/s
# Warmup Iteration   3: 135159.928 ops/s
# Warmup Iteration   4: 141666.527 ops/s
# Warmup Iteration   5: 140298.436 ops/s
# Warmup Iteration   6: 141493.713 ops/s
# Warmup Iteration   7: 141585.666 ops/s
# Warmup Iteration   8: 141511.116 ops/s
# Warmup Iteration   9: 141088.982 ops/s
# Warmup Iteration  10: 110006.197 ops/s
# Warmup Iteration  11: 141787.665 ops/s
# Warmup Iteration  12: 141742.101 ops/s
# Warmup Iteration  13: 141725.717 ops/s
# Warmup Iteration  14: 141745.268 ops/s
# Warmup Iteration  15: 141734.363 ops/s
# Warmup Iteration  16: 141597.357 ops/s
# Warmup Iteration  17: 144396.157 ops/s
# Warmup Iteration  18: 144366.407 ops/s
# Warmup Iteration  19: 144476.722 ops/s
# Warmup Iteration  20: 144573.262 ops/s
# Warmup Iteration  21: 144421.383 ops/s
# Warmup Iteration  22: 144088.302 ops/s
# Warmup Iteration  23: 144491.348 ops/s
# Warmup Iteration  24: 144487.718 ops/s
# Warmup Iteration  25: 144354.615 ops/s
# Warmup Iteration  26: 144596.306 ops/s
# Warmup Iteration  27: 144204.481 ops/s
# Warmup Iteration  28: 144280.360 ops/s
# Warmup Iteration  29: 144495.484 ops/s
# Warmup Iteration  30: 144471.651 ops/s
Iteration   1: 144394.588 ops/s
Iteration   2: 144139.989 ops/s
Iteration   3: 144442.457 ops/s
Iteration   4: 144507.346 ops/s
Iteration   5: 144118.224 ops/s
Iteration   6: 144126.753 ops/s
Iteration   7: 144474.125 ops/s
Iteration   8: 144197.268 ops/s
Iteration   9: 144468.601 ops/s
Iteration  10: 144549.246 ops/s
Iteration  11: 144238.661 ops/s
Iteration  12: 144546.529 ops/s
Iteration  13: 144252.330 ops/s
Iteration  14: 144283.556 ops/s
Iteration  15: 144537.743 ops/s
Iteration  16: 144579.391 ops/s
Iteration  17: 144330.267 ops/s
Iteration  18: 144533.370 ops/s
Iteration  19: 144423.551 ops/s
Iteration  20: 144588.683 ops/s
Iteration  21: 144549.134 ops/s
Iteration  22: 144671.950 ops/s
Iteration  23: 144704.414 ops/s
Iteration  24: 144278.301 ops/s
Iteration  25: 144484.476 ops/s
Iteration  26: 144594.317 ops/s
Iteration  27: 144428.276 ops/s
Iteration  28: 144613.467 ops/s
Iteration  29: 144663.727 ops/s
Iteration  30: 144423.209 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_813._Benchmark.benchmark_Cluster_813":
  144438.132 ±(99.9%) 112.540 ops/s [Average]
  (min, avg, max) = (144118.224, 144438.132, 144704.414), stdev = 168.445
  CI (99.9%): [144325.592, 144550.672] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_813._Benchmark.benchmark_Cluster_813  thrpt   30  144438.132 ± 112.540  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_814._Benchmark.benchmark_Cluster_814$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_814._Benchmark.benchmark_Cluster_814

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69141.398 ops/s
# Warmup Iteration   2: 82136.750 ops/s
# Warmup Iteration   3: 100442.149 ops/s
# Warmup Iteration   4: 118079.336 ops/s
# Warmup Iteration   5: 118232.975 ops/s
# Warmup Iteration   6: 117464.312 ops/s
# Warmup Iteration   7: 118488.367 ops/s
# Warmup Iteration   8: 118369.455 ops/s
# Warmup Iteration   9: 118472.526 ops/s
# Warmup Iteration  10: 118012.041 ops/s
# Warmup Iteration  11: 118090.397 ops/s
# Warmup Iteration  12: 118764.247 ops/s
# Warmup Iteration  13: 96686.660 ops/s
# Warmup Iteration  14: 114000.802 ops/s
# Warmup Iteration  15: 117897.872 ops/s
# Warmup Iteration  16: 118162.615 ops/s
# Warmup Iteration  17: 122340.078 ops/s
# Warmup Iteration  18: 122285.500 ops/s
# Warmup Iteration  19: 122418.489 ops/s
# Warmup Iteration  20: 122764.697 ops/s
# Warmup Iteration  21: 122813.591 ops/s
# Warmup Iteration  22: 122546.237 ops/s
# Warmup Iteration  23: 122044.012 ops/s
# Warmup Iteration  24: 122730.389 ops/s
# Warmup Iteration  25: 122723.698 ops/s
# Warmup Iteration  26: 122607.028 ops/s
# Warmup Iteration  27: 122646.872 ops/s
# Warmup Iteration  28: 122643.596 ops/s
# Warmup Iteration  29: 122742.461 ops/s
# Warmup Iteration  30: 122612.256 ops/s
Iteration   1: 122133.447 ops/s
Iteration   2: 122626.425 ops/s
Iteration   3: 122723.772 ops/s
Iteration   4: 122693.788 ops/s
Iteration   5: 122476.095 ops/s
Iteration   6: 122408.097 ops/s
Iteration   7: 122212.864 ops/s
Iteration   8: 122612.550 ops/s
Iteration   9: 122642.323 ops/s
Iteration  10: 122475.815 ops/s
Iteration  11: 122225.149 ops/s
Iteration  12: 121872.863 ops/s
Iteration  13: 122302.184 ops/s
Iteration  14: 121826.278 ops/s
Iteration  15: 122497.873 ops/s
Iteration  16: 122763.456 ops/s
Iteration  17: 122402.513 ops/s
Iteration  18: 122046.061 ops/s
Iteration  19: 122229.584 ops/s
Iteration  20: 121857.182 ops/s
Iteration  21: 121827.424 ops/s
Iteration  22: 122381.572 ops/s
Iteration  23: 121643.182 ops/s
Iteration  24: 122118.076 ops/s
Iteration  25: 122032.650 ops/s
Iteration  26: 121609.347 ops/s
Iteration  27: 121654.696 ops/s
Iteration  28: 122085.453 ops/s
Iteration  29: 121794.194 ops/s
Iteration  30: 121830.945 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_814._Benchmark.benchmark_Cluster_814":
  122200.195 ±(99.9%) 235.067 ops/s [Average]
  (min, avg, max) = (121609.347, 122200.195, 122763.456), stdev = 351.838
  CI (99.9%): [121965.128, 122435.263] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_814._Benchmark.benchmark_Cluster_814  thrpt   30  122200.195 ± 235.067  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_815._Benchmark.benchmark_Cluster_815$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_815._Benchmark.benchmark_Cluster_815

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51315.547 ops/s
# Warmup Iteration   2: 116460.207 ops/s
# Warmup Iteration   3: 158618.837 ops/s
# Warmup Iteration   4: 159648.514 ops/s
# Warmup Iteration   5: 153209.798 ops/s
# Warmup Iteration   6: 133387.048 ops/s
# Warmup Iteration   7: 159607.587 ops/s
# Warmup Iteration   8: 159971.119 ops/s
# Warmup Iteration   9: 159867.702 ops/s
# Warmup Iteration  10: 159918.699 ops/s
# Warmup Iteration  11: 159892.490 ops/s
# Warmup Iteration  12: 159838.065 ops/s
# Warmup Iteration  13: 159600.386 ops/s
# Warmup Iteration  14: 159971.729 ops/s
# Warmup Iteration  15: 160050.061 ops/s
# Warmup Iteration  16: 160030.428 ops/s
# Warmup Iteration  17: 159678.226 ops/s
# Warmup Iteration  18: 159579.938 ops/s
# Warmup Iteration  19: 159623.130 ops/s
# Warmup Iteration  20: 159433.145 ops/s
# Warmup Iteration  21: 159125.642 ops/s
# Warmup Iteration  22: 159737.225 ops/s
# Warmup Iteration  23: 159827.733 ops/s
# Warmup Iteration  24: 159627.542 ops/s
# Warmup Iteration  25: 159850.213 ops/s
# Warmup Iteration  26: 159931.720 ops/s
# Warmup Iteration  27: 159742.723 ops/s
# Warmup Iteration  28: 159791.082 ops/s
# Warmup Iteration  29: 159523.355 ops/s
# Warmup Iteration  30: 159553.741 ops/s
Iteration   1: 159923.844 ops/s
Iteration   2: 159540.073 ops/s
Iteration   3: 159415.862 ops/s
Iteration   4: 160127.266 ops/s
Iteration   5: 159458.964 ops/s
Iteration   6: 159734.504 ops/s
Iteration   7: 160176.105 ops/s
Iteration   8: 159675.328 ops/s
Iteration   9: 159426.938 ops/s
Iteration  10: 159669.763 ops/s
Iteration  11: 159562.862 ops/s
Iteration  12: 159646.080 ops/s
Iteration  13: 159799.728 ops/s
Iteration  14: 159548.277 ops/s
Iteration  15: 159934.485 ops/s
Iteration  16: 159831.127 ops/s
Iteration  17: 159539.736 ops/s
Iteration  18: 160161.537 ops/s
Iteration  19: 159848.439 ops/s
Iteration  20: 159895.650 ops/s
Iteration  21: 159832.099 ops/s
Iteration  22: 159877.086 ops/s
Iteration  23: 159594.548 ops/s
Iteration  24: 160153.668 ops/s
Iteration  25: 159948.683 ops/s
Iteration  26: 160067.825 ops/s
Iteration  27: 160200.991 ops/s
Iteration  28: 160041.748 ops/s
Iteration  29: 159581.328 ops/s
Iteration  30: 159533.269 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_815._Benchmark.benchmark_Cluster_815":
  159791.594 ±(99.9%) 164.018 ops/s [Average]
  (min, avg, max) = (159415.862, 159791.594, 160200.991), stdev = 245.495
  CI (99.9%): [159627.576, 159955.612] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_815._Benchmark.benchmark_Cluster_815  thrpt   30  159791.594 ± 164.018  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_816._Benchmark.benchmark_Cluster_816$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_816._Benchmark.benchmark_Cluster_816

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 103646.935 ops/s
# Warmup Iteration   2: 152898.379 ops/s
# Warmup Iteration   3: 201602.137 ops/s
# Warmup Iteration   4: 199157.659 ops/s
# Warmup Iteration   5: 201401.941 ops/s
# Warmup Iteration   6: 202048.963 ops/s
# Warmup Iteration   7: 161031.039 ops/s
# Warmup Iteration   8: 200514.925 ops/s
# Warmup Iteration   9: 200573.453 ops/s
# Warmup Iteration  10: 200887.853 ops/s
# Warmup Iteration  11: 200938.189 ops/s
# Warmup Iteration  12: 200763.320 ops/s
# Warmup Iteration  13: 200991.649 ops/s
# Warmup Iteration  14: 200899.486 ops/s
# Warmup Iteration  15: 200956.922 ops/s
# Warmup Iteration  16: 200892.086 ops/s
# Warmup Iteration  17: 202424.263 ops/s
# Warmup Iteration  18: 202366.023 ops/s
# Warmup Iteration  19: 202413.498 ops/s
# Warmup Iteration  20: 202349.242 ops/s
# Warmup Iteration  21: 202342.254 ops/s
# Warmup Iteration  22: 202231.396 ops/s
# Warmup Iteration  23: 202298.245 ops/s
# Warmup Iteration  24: 202339.677 ops/s
# Warmup Iteration  25: 202293.339 ops/s
# Warmup Iteration  26: 202341.697 ops/s
# Warmup Iteration  27: 202174.623 ops/s
# Warmup Iteration  28: 202077.476 ops/s
# Warmup Iteration  29: 201835.349 ops/s
# Warmup Iteration  30: 202028.935 ops/s
Iteration   1: 202094.531 ops/s
Iteration   2: 202252.873 ops/s
Iteration   3: 201962.333 ops/s
Iteration   4: 202263.098 ops/s
Iteration   5: 202155.505 ops/s
Iteration   6: 202203.786 ops/s
Iteration   7: 202300.267 ops/s
Iteration   8: 202152.814 ops/s
Iteration   9: 201960.546 ops/s
Iteration  10: 201496.367 ops/s
Iteration  11: 202271.429 ops/s
Iteration  12: 201912.188 ops/s
Iteration  13: 202099.814 ops/s
Iteration  14: 202317.780 ops/s
Iteration  15: 202061.887 ops/s
Iteration  16: 202138.753 ops/s
Iteration  17: 202126.908 ops/s
Iteration  18: 202344.184 ops/s
Iteration  19: 202170.362 ops/s
Iteration  20: 202259.354 ops/s
Iteration  21: 201960.044 ops/s
Iteration  22: 202331.200 ops/s
Iteration  23: 202082.255 ops/s
Iteration  24: 201861.431 ops/s
Iteration  25: 202361.698 ops/s
Iteration  26: 201932.626 ops/s
Iteration  27: 202103.730 ops/s
Iteration  28: 201940.380 ops/s
Iteration  29: 202128.768 ops/s
Iteration  30: 201800.091 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_816._Benchmark.benchmark_Cluster_816":
  202101.567 ±(99.9%) 127.626 ops/s [Average]
  (min, avg, max) = (201496.367, 202101.567, 202361.698), stdev = 191.025
  CI (99.9%): [201973.941, 202229.193] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_816._Benchmark.benchmark_Cluster_816  thrpt   30  202101.567 ± 127.626  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_817._Benchmark.benchmark_Cluster_817$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_817._Benchmark.benchmark_Cluster_817

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78209.407 ops/s
# Warmup Iteration   2: 138336.791 ops/s
# Warmup Iteration   3: 193682.434 ops/s
# Warmup Iteration   4: 191539.485 ops/s
# Warmup Iteration   5: 193520.420 ops/s
# Warmup Iteration   6: 193366.741 ops/s
# Warmup Iteration   7: 154443.744 ops/s
# Warmup Iteration   8: 193762.538 ops/s
# Warmup Iteration   9: 193818.514 ops/s
# Warmup Iteration  10: 193764.692 ops/s
# Warmup Iteration  11: 193501.833 ops/s
# Warmup Iteration  12: 193728.522 ops/s
# Warmup Iteration  13: 193712.954 ops/s
# Warmup Iteration  14: 193509.036 ops/s
# Warmup Iteration  15: 193635.261 ops/s
# Warmup Iteration  16: 193836.344 ops/s
# Warmup Iteration  17: 193779.243 ops/s
# Warmup Iteration  18: 193984.843 ops/s
# Warmup Iteration  19: 193561.449 ops/s
# Warmup Iteration  20: 193791.843 ops/s
# Warmup Iteration  21: 193882.976 ops/s
# Warmup Iteration  22: 193829.178 ops/s
# Warmup Iteration  23: 193955.274 ops/s
# Warmup Iteration  24: 193894.089 ops/s
# Warmup Iteration  25: 193857.707 ops/s
# Warmup Iteration  26: 193609.310 ops/s
# Warmup Iteration  27: 193717.856 ops/s
# Warmup Iteration  28: 193781.324 ops/s
# Warmup Iteration  29: 193794.977 ops/s
# Warmup Iteration  30: 193941.879 ops/s
Iteration   1: 193841.171 ops/s
Iteration   2: 193728.345 ops/s
Iteration   3: 193781.874 ops/s
Iteration   4: 193996.476 ops/s
Iteration   5: 193742.400 ops/s
Iteration   6: 194084.408 ops/s
Iteration   7: 193704.201 ops/s
Iteration   8: 194043.886 ops/s
Iteration   9: 193788.018 ops/s
Iteration  10: 193916.423 ops/s
Iteration  11: 193633.644 ops/s
Iteration  12: 193776.605 ops/s
Iteration  13: 193695.224 ops/s
Iteration  14: 193928.534 ops/s
Iteration  15: 193765.297 ops/s
Iteration  16: 193249.787 ops/s
Iteration  17: 193678.251 ops/s
Iteration  18: 193688.481 ops/s
Iteration  19: 193988.024 ops/s
Iteration  20: 193666.398 ops/s
Iteration  21: 194035.525 ops/s
Iteration  22: 193700.358 ops/s
Iteration  23: 193998.123 ops/s
Iteration  24: 193708.165 ops/s
Iteration  25: 193771.885 ops/s
Iteration  26: 193515.473 ops/s
Iteration  27: 194021.098 ops/s
Iteration  28: 193683.101 ops/s
Iteration  29: 193973.089 ops/s
Iteration  30: 193799.528 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_817._Benchmark.benchmark_Cluster_817":
  193796.793 ±(99.9%) 120.253 ops/s [Average]
  (min, avg, max) = (193249.787, 193796.793, 194084.408), stdev = 179.988
  CI (99.9%): [193676.541, 193917.046] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_817._Benchmark.benchmark_Cluster_817  thrpt   30  193796.793 ± 120.253  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_818._Benchmark.benchmark_Cluster_818$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_818._Benchmark.benchmark_Cluster_818

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 99380.777 ops/s
# Warmup Iteration   2: 111950.001 ops/s
# Warmup Iteration   3: 137628.856 ops/s
# Warmup Iteration   4: 163164.289 ops/s
# Warmup Iteration   5: 162952.443 ops/s
# Warmup Iteration   6: 161773.691 ops/s
# Warmup Iteration   7: 162548.398 ops/s
# Warmup Iteration   8: 162259.499 ops/s
# Warmup Iteration   9: 162831.818 ops/s
# Warmup Iteration  10: 162831.891 ops/s
# Warmup Iteration  11: 162761.205 ops/s
# Warmup Iteration  12: 162930.528 ops/s
# Warmup Iteration  13: 144251.528 ops/s
# Warmup Iteration  14: 142513.392 ops/s
# Warmup Iteration  15: 162593.803 ops/s
# Warmup Iteration  16: 162811.545 ops/s
# Warmup Iteration  17: 169915.681 ops/s
# Warmup Iteration  18: 169178.905 ops/s
# Warmup Iteration  19: 169458.442 ops/s
# Warmup Iteration  20: 169414.769 ops/s
# Warmup Iteration  21: 169979.590 ops/s
# Warmup Iteration  22: 169720.765 ops/s
# Warmup Iteration  23: 169896.242 ops/s
# Warmup Iteration  24: 169729.860 ops/s
# Warmup Iteration  25: 170059.287 ops/s
# Warmup Iteration  26: 169929.172 ops/s
# Warmup Iteration  27: 170082.969 ops/s
# Warmup Iteration  28: 170129.315 ops/s
# Warmup Iteration  29: 170102.623 ops/s
# Warmup Iteration  30: 170150.525 ops/s
Iteration   1: 170155.656 ops/s
Iteration   2: 170337.688 ops/s
Iteration   3: 169548.320 ops/s
Iteration   4: 170947.290 ops/s
Iteration   5: 170472.564 ops/s
Iteration   6: 169657.391 ops/s
Iteration   7: 169692.447 ops/s
Iteration   8: 170742.198 ops/s
Iteration   9: 169287.785 ops/s
Iteration  10: 170142.881 ops/s
Iteration  11: 170258.843 ops/s
Iteration  12: 169586.586 ops/s
Iteration  13: 170332.067 ops/s
Iteration  14: 170428.607 ops/s
Iteration  15: 169881.291 ops/s
Iteration  16: 170233.731 ops/s
Iteration  17: 171037.964 ops/s
Iteration  18: 170203.441 ops/s
Iteration  19: 170115.431 ops/s
Iteration  20: 170488.580 ops/s
Iteration  21: 170235.041 ops/s
Iteration  22: 170111.502 ops/s
Iteration  23: 169830.333 ops/s
Iteration  24: 170301.260 ops/s
Iteration  25: 170104.507 ops/s
Iteration  26: 170479.710 ops/s
Iteration  27: 170329.613 ops/s
Iteration  28: 169764.876 ops/s
Iteration  29: 170065.340 ops/s
Iteration  30: 170329.653 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_818._Benchmark.benchmark_Cluster_818":
  170170.087 ±(99.9%) 264.992 ops/s [Average]
  (min, avg, max) = (169287.785, 170170.087, 171037.964), stdev = 396.628
  CI (99.9%): [169905.095, 170435.079] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_818._Benchmark.benchmark_Cluster_818  thrpt   30  170170.087 ± 264.992  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_819._Benchmark.benchmark_Cluster_819$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_819._Benchmark.benchmark_Cluster_819

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75806.551 ops/s
# Warmup Iteration   2: 94991.874 ops/s
# Warmup Iteration   3: 148463.986 ops/s
# Warmup Iteration   4: 148617.670 ops/s
# Warmup Iteration   5: 148724.769 ops/s
# Warmup Iteration   6: 149443.422 ops/s
# Warmup Iteration   7: 149119.555 ops/s
# Warmup Iteration   8: 149131.743 ops/s
# Warmup Iteration   9: 148728.070 ops/s
# Warmup Iteration  10: 117106.047 ops/s
# Warmup Iteration  11: 149722.262 ops/s
# Warmup Iteration  12: 149699.888 ops/s
# Warmup Iteration  13: 149846.829 ops/s
# Warmup Iteration  14: 149751.109 ops/s
# Warmup Iteration  15: 149458.810 ops/s
# Warmup Iteration  16: 149156.314 ops/s
# Warmup Iteration  17: 154476.175 ops/s
# Warmup Iteration  18: 153754.598 ops/s
# Warmup Iteration  19: 154199.796 ops/s
# Warmup Iteration  20: 154381.721 ops/s
# Warmup Iteration  21: 154127.909 ops/s
# Warmup Iteration  22: 154538.147 ops/s
# Warmup Iteration  23: 154817.781 ops/s
# Warmup Iteration  24: 154584.780 ops/s
# Warmup Iteration  25: 154822.668 ops/s
# Warmup Iteration  26: 154583.129 ops/s
# Warmup Iteration  27: 154629.668 ops/s
# Warmup Iteration  28: 153942.532 ops/s
# Warmup Iteration  29: 154396.239 ops/s
# Warmup Iteration  30: 154670.948 ops/s
Iteration   1: 154331.668 ops/s
Iteration   2: 154311.013 ops/s
Iteration   3: 154945.224 ops/s
Iteration   4: 154840.974 ops/s
Iteration   5: 154383.331 ops/s
Iteration   6: 154836.664 ops/s
Iteration   7: 154201.801 ops/s
Iteration   8: 154436.070 ops/s
Iteration   9: 154568.857 ops/s
Iteration  10: 154940.011 ops/s
Iteration  11: 154622.610 ops/s
Iteration  12: 154726.159 ops/s
Iteration  13: 154573.613 ops/s
Iteration  14: 155099.008 ops/s
Iteration  15: 154740.115 ops/s
Iteration  16: 154458.291 ops/s
Iteration  17: 154518.407 ops/s
Iteration  18: 154223.928 ops/s
Iteration  19: 154142.618 ops/s
Iteration  20: 154987.150 ops/s
Iteration  21: 154479.403 ops/s
Iteration  22: 154595.267 ops/s
Iteration  23: 154713.224 ops/s
Iteration  24: 153947.065 ops/s
Iteration  25: 153941.018 ops/s
Iteration  26: 154192.762 ops/s
Iteration  27: 154488.241 ops/s
Iteration  28: 154933.536 ops/s
Iteration  29: 154368.409 ops/s
Iteration  30: 154314.130 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_819._Benchmark.benchmark_Cluster_819":
  154528.686 ±(99.9%) 204.278 ops/s [Average]
  (min, avg, max) = (153941.018, 154528.686, 155099.008), stdev = 305.754
  CI (99.9%): [154324.407, 154732.964] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_819._Benchmark.benchmark_Cluster_819  thrpt   30  154528.686 ± 204.278  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_82._Benchmark.benchmark_Cluster_82$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_82._Benchmark.benchmark_Cluster_82

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 81402.486 ops/s
# Warmup Iteration   2: 125623.530 ops/s
# Warmup Iteration   3: 185319.173 ops/s
# Warmup Iteration   4: 184423.810 ops/s
# Warmup Iteration   5: 185620.689 ops/s
# Warmup Iteration   6: 185810.143 ops/s
# Warmup Iteration   7: 185695.153 ops/s
# Warmup Iteration   8: 147509.440 ops/s
# Warmup Iteration   9: 185579.066 ops/s
# Warmup Iteration  10: 185511.379 ops/s
# Warmup Iteration  11: 185334.978 ops/s
# Warmup Iteration  12: 185363.796 ops/s
# Warmup Iteration  13: 185339.076 ops/s
# Warmup Iteration  14: 185298.012 ops/s
# Warmup Iteration  15: 185309.120 ops/s
# Warmup Iteration  16: 185281.102 ops/s
# Warmup Iteration  17: 185621.691 ops/s
# Warmup Iteration  18: 185638.067 ops/s
# Warmup Iteration  19: 185704.841 ops/s
# Warmup Iteration  20: 185644.288 ops/s
# Warmup Iteration  21: 185585.611 ops/s
# Warmup Iteration  22: 185430.855 ops/s
# Warmup Iteration  23: 185333.544 ops/s
# Warmup Iteration  24: 185139.050 ops/s
# Warmup Iteration  25: 185537.760 ops/s
# Warmup Iteration  26: 185555.198 ops/s
# Warmup Iteration  27: 185573.569 ops/s
# Warmup Iteration  28: 185355.507 ops/s
# Warmup Iteration  29: 185753.075 ops/s
# Warmup Iteration  30: 185495.104 ops/s
Iteration   1: 185096.852 ops/s
Iteration   2: 185426.337 ops/s
Iteration   3: 184975.089 ops/s
Iteration   4: 184772.605 ops/s
Iteration   5: 184951.996 ops/s
Iteration   6: 185096.393 ops/s
Iteration   7: 185279.563 ops/s
Iteration   8: 185585.654 ops/s
Iteration   9: 185246.504 ops/s
Iteration  10: 185274.009 ops/s
Iteration  11: 185417.988 ops/s
Iteration  12: 185434.883 ops/s
Iteration  13: 185553.088 ops/s
Iteration  14: 185219.246 ops/s
Iteration  15: 185480.059 ops/s
Iteration  16: 185334.879 ops/s
Iteration  17: 185428.139 ops/s
Iteration  18: 185538.215 ops/s
Iteration  19: 185525.751 ops/s
Iteration  20: 185657.995 ops/s
Iteration  21: 185560.509 ops/s
Iteration  22: 185438.944 ops/s
Iteration  23: 185330.675 ops/s
Iteration  24: 185139.883 ops/s
Iteration  25: 185556.198 ops/s
Iteration  26: 185210.714 ops/s
Iteration  27: 185522.365 ops/s
Iteration  28: 185294.473 ops/s
Iteration  29: 185309.465 ops/s
Iteration  30: 185518.010 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_82._Benchmark.benchmark_Cluster_82":
  185339.216 ±(99.9%) 142.324 ops/s [Average]
  (min, avg, max) = (184772.605, 185339.216, 185657.995), stdev = 213.023
  CI (99.9%): [185196.892, 185481.540] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_82._Benchmark.benchmark_Cluster_82  thrpt   30  185339.216 ± 142.324  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_820._Benchmark.benchmark_Cluster_820$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_820._Benchmark.benchmark_Cluster_820

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 118466.079 ops/s
# Warmup Iteration   2: 136363.377 ops/s
# Warmup Iteration   3: 170087.590 ops/s
# Warmup Iteration   4: 191873.665 ops/s
# Warmup Iteration   5: 192687.300 ops/s
# Warmup Iteration   6: 191483.684 ops/s
# Warmup Iteration   7: 193743.703 ops/s
# Warmup Iteration   8: 192829.910 ops/s
# Warmup Iteration   9: 192623.322 ops/s
# Warmup Iteration  10: 193810.573 ops/s
# Warmup Iteration  11: 193596.962 ops/s
# Warmup Iteration  12: 193510.364 ops/s
# Warmup Iteration  13: 150114.389 ops/s
# Warmup Iteration  14: 193056.151 ops/s
# Warmup Iteration  15: 192995.268 ops/s
# Warmup Iteration  16: 192516.630 ops/s
# Warmup Iteration  17: 201906.476 ops/s
# Warmup Iteration  18: 202386.861 ops/s
# Warmup Iteration  19: 203065.503 ops/s
# Warmup Iteration  20: 201993.782 ops/s
# Warmup Iteration  21: 201792.696 ops/s
# Warmup Iteration  22: 201673.783 ops/s
# Warmup Iteration  23: 202249.325 ops/s
# Warmup Iteration  24: 201464.561 ops/s
# Warmup Iteration  25: 200445.857 ops/s
# Warmup Iteration  26: 201935.230 ops/s
# Warmup Iteration  27: 202135.291 ops/s
# Warmup Iteration  28: 202405.326 ops/s
# Warmup Iteration  29: 202178.473 ops/s
# Warmup Iteration  30: 201841.906 ops/s
Iteration   1: 202278.438 ops/s
Iteration   2: 202447.553 ops/s
Iteration   3: 201481.343 ops/s
Iteration   4: 201934.825 ops/s
Iteration   5: 201526.182 ops/s
Iteration   6: 202121.412 ops/s
Iteration   7: 201258.121 ops/s
Iteration   8: 200683.811 ops/s
Iteration   9: 201691.674 ops/s
Iteration  10: 200803.097 ops/s
Iteration  11: 202616.376 ops/s
Iteration  12: 201126.456 ops/s
Iteration  13: 201630.568 ops/s
Iteration  14: 201841.497 ops/s
Iteration  15: 200659.303 ops/s
Iteration  16: 202016.156 ops/s
Iteration  17: 202157.799 ops/s
Iteration  18: 201459.860 ops/s
Iteration  19: 201633.284 ops/s
Iteration  20: 201153.131 ops/s
Iteration  21: 202016.288 ops/s
Iteration  22: 201889.269 ops/s
Iteration  23: 201812.044 ops/s
Iteration  24: 201614.283 ops/s
Iteration  25: 201418.530 ops/s
Iteration  26: 201167.237 ops/s
Iteration  27: 201854.511 ops/s
Iteration  28: 201730.006 ops/s
Iteration  29: 201366.443 ops/s
Iteration  30: 201121.261 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_820._Benchmark.benchmark_Cluster_820":
  201617.025 ±(99.9%) 327.475 ops/s [Average]
  (min, avg, max) = (200659.303, 201617.025, 202616.376), stdev = 490.149
  CI (99.9%): [201289.550, 201944.500] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_820._Benchmark.benchmark_Cluster_820  thrpt   30  201617.025 ± 327.475  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_821._Benchmark.benchmark_Cluster_821$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_821._Benchmark.benchmark_Cluster_821

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 25653.406 ops/s
# Warmup Iteration   2: 50219.873 ops/s
# Warmup Iteration   3: 85170.303 ops/s
# Warmup Iteration   4: 86385.827 ops/s
# Warmup Iteration   5: 86298.680 ops/s
# Warmup Iteration   6: 87443.709 ops/s
# Warmup Iteration   7: 68997.232 ops/s
# Warmup Iteration   8: 87189.579 ops/s
# Warmup Iteration   9: 87501.169 ops/s
# Warmup Iteration  10: 86828.588 ops/s
# Warmup Iteration  11: 86738.893 ops/s
# Warmup Iteration  12: 87316.460 ops/s
# Warmup Iteration  13: 87617.223 ops/s
# Warmup Iteration  14: 87126.193 ops/s
# Warmup Iteration  15: 87192.399 ops/s
# Warmup Iteration  16: 87224.574 ops/s
# Warmup Iteration  17: 87145.709 ops/s
# Warmup Iteration  18: 86699.566 ops/s
# Warmup Iteration  19: 86976.705 ops/s
# Warmup Iteration  20: 87288.368 ops/s
# Warmup Iteration  21: 87201.554 ops/s
# Warmup Iteration  22: 87306.967 ops/s
# Warmup Iteration  23: 86625.286 ops/s
# Warmup Iteration  24: 86829.244 ops/s
# Warmup Iteration  25: 86527.816 ops/s
# Warmup Iteration  26: 87181.374 ops/s
# Warmup Iteration  27: 86922.804 ops/s
# Warmup Iteration  28: 87774.125 ops/s
# Warmup Iteration  29: 87490.997 ops/s
# Warmup Iteration  30: 86180.046 ops/s
Iteration   1: 87127.394 ops/s
Iteration   2: 86770.263 ops/s
Iteration   3: 87519.733 ops/s
Iteration   4: 87289.536 ops/s
Iteration   5: 87058.639 ops/s
Iteration   6: 87114.244 ops/s
Iteration   7: 85777.289 ops/s
Iteration   8: 86548.329 ops/s
Iteration   9: 86386.762 ops/s
Iteration  10: 86227.660 ops/s
Iteration  11: 87307.389 ops/s
Iteration  12: 87039.074 ops/s
Iteration  13: 86814.413 ops/s
Iteration  14: 86631.493 ops/s
Iteration  15: 86133.065 ops/s
Iteration  16: 87351.487 ops/s
Iteration  17: 86919.060 ops/s
Iteration  18: 86824.070 ops/s
Iteration  19: 87159.777 ops/s
Iteration  20: 87442.526 ops/s
Iteration  21: 86486.324 ops/s
Iteration  22: 86126.557 ops/s
Iteration  23: 86075.033 ops/s
Iteration  24: 85788.436 ops/s
Iteration  25: 86726.444 ops/s
Iteration  26: 87247.581 ops/s
Iteration  27: 87517.147 ops/s
Iteration  28: 87337.502 ops/s
Iteration  29: 87075.536 ops/s
Iteration  30: 86648.315 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_821._Benchmark.benchmark_Cluster_821":
  86815.703 ±(99.9%) 339.527 ops/s [Average]
  (min, avg, max) = (85777.289, 86815.703, 87519.733), stdev = 508.188
  CI (99.9%): [86476.175, 87155.230] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_821._Benchmark.benchmark_Cluster_821  thrpt   30  86815.703 ± 339.527  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_822._Benchmark.benchmark_Cluster_822$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_822._Benchmark.benchmark_Cluster_822

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57909.966 ops/s
# Warmup Iteration   2: 113739.965 ops/s
# Warmup Iteration   3: 165077.233 ops/s
# Warmup Iteration   4: 163995.136 ops/s
# Warmup Iteration   5: 164988.485 ops/s
# Warmup Iteration   6: 150947.666 ops/s
# Warmup Iteration   7: 144404.909 ops/s
# Warmup Iteration   8: 164321.096 ops/s
# Warmup Iteration   9: 164359.927 ops/s
# Warmup Iteration  10: 164827.006 ops/s
# Warmup Iteration  11: 164461.476 ops/s
# Warmup Iteration  12: 164483.358 ops/s
# Warmup Iteration  13: 164429.754 ops/s
# Warmup Iteration  14: 164875.543 ops/s
# Warmup Iteration  15: 164348.646 ops/s
# Warmup Iteration  16: 164240.486 ops/s
# Warmup Iteration  17: 165305.459 ops/s
# Warmup Iteration  18: 165394.806 ops/s
# Warmup Iteration  19: 165139.220 ops/s
# Warmup Iteration  20: 165085.617 ops/s
# Warmup Iteration  21: 165178.197 ops/s
# Warmup Iteration  22: 164876.934 ops/s
# Warmup Iteration  23: 165064.715 ops/s
# Warmup Iteration  24: 164925.103 ops/s
# Warmup Iteration  25: 165347.470 ops/s
# Warmup Iteration  26: 165257.634 ops/s
# Warmup Iteration  27: 165382.794 ops/s
# Warmup Iteration  28: 165223.032 ops/s
# Warmup Iteration  29: 165386.835 ops/s
# Warmup Iteration  30: 165335.779 ops/s
Iteration   1: 164843.667 ops/s
Iteration   2: 165079.280 ops/s
Iteration   3: 165306.847 ops/s
Iteration   4: 165233.264 ops/s
Iteration   5: 165206.080 ops/s
Iteration   6: 165014.628 ops/s
Iteration   7: 165217.677 ops/s
Iteration   8: 165390.005 ops/s
Iteration   9: 165050.351 ops/s
Iteration  10: 165678.114 ops/s
Iteration  11: 165428.628 ops/s
Iteration  12: 165675.295 ops/s
Iteration  13: 165325.605 ops/s
Iteration  14: 165334.957 ops/s
Iteration  15: 164921.673 ops/s
Iteration  16: 165684.681 ops/s
Iteration  17: 165140.308 ops/s
Iteration  18: 165059.549 ops/s
Iteration  19: 165030.606 ops/s
Iteration  20: 165448.489 ops/s
Iteration  21: 165205.583 ops/s
Iteration  22: 165197.914 ops/s
Iteration  23: 165368.858 ops/s
Iteration  24: 165284.305 ops/s
Iteration  25: 165292.278 ops/s
Iteration  26: 165373.553 ops/s
Iteration  27: 165276.030 ops/s
Iteration  28: 165036.207 ops/s
Iteration  29: 165401.625 ops/s
Iteration  30: 164682.284 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_822._Benchmark.benchmark_Cluster_822":
  165239.611 ±(99.9%) 156.079 ops/s [Average]
  (min, avg, max) = (164682.284, 165239.611, 165684.681), stdev = 233.612
  CI (99.9%): [165083.532, 165395.690] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_822._Benchmark.benchmark_Cluster_822  thrpt   30  165239.611 ± 156.079  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_823._Benchmark.benchmark_Cluster_823$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_823._Benchmark.benchmark_Cluster_823

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54370.033 ops/s
# Warmup Iteration   2: 128175.135 ops/s
# Warmup Iteration   3: 183682.903 ops/s
# Warmup Iteration   4: 184570.421 ops/s
# Warmup Iteration   5: 185049.882 ops/s
# Warmup Iteration   6: 147285.458 ops/s
# Warmup Iteration   7: 185474.050 ops/s
# Warmup Iteration   8: 185293.309 ops/s
# Warmup Iteration   9: 185114.373 ops/s
# Warmup Iteration  10: 185544.571 ops/s
# Warmup Iteration  11: 185448.994 ops/s
# Warmup Iteration  12: 185596.673 ops/s
# Warmup Iteration  13: 185674.883 ops/s
# Warmup Iteration  14: 185397.157 ops/s
# Warmup Iteration  15: 185259.369 ops/s
# Warmup Iteration  16: 185751.945 ops/s
# Warmup Iteration  17: 184576.128 ops/s
# Warmup Iteration  18: 184761.646 ops/s
# Warmup Iteration  19: 184816.137 ops/s
# Warmup Iteration  20: 184968.503 ops/s
# Warmup Iteration  21: 184851.489 ops/s
# Warmup Iteration  22: 184777.185 ops/s
# Warmup Iteration  23: 184619.355 ops/s
# Warmup Iteration  24: 184580.496 ops/s
# Warmup Iteration  25: 184422.955 ops/s
# Warmup Iteration  26: 184643.687 ops/s
# Warmup Iteration  27: 184728.517 ops/s
# Warmup Iteration  28: 184679.652 ops/s
# Warmup Iteration  29: 184065.958 ops/s
# Warmup Iteration  30: 184218.617 ops/s
Iteration   1: 184470.913 ops/s
Iteration   2: 184851.042 ops/s
Iteration   3: 184874.030 ops/s
Iteration   4: 185226.582 ops/s
Iteration   5: 184561.911 ops/s
Iteration   6: 184334.530 ops/s
Iteration   7: 184475.950 ops/s
Iteration   8: 183912.903 ops/s
Iteration   9: 184542.573 ops/s
Iteration  10: 184392.089 ops/s
Iteration  11: 184074.771 ops/s
Iteration  12: 184243.586 ops/s
Iteration  13: 183829.974 ops/s
Iteration  14: 183978.447 ops/s
Iteration  15: 184012.433 ops/s
Iteration  16: 184256.451 ops/s
Iteration  17: 184077.422 ops/s
Iteration  18: 184212.986 ops/s
Iteration  19: 183982.674 ops/s
Iteration  20: 184366.348 ops/s
Iteration  21: 184160.783 ops/s
Iteration  22: 183992.776 ops/s
Iteration  23: 184200.281 ops/s
Iteration  24: 183906.674 ops/s
Iteration  25: 184079.522 ops/s
Iteration  26: 184016.771 ops/s
Iteration  27: 184037.310 ops/s
Iteration  28: 184013.466 ops/s
Iteration  29: 184312.801 ops/s
Iteration  30: 184294.227 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_823._Benchmark.benchmark_Cluster_823":
  184256.408 ±(99.9%) 213.645 ops/s [Average]
  (min, avg, max) = (183829.974, 184256.408, 185226.582), stdev = 319.774
  CI (99.9%): [184042.762, 184470.053] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_823._Benchmark.benchmark_Cluster_823  thrpt   30  184256.408 ± 213.645  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_824._Benchmark.benchmark_Cluster_824$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_824._Benchmark.benchmark_Cluster_824

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 87721.665 ops/s
# Warmup Iteration   2: 118389.423 ops/s
# Warmup Iteration   3: 160056.903 ops/s
# Warmup Iteration   4: 173052.124 ops/s
# Warmup Iteration   5: 170197.698 ops/s
# Warmup Iteration   6: 171478.669 ops/s
# Warmup Iteration   7: 171200.435 ops/s
# Warmup Iteration   8: 171205.485 ops/s
# Warmup Iteration   9: 171408.126 ops/s
# Warmup Iteration  10: 171250.763 ops/s
# Warmup Iteration  11: 149725.677 ops/s
# Warmup Iteration  12: 157454.180 ops/s
# Warmup Iteration  13: 171383.234 ops/s
# Warmup Iteration  14: 171131.012 ops/s
# Warmup Iteration  15: 171534.015 ops/s
# Warmup Iteration  16: 171472.872 ops/s
# Warmup Iteration  17: 170263.768 ops/s
# Warmup Iteration  18: 170304.725 ops/s
# Warmup Iteration  19: 170176.835 ops/s
# Warmup Iteration  20: 170424.538 ops/s
# Warmup Iteration  21: 170482.416 ops/s
# Warmup Iteration  22: 170558.696 ops/s
# Warmup Iteration  23: 170407.193 ops/s
# Warmup Iteration  24: 170661.967 ops/s
# Warmup Iteration  25: 170543.845 ops/s
# Warmup Iteration  26: 170617.701 ops/s
# Warmup Iteration  27: 170583.304 ops/s
# Warmup Iteration  28: 170732.591 ops/s
# Warmup Iteration  29: 170849.972 ops/s
# Warmup Iteration  30: 170830.722 ops/s
Iteration   1: 170679.794 ops/s
Iteration   2: 171020.535 ops/s
Iteration   3: 170910.357 ops/s
Iteration   4: 170900.640 ops/s
Iteration   5: 170718.995 ops/s
Iteration   6: 170994.242 ops/s
Iteration   7: 170960.708 ops/s
Iteration   8: 170506.491 ops/s
Iteration   9: 170879.785 ops/s
Iteration  10: 170969.859 ops/s
Iteration  11: 170843.544 ops/s
Iteration  12: 170740.509 ops/s
Iteration  13: 170977.010 ops/s
Iteration  14: 170854.559 ops/s
Iteration  15: 170808.460 ops/s
Iteration  16: 170817.593 ops/s
Iteration  17: 171040.581 ops/s
Iteration  18: 171018.517 ops/s
Iteration  19: 170950.706 ops/s
Iteration  20: 170745.280 ops/s
Iteration  21: 171021.448 ops/s
Iteration  22: 170957.458 ops/s
Iteration  23: 170737.525 ops/s
Iteration  24: 170982.273 ops/s
Iteration  25: 170723.644 ops/s
Iteration  26: 170662.237 ops/s
Iteration  27: 170532.111 ops/s
Iteration  28: 170854.907 ops/s
Iteration  29: 170922.964 ops/s
Iteration  30: 170914.796 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_824._Benchmark.benchmark_Cluster_824":
  170854.918 ±(99.9%) 95.836 ops/s [Average]
  (min, avg, max) = (170506.491, 170854.918, 171040.581), stdev = 143.443
  CI (99.9%): [170759.081, 170950.754] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score    Error  Units
Cluster_824._Benchmark.benchmark_Cluster_824  thrpt   30  170854.918 ± 95.836  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_825._Benchmark.benchmark_Cluster_825$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_825._Benchmark.benchmark_Cluster_825

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80136.142 ops/s
# Warmup Iteration   2: 137082.421 ops/s
# Warmup Iteration   3: 190137.157 ops/s
# Warmup Iteration   4: 188907.142 ops/s
# Warmup Iteration   5: 190056.292 ops/s
# Warmup Iteration   6: 189924.845 ops/s
# Warmup Iteration   7: 151072.523 ops/s
# Warmup Iteration   8: 189924.761 ops/s
# Warmup Iteration   9: 190158.197 ops/s
# Warmup Iteration  10: 190035.802 ops/s
# Warmup Iteration  11: 190047.104 ops/s
# Warmup Iteration  12: 190114.356 ops/s
# Warmup Iteration  13: 190165.451 ops/s
# Warmup Iteration  14: 190141.044 ops/s
# Warmup Iteration  15: 190064.861 ops/s
# Warmup Iteration  16: 190288.384 ops/s
# Warmup Iteration  17: 190092.080 ops/s
# Warmup Iteration  18: 190215.094 ops/s
# Warmup Iteration  19: 190051.217 ops/s
# Warmup Iteration  20: 189968.078 ops/s
# Warmup Iteration  21: 190358.321 ops/s
# Warmup Iteration  22: 190029.002 ops/s
# Warmup Iteration  23: 190171.307 ops/s
# Warmup Iteration  24: 190007.083 ops/s
# Warmup Iteration  25: 190122.834 ops/s
# Warmup Iteration  26: 190262.873 ops/s
# Warmup Iteration  27: 190281.140 ops/s
# Warmup Iteration  28: 190086.745 ops/s
# Warmup Iteration  29: 190350.646 ops/s
# Warmup Iteration  30: 190352.650 ops/s
Iteration   1: 190192.235 ops/s
Iteration   2: 190251.548 ops/s
Iteration   3: 189923.575 ops/s
Iteration   4: 189916.217 ops/s
Iteration   5: 189453.281 ops/s
Iteration   6: 189766.020 ops/s
Iteration   7: 189981.298 ops/s
Iteration   8: 189955.435 ops/s
Iteration   9: 189772.291 ops/s
Iteration  10: 189747.249 ops/s
Iteration  11: 189980.702 ops/s
Iteration  12: 190203.367 ops/s
Iteration  13: 189858.867 ops/s
Iteration  14: 189721.732 ops/s
Iteration  15: 189803.714 ops/s
Iteration  16: 190036.683 ops/s
Iteration  17: 189678.608 ops/s
Iteration  18: 190344.116 ops/s
Iteration  19: 190117.301 ops/s
Iteration  20: 190338.432 ops/s
Iteration  21: 190126.895 ops/s
Iteration  22: 190279.927 ops/s
Iteration  23: 189940.071 ops/s
Iteration  24: 190014.855 ops/s
Iteration  25: 190152.829 ops/s
Iteration  26: 190595.753 ops/s
Iteration  27: 190119.602 ops/s
Iteration  28: 190224.424 ops/s
Iteration  29: 190098.384 ops/s
Iteration  30: 190000.516 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_825._Benchmark.benchmark_Cluster_825":
  190019.864 ±(99.9%) 159.502 ops/s [Average]
  (min, avg, max) = (189453.281, 190019.864, 190595.753), stdev = 238.735
  CI (99.9%): [189860.362, 190179.366] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_825._Benchmark.benchmark_Cluster_825  thrpt   30  190019.864 ± 159.502  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_826._Benchmark.benchmark_Cluster_826$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_826._Benchmark.benchmark_Cluster_826

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96138.611 ops/s
# Warmup Iteration   2: 131320.429 ops/s
# Warmup Iteration   3: 203430.362 ops/s
# Warmup Iteration   4: 203687.278 ops/s
# Warmup Iteration   5: 202307.342 ops/s
# Warmup Iteration   6: 203088.425 ops/s
# Warmup Iteration   7: 203013.011 ops/s
# Warmup Iteration   8: 203553.475 ops/s
# Warmup Iteration   9: 159718.117 ops/s
# Warmup Iteration  10: 203542.341 ops/s
# Warmup Iteration  11: 203329.749 ops/s
# Warmup Iteration  12: 203254.528 ops/s
# Warmup Iteration  13: 203547.577 ops/s
# Warmup Iteration  14: 203223.191 ops/s
# Warmup Iteration  15: 203715.627 ops/s
# Warmup Iteration  16: 203504.062 ops/s
# Warmup Iteration  17: 210285.695 ops/s
# Warmup Iteration  18: 209517.680 ops/s
# Warmup Iteration  19: 209648.998 ops/s
# Warmup Iteration  20: 209732.743 ops/s
# Warmup Iteration  21: 209380.833 ops/s
# Warmup Iteration  22: 209493.442 ops/s
# Warmup Iteration  23: 209101.756 ops/s
# Warmup Iteration  24: 209531.386 ops/s
# Warmup Iteration  25: 209864.732 ops/s
# Warmup Iteration  26: 209093.679 ops/s
# Warmup Iteration  27: 209708.108 ops/s
# Warmup Iteration  28: 209660.010 ops/s
# Warmup Iteration  29: 209818.604 ops/s
# Warmup Iteration  30: 210024.719 ops/s
Iteration   1: 209615.896 ops/s
Iteration   2: 210033.303 ops/s
Iteration   3: 209392.059 ops/s
Iteration   4: 209745.522 ops/s
Iteration   5: 210220.758 ops/s
Iteration   6: 209613.386 ops/s
Iteration   7: 209876.225 ops/s
Iteration   8: 209628.853 ops/s
Iteration   9: 209317.065 ops/s
Iteration  10: 209646.979 ops/s
Iteration  11: 209969.438 ops/s
Iteration  12: 210188.066 ops/s
Iteration  13: 210136.212 ops/s
Iteration  14: 209784.000 ops/s
Iteration  15: 210315.400 ops/s
Iteration  16: 210299.953 ops/s
Iteration  17: 209702.260 ops/s
Iteration  18: 209550.222 ops/s
Iteration  19: 209641.963 ops/s
Iteration  20: 209767.318 ops/s
Iteration  21: 209542.756 ops/s
Iteration  22: 209272.546 ops/s
Iteration  23: 209096.631 ops/s
Iteration  24: 208841.792 ops/s
Iteration  25: 209187.332 ops/s
Iteration  26: 209511.953 ops/s
Iteration  27: 210220.669 ops/s
Iteration  28: 210112.208 ops/s
Iteration  29: 209925.566 ops/s
Iteration  30: 209183.739 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_826._Benchmark.benchmark_Cluster_826":
  209711.336 ±(99.9%) 257.783 ops/s [Average]
  (min, avg, max) = (208841.792, 209711.336, 210315.400), stdev = 385.837
  CI (99.9%): [209453.553, 209969.118] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_826._Benchmark.benchmark_Cluster_826  thrpt   30  209711.336 ± 257.783  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_827._Benchmark.benchmark_Cluster_827$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_827._Benchmark.benchmark_Cluster_827

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 49537.877 ops/s
# Warmup Iteration   2: 79703.117 ops/s
# Warmup Iteration   3: 119255.993 ops/s
# Warmup Iteration   4: 128296.700 ops/s
# Warmup Iteration   5: 127935.092 ops/s
# Warmup Iteration   6: 128857.627 ops/s
# Warmup Iteration   7: 128440.532 ops/s
# Warmup Iteration   8: 128928.993 ops/s
# Warmup Iteration   9: 129174.939 ops/s
# Warmup Iteration  10: 100114.272 ops/s
# Warmup Iteration  11: 128797.391 ops/s
# Warmup Iteration  12: 128707.065 ops/s
# Warmup Iteration  13: 128700.035 ops/s
# Warmup Iteration  14: 129017.508 ops/s
# Warmup Iteration  15: 128663.909 ops/s
# Warmup Iteration  16: 129086.742 ops/s
# Warmup Iteration  17: 131682.944 ops/s
# Warmup Iteration  18: 131698.969 ops/s
# Warmup Iteration  19: 131282.589 ops/s
# Warmup Iteration  20: 131533.294 ops/s
# Warmup Iteration  21: 131690.066 ops/s
# Warmup Iteration  22: 131493.577 ops/s
# Warmup Iteration  23: 131845.267 ops/s
# Warmup Iteration  24: 131590.613 ops/s
# Warmup Iteration  25: 131042.277 ops/s
# Warmup Iteration  26: 131225.743 ops/s
# Warmup Iteration  27: 131639.050 ops/s
# Warmup Iteration  28: 131724.242 ops/s
# Warmup Iteration  29: 131750.221 ops/s
# Warmup Iteration  30: 131556.456 ops/s
Iteration   1: 131734.807 ops/s
Iteration   2: 131699.213 ops/s
Iteration   3: 131363.000 ops/s
Iteration   4: 131992.252 ops/s
Iteration   5: 131950.036 ops/s
Iteration   6: 131258.733 ops/s
Iteration   7: 131370.856 ops/s
Iteration   8: 131774.908 ops/s
Iteration   9: 131218.621 ops/s
Iteration  10: 131342.925 ops/s
Iteration  11: 131332.418 ops/s
Iteration  12: 131127.242 ops/s
Iteration  13: 131582.893 ops/s
Iteration  14: 131477.826 ops/s
Iteration  15: 131364.532 ops/s
Iteration  16: 131607.173 ops/s
Iteration  17: 131528.411 ops/s
Iteration  18: 131504.661 ops/s
Iteration  19: 131728.738 ops/s
Iteration  20: 131690.906 ops/s
Iteration  21: 131660.452 ops/s
Iteration  22: 131877.359 ops/s
Iteration  23: 132086.007 ops/s
Iteration  24: 131628.447 ops/s
Iteration  25: 132235.209 ops/s
Iteration  26: 132125.446 ops/s
Iteration  27: 131408.413 ops/s
Iteration  28: 131798.386 ops/s
Iteration  29: 132023.104 ops/s
Iteration  30: 131732.833 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_827._Benchmark.benchmark_Cluster_827":
  131640.860 ±(99.9%) 192.055 ops/s [Average]
  (min, avg, max) = (131127.242, 131640.860, 132235.209), stdev = 287.459
  CI (99.9%): [131448.805, 131832.916] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_827._Benchmark.benchmark_Cluster_827  thrpt   30  131640.860 ± 192.055  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_828._Benchmark.benchmark_Cluster_828$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_828._Benchmark.benchmark_Cluster_828

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56845.689 ops/s
# Warmup Iteration   2: 116006.326 ops/s
# Warmup Iteration   3: 174486.879 ops/s
# Warmup Iteration   4: 173656.827 ops/s
# Warmup Iteration   5: 175050.826 ops/s
# Warmup Iteration   6: 174909.088 ops/s
# Warmup Iteration   7: 139106.076 ops/s
# Warmup Iteration   8: 174940.819 ops/s
# Warmup Iteration   9: 174933.296 ops/s
# Warmup Iteration  10: 174653.636 ops/s
# Warmup Iteration  11: 175041.202 ops/s
# Warmup Iteration  12: 175250.631 ops/s
# Warmup Iteration  13: 175226.583 ops/s
# Warmup Iteration  14: 174959.884 ops/s
# Warmup Iteration  15: 174930.278 ops/s
# Warmup Iteration  16: 174863.361 ops/s
# Warmup Iteration  17: 174856.968 ops/s
# Warmup Iteration  18: 174639.280 ops/s
# Warmup Iteration  19: 174719.106 ops/s
# Warmup Iteration  20: 174599.201 ops/s
# Warmup Iteration  21: 174727.656 ops/s
# Warmup Iteration  22: 174963.058 ops/s
# Warmup Iteration  23: 174968.874 ops/s
# Warmup Iteration  24: 174986.541 ops/s
# Warmup Iteration  25: 175200.870 ops/s
# Warmup Iteration  26: 175073.883 ops/s
# Warmup Iteration  27: 175116.454 ops/s
# Warmup Iteration  28: 174748.169 ops/s
# Warmup Iteration  29: 174646.818 ops/s
# Warmup Iteration  30: 174877.770 ops/s
Iteration   1: 175021.617 ops/s
Iteration   2: 175126.411 ops/s
Iteration   3: 174948.776 ops/s
Iteration   4: 175134.867 ops/s
Iteration   5: 174856.063 ops/s
Iteration   6: 175093.036 ops/s
Iteration   7: 174831.554 ops/s
Iteration   8: 175191.709 ops/s
Iteration   9: 174753.464 ops/s
Iteration  10: 174926.360 ops/s
Iteration  11: 174718.982 ops/s
Iteration  12: 175316.379 ops/s
Iteration  13: 175011.153 ops/s
Iteration  14: 175110.482 ops/s
Iteration  15: 174956.078 ops/s
Iteration  16: 175127.283 ops/s
Iteration  17: 174832.442 ops/s
Iteration  18: 175262.933 ops/s
Iteration  19: 174585.804 ops/s
Iteration  20: 174727.170 ops/s
Iteration  21: 174442.500 ops/s
Iteration  22: 174755.116 ops/s
Iteration  23: 174840.801 ops/s
Iteration  24: 175202.663 ops/s
Iteration  25: 174941.704 ops/s
Iteration  26: 174927.519 ops/s
Iteration  27: 174978.451 ops/s
Iteration  28: 175080.732 ops/s
Iteration  29: 174632.590 ops/s
Iteration  30: 174777.779 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_828._Benchmark.benchmark_Cluster_828":
  174937.081 ±(99.9%) 139.767 ops/s [Average]
  (min, avg, max) = (174442.500, 174937.081, 175316.379), stdev = 209.196
  CI (99.9%): [174797.314, 175076.847] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_828._Benchmark.benchmark_Cluster_828  thrpt   30  174937.081 ± 139.767  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_829._Benchmark.benchmark_Cluster_829$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_829._Benchmark.benchmark_Cluster_829

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57919.712 ops/s
# Warmup Iteration   2: 93094.531 ops/s
# Warmup Iteration   3: 153118.769 ops/s
# Warmup Iteration   4: 154523.879 ops/s
# Warmup Iteration   5: 155507.973 ops/s
# Warmup Iteration   6: 155215.284 ops/s
# Warmup Iteration   7: 155190.651 ops/s
# Warmup Iteration   8: 152693.711 ops/s
# Warmup Iteration   9: 123161.720 ops/s
# Warmup Iteration  10: 155355.416 ops/s
# Warmup Iteration  11: 155430.896 ops/s
# Warmup Iteration  12: 155383.137 ops/s
# Warmup Iteration  13: 155458.834 ops/s
# Warmup Iteration  14: 155319.269 ops/s
# Warmup Iteration  15: 155404.519 ops/s
# Warmup Iteration  16: 155242.934 ops/s
# Warmup Iteration  17: 155774.516 ops/s
# Warmup Iteration  18: 156043.960 ops/s
# Warmup Iteration  19: 155948.713 ops/s
# Warmup Iteration  20: 155870.426 ops/s
# Warmup Iteration  21: 155921.457 ops/s
# Warmup Iteration  22: 155771.558 ops/s
# Warmup Iteration  23: 155948.685 ops/s
# Warmup Iteration  24: 155767.813 ops/s
# Warmup Iteration  25: 155676.193 ops/s
# Warmup Iteration  26: 155877.320 ops/s
# Warmup Iteration  27: 156222.123 ops/s
# Warmup Iteration  28: 155767.489 ops/s
# Warmup Iteration  29: 155972.099 ops/s
# Warmup Iteration  30: 155635.932 ops/s
Iteration   1: 155714.199 ops/s
Iteration   2: 156139.276 ops/s
Iteration   3: 155961.725 ops/s
Iteration   4: 156103.880 ops/s
Iteration   5: 155824.955 ops/s
Iteration   6: 156171.939 ops/s
Iteration   7: 156081.045 ops/s
Iteration   8: 155870.618 ops/s
Iteration   9: 155958.156 ops/s
Iteration  10: 155968.728 ops/s
Iteration  11: 155951.655 ops/s
Iteration  12: 156296.811 ops/s
Iteration  13: 156096.352 ops/s
Iteration  14: 156201.304 ops/s
Iteration  15: 156241.155 ops/s
Iteration  16: 155811.945 ops/s
Iteration  17: 156009.634 ops/s
Iteration  18: 155837.650 ops/s
Iteration  19: 155896.841 ops/s
Iteration  20: 155947.684 ops/s
Iteration  21: 155747.538 ops/s
Iteration  22: 156217.239 ops/s
Iteration  23: 156110.910 ops/s
Iteration  24: 156005.430 ops/s
Iteration  25: 156310.121 ops/s
Iteration  26: 156275.051 ops/s
Iteration  27: 155909.251 ops/s
Iteration  28: 155841.855 ops/s
Iteration  29: 155883.047 ops/s
Iteration  30: 155930.969 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_829._Benchmark.benchmark_Cluster_829":
  156010.566 ±(99.9%) 112.113 ops/s [Average]
  (min, avg, max) = (155714.199, 156010.566, 156310.121), stdev = 167.805
  CI (99.9%): [155898.453, 156122.678] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_829._Benchmark.benchmark_Cluster_829  thrpt   30  156010.566 ± 112.113  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_83._Benchmark.benchmark_Cluster_83$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_83._Benchmark.benchmark_Cluster_83

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79285.037 ops/s
# Warmup Iteration   2: 146103.509 ops/s
# Warmup Iteration   3: 210570.211 ops/s
# Warmup Iteration   4: 209273.673 ops/s
# Warmup Iteration   5: 210741.301 ops/s
# Warmup Iteration   6: 210853.636 ops/s
# Warmup Iteration   7: 167759.640 ops/s
# Warmup Iteration   8: 210554.462 ops/s
# Warmup Iteration   9: 209973.418 ops/s
# Warmup Iteration  10: 210258.421 ops/s
# Warmup Iteration  11: 210413.234 ops/s
# Warmup Iteration  12: 210696.959 ops/s
# Warmup Iteration  13: 210022.425 ops/s
# Warmup Iteration  14: 209987.605 ops/s
# Warmup Iteration  15: 209897.946 ops/s
# Warmup Iteration  16: 209721.326 ops/s
# Warmup Iteration  17: 210119.277 ops/s
# Warmup Iteration  18: 209672.759 ops/s
# Warmup Iteration  19: 209887.755 ops/s
# Warmup Iteration  20: 210077.231 ops/s
# Warmup Iteration  21: 209818.116 ops/s
# Warmup Iteration  22: 209964.323 ops/s
# Warmup Iteration  23: 209688.286 ops/s
# Warmup Iteration  24: 209724.533 ops/s
# Warmup Iteration  25: 209735.984 ops/s
# Warmup Iteration  26: 209985.337 ops/s
# Warmup Iteration  27: 210243.076 ops/s
# Warmup Iteration  28: 209982.444 ops/s
# Warmup Iteration  29: 210047.200 ops/s
# Warmup Iteration  30: 209689.035 ops/s
Iteration   1: 209861.676 ops/s
Iteration   2: 209988.881 ops/s
Iteration   3: 209889.240 ops/s
Iteration   4: 209939.711 ops/s
Iteration   5: 209888.920 ops/s
Iteration   6: 210148.463 ops/s
Iteration   7: 210114.455 ops/s
Iteration   8: 210051.734 ops/s
Iteration   9: 209981.996 ops/s
Iteration  10: 210125.955 ops/s
Iteration  11: 210136.051 ops/s
Iteration  12: 210102.168 ops/s
Iteration  13: 209563.933 ops/s
Iteration  14: 210095.691 ops/s
Iteration  15: 210545.334 ops/s
Iteration  16: 209587.443 ops/s
Iteration  17: 210194.680 ops/s
Iteration  18: 209842.069 ops/s
Iteration  19: 210372.305 ops/s
Iteration  20: 209965.603 ops/s
Iteration  21: 209948.002 ops/s
Iteration  22: 209638.765 ops/s
Iteration  23: 209861.814 ops/s
Iteration  24: 209357.856 ops/s
Iteration  25: 210435.589 ops/s
Iteration  26: 210037.007 ops/s
Iteration  27: 209957.106 ops/s
Iteration  28: 210326.492 ops/s
Iteration  29: 210681.556 ops/s
Iteration  30: 210156.802 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_83._Benchmark.benchmark_Cluster_83":
  210026.577 ±(99.9%) 189.463 ops/s [Average]
  (min, avg, max) = (209357.856, 210026.577, 210681.556), stdev = 283.579
  CI (99.9%): [209837.114, 210216.039] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_83._Benchmark.benchmark_Cluster_83  thrpt   30  210026.577 ± 189.463  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_830._Benchmark.benchmark_Cluster_830$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_830._Benchmark.benchmark_Cluster_830

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 119581.426 ops/s
# Warmup Iteration   2: 150006.987 ops/s
# Warmup Iteration   3: 233850.563 ops/s
# Warmup Iteration   4: 237297.535 ops/s
# Warmup Iteration   5: 236024.350 ops/s
# Warmup Iteration   6: 236740.268 ops/s
# Warmup Iteration   7: 236839.755 ops/s
# Warmup Iteration   8: 236866.053 ops/s
# Warmup Iteration   9: 237402.260 ops/s
# Warmup Iteration  10: 184040.608 ops/s
# Warmup Iteration  11: 236672.855 ops/s
# Warmup Iteration  12: 236332.845 ops/s
# Warmup Iteration  13: 236052.250 ops/s
# Warmup Iteration  14: 236611.245 ops/s
# Warmup Iteration  15: 237090.958 ops/s
# Warmup Iteration  16: 237197.566 ops/s
# Warmup Iteration  17: 242064.189 ops/s
# Warmup Iteration  18: 241939.196 ops/s
# Warmup Iteration  19: 241984.053 ops/s
# Warmup Iteration  20: 241723.221 ops/s
# Warmup Iteration  21: 241676.347 ops/s
# Warmup Iteration  22: 242124.106 ops/s
# Warmup Iteration  23: 241591.035 ops/s
# Warmup Iteration  24: 241757.720 ops/s
# Warmup Iteration  25: 242230.995 ops/s
# Warmup Iteration  26: 242066.573 ops/s
# Warmup Iteration  27: 241555.662 ops/s
# Warmup Iteration  28: 242082.035 ops/s
# Warmup Iteration  29: 241852.814 ops/s
# Warmup Iteration  30: 241738.378 ops/s
Iteration   1: 241414.167 ops/s
Iteration   2: 241813.385 ops/s
Iteration   3: 241804.664 ops/s
Iteration   4: 241322.446 ops/s
Iteration   5: 241674.572 ops/s
Iteration   6: 242199.936 ops/s
Iteration   7: 240953.451 ops/s
Iteration   8: 241957.274 ops/s
Iteration   9: 241808.727 ops/s
Iteration  10: 241607.500 ops/s
Iteration  11: 241971.757 ops/s
Iteration  12: 241894.432 ops/s
Iteration  13: 241876.611 ops/s
Iteration  14: 242253.220 ops/s
Iteration  15: 242331.206 ops/s
Iteration  16: 241828.929 ops/s
Iteration  17: 242418.149 ops/s
Iteration  18: 242058.544 ops/s
Iteration  19: 241752.711 ops/s
Iteration  20: 242384.936 ops/s
Iteration  21: 242150.464 ops/s
Iteration  22: 241938.488 ops/s
Iteration  23: 241761.957 ops/s
Iteration  24: 241648.048 ops/s
Iteration  25: 241532.682 ops/s
Iteration  26: 241438.950 ops/s
Iteration  27: 241844.981 ops/s
Iteration  28: 242173.991 ops/s
Iteration  29: 241808.406 ops/s
Iteration  30: 242069.523 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_830._Benchmark.benchmark_Cluster_830":
  241856.470 ±(99.9%) 220.008 ops/s [Average]
  (min, avg, max) = (240953.451, 241856.470, 242418.149), stdev = 329.297
  CI (99.9%): [241636.462, 242076.478] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_830._Benchmark.benchmark_Cluster_830  thrpt   30  241856.470 ± 220.008  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_831._Benchmark.benchmark_Cluster_831$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_831._Benchmark.benchmark_Cluster_831

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 113707.004 ops/s
# Warmup Iteration   2: 217623.035 ops/s
# Warmup Iteration   3: 289035.702 ops/s
# Warmup Iteration   4: 291745.005 ops/s
# Warmup Iteration   5: 291187.386 ops/s
# Warmup Iteration   6: 246079.946 ops/s
# Warmup Iteration   7: 278624.932 ops/s
# Warmup Iteration   8: 291529.050 ops/s
# Warmup Iteration   9: 292080.537 ops/s
# Warmup Iteration  10: 291988.448 ops/s
# Warmup Iteration  11: 292037.728 ops/s
# Warmup Iteration  12: 291570.239 ops/s
# Warmup Iteration  13: 292300.711 ops/s
# Warmup Iteration  14: 292080.907 ops/s
# Warmup Iteration  15: 292278.180 ops/s
# Warmup Iteration  16: 292245.008 ops/s
# Warmup Iteration  17: 291814.808 ops/s
# Warmup Iteration  18: 291864.434 ops/s
# Warmup Iteration  19: 292191.074 ops/s
# Warmup Iteration  20: 291996.390 ops/s
# Warmup Iteration  21: 291895.432 ops/s
# Warmup Iteration  22: 291637.397 ops/s
# Warmup Iteration  23: 291984.556 ops/s
# Warmup Iteration  24: 291882.400 ops/s
# Warmup Iteration  25: 291951.813 ops/s
# Warmup Iteration  26: 291668.823 ops/s
# Warmup Iteration  27: 291966.766 ops/s
# Warmup Iteration  28: 292181.497 ops/s
# Warmup Iteration  29: 291946.319 ops/s
# Warmup Iteration  30: 292239.870 ops/s
Iteration   1: 292107.841 ops/s
Iteration   2: 292373.069 ops/s
Iteration   3: 291616.184 ops/s
Iteration   4: 292026.500 ops/s
Iteration   5: 291406.208 ops/s
Iteration   6: 291714.402 ops/s
Iteration   7: 291805.144 ops/s
Iteration   8: 291643.857 ops/s
Iteration   9: 291953.889 ops/s
Iteration  10: 291614.673 ops/s
Iteration  11: 291883.140 ops/s
Iteration  12: 291441.603 ops/s
Iteration  13: 292166.561 ops/s
Iteration  14: 291608.259 ops/s
Iteration  15: 291565.136 ops/s
Iteration  16: 291821.554 ops/s
Iteration  17: 292220.198 ops/s
Iteration  18: 291719.828 ops/s
Iteration  19: 291650.717 ops/s
Iteration  20: 291585.989 ops/s
Iteration  21: 291272.617 ops/s
Iteration  22: 291623.692 ops/s
Iteration  23: 291664.298 ops/s
Iteration  24: 291840.458 ops/s
Iteration  25: 291678.888 ops/s
Iteration  26: 292315.005 ops/s
Iteration  27: 291434.406 ops/s
Iteration  28: 291313.814 ops/s
Iteration  29: 291451.812 ops/s
Iteration  30: 291344.901 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_831._Benchmark.benchmark_Cluster_831":
  291728.821 ±(99.9%) 197.020 ops/s [Average]
  (min, avg, max) = (291272.617, 291728.821, 292373.069), stdev = 294.891
  CI (99.9%): [291531.801, 291925.842] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_831._Benchmark.benchmark_Cluster_831  thrpt   30  291728.821 ± 197.020  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_832._Benchmark.benchmark_Cluster_832$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_832._Benchmark.benchmark_Cluster_832

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 141657.067 ops/s
# Warmup Iteration   2: 153960.463 ops/s
# Warmup Iteration   3: 165334.164 ops/s
# Warmup Iteration   4: 202265.357 ops/s
# Warmup Iteration   5: 202014.663 ops/s
# Warmup Iteration   6: 201838.579 ops/s
# Warmup Iteration   7: 200229.146 ops/s
# Warmup Iteration   8: 201885.622 ops/s
# Warmup Iteration   9: 201700.610 ops/s
# Warmup Iteration  10: 201469.249 ops/s
# Warmup Iteration  11: 201064.717 ops/s
# Warmup Iteration  12: 202176.414 ops/s
# Warmup Iteration  13: 201929.244 ops/s
# Warmup Iteration  14: 201921.824 ops/s
# Warmup Iteration  15: 201894.862 ops/s
# Warmup Iteration  16: 164056.958 ops/s
# Warmup Iteration  17: 205112.975 ops/s
# Warmup Iteration  18: 209650.675 ops/s
# Warmup Iteration  19: 209501.558 ops/s
# Warmup Iteration  20: 209590.703 ops/s
# Warmup Iteration  21: 209835.781 ops/s
# Warmup Iteration  22: 209144.673 ops/s
# Warmup Iteration  23: 210203.117 ops/s
# Warmup Iteration  24: 209944.580 ops/s
# Warmup Iteration  25: 209440.845 ops/s
# Warmup Iteration  26: 208876.489 ops/s
# Warmup Iteration  27: 208689.734 ops/s
# Warmup Iteration  28: 208742.037 ops/s
# Warmup Iteration  29: 208682.492 ops/s
# Warmup Iteration  30: 208931.449 ops/s
Iteration   1: 209424.578 ops/s
Iteration   2: 209079.162 ops/s
Iteration   3: 209258.373 ops/s
Iteration   4: 209404.014 ops/s
Iteration   5: 208975.703 ops/s
Iteration   6: 208987.744 ops/s
Iteration   7: 208401.718 ops/s
Iteration   8: 208671.043 ops/s
Iteration   9: 208820.807 ops/s
Iteration  10: 208244.585 ops/s
Iteration  11: 209145.698 ops/s
Iteration  12: 209154.838 ops/s
Iteration  13: 208713.573 ops/s
Iteration  14: 208222.745 ops/s
Iteration  15: 208210.838 ops/s
Iteration  16: 208955.745 ops/s
Iteration  17: 208983.382 ops/s
Iteration  18: 208877.255 ops/s
Iteration  19: 208752.573 ops/s
Iteration  20: 208454.283 ops/s
Iteration  21: 208368.699 ops/s
Iteration  22: 208719.104 ops/s
Iteration  23: 208659.851 ops/s
Iteration  24: 208684.646 ops/s
Iteration  25: 208618.309 ops/s
Iteration  26: 208739.929 ops/s
Iteration  27: 208654.365 ops/s
Iteration  28: 208432.864 ops/s
Iteration  29: 208679.787 ops/s
Iteration  30: 209119.107 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_832._Benchmark.benchmark_Cluster_832":
  208780.511 ±(99.9%) 223.150 ops/s [Average]
  (min, avg, max) = (208210.838, 208780.511, 209424.578), stdev = 334.000
  CI (99.9%): [208557.361, 209003.660] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_832._Benchmark.benchmark_Cluster_832  thrpt   30  208780.511 ± 223.150  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_833._Benchmark.benchmark_Cluster_833$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_833._Benchmark.benchmark_Cluster_833

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 112884.544 ops/s
# Warmup Iteration   2: 191547.171 ops/s
# Warmup Iteration   3: 259227.820 ops/s
# Warmup Iteration   4: 257054.909 ops/s
# Warmup Iteration   5: 259707.237 ops/s
# Warmup Iteration   6: 258888.247 ops/s
# Warmup Iteration   7: 206530.872 ops/s
# Warmup Iteration   8: 259606.663 ops/s
# Warmup Iteration   9: 259419.157 ops/s
# Warmup Iteration  10: 259790.969 ops/s
# Warmup Iteration  11: 259422.868 ops/s
# Warmup Iteration  12: 258884.892 ops/s
# Warmup Iteration  13: 259103.664 ops/s
# Warmup Iteration  14: 259066.051 ops/s
# Warmup Iteration  15: 258839.056 ops/s
# Warmup Iteration  16: 258263.911 ops/s
# Warmup Iteration  17: 258903.838 ops/s
# Warmup Iteration  18: 258763.881 ops/s
# Warmup Iteration  19: 258702.431 ops/s
# Warmup Iteration  20: 259233.497 ops/s
# Warmup Iteration  21: 258735.135 ops/s
# Warmup Iteration  22: 259132.182 ops/s
# Warmup Iteration  23: 259687.379 ops/s
# Warmup Iteration  24: 259703.212 ops/s
# Warmup Iteration  25: 259851.904 ops/s
# Warmup Iteration  26: 259381.998 ops/s
# Warmup Iteration  27: 259836.088 ops/s
# Warmup Iteration  28: 259609.583 ops/s
# Warmup Iteration  29: 259832.729 ops/s
# Warmup Iteration  30: 259718.818 ops/s
Iteration   1: 260281.922 ops/s
Iteration   2: 259526.033 ops/s
Iteration   3: 259513.002 ops/s
Iteration   4: 260210.883 ops/s
Iteration   5: 260392.693 ops/s
Iteration   6: 260232.039 ops/s
Iteration   7: 260370.059 ops/s
Iteration   8: 260337.067 ops/s
Iteration   9: 260519.753 ops/s
Iteration  10: 260093.170 ops/s
Iteration  11: 260008.157 ops/s
Iteration  12: 259488.874 ops/s
Iteration  13: 260209.654 ops/s
Iteration  14: 259098.128 ops/s
Iteration  15: 260032.038 ops/s
Iteration  16: 259954.765 ops/s
Iteration  17: 260234.790 ops/s
Iteration  18: 259896.389 ops/s
Iteration  19: 260374.956 ops/s
Iteration  20: 260184.673 ops/s
Iteration  21: 260332.187 ops/s
Iteration  22: 260202.591 ops/s
Iteration  23: 260434.656 ops/s
Iteration  24: 259874.639 ops/s
Iteration  25: 260235.798 ops/s
Iteration  26: 260496.582 ops/s
Iteration  27: 259925.979 ops/s
Iteration  28: 260516.423 ops/s
Iteration  29: 259805.983 ops/s
Iteration  30: 259697.572 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_833._Benchmark.benchmark_Cluster_833":
  260082.715 ±(99.9%) 233.419 ops/s [Average]
  (min, avg, max) = (259098.128, 260082.715, 260519.753), stdev = 349.370
  CI (99.9%): [259849.297, 260316.134] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_833._Benchmark.benchmark_Cluster_833  thrpt   30  260082.715 ± 233.419  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_834._Benchmark.benchmark_Cluster_834$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_834._Benchmark.benchmark_Cluster_834

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46506.349 ops/s
# Warmup Iteration   2: 110140.517 ops/s
# Warmup Iteration   3: 155821.610 ops/s
# Warmup Iteration   4: 157137.146 ops/s
# Warmup Iteration   5: 157287.439 ops/s
# Warmup Iteration   6: 124904.876 ops/s
# Warmup Iteration   7: 157386.327 ops/s
# Warmup Iteration   8: 157315.771 ops/s
# Warmup Iteration   9: 157365.249 ops/s
# Warmup Iteration  10: 157142.245 ops/s
# Warmup Iteration  11: 157457.970 ops/s
# Warmup Iteration  12: 157414.266 ops/s
# Warmup Iteration  13: 157609.087 ops/s
# Warmup Iteration  14: 157395.744 ops/s
# Warmup Iteration  15: 157456.071 ops/s
# Warmup Iteration  16: 157503.728 ops/s
# Warmup Iteration  17: 157008.943 ops/s
# Warmup Iteration  18: 157019.294 ops/s
# Warmup Iteration  19: 157350.294 ops/s
# Warmup Iteration  20: 156592.305 ops/s
# Warmup Iteration  21: 157062.294 ops/s
# Warmup Iteration  22: 156891.440 ops/s
# Warmup Iteration  23: 157405.112 ops/s
# Warmup Iteration  24: 157280.950 ops/s
# Warmup Iteration  25: 157360.047 ops/s
# Warmup Iteration  26: 157434.931 ops/s
# Warmup Iteration  27: 157312.579 ops/s
# Warmup Iteration  28: 156871.792 ops/s
# Warmup Iteration  29: 157068.280 ops/s
# Warmup Iteration  30: 157394.648 ops/s
Iteration   1: 157276.560 ops/s
Iteration   2: 157224.386 ops/s
Iteration   3: 157581.468 ops/s
Iteration   4: 157055.218 ops/s
Iteration   5: 157056.015 ops/s
Iteration   6: 157295.153 ops/s
Iteration   7: 157184.257 ops/s
Iteration   8: 156991.536 ops/s
Iteration   9: 157666.491 ops/s
Iteration  10: 157374.361 ops/s
Iteration  11: 157484.308 ops/s
Iteration  12: 157555.903 ops/s
Iteration  13: 157400.018 ops/s
Iteration  14: 157242.492 ops/s
Iteration  15: 157301.112 ops/s
Iteration  16: 156726.464 ops/s
Iteration  17: 157365.478 ops/s
Iteration  18: 157420.221 ops/s
Iteration  19: 156888.559 ops/s
Iteration  20: 157117.390 ops/s
Iteration  21: 157310.985 ops/s
Iteration  22: 157350.138 ops/s
Iteration  23: 157338.712 ops/s
Iteration  24: 157382.242 ops/s
Iteration  25: 157492.349 ops/s
Iteration  26: 157503.815 ops/s
Iteration  27: 157417.534 ops/s
Iteration  28: 157354.405 ops/s
Iteration  29: 157502.192 ops/s
Iteration  30: 157326.660 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_834._Benchmark.benchmark_Cluster_834":
  157306.214 ±(99.9%) 139.433 ops/s [Average]
  (min, avg, max) = (156726.464, 157306.214, 157666.491), stdev = 208.697
  CI (99.9%): [157166.781, 157445.647] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_834._Benchmark.benchmark_Cluster_834  thrpt   30  157306.214 ± 139.433  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_835._Benchmark.benchmark_Cluster_835$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_835._Benchmark.benchmark_Cluster_835

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46877.533 ops/s
# Warmup Iteration   2: 132099.262 ops/s
# Warmup Iteration   3: 187592.310 ops/s
# Warmup Iteration   4: 188749.734 ops/s
# Warmup Iteration   5: 149822.624 ops/s
# Warmup Iteration   6: 188797.631 ops/s
# Warmup Iteration   7: 188653.983 ops/s
# Warmup Iteration   8: 189067.718 ops/s
# Warmup Iteration   9: 188430.184 ops/s
# Warmup Iteration  10: 188741.997 ops/s
# Warmup Iteration  11: 188382.086 ops/s
# Warmup Iteration  12: 188825.899 ops/s
# Warmup Iteration  13: 188982.879 ops/s
# Warmup Iteration  14: 188604.860 ops/s
# Warmup Iteration  15: 188314.812 ops/s
# Warmup Iteration  16: 188260.363 ops/s
# Warmup Iteration  17: 188555.036 ops/s
# Warmup Iteration  18: 188911.810 ops/s
# Warmup Iteration  19: 188539.825 ops/s
# Warmup Iteration  20: 188818.793 ops/s
# Warmup Iteration  21: 188465.720 ops/s
# Warmup Iteration  22: 188971.783 ops/s
# Warmup Iteration  23: 189057.021 ops/s
# Warmup Iteration  24: 189407.844 ops/s
# Warmup Iteration  25: 188449.441 ops/s
# Warmup Iteration  26: 188528.704 ops/s
# Warmup Iteration  27: 188424.437 ops/s
# Warmup Iteration  28: 188963.279 ops/s
# Warmup Iteration  29: 189193.812 ops/s
# Warmup Iteration  30: 189384.706 ops/s
Iteration   1: 189471.870 ops/s
Iteration   2: 188964.345 ops/s
Iteration   3: 189292.823 ops/s
Iteration   4: 189416.351 ops/s
Iteration   5: 189303.974 ops/s
Iteration   6: 189532.627 ops/s
Iteration   7: 189325.809 ops/s
Iteration   8: 189180.430 ops/s
Iteration   9: 188765.102 ops/s
Iteration  10: 188193.738 ops/s
Iteration  11: 188046.157 ops/s
Iteration  12: 188746.786 ops/s
Iteration  13: 188274.962 ops/s
Iteration  14: 188092.840 ops/s
Iteration  15: 189037.721 ops/s
Iteration  16: 188798.199 ops/s
Iteration  17: 188958.352 ops/s
Iteration  18: 187417.136 ops/s
Iteration  19: 187687.356 ops/s
Iteration  20: 188599.226 ops/s
Iteration  21: 188915.033 ops/s
Iteration  22: 188557.069 ops/s
Iteration  23: 188642.396 ops/s
Iteration  24: 188520.212 ops/s
Iteration  25: 188824.073 ops/s
Iteration  26: 188119.192 ops/s
Iteration  27: 188503.320 ops/s
Iteration  28: 187779.247 ops/s
Iteration  29: 188817.564 ops/s
Iteration  30: 188905.701 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_835._Benchmark.benchmark_Cluster_835":
  188689.654 ±(99.9%) 366.288 ops/s [Average]
  (min, avg, max) = (187417.136, 188689.654, 189532.627), stdev = 548.242
  CI (99.9%): [188323.366, 189055.942] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_835._Benchmark.benchmark_Cluster_835  thrpt   30  188689.654 ± 366.288  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_836._Benchmark.benchmark_Cluster_836$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_836._Benchmark.benchmark_Cluster_836

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79597.566 ops/s
# Warmup Iteration   2: 103833.936 ops/s
# Warmup Iteration   3: 160320.895 ops/s
# Warmup Iteration   4: 159977.045 ops/s
# Warmup Iteration   5: 159279.479 ops/s
# Warmup Iteration   6: 160504.942 ops/s
# Warmup Iteration   7: 160620.179 ops/s
# Warmup Iteration   8: 159868.912 ops/s
# Warmup Iteration   9: 133987.489 ops/s
# Warmup Iteration  10: 152902.482 ops/s
# Warmup Iteration  11: 159901.949 ops/s
# Warmup Iteration  12: 159900.027 ops/s
# Warmup Iteration  13: 160242.971 ops/s
# Warmup Iteration  14: 160182.717 ops/s
# Warmup Iteration  15: 160184.254 ops/s
# Warmup Iteration  16: 160034.649 ops/s
# Warmup Iteration  17: 164617.132 ops/s
# Warmup Iteration  18: 164764.336 ops/s
# Warmup Iteration  19: 164637.564 ops/s
# Warmup Iteration  20: 164825.470 ops/s
# Warmup Iteration  21: 164854.449 ops/s
# Warmup Iteration  22: 165084.949 ops/s
# Warmup Iteration  23: 164643.288 ops/s
# Warmup Iteration  24: 164437.968 ops/s
# Warmup Iteration  25: 164585.836 ops/s
# Warmup Iteration  26: 165131.766 ops/s
# Warmup Iteration  27: 164377.088 ops/s
# Warmup Iteration  28: 164542.131 ops/s
# Warmup Iteration  29: 164461.852 ops/s
# Warmup Iteration  30: 164563.393 ops/s
Iteration   1: 164826.545 ops/s
Iteration   2: 164763.428 ops/s
Iteration   3: 164955.274 ops/s
Iteration   4: 165094.106 ops/s
Iteration   5: 164460.430 ops/s
Iteration   6: 165094.914 ops/s
Iteration   7: 164423.109 ops/s
Iteration   8: 164735.443 ops/s
Iteration   9: 164666.163 ops/s
Iteration  10: 164544.430 ops/s
Iteration  11: 164868.873 ops/s
Iteration  12: 164390.563 ops/s
Iteration  13: 164441.987 ops/s
Iteration  14: 164513.060 ops/s
Iteration  15: 165223.423 ops/s
Iteration  16: 164686.091 ops/s
Iteration  17: 164239.106 ops/s
Iteration  18: 164707.041 ops/s
Iteration  19: 164664.986 ops/s
Iteration  20: 164671.099 ops/s
Iteration  21: 164619.796 ops/s
Iteration  22: 164768.287 ops/s
Iteration  23: 164720.486 ops/s
Iteration  24: 165079.958 ops/s
Iteration  25: 164766.239 ops/s
Iteration  26: 165347.609 ops/s
Iteration  27: 165369.719 ops/s
Iteration  28: 165039.480 ops/s
Iteration  29: 164402.652 ops/s
Iteration  30: 164916.655 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_836._Benchmark.benchmark_Cluster_836":
  164766.698 ±(99.9%) 192.879 ops/s [Average]
  (min, avg, max) = (164239.106, 164766.698, 165369.719), stdev = 288.693
  CI (99.9%): [164573.819, 164959.578] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_836._Benchmark.benchmark_Cluster_836  thrpt   30  164766.698 ± 192.879  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_837._Benchmark.benchmark_Cluster_837$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_837._Benchmark.benchmark_Cluster_837

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50555.687 ops/s
# Warmup Iteration   2: 112610.483 ops/s
# Warmup Iteration   3: 154641.050 ops/s
# Warmup Iteration   4: 154353.088 ops/s
# Warmup Iteration   5: 155244.828 ops/s
# Warmup Iteration   6: 123276.305 ops/s
# Warmup Iteration   7: 155188.120 ops/s
# Warmup Iteration   8: 155027.586 ops/s
# Warmup Iteration   9: 155168.778 ops/s
# Warmup Iteration  10: 155278.740 ops/s
# Warmup Iteration  11: 155232.076 ops/s
# Warmup Iteration  12: 154867.153 ops/s
# Warmup Iteration  13: 155012.141 ops/s
# Warmup Iteration  14: 154840.449 ops/s
# Warmup Iteration  15: 155236.584 ops/s
# Warmup Iteration  16: 155018.337 ops/s
# Warmup Iteration  17: 155190.916 ops/s
# Warmup Iteration  18: 155625.194 ops/s
# Warmup Iteration  19: 155067.603 ops/s
# Warmup Iteration  20: 155169.225 ops/s
# Warmup Iteration  21: 155316.703 ops/s
# Warmup Iteration  22: 155282.661 ops/s
# Warmup Iteration  23: 155185.640 ops/s
# Warmup Iteration  24: 155154.287 ops/s
# Warmup Iteration  25: 155369.460 ops/s
# Warmup Iteration  26: 155451.019 ops/s
# Warmup Iteration  27: 154988.457 ops/s
# Warmup Iteration  28: 155464.842 ops/s
# Warmup Iteration  29: 155338.379 ops/s
# Warmup Iteration  30: 155238.474 ops/s
Iteration   1: 154991.462 ops/s
Iteration   2: 155430.139 ops/s
Iteration   3: 155705.752 ops/s
Iteration   4: 155345.608 ops/s
Iteration   5: 155227.170 ops/s
Iteration   6: 154766.008 ops/s
Iteration   7: 154840.046 ops/s
Iteration   8: 155753.222 ops/s
Iteration   9: 155371.847 ops/s
Iteration  10: 155585.800 ops/s
Iteration  11: 155841.586 ops/s
Iteration  12: 155559.638 ops/s
Iteration  13: 155803.951 ops/s
Iteration  14: 155382.333 ops/s
Iteration  15: 155076.571 ops/s
Iteration  16: 155226.459 ops/s
Iteration  17: 155354.254 ops/s
Iteration  18: 155420.192 ops/s
Iteration  19: 155416.348 ops/s
Iteration  20: 155344.470 ops/s
Iteration  21: 155578.924 ops/s
Iteration  22: 155393.849 ops/s
Iteration  23: 155375.768 ops/s
Iteration  24: 155811.936 ops/s
Iteration  25: 155542.193 ops/s
Iteration  26: 155538.195 ops/s
Iteration  27: 155652.627 ops/s
Iteration  28: 155429.946 ops/s
Iteration  29: 155729.169 ops/s
Iteration  30: 155366.915 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_837._Benchmark.benchmark_Cluster_837":
  155428.746 ±(99.9%) 179.156 ops/s [Average]
  (min, avg, max) = (154766.008, 155428.746, 155841.586), stdev = 268.152
  CI (99.9%): [155249.590, 155607.902] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_837._Benchmark.benchmark_Cluster_837  thrpt   30  155428.746 ± 179.156  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_838._Benchmark.benchmark_Cluster_838$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_838._Benchmark.benchmark_Cluster_838

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54109.563 ops/s
# Warmup Iteration   2: 89145.687 ops/s
# Warmup Iteration   3: 110185.238 ops/s
# Warmup Iteration   4: 110854.281 ops/s
# Warmup Iteration   5: 110906.930 ops/s
# Warmup Iteration   6: 101152.583 ops/s
# Warmup Iteration   7: 98129.494 ops/s
# Warmup Iteration   8: 110818.214 ops/s
# Warmup Iteration   9: 110901.209 ops/s
# Warmup Iteration  10: 110927.985 ops/s
# Warmup Iteration  11: 110905.025 ops/s
# Warmup Iteration  12: 110669.496 ops/s
# Warmup Iteration  13: 110825.906 ops/s
# Warmup Iteration  14: 110839.394 ops/s
# Warmup Iteration  15: 110785.221 ops/s
# Warmup Iteration  16: 110744.739 ops/s
# Warmup Iteration  17: 110708.431 ops/s
# Warmup Iteration  18: 110810.099 ops/s
# Warmup Iteration  19: 110870.570 ops/s
# Warmup Iteration  20: 110840.965 ops/s
# Warmup Iteration  21: 111014.839 ops/s
# Warmup Iteration  22: 111020.400 ops/s
# Warmup Iteration  23: 111001.665 ops/s
# Warmup Iteration  24: 110994.605 ops/s
# Warmup Iteration  25: 111004.544 ops/s
# Warmup Iteration  26: 111036.928 ops/s
# Warmup Iteration  27: 110813.314 ops/s
# Warmup Iteration  28: 110886.680 ops/s
# Warmup Iteration  29: 110938.503 ops/s
# Warmup Iteration  30: 110906.197 ops/s
Iteration   1: 110964.093 ops/s
Iteration   2: 110829.343 ops/s
Iteration   3: 111074.000 ops/s
Iteration   4: 110910.087 ops/s
Iteration   5: 110959.546 ops/s
Iteration   6: 110798.750 ops/s
Iteration   7: 110695.755 ops/s
Iteration   8: 110593.760 ops/s
Iteration   9: 110790.829 ops/s
Iteration  10: 110846.465 ops/s
Iteration  11: 110901.798 ops/s
Iteration  12: 110934.191 ops/s
Iteration  13: 111092.745 ops/s
Iteration  14: 110805.624 ops/s
Iteration  15: 111141.160 ops/s
Iteration  16: 110964.872 ops/s
Iteration  17: 111117.398 ops/s
Iteration  18: 110930.401 ops/s
Iteration  19: 110984.498 ops/s
Iteration  20: 110810.120 ops/s
Iteration  21: 111074.705 ops/s
Iteration  22: 110940.376 ops/s
Iteration  23: 111046.810 ops/s
Iteration  24: 111024.876 ops/s
Iteration  25: 111092.317 ops/s
Iteration  26: 110854.576 ops/s
Iteration  27: 111095.773 ops/s
Iteration  28: 110921.272 ops/s
Iteration  29: 111091.361 ops/s
Iteration  30: 111012.873 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_838._Benchmark.benchmark_Cluster_838":
  110943.346 ±(99.9%) 89.179 ops/s [Average]
  (min, avg, max) = (110593.760, 110943.346, 111141.160), stdev = 133.479
  CI (99.9%): [110854.167, 111032.525] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score    Error  Units
Cluster_838._Benchmark.benchmark_Cluster_838  thrpt   30  110943.346 ± 89.179  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_839._Benchmark.benchmark_Cluster_839$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_839._Benchmark.benchmark_Cluster_839

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 120827.246 ops/s
# Warmup Iteration   2: 156635.230 ops/s
# Warmup Iteration   3: 237742.923 ops/s
# Warmup Iteration   4: 236712.461 ops/s
# Warmup Iteration   5: 237682.301 ops/s
# Warmup Iteration   6: 237916.839 ops/s
# Warmup Iteration   7: 237371.095 ops/s
# Warmup Iteration   8: 238003.530 ops/s
# Warmup Iteration   9: 188993.008 ops/s
# Warmup Iteration  10: 237553.957 ops/s
# Warmup Iteration  11: 237507.598 ops/s
# Warmup Iteration  12: 237511.485 ops/s
# Warmup Iteration  13: 238329.620 ops/s
# Warmup Iteration  14: 238545.194 ops/s
# Warmup Iteration  15: 237827.986 ops/s
# Warmup Iteration  16: 238466.519 ops/s
# Warmup Iteration  17: 246542.429 ops/s
# Warmup Iteration  18: 246681.257 ops/s
# Warmup Iteration  19: 245629.050 ops/s
# Warmup Iteration  20: 245866.931 ops/s
# Warmup Iteration  21: 245886.365 ops/s
# Warmup Iteration  22: 246251.852 ops/s
# Warmup Iteration  23: 246055.105 ops/s
# Warmup Iteration  24: 245769.991 ops/s
# Warmup Iteration  25: 246437.756 ops/s
# Warmup Iteration  26: 245326.765 ops/s
# Warmup Iteration  27: 245860.652 ops/s
# Warmup Iteration  28: 245791.628 ops/s
# Warmup Iteration  29: 246616.087 ops/s
# Warmup Iteration  30: 246365.837 ops/s
Iteration   1: 246693.279 ops/s
Iteration   2: 245883.707 ops/s
Iteration   3: 246153.774 ops/s
Iteration   4: 246329.689 ops/s
Iteration   5: 245887.053 ops/s
Iteration   6: 245933.429 ops/s
Iteration   7: 245778.187 ops/s
Iteration   8: 246678.442 ops/s
Iteration   9: 246556.060 ops/s
Iteration  10: 245534.024 ops/s
Iteration  11: 246409.718 ops/s
Iteration  12: 245401.775 ops/s
Iteration  13: 245348.932 ops/s
Iteration  14: 244237.350 ops/s
Iteration  15: 246147.068 ops/s
Iteration  16: 246135.581 ops/s
Iteration  17: 246758.279 ops/s
Iteration  18: 246414.204 ops/s
Iteration  19: 246136.046 ops/s
Iteration  20: 246413.796 ops/s
Iteration  21: 246109.826 ops/s
Iteration  22: 245344.607 ops/s
Iteration  23: 246099.562 ops/s
Iteration  24: 245310.574 ops/s
Iteration  25: 245876.056 ops/s
Iteration  26: 245253.587 ops/s
Iteration  27: 245480.599 ops/s
Iteration  28: 246362.016 ops/s
Iteration  29: 245549.005 ops/s
Iteration  30: 246127.800 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_839._Benchmark.benchmark_Cluster_839":
  245944.801 ±(99.9%) 366.799 ops/s [Average]
  (min, avg, max) = (244237.350, 245944.801, 246758.279), stdev = 549.007
  CI (99.9%): [245578.002, 246311.599] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_839._Benchmark.benchmark_Cluster_839  thrpt   30  245944.801 ± 366.799  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_84._Benchmark.benchmark_Cluster_84$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_84._Benchmark.benchmark_Cluster_84

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63943.690 ops/s
# Warmup Iteration   2: 81365.950 ops/s
# Warmup Iteration   3: 116894.284 ops/s
# Warmup Iteration   4: 125801.683 ops/s
# Warmup Iteration   5: 125075.430 ops/s
# Warmup Iteration   6: 126355.513 ops/s
# Warmup Iteration   7: 125523.349 ops/s
# Warmup Iteration   8: 126065.075 ops/s
# Warmup Iteration   9: 126412.455 ops/s
# Warmup Iteration  10: 126317.944 ops/s
# Warmup Iteration  11: 98201.582 ops/s
# Warmup Iteration  12: 126380.953 ops/s
# Warmup Iteration  13: 127253.392 ops/s
# Warmup Iteration  14: 126207.007 ops/s
# Warmup Iteration  15: 126831.247 ops/s
# Warmup Iteration  16: 126127.099 ops/s
# Warmup Iteration  17: 127953.139 ops/s
# Warmup Iteration  18: 127986.562 ops/s
# Warmup Iteration  19: 127770.644 ops/s
# Warmup Iteration  20: 127745.327 ops/s
# Warmup Iteration  21: 128211.915 ops/s
# Warmup Iteration  22: 128233.531 ops/s
# Warmup Iteration  23: 128465.131 ops/s
# Warmup Iteration  24: 128219.058 ops/s
# Warmup Iteration  25: 128574.510 ops/s
# Warmup Iteration  26: 127661.456 ops/s
# Warmup Iteration  27: 128357.079 ops/s
# Warmup Iteration  28: 127511.719 ops/s
# Warmup Iteration  29: 127471.326 ops/s
# Warmup Iteration  30: 128505.040 ops/s
Iteration   1: 127757.666 ops/s
Iteration   2: 127618.973 ops/s
Iteration   3: 128063.090 ops/s
Iteration   4: 127053.986 ops/s
Iteration   5: 127725.196 ops/s
Iteration   6: 128121.847 ops/s
Iteration   7: 128084.917 ops/s
Iteration   8: 128249.394 ops/s
Iteration   9: 128335.775 ops/s
Iteration  10: 128226.070 ops/s
Iteration  11: 128135.733 ops/s
Iteration  12: 128968.400 ops/s
Iteration  13: 128784.110 ops/s
Iteration  14: 128055.450 ops/s
Iteration  15: 128575.380 ops/s
Iteration  16: 128416.297 ops/s
Iteration  17: 128046.104 ops/s
Iteration  18: 127864.146 ops/s
Iteration  19: 128371.768 ops/s
Iteration  20: 128400.068 ops/s
Iteration  21: 127938.808 ops/s
Iteration  22: 127559.315 ops/s
Iteration  23: 128669.380 ops/s
Iteration  24: 127997.083 ops/s
Iteration  25: 127884.087 ops/s
Iteration  26: 128340.253 ops/s
Iteration  27: 128213.889 ops/s
Iteration  28: 128411.628 ops/s
Iteration  29: 128116.940 ops/s
Iteration  30: 128094.639 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_84._Benchmark.benchmark_Cluster_84":
  128136.013 ±(99.9%) 256.724 ops/s [Average]
  (min, avg, max) = (127053.986, 128136.013, 128968.400), stdev = 384.253
  CI (99.9%): [127879.289, 128392.737] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_84._Benchmark.benchmark_Cluster_84  thrpt   30  128136.013 ± 256.724  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_840._Benchmark.benchmark_Cluster_840$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_840._Benchmark.benchmark_Cluster_840

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 103778.481 ops/s
# Warmup Iteration   2: 112349.996 ops/s
# Warmup Iteration   3: 122660.256 ops/s
# Warmup Iteration   4: 145549.115 ops/s
# Warmup Iteration   5: 144962.712 ops/s
# Warmup Iteration   6: 146370.258 ops/s
# Warmup Iteration   7: 145123.762 ops/s
# Warmup Iteration   8: 146426.887 ops/s
# Warmup Iteration   9: 146149.342 ops/s
# Warmup Iteration  10: 145890.106 ops/s
# Warmup Iteration  11: 145390.818 ops/s
# Warmup Iteration  12: 145313.695 ops/s
# Warmup Iteration  13: 144986.318 ops/s
# Warmup Iteration  14: 144779.950 ops/s
# Warmup Iteration  15: 140452.569 ops/s
# Warmup Iteration  16: 121737.806 ops/s
# Warmup Iteration  17: 154192.919 ops/s
# Warmup Iteration  18: 155159.048 ops/s
# Warmup Iteration  19: 155034.277 ops/s
# Warmup Iteration  20: 155001.801 ops/s
# Warmup Iteration  21: 154874.981 ops/s
# Warmup Iteration  22: 154919.516 ops/s
# Warmup Iteration  23: 154996.501 ops/s
# Warmup Iteration  24: 154933.478 ops/s
# Warmup Iteration  25: 154190.737 ops/s
# Warmup Iteration  26: 154433.053 ops/s
# Warmup Iteration  27: 154973.958 ops/s
# Warmup Iteration  28: 154766.194 ops/s
# Warmup Iteration  29: 154583.018 ops/s
# Warmup Iteration  30: 154979.630 ops/s
Iteration   1: 154777.687 ops/s
Iteration   2: 154944.209 ops/s
Iteration   3: 155092.642 ops/s
Iteration   4: 155118.061 ops/s
Iteration   5: 155245.392 ops/s
Iteration   6: 154371.672 ops/s
Iteration   7: 154505.335 ops/s
Iteration   8: 153950.003 ops/s
Iteration   9: 154111.512 ops/s
Iteration  10: 154070.635 ops/s
Iteration  11: 154231.799 ops/s
Iteration  12: 154310.696 ops/s
Iteration  13: 154471.762 ops/s
Iteration  14: 155068.048 ops/s
Iteration  15: 155240.463 ops/s
Iteration  16: 153816.929 ops/s
Iteration  17: 154070.450 ops/s
Iteration  18: 154765.099 ops/s
Iteration  19: 155181.871 ops/s
Iteration  20: 155056.782 ops/s
Iteration  21: 155069.191 ops/s
Iteration  22: 154765.013 ops/s
Iteration  23: 154616.627 ops/s
Iteration  24: 154827.630 ops/s
Iteration  25: 155118.502 ops/s
Iteration  26: 155123.034 ops/s
Iteration  27: 155239.404 ops/s
Iteration  28: 154892.641 ops/s
Iteration  29: 155317.393 ops/s
Iteration  30: 155173.741 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_840._Benchmark.benchmark_Cluster_840":
  154751.474 ±(99.9%) 301.482 ops/s [Average]
  (min, avg, max) = (153816.929, 154751.474, 155317.393), stdev = 451.245
  CI (99.9%): [154449.992, 155052.957] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_840._Benchmark.benchmark_Cluster_840  thrpt   30  154751.474 ± 301.482  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_841._Benchmark.benchmark_Cluster_841$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_841._Benchmark.benchmark_Cluster_841

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 98286.945 ops/s
# Warmup Iteration   2: 106561.638 ops/s
# Warmup Iteration   3: 124794.960 ops/s
# Warmup Iteration   4: 144219.824 ops/s
# Warmup Iteration   5: 143756.449 ops/s
# Warmup Iteration   6: 143903.777 ops/s
# Warmup Iteration   7: 142782.375 ops/s
# Warmup Iteration   8: 143559.326 ops/s
# Warmup Iteration   9: 143746.295 ops/s
# Warmup Iteration  10: 143504.713 ops/s
# Warmup Iteration  11: 143337.849 ops/s
# Warmup Iteration  12: 143545.425 ops/s
# Warmup Iteration  13: 143870.123 ops/s
# Warmup Iteration  14: 124627.338 ops/s
# Warmup Iteration  15: 132841.966 ops/s
# Warmup Iteration  16: 142919.390 ops/s
# Warmup Iteration  17: 152008.747 ops/s
# Warmup Iteration  18: 152118.038 ops/s
# Warmup Iteration  19: 151882.373 ops/s
# Warmup Iteration  20: 151191.754 ops/s
# Warmup Iteration  21: 151853.416 ops/s
# Warmup Iteration  22: 151590.581 ops/s
# Warmup Iteration  23: 151438.596 ops/s
# Warmup Iteration  24: 151812.619 ops/s
# Warmup Iteration  25: 151992.751 ops/s
# Warmup Iteration  26: 151870.437 ops/s
# Warmup Iteration  27: 151644.940 ops/s
# Warmup Iteration  28: 151716.487 ops/s
# Warmup Iteration  29: 151649.325 ops/s
# Warmup Iteration  30: 151567.227 ops/s
Iteration   1: 151857.809 ops/s
Iteration   2: 151714.854 ops/s
Iteration   3: 151973.429 ops/s
Iteration   4: 152259.351 ops/s
Iteration   5: 152145.814 ops/s
Iteration   6: 151888.908 ops/s
Iteration   7: 152051.399 ops/s
Iteration   8: 151985.170 ops/s
Iteration   9: 151664.633 ops/s
Iteration  10: 151503.513 ops/s
Iteration  11: 151767.331 ops/s
Iteration  12: 151647.601 ops/s
Iteration  13: 151843.483 ops/s
Iteration  14: 151941.597 ops/s
Iteration  15: 151948.665 ops/s
Iteration  16: 151659.794 ops/s
Iteration  17: 151885.400 ops/s
Iteration  18: 151253.394 ops/s
Iteration  19: 151401.622 ops/s
Iteration  20: 151722.590 ops/s
Iteration  21: 152076.861 ops/s
Iteration  22: 152052.136 ops/s
Iteration  23: 151413.153 ops/s
Iteration  24: 151875.241 ops/s
Iteration  25: 151808.656 ops/s
Iteration  26: 151690.604 ops/s
Iteration  27: 151732.921 ops/s
Iteration  28: 151458.235 ops/s
Iteration  29: 151397.831 ops/s
Iteration  30: 151497.552 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_841._Benchmark.benchmark_Cluster_841":
  151770.652 ±(99.9%) 166.354 ops/s [Average]
  (min, avg, max) = (151253.394, 151770.652, 152259.351), stdev = 248.991
  CI (99.9%): [151604.297, 151937.006] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_841._Benchmark.benchmark_Cluster_841  thrpt   30  151770.652 ± 166.354  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_842._Benchmark.benchmark_Cluster_842$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_842._Benchmark.benchmark_Cluster_842

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 104289.100 ops/s
# Warmup Iteration   2: 112114.571 ops/s
# Warmup Iteration   3: 117895.891 ops/s
# Warmup Iteration   4: 145585.699 ops/s
# Warmup Iteration   5: 145481.491 ops/s
# Warmup Iteration   6: 145622.364 ops/s
# Warmup Iteration   7: 145659.561 ops/s
# Warmup Iteration   8: 144509.013 ops/s
# Warmup Iteration   9: 145261.204 ops/s
# Warmup Iteration  10: 145372.069 ops/s
# Warmup Iteration  11: 145607.694 ops/s
# Warmup Iteration  12: 145756.118 ops/s
# Warmup Iteration  13: 145995.777 ops/s
# Warmup Iteration  14: 145606.255 ops/s
# Warmup Iteration  15: 145414.592 ops/s
# Warmup Iteration  16: 143861.294 ops/s
# Warmup Iteration  17: 124359.191 ops/s
# Warmup Iteration  18: 154510.825 ops/s
# Warmup Iteration  19: 154672.333 ops/s
# Warmup Iteration  20: 154635.902 ops/s
# Warmup Iteration  21: 154720.058 ops/s
# Warmup Iteration  22: 154609.844 ops/s
# Warmup Iteration  23: 154586.405 ops/s
# Warmup Iteration  24: 154625.836 ops/s
# Warmup Iteration  25: 154699.515 ops/s
# Warmup Iteration  26: 154652.251 ops/s
# Warmup Iteration  27: 154789.697 ops/s
# Warmup Iteration  28: 154670.110 ops/s
# Warmup Iteration  29: 154261.105 ops/s
# Warmup Iteration  30: 154551.896 ops/s
Iteration   1: 154549.127 ops/s
Iteration   2: 154282.517 ops/s
Iteration   3: 154528.891 ops/s
Iteration   4: 154601.956 ops/s
Iteration   5: 154593.112 ops/s
Iteration   6: 154621.239 ops/s
Iteration   7: 154521.384 ops/s
Iteration   8: 154536.867 ops/s
Iteration   9: 154570.983 ops/s
Iteration  10: 154781.140 ops/s
Iteration  11: 154460.224 ops/s
Iteration  12: 154557.451 ops/s
Iteration  13: 154593.652 ops/s
Iteration  14: 154393.158 ops/s
Iteration  15: 154686.940 ops/s
Iteration  16: 154519.043 ops/s
Iteration  17: 154272.634 ops/s
Iteration  18: 154481.146 ops/s
Iteration  19: 154827.627 ops/s
Iteration  20: 154449.020 ops/s
Iteration  21: 154648.266 ops/s
Iteration  22: 154626.962 ops/s
Iteration  23: 153983.679 ops/s
Iteration  24: 154328.607 ops/s
Iteration  25: 154521.962 ops/s
Iteration  26: 153826.368 ops/s
Iteration  27: 153941.622 ops/s
Iteration  28: 153775.865 ops/s
Iteration  29: 154529.603 ops/s
Iteration  30: 154388.159 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_842._Benchmark.benchmark_Cluster_842":
  154446.640 ±(99.9%) 173.027 ops/s [Average]
  (min, avg, max) = (153775.865, 154446.640, 154827.627), stdev = 258.978
  CI (99.9%): [154273.613, 154619.667] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_842._Benchmark.benchmark_Cluster_842  thrpt   30  154446.640 ± 173.027  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_843._Benchmark.benchmark_Cluster_843$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_843._Benchmark.benchmark_Cluster_843

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96309.423 ops/s
# Warmup Iteration   2: 103256.298 ops/s
# Warmup Iteration   3: 103378.926 ops/s
# Warmup Iteration   4: 132113.283 ops/s
# Warmup Iteration   5: 132145.590 ops/s
# Warmup Iteration   6: 131561.025 ops/s
# Warmup Iteration   7: 131913.475 ops/s
# Warmup Iteration   8: 130586.218 ops/s
# Warmup Iteration   9: 131598.924 ops/s
# Warmup Iteration  10: 131469.009 ops/s
# Warmup Iteration  11: 131883.138 ops/s
# Warmup Iteration  12: 131825.262 ops/s
# Warmup Iteration  13: 131323.432 ops/s
# Warmup Iteration  14: 130888.496 ops/s
# Warmup Iteration  15: 131252.044 ops/s
# Warmup Iteration  16: 131686.608 ops/s
# Warmup Iteration  17: 133201.599 ops/s
# Warmup Iteration  18: 115015.932 ops/s
# Warmup Iteration  19: 138566.065 ops/s
# Warmup Iteration  20: 138394.818 ops/s
# Warmup Iteration  21: 138351.564 ops/s
# Warmup Iteration  22: 138349.710 ops/s
# Warmup Iteration  23: 138435.055 ops/s
# Warmup Iteration  24: 138379.502 ops/s
# Warmup Iteration  25: 138451.791 ops/s
# Warmup Iteration  26: 138425.784 ops/s
# Warmup Iteration  27: 138333.095 ops/s
# Warmup Iteration  28: 138341.357 ops/s
# Warmup Iteration  29: 138414.421 ops/s
# Warmup Iteration  30: 138328.603 ops/s
Iteration   1: 138269.742 ops/s
Iteration   2: 138498.301 ops/s
Iteration   3: 138463.578 ops/s
Iteration   4: 138609.109 ops/s
Iteration   5: 138427.766 ops/s
Iteration   6: 138226.901 ops/s
Iteration   7: 138529.855 ops/s
Iteration   8: 137645.938 ops/s
Iteration   9: 138424.643 ops/s
Iteration  10: 138554.216 ops/s
Iteration  11: 138517.607 ops/s
Iteration  12: 137647.998 ops/s
Iteration  13: 138327.314 ops/s
Iteration  14: 138270.997 ops/s
Iteration  15: 138333.366 ops/s
Iteration  16: 138473.746 ops/s
Iteration  17: 138150.766 ops/s
Iteration  18: 137810.453 ops/s
Iteration  19: 138501.825 ops/s
Iteration  20: 138480.320 ops/s
Iteration  21: 138558.451 ops/s
Iteration  22: 138556.784 ops/s
Iteration  23: 138340.637 ops/s
Iteration  24: 138426.980 ops/s
Iteration  25: 138513.109 ops/s
Iteration  26: 138163.067 ops/s
Iteration  27: 137734.898 ops/s
Iteration  28: 138015.603 ops/s
Iteration  29: 138110.353 ops/s
Iteration  30: 138465.815 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_843._Benchmark.benchmark_Cluster_843":
  138301.671 ±(99.9%) 186.668 ops/s [Average]
  (min, avg, max) = (137645.938, 138301.671, 138609.109), stdev = 279.396
  CI (99.9%): [138115.003, 138488.339] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_843._Benchmark.benchmark_Cluster_843  thrpt   30  138301.671 ± 186.668  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_844._Benchmark.benchmark_Cluster_844$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_844._Benchmark.benchmark_Cluster_844

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47616.261 ops/s
# Warmup Iteration   2: 106364.023 ops/s
# Warmup Iteration   3: 154301.922 ops/s
# Warmup Iteration   4: 155452.189 ops/s
# Warmup Iteration   5: 155006.538 ops/s
# Warmup Iteration   6: 123389.704 ops/s
# Warmup Iteration   7: 155144.495 ops/s
# Warmup Iteration   8: 155314.473 ops/s
# Warmup Iteration   9: 155127.122 ops/s
# Warmup Iteration  10: 154964.161 ops/s
# Warmup Iteration  11: 154924.210 ops/s
# Warmup Iteration  12: 155207.650 ops/s
# Warmup Iteration  13: 155347.747 ops/s
# Warmup Iteration  14: 155008.077 ops/s
# Warmup Iteration  15: 155322.126 ops/s
# Warmup Iteration  16: 154954.175 ops/s
# Warmup Iteration  17: 155887.552 ops/s
# Warmup Iteration  18: 155109.162 ops/s
# Warmup Iteration  19: 155453.810 ops/s
# Warmup Iteration  20: 155796.246 ops/s
# Warmup Iteration  21: 155772.232 ops/s
# Warmup Iteration  22: 155537.537 ops/s
# Warmup Iteration  23: 155495.517 ops/s
# Warmup Iteration  24: 155442.985 ops/s
# Warmup Iteration  25: 155146.768 ops/s
# Warmup Iteration  26: 155442.478 ops/s
# Warmup Iteration  27: 155390.113 ops/s
# Warmup Iteration  28: 155511.341 ops/s
# Warmup Iteration  29: 155168.990 ops/s
# Warmup Iteration  30: 155793.152 ops/s
Iteration   1: 155432.029 ops/s
Iteration   2: 155506.291 ops/s
Iteration   3: 155668.580 ops/s
Iteration   4: 155415.914 ops/s
Iteration   5: 155315.216 ops/s
Iteration   6: 155649.539 ops/s
Iteration   7: 155628.610 ops/s
Iteration   8: 155628.553 ops/s
Iteration   9: 155671.054 ops/s
Iteration  10: 155325.038 ops/s
Iteration  11: 155699.644 ops/s
Iteration  12: 155528.770 ops/s
Iteration  13: 155314.918 ops/s
Iteration  14: 155699.834 ops/s
Iteration  15: 155495.735 ops/s
Iteration  16: 155337.718 ops/s
Iteration  17: 155574.817 ops/s
Iteration  18: 155658.896 ops/s
Iteration  19: 155665.450 ops/s
Iteration  20: 155639.177 ops/s
Iteration  21: 155981.542 ops/s
Iteration  22: 155740.957 ops/s
Iteration  23: 155515.878 ops/s
Iteration  24: 155486.778 ops/s
Iteration  25: 155251.933 ops/s
Iteration  26: 155352.782 ops/s
Iteration  27: 155312.936 ops/s
Iteration  28: 155362.717 ops/s
Iteration  29: 155409.502 ops/s
Iteration  30: 155266.653 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_844._Benchmark.benchmark_Cluster_844":
  155517.915 ±(99.9%) 116.967 ops/s [Average]
  (min, avg, max) = (155251.933, 155517.915, 155981.542), stdev = 175.071
  CI (99.9%): [155400.948, 155634.882] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_844._Benchmark.benchmark_Cluster_844  thrpt   30  155517.915 ± 116.967  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_845._Benchmark.benchmark_Cluster_845$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_845._Benchmark.benchmark_Cluster_845

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43602.479 ops/s
# Warmup Iteration   2: 74523.844 ops/s
# Warmup Iteration   3: 103941.056 ops/s
# Warmup Iteration   4: 103179.998 ops/s
# Warmup Iteration   5: 103913.943 ops/s
# Warmup Iteration   6: 103735.714 ops/s
# Warmup Iteration   7: 81752.887 ops/s
# Warmup Iteration   8: 103835.872 ops/s
# Warmup Iteration   9: 103782.967 ops/s
# Warmup Iteration  10: 103779.047 ops/s
# Warmup Iteration  11: 103723.873 ops/s
# Warmup Iteration  12: 103857.997 ops/s
# Warmup Iteration  13: 103715.859 ops/s
# Warmup Iteration  14: 103846.349 ops/s
# Warmup Iteration  15: 103790.044 ops/s
# Warmup Iteration  16: 103757.891 ops/s
# Warmup Iteration  17: 103889.299 ops/s
# Warmup Iteration  18: 103801.678 ops/s
# Warmup Iteration  19: 103923.643 ops/s
# Warmup Iteration  20: 103938.851 ops/s
# Warmup Iteration  21: 103907.851 ops/s
# Warmup Iteration  22: 103816.882 ops/s
# Warmup Iteration  23: 103896.972 ops/s
# Warmup Iteration  24: 103959.723 ops/s
# Warmup Iteration  25: 103900.326 ops/s
# Warmup Iteration  26: 103951.237 ops/s
# Warmup Iteration  27: 104173.218 ops/s
# Warmup Iteration  28: 104144.612 ops/s
# Warmup Iteration  29: 104035.915 ops/s
# Warmup Iteration  30: 104096.744 ops/s
Iteration   1: 104034.221 ops/s
Iteration   2: 103787.994 ops/s
Iteration   3: 103817.606 ops/s
Iteration   4: 103875.325 ops/s
Iteration   5: 104005.377 ops/s
Iteration   6: 104057.053 ops/s
Iteration   7: 104239.089 ops/s
Iteration   8: 103844.752 ops/s
Iteration   9: 104293.928 ops/s
Iteration  10: 103997.478 ops/s
Iteration  11: 103936.767 ops/s
Iteration  12: 103839.229 ops/s
Iteration  13: 104046.640 ops/s
Iteration  14: 103559.047 ops/s
Iteration  15: 103962.082 ops/s
Iteration  16: 103812.215 ops/s
Iteration  17: 104149.563 ops/s
Iteration  18: 103760.247 ops/s
Iteration  19: 103994.236 ops/s
Iteration  20: 103925.672 ops/s
Iteration  21: 104040.109 ops/s
Iteration  22: 103898.049 ops/s
Iteration  23: 104002.660 ops/s
Iteration  24: 103596.365 ops/s
Iteration  25: 104025.340 ops/s
Iteration  26: 103819.914 ops/s
Iteration  27: 104104.268 ops/s
Iteration  28: 103861.266 ops/s
Iteration  29: 103883.511 ops/s
Iteration  30: 103843.337 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_845._Benchmark.benchmark_Cluster_845":
  103933.778 ±(99.9%) 108.095 ops/s [Average]
  (min, avg, max) = (103559.047, 103933.778, 104293.928), stdev = 161.792
  CI (99.9%): [103825.682, 104041.873] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_845._Benchmark.benchmark_Cluster_845  thrpt   30  103933.778 ± 108.095  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_846._Benchmark.benchmark_Cluster_846$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_846._Benchmark.benchmark_Cluster_846

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 105416.506 ops/s
# Warmup Iteration   2: 119682.919 ops/s
# Warmup Iteration   3: 127228.987 ops/s
# Warmup Iteration   4: 161728.786 ops/s
# Warmup Iteration   5: 161675.126 ops/s
# Warmup Iteration   6: 162383.341 ops/s
# Warmup Iteration   7: 161193.384 ops/s
# Warmup Iteration   8: 162466.810 ops/s
# Warmup Iteration   9: 162227.263 ops/s
# Warmup Iteration  10: 161546.184 ops/s
# Warmup Iteration  11: 162050.187 ops/s
# Warmup Iteration  12: 162300.900 ops/s
# Warmup Iteration  13: 162099.205 ops/s
# Warmup Iteration  14: 162107.903 ops/s
# Warmup Iteration  15: 156665.500 ops/s
# Warmup Iteration  16: 129238.448 ops/s
# Warmup Iteration  17: 172010.695 ops/s
# Warmup Iteration  18: 172079.777 ops/s
# Warmup Iteration  19: 171365.794 ops/s
# Warmup Iteration  20: 171369.768 ops/s
# Warmup Iteration  21: 171922.586 ops/s
# Warmup Iteration  22: 171641.605 ops/s
# Warmup Iteration  23: 172129.942 ops/s
# Warmup Iteration  24: 171154.274 ops/s
# Warmup Iteration  25: 171923.573 ops/s
# Warmup Iteration  26: 171755.849 ops/s
# Warmup Iteration  27: 171637.567 ops/s
# Warmup Iteration  28: 171917.351 ops/s
# Warmup Iteration  29: 171547.539 ops/s
# Warmup Iteration  30: 171886.046 ops/s
Iteration   1: 171992.065 ops/s
Iteration   2: 171922.318 ops/s
Iteration   3: 171941.766 ops/s
Iteration   4: 171405.777 ops/s
Iteration   5: 171555.573 ops/s
Iteration   6: 171326.242 ops/s
Iteration   7: 171431.853 ops/s
Iteration   8: 171686.884 ops/s
Iteration   9: 171780.528 ops/s
Iteration  10: 171839.799 ops/s
Iteration  11: 171742.106 ops/s
Iteration  12: 171537.971 ops/s
Iteration  13: 171136.784 ops/s
Iteration  14: 171914.290 ops/s
Iteration  15: 171987.310 ops/s
Iteration  16: 171884.894 ops/s
Iteration  17: 172296.561 ops/s
Iteration  18: 171975.874 ops/s
Iteration  19: 172118.589 ops/s
Iteration  20: 172324.703 ops/s
Iteration  21: 172082.018 ops/s
Iteration  22: 172097.783 ops/s
Iteration  23: 171372.749 ops/s
Iteration  24: 171768.193 ops/s
Iteration  25: 172025.789 ops/s
Iteration  26: 172028.768 ops/s
Iteration  27: 171983.439 ops/s
Iteration  28: 171989.237 ops/s
Iteration  29: 171904.075 ops/s
Iteration  30: 172060.919 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_846._Benchmark.benchmark_Cluster_846":
  171837.162 ±(99.9%) 194.011 ops/s [Average]
  (min, avg, max) = (171136.784, 171837.162, 172324.703), stdev = 290.386
  CI (99.9%): [171643.151, 172031.173] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_846._Benchmark.benchmark_Cluster_846  thrpt   30  171837.162 ± 194.011  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_847._Benchmark.benchmark_Cluster_847$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_847._Benchmark.benchmark_Cluster_847

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 104689.348 ops/s
# Warmup Iteration   2: 137247.776 ops/s
# Warmup Iteration   3: 215314.584 ops/s
# Warmup Iteration   4: 214776.791 ops/s
# Warmup Iteration   5: 213228.164 ops/s
# Warmup Iteration   6: 213826.823 ops/s
# Warmup Iteration   7: 214973.690 ops/s
# Warmup Iteration   8: 214881.658 ops/s
# Warmup Iteration   9: 183812.397 ops/s
# Warmup Iteration  10: 200821.853 ops/s
# Warmup Iteration  11: 214375.984 ops/s
# Warmup Iteration  12: 215079.151 ops/s
# Warmup Iteration  13: 215109.450 ops/s
# Warmup Iteration  14: 214733.313 ops/s
# Warmup Iteration  15: 215068.263 ops/s
# Warmup Iteration  16: 215098.022 ops/s
# Warmup Iteration  17: 221738.938 ops/s
# Warmup Iteration  18: 221106.177 ops/s
# Warmup Iteration  19: 221014.837 ops/s
# Warmup Iteration  20: 221300.595 ops/s
# Warmup Iteration  21: 222020.802 ops/s
# Warmup Iteration  22: 222071.380 ops/s
# Warmup Iteration  23: 221664.269 ops/s
# Warmup Iteration  24: 221492.323 ops/s
# Warmup Iteration  25: 222521.730 ops/s
# Warmup Iteration  26: 221126.589 ops/s
# Warmup Iteration  27: 221113.235 ops/s
# Warmup Iteration  28: 221240.460 ops/s
# Warmup Iteration  29: 221114.031 ops/s
# Warmup Iteration  30: 220860.498 ops/s
Iteration   1: 221561.475 ops/s
Iteration   2: 222074.594 ops/s
Iteration   3: 222164.000 ops/s
Iteration   4: 222469.904 ops/s
Iteration   5: 220693.573 ops/s
Iteration   6: 222292.413 ops/s
Iteration   7: 221890.770 ops/s
Iteration   8: 220755.300 ops/s
Iteration   9: 221105.223 ops/s
Iteration  10: 221932.219 ops/s
Iteration  11: 221130.015 ops/s
Iteration  12: 221206.022 ops/s
Iteration  13: 221010.968 ops/s
Iteration  14: 222103.476 ops/s
Iteration  15: 221557.159 ops/s
Iteration  16: 221046.018 ops/s
Iteration  17: 220815.155 ops/s
Iteration  18: 221578.081 ops/s
Iteration  19: 221432.953 ops/s
Iteration  20: 221137.442 ops/s
Iteration  21: 221589.929 ops/s
Iteration  22: 221656.143 ops/s
Iteration  23: 221439.432 ops/s
Iteration  24: 221998.270 ops/s
Iteration  25: 222400.133 ops/s
Iteration  26: 222316.107 ops/s
Iteration  27: 222343.504 ops/s
Iteration  28: 222071.176 ops/s
Iteration  29: 221800.260 ops/s
Iteration  30: 221929.777 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_847._Benchmark.benchmark_Cluster_847":
  221650.050 ±(99.9%) 352.849 ops/s [Average]
  (min, avg, max) = (220693.573, 221650.050, 222469.904), stdev = 528.127
  CI (99.9%): [221297.201, 222002.898] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_847._Benchmark.benchmark_Cluster_847  thrpt   30  221650.050 ± 352.849  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_848._Benchmark.benchmark_Cluster_848$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_848._Benchmark.benchmark_Cluster_848

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78906.962 ops/s
# Warmup Iteration   2: 108610.869 ops/s
# Warmup Iteration   3: 153183.327 ops/s
# Warmup Iteration   4: 151437.245 ops/s
# Warmup Iteration   5: 153895.276 ops/s
# Warmup Iteration   6: 153763.179 ops/s
# Warmup Iteration   7: 153817.851 ops/s
# Warmup Iteration   8: 120675.303 ops/s
# Warmup Iteration   9: 153435.107 ops/s
# Warmup Iteration  10: 153593.382 ops/s
# Warmup Iteration  11: 153600.653 ops/s
# Warmup Iteration  12: 153532.292 ops/s
# Warmup Iteration  13: 153815.332 ops/s
# Warmup Iteration  14: 153571.139 ops/s
# Warmup Iteration  15: 153906.860 ops/s
# Warmup Iteration  16: 153201.868 ops/s
# Warmup Iteration  17: 159289.896 ops/s
# Warmup Iteration  18: 159848.198 ops/s
# Warmup Iteration  19: 159772.854 ops/s
# Warmup Iteration  20: 159362.966 ops/s
# Warmup Iteration  21: 159521.616 ops/s
# Warmup Iteration  22: 159438.251 ops/s
# Warmup Iteration  23: 159519.246 ops/s
# Warmup Iteration  24: 159511.608 ops/s
# Warmup Iteration  25: 159290.652 ops/s
# Warmup Iteration  26: 159539.265 ops/s
# Warmup Iteration  27: 159754.384 ops/s
# Warmup Iteration  28: 159476.148 ops/s
# Warmup Iteration  29: 159298.614 ops/s
# Warmup Iteration  30: 159418.292 ops/s
Iteration   1: 160110.789 ops/s
Iteration   2: 159110.157 ops/s
Iteration   3: 159899.506 ops/s
Iteration   4: 160286.154 ops/s
Iteration   5: 160178.276 ops/s
Iteration   6: 160187.809 ops/s
Iteration   7: 159488.391 ops/s
Iteration   8: 159273.499 ops/s
Iteration   9: 159267.407 ops/s
Iteration  10: 159781.916 ops/s
Iteration  11: 159805.713 ops/s
Iteration  12: 159624.177 ops/s
Iteration  13: 159489.234 ops/s
Iteration  14: 159961.297 ops/s
Iteration  15: 160199.647 ops/s
Iteration  16: 159512.505 ops/s
Iteration  17: 159715.804 ops/s
Iteration  18: 159335.182 ops/s
Iteration  19: 159568.348 ops/s
Iteration  20: 159182.663 ops/s
Iteration  21: 159926.830 ops/s
Iteration  22: 160090.700 ops/s
Iteration  23: 160209.855 ops/s
Iteration  24: 160112.703 ops/s
Iteration  25: 159971.688 ops/s
Iteration  26: 160057.186 ops/s
Iteration  27: 159935.465 ops/s
Iteration  28: 159633.023 ops/s
Iteration  29: 159806.894 ops/s
Iteration  30: 159619.271 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_848._Benchmark.benchmark_Cluster_848":
  159778.070 ±(99.9%) 227.104 ops/s [Average]
  (min, avg, max) = (159110.157, 159778.070, 160286.154), stdev = 339.919
  CI (99.9%): [159550.965, 160005.174] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_848._Benchmark.benchmark_Cluster_848  thrpt   30  159778.070 ± 227.104  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_849._Benchmark.benchmark_Cluster_849$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_849._Benchmark.benchmark_Cluster_849

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55222.539 ops/s
# Warmup Iteration   2: 114221.519 ops/s
# Warmup Iteration   3: 143193.276 ops/s
# Warmup Iteration   4: 143662.909 ops/s
# Warmup Iteration   5: 131916.143 ops/s
# Warmup Iteration   6: 125083.830 ops/s
# Warmup Iteration   7: 144433.534 ops/s
# Warmup Iteration   8: 144525.905 ops/s
# Warmup Iteration   9: 144315.402 ops/s
# Warmup Iteration  10: 144257.085 ops/s
# Warmup Iteration  11: 144280.259 ops/s
# Warmup Iteration  12: 144386.229 ops/s
# Warmup Iteration  13: 144193.419 ops/s
# Warmup Iteration  14: 144507.829 ops/s
# Warmup Iteration  15: 144443.166 ops/s
# Warmup Iteration  16: 144363.795 ops/s
# Warmup Iteration  17: 144247.424 ops/s
# Warmup Iteration  18: 144142.163 ops/s
# Warmup Iteration  19: 144161.886 ops/s
# Warmup Iteration  20: 144120.561 ops/s
# Warmup Iteration  21: 144221.355 ops/s
# Warmup Iteration  22: 144272.451 ops/s
# Warmup Iteration  23: 144421.046 ops/s
# Warmup Iteration  24: 144332.934 ops/s
# Warmup Iteration  25: 144427.327 ops/s
# Warmup Iteration  26: 144450.826 ops/s
# Warmup Iteration  27: 144402.929 ops/s
# Warmup Iteration  28: 144148.978 ops/s
# Warmup Iteration  29: 144390.347 ops/s
# Warmup Iteration  30: 144113.630 ops/s
Iteration   1: 144405.053 ops/s
Iteration   2: 144227.830 ops/s
Iteration   3: 144402.063 ops/s
Iteration   4: 144426.054 ops/s
Iteration   5: 144112.856 ops/s
Iteration   6: 144388.612 ops/s
Iteration   7: 144056.877 ops/s
Iteration   8: 144392.359 ops/s
Iteration   9: 144383.326 ops/s
Iteration  10: 144536.250 ops/s
Iteration  11: 144511.103 ops/s
Iteration  12: 143923.113 ops/s
Iteration  13: 144026.408 ops/s
Iteration  14: 143305.371 ops/s
Iteration  15: 144282.074 ops/s
Iteration  16: 144271.822 ops/s
Iteration  17: 144360.914 ops/s
Iteration  18: 144148.920 ops/s
Iteration  19: 143745.616 ops/s
Iteration  20: 144177.303 ops/s
Iteration  21: 144448.145 ops/s
Iteration  22: 144225.722 ops/s
Iteration  23: 144623.403 ops/s
Iteration  24: 144539.601 ops/s
Iteration  25: 144565.095 ops/s
Iteration  26: 144631.765 ops/s
Iteration  27: 144630.634 ops/s
Iteration  28: 144550.920 ops/s
Iteration  29: 144747.655 ops/s
Iteration  30: 144588.281 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_849._Benchmark.benchmark_Cluster_849":
  144321.171 ±(99.9%) 201.153 ops/s [Average]
  (min, avg, max) = (143305.371, 144321.171, 144747.655), stdev = 301.076
  CI (99.9%): [144120.019, 144522.324] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_849._Benchmark.benchmark_Cluster_849  thrpt   30  144321.171 ± 201.153  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_85._Benchmark.benchmark_Cluster_85$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_85._Benchmark.benchmark_Cluster_85

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72332.224 ops/s
# Warmup Iteration   2: 88854.671 ops/s
# Warmup Iteration   3: 137000.004 ops/s
# Warmup Iteration   4: 138890.891 ops/s
# Warmup Iteration   5: 138601.917 ops/s
# Warmup Iteration   6: 139413.746 ops/s
# Warmup Iteration   7: 139146.624 ops/s
# Warmup Iteration   8: 138834.871 ops/s
# Warmup Iteration   9: 139572.309 ops/s
# Warmup Iteration  10: 109889.714 ops/s
# Warmup Iteration  11: 140022.797 ops/s
# Warmup Iteration  12: 140175.643 ops/s
# Warmup Iteration  13: 139678.682 ops/s
# Warmup Iteration  14: 139588.431 ops/s
# Warmup Iteration  15: 139573.956 ops/s
# Warmup Iteration  16: 139684.423 ops/s
# Warmup Iteration  17: 141443.179 ops/s
# Warmup Iteration  18: 141921.875 ops/s
# Warmup Iteration  19: 142161.806 ops/s
# Warmup Iteration  20: 141922.010 ops/s
# Warmup Iteration  21: 142103.749 ops/s
# Warmup Iteration  22: 142313.718 ops/s
# Warmup Iteration  23: 141838.580 ops/s
# Warmup Iteration  24: 142424.459 ops/s
# Warmup Iteration  25: 142093.638 ops/s
# Warmup Iteration  26: 142209.492 ops/s
# Warmup Iteration  27: 142238.956 ops/s
# Warmup Iteration  28: 142149.305 ops/s
# Warmup Iteration  29: 141906.031 ops/s
# Warmup Iteration  30: 141375.083 ops/s
Iteration   1: 141444.975 ops/s
Iteration   2: 142111.812 ops/s
Iteration   3: 142054.008 ops/s
Iteration   4: 141850.838 ops/s
Iteration   5: 141203.652 ops/s
Iteration   6: 141853.538 ops/s
Iteration   7: 141792.993 ops/s
Iteration   8: 142073.642 ops/s
Iteration   9: 142282.509 ops/s
Iteration  10: 142309.753 ops/s
Iteration  11: 142386.062 ops/s
Iteration  12: 141828.884 ops/s
Iteration  13: 141967.740 ops/s
Iteration  14: 141507.007 ops/s
Iteration  15: 142218.071 ops/s
Iteration  16: 141178.019 ops/s
Iteration  17: 141850.302 ops/s
Iteration  18: 142202.725 ops/s
Iteration  19: 142223.623 ops/s
Iteration  20: 141581.777 ops/s
Iteration  21: 141782.138 ops/s
Iteration  22: 141876.661 ops/s
Iteration  23: 141414.922 ops/s
Iteration  24: 141847.210 ops/s
Iteration  25: 141996.152 ops/s
Iteration  26: 141860.266 ops/s
Iteration  27: 141668.302 ops/s
Iteration  28: 141850.775 ops/s
Iteration  29: 142156.941 ops/s
Iteration  30: 141885.320 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_85._Benchmark.benchmark_Cluster_85":
  141875.354 ±(99.9%) 208.018 ops/s [Average]
  (min, avg, max) = (141178.019, 141875.354, 142386.062), stdev = 311.352
  CI (99.9%): [141667.335, 142083.372] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_85._Benchmark.benchmark_Cluster_85  thrpt   30  141875.354 ± 208.018  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_850._Benchmark.benchmark_Cluster_850$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_850._Benchmark.benchmark_Cluster_850

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52352.430 ops/s
# Warmup Iteration   2: 111124.278 ops/s
# Warmup Iteration   3: 137295.189 ops/s
# Warmup Iteration   4: 138354.919 ops/s
# Warmup Iteration   5: 119248.227 ops/s
# Warmup Iteration   6: 129665.018 ops/s
# Warmup Iteration   7: 139125.686 ops/s
# Warmup Iteration   8: 138435.038 ops/s
# Warmup Iteration   9: 138919.738 ops/s
# Warmup Iteration  10: 138801.706 ops/s
# Warmup Iteration  11: 138416.763 ops/s
# Warmup Iteration  12: 138842.128 ops/s
# Warmup Iteration  13: 138194.831 ops/s
# Warmup Iteration  14: 137811.147 ops/s
# Warmup Iteration  15: 138783.200 ops/s
# Warmup Iteration  16: 138237.916 ops/s
# Warmup Iteration  17: 138434.613 ops/s
# Warmup Iteration  18: 138739.435 ops/s
# Warmup Iteration  19: 138455.874 ops/s
# Warmup Iteration  20: 138437.182 ops/s
# Warmup Iteration  21: 138821.412 ops/s
# Warmup Iteration  22: 138643.638 ops/s
# Warmup Iteration  23: 138929.928 ops/s
# Warmup Iteration  24: 138336.744 ops/s
# Warmup Iteration  25: 138666.880 ops/s
# Warmup Iteration  26: 137707.149 ops/s
# Warmup Iteration  27: 138799.112 ops/s
# Warmup Iteration  28: 138892.095 ops/s
# Warmup Iteration  29: 138708.461 ops/s
# Warmup Iteration  30: 138531.403 ops/s
Iteration   1: 138855.998 ops/s
Iteration   2: 138375.021 ops/s
Iteration   3: 138535.354 ops/s
Iteration   4: 138739.547 ops/s
Iteration   5: 138165.466 ops/s
Iteration   6: 138905.243 ops/s
Iteration   7: 138292.601 ops/s
Iteration   8: 138693.071 ops/s
Iteration   9: 138748.243 ops/s
Iteration  10: 138656.794 ops/s
Iteration  11: 138523.901 ops/s
Iteration  12: 138817.796 ops/s
Iteration  13: 139011.238 ops/s
Iteration  14: 138453.270 ops/s
Iteration  15: 138299.498 ops/s
Iteration  16: 138677.501 ops/s
Iteration  17: 138552.473 ops/s
Iteration  18: 138644.746 ops/s
Iteration  19: 138716.743 ops/s
Iteration  20: 138818.663 ops/s
Iteration  21: 138476.312 ops/s
Iteration  22: 138808.022 ops/s
Iteration  23: 138351.089 ops/s
Iteration  24: 138788.829 ops/s
Iteration  25: 138683.870 ops/s
Iteration  26: 138520.344 ops/s
Iteration  27: 138425.420 ops/s
Iteration  28: 138109.033 ops/s
Iteration  29: 138866.261 ops/s
Iteration  30: 139174.720 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_850._Benchmark.benchmark_Cluster_850":
  138622.902 ±(99.9%) 165.644 ops/s [Average]
  (min, avg, max) = (138109.033, 138622.902, 139174.720), stdev = 247.929
  CI (99.9%): [138457.258, 138788.547] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_850._Benchmark.benchmark_Cluster_850  thrpt   30  138622.902 ± 165.644  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_851._Benchmark.benchmark_Cluster_851$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_851._Benchmark.benchmark_Cluster_851

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96050.525 ops/s
# Warmup Iteration   2: 101030.576 ops/s
# Warmup Iteration   3: 112776.119 ops/s
# Warmup Iteration   4: 133424.016 ops/s
# Warmup Iteration   5: 133669.417 ops/s
# Warmup Iteration   6: 133968.530 ops/s
# Warmup Iteration   7: 133790.674 ops/s
# Warmup Iteration   8: 133527.186 ops/s
# Warmup Iteration   9: 133376.535 ops/s
# Warmup Iteration  10: 133648.672 ops/s
# Warmup Iteration  11: 133056.442 ops/s
# Warmup Iteration  12: 133349.776 ops/s
# Warmup Iteration  13: 133861.191 ops/s
# Warmup Iteration  14: 133955.678 ops/s
# Warmup Iteration  15: 117642.018 ops/s
# Warmup Iteration  16: 123890.467 ops/s
# Warmup Iteration  17: 142375.673 ops/s
# Warmup Iteration  18: 142097.260 ops/s
# Warmup Iteration  19: 142137.940 ops/s
# Warmup Iteration  20: 142311.165 ops/s
# Warmup Iteration  21: 141669.276 ops/s
# Warmup Iteration  22: 142284.531 ops/s
# Warmup Iteration  23: 141699.744 ops/s
# Warmup Iteration  24: 142258.879 ops/s
# Warmup Iteration  25: 142409.187 ops/s
# Warmup Iteration  26: 142107.816 ops/s
# Warmup Iteration  27: 142308.694 ops/s
# Warmup Iteration  28: 142153.190 ops/s
# Warmup Iteration  29: 142338.176 ops/s
# Warmup Iteration  30: 141691.525 ops/s
Iteration   1: 141422.170 ops/s
Iteration   2: 141965.359 ops/s
Iteration   3: 142082.328 ops/s
Iteration   4: 142183.177 ops/s
Iteration   5: 141738.851 ops/s
Iteration   6: 141456.247 ops/s
Iteration   7: 141537.262 ops/s
Iteration   8: 141146.505 ops/s
Iteration   9: 141558.768 ops/s
Iteration  10: 141538.810 ops/s
Iteration  11: 141803.286 ops/s
Iteration  12: 141636.786 ops/s
Iteration  13: 142445.573 ops/s
Iteration  14: 142225.632 ops/s
Iteration  15: 142142.937 ops/s
Iteration  16: 141834.139 ops/s
Iteration  17: 142078.930 ops/s
Iteration  18: 142290.103 ops/s
Iteration  19: 142208.363 ops/s
Iteration  20: 142476.620 ops/s
Iteration  21: 142210.991 ops/s
Iteration  22: 142331.508 ops/s
Iteration  23: 141926.194 ops/s
Iteration  24: 142116.406 ops/s
Iteration  25: 142200.318 ops/s
Iteration  26: 142216.787 ops/s
Iteration  27: 142434.002 ops/s
Iteration  28: 142391.873 ops/s
Iteration  29: 142495.207 ops/s
Iteration  30: 142153.164 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_851._Benchmark.benchmark_Cluster_851":
  142008.277 ±(99.9%) 241.444 ops/s [Average]
  (min, avg, max) = (141146.505, 142008.277, 142495.207), stdev = 361.382
  CI (99.9%): [141766.832, 142249.721] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_851._Benchmark.benchmark_Cluster_851  thrpt   30  142008.277 ± 241.444  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_852._Benchmark.benchmark_Cluster_852$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_852._Benchmark.benchmark_Cluster_852

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93078.193 ops/s
# Warmup Iteration   2: 99582.880 ops/s
# Warmup Iteration   3: 112933.763 ops/s
# Warmup Iteration   4: 133812.896 ops/s
# Warmup Iteration   5: 133600.061 ops/s
# Warmup Iteration   6: 133408.443 ops/s
# Warmup Iteration   7: 132517.737 ops/s
# Warmup Iteration   8: 132909.480 ops/s
# Warmup Iteration   9: 132735.313 ops/s
# Warmup Iteration  10: 133488.741 ops/s
# Warmup Iteration  11: 133576.875 ops/s
# Warmup Iteration  12: 133125.117 ops/s
# Warmup Iteration  13: 132824.862 ops/s
# Warmup Iteration  14: 133152.825 ops/s
# Warmup Iteration  15: 106306.901 ops/s
# Warmup Iteration  16: 132149.704 ops/s
# Warmup Iteration  17: 139619.321 ops/s
# Warmup Iteration  18: 140073.134 ops/s
# Warmup Iteration  19: 140368.258 ops/s
# Warmup Iteration  20: 140315.538 ops/s
# Warmup Iteration  21: 140571.154 ops/s
# Warmup Iteration  22: 140579.091 ops/s
# Warmup Iteration  23: 140036.019 ops/s
# Warmup Iteration  24: 140430.221 ops/s
# Warmup Iteration  25: 140503.192 ops/s
# Warmup Iteration  26: 140313.897 ops/s
# Warmup Iteration  27: 140416.208 ops/s
# Warmup Iteration  28: 140093.776 ops/s
# Warmup Iteration  29: 140470.649 ops/s
# Warmup Iteration  30: 140473.824 ops/s
Iteration   1: 140464.172 ops/s
Iteration   2: 140570.142 ops/s
Iteration   3: 140407.363 ops/s
Iteration   4: 140681.237 ops/s
Iteration   5: 139566.158 ops/s
Iteration   6: 140444.265 ops/s
Iteration   7: 140602.589 ops/s
Iteration   8: 140253.749 ops/s
Iteration   9: 140540.466 ops/s
Iteration  10: 140478.174 ops/s
Iteration  11: 140665.054 ops/s
Iteration  12: 140467.989 ops/s
Iteration  13: 140124.622 ops/s
Iteration  14: 139958.093 ops/s
Iteration  15: 139659.198 ops/s
Iteration  16: 140487.698 ops/s
Iteration  17: 140517.390 ops/s
Iteration  18: 140504.120 ops/s
Iteration  19: 140506.220 ops/s
Iteration  20: 140342.310 ops/s
Iteration  21: 140129.180 ops/s
Iteration  22: 140371.607 ops/s
Iteration  23: 140469.498 ops/s
Iteration  24: 140764.708 ops/s
Iteration  25: 140579.370 ops/s
Iteration  26: 140676.951 ops/s
Iteration  27: 140629.654 ops/s
Iteration  28: 140956.190 ops/s
Iteration  29: 140391.933 ops/s
Iteration  30: 140188.170 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_852._Benchmark.benchmark_Cluster_852":
  140413.276 ±(99.9%) 198.584 ops/s [Average]
  (min, avg, max) = (139566.158, 140413.276, 140956.190), stdev = 297.231
  CI (99.9%): [140214.692, 140611.860] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_852._Benchmark.benchmark_Cluster_852  thrpt   30  140413.276 ± 198.584  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_853._Benchmark.benchmark_Cluster_853$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_853._Benchmark.benchmark_Cluster_853

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47805.474 ops/s
# Warmup Iteration   2: 73053.144 ops/s
# Warmup Iteration   3: 118099.583 ops/s
# Warmup Iteration   4: 117629.273 ops/s
# Warmup Iteration   5: 118330.273 ops/s
# Warmup Iteration   6: 118199.867 ops/s
# Warmup Iteration   7: 117842.778 ops/s
# Warmup Iteration   8: 113249.498 ops/s
# Warmup Iteration   9: 99729.156 ops/s
# Warmup Iteration  10: 118289.697 ops/s
# Warmup Iteration  11: 118213.378 ops/s
# Warmup Iteration  12: 117998.611 ops/s
# Warmup Iteration  13: 118179.097 ops/s
# Warmup Iteration  14: 118265.705 ops/s
# Warmup Iteration  15: 118257.067 ops/s
# Warmup Iteration  16: 118276.097 ops/s
# Warmup Iteration  17: 118556.293 ops/s
# Warmup Iteration  18: 118633.448 ops/s
# Warmup Iteration  19: 118652.884 ops/s
# Warmup Iteration  20: 118818.765 ops/s
# Warmup Iteration  21: 118274.900 ops/s
# Warmup Iteration  22: 118303.993 ops/s
# Warmup Iteration  23: 118633.920 ops/s
# Warmup Iteration  24: 118536.759 ops/s
# Warmup Iteration  25: 118624.673 ops/s
# Warmup Iteration  26: 118417.548 ops/s
# Warmup Iteration  27: 118570.341 ops/s
# Warmup Iteration  28: 118463.289 ops/s
# Warmup Iteration  29: 118465.876 ops/s
# Warmup Iteration  30: 118248.572 ops/s
Iteration   1: 118591.196 ops/s
Iteration   2: 118533.646 ops/s
Iteration   3: 118544.647 ops/s
Iteration   4: 118604.471 ops/s
Iteration   5: 118362.054 ops/s
Iteration   6: 118530.969 ops/s
Iteration   7: 118548.927 ops/s
Iteration   8: 118507.307 ops/s
Iteration   9: 118713.639 ops/s
Iteration  10: 118575.299 ops/s
Iteration  11: 118186.113 ops/s
Iteration  12: 118499.366 ops/s
Iteration  13: 118416.920 ops/s
Iteration  14: 118634.753 ops/s
Iteration  15: 118817.879 ops/s
Iteration  16: 118427.784 ops/s
Iteration  17: 118821.881 ops/s
Iteration  18: 118819.154 ops/s
Iteration  19: 118267.093 ops/s
Iteration  20: 118494.687 ops/s
Iteration  21: 118139.400 ops/s
Iteration  22: 118465.540 ops/s
Iteration  23: 118430.086 ops/s
Iteration  24: 118346.358 ops/s
Iteration  25: 118295.757 ops/s
Iteration  26: 118590.237 ops/s
Iteration  27: 118217.832 ops/s
Iteration  28: 118372.468 ops/s
Iteration  29: 118244.736 ops/s
Iteration  30: 118346.528 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_853._Benchmark.benchmark_Cluster_853":
  118478.224 ±(99.9%) 121.915 ops/s [Average]
  (min, avg, max) = (118139.400, 118478.224, 118821.881), stdev = 182.477
  CI (99.9%): [118356.309, 118600.139] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_853._Benchmark.benchmark_Cluster_853  thrpt   30  118478.224 ± 121.915  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_854._Benchmark.benchmark_Cluster_854$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_854._Benchmark.benchmark_Cluster_854

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68375.197 ops/s
# Warmup Iteration   2: 111133.837 ops/s
# Warmup Iteration   3: 170517.811 ops/s
# Warmup Iteration   4: 169152.413 ops/s
# Warmup Iteration   5: 170352.200 ops/s
# Warmup Iteration   6: 170733.495 ops/s
# Warmup Iteration   7: 169408.966 ops/s
# Warmup Iteration   8: 136716.238 ops/s
# Warmup Iteration   9: 170351.465 ops/s
# Warmup Iteration  10: 170925.575 ops/s
# Warmup Iteration  11: 170384.311 ops/s
# Warmup Iteration  12: 170309.748 ops/s
# Warmup Iteration  13: 170424.504 ops/s
# Warmup Iteration  14: 170448.505 ops/s
# Warmup Iteration  15: 171165.476 ops/s
# Warmup Iteration  16: 170804.950 ops/s
# Warmup Iteration  17: 172369.889 ops/s
# Warmup Iteration  18: 171914.225 ops/s
# Warmup Iteration  19: 172155.648 ops/s
# Warmup Iteration  20: 172754.477 ops/s
# Warmup Iteration  21: 172286.066 ops/s
# Warmup Iteration  22: 172863.123 ops/s
# Warmup Iteration  23: 172980.429 ops/s
# Warmup Iteration  24: 171991.670 ops/s
# Warmup Iteration  25: 172143.013 ops/s
# Warmup Iteration  26: 172012.970 ops/s
# Warmup Iteration  27: 171887.186 ops/s
# Warmup Iteration  28: 172135.052 ops/s
# Warmup Iteration  29: 172219.555 ops/s
# Warmup Iteration  30: 172560.038 ops/s
Iteration   1: 171837.426 ops/s
Iteration   2: 172614.700 ops/s
Iteration   3: 172192.417 ops/s
Iteration   4: 172435.627 ops/s
Iteration   5: 172338.078 ops/s
Iteration   6: 172084.903 ops/s
Iteration   7: 172700.814 ops/s
Iteration   8: 172048.273 ops/s
Iteration   9: 172123.703 ops/s
Iteration  10: 171926.354 ops/s
Iteration  11: 171733.228 ops/s
Iteration  12: 171974.033 ops/s
Iteration  13: 171778.543 ops/s
Iteration  14: 171734.103 ops/s
Iteration  15: 172894.275 ops/s
Iteration  16: 172385.324 ops/s
Iteration  17: 173241.418 ops/s
Iteration  18: 173106.464 ops/s
Iteration  19: 173474.071 ops/s
Iteration  20: 172822.256 ops/s
Iteration  21: 172155.307 ops/s
Iteration  22: 171947.523 ops/s
Iteration  23: 171919.053 ops/s
Iteration  24: 172993.878 ops/s
Iteration  25: 173100.523 ops/s
Iteration  26: 173430.400 ops/s
Iteration  27: 173376.531 ops/s
Iteration  28: 172408.566 ops/s
Iteration  29: 173406.539 ops/s
Iteration  30: 173212.574 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_854._Benchmark.benchmark_Cluster_854":
  172513.230 ±(99.9%) 390.514 ops/s [Average]
  (min, avg, max) = (171733.228, 172513.230, 173474.071), stdev = 584.503
  CI (99.9%): [172122.716, 172903.744] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_854._Benchmark.benchmark_Cluster_854  thrpt   30  172513.230 ± 390.514  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_855._Benchmark.benchmark_Cluster_855$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_855._Benchmark.benchmark_Cluster_855

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 143143.266 ops/s
# Warmup Iteration   2: 155270.899 ops/s
# Warmup Iteration   3: 168900.431 ops/s
# Warmup Iteration   4: 204439.459 ops/s
# Warmup Iteration   5: 203215.685 ops/s
# Warmup Iteration   6: 203953.668 ops/s
# Warmup Iteration   7: 202739.149 ops/s
# Warmup Iteration   8: 204252.824 ops/s
# Warmup Iteration   9: 203199.332 ops/s
# Warmup Iteration  10: 203602.393 ops/s
# Warmup Iteration  11: 203933.278 ops/s
# Warmup Iteration  12: 203724.624 ops/s
# Warmup Iteration  13: 203153.286 ops/s
# Warmup Iteration  14: 203698.153 ops/s
# Warmup Iteration  15: 199908.058 ops/s
# Warmup Iteration  16: 165205.539 ops/s
# Warmup Iteration  17: 212429.129 ops/s
# Warmup Iteration  18: 212459.908 ops/s
# Warmup Iteration  19: 210802.382 ops/s
# Warmup Iteration  20: 211687.612 ops/s
# Warmup Iteration  21: 212354.313 ops/s
# Warmup Iteration  22: 212219.386 ops/s
# Warmup Iteration  23: 212364.690 ops/s
# Warmup Iteration  24: 211897.586 ops/s
# Warmup Iteration  25: 212062.802 ops/s
# Warmup Iteration  26: 212610.930 ops/s
# Warmup Iteration  27: 212156.882 ops/s
# Warmup Iteration  28: 212269.875 ops/s
# Warmup Iteration  29: 212205.400 ops/s
# Warmup Iteration  30: 212253.695 ops/s
Iteration   1: 212273.290 ops/s
Iteration   2: 211280.022 ops/s
Iteration   3: 211935.377 ops/s
Iteration   4: 212054.804 ops/s
Iteration   5: 212068.497 ops/s
Iteration   6: 212565.002 ops/s
Iteration   7: 210612.880 ops/s
Iteration   8: 210396.178 ops/s
Iteration   9: 210336.210 ops/s
Iteration  10: 210743.900 ops/s
Iteration  11: 212523.296 ops/s
Iteration  12: 212212.671 ops/s
Iteration  13: 212606.412 ops/s
Iteration  14: 212067.965 ops/s
Iteration  15: 211646.384 ops/s
Iteration  16: 212064.415 ops/s
Iteration  17: 211824.844 ops/s
Iteration  18: 211853.754 ops/s
Iteration  19: 211379.397 ops/s
Iteration  20: 211813.076 ops/s
Iteration  21: 212007.750 ops/s
Iteration  22: 211868.794 ops/s
Iteration  23: 212303.821 ops/s
Iteration  24: 211820.120 ops/s
Iteration  25: 209872.373 ops/s
Iteration  26: 211623.437 ops/s
Iteration  27: 211627.824 ops/s
Iteration  28: 211797.125 ops/s
Iteration  29: 212075.716 ops/s
Iteration  30: 211886.798 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_855._Benchmark.benchmark_Cluster_855":
  211704.738 ±(99.9%) 455.045 ops/s [Average]
  (min, avg, max) = (209872.373, 211704.738, 212606.412), stdev = 681.090
  CI (99.9%): [211249.693, 212159.783] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_855._Benchmark.benchmark_Cluster_855  thrpt   30  211704.738 ± 455.045  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_856._Benchmark.benchmark_Cluster_856$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_856._Benchmark.benchmark_Cluster_856

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61948.792 ops/s
# Warmup Iteration   2: 124601.105 ops/s
# Warmup Iteration   3: 176786.388 ops/s
# Warmup Iteration   4: 177868.874 ops/s
# Warmup Iteration   5: 177666.569 ops/s
# Warmup Iteration   6: 144899.251 ops/s
# Warmup Iteration   7: 174691.749 ops/s
# Warmup Iteration   8: 178229.156 ops/s
# Warmup Iteration   9: 178041.580 ops/s
# Warmup Iteration  10: 178146.254 ops/s
# Warmup Iteration  11: 178084.814 ops/s
# Warmup Iteration  12: 178371.530 ops/s
# Warmup Iteration  13: 178372.771 ops/s
# Warmup Iteration  14: 178438.121 ops/s
# Warmup Iteration  15: 178101.907 ops/s
# Warmup Iteration  16: 178482.377 ops/s
# Warmup Iteration  17: 178312.077 ops/s
# Warmup Iteration  18: 178089.306 ops/s
# Warmup Iteration  19: 177797.139 ops/s
# Warmup Iteration  20: 178093.243 ops/s
# Warmup Iteration  21: 177974.833 ops/s
# Warmup Iteration  22: 178004.846 ops/s
# Warmup Iteration  23: 177879.379 ops/s
# Warmup Iteration  24: 178080.285 ops/s
# Warmup Iteration  25: 178099.175 ops/s
# Warmup Iteration  26: 178360.706 ops/s
# Warmup Iteration  27: 178235.264 ops/s
# Warmup Iteration  28: 178115.277 ops/s
# Warmup Iteration  29: 177910.844 ops/s
# Warmup Iteration  30: 178315.781 ops/s
Iteration   1: 178148.949 ops/s
Iteration   2: 178368.363 ops/s
Iteration   3: 177759.756 ops/s
Iteration   4: 177714.049 ops/s
Iteration   5: 178153.964 ops/s
Iteration   6: 177384.550 ops/s
Iteration   7: 178062.542 ops/s
Iteration   8: 178074.149 ops/s
Iteration   9: 178566.175 ops/s
Iteration  10: 178377.960 ops/s
Iteration  11: 178561.481 ops/s
Iteration  12: 178231.714 ops/s
Iteration  13: 178533.214 ops/s
Iteration  14: 177940.256 ops/s
Iteration  15: 178248.700 ops/s
Iteration  16: 178576.748 ops/s
Iteration  17: 178220.994 ops/s
Iteration  18: 177951.681 ops/s
Iteration  19: 178030.272 ops/s
Iteration  20: 178218.756 ops/s
Iteration  21: 177868.696 ops/s
Iteration  22: 177953.512 ops/s
Iteration  23: 178022.335 ops/s
Iteration  24: 177863.257 ops/s
Iteration  25: 177395.737 ops/s
Iteration  26: 177965.409 ops/s
Iteration  27: 178567.935 ops/s
Iteration  28: 177753.565 ops/s
Iteration  29: 178268.218 ops/s
Iteration  30: 178113.108 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_856._Benchmark.benchmark_Cluster_856":
  178096.535 ±(99.9%) 211.906 ops/s [Average]
  (min, avg, max) = (177384.550, 178096.535, 178576.748), stdev = 317.170
  CI (99.9%): [177884.629, 178308.440] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_856._Benchmark.benchmark_Cluster_856  thrpt   30  178096.535 ± 211.906  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_857._Benchmark.benchmark_Cluster_857$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_857._Benchmark.benchmark_Cluster_857

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65782.883 ops/s
# Warmup Iteration   2: 94333.800 ops/s
# Warmup Iteration   3: 160615.415 ops/s
# Warmup Iteration   4: 159238.068 ops/s
# Warmup Iteration   5: 160267.043 ops/s
# Warmup Iteration   6: 160210.322 ops/s
# Warmup Iteration   7: 160433.764 ops/s
# Warmup Iteration   8: 131714.562 ops/s
# Warmup Iteration   9: 150398.006 ops/s
# Warmup Iteration  10: 160176.201 ops/s
# Warmup Iteration  11: 160506.002 ops/s
# Warmup Iteration  12: 160209.994 ops/s
# Warmup Iteration  13: 160271.529 ops/s
# Warmup Iteration  14: 160387.065 ops/s
# Warmup Iteration  15: 160079.395 ops/s
# Warmup Iteration  16: 160311.603 ops/s
# Warmup Iteration  17: 161688.512 ops/s
# Warmup Iteration  18: 161531.367 ops/s
# Warmup Iteration  19: 162169.868 ops/s
# Warmup Iteration  20: 162054.945 ops/s
# Warmup Iteration  21: 161991.905 ops/s
# Warmup Iteration  22: 162079.542 ops/s
# Warmup Iteration  23: 161591.981 ops/s
# Warmup Iteration  24: 161792.172 ops/s
# Warmup Iteration  25: 161914.175 ops/s
# Warmup Iteration  26: 161996.428 ops/s
# Warmup Iteration  27: 161589.221 ops/s
# Warmup Iteration  28: 161928.547 ops/s
# Warmup Iteration  29: 161892.112 ops/s
# Warmup Iteration  30: 161612.764 ops/s
Iteration   1: 162136.913 ops/s
Iteration   2: 161363.907 ops/s
Iteration   3: 162186.520 ops/s
Iteration   4: 161877.566 ops/s
Iteration   5: 161704.177 ops/s
Iteration   6: 162190.973 ops/s
Iteration   7: 161850.693 ops/s
Iteration   8: 162278.601 ops/s
Iteration   9: 161862.771 ops/s
Iteration  10: 162056.851 ops/s
Iteration  11: 162063.973 ops/s
Iteration  12: 161983.010 ops/s
Iteration  13: 162054.271 ops/s
Iteration  14: 162311.543 ops/s
Iteration  15: 162348.690 ops/s
Iteration  16: 161890.492 ops/s
Iteration  17: 162215.603 ops/s
Iteration  18: 162172.947 ops/s
Iteration  19: 162234.862 ops/s
Iteration  20: 162166.740 ops/s
Iteration  21: 162235.298 ops/s
Iteration  22: 161646.962 ops/s
Iteration  23: 161797.707 ops/s
Iteration  24: 162359.317 ops/s
Iteration  25: 162142.492 ops/s
Iteration  26: 161958.864 ops/s
Iteration  27: 162056.930 ops/s
Iteration  28: 162022.699 ops/s
Iteration  29: 162174.562 ops/s
Iteration  30: 162078.837 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_857._Benchmark.benchmark_Cluster_857":
  162047.492 ±(99.9%) 149.972 ops/s [Average]
  (min, avg, max) = (161363.907, 162047.492, 162359.317), stdev = 224.470
  CI (99.9%): [161897.521, 162197.464] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_857._Benchmark.benchmark_Cluster_857  thrpt   30  162047.492 ± 149.972  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_858._Benchmark.benchmark_Cluster_858$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_858._Benchmark.benchmark_Cluster_858

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63802.282 ops/s
# Warmup Iteration   2: 80699.372 ops/s
# Warmup Iteration   3: 130819.943 ops/s
# Warmup Iteration   4: 130868.207 ops/s
# Warmup Iteration   5: 128706.080 ops/s
# Warmup Iteration   6: 130888.822 ops/s
# Warmup Iteration   7: 130745.407 ops/s
# Warmup Iteration   8: 130653.701 ops/s
# Warmup Iteration   9: 121934.186 ops/s
# Warmup Iteration  10: 109616.667 ops/s
# Warmup Iteration  11: 130034.386 ops/s
# Warmup Iteration  12: 130452.340 ops/s
# Warmup Iteration  13: 130542.841 ops/s
# Warmup Iteration  14: 130326.082 ops/s
# Warmup Iteration  15: 130202.663 ops/s
# Warmup Iteration  16: 130202.754 ops/s
# Warmup Iteration  17: 134191.718 ops/s
# Warmup Iteration  18: 134565.699 ops/s
# Warmup Iteration  19: 134032.240 ops/s
# Warmup Iteration  20: 134410.199 ops/s
# Warmup Iteration  21: 134497.529 ops/s
# Warmup Iteration  22: 133886.202 ops/s
# Warmup Iteration  23: 133821.632 ops/s
# Warmup Iteration  24: 134674.308 ops/s
# Warmup Iteration  25: 134241.805 ops/s
# Warmup Iteration  26: 133880.060 ops/s
# Warmup Iteration  27: 134040.682 ops/s
# Warmup Iteration  28: 133770.534 ops/s
# Warmup Iteration  29: 134103.285 ops/s
# Warmup Iteration  30: 134640.952 ops/s
Iteration   1: 134241.583 ops/s
Iteration   2: 134072.189 ops/s
Iteration   3: 134067.513 ops/s
Iteration   4: 134043.307 ops/s
Iteration   5: 134079.972 ops/s
Iteration   6: 133955.763 ops/s
Iteration   7: 133874.855 ops/s
Iteration   8: 133597.816 ops/s
Iteration   9: 133841.637 ops/s
Iteration  10: 134098.940 ops/s
Iteration  11: 134722.697 ops/s
Iteration  12: 134359.450 ops/s
Iteration  13: 133774.063 ops/s
Iteration  14: 134081.914 ops/s
Iteration  15: 133787.589 ops/s
Iteration  16: 134245.712 ops/s
Iteration  17: 134467.660 ops/s
Iteration  18: 134590.637 ops/s
Iteration  19: 134501.709 ops/s
Iteration  20: 134058.960 ops/s
Iteration  21: 133999.591 ops/s
Iteration  22: 134538.221 ops/s
Iteration  23: 133534.356 ops/s
Iteration  24: 133558.288 ops/s
Iteration  25: 134209.893 ops/s
Iteration  26: 133975.873 ops/s
Iteration  27: 134403.241 ops/s
Iteration  28: 134309.984 ops/s
Iteration  29: 134844.007 ops/s
Iteration  30: 134786.216 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_858._Benchmark.benchmark_Cluster_858":
  134154.121 ±(99.9%) 233.789 ops/s [Average]
  (min, avg, max) = (133534.356, 134154.121, 134844.007), stdev = 349.924
  CI (99.9%): [133920.332, 134387.910] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_858._Benchmark.benchmark_Cluster_858  thrpt   30  134154.121 ± 233.789  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_859._Benchmark.benchmark_Cluster_859$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_859._Benchmark.benchmark_Cluster_859

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67006.650 ops/s
# Warmup Iteration   2: 98525.498 ops/s
# Warmup Iteration   3: 148968.474 ops/s
# Warmup Iteration   4: 147974.850 ops/s
# Warmup Iteration   5: 148815.372 ops/s
# Warmup Iteration   6: 148931.968 ops/s
# Warmup Iteration   7: 148791.938 ops/s
# Warmup Iteration   8: 116759.554 ops/s
# Warmup Iteration   9: 148972.073 ops/s
# Warmup Iteration  10: 149101.197 ops/s
# Warmup Iteration  11: 148839.969 ops/s
# Warmup Iteration  12: 148367.384 ops/s
# Warmup Iteration  13: 148988.641 ops/s
# Warmup Iteration  14: 148975.008 ops/s
# Warmup Iteration  15: 148433.782 ops/s
# Warmup Iteration  16: 148859.670 ops/s
# Warmup Iteration  17: 148413.174 ops/s
# Warmup Iteration  18: 148915.530 ops/s
# Warmup Iteration  19: 149116.548 ops/s
# Warmup Iteration  20: 148914.530 ops/s
# Warmup Iteration  21: 148819.990 ops/s
# Warmup Iteration  22: 148920.724 ops/s
# Warmup Iteration  23: 148851.239 ops/s
# Warmup Iteration  24: 149017.472 ops/s
# Warmup Iteration  25: 148945.752 ops/s
# Warmup Iteration  26: 148757.456 ops/s
# Warmup Iteration  27: 148850.487 ops/s
# Warmup Iteration  28: 148757.158 ops/s
# Warmup Iteration  29: 148839.163 ops/s
# Warmup Iteration  30: 148932.657 ops/s
Iteration   1: 148682.028 ops/s
Iteration   2: 149073.838 ops/s
Iteration   3: 149050.665 ops/s
Iteration   4: 149009.933 ops/s
Iteration   5: 148821.898 ops/s
Iteration   6: 148776.533 ops/s
Iteration   7: 148994.447 ops/s
Iteration   8: 148507.053 ops/s
Iteration   9: 148336.117 ops/s
Iteration  10: 148622.876 ops/s
Iteration  11: 148798.279 ops/s
Iteration  12: 148763.721 ops/s
Iteration  13: 148077.084 ops/s
Iteration  14: 148754.367 ops/s
Iteration  15: 148679.810 ops/s
Iteration  16: 148916.832 ops/s
Iteration  17: 149133.025 ops/s
Iteration  18: 148450.223 ops/s
Iteration  19: 148797.520 ops/s
Iteration  20: 148468.963 ops/s
Iteration  21: 148481.152 ops/s
Iteration  22: 148666.805 ops/s
Iteration  23: 148992.160 ops/s
Iteration  24: 148702.585 ops/s
Iteration  25: 148928.425 ops/s
Iteration  26: 148530.719 ops/s
Iteration  27: 148868.850 ops/s
Iteration  28: 148864.663 ops/s
Iteration  29: 148610.261 ops/s
Iteration  30: 148918.715 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_859._Benchmark.benchmark_Cluster_859":
  148742.652 ±(99.9%) 160.767 ops/s [Average]
  (min, avg, max) = (148077.084, 148742.652, 149133.025), stdev = 240.628
  CI (99.9%): [148581.885, 148903.418] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_859._Benchmark.benchmark_Cluster_859  thrpt   30  148742.652 ± 160.767  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_86._Benchmark.benchmark_Cluster_86$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_86._Benchmark.benchmark_Cluster_86

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62484.020 ops/s
# Warmup Iteration   2: 81382.517 ops/s
# Warmup Iteration   3: 132420.793 ops/s
# Warmup Iteration   4: 131207.995 ops/s
# Warmup Iteration   5: 134080.442 ops/s
# Warmup Iteration   6: 134143.449 ops/s
# Warmup Iteration   7: 134302.330 ops/s
# Warmup Iteration   8: 132513.679 ops/s
# Warmup Iteration   9: 101298.570 ops/s
# Warmup Iteration  10: 133807.934 ops/s
# Warmup Iteration  11: 133631.627 ops/s
# Warmup Iteration  12: 133287.946 ops/s
# Warmup Iteration  13: 133334.765 ops/s
# Warmup Iteration  14: 132846.838 ops/s
# Warmup Iteration  15: 133116.590 ops/s
# Warmup Iteration  16: 133474.317 ops/s
# Warmup Iteration  17: 136795.702 ops/s
# Warmup Iteration  18: 136841.104 ops/s
# Warmup Iteration  19: 137259.603 ops/s
# Warmup Iteration  20: 136317.653 ops/s
# Warmup Iteration  21: 136814.847 ops/s
# Warmup Iteration  22: 137280.148 ops/s
# Warmup Iteration  23: 136389.106 ops/s
# Warmup Iteration  24: 136946.475 ops/s
# Warmup Iteration  25: 137391.540 ops/s
# Warmup Iteration  26: 136521.642 ops/s
# Warmup Iteration  27: 136497.828 ops/s
# Warmup Iteration  28: 136903.863 ops/s
# Warmup Iteration  29: 136458.390 ops/s
# Warmup Iteration  30: 136892.195 ops/s
Iteration   1: 136396.039 ops/s
Iteration   2: 137823.361 ops/s
Iteration   3: 137673.718 ops/s
Iteration   4: 137018.905 ops/s
Iteration   5: 136991.225 ops/s
Iteration   6: 137002.967 ops/s
Iteration   7: 137040.436 ops/s
Iteration   8: 137477.018 ops/s
Iteration   9: 136958.986 ops/s
Iteration  10: 137110.020 ops/s
Iteration  11: 137660.001 ops/s
Iteration  12: 136937.778 ops/s
Iteration  13: 137311.391 ops/s
Iteration  14: 137597.943 ops/s
Iteration  15: 136646.960 ops/s
Iteration  16: 137794.372 ops/s
Iteration  17: 136964.278 ops/s
Iteration  18: 137204.548 ops/s
Iteration  19: 136630.786 ops/s
Iteration  20: 136172.296 ops/s
Iteration  21: 136619.242 ops/s
Iteration  22: 136775.512 ops/s
Iteration  23: 137036.315 ops/s
Iteration  24: 136558.683 ops/s
Iteration  25: 136534.606 ops/s
Iteration  26: 136885.861 ops/s
Iteration  27: 137175.327 ops/s
Iteration  28: 136812.547 ops/s
Iteration  29: 136620.540 ops/s
Iteration  30: 137089.999 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_86._Benchmark.benchmark_Cluster_86":
  137017.389 ±(99.9%) 279.743 ops/s [Average]
  (min, avg, max) = (136172.296, 137017.389, 137823.361), stdev = 418.706
  CI (99.9%): [136737.646, 137297.132] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_86._Benchmark.benchmark_Cluster_86  thrpt   30  137017.389 ± 279.743  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_860._Benchmark.benchmark_Cluster_860$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_860._Benchmark.benchmark_Cluster_860

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71098.192 ops/s
# Warmup Iteration   2: 140526.591 ops/s
# Warmup Iteration   3: 197789.875 ops/s
# Warmup Iteration   4: 198504.585 ops/s
# Warmup Iteration   5: 198143.137 ops/s
# Warmup Iteration   6: 157052.570 ops/s
# Warmup Iteration   7: 198471.943 ops/s
# Warmup Iteration   8: 198450.332 ops/s
# Warmup Iteration   9: 197963.010 ops/s
# Warmup Iteration  10: 198741.247 ops/s
# Warmup Iteration  11: 198474.555 ops/s
# Warmup Iteration  12: 198578.361 ops/s
# Warmup Iteration  13: 197619.534 ops/s
# Warmup Iteration  14: 198487.754 ops/s
# Warmup Iteration  15: 198285.441 ops/s
# Warmup Iteration  16: 197871.579 ops/s
# Warmup Iteration  17: 198004.682 ops/s
# Warmup Iteration  18: 197875.211 ops/s
# Warmup Iteration  19: 198078.373 ops/s
# Warmup Iteration  20: 198310.384 ops/s
# Warmup Iteration  21: 198153.847 ops/s
# Warmup Iteration  22: 198041.484 ops/s
# Warmup Iteration  23: 198541.140 ops/s
# Warmup Iteration  24: 197905.158 ops/s
# Warmup Iteration  25: 198013.799 ops/s
# Warmup Iteration  26: 197978.103 ops/s
# Warmup Iteration  27: 198019.999 ops/s
# Warmup Iteration  28: 198520.303 ops/s
# Warmup Iteration  29: 198333.049 ops/s
# Warmup Iteration  30: 198062.520 ops/s
Iteration   1: 198233.756 ops/s
Iteration   2: 198272.864 ops/s
Iteration   3: 198311.950 ops/s
Iteration   4: 198735.371 ops/s
Iteration   5: 198383.650 ops/s
Iteration   6: 198808.213 ops/s
Iteration   7: 198058.088 ops/s
Iteration   8: 198367.507 ops/s
Iteration   9: 197761.269 ops/s
Iteration  10: 197943.704 ops/s
Iteration  11: 198160.117 ops/s
Iteration  12: 198361.760 ops/s
Iteration  13: 198577.553 ops/s
Iteration  14: 197831.617 ops/s
Iteration  15: 198778.106 ops/s
Iteration  16: 197839.912 ops/s
Iteration  17: 197576.635 ops/s
Iteration  18: 198194.650 ops/s
Iteration  19: 197868.728 ops/s
Iteration  20: 198448.570 ops/s
Iteration  21: 198075.962 ops/s
Iteration  22: 198219.454 ops/s
Iteration  23: 197952.898 ops/s
Iteration  24: 197959.813 ops/s
Iteration  25: 198321.981 ops/s
Iteration  26: 198506.855 ops/s
Iteration  27: 197858.648 ops/s
Iteration  28: 198018.200 ops/s
Iteration  29: 197653.879 ops/s
Iteration  30: 197373.040 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_860._Benchmark.benchmark_Cluster_860":
  198148.492 ±(99.9%) 236.744 ops/s [Average]
  (min, avg, max) = (197373.040, 198148.492, 198808.213), stdev = 354.347
  CI (99.9%): [197911.748, 198385.235] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_860._Benchmark.benchmark_Cluster_860  thrpt   30  198148.492 ± 236.744  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_861._Benchmark.benchmark_Cluster_861$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_861._Benchmark.benchmark_Cluster_861

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45560.812 ops/s
# Warmup Iteration   2: 116933.980 ops/s
# Warmup Iteration   3: 168769.641 ops/s
# Warmup Iteration   4: 169702.904 ops/s
# Warmup Iteration   5: 155279.631 ops/s
# Warmup Iteration   6: 149829.434 ops/s
# Warmup Iteration   7: 170302.251 ops/s
# Warmup Iteration   8: 170108.157 ops/s
# Warmup Iteration   9: 169936.604 ops/s
# Warmup Iteration  10: 170234.936 ops/s
# Warmup Iteration  11: 170313.785 ops/s
# Warmup Iteration  12: 170127.928 ops/s
# Warmup Iteration  13: 170333.876 ops/s
# Warmup Iteration  14: 170055.167 ops/s
# Warmup Iteration  15: 169939.345 ops/s
# Warmup Iteration  16: 169959.692 ops/s
# Warmup Iteration  17: 169539.779 ops/s
# Warmup Iteration  18: 169435.800 ops/s
# Warmup Iteration  19: 169078.462 ops/s
# Warmup Iteration  20: 169390.167 ops/s
# Warmup Iteration  21: 169712.699 ops/s
# Warmup Iteration  22: 169915.244 ops/s
# Warmup Iteration  23: 169630.255 ops/s
# Warmup Iteration  24: 169422.193 ops/s
# Warmup Iteration  25: 169642.223 ops/s
# Warmup Iteration  26: 169232.214 ops/s
# Warmup Iteration  27: 169304.763 ops/s
# Warmup Iteration  28: 169625.323 ops/s
# Warmup Iteration  29: 169217.652 ops/s
# Warmup Iteration  30: 169720.762 ops/s
Iteration   1: 169024.423 ops/s
Iteration   2: 169276.562 ops/s
Iteration   3: 169033.849 ops/s
Iteration   4: 168841.534 ops/s
Iteration   5: 169079.178 ops/s
Iteration   6: 169320.176 ops/s
Iteration   7: 169201.036 ops/s
Iteration   8: 169126.901 ops/s
Iteration   9: 169299.406 ops/s
Iteration  10: 169816.902 ops/s
Iteration  11: 169531.261 ops/s
Iteration  12: 169512.699 ops/s
Iteration  13: 169944.463 ops/s
Iteration  14: 169962.691 ops/s
Iteration  15: 169905.160 ops/s
Iteration  16: 169913.037 ops/s
Iteration  17: 169917.789 ops/s
Iteration  18: 169256.538 ops/s
Iteration  19: 169589.385 ops/s
Iteration  20: 169467.035 ops/s
Iteration  21: 169461.688 ops/s
Iteration  22: 169957.713 ops/s
Iteration  23: 169978.541 ops/s
Iteration  24: 169309.248 ops/s
Iteration  25: 169597.702 ops/s
Iteration  26: 169584.894 ops/s
Iteration  27: 169494.752 ops/s
Iteration  28: 169434.407 ops/s
Iteration  29: 169669.025 ops/s
Iteration  30: 169353.137 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_861._Benchmark.benchmark_Cluster_861":
  169495.371 ±(99.9%) 216.422 ops/s [Average]
  (min, avg, max) = (168841.534, 169495.371, 169978.541), stdev = 323.931
  CI (99.9%): [169278.949, 169711.793] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_861._Benchmark.benchmark_Cluster_861  thrpt   30  169495.371 ± 216.422  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_862._Benchmark.benchmark_Cluster_862$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_862._Benchmark.benchmark_Cluster_862

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 44228.587 ops/s
# Warmup Iteration   2: 104045.179 ops/s
# Warmup Iteration   3: 163979.699 ops/s
# Warmup Iteration   4: 164096.090 ops/s
# Warmup Iteration   5: 163968.240 ops/s
# Warmup Iteration   6: 130424.156 ops/s
# Warmup Iteration   7: 163762.741 ops/s
# Warmup Iteration   8: 163429.322 ops/s
# Warmup Iteration   9: 163410.824 ops/s
# Warmup Iteration  10: 163198.970 ops/s
# Warmup Iteration  11: 163523.029 ops/s
# Warmup Iteration  12: 163621.639 ops/s
# Warmup Iteration  13: 163466.754 ops/s
# Warmup Iteration  14: 163362.172 ops/s
# Warmup Iteration  15: 163412.587 ops/s
# Warmup Iteration  16: 163532.966 ops/s
# Warmup Iteration  17: 163493.644 ops/s
# Warmup Iteration  18: 163297.417 ops/s
# Warmup Iteration  19: 163286.296 ops/s
# Warmup Iteration  20: 163239.692 ops/s
# Warmup Iteration  21: 163293.309 ops/s
# Warmup Iteration  22: 163372.400 ops/s
# Warmup Iteration  23: 163344.113 ops/s
# Warmup Iteration  24: 163366.401 ops/s
# Warmup Iteration  25: 163242.540 ops/s
# Warmup Iteration  26: 163359.830 ops/s
# Warmup Iteration  27: 163656.695 ops/s
# Warmup Iteration  28: 163441.247 ops/s
# Warmup Iteration  29: 163394.170 ops/s
# Warmup Iteration  30: 163781.965 ops/s
Iteration   1: 163639.176 ops/s
Iteration   2: 163795.645 ops/s
Iteration   3: 163493.225 ops/s
Iteration   4: 163467.522 ops/s
Iteration   5: 163790.713 ops/s
Iteration   6: 163710.612 ops/s
Iteration   7: 163979.661 ops/s
Iteration   8: 163349.227 ops/s
Iteration   9: 163293.100 ops/s
Iteration  10: 163673.793 ops/s
Iteration  11: 163206.780 ops/s
Iteration  12: 163243.573 ops/s
Iteration  13: 163260.267 ops/s
Iteration  14: 163544.158 ops/s
Iteration  15: 163411.248 ops/s
Iteration  16: 163294.453 ops/s
Iteration  17: 163601.830 ops/s
Iteration  18: 163338.205 ops/s
Iteration  19: 163448.055 ops/s
Iteration  20: 163330.809 ops/s
Iteration  21: 163383.492 ops/s
Iteration  22: 163718.864 ops/s
Iteration  23: 163382.842 ops/s
Iteration  24: 163382.372 ops/s
Iteration  25: 163666.391 ops/s
Iteration  26: 163554.618 ops/s
Iteration  27: 163518.239 ops/s
Iteration  28: 163095.602 ops/s
Iteration  29: 163516.128 ops/s
Iteration  30: 163805.345 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_862._Benchmark.benchmark_Cluster_862":
  163496.532 ±(99.9%) 139.728 ops/s [Average]
  (min, avg, max) = (163095.602, 163496.532, 163979.661), stdev = 209.139
  CI (99.9%): [163356.803, 163636.260] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_862._Benchmark.benchmark_Cluster_862  thrpt   30  163496.532 ± 139.728  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_863._Benchmark.benchmark_Cluster_863$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_863._Benchmark.benchmark_Cluster_863

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43684.511 ops/s
# Warmup Iteration   2: 74322.152 ops/s
# Warmup Iteration   3: 112055.399 ops/s
# Warmup Iteration   4: 111370.480 ops/s
# Warmup Iteration   5: 112080.634 ops/s
# Warmup Iteration   6: 112235.211 ops/s
# Warmup Iteration   7: 111908.838 ops/s
# Warmup Iteration   8: 89173.284 ops/s
# Warmup Iteration   9: 112102.543 ops/s
# Warmup Iteration  10: 111930.461 ops/s
# Warmup Iteration  11: 112080.951 ops/s
# Warmup Iteration  12: 112043.868 ops/s
# Warmup Iteration  13: 111996.614 ops/s
# Warmup Iteration  14: 112075.442 ops/s
# Warmup Iteration  15: 112050.202 ops/s
# Warmup Iteration  16: 112119.263 ops/s
# Warmup Iteration  17: 111836.536 ops/s
# Warmup Iteration  18: 111917.126 ops/s
# Warmup Iteration  19: 111890.645 ops/s
# Warmup Iteration  20: 111805.858 ops/s
# Warmup Iteration  21: 111904.675 ops/s
# Warmup Iteration  22: 111810.720 ops/s
# Warmup Iteration  23: 111972.438 ops/s
# Warmup Iteration  24: 111973.386 ops/s
# Warmup Iteration  25: 111957.282 ops/s
# Warmup Iteration  26: 112162.127 ops/s
# Warmup Iteration  27: 112053.664 ops/s
# Warmup Iteration  28: 111962.275 ops/s
# Warmup Iteration  29: 111918.384 ops/s
# Warmup Iteration  30: 112061.693 ops/s
Iteration   1: 112181.648 ops/s
Iteration   2: 111944.068 ops/s
Iteration   3: 111970.453 ops/s
Iteration   4: 111895.443 ops/s
Iteration   5: 111959.685 ops/s
Iteration   6: 112248.830 ops/s
Iteration   7: 111795.185 ops/s
Iteration   8: 111920.959 ops/s
Iteration   9: 111866.496 ops/s
Iteration  10: 111942.136 ops/s
Iteration  11: 111897.514 ops/s
Iteration  12: 112047.218 ops/s
Iteration  13: 112027.106 ops/s
Iteration  14: 111619.843 ops/s
Iteration  15: 112012.829 ops/s
Iteration  16: 111797.786 ops/s
Iteration  17: 111936.191 ops/s
Iteration  18: 111852.045 ops/s
Iteration  19: 111919.442 ops/s
Iteration  20: 111938.909 ops/s
Iteration  21: 111855.226 ops/s
Iteration  22: 111971.725 ops/s
Iteration  23: 112180.314 ops/s
Iteration  24: 111956.928 ops/s
Iteration  25: 111928.390 ops/s
Iteration  26: 111849.882 ops/s
Iteration  27: 111987.518 ops/s
Iteration  28: 111809.223 ops/s
Iteration  29: 112015.372 ops/s
Iteration  30: 112061.275 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_863._Benchmark.benchmark_Cluster_863":
  111946.321 ±(99.9%) 83.591 ops/s [Average]
  (min, avg, max) = (111619.843, 111946.321, 112248.830), stdev = 125.115
  CI (99.9%): [111862.731, 112029.912] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score    Error  Units
Cluster_863._Benchmark.benchmark_Cluster_863  thrpt   30  111946.321 ± 83.591  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_864._Benchmark.benchmark_Cluster_864$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_864._Benchmark.benchmark_Cluster_864

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93828.294 ops/s
# Warmup Iteration   2: 189591.903 ops/s
# Warmup Iteration   3: 239850.328 ops/s
# Warmup Iteration   4: 241658.587 ops/s
# Warmup Iteration   5: 241631.980 ops/s
# Warmup Iteration   6: 193161.601 ops/s
# Warmup Iteration   7: 241688.207 ops/s
# Warmup Iteration   8: 241948.063 ops/s
# Warmup Iteration   9: 241813.519 ops/s
# Warmup Iteration  10: 241486.849 ops/s
# Warmup Iteration  11: 242114.651 ops/s
# Warmup Iteration  12: 241732.234 ops/s
# Warmup Iteration  13: 241237.325 ops/s
# Warmup Iteration  14: 242064.060 ops/s
# Warmup Iteration  15: 241406.887 ops/s
# Warmup Iteration  16: 241735.655 ops/s
# Warmup Iteration  17: 241692.692 ops/s
# Warmup Iteration  18: 242159.436 ops/s
# Warmup Iteration  19: 241791.889 ops/s
# Warmup Iteration  20: 242276.102 ops/s
# Warmup Iteration  21: 241462.859 ops/s
# Warmup Iteration  22: 241356.447 ops/s
# Warmup Iteration  23: 241136.207 ops/s
# Warmup Iteration  24: 241423.180 ops/s
# Warmup Iteration  25: 241532.145 ops/s
# Warmup Iteration  26: 242407.215 ops/s
# Warmup Iteration  27: 242129.681 ops/s
# Warmup Iteration  28: 241814.210 ops/s
# Warmup Iteration  29: 241880.647 ops/s
# Warmup Iteration  30: 242152.910 ops/s
Iteration   1: 242077.428 ops/s
Iteration   2: 241824.628 ops/s
Iteration   3: 242030.851 ops/s
Iteration   4: 242289.092 ops/s
Iteration   5: 241560.831 ops/s
Iteration   6: 242537.024 ops/s
Iteration   7: 242373.360 ops/s
Iteration   8: 242078.493 ops/s
Iteration   9: 241765.158 ops/s
Iteration  10: 242107.770 ops/s
Iteration  11: 241682.304 ops/s
Iteration  12: 242443.036 ops/s
Iteration  13: 242350.769 ops/s
Iteration  14: 241547.338 ops/s
Iteration  15: 241781.231 ops/s
Iteration  16: 242325.210 ops/s
Iteration  17: 242471.145 ops/s
Iteration  18: 242170.366 ops/s
Iteration  19: 241354.572 ops/s
Iteration  20: 241246.082 ops/s
Iteration  21: 241293.660 ops/s
Iteration  22: 242601.077 ops/s
Iteration  23: 242104.362 ops/s
Iteration  24: 241200.777 ops/s
Iteration  25: 241313.278 ops/s
Iteration  26: 241456.272 ops/s
Iteration  27: 241297.071 ops/s
Iteration  28: 240782.014 ops/s
Iteration  29: 241251.618 ops/s
Iteration  30: 242254.876 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_864._Benchmark.benchmark_Cluster_864":
  241852.390 ±(99.9%) 329.549 ops/s [Average]
  (min, avg, max) = (240782.014, 241852.390, 242601.077), stdev = 493.254
  CI (99.9%): [241522.841, 242181.939] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_864._Benchmark.benchmark_Cluster_864  thrpt   30  241852.390 ± 329.549  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_865._Benchmark.benchmark_Cluster_865$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_865._Benchmark.benchmark_Cluster_865

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60219.027 ops/s
# Warmup Iteration   2: 119491.154 ops/s
# Warmup Iteration   3: 160402.719 ops/s
# Warmup Iteration   4: 161712.840 ops/s
# Warmup Iteration   5: 161472.381 ops/s
# Warmup Iteration   6: 128075.730 ops/s
# Warmup Iteration   7: 161448.657 ops/s
# Warmup Iteration   8: 161726.935 ops/s
# Warmup Iteration   9: 161625.837 ops/s
# Warmup Iteration  10: 161577.634 ops/s
# Warmup Iteration  11: 161700.835 ops/s
# Warmup Iteration  12: 161391.717 ops/s
# Warmup Iteration  13: 161392.103 ops/s
# Warmup Iteration  14: 161396.462 ops/s
# Warmup Iteration  15: 161339.034 ops/s
# Warmup Iteration  16: 161645.212 ops/s
# Warmup Iteration  17: 161697.878 ops/s
# Warmup Iteration  18: 161639.457 ops/s
# Warmup Iteration  19: 161718.870 ops/s
# Warmup Iteration  20: 161450.391 ops/s
# Warmup Iteration  21: 161665.976 ops/s
# Warmup Iteration  22: 161637.317 ops/s
# Warmup Iteration  23: 161858.789 ops/s
# Warmup Iteration  24: 161618.193 ops/s
# Warmup Iteration  25: 161621.897 ops/s
# Warmup Iteration  26: 161672.348 ops/s
# Warmup Iteration  27: 161422.425 ops/s
# Warmup Iteration  28: 161531.468 ops/s
# Warmup Iteration  29: 161537.988 ops/s
# Warmup Iteration  30: 161713.232 ops/s
Iteration   1: 161642.425 ops/s
Iteration   2: 161736.605 ops/s
Iteration   3: 161626.305 ops/s
Iteration   4: 161646.881 ops/s
Iteration   5: 161455.582 ops/s
Iteration   6: 161587.174 ops/s
Iteration   7: 161559.716 ops/s
Iteration   8: 161439.878 ops/s
Iteration   9: 161686.752 ops/s
Iteration  10: 161574.591 ops/s
Iteration  11: 161805.433 ops/s
Iteration  12: 161598.675 ops/s
Iteration  13: 161820.731 ops/s
Iteration  14: 161681.132 ops/s
Iteration  15: 161424.804 ops/s
Iteration  16: 161850.902 ops/s
Iteration  17: 161545.572 ops/s
Iteration  18: 161762.610 ops/s
Iteration  19: 161579.995 ops/s
Iteration  20: 161526.749 ops/s
Iteration  21: 161532.090 ops/s
Iteration  22: 161456.597 ops/s
Iteration  23: 161769.390 ops/s
Iteration  24: 161574.603 ops/s
Iteration  25: 161950.230 ops/s
Iteration  26: 161564.132 ops/s
Iteration  27: 161743.183 ops/s
Iteration  28: 161642.611 ops/s
Iteration  29: 161867.128 ops/s
Iteration  30: 161759.365 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_865._Benchmark.benchmark_Cluster_865":
  161647.061 ±(99.9%) 90.934 ops/s [Average]
  (min, avg, max) = (161424.804, 161647.061, 161950.230), stdev = 136.106
  CI (99.9%): [161556.127, 161737.995] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score    Error  Units
Cluster_865._Benchmark.benchmark_Cluster_865  thrpt   30  161647.061 ± 90.934  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_866._Benchmark.benchmark_Cluster_866$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_866._Benchmark.benchmark_Cluster_866

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75021.501 ops/s
# Warmup Iteration   2: 98306.636 ops/s
# Warmup Iteration   3: 133954.236 ops/s
# Warmup Iteration   4: 147576.217 ops/s
# Warmup Iteration   5: 146648.409 ops/s
# Warmup Iteration   6: 147282.992 ops/s
# Warmup Iteration   7: 146853.790 ops/s
# Warmup Iteration   8: 147209.197 ops/s
# Warmup Iteration   9: 147317.854 ops/s
# Warmup Iteration  10: 147165.604 ops/s
# Warmup Iteration  11: 126235.479 ops/s
# Warmup Iteration  12: 136090.426 ops/s
# Warmup Iteration  13: 147567.150 ops/s
# Warmup Iteration  14: 147716.490 ops/s
# Warmup Iteration  15: 147530.321 ops/s
# Warmup Iteration  16: 147705.221 ops/s
# Warmup Iteration  17: 154080.429 ops/s
# Warmup Iteration  18: 153955.714 ops/s
# Warmup Iteration  19: 154260.202 ops/s
# Warmup Iteration  20: 153621.471 ops/s
# Warmup Iteration  21: 154040.291 ops/s
# Warmup Iteration  22: 154177.961 ops/s
# Warmup Iteration  23: 153679.544 ops/s
# Warmup Iteration  24: 153875.362 ops/s
# Warmup Iteration  25: 154142.261 ops/s
# Warmup Iteration  26: 154193.172 ops/s
# Warmup Iteration  27: 154669.783 ops/s
# Warmup Iteration  28: 153928.862 ops/s
# Warmup Iteration  29: 153651.059 ops/s
# Warmup Iteration  30: 154078.024 ops/s
Iteration   1: 153661.046 ops/s
Iteration   2: 154153.006 ops/s
Iteration   3: 154246.745 ops/s
Iteration   4: 154213.884 ops/s
Iteration   5: 154319.715 ops/s
Iteration   6: 153445.722 ops/s
Iteration   7: 154570.785 ops/s
Iteration   8: 153927.534 ops/s
Iteration   9: 154438.207 ops/s
Iteration  10: 154184.791 ops/s
Iteration  11: 153927.181 ops/s
Iteration  12: 154240.372 ops/s
Iteration  13: 153420.375 ops/s
Iteration  14: 154188.084 ops/s
Iteration  15: 154516.506 ops/s
Iteration  16: 154738.062 ops/s
Iteration  17: 153863.378 ops/s
Iteration  18: 154412.148 ops/s
Iteration  19: 154446.059 ops/s
Iteration  20: 153438.393 ops/s
Iteration  21: 153610.338 ops/s
Iteration  22: 153963.993 ops/s
Iteration  23: 154099.859 ops/s
Iteration  24: 154026.241 ops/s
Iteration  25: 154199.415 ops/s
Iteration  26: 154702.737 ops/s
Iteration  27: 153915.533 ops/s
Iteration  28: 153653.763 ops/s
Iteration  29: 153891.107 ops/s
Iteration  30: 153704.172 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_866._Benchmark.benchmark_Cluster_866":
  154070.638 ±(99.9%) 246.092 ops/s [Average]
  (min, avg, max) = (153420.375, 154070.638, 154738.062), stdev = 368.338
  CI (99.9%): [153824.547, 154316.730] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_866._Benchmark.benchmark_Cluster_866  thrpt   30  154070.638 ± 246.092  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_867._Benchmark.benchmark_Cluster_867$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_867._Benchmark.benchmark_Cluster_867

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55858.518 ops/s
# Warmup Iteration   2: 91512.314 ops/s
# Warmup Iteration   3: 142437.728 ops/s
# Warmup Iteration   4: 140621.623 ops/s
# Warmup Iteration   5: 141694.447 ops/s
# Warmup Iteration   6: 141117.262 ops/s
# Warmup Iteration   7: 135136.430 ops/s
# Warmup Iteration   8: 114950.130 ops/s
# Warmup Iteration   9: 141677.757 ops/s
# Warmup Iteration  10: 141600.050 ops/s
# Warmup Iteration  11: 141214.836 ops/s
# Warmup Iteration  12: 140681.080 ops/s
# Warmup Iteration  13: 140011.843 ops/s
# Warmup Iteration  14: 140361.323 ops/s
# Warmup Iteration  15: 139884.912 ops/s
# Warmup Iteration  16: 141773.670 ops/s
# Warmup Iteration  17: 143252.285 ops/s
# Warmup Iteration  18: 141703.397 ops/s
# Warmup Iteration  19: 141500.066 ops/s
# Warmup Iteration  20: 144323.224 ops/s
# Warmup Iteration  21: 142687.758 ops/s
# Warmup Iteration  22: 143719.848 ops/s
# Warmup Iteration  23: 144027.412 ops/s
# Warmup Iteration  24: 143362.348 ops/s
# Warmup Iteration  25: 143673.017 ops/s
# Warmup Iteration  26: 143884.348 ops/s
# Warmup Iteration  27: 143189.400 ops/s
# Warmup Iteration  28: 143809.530 ops/s
# Warmup Iteration  29: 143735.917 ops/s
# Warmup Iteration  30: 143112.449 ops/s
Iteration   1: 144571.520 ops/s
Iteration   2: 143834.492 ops/s
Iteration   3: 143931.170 ops/s
Iteration   4: 143922.435 ops/s
Iteration   5: 144126.907 ops/s
Iteration   6: 144037.065 ops/s
Iteration   7: 145308.107 ops/s
Iteration   8: 143953.277 ops/s
Iteration   9: 142660.144 ops/s
Iteration  10: 143168.606 ops/s
Iteration  11: 143415.106 ops/s
Iteration  12: 142636.147 ops/s
Iteration  13: 143458.270 ops/s
Iteration  14: 143797.062 ops/s
Iteration  15: 145065.250 ops/s
Iteration  16: 144395.514 ops/s
Iteration  17: 144959.752 ops/s
Iteration  18: 144223.862 ops/s
Iteration  19: 144049.481 ops/s
Iteration  20: 144328.915 ops/s
Iteration  21: 144432.232 ops/s
Iteration  22: 144965.654 ops/s
Iteration  23: 144191.754 ops/s
Iteration  24: 142760.025 ops/s
Iteration  25: 143496.640 ops/s
Iteration  26: 143920.234 ops/s
Iteration  27: 143805.775 ops/s
Iteration  28: 143758.615 ops/s
Iteration  29: 144704.177 ops/s
Iteration  30: 144756.219 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_867._Benchmark.benchmark_Cluster_867":
  144021.147 ±(99.9%) 457.457 ops/s [Average]
  (min, avg, max) = (142636.147, 144021.147, 145308.107), stdev = 684.700
  CI (99.9%): [143563.690, 144478.603] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_867._Benchmark.benchmark_Cluster_867  thrpt   30  144021.147 ± 457.457  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_868._Benchmark.benchmark_Cluster_868$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_868._Benchmark.benchmark_Cluster_868

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 49291.206 ops/s
# Warmup Iteration   2: 104622.538 ops/s
# Warmup Iteration   3: 152452.602 ops/s
# Warmup Iteration   4: 152761.928 ops/s
# Warmup Iteration   5: 153229.376 ops/s
# Warmup Iteration   6: 134036.623 ops/s
# Warmup Iteration   7: 140753.914 ops/s
# Warmup Iteration   8: 152908.485 ops/s
# Warmup Iteration   9: 152971.130 ops/s
# Warmup Iteration  10: 153048.454 ops/s
# Warmup Iteration  11: 153100.889 ops/s
# Warmup Iteration  12: 152998.785 ops/s
# Warmup Iteration  13: 153191.385 ops/s
# Warmup Iteration  14: 153135.710 ops/s
# Warmup Iteration  15: 152813.287 ops/s
# Warmup Iteration  16: 152907.097 ops/s
# Warmup Iteration  17: 152686.639 ops/s
# Warmup Iteration  18: 152580.574 ops/s
# Warmup Iteration  19: 152540.062 ops/s
# Warmup Iteration  20: 152737.371 ops/s
# Warmup Iteration  21: 152679.748 ops/s
# Warmup Iteration  22: 152768.553 ops/s
# Warmup Iteration  23: 152825.877 ops/s
# Warmup Iteration  24: 152884.256 ops/s
# Warmup Iteration  25: 152729.055 ops/s
# Warmup Iteration  26: 152664.996 ops/s
# Warmup Iteration  27: 152831.654 ops/s
# Warmup Iteration  28: 152823.190 ops/s
# Warmup Iteration  29: 152829.201 ops/s
# Warmup Iteration  30: 152888.357 ops/s
Iteration   1: 152648.152 ops/s
Iteration   2: 152760.342 ops/s
Iteration   3: 152726.338 ops/s
Iteration   4: 152605.297 ops/s
Iteration   5: 152816.263 ops/s
Iteration   6: 152553.557 ops/s
Iteration   7: 152955.919 ops/s
Iteration   8: 152679.157 ops/s
Iteration   9: 152813.093 ops/s
Iteration  10: 152774.016 ops/s
Iteration  11: 153099.085 ops/s
Iteration  12: 152531.938 ops/s
Iteration  13: 152671.817 ops/s
Iteration  14: 152862.895 ops/s
Iteration  15: 152713.816 ops/s
Iteration  16: 152654.162 ops/s
Iteration  17: 152504.009 ops/s
Iteration  18: 152786.178 ops/s
Iteration  19: 152504.320 ops/s
Iteration  20: 152742.484 ops/s
Iteration  21: 152822.398 ops/s
Iteration  22: 152955.822 ops/s
Iteration  23: 152665.149 ops/s
Iteration  24: 152967.076 ops/s
Iteration  25: 152746.054 ops/s
Iteration  26: 152838.890 ops/s
Iteration  27: 152845.851 ops/s
Iteration  28: 152507.369 ops/s
Iteration  29: 152917.005 ops/s
Iteration  30: 152467.240 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_868._Benchmark.benchmark_Cluster_868":
  152737.856 ±(99.9%) 105.948 ops/s [Average]
  (min, avg, max) = (152467.240, 152737.856, 153099.085), stdev = 158.577
  CI (99.9%): [152631.909, 152843.804] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_868._Benchmark.benchmark_Cluster_868  thrpt   30  152737.856 ± 105.948  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_869._Benchmark.benchmark_Cluster_869$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_869._Benchmark.benchmark_Cluster_869

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79456.267 ops/s
# Warmup Iteration   2: 119662.489 ops/s
# Warmup Iteration   3: 172335.795 ops/s
# Warmup Iteration   4: 171206.414 ops/s
# Warmup Iteration   5: 172596.709 ops/s
# Warmup Iteration   6: 172577.675 ops/s
# Warmup Iteration   7: 172744.935 ops/s
# Warmup Iteration   8: 137235.422 ops/s
# Warmup Iteration   9: 172039.431 ops/s
# Warmup Iteration  10: 172055.581 ops/s
# Warmup Iteration  11: 172563.335 ops/s
# Warmup Iteration  12: 172952.526 ops/s
# Warmup Iteration  13: 172701.535 ops/s
# Warmup Iteration  14: 172769.808 ops/s
# Warmup Iteration  15: 172634.687 ops/s
# Warmup Iteration  16: 172685.585 ops/s
# Warmup Iteration  17: 177019.997 ops/s
# Warmup Iteration  18: 177115.766 ops/s
# Warmup Iteration  19: 177276.443 ops/s
# Warmup Iteration  20: 176943.091 ops/s
# Warmup Iteration  21: 177324.594 ops/s
# Warmup Iteration  22: 177537.205 ops/s
# Warmup Iteration  23: 176900.010 ops/s
# Warmup Iteration  24: 176984.532 ops/s
# Warmup Iteration  25: 177193.087 ops/s
# Warmup Iteration  26: 176777.669 ops/s
# Warmup Iteration  27: 177386.517 ops/s
# Warmup Iteration  28: 177712.296 ops/s
# Warmup Iteration  29: 177289.349 ops/s
# Warmup Iteration  30: 177468.497 ops/s
Iteration   1: 177191.336 ops/s
Iteration   2: 177041.281 ops/s
Iteration   3: 177571.481 ops/s
Iteration   4: 177237.479 ops/s
Iteration   5: 177697.856 ops/s
Iteration   6: 177265.122 ops/s
Iteration   7: 177156.283 ops/s
Iteration   8: 177368.486 ops/s
Iteration   9: 177151.476 ops/s
Iteration  10: 177841.773 ops/s
Iteration  11: 177540.487 ops/s
Iteration  12: 177240.605 ops/s
Iteration  13: 177785.993 ops/s
Iteration  14: 177463.635 ops/s
Iteration  15: 176685.181 ops/s
Iteration  16: 177602.786 ops/s
Iteration  17: 176820.762 ops/s
Iteration  18: 177207.692 ops/s
Iteration  19: 177144.448 ops/s
Iteration  20: 177511.237 ops/s
Iteration  21: 176977.865 ops/s
Iteration  22: 177012.631 ops/s
Iteration  23: 177311.918 ops/s
Iteration  24: 177208.749 ops/s
Iteration  25: 177353.975 ops/s
Iteration  26: 177464.488 ops/s
Iteration  27: 177219.167 ops/s
Iteration  28: 176665.938 ops/s
Iteration  29: 176815.179 ops/s
Iteration  30: 177036.237 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_869._Benchmark.benchmark_Cluster_869":
  177253.052 ±(99.9%) 201.187 ops/s [Average]
  (min, avg, max) = (176665.938, 177253.052, 177841.773), stdev = 301.127
  CI (99.9%): [177051.864, 177454.239] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_869._Benchmark.benchmark_Cluster_869  thrpt   30  177253.052 ± 201.187  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_87._Benchmark.benchmark_Cluster_87$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_87._Benchmark.benchmark_Cluster_87

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46275.590 ops/s
# Warmup Iteration   2: 114380.613 ops/s
# Warmup Iteration   3: 162838.814 ops/s
# Warmup Iteration   4: 163699.233 ops/s
# Warmup Iteration   5: 147547.596 ops/s
# Warmup Iteration   6: 145908.730 ops/s
# Warmup Iteration   7: 164054.606 ops/s
# Warmup Iteration   8: 164056.872 ops/s
# Warmup Iteration   9: 163696.252 ops/s
# Warmup Iteration  10: 163593.373 ops/s
# Warmup Iteration  11: 164177.187 ops/s
# Warmup Iteration  12: 163953.045 ops/s
# Warmup Iteration  13: 164240.689 ops/s
# Warmup Iteration  14: 164509.132 ops/s
# Warmup Iteration  15: 163948.094 ops/s
# Warmup Iteration  16: 163914.500 ops/s
# Warmup Iteration  17: 163517.566 ops/s
# Warmup Iteration  18: 164110.611 ops/s
# Warmup Iteration  19: 163809.641 ops/s
# Warmup Iteration  20: 163692.225 ops/s
# Warmup Iteration  21: 164337.766 ops/s
# Warmup Iteration  22: 163975.817 ops/s
# Warmup Iteration  23: 163928.310 ops/s
# Warmup Iteration  24: 163709.695 ops/s
# Warmup Iteration  25: 164206.982 ops/s
# Warmup Iteration  26: 163943.694 ops/s
# Warmup Iteration  27: 164255.001 ops/s
# Warmup Iteration  28: 163715.369 ops/s
# Warmup Iteration  29: 163909.020 ops/s
# Warmup Iteration  30: 164214.505 ops/s
Iteration   1: 164594.207 ops/s
Iteration   2: 164004.510 ops/s
Iteration   3: 164084.799 ops/s
Iteration   4: 163884.171 ops/s
Iteration   5: 164049.120 ops/s
Iteration   6: 164282.236 ops/s
Iteration   7: 163668.824 ops/s
Iteration   8: 164217.769 ops/s
Iteration   9: 164215.727 ops/s
Iteration  10: 164894.949 ops/s
Iteration  11: 164290.588 ops/s
Iteration  12: 163464.426 ops/s
Iteration  13: 163700.992 ops/s
Iteration  14: 163940.656 ops/s
Iteration  15: 163767.832 ops/s
Iteration  16: 164001.785 ops/s
Iteration  17: 163298.069 ops/s
Iteration  18: 164121.960 ops/s
Iteration  19: 164277.661 ops/s
Iteration  20: 163811.583 ops/s
Iteration  21: 164429.038 ops/s
Iteration  22: 163796.244 ops/s
Iteration  23: 164408.843 ops/s
Iteration  24: 164401.049 ops/s
Iteration  25: 164551.567 ops/s
Iteration  26: 164361.536 ops/s
Iteration  27: 164241.821 ops/s
Iteration  28: 164318.768 ops/s
Iteration  29: 163371.387 ops/s
Iteration  30: 163651.824 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_87._Benchmark.benchmark_Cluster_87":
  164070.131 ±(99.9%) 251.706 ops/s [Average]
  (min, avg, max) = (163298.069, 164070.131, 164894.949), stdev = 376.741
  CI (99.9%): [163818.426, 164321.837] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_87._Benchmark.benchmark_Cluster_87  thrpt   30  164070.131 ± 251.706  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_870._Benchmark.benchmark_Cluster_870$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_870._Benchmark.benchmark_Cluster_870

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 49863.295 ops/s
# Warmup Iteration   2: 107974.848 ops/s
# Warmup Iteration   3: 139156.380 ops/s
# Warmup Iteration   4: 140168.093 ops/s
# Warmup Iteration   5: 140341.316 ops/s
# Warmup Iteration   6: 111537.911 ops/s
# Warmup Iteration   7: 139976.914 ops/s
# Warmup Iteration   8: 140106.350 ops/s
# Warmup Iteration   9: 140249.583 ops/s
# Warmup Iteration  10: 140396.269 ops/s
# Warmup Iteration  11: 140218.103 ops/s
# Warmup Iteration  12: 139933.502 ops/s
# Warmup Iteration  13: 140361.921 ops/s
# Warmup Iteration  14: 140078.835 ops/s
# Warmup Iteration  15: 139912.136 ops/s
# Warmup Iteration  16: 139917.310 ops/s
# Warmup Iteration  17: 140159.689 ops/s
# Warmup Iteration  18: 140609.684 ops/s
# Warmup Iteration  19: 140172.970 ops/s
# Warmup Iteration  20: 140515.254 ops/s
# Warmup Iteration  21: 140563.860 ops/s
# Warmup Iteration  22: 140395.665 ops/s
# Warmup Iteration  23: 140286.262 ops/s
# Warmup Iteration  24: 140519.541 ops/s
# Warmup Iteration  25: 140367.881 ops/s
# Warmup Iteration  26: 140054.937 ops/s
# Warmup Iteration  27: 140353.887 ops/s
# Warmup Iteration  28: 140521.574 ops/s
# Warmup Iteration  29: 140461.046 ops/s
# Warmup Iteration  30: 140633.607 ops/s
Iteration   1: 140589.994 ops/s
Iteration   2: 140290.706 ops/s
Iteration   3: 140208.237 ops/s
Iteration   4: 140535.501 ops/s
Iteration   5: 140443.989 ops/s
Iteration   6: 140506.458 ops/s
Iteration   7: 140592.649 ops/s
Iteration   8: 140673.554 ops/s
Iteration   9: 140406.203 ops/s
Iteration  10: 140552.104 ops/s
Iteration  11: 140411.028 ops/s
Iteration  12: 140185.260 ops/s
Iteration  13: 140277.828 ops/s
Iteration  14: 139969.725 ops/s
Iteration  15: 139980.755 ops/s
Iteration  16: 140726.859 ops/s
Iteration  17: 140482.328 ops/s
Iteration  18: 140642.819 ops/s
Iteration  19: 140619.037 ops/s
Iteration  20: 140430.975 ops/s
Iteration  21: 140555.955 ops/s
Iteration  22: 140412.756 ops/s
Iteration  23: 140559.703 ops/s
Iteration  24: 140551.971 ops/s
Iteration  25: 140090.503 ops/s
Iteration  26: 140289.357 ops/s
Iteration  27: 140280.359 ops/s
Iteration  28: 140283.879 ops/s
Iteration  29: 140603.057 ops/s
Iteration  30: 140356.547 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_870._Benchmark.benchmark_Cluster_870":
  140417.003 ±(99.9%) 132.378 ops/s [Average]
  (min, avg, max) = (139969.725, 140417.003, 140726.859), stdev = 198.138
  CI (99.9%): [140284.625, 140549.382] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_870._Benchmark.benchmark_Cluster_870  thrpt   30  140417.003 ± 132.378  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_871._Benchmark.benchmark_Cluster_871$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_871._Benchmark.benchmark_Cluster_871

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73354.227 ops/s
# Warmup Iteration   2: 134613.252 ops/s
# Warmup Iteration   3: 211275.784 ops/s
# Warmup Iteration   4: 209743.924 ops/s
# Warmup Iteration   5: 211310.680 ops/s
# Warmup Iteration   6: 210109.814 ops/s
# Warmup Iteration   7: 196844.088 ops/s
# Warmup Iteration   8: 181690.138 ops/s
# Warmup Iteration   9: 211771.381 ops/s
# Warmup Iteration  10: 211584.545 ops/s
# Warmup Iteration  11: 211534.575 ops/s
# Warmup Iteration  12: 211028.192 ops/s
# Warmup Iteration  13: 211487.406 ops/s
# Warmup Iteration  14: 211367.029 ops/s
# Warmup Iteration  15: 211013.349 ops/s
# Warmup Iteration  16: 211137.274 ops/s
# Warmup Iteration  17: 210787.942 ops/s
# Warmup Iteration  18: 210863.867 ops/s
# Warmup Iteration  19: 211242.772 ops/s
# Warmup Iteration  20: 211636.729 ops/s
# Warmup Iteration  21: 210842.909 ops/s
# Warmup Iteration  22: 211066.355 ops/s
# Warmup Iteration  23: 211614.717 ops/s
# Warmup Iteration  24: 211135.203 ops/s
# Warmup Iteration  25: 211013.908 ops/s
# Warmup Iteration  26: 211194.709 ops/s
# Warmup Iteration  27: 211021.545 ops/s
# Warmup Iteration  28: 211081.300 ops/s
# Warmup Iteration  29: 211012.490 ops/s
# Warmup Iteration  30: 210953.977 ops/s
Iteration   1: 210926.090 ops/s
Iteration   2: 210746.810 ops/s
Iteration   3: 211276.581 ops/s
Iteration   4: 211353.039 ops/s
Iteration   5: 210882.085 ops/s
Iteration   6: 211150.868 ops/s
Iteration   7: 211539.176 ops/s
Iteration   8: 211864.268 ops/s
Iteration   9: 211054.827 ops/s
Iteration  10: 211856.400 ops/s
Iteration  11: 210856.194 ops/s
Iteration  12: 211236.510 ops/s
Iteration  13: 210650.177 ops/s
Iteration  14: 210991.068 ops/s
Iteration  15: 211235.968 ops/s
Iteration  16: 211344.840 ops/s
Iteration  17: 211064.498 ops/s
Iteration  18: 211124.457 ops/s
Iteration  19: 211319.510 ops/s
Iteration  20: 211319.543 ops/s
Iteration  21: 211381.835 ops/s
Iteration  22: 211230.238 ops/s
Iteration  23: 210977.108 ops/s
Iteration  24: 211227.508 ops/s
Iteration  25: 211339.327 ops/s
Iteration  26: 211577.630 ops/s
Iteration  27: 211144.848 ops/s
Iteration  28: 211511.731 ops/s
Iteration  29: 211177.668 ops/s
Iteration  30: 211437.519 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_871._Benchmark.benchmark_Cluster_871":
  211226.611 ±(99.9%) 189.951 ops/s [Average]
  (min, avg, max) = (210650.177, 211226.611, 211864.268), stdev = 284.310
  CI (99.9%): [211036.660, 211416.562] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_871._Benchmark.benchmark_Cluster_871  thrpt   30  211226.611 ± 189.951  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_872._Benchmark.benchmark_Cluster_872$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_872._Benchmark.benchmark_Cluster_872

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 102642.791 ops/s
# Warmup Iteration   2: 117040.831 ops/s
# Warmup Iteration   3: 117073.355 ops/s
# Warmup Iteration   4: 149925.702 ops/s
# Warmup Iteration   5: 150141.389 ops/s
# Warmup Iteration   6: 150021.421 ops/s
# Warmup Iteration   7: 149867.257 ops/s
# Warmup Iteration   8: 149046.645 ops/s
# Warmup Iteration   9: 149807.023 ops/s
# Warmup Iteration  10: 149666.123 ops/s
# Warmup Iteration  11: 149861.480 ops/s
# Warmup Iteration  12: 149486.139 ops/s
# Warmup Iteration  13: 149824.695 ops/s
# Warmup Iteration  14: 149753.444 ops/s
# Warmup Iteration  15: 149832.454 ops/s
# Warmup Iteration  16: 149980.311 ops/s
# Warmup Iteration  17: 139877.610 ops/s
# Warmup Iteration  18: 140604.104 ops/s
# Warmup Iteration  19: 155839.349 ops/s
# Warmup Iteration  20: 155692.298 ops/s
# Warmup Iteration  21: 155233.555 ops/s
# Warmup Iteration  22: 155725.405 ops/s
# Warmup Iteration  23: 156270.332 ops/s
# Warmup Iteration  24: 156025.972 ops/s
# Warmup Iteration  25: 155701.077 ops/s
# Warmup Iteration  26: 155894.552 ops/s
# Warmup Iteration  27: 156323.983 ops/s
# Warmup Iteration  28: 155878.236 ops/s
# Warmup Iteration  29: 155741.677 ops/s
# Warmup Iteration  30: 155802.384 ops/s
Iteration   1: 156000.615 ops/s
Iteration   2: 156028.496 ops/s
Iteration   3: 155750.719 ops/s
Iteration   4: 155805.723 ops/s
Iteration   5: 155686.520 ops/s
Iteration   6: 155863.249 ops/s
Iteration   7: 156170.539 ops/s
Iteration   8: 155925.722 ops/s
Iteration   9: 155621.132 ops/s
Iteration  10: 155462.149 ops/s
Iteration  11: 155791.828 ops/s
Iteration  12: 155234.699 ops/s
Iteration  13: 155303.829 ops/s
Iteration  14: 155813.933 ops/s
Iteration  15: 156055.242 ops/s
Iteration  16: 155569.536 ops/s
Iteration  17: 156150.934 ops/s
Iteration  18: 155879.457 ops/s
Iteration  19: 155712.800 ops/s
Iteration  20: 156160.206 ops/s
Iteration  21: 155783.604 ops/s
Iteration  22: 155876.445 ops/s
Iteration  23: 156115.074 ops/s
Iteration  24: 156085.688 ops/s
Iteration  25: 155849.704 ops/s
Iteration  26: 155844.736 ops/s
Iteration  27: 155772.414 ops/s
Iteration  28: 156036.854 ops/s
Iteration  29: 155571.824 ops/s
Iteration  30: 156026.406 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_872._Benchmark.benchmark_Cluster_872":
  155831.669 ±(99.9%) 160.984 ops/s [Average]
  (min, avg, max) = (155234.699, 155831.669, 156170.539), stdev = 240.954
  CI (99.9%): [155670.685, 155992.654] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_872._Benchmark.benchmark_Cluster_872  thrpt   30  155831.669 ± 160.984  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_873._Benchmark.benchmark_Cluster_873$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_873._Benchmark.benchmark_Cluster_873

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75505.766 ops/s
# Warmup Iteration   2: 130850.973 ops/s
# Warmup Iteration   3: 193639.678 ops/s
# Warmup Iteration   4: 192198.739 ops/s
# Warmup Iteration   5: 193835.144 ops/s
# Warmup Iteration   6: 193585.595 ops/s
# Warmup Iteration   7: 152689.202 ops/s
# Warmup Iteration   8: 194051.924 ops/s
# Warmup Iteration   9: 194089.606 ops/s
# Warmup Iteration  10: 194097.087 ops/s
# Warmup Iteration  11: 193928.747 ops/s
# Warmup Iteration  12: 193893.803 ops/s
# Warmup Iteration  13: 193934.026 ops/s
# Warmup Iteration  14: 193806.823 ops/s
# Warmup Iteration  15: 194085.505 ops/s
# Warmup Iteration  16: 194042.584 ops/s
# Warmup Iteration  17: 194028.234 ops/s
# Warmup Iteration  18: 194155.991 ops/s
# Warmup Iteration  19: 193796.665 ops/s
# Warmup Iteration  20: 194169.680 ops/s
# Warmup Iteration  21: 194198.940 ops/s
# Warmup Iteration  22: 194661.454 ops/s
# Warmup Iteration  23: 194202.844 ops/s
# Warmup Iteration  24: 194267.978 ops/s
# Warmup Iteration  25: 194236.776 ops/s
# Warmup Iteration  26: 194188.635 ops/s
# Warmup Iteration  27: 193691.239 ops/s
# Warmup Iteration  28: 193922.448 ops/s
# Warmup Iteration  29: 194073.666 ops/s
# Warmup Iteration  30: 194111.263 ops/s
Iteration   1: 194296.488 ops/s
Iteration   2: 194119.563 ops/s
Iteration   3: 194349.447 ops/s
Iteration   4: 193976.370 ops/s
Iteration   5: 194128.349 ops/s
Iteration   6: 194030.209 ops/s
Iteration   7: 194127.626 ops/s
Iteration   8: 193955.797 ops/s
Iteration   9: 194245.394 ops/s
Iteration  10: 193974.606 ops/s
Iteration  11: 194377.746 ops/s
Iteration  12: 193828.739 ops/s
Iteration  13: 194104.641 ops/s
Iteration  14: 194054.450 ops/s
Iteration  15: 194400.921 ops/s
Iteration  16: 194106.481 ops/s
Iteration  17: 194974.403 ops/s
Iteration  18: 194268.266 ops/s
Iteration  19: 194251.623 ops/s
Iteration  20: 193914.497 ops/s
Iteration  21: 194191.834 ops/s
Iteration  22: 193924.043 ops/s
Iteration  23: 194502.853 ops/s
Iteration  24: 194027.375 ops/s
Iteration  25: 194299.842 ops/s
Iteration  26: 194052.794 ops/s
Iteration  27: 194296.194 ops/s
Iteration  28: 193847.501 ops/s
Iteration  29: 193917.202 ops/s
Iteration  30: 193917.176 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_873._Benchmark.benchmark_Cluster_873":
  194148.748 ±(99.9%) 157.969 ops/s [Average]
  (min, avg, max) = (193828.739, 194148.748, 194974.403), stdev = 236.441
  CI (99.9%): [193990.778, 194306.717] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_873._Benchmark.benchmark_Cluster_873  thrpt   30  194148.748 ± 157.969  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_874._Benchmark.benchmark_Cluster_874$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_874._Benchmark.benchmark_Cluster_874

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66552.709 ops/s
# Warmup Iteration   2: 94016.954 ops/s
# Warmup Iteration   3: 156490.526 ops/s
# Warmup Iteration   4: 155064.565 ops/s
# Warmup Iteration   5: 155386.053 ops/s
# Warmup Iteration   6: 155903.623 ops/s
# Warmup Iteration   7: 156031.899 ops/s
# Warmup Iteration   8: 135658.525 ops/s
# Warmup Iteration   9: 141413.173 ops/s
# Warmup Iteration  10: 155920.683 ops/s
# Warmup Iteration  11: 155998.391 ops/s
# Warmup Iteration  12: 156044.736 ops/s
# Warmup Iteration  13: 155576.956 ops/s
# Warmup Iteration  14: 155888.997 ops/s
# Warmup Iteration  15: 155604.698 ops/s
# Warmup Iteration  16: 155853.637 ops/s
# Warmup Iteration  17: 160482.660 ops/s
# Warmup Iteration  18: 160317.019 ops/s
# Warmup Iteration  19: 159899.970 ops/s
# Warmup Iteration  20: 159843.457 ops/s
# Warmup Iteration  21: 160059.439 ops/s
# Warmup Iteration  22: 160283.736 ops/s
# Warmup Iteration  23: 160160.399 ops/s
# Warmup Iteration  24: 159913.676 ops/s
# Warmup Iteration  25: 160545.730 ops/s
# Warmup Iteration  26: 160108.335 ops/s
# Warmup Iteration  27: 160126.218 ops/s
# Warmup Iteration  28: 160285.605 ops/s
# Warmup Iteration  29: 160403.163 ops/s
# Warmup Iteration  30: 159907.700 ops/s
Iteration   1: 160384.176 ops/s
Iteration   2: 160463.138 ops/s
Iteration   3: 160193.109 ops/s
Iteration   4: 160575.793 ops/s
Iteration   5: 159648.501 ops/s
Iteration   6: 159974.813 ops/s
Iteration   7: 160396.540 ops/s
Iteration   8: 160183.620 ops/s
Iteration   9: 160467.216 ops/s
Iteration  10: 160364.283 ops/s
Iteration  11: 160376.905 ops/s
Iteration  12: 160090.016 ops/s
Iteration  13: 159937.288 ops/s
Iteration  14: 159945.282 ops/s
Iteration  15: 159947.297 ops/s
Iteration  16: 160428.677 ops/s
Iteration  17: 160098.886 ops/s
Iteration  18: 159945.408 ops/s
Iteration  19: 159570.756 ops/s
Iteration  20: 160032.665 ops/s
Iteration  21: 160257.142 ops/s
Iteration  22: 159396.816 ops/s
Iteration  23: 160017.350 ops/s
Iteration  24: 160120.721 ops/s
Iteration  25: 160054.271 ops/s
Iteration  26: 160003.321 ops/s
Iteration  27: 159648.667 ops/s
Iteration  28: 160111.566 ops/s
Iteration  29: 160273.713 ops/s
Iteration  30: 160328.724 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_874._Benchmark.benchmark_Cluster_874":
  160107.889 ±(99.9%) 190.440 ops/s [Average]
  (min, avg, max) = (159396.816, 160107.889, 160575.793), stdev = 285.041
  CI (99.9%): [159917.449, 160298.328] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_874._Benchmark.benchmark_Cluster_874  thrpt   30  160107.889 ± 190.440  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_875._Benchmark.benchmark_Cluster_875$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_875._Benchmark.benchmark_Cluster_875

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 44402.322 ops/s
# Warmup Iteration   2: 133748.175 ops/s
# Warmup Iteration   3: 161935.112 ops/s
# Warmup Iteration   4: 129083.734 ops/s
# Warmup Iteration   5: 163173.741 ops/s
# Warmup Iteration   6: 163631.535 ops/s
# Warmup Iteration   7: 163477.511 ops/s
# Warmup Iteration   8: 163725.021 ops/s
# Warmup Iteration   9: 163660.096 ops/s
# Warmup Iteration  10: 163353.009 ops/s
# Warmup Iteration  11: 163971.709 ops/s
# Warmup Iteration  12: 163593.658 ops/s
# Warmup Iteration  13: 163608.145 ops/s
# Warmup Iteration  14: 163673.086 ops/s
# Warmup Iteration  15: 164090.347 ops/s
# Warmup Iteration  16: 163895.345 ops/s
# Warmup Iteration  17: 163243.746 ops/s
# Warmup Iteration  18: 163245.783 ops/s
# Warmup Iteration  19: 163374.500 ops/s
# Warmup Iteration  20: 163374.035 ops/s
# Warmup Iteration  21: 163148.350 ops/s
# Warmup Iteration  22: 163149.188 ops/s
# Warmup Iteration  23: 163720.558 ops/s
# Warmup Iteration  24: 163390.321 ops/s
# Warmup Iteration  25: 163313.092 ops/s
# Warmup Iteration  26: 163178.724 ops/s
# Warmup Iteration  27: 163171.948 ops/s
# Warmup Iteration  28: 163128.887 ops/s
# Warmup Iteration  29: 163284.449 ops/s
# Warmup Iteration  30: 163371.480 ops/s
Iteration   1: 162974.450 ops/s
Iteration   2: 163790.091 ops/s
Iteration   3: 163249.404 ops/s
Iteration   4: 163564.766 ops/s
Iteration   5: 163424.563 ops/s
Iteration   6: 163269.075 ops/s
Iteration   7: 162635.534 ops/s
Iteration   8: 163388.524 ops/s
Iteration   9: 163474.403 ops/s
Iteration  10: 162729.256 ops/s
Iteration  11: 163502.319 ops/s
Iteration  12: 162657.048 ops/s
Iteration  13: 162390.229 ops/s
Iteration  14: 162539.748 ops/s
Iteration  15: 162782.806 ops/s
Iteration  16: 162626.172 ops/s
Iteration  17: 162751.595 ops/s
Iteration  18: 162286.314 ops/s
Iteration  19: 163301.792 ops/s
Iteration  20: 163862.821 ops/s
Iteration  21: 163718.563 ops/s
Iteration  22: 163383.474 ops/s
Iteration  23: 163727.311 ops/s
Iteration  24: 163445.333 ops/s
Iteration  25: 163268.886 ops/s
Iteration  26: 162720.997 ops/s
Iteration  27: 162922.618 ops/s
Iteration  28: 163670.313 ops/s
Iteration  29: 163718.567 ops/s
Iteration  30: 163164.364 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_875._Benchmark.benchmark_Cluster_875":
  163164.711 ±(99.9%) 306.760 ops/s [Average]
  (min, avg, max) = (162286.314, 163164.711, 163862.821), stdev = 459.143
  CI (99.9%): [162857.952, 163471.471] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_875._Benchmark.benchmark_Cluster_875  thrpt   30  163164.711 ± 306.760  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_876._Benchmark.benchmark_Cluster_876$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_876._Benchmark.benchmark_Cluster_876

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 110026.745 ops/s
# Warmup Iteration   2: 117831.249 ops/s
# Warmup Iteration   3: 122429.912 ops/s
# Warmup Iteration   4: 153682.113 ops/s
# Warmup Iteration   5: 153337.112 ops/s
# Warmup Iteration   6: 152514.377 ops/s
# Warmup Iteration   7: 152368.022 ops/s
# Warmup Iteration   8: 151363.267 ops/s
# Warmup Iteration   9: 153122.136 ops/s
# Warmup Iteration  10: 152669.658 ops/s
# Warmup Iteration  11: 152941.515 ops/s
# Warmup Iteration  12: 152827.605 ops/s
# Warmup Iteration  13: 152518.395 ops/s
# Warmup Iteration  14: 152753.879 ops/s
# Warmup Iteration  15: 152954.801 ops/s
# Warmup Iteration  16: 150778.182 ops/s
# Warmup Iteration  17: 127519.202 ops/s
# Warmup Iteration  18: 159530.184 ops/s
# Warmup Iteration  19: 159401.895 ops/s
# Warmup Iteration  20: 159688.916 ops/s
# Warmup Iteration  21: 159968.927 ops/s
# Warmup Iteration  22: 159758.173 ops/s
# Warmup Iteration  23: 159072.337 ops/s
# Warmup Iteration  24: 158994.078 ops/s
# Warmup Iteration  25: 159787.195 ops/s
# Warmup Iteration  26: 159803.276 ops/s
# Warmup Iteration  27: 159803.287 ops/s
# Warmup Iteration  28: 159619.962 ops/s
# Warmup Iteration  29: 159683.228 ops/s
# Warmup Iteration  30: 159879.018 ops/s
Iteration   1: 159783.819 ops/s
Iteration   2: 159780.772 ops/s
Iteration   3: 159891.948 ops/s
Iteration   4: 160042.423 ops/s
Iteration   5: 159426.019 ops/s
Iteration   6: 159187.966 ops/s
Iteration   7: 159637.603 ops/s
Iteration   8: 159719.271 ops/s
Iteration   9: 159915.978 ops/s
Iteration  10: 159843.847 ops/s
Iteration  11: 159728.193 ops/s
Iteration  12: 159927.008 ops/s
Iteration  13: 159625.163 ops/s
Iteration  14: 159414.337 ops/s
Iteration  15: 159712.230 ops/s
Iteration  16: 159989.434 ops/s
Iteration  17: 159760.831 ops/s
Iteration  18: 159676.557 ops/s
Iteration  19: 159290.534 ops/s
Iteration  20: 159295.020 ops/s
Iteration  21: 159217.532 ops/s
Iteration  22: 159376.844 ops/s
Iteration  23: 160059.471 ops/s
Iteration  24: 159808.476 ops/s
Iteration  25: 158910.928 ops/s
Iteration  26: 158795.684 ops/s
Iteration  27: 159094.863 ops/s
Iteration  28: 159053.708 ops/s
Iteration  29: 159143.873 ops/s
Iteration  30: 159655.816 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_876._Benchmark.benchmark_Cluster_876":
  159558.872 ±(99.9%) 233.826 ops/s [Average]
  (min, avg, max) = (158795.684, 159558.872, 160059.471), stdev = 349.979
  CI (99.9%): [159325.046, 159792.697] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_876._Benchmark.benchmark_Cluster_876  thrpt   30  159558.872 ± 233.826  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_877._Benchmark.benchmark_Cluster_877$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_877._Benchmark.benchmark_Cluster_877

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57928.254 ops/s
# Warmup Iteration   2: 113728.972 ops/s
# Warmup Iteration   3: 151199.569 ops/s
# Warmup Iteration   4: 152447.251 ops/s
# Warmup Iteration   5: 152725.089 ops/s
# Warmup Iteration   6: 121318.680 ops/s
# Warmup Iteration   7: 152385.896 ops/s
# Warmup Iteration   8: 152512.386 ops/s
# Warmup Iteration   9: 152196.514 ops/s
# Warmup Iteration  10: 152222.132 ops/s
# Warmup Iteration  11: 152498.578 ops/s
# Warmup Iteration  12: 152470.225 ops/s
# Warmup Iteration  13: 152166.796 ops/s
# Warmup Iteration  14: 152501.088 ops/s
# Warmup Iteration  15: 152410.714 ops/s
# Warmup Iteration  16: 152541.171 ops/s
# Warmup Iteration  17: 153213.227 ops/s
# Warmup Iteration  18: 153081.720 ops/s
# Warmup Iteration  19: 153169.052 ops/s
# Warmup Iteration  20: 153386.053 ops/s
# Warmup Iteration  21: 152885.637 ops/s
# Warmup Iteration  22: 153200.579 ops/s
# Warmup Iteration  23: 153071.958 ops/s
# Warmup Iteration  24: 153285.939 ops/s
# Warmup Iteration  25: 153092.695 ops/s
# Warmup Iteration  26: 152904.784 ops/s
# Warmup Iteration  27: 152725.642 ops/s
# Warmup Iteration  28: 153049.858 ops/s
# Warmup Iteration  29: 153145.599 ops/s
# Warmup Iteration  30: 153130.378 ops/s
Iteration   1: 152856.147 ops/s
Iteration   2: 153122.990 ops/s
Iteration   3: 152709.972 ops/s
Iteration   4: 152989.004 ops/s
Iteration   5: 152824.323 ops/s
Iteration   6: 152976.069 ops/s
Iteration   7: 153090.340 ops/s
Iteration   8: 152907.613 ops/s
Iteration   9: 153176.812 ops/s
Iteration  10: 152789.714 ops/s
Iteration  11: 152941.462 ops/s
Iteration  12: 153137.595 ops/s
Iteration  13: 152716.331 ops/s
Iteration  14: 152805.523 ops/s
Iteration  15: 152680.727 ops/s
Iteration  16: 152807.694 ops/s
Iteration  17: 152789.003 ops/s
Iteration  18: 152871.617 ops/s
Iteration  19: 153104.828 ops/s
Iteration  20: 152744.625 ops/s
Iteration  21: 153318.072 ops/s
Iteration  22: 152868.837 ops/s
Iteration  23: 152930.212 ops/s
Iteration  24: 153434.350 ops/s
Iteration  25: 152781.126 ops/s
Iteration  26: 152883.473 ops/s
Iteration  27: 152772.802 ops/s
Iteration  28: 152893.652 ops/s
Iteration  29: 152961.990 ops/s
Iteration  30: 153084.279 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_877._Benchmark.benchmark_Cluster_877":
  152932.373 ±(99.9%) 122.071 ops/s [Average]
  (min, avg, max) = (152680.727, 152932.373, 153434.350), stdev = 182.710
  CI (99.9%): [152810.302, 153054.444] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_877._Benchmark.benchmark_Cluster_877  thrpt   30  152932.373 ± 122.071  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_878._Benchmark.benchmark_Cluster_878$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_878._Benchmark.benchmark_Cluster_878

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55039.803 ops/s
# Warmup Iteration   2: 120790.898 ops/s
# Warmup Iteration   3: 185935.776 ops/s
# Warmup Iteration   4: 184452.772 ops/s
# Warmup Iteration   5: 185762.627 ops/s
# Warmup Iteration   6: 167839.731 ops/s
# Warmup Iteration   7: 164762.547 ops/s
# Warmup Iteration   8: 185543.378 ops/s
# Warmup Iteration   9: 185842.790 ops/s
# Warmup Iteration  10: 186123.817 ops/s
# Warmup Iteration  11: 186068.170 ops/s
# Warmup Iteration  12: 186007.328 ops/s
# Warmup Iteration  13: 185641.612 ops/s
# Warmup Iteration  14: 185970.382 ops/s
# Warmup Iteration  15: 186085.080 ops/s
# Warmup Iteration  16: 185700.510 ops/s
# Warmup Iteration  17: 185762.088 ops/s
# Warmup Iteration  18: 186079.178 ops/s
# Warmup Iteration  19: 186299.986 ops/s
# Warmup Iteration  20: 185842.906 ops/s
# Warmup Iteration  21: 186068.275 ops/s
# Warmup Iteration  22: 186140.809 ops/s
# Warmup Iteration  23: 186091.396 ops/s
# Warmup Iteration  24: 186210.834 ops/s
# Warmup Iteration  25: 186277.262 ops/s
# Warmup Iteration  26: 186057.386 ops/s
# Warmup Iteration  27: 186174.377 ops/s
# Warmup Iteration  28: 185972.690 ops/s
# Warmup Iteration  29: 186196.430 ops/s
# Warmup Iteration  30: 186179.641 ops/s
Iteration   1: 186184.580 ops/s
Iteration   2: 186244.083 ops/s
Iteration   3: 186418.564 ops/s
Iteration   4: 186057.599 ops/s
Iteration   5: 186433.891 ops/s
Iteration   6: 186214.184 ops/s
Iteration   7: 186131.903 ops/s
Iteration   8: 186165.401 ops/s
Iteration   9: 186225.424 ops/s
Iteration  10: 186385.251 ops/s
Iteration  11: 186370.575 ops/s
Iteration  12: 185985.675 ops/s
Iteration  13: 186049.556 ops/s
Iteration  14: 186255.671 ops/s
Iteration  15: 186127.985 ops/s
Iteration  16: 186486.391 ops/s
Iteration  17: 186346.250 ops/s
Iteration  18: 186199.049 ops/s
Iteration  19: 186056.360 ops/s
Iteration  20: 186477.978 ops/s
Iteration  21: 185806.862 ops/s
Iteration  22: 186003.600 ops/s
Iteration  23: 185850.521 ops/s
Iteration  24: 186299.424 ops/s
Iteration  25: 186223.217 ops/s
Iteration  26: 185903.677 ops/s
Iteration  27: 186093.607 ops/s
Iteration  28: 186020.899 ops/s
Iteration  29: 186258.055 ops/s
Iteration  30: 186277.992 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_878._Benchmark.benchmark_Cluster_878":
  186185.141 ±(99.9%) 119.832 ops/s [Average]
  (min, avg, max) = (185806.862, 186185.141, 186486.391), stdev = 179.359
  CI (99.9%): [186065.309, 186304.973] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_878._Benchmark.benchmark_Cluster_878  thrpt   30  186185.141 ± 119.832  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_879._Benchmark.benchmark_Cluster_879$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_879._Benchmark.benchmark_Cluster_879

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69000.294 ops/s
# Warmup Iteration   2: 124542.189 ops/s
# Warmup Iteration   3: 185109.842 ops/s
# Warmup Iteration   4: 183628.391 ops/s
# Warmup Iteration   5: 185085.366 ops/s
# Warmup Iteration   6: 185214.681 ops/s
# Warmup Iteration   7: 145751.125 ops/s
# Warmup Iteration   8: 185361.561 ops/s
# Warmup Iteration   9: 185407.146 ops/s
# Warmup Iteration  10: 185401.758 ops/s
# Warmup Iteration  11: 184955.613 ops/s
# Warmup Iteration  12: 185567.770 ops/s
# Warmup Iteration  13: 185594.861 ops/s
# Warmup Iteration  14: 185257.775 ops/s
# Warmup Iteration  15: 185112.140 ops/s
# Warmup Iteration  16: 185282.936 ops/s
# Warmup Iteration  17: 185582.406 ops/s
# Warmup Iteration  18: 185565.929 ops/s
# Warmup Iteration  19: 185595.137 ops/s
# Warmup Iteration  20: 185191.983 ops/s
# Warmup Iteration  21: 185693.017 ops/s
# Warmup Iteration  22: 185418.910 ops/s
# Warmup Iteration  23: 185621.493 ops/s
# Warmup Iteration  24: 185618.418 ops/s
# Warmup Iteration  25: 185436.696 ops/s
# Warmup Iteration  26: 185551.635 ops/s
# Warmup Iteration  27: 185303.802 ops/s
# Warmup Iteration  28: 185309.820 ops/s
# Warmup Iteration  29: 185477.370 ops/s
# Warmup Iteration  30: 185632.594 ops/s
Iteration   1: 185325.609 ops/s
Iteration   2: 185392.480 ops/s
Iteration   3: 185390.779 ops/s
Iteration   4: 185768.117 ops/s
Iteration   5: 185606.231 ops/s
Iteration   6: 185790.676 ops/s
Iteration   7: 185542.412 ops/s
Iteration   8: 185801.886 ops/s
Iteration   9: 185600.783 ops/s
Iteration  10: 185045.953 ops/s
Iteration  11: 185304.876 ops/s
Iteration  12: 185848.371 ops/s
Iteration  13: 185436.921 ops/s
Iteration  14: 185621.250 ops/s
Iteration  15: 185545.352 ops/s
Iteration  16: 185496.598 ops/s
Iteration  17: 185505.554 ops/s
Iteration  18: 185726.797 ops/s
Iteration  19: 185650.746 ops/s
Iteration  20: 185099.368 ops/s
Iteration  21: 185547.375 ops/s
Iteration  22: 184884.058 ops/s
Iteration  23: 185777.315 ops/s
Iteration  24: 185624.968 ops/s
Iteration  25: 185805.354 ops/s
Iteration  26: 185484.457 ops/s
Iteration  27: 185799.452 ops/s
Iteration  28: 185477.709 ops/s
Iteration  29: 185604.674 ops/s
Iteration  30: 185591.213 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_879._Benchmark.benchmark_Cluster_879":
  185536.578 ±(99.9%) 156.078 ops/s [Average]
  (min, avg, max) = (184884.058, 185536.578, 185848.371), stdev = 233.610
  CI (99.9%): [185380.500, 185692.656] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_879._Benchmark.benchmark_Cluster_879  thrpt   30  185536.578 ± 156.078  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_88._Benchmark.benchmark_Cluster_88$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_88._Benchmark.benchmark_Cluster_88

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63000.165 ops/s
# Warmup Iteration   2: 91270.666 ops/s
# Warmup Iteration   3: 147552.561 ops/s
# Warmup Iteration   4: 149687.719 ops/s
# Warmup Iteration   5: 147215.128 ops/s
# Warmup Iteration   6: 149470.729 ops/s
# Warmup Iteration   7: 149774.322 ops/s
# Warmup Iteration   8: 150066.715 ops/s
# Warmup Iteration   9: 124949.692 ops/s
# Warmup Iteration  10: 141982.176 ops/s
# Warmup Iteration  11: 149293.189 ops/s
# Warmup Iteration  12: 149568.206 ops/s
# Warmup Iteration  13: 149594.791 ops/s
# Warmup Iteration  14: 149540.341 ops/s
# Warmup Iteration  15: 148823.977 ops/s
# Warmup Iteration  16: 149168.446 ops/s
# Warmup Iteration  17: 155163.693 ops/s
# Warmup Iteration  18: 154750.694 ops/s
# Warmup Iteration  19: 155167.867 ops/s
# Warmup Iteration  20: 154882.447 ops/s
# Warmup Iteration  21: 154455.936 ops/s
# Warmup Iteration  22: 155307.271 ops/s
# Warmup Iteration  23: 155490.119 ops/s
# Warmup Iteration  24: 155452.552 ops/s
# Warmup Iteration  25: 155051.759 ops/s
# Warmup Iteration  26: 155167.421 ops/s
# Warmup Iteration  27: 154910.201 ops/s
# Warmup Iteration  28: 155211.650 ops/s
# Warmup Iteration  29: 154907.335 ops/s
# Warmup Iteration  30: 154380.749 ops/s
Iteration   1: 154068.610 ops/s
Iteration   2: 155409.448 ops/s
Iteration   3: 155429.424 ops/s
Iteration   4: 154953.375 ops/s
Iteration   5: 155560.297 ops/s
Iteration   6: 155466.763 ops/s
Iteration   7: 155223.661 ops/s
Iteration   8: 155527.740 ops/s
Iteration   9: 155222.946 ops/s
Iteration  10: 154347.094 ops/s
Iteration  11: 155087.648 ops/s
Iteration  12: 154578.841 ops/s
Iteration  13: 154822.827 ops/s
Iteration  14: 155070.850 ops/s
Iteration  15: 155508.693 ops/s
Iteration  16: 155411.728 ops/s
Iteration  17: 154356.188 ops/s
Iteration  18: 155621.726 ops/s
Iteration  19: 155276.436 ops/s
Iteration  20: 154772.992 ops/s
Iteration  21: 155005.563 ops/s
Iteration  22: 154401.650 ops/s
Iteration  23: 154172.884 ops/s
Iteration  24: 154358.426 ops/s
Iteration  25: 154506.807 ops/s
Iteration  26: 154820.862 ops/s
Iteration  27: 155041.277 ops/s
Iteration  28: 155243.138 ops/s
Iteration  29: 154748.488 ops/s
Iteration  30: 154122.674 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_88._Benchmark.benchmark_Cluster_88":
  154937.969 ±(99.9%) 319.796 ops/s [Average]
  (min, avg, max) = (154068.610, 154937.969, 155621.726), stdev = 478.656
  CI (99.9%): [154618.172, 155257.765] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_88._Benchmark.benchmark_Cluster_88  thrpt   30  154937.969 ± 319.796  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_880._Benchmark.benchmark_Cluster_880$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_880._Benchmark.benchmark_Cluster_880

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76808.301 ops/s
# Warmup Iteration   2: 118539.859 ops/s
# Warmup Iteration   3: 187590.260 ops/s
# Warmup Iteration   4: 185306.218 ops/s
# Warmup Iteration   5: 186719.761 ops/s
# Warmup Iteration   6: 186794.791 ops/s
# Warmup Iteration   7: 186830.175 ops/s
# Warmup Iteration   8: 145703.017 ops/s
# Warmup Iteration   9: 187190.681 ops/s
# Warmup Iteration  10: 186505.983 ops/s
# Warmup Iteration  11: 186687.199 ops/s
# Warmup Iteration  12: 186731.289 ops/s
# Warmup Iteration  13: 186940.443 ops/s
# Warmup Iteration  14: 187245.591 ops/s
# Warmup Iteration  15: 186995.586 ops/s
# Warmup Iteration  16: 186721.801 ops/s
# Warmup Iteration  17: 189917.409 ops/s
# Warmup Iteration  18: 189455.434 ops/s
# Warmup Iteration  19: 189771.180 ops/s
# Warmup Iteration  20: 189766.932 ops/s
# Warmup Iteration  21: 189583.470 ops/s
# Warmup Iteration  22: 189657.907 ops/s
# Warmup Iteration  23: 189486.548 ops/s
# Warmup Iteration  24: 189878.697 ops/s
# Warmup Iteration  25: 190143.481 ops/s
# Warmup Iteration  26: 189282.133 ops/s
# Warmup Iteration  27: 189524.508 ops/s
# Warmup Iteration  28: 189531.243 ops/s
# Warmup Iteration  29: 189789.074 ops/s
# Warmup Iteration  30: 189689.249 ops/s
Iteration   1: 189870.968 ops/s
Iteration   2: 189684.025 ops/s
Iteration   3: 189391.845 ops/s
Iteration   4: 190145.284 ops/s
Iteration   5: 190034.460 ops/s
Iteration   6: 189233.909 ops/s
Iteration   7: 189801.192 ops/s
Iteration   8: 189323.496 ops/s
Iteration   9: 189834.908 ops/s
Iteration  10: 189798.191 ops/s
Iteration  11: 189746.426 ops/s
Iteration  12: 189556.042 ops/s
Iteration  13: 189612.862 ops/s
Iteration  14: 189337.015 ops/s
Iteration  15: 189739.092 ops/s
Iteration  16: 189798.201 ops/s
Iteration  17: 189807.077 ops/s
Iteration  18: 189360.661 ops/s
Iteration  19: 189630.456 ops/s
Iteration  20: 189426.051 ops/s
Iteration  21: 190240.812 ops/s
Iteration  22: 190079.525 ops/s
Iteration  23: 189527.678 ops/s
Iteration  24: 189764.211 ops/s
Iteration  25: 189845.400 ops/s
Iteration  26: 190289.877 ops/s
Iteration  27: 189701.098 ops/s
Iteration  28: 189468.350 ops/s
Iteration  29: 189706.581 ops/s
Iteration  30: 189654.843 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_880._Benchmark.benchmark_Cluster_880":
  189713.685 ±(99.9%) 179.836 ops/s [Average]
  (min, avg, max) = (189233.909, 189713.685, 190289.877), stdev = 269.170
  CI (99.9%): [189533.849, 189893.521] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_880._Benchmark.benchmark_Cluster_880  thrpt   30  189713.685 ± 179.836  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_881._Benchmark.benchmark_Cluster_881$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_881._Benchmark.benchmark_Cluster_881

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65462.672 ops/s
# Warmup Iteration   2: 139984.772 ops/s
# Warmup Iteration   3: 189835.961 ops/s
# Warmup Iteration   4: 190768.146 ops/s
# Warmup Iteration   5: 190687.436 ops/s
# Warmup Iteration   6: 151605.780 ops/s
# Warmup Iteration   7: 191345.933 ops/s
# Warmup Iteration   8: 191120.035 ops/s
# Warmup Iteration   9: 191268.547 ops/s
# Warmup Iteration  10: 191056.505 ops/s
# Warmup Iteration  11: 191148.732 ops/s
# Warmup Iteration  12: 191374.001 ops/s
# Warmup Iteration  13: 191211.848 ops/s
# Warmup Iteration  14: 190771.180 ops/s
# Warmup Iteration  15: 191258.084 ops/s
# Warmup Iteration  16: 191229.484 ops/s
# Warmup Iteration  17: 191144.091 ops/s
# Warmup Iteration  18: 190851.181 ops/s
# Warmup Iteration  19: 191360.960 ops/s
# Warmup Iteration  20: 190979.110 ops/s
# Warmup Iteration  21: 190909.191 ops/s
# Warmup Iteration  22: 190955.984 ops/s
# Warmup Iteration  23: 190813.554 ops/s
# Warmup Iteration  24: 191465.812 ops/s
# Warmup Iteration  25: 191321.316 ops/s
# Warmup Iteration  26: 190614.242 ops/s
# Warmup Iteration  27: 191186.113 ops/s
# Warmup Iteration  28: 190521.284 ops/s
# Warmup Iteration  29: 190890.732 ops/s
# Warmup Iteration  30: 191149.237 ops/s
Iteration   1: 191427.059 ops/s
Iteration   2: 190994.968 ops/s
Iteration   3: 191577.872 ops/s
Iteration   4: 190327.306 ops/s
Iteration   5: 190565.903 ops/s
Iteration   6: 190771.163 ops/s
Iteration   7: 190967.490 ops/s
Iteration   8: 190700.452 ops/s
Iteration   9: 191072.782 ops/s
Iteration  10: 190814.668 ops/s
Iteration  11: 190719.133 ops/s
Iteration  12: 191004.882 ops/s
Iteration  13: 191315.172 ops/s
Iteration  14: 191025.718 ops/s
Iteration  15: 190818.806 ops/s
Iteration  16: 190396.450 ops/s
Iteration  17: 190836.916 ops/s
Iteration  18: 191202.457 ops/s
Iteration  19: 191442.775 ops/s
Iteration  20: 191148.723 ops/s
Iteration  21: 190871.364 ops/s
Iteration  22: 190844.987 ops/s
Iteration  23: 191083.320 ops/s
Iteration  24: 190595.233 ops/s
Iteration  25: 190729.199 ops/s
Iteration  26: 190548.712 ops/s
Iteration  27: 190630.109 ops/s
Iteration  28: 190826.308 ops/s
Iteration  29: 190674.293 ops/s
Iteration  30: 191022.791 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_881._Benchmark.benchmark_Cluster_881":
  190898.567 ±(99.9%) 202.160 ops/s [Average]
  (min, avg, max) = (190327.306, 190898.567, 191577.872), stdev = 302.583
  CI (99.9%): [190696.407, 191100.727] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_881._Benchmark.benchmark_Cluster_881  thrpt   30  190898.567 ± 202.160  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_882._Benchmark.benchmark_Cluster_882$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_882._Benchmark.benchmark_Cluster_882

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 98690.719 ops/s
# Warmup Iteration   2: 111897.760 ops/s
# Warmup Iteration   3: 131607.708 ops/s
# Warmup Iteration   4: 154079.128 ops/s
# Warmup Iteration   5: 153798.192 ops/s
# Warmup Iteration   6: 153041.808 ops/s
# Warmup Iteration   7: 153123.269 ops/s
# Warmup Iteration   8: 153558.310 ops/s
# Warmup Iteration   9: 154286.010 ops/s
# Warmup Iteration  10: 153654.457 ops/s
# Warmup Iteration  11: 153869.706 ops/s
# Warmup Iteration  12: 153642.901 ops/s
# Warmup Iteration  13: 153504.158 ops/s
# Warmup Iteration  14: 121500.702 ops/s
# Warmup Iteration  15: 153848.289 ops/s
# Warmup Iteration  16: 154068.308 ops/s
# Warmup Iteration  17: 162385.311 ops/s
# Warmup Iteration  18: 162547.073 ops/s
# Warmup Iteration  19: 162053.108 ops/s
# Warmup Iteration  20: 162274.183 ops/s
# Warmup Iteration  21: 162372.192 ops/s
# Warmup Iteration  22: 162105.992 ops/s
# Warmup Iteration  23: 162212.497 ops/s
# Warmup Iteration  24: 162348.031 ops/s
# Warmup Iteration  25: 162001.870 ops/s
# Warmup Iteration  26: 162090.072 ops/s
# Warmup Iteration  27: 162161.941 ops/s
# Warmup Iteration  28: 161943.833 ops/s
# Warmup Iteration  29: 161844.781 ops/s
# Warmup Iteration  30: 162253.832 ops/s
Iteration   1: 161980.624 ops/s
Iteration   2: 162656.579 ops/s
Iteration   3: 162395.534 ops/s
Iteration   4: 161684.588 ops/s
Iteration   5: 162277.651 ops/s
Iteration   6: 161539.477 ops/s
Iteration   7: 162193.354 ops/s
Iteration   8: 162331.146 ops/s
Iteration   9: 162328.764 ops/s
Iteration  10: 162313.321 ops/s
Iteration  11: 162311.893 ops/s
Iteration  12: 162444.056 ops/s
Iteration  13: 161620.704 ops/s
Iteration  14: 161990.781 ops/s
Iteration  15: 161987.374 ops/s
Iteration  16: 162533.630 ops/s
Iteration  17: 161687.913 ops/s
Iteration  18: 162187.931 ops/s
Iteration  19: 162159.201 ops/s
Iteration  20: 162064.569 ops/s
Iteration  21: 161910.456 ops/s
Iteration  22: 162127.770 ops/s
Iteration  23: 162188.117 ops/s
Iteration  24: 162513.674 ops/s
Iteration  25: 162324.188 ops/s
Iteration  26: 162341.269 ops/s
Iteration  27: 162159.592 ops/s
Iteration  28: 161867.508 ops/s
Iteration  29: 162382.576 ops/s
Iteration  30: 161818.119 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_882._Benchmark.benchmark_Cluster_882":
  162144.079 ±(99.9%) 190.605 ops/s [Average]
  (min, avg, max) = (161539.477, 162144.079, 162656.579), stdev = 285.289
  CI (99.9%): [161953.473, 162334.684] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_882._Benchmark.benchmark_Cluster_882  thrpt   30  162144.079 ± 190.605  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_883._Benchmark.benchmark_Cluster_883$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_883._Benchmark.benchmark_Cluster_883

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42633.754 ops/s
# Warmup Iteration   2: 66814.893 ops/s
# Warmup Iteration   3: 111576.510 ops/s
# Warmup Iteration   4: 110508.501 ops/s
# Warmup Iteration   5: 111779.155 ops/s
# Warmup Iteration   6: 112182.811 ops/s
# Warmup Iteration   7: 111462.973 ops/s
# Warmup Iteration   8: 85432.713 ops/s
# Warmup Iteration   9: 111357.846 ops/s
# Warmup Iteration  10: 111779.844 ops/s
# Warmup Iteration  11: 111742.886 ops/s
# Warmup Iteration  12: 111107.693 ops/s
# Warmup Iteration  13: 111507.521 ops/s
# Warmup Iteration  14: 111390.008 ops/s
# Warmup Iteration  15: 111281.884 ops/s
# Warmup Iteration  16: 111452.887 ops/s
# Warmup Iteration  17: 113043.947 ops/s
# Warmup Iteration  18: 112307.345 ops/s
# Warmup Iteration  19: 112589.418 ops/s
# Warmup Iteration  20: 112649.500 ops/s
# Warmup Iteration  21: 112942.556 ops/s
# Warmup Iteration  22: 112726.622 ops/s
# Warmup Iteration  23: 112521.079 ops/s
# Warmup Iteration  24: 112246.401 ops/s
# Warmup Iteration  25: 112764.489 ops/s
# Warmup Iteration  26: 112781.691 ops/s
# Warmup Iteration  27: 112792.805 ops/s
# Warmup Iteration  28: 112882.702 ops/s
# Warmup Iteration  29: 112743.920 ops/s
# Warmup Iteration  30: 112871.548 ops/s
Iteration   1: 112488.814 ops/s
Iteration   2: 112483.804 ops/s
Iteration   3: 112975.541 ops/s
Iteration   4: 112388.407 ops/s
Iteration   5: 112731.166 ops/s
Iteration   6: 112682.179 ops/s
Iteration   7: 113411.685 ops/s
Iteration   8: 112556.218 ops/s
Iteration   9: 112328.207 ops/s
Iteration  10: 113258.500 ops/s
Iteration  11: 112861.942 ops/s
Iteration  12: 112981.680 ops/s
Iteration  13: 112998.304 ops/s
Iteration  14: 112495.255 ops/s
Iteration  15: 112495.410 ops/s
Iteration  16: 112878.790 ops/s
Iteration  17: 112464.388 ops/s
Iteration  18: 112869.587 ops/s
Iteration  19: 113486.240 ops/s
Iteration  20: 112618.276 ops/s
Iteration  21: 113098.723 ops/s
Iteration  22: 112617.735 ops/s
Iteration  23: 113063.208 ops/s
Iteration  24: 112695.275 ops/s
Iteration  25: 112600.839 ops/s
Iteration  26: 113002.060 ops/s
Iteration  27: 113031.392 ops/s
Iteration  28: 113395.696 ops/s
Iteration  29: 112888.747 ops/s
Iteration  30: 113102.468 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_883._Benchmark.benchmark_Cluster_883":
  112831.684 ±(99.9%) 212.451 ops/s [Average]
  (min, avg, max) = (112328.207, 112831.684, 113486.240), stdev = 317.986
  CI (99.9%): [112619.234, 113044.135] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_883._Benchmark.benchmark_Cluster_883  thrpt   30  112831.684 ± 212.451  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_884._Benchmark.benchmark_Cluster_884$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_884._Benchmark.benchmark_Cluster_884

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51239.430 ops/s
# Warmup Iteration   2: 93067.182 ops/s
# Warmup Iteration   3: 130036.245 ops/s
# Warmup Iteration   4: 128937.107 ops/s
# Warmup Iteration   5: 129946.832 ops/s
# Warmup Iteration   6: 126945.065 ops/s
# Warmup Iteration   7: 106783.051 ops/s
# Warmup Iteration   8: 130108.033 ops/s
# Warmup Iteration   9: 130564.414 ops/s
# Warmup Iteration  10: 130500.944 ops/s
# Warmup Iteration  11: 130221.298 ops/s
# Warmup Iteration  12: 130605.182 ops/s
# Warmup Iteration  13: 130424.588 ops/s
# Warmup Iteration  14: 130177.071 ops/s
# Warmup Iteration  15: 130377.533 ops/s
# Warmup Iteration  16: 130351.504 ops/s
# Warmup Iteration  17: 132009.681 ops/s
# Warmup Iteration  18: 131801.882 ops/s
# Warmup Iteration  19: 131823.705 ops/s
# Warmup Iteration  20: 131896.523 ops/s
# Warmup Iteration  21: 132139.626 ops/s
# Warmup Iteration  22: 131961.615 ops/s
# Warmup Iteration  23: 131968.824 ops/s
# Warmup Iteration  24: 131988.955 ops/s
# Warmup Iteration  25: 132255.384 ops/s
# Warmup Iteration  26: 131844.603 ops/s
# Warmup Iteration  27: 131852.420 ops/s
# Warmup Iteration  28: 132148.167 ops/s
# Warmup Iteration  29: 132054.197 ops/s
# Warmup Iteration  30: 132066.665 ops/s
Iteration   1: 131972.520 ops/s
Iteration   2: 132425.104 ops/s
Iteration   3: 131624.238 ops/s
Iteration   4: 132497.772 ops/s
Iteration   5: 132250.237 ops/s
Iteration   6: 131840.072 ops/s
Iteration   7: 132018.779 ops/s
Iteration   8: 132348.531 ops/s
Iteration   9: 132181.019 ops/s
Iteration  10: 132553.065 ops/s
Iteration  11: 132087.169 ops/s
Iteration  12: 131725.445 ops/s
Iteration  13: 131509.677 ops/s
Iteration  14: 132133.199 ops/s
Iteration  15: 131772.326 ops/s
Iteration  16: 132514.364 ops/s
Iteration  17: 132122.092 ops/s
Iteration  18: 132211.603 ops/s
Iteration  19: 132093.220 ops/s
Iteration  20: 132423.673 ops/s
Iteration  21: 132205.727 ops/s
Iteration  22: 131881.228 ops/s
Iteration  23: 132392.384 ops/s
Iteration  24: 131522.980 ops/s
Iteration  25: 132548.877 ops/s
Iteration  26: 132014.392 ops/s
Iteration  27: 132368.379 ops/s
Iteration  28: 131710.647 ops/s
Iteration  29: 131931.027 ops/s
Iteration  30: 132406.148 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_884._Benchmark.benchmark_Cluster_884":
  132109.530 ±(99.9%) 207.348 ops/s [Average]
  (min, avg, max) = (131509.677, 132109.530, 132553.065), stdev = 310.349
  CI (99.9%): [131902.181, 132316.878] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_884._Benchmark.benchmark_Cluster_884  thrpt   30  132109.530 ± 207.348  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_885._Benchmark.benchmark_Cluster_885$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_885._Benchmark.benchmark_Cluster_885

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64169.219 ops/s
# Warmup Iteration   2: 96320.659 ops/s
# Warmup Iteration   3: 149959.253 ops/s
# Warmup Iteration   4: 160397.050 ops/s
# Warmup Iteration   5: 158135.963 ops/s
# Warmup Iteration   6: 159052.884 ops/s
# Warmup Iteration   7: 160608.145 ops/s
# Warmup Iteration   8: 161403.633 ops/s
# Warmup Iteration   9: 155427.186 ops/s
# Warmup Iteration  10: 128772.700 ops/s
# Warmup Iteration  11: 160603.126 ops/s
# Warmup Iteration  12: 160485.959 ops/s
# Warmup Iteration  13: 160705.833 ops/s
# Warmup Iteration  14: 160860.706 ops/s
# Warmup Iteration  15: 160497.176 ops/s
# Warmup Iteration  16: 160738.778 ops/s
# Warmup Iteration  17: 163846.131 ops/s
# Warmup Iteration  18: 163745.563 ops/s
# Warmup Iteration  19: 163882.743 ops/s
# Warmup Iteration  20: 163560.875 ops/s
# Warmup Iteration  21: 163944.257 ops/s
# Warmup Iteration  22: 163689.506 ops/s
# Warmup Iteration  23: 163592.324 ops/s
# Warmup Iteration  24: 164009.604 ops/s
# Warmup Iteration  25: 164113.050 ops/s
# Warmup Iteration  26: 163620.902 ops/s
# Warmup Iteration  27: 163679.071 ops/s
# Warmup Iteration  28: 163976.035 ops/s
# Warmup Iteration  29: 163647.060 ops/s
# Warmup Iteration  30: 163574.632 ops/s
Iteration   1: 163618.351 ops/s
Iteration   2: 163941.287 ops/s
Iteration   3: 163828.891 ops/s
Iteration   4: 163449.957 ops/s
Iteration   5: 164293.517 ops/s
Iteration   6: 164220.975 ops/s
Iteration   7: 163537.797 ops/s
Iteration   8: 163799.433 ops/s
Iteration   9: 163319.233 ops/s
Iteration  10: 163665.657 ops/s
Iteration  11: 163823.651 ops/s
Iteration  12: 164031.943 ops/s
Iteration  13: 163133.844 ops/s
Iteration  14: 163951.084 ops/s
Iteration  15: 163710.928 ops/s
Iteration  16: 163603.423 ops/s
Iteration  17: 163765.505 ops/s
Iteration  18: 163872.001 ops/s
Iteration  19: 163695.820 ops/s
Iteration  20: 164586.418 ops/s
Iteration  21: 163566.068 ops/s
Iteration  22: 163845.703 ops/s
Iteration  23: 164026.100 ops/s
Iteration  24: 164276.200 ops/s
Iteration  25: 163924.083 ops/s
Iteration  26: 164296.449 ops/s
Iteration  27: 163817.924 ops/s
Iteration  28: 163763.194 ops/s
Iteration  29: 163700.701 ops/s
Iteration  30: 163897.443 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_885._Benchmark.benchmark_Cluster_885":
  163832.119 ±(99.9%) 204.045 ops/s [Average]
  (min, avg, max) = (163133.844, 163832.119, 164586.418), stdev = 305.404
  CI (99.9%): [163628.075, 164036.164] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_885._Benchmark.benchmark_Cluster_885  thrpt   30  163832.119 ± 204.045  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_886._Benchmark.benchmark_Cluster_886$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_886._Benchmark.benchmark_Cluster_886

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83040.504 ops/s
# Warmup Iteration   2: 126431.332 ops/s
# Warmup Iteration   3: 194630.111 ops/s
# Warmup Iteration   4: 193302.159 ops/s
# Warmup Iteration   5: 194343.381 ops/s
# Warmup Iteration   6: 194604.633 ops/s
# Warmup Iteration   7: 194489.847 ops/s
# Warmup Iteration   8: 154322.975 ops/s
# Warmup Iteration   9: 195444.959 ops/s
# Warmup Iteration  10: 195181.732 ops/s
# Warmup Iteration  11: 195201.776 ops/s
# Warmup Iteration  12: 195061.999 ops/s
# Warmup Iteration  13: 194949.548 ops/s
# Warmup Iteration  14: 194685.061 ops/s
# Warmup Iteration  15: 194970.065 ops/s
# Warmup Iteration  16: 194931.740 ops/s
# Warmup Iteration  17: 194840.679 ops/s
# Warmup Iteration  18: 195007.026 ops/s
# Warmup Iteration  19: 194328.742 ops/s
# Warmup Iteration  20: 194562.876 ops/s
# Warmup Iteration  21: 194252.659 ops/s
# Warmup Iteration  22: 194344.941 ops/s
# Warmup Iteration  23: 194866.868 ops/s
# Warmup Iteration  24: 194403.316 ops/s
# Warmup Iteration  25: 194619.770 ops/s
# Warmup Iteration  26: 194624.636 ops/s
# Warmup Iteration  27: 194303.753 ops/s
# Warmup Iteration  28: 194807.453 ops/s
# Warmup Iteration  29: 194298.072 ops/s
# Warmup Iteration  30: 194646.589 ops/s
Iteration   1: 194589.983 ops/s
Iteration   2: 194251.994 ops/s
Iteration   3: 194714.683 ops/s
Iteration   4: 194271.973 ops/s
Iteration   5: 195070.994 ops/s
Iteration   6: 194506.968 ops/s
Iteration   7: 194045.565 ops/s
Iteration   8: 194835.817 ops/s
Iteration   9: 194421.481 ops/s
Iteration  10: 194497.391 ops/s
Iteration  11: 194373.705 ops/s
Iteration  12: 194592.816 ops/s
Iteration  13: 194181.851 ops/s
Iteration  14: 194682.402 ops/s
Iteration  15: 194145.680 ops/s
Iteration  16: 195104.794 ops/s
Iteration  17: 194855.507 ops/s
Iteration  18: 195191.278 ops/s
Iteration  19: 194941.486 ops/s
Iteration  20: 193902.411 ops/s
Iteration  21: 195090.403 ops/s
Iteration  22: 194477.569 ops/s
Iteration  23: 195089.149 ops/s
Iteration  24: 194860.944 ops/s
Iteration  25: 194241.570 ops/s
Iteration  26: 194934.619 ops/s
Iteration  27: 194374.727 ops/s
Iteration  28: 194778.316 ops/s
Iteration  29: 194531.814 ops/s
Iteration  30: 194755.082 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_886._Benchmark.benchmark_Cluster_886":
  194610.432 ±(99.9%) 232.151 ops/s [Average]
  (min, avg, max) = (193902.411, 194610.432, 195191.278), stdev = 347.473
  CI (99.9%): [194378.281, 194842.583] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_886._Benchmark.benchmark_Cluster_886  thrpt   30  194610.432 ± 232.151  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_887._Benchmark.benchmark_Cluster_887$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_887._Benchmark.benchmark_Cluster_887

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83350.759 ops/s
# Warmup Iteration   2: 130769.539 ops/s
# Warmup Iteration   3: 194757.581 ops/s
# Warmup Iteration   4: 193209.889 ops/s
# Warmup Iteration   5: 194510.017 ops/s
# Warmup Iteration   6: 194330.882 ops/s
# Warmup Iteration   7: 192913.136 ops/s
# Warmup Iteration   8: 153997.273 ops/s
# Warmup Iteration   9: 193670.845 ops/s
# Warmup Iteration  10: 193897.679 ops/s
# Warmup Iteration  11: 194065.997 ops/s
# Warmup Iteration  12: 194129.949 ops/s
# Warmup Iteration  13: 193992.478 ops/s
# Warmup Iteration  14: 194035.662 ops/s
# Warmup Iteration  15: 194245.814 ops/s
# Warmup Iteration  16: 193874.577 ops/s
# Warmup Iteration  17: 196979.236 ops/s
# Warmup Iteration  18: 196953.345 ops/s
# Warmup Iteration  19: 196361.604 ops/s
# Warmup Iteration  20: 196766.558 ops/s
# Warmup Iteration  21: 196883.592 ops/s
# Warmup Iteration  22: 196780.431 ops/s
# Warmup Iteration  23: 196831.390 ops/s
# Warmup Iteration  24: 196630.773 ops/s
# Warmup Iteration  25: 197074.052 ops/s
# Warmup Iteration  26: 197086.765 ops/s
# Warmup Iteration  27: 196707.071 ops/s
# Warmup Iteration  28: 197024.237 ops/s
# Warmup Iteration  29: 196883.038 ops/s
# Warmup Iteration  30: 196959.526 ops/s
Iteration   1: 196544.122 ops/s
Iteration   2: 196949.714 ops/s
Iteration   3: 197216.886 ops/s
Iteration   4: 197034.746 ops/s
Iteration   5: 197455.132 ops/s
Iteration   6: 196778.024 ops/s
Iteration   7: 196646.827 ops/s
Iteration   8: 196882.715 ops/s
Iteration   9: 196268.065 ops/s
Iteration  10: 196612.163 ops/s
Iteration  11: 196819.198 ops/s
Iteration  12: 197142.068 ops/s
Iteration  13: 197131.695 ops/s
Iteration  14: 196928.146 ops/s
Iteration  15: 197107.007 ops/s
Iteration  16: 197033.469 ops/s
Iteration  17: 197120.891 ops/s
Iteration  18: 196521.013 ops/s
Iteration  19: 197252.600 ops/s
Iteration  20: 197212.360 ops/s
Iteration  21: 197058.737 ops/s
Iteration  22: 197258.848 ops/s
Iteration  23: 196907.973 ops/s
Iteration  24: 196958.512 ops/s
Iteration  25: 196401.612 ops/s
Iteration  26: 196804.165 ops/s
Iteration  27: 196490.817 ops/s
Iteration  28: 196875.572 ops/s
Iteration  29: 197272.413 ops/s
Iteration  30: 196676.139 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_887._Benchmark.benchmark_Cluster_887":
  196912.054 ±(99.9%) 195.356 ops/s [Average]
  (min, avg, max) = (196268.065, 196912.054, 197455.132), stdev = 292.399
  CI (99.9%): [196716.699, 197107.410] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_887._Benchmark.benchmark_Cluster_887  thrpt   30  196912.054 ± 195.356  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_888._Benchmark.benchmark_Cluster_888$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_888._Benchmark.benchmark_Cluster_888

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79771.778 ops/s
# Warmup Iteration   2: 87952.380 ops/s
# Warmup Iteration   3: 108177.137 ops/s
# Warmup Iteration   4: 122484.021 ops/s
# Warmup Iteration   5: 122298.726 ops/s
# Warmup Iteration   6: 121216.779 ops/s
# Warmup Iteration   7: 121816.913 ops/s
# Warmup Iteration   8: 121664.449 ops/s
# Warmup Iteration   9: 122025.116 ops/s
# Warmup Iteration  10: 122012.697 ops/s
# Warmup Iteration  11: 122199.085 ops/s
# Warmup Iteration  12: 122556.486 ops/s
# Warmup Iteration  13: 104491.308 ops/s
# Warmup Iteration  14: 114017.135 ops/s
# Warmup Iteration  15: 121457.927 ops/s
# Warmup Iteration  16: 121639.864 ops/s
# Warmup Iteration  17: 127033.728 ops/s
# Warmup Iteration  18: 126815.674 ops/s
# Warmup Iteration  19: 127066.096 ops/s
# Warmup Iteration  20: 126939.083 ops/s
# Warmup Iteration  21: 126876.100 ops/s
# Warmup Iteration  22: 127121.928 ops/s
# Warmup Iteration  23: 126511.390 ops/s
# Warmup Iteration  24: 126716.764 ops/s
# Warmup Iteration  25: 126781.884 ops/s
# Warmup Iteration  26: 126977.923 ops/s
# Warmup Iteration  27: 126934.841 ops/s
# Warmup Iteration  28: 127043.782 ops/s
# Warmup Iteration  29: 126972.261 ops/s
# Warmup Iteration  30: 127429.991 ops/s
Iteration   1: 127043.487 ops/s
Iteration   2: 127176.488 ops/s
Iteration   3: 127305.653 ops/s
Iteration   4: 127363.612 ops/s
Iteration   5: 127181.958 ops/s
Iteration   6: 127000.249 ops/s
Iteration   7: 127005.501 ops/s
Iteration   8: 127193.734 ops/s
Iteration   9: 126617.003 ops/s
Iteration  10: 126668.782 ops/s
Iteration  11: 126584.755 ops/s
Iteration  12: 127251.679 ops/s
Iteration  13: 127231.848 ops/s
Iteration  14: 126830.204 ops/s
Iteration  15: 127191.219 ops/s
Iteration  16: 126726.003 ops/s
Iteration  17: 127302.074 ops/s
Iteration  18: 127462.692 ops/s
Iteration  19: 127188.185 ops/s
Iteration  20: 127435.788 ops/s
Iteration  21: 127451.852 ops/s
Iteration  22: 126951.995 ops/s
Iteration  23: 127037.366 ops/s
Iteration  24: 126743.572 ops/s
Iteration  25: 126653.758 ops/s
Iteration  26: 126565.181 ops/s
Iteration  27: 126608.642 ops/s
Iteration  28: 126487.582 ops/s
Iteration  29: 126614.919 ops/s
Iteration  30: 127111.217 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_888._Benchmark.benchmark_Cluster_888":
  126999.567 ±(99.9%) 204.062 ops/s [Average]
  (min, avg, max) = (126487.582, 126999.567, 127462.692), stdev = 305.431
  CI (99.9%): [126795.504, 127203.629] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_888._Benchmark.benchmark_Cluster_888  thrpt   30  126999.567 ± 204.062  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_889._Benchmark.benchmark_Cluster_889$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_889._Benchmark.benchmark_Cluster_889

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 44849.164 ops/s
# Warmup Iteration   2: 77831.041 ops/s
# Warmup Iteration   3: 129683.614 ops/s
# Warmup Iteration   4: 129097.361 ops/s
# Warmup Iteration   5: 129837.638 ops/s
# Warmup Iteration   6: 130123.189 ops/s
# Warmup Iteration   7: 129465.696 ops/s
# Warmup Iteration   8: 110327.177 ops/s
# Warmup Iteration   9: 121883.835 ops/s
# Warmup Iteration  10: 129971.629 ops/s
# Warmup Iteration  11: 129912.411 ops/s
# Warmup Iteration  12: 129916.955 ops/s
# Warmup Iteration  13: 129724.131 ops/s
# Warmup Iteration  14: 129753.596 ops/s
# Warmup Iteration  15: 129821.325 ops/s
# Warmup Iteration  16: 129501.980 ops/s
# Warmup Iteration  17: 129689.194 ops/s
# Warmup Iteration  18: 129583.516 ops/s
# Warmup Iteration  19: 129449.761 ops/s
# Warmup Iteration  20: 129767.875 ops/s
# Warmup Iteration  21: 129768.776 ops/s
# Warmup Iteration  22: 129749.087 ops/s
# Warmup Iteration  23: 130027.230 ops/s
# Warmup Iteration  24: 129851.583 ops/s
# Warmup Iteration  25: 129848.625 ops/s
# Warmup Iteration  26: 129603.414 ops/s
# Warmup Iteration  27: 129827.023 ops/s
# Warmup Iteration  28: 129761.032 ops/s
# Warmup Iteration  29: 129561.410 ops/s
# Warmup Iteration  30: 129638.675 ops/s
Iteration   1: 129878.647 ops/s
Iteration   2: 129281.278 ops/s
Iteration   3: 129821.393 ops/s
Iteration   4: 130011.117 ops/s
Iteration   5: 129789.159 ops/s
Iteration   6: 129858.651 ops/s
Iteration   7: 129897.602 ops/s
Iteration   8: 129846.567 ops/s
Iteration   9: 130038.849 ops/s
Iteration  10: 129938.402 ops/s
Iteration  11: 129690.906 ops/s
Iteration  12: 129764.888 ops/s
Iteration  13: 129464.974 ops/s
Iteration  14: 129786.995 ops/s
Iteration  15: 129395.903 ops/s
Iteration  16: 129805.277 ops/s
Iteration  17: 129966.043 ops/s
Iteration  18: 129625.043 ops/s
Iteration  19: 129839.080 ops/s
Iteration  20: 129715.313 ops/s
Iteration  21: 129748.627 ops/s
Iteration  22: 130018.782 ops/s
Iteration  23: 129722.998 ops/s
Iteration  24: 129694.309 ops/s
Iteration  25: 129568.973 ops/s
Iteration  26: 130012.444 ops/s
Iteration  27: 130172.948 ops/s
Iteration  28: 129430.084 ops/s
Iteration  29: 129416.367 ops/s
Iteration  30: 129585.590 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_889._Benchmark.benchmark_Cluster_889":
  129759.574 ±(99.9%) 144.346 ops/s [Average]
  (min, avg, max) = (129281.278, 129759.574, 130172.948), stdev = 216.050
  CI (99.9%): [129615.228, 129903.919] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_889._Benchmark.benchmark_Cluster_889  thrpt   30  129759.574 ± 144.346  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_89._Benchmark.benchmark_Cluster_89$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_89._Benchmark.benchmark_Cluster_89

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79888.851 ops/s
# Warmup Iteration   2: 173130.740 ops/s
# Warmup Iteration   3: 218193.704 ops/s
# Warmup Iteration   4: 219522.851 ops/s
# Warmup Iteration   5: 182620.997 ops/s
# Warmup Iteration   6: 211274.247 ops/s
# Warmup Iteration   7: 220064.840 ops/s
# Warmup Iteration   8: 220052.880 ops/s
# Warmup Iteration   9: 220094.734 ops/s
# Warmup Iteration  10: 220352.242 ops/s
# Warmup Iteration  11: 219653.775 ops/s
# Warmup Iteration  12: 220279.262 ops/s
# Warmup Iteration  13: 220100.980 ops/s
# Warmup Iteration  14: 219843.648 ops/s
# Warmup Iteration  15: 220303.230 ops/s
# Warmup Iteration  16: 219726.440 ops/s
# Warmup Iteration  17: 219784.704 ops/s
# Warmup Iteration  18: 220258.728 ops/s
# Warmup Iteration  19: 219802.447 ops/s
# Warmup Iteration  20: 219762.732 ops/s
# Warmup Iteration  21: 220103.846 ops/s
# Warmup Iteration  22: 220017.535 ops/s
# Warmup Iteration  23: 220035.345 ops/s
# Warmup Iteration  24: 220231.977 ops/s
# Warmup Iteration  25: 220043.273 ops/s
# Warmup Iteration  26: 219954.818 ops/s
# Warmup Iteration  27: 220158.725 ops/s
# Warmup Iteration  28: 219992.977 ops/s
# Warmup Iteration  29: 220313.253 ops/s
# Warmup Iteration  30: 220136.998 ops/s
Iteration   1: 220151.028 ops/s
Iteration   2: 219731.848 ops/s
Iteration   3: 220211.771 ops/s
Iteration   4: 220088.935 ops/s
Iteration   5: 220142.691 ops/s
Iteration   6: 220226.048 ops/s
Iteration   7: 220169.136 ops/s
Iteration   8: 220145.918 ops/s
Iteration   9: 220047.393 ops/s
Iteration  10: 219980.110 ops/s
Iteration  11: 220128.699 ops/s
Iteration  12: 220536.370 ops/s
Iteration  13: 220060.465 ops/s
Iteration  14: 220363.346 ops/s
Iteration  15: 220522.865 ops/s
Iteration  16: 220254.845 ops/s
Iteration  17: 220163.502 ops/s
Iteration  18: 220448.974 ops/s
Iteration  19: 219794.728 ops/s
Iteration  20: 219944.624 ops/s
Iteration  21: 220595.203 ops/s
Iteration  22: 220538.191 ops/s
Iteration  23: 220354.267 ops/s
Iteration  24: 220318.266 ops/s
Iteration  25: 220203.240 ops/s
Iteration  26: 220225.342 ops/s
Iteration  27: 220472.527 ops/s
Iteration  28: 220325.121 ops/s
Iteration  29: 220113.699 ops/s
Iteration  30: 220269.153 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_89._Benchmark.benchmark_Cluster_89":
  220217.610 ±(99.9%) 140.352 ops/s [Average]
  (min, avg, max) = (219731.848, 220217.610, 220595.203), stdev = 210.072
  CI (99.9%): [220077.258, 220357.962] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_89._Benchmark.benchmark_Cluster_89  thrpt   30  220217.610 ± 140.352  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_890._Benchmark.benchmark_Cluster_890$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_890._Benchmark.benchmark_Cluster_890

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58873.549 ops/s
# Warmup Iteration   2: 87568.933 ops/s
# Warmup Iteration   3: 142726.162 ops/s
# Warmup Iteration   4: 141911.842 ops/s
# Warmup Iteration   5: 142737.732 ops/s
# Warmup Iteration   6: 141212.470 ops/s
# Warmup Iteration   7: 143174.110 ops/s
# Warmup Iteration   8: 122706.056 ops/s
# Warmup Iteration   9: 130998.463 ops/s
# Warmup Iteration  10: 143058.206 ops/s
# Warmup Iteration  11: 143163.414 ops/s
# Warmup Iteration  12: 143258.947 ops/s
# Warmup Iteration  13: 143170.868 ops/s
# Warmup Iteration  14: 143067.853 ops/s
# Warmup Iteration  15: 142932.799 ops/s
# Warmup Iteration  16: 143008.568 ops/s
# Warmup Iteration  17: 144632.337 ops/s
# Warmup Iteration  18: 144564.167 ops/s
# Warmup Iteration  19: 144319.625 ops/s
# Warmup Iteration  20: 144567.143 ops/s
# Warmup Iteration  21: 144495.010 ops/s
# Warmup Iteration  22: 144186.252 ops/s
# Warmup Iteration  23: 144649.586 ops/s
# Warmup Iteration  24: 144586.365 ops/s
# Warmup Iteration  25: 144987.779 ops/s
# Warmup Iteration  26: 144749.450 ops/s
# Warmup Iteration  27: 144181.176 ops/s
# Warmup Iteration  28: 144748.539 ops/s
# Warmup Iteration  29: 144427.315 ops/s
# Warmup Iteration  30: 144440.692 ops/s
Iteration   1: 144700.863 ops/s
Iteration   2: 144232.979 ops/s
Iteration   3: 144815.013 ops/s
Iteration   4: 144348.374 ops/s
Iteration   5: 144624.414 ops/s
Iteration   6: 144682.514 ops/s
Iteration   7: 144872.122 ops/s
Iteration   8: 144508.101 ops/s
Iteration   9: 144677.338 ops/s
Iteration  10: 144583.710 ops/s
Iteration  11: 144344.580 ops/s
Iteration  12: 144949.489 ops/s
Iteration  13: 144340.434 ops/s
Iteration  14: 144635.133 ops/s
Iteration  15: 144284.606 ops/s
Iteration  16: 144277.876 ops/s
Iteration  17: 144307.463 ops/s
Iteration  18: 144292.757 ops/s
Iteration  19: 144227.941 ops/s
Iteration  20: 144141.046 ops/s
Iteration  21: 144120.011 ops/s
Iteration  22: 144671.730 ops/s
Iteration  23: 144312.510 ops/s
Iteration  24: 144629.468 ops/s
Iteration  25: 144624.106 ops/s
Iteration  26: 144335.276 ops/s
Iteration  27: 144260.674 ops/s
Iteration  28: 144315.212 ops/s
Iteration  29: 144972.181 ops/s
Iteration  30: 144742.764 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_890._Benchmark.benchmark_Cluster_890":
  144494.356 ±(99.9%) 164.071 ops/s [Average]
  (min, avg, max) = (144120.011, 144494.356, 144972.181), stdev = 245.574
  CI (99.9%): [144330.285, 144658.427] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_890._Benchmark.benchmark_Cluster_890  thrpt   30  144494.356 ± 164.071  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_891._Benchmark.benchmark_Cluster_891$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_891._Benchmark.benchmark_Cluster_891

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 103530.255 ops/s
# Warmup Iteration   2: 120794.268 ops/s
# Warmup Iteration   3: 168371.253 ops/s
# Warmup Iteration   4: 177911.215 ops/s
# Warmup Iteration   5: 176717.766 ops/s
# Warmup Iteration   6: 178392.427 ops/s
# Warmup Iteration   7: 178155.599 ops/s
# Warmup Iteration   8: 178454.895 ops/s
# Warmup Iteration   9: 179053.290 ops/s
# Warmup Iteration  10: 178854.718 ops/s
# Warmup Iteration  11: 152187.791 ops/s
# Warmup Iteration  12: 167550.736 ops/s
# Warmup Iteration  13: 178759.185 ops/s
# Warmup Iteration  14: 178752.130 ops/s
# Warmup Iteration  15: 178211.123 ops/s
# Warmup Iteration  16: 178203.827 ops/s
# Warmup Iteration  17: 186246.651 ops/s
# Warmup Iteration  18: 186362.958 ops/s
# Warmup Iteration  19: 185721.287 ops/s
# Warmup Iteration  20: 186163.823 ops/s
# Warmup Iteration  21: 186161.087 ops/s
# Warmup Iteration  22: 186260.966 ops/s
# Warmup Iteration  23: 186471.962 ops/s
# Warmup Iteration  24: 186201.467 ops/s
# Warmup Iteration  25: 186283.234 ops/s
# Warmup Iteration  26: 186061.276 ops/s
# Warmup Iteration  27: 186237.926 ops/s
# Warmup Iteration  28: 186299.538 ops/s
# Warmup Iteration  29: 186280.293 ops/s
# Warmup Iteration  30: 186334.430 ops/s
Iteration   1: 185633.092 ops/s
Iteration   2: 186004.846 ops/s
Iteration   3: 186411.484 ops/s
Iteration   4: 186082.081 ops/s
Iteration   5: 185996.799 ops/s
Iteration   6: 185622.635 ops/s
Iteration   7: 186106.725 ops/s
Iteration   8: 186974.560 ops/s
Iteration   9: 186219.562 ops/s
Iteration  10: 186027.470 ops/s
Iteration  11: 185513.085 ops/s
Iteration  12: 186449.674 ops/s
Iteration  13: 186421.221 ops/s
Iteration  14: 186391.289 ops/s
Iteration  15: 186296.609 ops/s
Iteration  16: 186270.561 ops/s
Iteration  17: 186378.065 ops/s
Iteration  18: 186769.234 ops/s
Iteration  19: 186274.349 ops/s
Iteration  20: 186360.083 ops/s
Iteration  21: 185672.923 ops/s
Iteration  22: 186137.695 ops/s
Iteration  23: 186188.908 ops/s
Iteration  24: 185801.809 ops/s
Iteration  25: 186397.081 ops/s
Iteration  26: 186558.593 ops/s
Iteration  27: 186689.230 ops/s
Iteration  28: 186169.184 ops/s
Iteration  29: 186546.712 ops/s
Iteration  30: 186725.763 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_891._Benchmark.benchmark_Cluster_891":
  186236.377 ±(99.9%) 237.270 ops/s [Average]
  (min, avg, max) = (185513.085, 186236.377, 186974.560), stdev = 355.134
  CI (99.9%): [185999.108, 186473.647] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_891._Benchmark.benchmark_Cluster_891  thrpt   30  186236.377 ± 237.270  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_892._Benchmark.benchmark_Cluster_892$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_892._Benchmark.benchmark_Cluster_892

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83278.232 ops/s
# Warmup Iteration   2: 137634.593 ops/s
# Warmup Iteration   3: 195799.203 ops/s
# Warmup Iteration   4: 194607.646 ops/s
# Warmup Iteration   5: 195504.463 ops/s
# Warmup Iteration   6: 195615.892 ops/s
# Warmup Iteration   7: 154298.041 ops/s
# Warmup Iteration   8: 196172.934 ops/s
# Warmup Iteration   9: 196303.353 ops/s
# Warmup Iteration  10: 195997.612 ops/s
# Warmup Iteration  11: 196047.105 ops/s
# Warmup Iteration  12: 195721.728 ops/s
# Warmup Iteration  13: 196063.446 ops/s
# Warmup Iteration  14: 195932.949 ops/s
# Warmup Iteration  15: 195925.438 ops/s
# Warmup Iteration  16: 196251.796 ops/s
# Warmup Iteration  17: 195473.560 ops/s
# Warmup Iteration  18: 195502.540 ops/s
# Warmup Iteration  19: 195404.015 ops/s
# Warmup Iteration  20: 195475.996 ops/s
# Warmup Iteration  21: 195303.432 ops/s
# Warmup Iteration  22: 195693.635 ops/s
# Warmup Iteration  23: 195494.474 ops/s
# Warmup Iteration  24: 195475.014 ops/s
# Warmup Iteration  25: 195545.805 ops/s
# Warmup Iteration  26: 195710.788 ops/s
# Warmup Iteration  27: 195584.276 ops/s
# Warmup Iteration  28: 195698.899 ops/s
# Warmup Iteration  29: 195575.154 ops/s
# Warmup Iteration  30: 195266.386 ops/s
Iteration   1: 196027.857 ops/s
Iteration   2: 195543.830 ops/s
Iteration   3: 195607.828 ops/s
Iteration   4: 195449.088 ops/s
Iteration   5: 195450.302 ops/s
Iteration   6: 195681.060 ops/s
Iteration   7: 195676.765 ops/s
Iteration   8: 195617.127 ops/s
Iteration   9: 195227.835 ops/s
Iteration  10: 194958.403 ops/s
Iteration  11: 195439.634 ops/s
Iteration  12: 195746.743 ops/s
Iteration  13: 195311.815 ops/s
Iteration  14: 195683.032 ops/s
Iteration  15: 195395.012 ops/s
Iteration  16: 195764.196 ops/s
Iteration  17: 195599.954 ops/s
Iteration  18: 195470.597 ops/s
Iteration  19: 195462.628 ops/s
Iteration  20: 195347.253 ops/s
Iteration  21: 195498.421 ops/s
Iteration  22: 195420.234 ops/s
Iteration  23: 195555.055 ops/s
Iteration  24: 195709.647 ops/s
Iteration  25: 195967.478 ops/s
Iteration  26: 195730.965 ops/s
Iteration  27: 195641.516 ops/s
Iteration  28: 195433.875 ops/s
Iteration  29: 195627.909 ops/s
Iteration  30: 195498.694 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_892._Benchmark.benchmark_Cluster_892":
  195551.492 ±(99.9%) 140.292 ops/s [Average]
  (min, avg, max) = (194958.403, 195551.492, 196027.857), stdev = 209.982
  CI (99.9%): [195411.200, 195691.784] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_892._Benchmark.benchmark_Cluster_892  thrpt   30  195551.492 ± 140.292  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_893._Benchmark.benchmark_Cluster_893$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_893._Benchmark.benchmark_Cluster_893

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59746.538 ops/s
# Warmup Iteration   2: 141422.218 ops/s
# Warmup Iteration   3: 188298.418 ops/s
# Warmup Iteration   4: 189487.983 ops/s
# Warmup Iteration   5: 170677.182 ops/s
# Warmup Iteration   6: 170138.219 ops/s
# Warmup Iteration   7: 189819.151 ops/s
# Warmup Iteration   8: 190017.226 ops/s
# Warmup Iteration   9: 189719.750 ops/s
# Warmup Iteration  10: 189763.214 ops/s
# Warmup Iteration  11: 189616.721 ops/s
# Warmup Iteration  12: 189770.396 ops/s
# Warmup Iteration  13: 189595.468 ops/s
# Warmup Iteration  14: 189715.883 ops/s
# Warmup Iteration  15: 189678.313 ops/s
# Warmup Iteration  16: 189710.139 ops/s
# Warmup Iteration  17: 189727.852 ops/s
# Warmup Iteration  18: 189633.272 ops/s
# Warmup Iteration  19: 189700.295 ops/s
# Warmup Iteration  20: 189398.166 ops/s
# Warmup Iteration  21: 189770.854 ops/s
# Warmup Iteration  22: 189921.813 ops/s
# Warmup Iteration  23: 189675.377 ops/s
# Warmup Iteration  24: 189465.384 ops/s
# Warmup Iteration  25: 189759.332 ops/s
# Warmup Iteration  26: 189639.812 ops/s
# Warmup Iteration  27: 189942.910 ops/s
# Warmup Iteration  28: 189628.020 ops/s
# Warmup Iteration  29: 189648.369 ops/s
# Warmup Iteration  30: 189766.233 ops/s
Iteration   1: 190026.250 ops/s
Iteration   2: 189963.204 ops/s
Iteration   3: 189870.624 ops/s
Iteration   4: 189707.830 ops/s
Iteration   5: 189725.361 ops/s
Iteration   6: 189745.984 ops/s
Iteration   7: 189868.740 ops/s
Iteration   8: 190129.411 ops/s
Iteration   9: 189863.167 ops/s
Iteration  10: 190087.220 ops/s
Iteration  11: 189834.113 ops/s
Iteration  12: 189531.368 ops/s
Iteration  13: 189939.930 ops/s
Iteration  14: 190046.676 ops/s
Iteration  15: 189932.791 ops/s
Iteration  16: 189779.176 ops/s
Iteration  17: 189513.311 ops/s
Iteration  18: 189221.204 ops/s
Iteration  19: 189656.440 ops/s
Iteration  20: 189534.829 ops/s
Iteration  21: 189524.275 ops/s
Iteration  22: 189723.339 ops/s
Iteration  23: 189837.809 ops/s
Iteration  24: 189839.699 ops/s
Iteration  25: 190351.091 ops/s
Iteration  26: 189815.504 ops/s
Iteration  27: 189667.613 ops/s
Iteration  28: 189538.849 ops/s
Iteration  29: 190214.247 ops/s
Iteration  30: 189724.910 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_893._Benchmark.benchmark_Cluster_893":
  189807.166 ±(99.9%) 158.383 ops/s [Average]
  (min, avg, max) = (189221.204, 189807.166, 190351.091), stdev = 237.061
  CI (99.9%): [189648.782, 189965.549] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_893._Benchmark.benchmark_Cluster_893  thrpt   30  189807.166 ± 158.383  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_894._Benchmark.benchmark_Cluster_894$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_894._Benchmark.benchmark_Cluster_894

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67609.831 ops/s
# Warmup Iteration   2: 147465.069 ops/s
# Warmup Iteration   3: 191658.226 ops/s
# Warmup Iteration   4: 193137.278 ops/s
# Warmup Iteration   5: 152340.541 ops/s
# Warmup Iteration   6: 193552.913 ops/s
# Warmup Iteration   7: 193148.581 ops/s
# Warmup Iteration   8: 193516.432 ops/s
# Warmup Iteration   9: 193709.543 ops/s
# Warmup Iteration  10: 193810.413 ops/s
# Warmup Iteration  11: 193247.174 ops/s
# Warmup Iteration  12: 193244.010 ops/s
# Warmup Iteration  13: 193251.267 ops/s
# Warmup Iteration  14: 193267.385 ops/s
# Warmup Iteration  15: 193039.963 ops/s
# Warmup Iteration  16: 193485.385 ops/s
# Warmup Iteration  17: 193144.531 ops/s
# Warmup Iteration  18: 194073.972 ops/s
# Warmup Iteration  19: 193617.844 ops/s
# Warmup Iteration  20: 193217.097 ops/s
# Warmup Iteration  21: 193231.178 ops/s
# Warmup Iteration  22: 193464.845 ops/s
# Warmup Iteration  23: 193571.050 ops/s
# Warmup Iteration  24: 193743.322 ops/s
# Warmup Iteration  25: 193671.278 ops/s
# Warmup Iteration  26: 193355.610 ops/s
# Warmup Iteration  27: 193336.894 ops/s
# Warmup Iteration  28: 193403.888 ops/s
# Warmup Iteration  29: 193176.427 ops/s
# Warmup Iteration  30: 193596.383 ops/s
Iteration   1: 193246.132 ops/s
Iteration   2: 193845.750 ops/s
Iteration   3: 193431.935 ops/s
Iteration   4: 193669.765 ops/s
Iteration   5: 193676.140 ops/s
Iteration   6: 192436.771 ops/s
Iteration   7: 193042.460 ops/s
Iteration   8: 192439.119 ops/s
Iteration   9: 193175.442 ops/s
Iteration  10: 193681.684 ops/s
Iteration  11: 193320.728 ops/s
Iteration  12: 193291.982 ops/s
Iteration  13: 193534.157 ops/s
Iteration  14: 193540.857 ops/s
Iteration  15: 193063.728 ops/s
Iteration  16: 193857.198 ops/s
Iteration  17: 193454.259 ops/s
Iteration  18: 193887.143 ops/s
Iteration  19: 193396.304 ops/s
Iteration  20: 193406.839 ops/s
Iteration  21: 193254.642 ops/s
Iteration  22: 192993.683 ops/s
Iteration  23: 193542.451 ops/s
Iteration  24: 193768.638 ops/s
Iteration  25: 194143.645 ops/s
Iteration  26: 194122.756 ops/s
Iteration  27: 193062.063 ops/s
Iteration  28: 193342.199 ops/s
Iteration  29: 193755.548 ops/s
Iteration  30: 193788.120 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_894._Benchmark.benchmark_Cluster_894":
  193439.071 ±(99.9%) 273.674 ops/s [Average]
  (min, avg, max) = (192436.771, 193439.071, 194143.645), stdev = 409.622
  CI (99.9%): [193165.397, 193712.745] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_894._Benchmark.benchmark_Cluster_894  thrpt   30  193439.071 ± 273.674  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_895._Benchmark.benchmark_Cluster_895$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_895._Benchmark.benchmark_Cluster_895

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91129.795 ops/s
# Warmup Iteration   2: 115840.227 ops/s
# Warmup Iteration   3: 178970.878 ops/s
# Warmup Iteration   4: 190833.279 ops/s
# Warmup Iteration   5: 189704.149 ops/s
# Warmup Iteration   6: 191140.743 ops/s
# Warmup Iteration   7: 190761.954 ops/s
# Warmup Iteration   8: 191114.336 ops/s
# Warmup Iteration   9: 190816.016 ops/s
# Warmup Iteration  10: 150574.532 ops/s
# Warmup Iteration  11: 188756.343 ops/s
# Warmup Iteration  12: 190810.814 ops/s
# Warmup Iteration  13: 191412.613 ops/s
# Warmup Iteration  14: 191138.528 ops/s
# Warmup Iteration  15: 190920.176 ops/s
# Warmup Iteration  16: 191394.011 ops/s
# Warmup Iteration  17: 192923.828 ops/s
# Warmup Iteration  18: 192657.955 ops/s
# Warmup Iteration  19: 193007.527 ops/s
# Warmup Iteration  20: 192950.875 ops/s
# Warmup Iteration  21: 192779.379 ops/s
# Warmup Iteration  22: 192955.930 ops/s
# Warmup Iteration  23: 192267.731 ops/s
# Warmup Iteration  24: 192571.088 ops/s
# Warmup Iteration  25: 192649.255 ops/s
# Warmup Iteration  26: 192924.268 ops/s
# Warmup Iteration  27: 192518.952 ops/s
# Warmup Iteration  28: 192337.459 ops/s
# Warmup Iteration  29: 192675.386 ops/s
# Warmup Iteration  30: 192615.757 ops/s
Iteration   1: 192687.333 ops/s
Iteration   2: 193292.203 ops/s
Iteration   3: 192005.670 ops/s
Iteration   4: 192602.562 ops/s
Iteration   5: 192816.110 ops/s
Iteration   6: 192473.898 ops/s
Iteration   7: 192765.960 ops/s
Iteration   8: 192068.798 ops/s
Iteration   9: 192230.715 ops/s
Iteration  10: 192352.619 ops/s
Iteration  11: 192420.760 ops/s
Iteration  12: 192460.105 ops/s
Iteration  13: 192739.280 ops/s
Iteration  14: 192470.545 ops/s
Iteration  15: 192647.408 ops/s
Iteration  16: 192177.434 ops/s
Iteration  17: 192636.653 ops/s
Iteration  18: 193096.857 ops/s
Iteration  19: 192672.668 ops/s
Iteration  20: 193123.618 ops/s
Iteration  21: 192290.461 ops/s
Iteration  22: 192606.493 ops/s
Iteration  23: 192558.799 ops/s
Iteration  24: 192695.376 ops/s
Iteration  25: 192516.200 ops/s
Iteration  26: 192535.575 ops/s
Iteration  27: 192807.533 ops/s
Iteration  28: 192248.193 ops/s
Iteration  29: 192513.568 ops/s
Iteration  30: 192908.171 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_895._Benchmark.benchmark_Cluster_895":
  192580.719 ±(99.9%) 199.363 ops/s [Average]
  (min, avg, max) = (192005.670, 192580.719, 193292.203), stdev = 298.397
  CI (99.9%): [192381.356, 192780.082] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_895._Benchmark.benchmark_Cluster_895  thrpt   30  192580.719 ± 199.363  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_896._Benchmark.benchmark_Cluster_896$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_896._Benchmark.benchmark_Cluster_896

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76355.790 ops/s
# Warmup Iteration   2: 102106.570 ops/s
# Warmup Iteration   3: 160371.762 ops/s
# Warmup Iteration   4: 160185.770 ops/s
# Warmup Iteration   5: 159920.153 ops/s
# Warmup Iteration   6: 160008.197 ops/s
# Warmup Iteration   7: 160141.712 ops/s
# Warmup Iteration   8: 160404.589 ops/s
# Warmup Iteration   9: 125546.947 ops/s
# Warmup Iteration  10: 160095.049 ops/s
# Warmup Iteration  11: 160573.149 ops/s
# Warmup Iteration  12: 160341.932 ops/s
# Warmup Iteration  13: 160467.704 ops/s
# Warmup Iteration  14: 160183.825 ops/s
# Warmup Iteration  15: 160339.666 ops/s
# Warmup Iteration  16: 160329.359 ops/s
# Warmup Iteration  17: 164427.453 ops/s
# Warmup Iteration  18: 164665.539 ops/s
# Warmup Iteration  19: 164637.589 ops/s
# Warmup Iteration  20: 164739.116 ops/s
# Warmup Iteration  21: 164340.349 ops/s
# Warmup Iteration  22: 164251.094 ops/s
# Warmup Iteration  23: 164601.120 ops/s
# Warmup Iteration  24: 164569.258 ops/s
# Warmup Iteration  25: 164267.563 ops/s
# Warmup Iteration  26: 164359.820 ops/s
# Warmup Iteration  27: 164452.924 ops/s
# Warmup Iteration  28: 164320.954 ops/s
# Warmup Iteration  29: 164344.485 ops/s
# Warmup Iteration  30: 164578.550 ops/s
Iteration   1: 164872.133 ops/s
Iteration   2: 164717.145 ops/s
Iteration   3: 164419.252 ops/s
Iteration   4: 164443.284 ops/s
Iteration   5: 164349.227 ops/s
Iteration   6: 164157.001 ops/s
Iteration   7: 164680.710 ops/s
Iteration   8: 164136.470 ops/s
Iteration   9: 164449.622 ops/s
Iteration  10: 164583.934 ops/s
Iteration  11: 164290.755 ops/s
Iteration  12: 164756.531 ops/s
Iteration  13: 164435.330 ops/s
Iteration  14: 164388.189 ops/s
Iteration  15: 164717.684 ops/s
Iteration  16: 164646.857 ops/s
Iteration  17: 164246.118 ops/s
Iteration  18: 164513.887 ops/s
Iteration  19: 164368.306 ops/s
Iteration  20: 164302.007 ops/s
Iteration  21: 164538.234 ops/s
Iteration  22: 164296.265 ops/s
Iteration  23: 164275.974 ops/s
Iteration  24: 164198.679 ops/s
Iteration  25: 163810.062 ops/s
Iteration  26: 164438.764 ops/s
Iteration  27: 164509.904 ops/s
Iteration  28: 164061.985 ops/s
Iteration  29: 164083.396 ops/s
Iteration  30: 164588.846 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_896._Benchmark.benchmark_Cluster_896":
  164409.218 ±(99.9%) 157.737 ops/s [Average]
  (min, avg, max) = (163810.062, 164409.218, 164872.133), stdev = 236.093
  CI (99.9%): [164251.482, 164566.955] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_896._Benchmark.benchmark_Cluster_896  thrpt   30  164409.218 ± 157.737  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_897._Benchmark.benchmark_Cluster_897$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_897._Benchmark.benchmark_Cluster_897

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62109.330 ops/s
# Warmup Iteration   2: 103322.579 ops/s
# Warmup Iteration   3: 147940.037 ops/s
# Warmup Iteration   4: 147764.854 ops/s
# Warmup Iteration   5: 148454.536 ops/s
# Warmup Iteration   6: 148075.491 ops/s
# Warmup Iteration   7: 117212.779 ops/s
# Warmup Iteration   8: 148362.498 ops/s
# Warmup Iteration   9: 149101.572 ops/s
# Warmup Iteration  10: 149261.920 ops/s
# Warmup Iteration  11: 148509.364 ops/s
# Warmup Iteration  12: 148547.447 ops/s
# Warmup Iteration  13: 148801.420 ops/s
# Warmup Iteration  14: 148510.448 ops/s
# Warmup Iteration  15: 148625.830 ops/s
# Warmup Iteration  16: 148398.888 ops/s
# Warmup Iteration  17: 147977.646 ops/s
# Warmup Iteration  18: 148350.551 ops/s
# Warmup Iteration  19: 148156.767 ops/s
# Warmup Iteration  20: 148399.789 ops/s
# Warmup Iteration  21: 148167.200 ops/s
# Warmup Iteration  22: 148369.481 ops/s
# Warmup Iteration  23: 148040.414 ops/s
# Warmup Iteration  24: 148202.028 ops/s
# Warmup Iteration  25: 148341.696 ops/s
# Warmup Iteration  26: 148567.318 ops/s
# Warmup Iteration  27: 147967.198 ops/s
# Warmup Iteration  28: 148486.300 ops/s
# Warmup Iteration  29: 148232.268 ops/s
# Warmup Iteration  30: 148220.391 ops/s
Iteration   1: 148069.092 ops/s
Iteration   2: 147976.538 ops/s
Iteration   3: 148660.513 ops/s
Iteration   4: 148475.578 ops/s
Iteration   5: 148661.416 ops/s
Iteration   6: 148102.239 ops/s
Iteration   7: 147837.832 ops/s
Iteration   8: 148645.120 ops/s
Iteration   9: 148361.560 ops/s
Iteration  10: 148788.418 ops/s
Iteration  11: 148179.303 ops/s
Iteration  12: 148338.750 ops/s
Iteration  13: 148387.427 ops/s
Iteration  14: 148088.014 ops/s
Iteration  15: 148032.416 ops/s
Iteration  16: 148111.867 ops/s
Iteration  17: 148536.106 ops/s
Iteration  18: 148075.731 ops/s
Iteration  19: 148000.797 ops/s
Iteration  20: 148118.078 ops/s
Iteration  21: 148431.046 ops/s
Iteration  22: 148409.239 ops/s
Iteration  23: 148422.247 ops/s
Iteration  24: 148297.720 ops/s
Iteration  25: 147949.432 ops/s
Iteration  26: 148470.964 ops/s
Iteration  27: 148710.434 ops/s
Iteration  28: 148096.517 ops/s
Iteration  29: 148380.394 ops/s
Iteration  30: 148184.984 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_897._Benchmark.benchmark_Cluster_897":
  148293.326 ±(99.9%) 170.662 ops/s [Average]
  (min, avg, max) = (147837.832, 148293.326, 148788.418), stdev = 255.439
  CI (99.9%): [148122.663, 148463.988] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_897._Benchmark.benchmark_Cluster_897  thrpt   30  148293.326 ± 170.662  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_898._Benchmark.benchmark_Cluster_898$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_898._Benchmark.benchmark_Cluster_898

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70255.397 ops/s
# Warmup Iteration   2: 110730.023 ops/s
# Warmup Iteration   3: 166690.996 ops/s
# Warmup Iteration   4: 165700.294 ops/s
# Warmup Iteration   5: 166767.405 ops/s
# Warmup Iteration   6: 166683.687 ops/s
# Warmup Iteration   7: 162196.143 ops/s
# Warmup Iteration   8: 136045.861 ops/s
# Warmup Iteration   9: 166570.679 ops/s
# Warmup Iteration  10: 166919.754 ops/s
# Warmup Iteration  11: 166589.703 ops/s
# Warmup Iteration  12: 166709.226 ops/s
# Warmup Iteration  13: 166410.903 ops/s
# Warmup Iteration  14: 166743.886 ops/s
# Warmup Iteration  15: 166817.439 ops/s
# Warmup Iteration  16: 166860.652 ops/s
# Warmup Iteration  17: 166609.198 ops/s
# Warmup Iteration  18: 166392.357 ops/s
# Warmup Iteration  19: 166883.136 ops/s
# Warmup Iteration  20: 166694.428 ops/s
# Warmup Iteration  21: 166579.285 ops/s
# Warmup Iteration  22: 166414.306 ops/s
# Warmup Iteration  23: 166708.401 ops/s
# Warmup Iteration  24: 166616.640 ops/s
# Warmup Iteration  25: 166719.302 ops/s
# Warmup Iteration  26: 166523.064 ops/s
# Warmup Iteration  27: 166570.154 ops/s
# Warmup Iteration  28: 166929.783 ops/s
# Warmup Iteration  29: 166583.670 ops/s
# Warmup Iteration  30: 166990.371 ops/s
Iteration   1: 166312.150 ops/s
Iteration   2: 166470.769 ops/s
Iteration   3: 166905.710 ops/s
Iteration   4: 166995.101 ops/s
Iteration   5: 166610.012 ops/s
Iteration   6: 166823.485 ops/s
Iteration   7: 166789.306 ops/s
Iteration   8: 166830.697 ops/s
Iteration   9: 166750.777 ops/s
Iteration  10: 166797.187 ops/s
Iteration  11: 166506.562 ops/s
Iteration  12: 166818.108 ops/s
Iteration  13: 166497.303 ops/s
Iteration  14: 166764.175 ops/s
Iteration  15: 166661.843 ops/s
Iteration  16: 166558.398 ops/s
Iteration  17: 166921.355 ops/s
Iteration  18: 166671.074 ops/s
Iteration  19: 166708.695 ops/s
Iteration  20: 166768.356 ops/s
Iteration  21: 166816.007 ops/s
Iteration  22: 166670.618 ops/s
Iteration  23: 167194.161 ops/s
Iteration  24: 167559.865 ops/s
Iteration  25: 166818.851 ops/s
Iteration  26: 167011.676 ops/s
Iteration  27: 166715.773 ops/s
Iteration  28: 166934.092 ops/s
Iteration  29: 166913.454 ops/s
Iteration  30: 166754.919 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_898._Benchmark.benchmark_Cluster_898":
  166785.016 ±(99.9%) 155.028 ops/s [Average]
  (min, avg, max) = (166312.150, 166785.016, 167559.865), stdev = 232.038
  CI (99.9%): [166629.988, 166940.044] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_898._Benchmark.benchmark_Cluster_898  thrpt   30  166785.016 ± 155.028  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_899._Benchmark.benchmark_Cluster_899$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_899._Benchmark.benchmark_Cluster_899

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51627.481 ops/s
# Warmup Iteration   2: 108516.373 ops/s
# Warmup Iteration   3: 163294.861 ops/s
# Warmup Iteration   4: 162040.371 ops/s
# Warmup Iteration   5: 163351.632 ops/s
# Warmup Iteration   6: 150149.395 ops/s
# Warmup Iteration   7: 142294.250 ops/s
# Warmup Iteration   8: 162771.098 ops/s
# Warmup Iteration   9: 163042.969 ops/s
# Warmup Iteration  10: 162618.986 ops/s
# Warmup Iteration  11: 162675.454 ops/s
# Warmup Iteration  12: 162798.997 ops/s
# Warmup Iteration  13: 163079.792 ops/s
# Warmup Iteration  14: 162724.617 ops/s
# Warmup Iteration  15: 162989.217 ops/s
# Warmup Iteration  16: 162362.448 ops/s
# Warmup Iteration  17: 162583.006 ops/s
# Warmup Iteration  18: 162591.503 ops/s
# Warmup Iteration  19: 162718.416 ops/s
# Warmup Iteration  20: 162607.548 ops/s
# Warmup Iteration  21: 162555.801 ops/s
# Warmup Iteration  22: 162402.881 ops/s
# Warmup Iteration  23: 162681.530 ops/s
# Warmup Iteration  24: 162440.500 ops/s
# Warmup Iteration  25: 162092.384 ops/s
# Warmup Iteration  26: 162606.065 ops/s
# Warmup Iteration  27: 162269.432 ops/s
# Warmup Iteration  28: 162487.650 ops/s
# Warmup Iteration  29: 162567.094 ops/s
# Warmup Iteration  30: 162439.909 ops/s
Iteration   1: 162315.972 ops/s
Iteration   2: 163005.123 ops/s
Iteration   3: 162258.648 ops/s
Iteration   4: 162500.752 ops/s
Iteration   5: 161959.757 ops/s
Iteration   6: 162462.162 ops/s
Iteration   7: 162695.174 ops/s
Iteration   8: 162924.311 ops/s
Iteration   9: 162332.858 ops/s
Iteration  10: 162946.772 ops/s
Iteration  11: 162810.982 ops/s
Iteration  12: 163025.251 ops/s
Iteration  13: 162533.100 ops/s
Iteration  14: 162404.808 ops/s
Iteration  15: 162269.307 ops/s
Iteration  16: 162465.076 ops/s
Iteration  17: 162733.771 ops/s
Iteration  18: 162317.763 ops/s
Iteration  19: 162818.771 ops/s
Iteration  20: 162289.308 ops/s
Iteration  21: 162928.575 ops/s
Iteration  22: 162741.920 ops/s
Iteration  23: 162881.989 ops/s
Iteration  24: 162576.292 ops/s
Iteration  25: 162851.300 ops/s
Iteration  26: 162830.336 ops/s
Iteration  27: 162834.945 ops/s
Iteration  28: 162545.979 ops/s
Iteration  29: 162369.888 ops/s
Iteration  30: 162398.166 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_899._Benchmark.benchmark_Cluster_899":
  162600.969 ±(99.9%) 184.834 ops/s [Average]
  (min, avg, max) = (161959.757, 162600.969, 163025.251), stdev = 276.650
  CI (99.9%): [162416.135, 162785.802] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_899._Benchmark.benchmark_Cluster_899  thrpt   30  162600.969 ± 184.834  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_9._Benchmark.benchmark_Cluster_9$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_9._Benchmark.benchmark_Cluster_9

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70907.126 ops/s
# Warmup Iteration   2: 142275.818 ops/s
# Warmup Iteration   3: 180122.268 ops/s
# Warmup Iteration   4: 181179.382 ops/s
# Warmup Iteration   5: 178428.971 ops/s
# Warmup Iteration   6: 145546.953 ops/s
# Warmup Iteration   7: 180530.138 ops/s
# Warmup Iteration   8: 181038.886 ops/s
# Warmup Iteration   9: 181159.655 ops/s
# Warmup Iteration  10: 181346.125 ops/s
# Warmup Iteration  11: 181154.846 ops/s
# Warmup Iteration  12: 181532.914 ops/s
# Warmup Iteration  13: 181454.211 ops/s
# Warmup Iteration  14: 181037.970 ops/s
# Warmup Iteration  15: 181030.117 ops/s
# Warmup Iteration  16: 181275.473 ops/s
# Warmup Iteration  17: 181467.761 ops/s
# Warmup Iteration  18: 181057.882 ops/s
# Warmup Iteration  19: 181040.872 ops/s
# Warmup Iteration  20: 181246.370 ops/s
# Warmup Iteration  21: 180987.639 ops/s
# Warmup Iteration  22: 180986.236 ops/s
# Warmup Iteration  23: 181247.404 ops/s
# Warmup Iteration  24: 181165.661 ops/s
# Warmup Iteration  25: 181081.439 ops/s
# Warmup Iteration  26: 181271.975 ops/s
# Warmup Iteration  27: 180947.834 ops/s
# Warmup Iteration  28: 181343.366 ops/s
# Warmup Iteration  29: 180878.892 ops/s
# Warmup Iteration  30: 180363.992 ops/s
Iteration   1: 181376.233 ops/s
Iteration   2: 180943.829 ops/s
Iteration   3: 181418.248 ops/s
Iteration   4: 181198.395 ops/s
Iteration   5: 181469.957 ops/s
Iteration   6: 181342.979 ops/s
Iteration   7: 181188.398 ops/s
Iteration   8: 180892.148 ops/s
Iteration   9: 180994.915 ops/s
Iteration  10: 180909.717 ops/s
Iteration  11: 181343.892 ops/s
Iteration  12: 180616.318 ops/s
Iteration  13: 181175.479 ops/s
Iteration  14: 181210.102 ops/s
Iteration  15: 181430.461 ops/s
Iteration  16: 181524.088 ops/s
Iteration  17: 181266.743 ops/s
Iteration  18: 181252.095 ops/s
Iteration  19: 180749.932 ops/s
Iteration  20: 180817.992 ops/s
Iteration  21: 181342.902 ops/s
Iteration  22: 181000.075 ops/s
Iteration  23: 181045.237 ops/s
Iteration  24: 181437.868 ops/s
Iteration  25: 181116.131 ops/s
Iteration  26: 181312.339 ops/s
Iteration  27: 181120.141 ops/s
Iteration  28: 181015.650 ops/s
Iteration  29: 181493.429 ops/s
Iteration  30: 181357.216 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_9._Benchmark.benchmark_Cluster_9":
  181178.764 ±(99.9%) 158.542 ops/s [Average]
  (min, avg, max) = (180616.318, 181178.764, 181524.088), stdev = 237.298
  CI (99.9%): [181020.222, 181337.305] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score     Error  Units
Cluster_9._Benchmark.benchmark_Cluster_9  thrpt   30  181178.764 ± 158.542  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_90._Benchmark.benchmark_Cluster_90$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_90._Benchmark.benchmark_Cluster_90

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 156039.078 ops/s
# Warmup Iteration   2: 238001.379 ops/s
# Warmup Iteration   3: 324673.619 ops/s
# Warmup Iteration   4: 322107.721 ops/s
# Warmup Iteration   5: 324402.720 ops/s
# Warmup Iteration   6: 324500.013 ops/s
# Warmup Iteration   7: 257669.835 ops/s
# Warmup Iteration   8: 324676.317 ops/s
# Warmup Iteration   9: 324668.626 ops/s
# Warmup Iteration  10: 324745.890 ops/s
# Warmup Iteration  11: 324963.345 ops/s
# Warmup Iteration  12: 324828.529 ops/s
# Warmup Iteration  13: 324234.796 ops/s
# Warmup Iteration  14: 324181.846 ops/s
# Warmup Iteration  15: 324889.567 ops/s
# Warmup Iteration  16: 325275.381 ops/s
# Warmup Iteration  17: 324916.773 ops/s
# Warmup Iteration  18: 324752.750 ops/s
# Warmup Iteration  19: 324585.539 ops/s
# Warmup Iteration  20: 324228.579 ops/s
# Warmup Iteration  21: 324752.803 ops/s
# Warmup Iteration  22: 324759.421 ops/s
# Warmup Iteration  23: 325097.640 ops/s
# Warmup Iteration  24: 324585.553 ops/s
# Warmup Iteration  25: 324821.371 ops/s
# Warmup Iteration  26: 324786.240 ops/s
# Warmup Iteration  27: 324695.074 ops/s
# Warmup Iteration  28: 324878.684 ops/s
# Warmup Iteration  29: 324715.927 ops/s
# Warmup Iteration  30: 325150.253 ops/s
Iteration   1: 325145.509 ops/s
Iteration   2: 324712.447 ops/s
Iteration   3: 325034.912 ops/s
Iteration   4: 324855.532 ops/s
Iteration   5: 324962.976 ops/s
Iteration   6: 324338.658 ops/s
Iteration   7: 324429.164 ops/s
Iteration   8: 324642.571 ops/s
Iteration   9: 324721.476 ops/s
Iteration  10: 324475.216 ops/s
Iteration  11: 324782.633 ops/s
Iteration  12: 324496.588 ops/s
Iteration  13: 325117.681 ops/s
Iteration  14: 324938.166 ops/s
Iteration  15: 325185.988 ops/s
Iteration  16: 325212.882 ops/s
Iteration  17: 324512.756 ops/s
Iteration  18: 325144.237 ops/s
Iteration  19: 324830.294 ops/s
Iteration  20: 325140.115 ops/s
Iteration  21: 324502.094 ops/s
Iteration  22: 324900.674 ops/s
Iteration  23: 324651.240 ops/s
Iteration  24: 325179.784 ops/s
Iteration  25: 324132.236 ops/s
Iteration  26: 324439.744 ops/s
Iteration  27: 323825.304 ops/s
Iteration  28: 324628.803 ops/s
Iteration  29: 324289.299 ops/s
Iteration  30: 325093.974 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_90._Benchmark.benchmark_Cluster_90":
  324744.098 ±(99.9%) 236.111 ops/s [Average]
  (min, avg, max) = (323825.304, 324744.098, 325212.882), stdev = 353.400
  CI (99.9%): [324507.987, 324980.210] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_90._Benchmark.benchmark_Cluster_90  thrpt   30  324744.098 ± 236.111  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_900._Benchmark.benchmark_Cluster_900$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_900._Benchmark.benchmark_Cluster_900

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51617.192 ops/s
# Warmup Iteration   2: 134528.197 ops/s
# Warmup Iteration   3: 189737.557 ops/s
# Warmup Iteration   4: 191506.298 ops/s
# Warmup Iteration   5: 160375.283 ops/s
# Warmup Iteration   6: 183400.641 ops/s
# Warmup Iteration   7: 191239.000 ops/s
# Warmup Iteration   8: 190670.348 ops/s
# Warmup Iteration   9: 191664.774 ops/s
# Warmup Iteration  10: 191591.168 ops/s
# Warmup Iteration  11: 191530.750 ops/s
# Warmup Iteration  12: 191723.414 ops/s
# Warmup Iteration  13: 190808.791 ops/s
# Warmup Iteration  14: 191418.230 ops/s
# Warmup Iteration  15: 191529.207 ops/s
# Warmup Iteration  16: 191788.141 ops/s
# Warmup Iteration  17: 191297.186 ops/s
# Warmup Iteration  18: 191214.932 ops/s
# Warmup Iteration  19: 191812.215 ops/s
# Warmup Iteration  20: 191199.473 ops/s
# Warmup Iteration  21: 191807.764 ops/s
# Warmup Iteration  22: 191543.882 ops/s
# Warmup Iteration  23: 191290.621 ops/s
# Warmup Iteration  24: 191750.448 ops/s
# Warmup Iteration  25: 191259.388 ops/s
# Warmup Iteration  26: 191771.246 ops/s
# Warmup Iteration  27: 191095.481 ops/s
# Warmup Iteration  28: 191292.422 ops/s
# Warmup Iteration  29: 191925.246 ops/s
# Warmup Iteration  30: 191249.403 ops/s
Iteration   1: 191900.817 ops/s
Iteration   2: 191878.675 ops/s
Iteration   3: 191071.710 ops/s
Iteration   4: 191430.934 ops/s
Iteration   5: 192013.131 ops/s
Iteration   6: 191209.013 ops/s
Iteration   7: 191340.330 ops/s
Iteration   8: 191486.908 ops/s
Iteration   9: 191769.378 ops/s
Iteration  10: 191378.924 ops/s
Iteration  11: 191873.533 ops/s
Iteration  12: 191612.976 ops/s
Iteration  13: 191695.065 ops/s
Iteration  14: 191605.251 ops/s
Iteration  15: 191863.126 ops/s
Iteration  16: 191568.105 ops/s
Iteration  17: 191632.194 ops/s
Iteration  18: 191305.908 ops/s
Iteration  19: 191687.455 ops/s
Iteration  20: 191280.864 ops/s
Iteration  21: 191558.615 ops/s
Iteration  22: 191952.711 ops/s
Iteration  23: 191674.867 ops/s
Iteration  24: 191462.187 ops/s
Iteration  25: 191555.100 ops/s
Iteration  26: 191782.424 ops/s
Iteration  27: 191178.253 ops/s
Iteration  28: 191945.470 ops/s
Iteration  29: 191404.699 ops/s
Iteration  30: 191263.240 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_900._Benchmark.benchmark_Cluster_900":
  191579.395 ±(99.9%) 172.381 ops/s [Average]
  (min, avg, max) = (191071.710, 191579.395, 192013.131), stdev = 258.011
  CI (99.9%): [191407.015, 191751.776] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_900._Benchmark.benchmark_Cluster_900  thrpt   30  191579.395 ± 172.381  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_901._Benchmark.benchmark_Cluster_901$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_901._Benchmark.benchmark_Cluster_901

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50156.604 ops/s
# Warmup Iteration   2: 120475.741 ops/s
# Warmup Iteration   3: 171427.211 ops/s
# Warmup Iteration   4: 172236.222 ops/s
# Warmup Iteration   5: 172521.817 ops/s
# Warmup Iteration   6: 137505.937 ops/s
# Warmup Iteration   7: 172916.528 ops/s
# Warmup Iteration   8: 172883.173 ops/s
# Warmup Iteration   9: 173197.963 ops/s
# Warmup Iteration  10: 172888.688 ops/s
# Warmup Iteration  11: 173165.803 ops/s
# Warmup Iteration  12: 172966.339 ops/s
# Warmup Iteration  13: 172952.940 ops/s
# Warmup Iteration  14: 173004.911 ops/s
# Warmup Iteration  15: 173103.356 ops/s
# Warmup Iteration  16: 173139.540 ops/s
# Warmup Iteration  17: 172555.151 ops/s
# Warmup Iteration  18: 172822.630 ops/s
# Warmup Iteration  19: 172745.668 ops/s
# Warmup Iteration  20: 172961.963 ops/s
# Warmup Iteration  21: 172982.623 ops/s
# Warmup Iteration  22: 172990.316 ops/s
# Warmup Iteration  23: 172641.348 ops/s
# Warmup Iteration  24: 172551.268 ops/s
# Warmup Iteration  25: 172996.727 ops/s
# Warmup Iteration  26: 172645.816 ops/s
# Warmup Iteration  27: 173118.476 ops/s
# Warmup Iteration  28: 172718.194 ops/s
# Warmup Iteration  29: 172897.110 ops/s
# Warmup Iteration  30: 172855.964 ops/s
Iteration   1: 172938.957 ops/s
Iteration   2: 172884.585 ops/s
Iteration   3: 172725.612 ops/s
Iteration   4: 172683.844 ops/s
Iteration   5: 173122.651 ops/s
Iteration   6: 173160.420 ops/s
Iteration   7: 172648.774 ops/s
Iteration   8: 172981.142 ops/s
Iteration   9: 172672.448 ops/s
Iteration  10: 172715.219 ops/s
Iteration  11: 173103.953 ops/s
Iteration  12: 172815.845 ops/s
Iteration  13: 172751.874 ops/s
Iteration  14: 172740.636 ops/s
Iteration  15: 172806.659 ops/s
Iteration  16: 172725.751 ops/s
Iteration  17: 173096.786 ops/s
Iteration  18: 172719.386 ops/s
Iteration  19: 173028.704 ops/s
Iteration  20: 173286.329 ops/s
Iteration  21: 173060.810 ops/s
Iteration  22: 172932.861 ops/s
Iteration  23: 173110.952 ops/s
Iteration  24: 172710.948 ops/s
Iteration  25: 172629.489 ops/s
Iteration  26: 172528.517 ops/s
Iteration  27: 172647.708 ops/s
Iteration  28: 173104.184 ops/s
Iteration  29: 172660.923 ops/s
Iteration  30: 172490.606 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_901._Benchmark.benchmark_Cluster_901":
  172849.552 ±(99.9%) 141.253 ops/s [Average]
  (min, avg, max) = (172490.606, 172849.552, 173286.329), stdev = 211.421
  CI (99.9%): [172708.299, 172990.806] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_901._Benchmark.benchmark_Cluster_901  thrpt   30  172849.552 ± 141.253  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_902._Benchmark.benchmark_Cluster_902$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_902._Benchmark.benchmark_Cluster_902

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65363.691 ops/s
# Warmup Iteration   2: 133008.081 ops/s
# Warmup Iteration   3: 178076.101 ops/s
# Warmup Iteration   4: 179324.614 ops/s
# Warmup Iteration   5: 178993.674 ops/s
# Warmup Iteration   6: 142104.902 ops/s
# Warmup Iteration   7: 179392.186 ops/s
# Warmup Iteration   8: 179503.983 ops/s
# Warmup Iteration   9: 179768.785 ops/s
# Warmup Iteration  10: 179648.324 ops/s
# Warmup Iteration  11: 179419.664 ops/s
# Warmup Iteration  12: 179408.771 ops/s
# Warmup Iteration  13: 179426.199 ops/s
# Warmup Iteration  14: 179460.468 ops/s
# Warmup Iteration  15: 179384.041 ops/s
# Warmup Iteration  16: 179978.230 ops/s
# Warmup Iteration  17: 179317.238 ops/s
# Warmup Iteration  18: 179565.814 ops/s
# Warmup Iteration  19: 179589.174 ops/s
# Warmup Iteration  20: 179575.953 ops/s
# Warmup Iteration  21: 179364.280 ops/s
# Warmup Iteration  22: 179567.882 ops/s
# Warmup Iteration  23: 179355.435 ops/s
# Warmup Iteration  24: 179377.765 ops/s
# Warmup Iteration  25: 179476.981 ops/s
# Warmup Iteration  26: 179343.340 ops/s
# Warmup Iteration  27: 179384.691 ops/s
# Warmup Iteration  28: 179533.614 ops/s
# Warmup Iteration  29: 179560.367 ops/s
# Warmup Iteration  30: 179917.645 ops/s
Iteration   1: 179904.895 ops/s
Iteration   2: 179651.909 ops/s
Iteration   3: 179812.471 ops/s
Iteration   4: 179512.545 ops/s
Iteration   5: 179536.197 ops/s
Iteration   6: 179601.646 ops/s
Iteration   7: 179622.475 ops/s
Iteration   8: 179875.237 ops/s
Iteration   9: 179774.726 ops/s
Iteration  10: 179956.902 ops/s
Iteration  11: 179638.577 ops/s
Iteration  12: 179934.222 ops/s
Iteration  13: 179343.111 ops/s
Iteration  14: 179025.213 ops/s
Iteration  15: 179498.508 ops/s
Iteration  16: 179226.924 ops/s
Iteration  17: 180004.179 ops/s
Iteration  18: 179552.262 ops/s
Iteration  19: 180000.364 ops/s
Iteration  20: 179262.975 ops/s
Iteration  21: 179765.814 ops/s
Iteration  22: 179956.901 ops/s
Iteration  23: 179503.887 ops/s
Iteration  24: 179823.685 ops/s
Iteration  25: 179206.925 ops/s
Iteration  26: 179850.874 ops/s
Iteration  27: 179381.149 ops/s
Iteration  28: 179459.262 ops/s
Iteration  29: 179631.398 ops/s
Iteration  30: 179324.261 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_902._Benchmark.benchmark_Cluster_902":
  179621.317 ±(99.9%) 177.545 ops/s [Average]
  (min, avg, max) = (179025.213, 179621.317, 180004.179), stdev = 265.742
  CI (99.9%): [179443.771, 179798.862] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_902._Benchmark.benchmark_Cluster_902  thrpt   30  179621.317 ± 177.545  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_903._Benchmark.benchmark_Cluster_903$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_903._Benchmark.benchmark_Cluster_903

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62519.526 ops/s
# Warmup Iteration   2: 127497.306 ops/s
# Warmup Iteration   3: 169846.827 ops/s
# Warmup Iteration   4: 171478.829 ops/s
# Warmup Iteration   5: 171374.700 ops/s
# Warmup Iteration   6: 135909.048 ops/s
# Warmup Iteration   7: 171630.890 ops/s
# Warmup Iteration   8: 171594.226 ops/s
# Warmup Iteration   9: 171984.336 ops/s
# Warmup Iteration  10: 171712.645 ops/s
# Warmup Iteration  11: 171364.437 ops/s
# Warmup Iteration  12: 171538.459 ops/s
# Warmup Iteration  13: 171435.303 ops/s
# Warmup Iteration  14: 171547.337 ops/s
# Warmup Iteration  15: 171408.200 ops/s
# Warmup Iteration  16: 171431.678 ops/s
# Warmup Iteration  17: 172042.774 ops/s
# Warmup Iteration  18: 171793.576 ops/s
# Warmup Iteration  19: 172184.397 ops/s
# Warmup Iteration  20: 172252.055 ops/s
# Warmup Iteration  21: 172180.495 ops/s
# Warmup Iteration  22: 172003.112 ops/s
# Warmup Iteration  23: 172104.227 ops/s
# Warmup Iteration  24: 172390.425 ops/s
# Warmup Iteration  25: 172552.365 ops/s
# Warmup Iteration  26: 172275.181 ops/s
# Warmup Iteration  27: 172393.301 ops/s
# Warmup Iteration  28: 172588.755 ops/s
# Warmup Iteration  29: 172325.666 ops/s
# Warmup Iteration  30: 172191.086 ops/s
Iteration   1: 172517.859 ops/s
Iteration   2: 172329.117 ops/s
Iteration   3: 171598.980 ops/s
Iteration   4: 172033.921 ops/s
Iteration   5: 172103.958 ops/s
Iteration   6: 171734.803 ops/s
Iteration   7: 172444.495 ops/s
Iteration   8: 171941.846 ops/s
Iteration   9: 171969.572 ops/s
Iteration  10: 172531.541 ops/s
Iteration  11: 172109.118 ops/s
Iteration  12: 172172.199 ops/s
Iteration  13: 171854.944 ops/s
Iteration  14: 171986.735 ops/s
Iteration  15: 171850.221 ops/s
Iteration  16: 172270.653 ops/s
Iteration  17: 172193.249 ops/s
Iteration  18: 172337.009 ops/s
Iteration  19: 172447.549 ops/s
Iteration  20: 172188.440 ops/s
Iteration  21: 171911.536 ops/s
Iteration  22: 172318.017 ops/s
Iteration  23: 172104.140 ops/s
Iteration  24: 172134.087 ops/s
Iteration  25: 172283.093 ops/s
Iteration  26: 172141.155 ops/s
Iteration  27: 172226.716 ops/s
Iteration  28: 171742.283 ops/s
Iteration  29: 172253.861 ops/s
Iteration  30: 172263.451 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_903._Benchmark.benchmark_Cluster_903":
  172133.152 ±(99.9%) 157.268 ops/s [Average]
  (min, avg, max) = (171598.980, 172133.152, 172531.541), stdev = 235.391
  CI (99.9%): [171975.884, 172290.419] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_903._Benchmark.benchmark_Cluster_903  thrpt   30  172133.152 ± 157.268  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_904._Benchmark.benchmark_Cluster_904$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_904._Benchmark.benchmark_Cluster_904

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48353.578 ops/s
# Warmup Iteration   2: 112984.714 ops/s
# Warmup Iteration   3: 161987.085 ops/s
# Warmup Iteration   4: 163619.236 ops/s
# Warmup Iteration   5: 162950.712 ops/s
# Warmup Iteration   6: 129444.422 ops/s
# Warmup Iteration   7: 163971.061 ops/s
# Warmup Iteration   8: 163285.401 ops/s
# Warmup Iteration   9: 163901.399 ops/s
# Warmup Iteration  10: 164320.505 ops/s
# Warmup Iteration  11: 163503.491 ops/s
# Warmup Iteration  12: 163848.726 ops/s
# Warmup Iteration  13: 163902.995 ops/s
# Warmup Iteration  14: 163798.523 ops/s
# Warmup Iteration  15: 163634.407 ops/s
# Warmup Iteration  16: 163909.356 ops/s
# Warmup Iteration  17: 163636.069 ops/s
# Warmup Iteration  18: 163880.246 ops/s
# Warmup Iteration  19: 163245.363 ops/s
# Warmup Iteration  20: 163965.157 ops/s
# Warmup Iteration  21: 164190.696 ops/s
# Warmup Iteration  22: 163907.557 ops/s
# Warmup Iteration  23: 164261.333 ops/s
# Warmup Iteration  24: 164049.500 ops/s
# Warmup Iteration  25: 163328.371 ops/s
# Warmup Iteration  26: 163897.834 ops/s
# Warmup Iteration  27: 163819.959 ops/s
# Warmup Iteration  28: 163768.168 ops/s
# Warmup Iteration  29: 164098.193 ops/s
# Warmup Iteration  30: 163910.098 ops/s
Iteration   1: 163928.251 ops/s
Iteration   2: 164594.508 ops/s
Iteration   3: 164176.822 ops/s
Iteration   4: 164543.811 ops/s
Iteration   5: 164398.826 ops/s
Iteration   6: 164892.243 ops/s
Iteration   7: 163787.709 ops/s
Iteration   8: 164645.210 ops/s
Iteration   9: 164502.052 ops/s
Iteration  10: 163277.129 ops/s
Iteration  11: 164636.949 ops/s
Iteration  12: 164547.591 ops/s
Iteration  13: 163693.447 ops/s
Iteration  14: 164515.298 ops/s
Iteration  15: 163220.275 ops/s
Iteration  16: 164426.468 ops/s
Iteration  17: 164340.826 ops/s
Iteration  18: 163978.861 ops/s
Iteration  19: 163432.788 ops/s
Iteration  20: 164174.083 ops/s
Iteration  21: 164478.821 ops/s
Iteration  22: 164097.212 ops/s
Iteration  23: 164517.000 ops/s
Iteration  24: 164436.767 ops/s
Iteration  25: 164667.096 ops/s
Iteration  26: 164032.039 ops/s
Iteration  27: 164175.870 ops/s
Iteration  28: 164490.924 ops/s
Iteration  29: 163854.315 ops/s
Iteration  30: 164064.023 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_904._Benchmark.benchmark_Cluster_904":
  164217.574 ±(99.9%) 283.461 ops/s [Average]
  (min, avg, max) = (163220.275, 164217.574, 164892.243), stdev = 424.272
  CI (99.9%): [163934.112, 164501.035] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_904._Benchmark.benchmark_Cluster_904  thrpt   30  164217.574 ± 283.461  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_905._Benchmark.benchmark_Cluster_905$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_905._Benchmark.benchmark_Cluster_905

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47821.854 ops/s
# Warmup Iteration   2: 90333.392 ops/s
# Warmup Iteration   3: 147984.053 ops/s
# Warmup Iteration   4: 146894.490 ops/s
# Warmup Iteration   5: 148181.447 ops/s
# Warmup Iteration   6: 148259.626 ops/s
# Warmup Iteration   7: 117618.403 ops/s
# Warmup Iteration   8: 148085.603 ops/s
# Warmup Iteration   9: 147908.277 ops/s
# Warmup Iteration  10: 147882.322 ops/s
# Warmup Iteration  11: 147816.684 ops/s
# Warmup Iteration  12: 148015.382 ops/s
# Warmup Iteration  13: 148207.706 ops/s
# Warmup Iteration  14: 148152.430 ops/s
# Warmup Iteration  15: 147858.276 ops/s
# Warmup Iteration  16: 147924.229 ops/s
# Warmup Iteration  17: 147318.525 ops/s
# Warmup Iteration  18: 147463.925 ops/s
# Warmup Iteration  19: 147397.584 ops/s
# Warmup Iteration  20: 147599.231 ops/s
# Warmup Iteration  21: 147640.371 ops/s
# Warmup Iteration  22: 147544.520 ops/s
# Warmup Iteration  23: 147562.078 ops/s
# Warmup Iteration  24: 147413.251 ops/s
# Warmup Iteration  25: 147733.043 ops/s
# Warmup Iteration  26: 147710.670 ops/s
# Warmup Iteration  27: 147507.863 ops/s
# Warmup Iteration  28: 147554.458 ops/s
# Warmup Iteration  29: 147474.152 ops/s
# Warmup Iteration  30: 147552.273 ops/s
Iteration   1: 147468.476 ops/s
Iteration   2: 147673.860 ops/s
Iteration   3: 147766.841 ops/s
Iteration   4: 147899.977 ops/s
Iteration   5: 147617.118 ops/s
Iteration   6: 147464.652 ops/s
Iteration   7: 147390.105 ops/s
Iteration   8: 147837.015 ops/s
Iteration   9: 147484.721 ops/s
Iteration  10: 147895.379 ops/s
Iteration  11: 147590.834 ops/s
Iteration  12: 147853.906 ops/s
Iteration  13: 147380.364 ops/s
Iteration  14: 147822.117 ops/s
Iteration  15: 147686.582 ops/s
Iteration  16: 147807.384 ops/s
Iteration  17: 147423.149 ops/s
Iteration  18: 147503.875 ops/s
Iteration  19: 147154.844 ops/s
Iteration  20: 147782.826 ops/s
Iteration  21: 147471.699 ops/s
Iteration  22: 147964.261 ops/s
Iteration  23: 147397.113 ops/s
Iteration  24: 147649.575 ops/s
Iteration  25: 147329.095 ops/s
Iteration  26: 147641.835 ops/s
Iteration  27: 147490.035 ops/s
Iteration  28: 147591.134 ops/s
Iteration  29: 147673.902 ops/s
Iteration  30: 147818.485 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_905._Benchmark.benchmark_Cluster_905":
  147617.705 ±(99.9%) 134.115 ops/s [Average]
  (min, avg, max) = (147154.844, 147617.705, 147964.261), stdev = 200.737
  CI (99.9%): [147483.590, 147751.820] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_905._Benchmark.benchmark_Cluster_905  thrpt   30  147617.705 ± 134.115  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_906._Benchmark.benchmark_Cluster_906$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_906._Benchmark.benchmark_Cluster_906

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52390.764 ops/s
# Warmup Iteration   2: 91224.948 ops/s
# Warmup Iteration   3: 135727.478 ops/s
# Warmup Iteration   4: 134332.359 ops/s
# Warmup Iteration   5: 135500.469 ops/s
# Warmup Iteration   6: 135287.247 ops/s
# Warmup Iteration   7: 105503.140 ops/s
# Warmup Iteration   8: 135781.014 ops/s
# Warmup Iteration   9: 135941.711 ops/s
# Warmup Iteration  10: 135886.500 ops/s
# Warmup Iteration  11: 135973.470 ops/s
# Warmup Iteration  12: 135989.751 ops/s
# Warmup Iteration  13: 135889.077 ops/s
# Warmup Iteration  14: 136111.162 ops/s
# Warmup Iteration  15: 136082.499 ops/s
# Warmup Iteration  16: 135873.184 ops/s
# Warmup Iteration  17: 137735.839 ops/s
# Warmup Iteration  18: 137810.086 ops/s
# Warmup Iteration  19: 138016.825 ops/s
# Warmup Iteration  20: 137914.351 ops/s
# Warmup Iteration  21: 137685.099 ops/s
# Warmup Iteration  22: 137494.394 ops/s
# Warmup Iteration  23: 137493.950 ops/s
# Warmup Iteration  24: 137429.915 ops/s
# Warmup Iteration  25: 138217.440 ops/s
# Warmup Iteration  26: 137837.641 ops/s
# Warmup Iteration  27: 138032.115 ops/s
# Warmup Iteration  28: 137481.591 ops/s
# Warmup Iteration  29: 137716.118 ops/s
# Warmup Iteration  30: 137526.435 ops/s
Iteration   1: 137456.525 ops/s
Iteration   2: 137612.001 ops/s
Iteration   3: 137505.037 ops/s
Iteration   4: 137515.052 ops/s
Iteration   5: 137942.726 ops/s
Iteration   6: 137619.582 ops/s
Iteration   7: 137567.845 ops/s
Iteration   8: 138003.780 ops/s
Iteration   9: 137366.288 ops/s
Iteration  10: 137838.778 ops/s
Iteration  11: 137672.902 ops/s
Iteration  12: 137749.162 ops/s
Iteration  13: 137468.289 ops/s
Iteration  14: 137657.897 ops/s
Iteration  15: 138101.641 ops/s
Iteration  16: 137896.573 ops/s
Iteration  17: 137864.918 ops/s
Iteration  18: 137330.003 ops/s
Iteration  19: 137385.405 ops/s
Iteration  20: 137795.228 ops/s
Iteration  21: 137991.682 ops/s
Iteration  22: 137685.172 ops/s
Iteration  23: 137815.973 ops/s
Iteration  24: 137468.622 ops/s
Iteration  25: 137740.656 ops/s
Iteration  26: 137547.264 ops/s
Iteration  27: 137646.435 ops/s
Iteration  28: 137596.084 ops/s
Iteration  29: 137673.083 ops/s
Iteration  30: 137066.478 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_906._Benchmark.benchmark_Cluster_906":
  137652.703 ±(99.9%) 152.029 ops/s [Average]
  (min, avg, max) = (137066.478, 137652.703, 138101.641), stdev = 227.550
  CI (99.9%): [137500.673, 137804.732] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_906._Benchmark.benchmark_Cluster_906  thrpt   30  137652.703 ± 152.029  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_907._Benchmark.benchmark_Cluster_907$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_907._Benchmark.benchmark_Cluster_907

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 32897.186 ops/s
# Warmup Iteration   2: 81509.413 ops/s
# Warmup Iteration   3: 136435.521 ops/s
# Warmup Iteration   4: 142080.305 ops/s
# Warmup Iteration   5: 142613.264 ops/s
# Warmup Iteration   6: 143272.658 ops/s
# Warmup Iteration   7: 142476.834 ops/s
# Warmup Iteration   8: 111860.493 ops/s
# Warmup Iteration   9: 142444.301 ops/s
# Warmup Iteration  10: 142508.595 ops/s
# Warmup Iteration  11: 142435.259 ops/s
# Warmup Iteration  12: 142400.552 ops/s
# Warmup Iteration  13: 142544.139 ops/s
# Warmup Iteration  14: 142659.189 ops/s
# Warmup Iteration  15: 142480.130 ops/s
# Warmup Iteration  16: 142706.096 ops/s
# Warmup Iteration  17: 142592.115 ops/s
# Warmup Iteration  18: 142587.035 ops/s
# Warmup Iteration  19: 142979.824 ops/s
# Warmup Iteration  20: 142695.411 ops/s
# Warmup Iteration  21: 142388.357 ops/s
# Warmup Iteration  22: 142384.708 ops/s
# Warmup Iteration  23: 142271.956 ops/s
# Warmup Iteration  24: 142810.243 ops/s
# Warmup Iteration  25: 142734.043 ops/s
# Warmup Iteration  26: 142440.789 ops/s
# Warmup Iteration  27: 142610.937 ops/s
# Warmup Iteration  28: 142584.430 ops/s
# Warmup Iteration  29: 142874.414 ops/s
# Warmup Iteration  30: 142895.844 ops/s
Iteration   1: 142533.468 ops/s
Iteration   2: 142615.016 ops/s
Iteration   3: 142445.596 ops/s
Iteration   4: 142800.188 ops/s
Iteration   5: 142382.370 ops/s
Iteration   6: 141945.870 ops/s
Iteration   7: 142638.404 ops/s
Iteration   8: 142112.590 ops/s
Iteration   9: 142605.329 ops/s
Iteration  10: 142799.738 ops/s
Iteration  11: 142836.390 ops/s
Iteration  12: 142615.895 ops/s
Iteration  13: 142696.939 ops/s
Iteration  14: 142682.281 ops/s
Iteration  15: 142401.358 ops/s
Iteration  16: 142512.466 ops/s
Iteration  17: 143151.516 ops/s
Iteration  18: 142581.569 ops/s
Iteration  19: 142466.261 ops/s
Iteration  20: 142425.024 ops/s
Iteration  21: 142545.751 ops/s
Iteration  22: 142561.290 ops/s
Iteration  23: 142336.632 ops/s
Iteration  24: 142867.152 ops/s
Iteration  25: 142549.871 ops/s
Iteration  26: 142792.339 ops/s
Iteration  27: 142094.900 ops/s
Iteration  28: 142587.111 ops/s
Iteration  29: 142312.686 ops/s
Iteration  30: 143021.455 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_907._Benchmark.benchmark_Cluster_907":
  142563.915 ±(99.9%) 173.528 ops/s [Average]
  (min, avg, max) = (141945.870, 142563.915, 143151.516), stdev = 259.728
  CI (99.9%): [142390.387, 142737.443] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_907._Benchmark.benchmark_Cluster_907  thrpt   30  142563.915 ± 173.528  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_908._Benchmark.benchmark_Cluster_908$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_908._Benchmark.benchmark_Cluster_908

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53567.099 ops/s
# Warmup Iteration   2: 99833.875 ops/s
# Warmup Iteration   3: 149383.522 ops/s
# Warmup Iteration   4: 148319.242 ops/s
# Warmup Iteration   5: 149325.586 ops/s
# Warmup Iteration   6: 138649.072 ops/s
# Warmup Iteration   7: 127831.440 ops/s
# Warmup Iteration   8: 149534.902 ops/s
# Warmup Iteration   9: 149413.655 ops/s
# Warmup Iteration  10: 149203.959 ops/s
# Warmup Iteration  11: 149222.196 ops/s
# Warmup Iteration  12: 149720.579 ops/s
# Warmup Iteration  13: 149471.123 ops/s
# Warmup Iteration  14: 149261.921 ops/s
# Warmup Iteration  15: 149062.323 ops/s
# Warmup Iteration  16: 149668.830 ops/s
# Warmup Iteration  17: 148860.884 ops/s
# Warmup Iteration  18: 149133.259 ops/s
# Warmup Iteration  19: 149303.208 ops/s
# Warmup Iteration  20: 149672.482 ops/s
# Warmup Iteration  21: 149186.449 ops/s
# Warmup Iteration  22: 148766.084 ops/s
# Warmup Iteration  23: 148864.434 ops/s
# Warmup Iteration  24: 149130.589 ops/s
# Warmup Iteration  25: 149030.348 ops/s
# Warmup Iteration  26: 149167.275 ops/s
# Warmup Iteration  27: 149363.032 ops/s
# Warmup Iteration  28: 149379.990 ops/s
# Warmup Iteration  29: 149316.811 ops/s
# Warmup Iteration  30: 149272.257 ops/s
Iteration   1: 149428.023 ops/s
Iteration   2: 149419.972 ops/s
Iteration   3: 149055.462 ops/s
Iteration   4: 148970.821 ops/s
Iteration   5: 149118.905 ops/s
Iteration   6: 148827.829 ops/s
Iteration   7: 149063.380 ops/s
Iteration   8: 149160.023 ops/s
Iteration   9: 149131.494 ops/s
Iteration  10: 148947.303 ops/s
Iteration  11: 148928.063 ops/s
Iteration  12: 149136.873 ops/s
Iteration  13: 148965.184 ops/s
Iteration  14: 149127.919 ops/s
Iteration  15: 149011.294 ops/s
Iteration  16: 149126.964 ops/s
Iteration  17: 148820.957 ops/s
Iteration  18: 149650.182 ops/s
Iteration  19: 149261.664 ops/s
Iteration  20: 149186.725 ops/s
Iteration  21: 149188.297 ops/s
Iteration  22: 149353.368 ops/s
Iteration  23: 149299.712 ops/s
Iteration  24: 149153.307 ops/s
Iteration  25: 148866.432 ops/s
Iteration  26: 149452.430 ops/s
Iteration  27: 149472.226 ops/s
Iteration  28: 149178.447 ops/s
Iteration  29: 149098.952 ops/s
Iteration  30: 148977.525 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_908._Benchmark.benchmark_Cluster_908":
  149145.991 ±(99.9%) 135.610 ops/s [Average]
  (min, avg, max) = (148820.957, 149145.991, 149650.182), stdev = 202.975
  CI (99.9%): [149010.381, 149281.601] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_908._Benchmark.benchmark_Cluster_908  thrpt   30  149145.991 ± 135.610  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_909._Benchmark.benchmark_Cluster_909$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_909._Benchmark.benchmark_Cluster_909

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75955.451 ops/s
# Warmup Iteration   2: 138658.224 ops/s
# Warmup Iteration   3: 219132.808 ops/s
# Warmup Iteration   4: 218028.117 ops/s
# Warmup Iteration   5: 219126.162 ops/s
# Warmup Iteration   6: 218870.132 ops/s
# Warmup Iteration   7: 171510.715 ops/s
# Warmup Iteration   8: 219495.949 ops/s
# Warmup Iteration   9: 219344.521 ops/s
# Warmup Iteration  10: 219027.641 ops/s
# Warmup Iteration  11: 219426.347 ops/s
# Warmup Iteration  12: 219159.460 ops/s
# Warmup Iteration  13: 219328.734 ops/s
# Warmup Iteration  14: 218411.443 ops/s
# Warmup Iteration  15: 219280.691 ops/s
# Warmup Iteration  16: 218778.965 ops/s
# Warmup Iteration  17: 219036.697 ops/s
# Warmup Iteration  18: 218718.247 ops/s
# Warmup Iteration  19: 218964.855 ops/s
# Warmup Iteration  20: 219089.401 ops/s
# Warmup Iteration  21: 219224.208 ops/s
# Warmup Iteration  22: 218961.401 ops/s
# Warmup Iteration  23: 218924.392 ops/s
# Warmup Iteration  24: 218848.669 ops/s
# Warmup Iteration  25: 219086.543 ops/s
# Warmup Iteration  26: 219299.910 ops/s
# Warmup Iteration  27: 219156.562 ops/s
# Warmup Iteration  28: 219051.172 ops/s
# Warmup Iteration  29: 218590.234 ops/s
# Warmup Iteration  30: 219261.962 ops/s
Iteration   1: 218300.992 ops/s
Iteration   2: 219077.509 ops/s
Iteration   3: 218094.942 ops/s
Iteration   4: 218439.207 ops/s
Iteration   5: 218405.870 ops/s
Iteration   6: 218651.353 ops/s
Iteration   7: 218702.010 ops/s
Iteration   8: 219070.439 ops/s
Iteration   9: 218724.111 ops/s
Iteration  10: 219331.552 ops/s
Iteration  11: 219147.413 ops/s
Iteration  12: 219036.836 ops/s
Iteration  13: 218509.399 ops/s
Iteration  14: 218930.178 ops/s
Iteration  15: 218976.861 ops/s
Iteration  16: 219236.881 ops/s
Iteration  17: 219592.357 ops/s
Iteration  18: 219268.490 ops/s
Iteration  19: 219197.385 ops/s
Iteration  20: 219261.148 ops/s
Iteration  21: 219276.654 ops/s
Iteration  22: 218958.524 ops/s
Iteration  23: 219308.030 ops/s
Iteration  24: 219341.122 ops/s
Iteration  25: 218920.897 ops/s
Iteration  26: 218702.023 ops/s
Iteration  27: 219066.795 ops/s
Iteration  28: 218974.932 ops/s
Iteration  29: 219115.199 ops/s
Iteration  30: 218618.353 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_909._Benchmark.benchmark_Cluster_909":
  218941.249 ±(99.9%) 238.097 ops/s [Average]
  (min, avg, max) = (218094.942, 218941.249, 219592.357), stdev = 356.372
  CI (99.9%): [218703.152, 219179.346] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_909._Benchmark.benchmark_Cluster_909  thrpt   30  218941.249 ± 238.097  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_91._Benchmark.benchmark_Cluster_91$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_91._Benchmark.benchmark_Cluster_91

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58991.100 ops/s
# Warmup Iteration   2: 119227.669 ops/s
# Warmup Iteration   3: 163231.282 ops/s
# Warmup Iteration   4: 164903.388 ops/s
# Warmup Iteration   5: 165128.163 ops/s
# Warmup Iteration   6: 130846.766 ops/s
# Warmup Iteration   7: 164757.548 ops/s
# Warmup Iteration   8: 165005.302 ops/s
# Warmup Iteration   9: 165091.328 ops/s
# Warmup Iteration  10: 165159.568 ops/s
# Warmup Iteration  11: 164542.559 ops/s
# Warmup Iteration  12: 164785.078 ops/s
# Warmup Iteration  13: 164754.439 ops/s
# Warmup Iteration  14: 164797.272 ops/s
# Warmup Iteration  15: 164409.009 ops/s
# Warmup Iteration  16: 164959.454 ops/s
# Warmup Iteration  17: 165062.701 ops/s
# Warmup Iteration  18: 165203.863 ops/s
# Warmup Iteration  19: 165201.713 ops/s
# Warmup Iteration  20: 165789.638 ops/s
# Warmup Iteration  21: 164695.285 ops/s
# Warmup Iteration  22: 165636.127 ops/s
# Warmup Iteration  23: 165683.152 ops/s
# Warmup Iteration  24: 166389.367 ops/s
# Warmup Iteration  25: 166330.597 ops/s
# Warmup Iteration  26: 164730.576 ops/s
# Warmup Iteration  27: 165082.142 ops/s
# Warmup Iteration  28: 164489.444 ops/s
# Warmup Iteration  29: 164642.962 ops/s
# Warmup Iteration  30: 164538.999 ops/s
Iteration   1: 165372.924 ops/s
Iteration   2: 164459.685 ops/s
Iteration   3: 165069.668 ops/s
Iteration   4: 164999.369 ops/s
Iteration   5: 165184.667 ops/s
Iteration   6: 165182.081 ops/s
Iteration   7: 165785.675 ops/s
Iteration   8: 165533.810 ops/s
Iteration   9: 165899.779 ops/s
Iteration  10: 164472.942 ops/s
Iteration  11: 165258.206 ops/s
Iteration  12: 165275.896 ops/s
Iteration  13: 165118.882 ops/s
Iteration  14: 165104.871 ops/s
Iteration  15: 165074.548 ops/s
Iteration  16: 165231.870 ops/s
Iteration  17: 165479.543 ops/s
Iteration  18: 165768.291 ops/s
Iteration  19: 165373.626 ops/s
Iteration  20: 165009.591 ops/s
Iteration  21: 165963.302 ops/s
Iteration  22: 165024.948 ops/s
Iteration  23: 166135.450 ops/s
Iteration  24: 165632.086 ops/s
Iteration  25: 165086.794 ops/s
Iteration  26: 165822.517 ops/s
Iteration  27: 163911.962 ops/s
Iteration  28: 164551.677 ops/s
Iteration  29: 164865.730 ops/s
Iteration  30: 164463.133 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_91._Benchmark.benchmark_Cluster_91":
  165203.784 ±(99.9%) 338.100 ops/s [Average]
  (min, avg, max) = (163911.962, 165203.784, 166135.450), stdev = 506.052
  CI (99.9%): [164865.684, 165541.884] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_91._Benchmark.benchmark_Cluster_91  thrpt   30  165203.784 ± 338.100  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_910._Benchmark.benchmark_Cluster_910$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_910._Benchmark.benchmark_Cluster_910

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63681.535 ops/s
# Warmup Iteration   2: 131559.285 ops/s
# Warmup Iteration   3: 189863.600 ops/s
# Warmup Iteration   4: 190958.326 ops/s
# Warmup Iteration   5: 190111.694 ops/s
# Warmup Iteration   6: 149889.179 ops/s
# Warmup Iteration   7: 191551.664 ops/s
# Warmup Iteration   8: 191170.479 ops/s
# Warmup Iteration   9: 191318.084 ops/s
# Warmup Iteration  10: 191604.080 ops/s
# Warmup Iteration  11: 191522.214 ops/s
# Warmup Iteration  12: 191443.015 ops/s
# Warmup Iteration  13: 191186.913 ops/s
# Warmup Iteration  14: 191024.356 ops/s
# Warmup Iteration  15: 191125.548 ops/s
# Warmup Iteration  16: 191625.526 ops/s
# Warmup Iteration  17: 191207.478 ops/s
# Warmup Iteration  18: 191208.805 ops/s
# Warmup Iteration  19: 190965.977 ops/s
# Warmup Iteration  20: 191095.822 ops/s
# Warmup Iteration  21: 191358.849 ops/s
# Warmup Iteration  22: 191220.820 ops/s
# Warmup Iteration  23: 191242.019 ops/s
# Warmup Iteration  24: 191092.705 ops/s
# Warmup Iteration  25: 191271.958 ops/s
# Warmup Iteration  26: 191100.600 ops/s
# Warmup Iteration  27: 191337.105 ops/s
# Warmup Iteration  28: 191315.958 ops/s
# Warmup Iteration  29: 191170.174 ops/s
# Warmup Iteration  30: 191445.002 ops/s
Iteration   1: 191146.304 ops/s
Iteration   2: 191533.038 ops/s
Iteration   3: 191331.823 ops/s
Iteration   4: 191370.385 ops/s
Iteration   5: 191408.925 ops/s
Iteration   6: 191510.145 ops/s
Iteration   7: 191418.994 ops/s
Iteration   8: 191335.395 ops/s
Iteration   9: 191230.413 ops/s
Iteration  10: 190407.404 ops/s
Iteration  11: 190684.340 ops/s
Iteration  12: 190638.457 ops/s
Iteration  13: 191604.808 ops/s
Iteration  14: 191310.640 ops/s
Iteration  15: 190829.555 ops/s
Iteration  16: 190819.313 ops/s
Iteration  17: 191011.146 ops/s
Iteration  18: 191148.506 ops/s
Iteration  19: 190977.614 ops/s
Iteration  20: 191615.823 ops/s
Iteration  21: 190696.887 ops/s
Iteration  22: 191241.249 ops/s
Iteration  23: 191309.225 ops/s
Iteration  24: 191024.261 ops/s
Iteration  25: 191615.002 ops/s
Iteration  26: 190932.096 ops/s
Iteration  27: 191164.651 ops/s
Iteration  28: 190826.561 ops/s
Iteration  29: 190924.293 ops/s
Iteration  30: 190804.697 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_910._Benchmark.benchmark_Cluster_910":
  191129.065 ±(99.9%) 217.002 ops/s [Average]
  (min, avg, max) = (190407.404, 191129.065, 191615.823), stdev = 324.798
  CI (99.9%): [190912.063, 191346.067] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_910._Benchmark.benchmark_Cluster_910  thrpt   30  191129.065 ± 217.002  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_911._Benchmark.benchmark_Cluster_911$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_911._Benchmark.benchmark_Cluster_911

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61660.364 ops/s
# Warmup Iteration   2: 130296.918 ops/s
# Warmup Iteration   3: 180792.827 ops/s
# Warmup Iteration   4: 182147.625 ops/s
# Warmup Iteration   5: 181409.674 ops/s
# Warmup Iteration   6: 144769.549 ops/s
# Warmup Iteration   7: 182577.759 ops/s
# Warmup Iteration   8: 182218.616 ops/s
# Warmup Iteration   9: 182571.604 ops/s
# Warmup Iteration  10: 182373.890 ops/s
# Warmup Iteration  11: 182563.254 ops/s
# Warmup Iteration  12: 182391.022 ops/s
# Warmup Iteration  13: 182240.595 ops/s
# Warmup Iteration  14: 182382.913 ops/s
# Warmup Iteration  15: 182055.768 ops/s
# Warmup Iteration  16: 182356.870 ops/s
# Warmup Iteration  17: 182760.777 ops/s
# Warmup Iteration  18: 183236.613 ops/s
# Warmup Iteration  19: 183258.201 ops/s
# Warmup Iteration  20: 182782.620 ops/s
# Warmup Iteration  21: 183434.250 ops/s
# Warmup Iteration  22: 183234.971 ops/s
# Warmup Iteration  23: 183097.594 ops/s
# Warmup Iteration  24: 183206.156 ops/s
# Warmup Iteration  25: 183186.595 ops/s
# Warmup Iteration  26: 183380.223 ops/s
# Warmup Iteration  27: 183370.799 ops/s
# Warmup Iteration  28: 183206.796 ops/s
# Warmup Iteration  29: 183278.893 ops/s
# Warmup Iteration  30: 183125.687 ops/s
Iteration   1: 183262.844 ops/s
Iteration   2: 183350.916 ops/s
Iteration   3: 183434.639 ops/s
Iteration   4: 183211.335 ops/s
Iteration   5: 183478.135 ops/s
Iteration   6: 183150.221 ops/s
Iteration   7: 182720.615 ops/s
Iteration   8: 183388.591 ops/s
Iteration   9: 183305.370 ops/s
Iteration  10: 183460.913 ops/s
Iteration  11: 183333.244 ops/s
Iteration  12: 183235.704 ops/s
Iteration  13: 183567.836 ops/s
Iteration  14: 182764.173 ops/s
Iteration  15: 183533.018 ops/s
Iteration  16: 183124.517 ops/s
Iteration  17: 182880.702 ops/s
Iteration  18: 183273.406 ops/s
Iteration  19: 183244.480 ops/s
Iteration  20: 183171.364 ops/s
Iteration  21: 183403.562 ops/s
Iteration  22: 182810.127 ops/s
Iteration  23: 183346.788 ops/s
Iteration  24: 182822.240 ops/s
Iteration  25: 183172.398 ops/s
Iteration  26: 183229.905 ops/s
Iteration  27: 183234.269 ops/s
Iteration  28: 183397.196 ops/s
Iteration  29: 183033.691 ops/s
Iteration  30: 183536.080 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_911._Benchmark.benchmark_Cluster_911":
  183229.276 ±(99.9%) 156.520 ops/s [Average]
  (min, avg, max) = (182720.615, 183229.276, 183567.836), stdev = 234.272
  CI (99.9%): [183072.756, 183385.796] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_911._Benchmark.benchmark_Cluster_911  thrpt   30  183229.276 ± 156.520  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_912._Benchmark.benchmark_Cluster_912$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_912._Benchmark.benchmark_Cluster_912

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72998.148 ops/s
# Warmup Iteration   2: 134442.086 ops/s
# Warmup Iteration   3: 199787.388 ops/s
# Warmup Iteration   4: 198045.386 ops/s
# Warmup Iteration   5: 200045.002 ops/s
# Warmup Iteration   6: 200389.053 ops/s
# Warmup Iteration   7: 157926.626 ops/s
# Warmup Iteration   8: 199996.824 ops/s
# Warmup Iteration   9: 200036.992 ops/s
# Warmup Iteration  10: 200166.325 ops/s
# Warmup Iteration  11: 199722.366 ops/s
# Warmup Iteration  12: 199948.628 ops/s
# Warmup Iteration  13: 199680.315 ops/s
# Warmup Iteration  14: 199841.286 ops/s
# Warmup Iteration  15: 200318.007 ops/s
# Warmup Iteration  16: 200088.438 ops/s
# Warmup Iteration  17: 200329.255 ops/s
# Warmup Iteration  18: 200441.503 ops/s
# Warmup Iteration  19: 199938.647 ops/s
# Warmup Iteration  20: 200379.280 ops/s
# Warmup Iteration  21: 200470.743 ops/s
# Warmup Iteration  22: 200293.986 ops/s
# Warmup Iteration  23: 199842.044 ops/s
# Warmup Iteration  24: 200508.002 ops/s
# Warmup Iteration  25: 200336.096 ops/s
# Warmup Iteration  26: 200339.721 ops/s
# Warmup Iteration  27: 199999.816 ops/s
# Warmup Iteration  28: 199749.558 ops/s
# Warmup Iteration  29: 199524.318 ops/s
# Warmup Iteration  30: 200117.685 ops/s
Iteration   1: 199409.776 ops/s
Iteration   2: 199693.021 ops/s
Iteration   3: 200543.332 ops/s
Iteration   4: 200066.299 ops/s
Iteration   5: 200549.907 ops/s
Iteration   6: 199716.614 ops/s
Iteration   7: 200609.077 ops/s
Iteration   8: 200644.389 ops/s
Iteration   9: 200482.939 ops/s
Iteration  10: 200060.175 ops/s
Iteration  11: 200173.203 ops/s
Iteration  12: 200927.182 ops/s
Iteration  13: 200334.014 ops/s
Iteration  14: 200522.794 ops/s
Iteration  15: 199922.544 ops/s
Iteration  16: 200482.862 ops/s
Iteration  17: 200153.219 ops/s
Iteration  18: 200120.695 ops/s
Iteration  19: 200096.161 ops/s
Iteration  20: 200463.247 ops/s
Iteration  21: 199608.810 ops/s
Iteration  22: 200596.670 ops/s
Iteration  23: 199660.555 ops/s
Iteration  24: 200110.571 ops/s
Iteration  25: 200129.633 ops/s
Iteration  26: 200370.925 ops/s
Iteration  27: 200562.908 ops/s
Iteration  28: 200086.321 ops/s
Iteration  29: 200528.651 ops/s
Iteration  30: 200494.044 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_912._Benchmark.benchmark_Cluster_912":
  200237.351 ±(99.9%) 244.136 ops/s [Average]
  (min, avg, max) = (199409.776, 200237.351, 200927.182), stdev = 365.412
  CI (99.9%): [199993.215, 200481.488] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_912._Benchmark.benchmark_Cluster_912  thrpt   30  200237.351 ± 244.136  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_913._Benchmark.benchmark_Cluster_913$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_913._Benchmark.benchmark_Cluster_913

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77620.882 ops/s
# Warmup Iteration   2: 130686.058 ops/s
# Warmup Iteration   3: 204305.481 ops/s
# Warmup Iteration   4: 204821.580 ops/s
# Warmup Iteration   5: 204568.207 ops/s
# Warmup Iteration   6: 203929.936 ops/s
# Warmup Iteration   7: 184655.877 ops/s
# Warmup Iteration   8: 180361.769 ops/s
# Warmup Iteration   9: 204435.931 ops/s
# Warmup Iteration  10: 204272.794 ops/s
# Warmup Iteration  11: 204382.452 ops/s
# Warmup Iteration  12: 204690.162 ops/s
# Warmup Iteration  13: 204754.625 ops/s
# Warmup Iteration  14: 204962.946 ops/s
# Warmup Iteration  15: 204825.220 ops/s
# Warmup Iteration  16: 203702.316 ops/s
# Warmup Iteration  17: 203877.854 ops/s
# Warmup Iteration  18: 204648.276 ops/s
# Warmup Iteration  19: 204132.063 ops/s
# Warmup Iteration  20: 204088.206 ops/s
# Warmup Iteration  21: 204536.643 ops/s
# Warmup Iteration  22: 203367.282 ops/s
# Warmup Iteration  23: 204439.936 ops/s
# Warmup Iteration  24: 204604.625 ops/s
# Warmup Iteration  25: 204653.666 ops/s
# Warmup Iteration  26: 204352.211 ops/s
# Warmup Iteration  27: 204434.371 ops/s
# Warmup Iteration  28: 204498.040 ops/s
# Warmup Iteration  29: 205662.755 ops/s
# Warmup Iteration  30: 204697.503 ops/s
Iteration   1: 205725.868 ops/s
Iteration   2: 204053.662 ops/s
Iteration   3: 205208.425 ops/s
Iteration   4: 204912.145 ops/s
Iteration   5: 204556.599 ops/s
Iteration   6: 204221.534 ops/s
Iteration   7: 204422.762 ops/s
Iteration   8: 203837.696 ops/s
Iteration   9: 203477.295 ops/s
Iteration  10: 205008.261 ops/s
Iteration  11: 204654.259 ops/s
Iteration  12: 204935.507 ops/s
Iteration  13: 204687.682 ops/s
Iteration  14: 205179.064 ops/s
Iteration  15: 204911.233 ops/s
Iteration  16: 205248.657 ops/s
Iteration  17: 204485.027 ops/s
Iteration  18: 204520.243 ops/s
Iteration  19: 204459.059 ops/s
Iteration  20: 204279.469 ops/s
Iteration  21: 204964.954 ops/s
Iteration  22: 204588.984 ops/s
Iteration  23: 204554.119 ops/s
Iteration  24: 203743.496 ops/s
Iteration  25: 204558.609 ops/s
Iteration  26: 203882.533 ops/s
Iteration  27: 204420.577 ops/s
Iteration  28: 204605.491 ops/s
Iteration  29: 204670.438 ops/s
Iteration  30: 204671.180 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_913._Benchmark.benchmark_Cluster_913":
  204581.494 ±(99.9%) 322.433 ops/s [Average]
  (min, avg, max) = (203477.295, 204581.494, 205725.868), stdev = 482.602
  CI (99.9%): [204259.061, 204903.927] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_913._Benchmark.benchmark_Cluster_913  thrpt   30  204581.494 ± 322.433  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_914._Benchmark.benchmark_Cluster_914$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_914._Benchmark.benchmark_Cluster_914

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59074.042 ops/s
# Warmup Iteration   2: 98225.657 ops/s
# Warmup Iteration   3: 143262.929 ops/s
# Warmup Iteration   4: 143205.477 ops/s
# Warmup Iteration   5: 143043.741 ops/s
# Warmup Iteration   6: 140395.056 ops/s
# Warmup Iteration   7: 115646.695 ops/s
# Warmup Iteration   8: 143991.560 ops/s
# Warmup Iteration   9: 144288.312 ops/s
# Warmup Iteration  10: 143792.435 ops/s
# Warmup Iteration  11: 144298.423 ops/s
# Warmup Iteration  12: 144484.918 ops/s
# Warmup Iteration  13: 143925.937 ops/s
# Warmup Iteration  14: 144018.539 ops/s
# Warmup Iteration  15: 143398.139 ops/s
# Warmup Iteration  16: 143769.198 ops/s
# Warmup Iteration  17: 145907.396 ops/s
# Warmup Iteration  18: 147325.509 ops/s
# Warmup Iteration  19: 146509.531 ops/s
# Warmup Iteration  20: 146772.352 ops/s
# Warmup Iteration  21: 146194.387 ops/s
# Warmup Iteration  22: 147205.615 ops/s
# Warmup Iteration  23: 147040.678 ops/s
# Warmup Iteration  24: 147062.819 ops/s
# Warmup Iteration  25: 147293.139 ops/s
# Warmup Iteration  26: 146406.611 ops/s
# Warmup Iteration  27: 146960.694 ops/s
# Warmup Iteration  28: 146855.810 ops/s
# Warmup Iteration  29: 147235.065 ops/s
# Warmup Iteration  30: 146885.350 ops/s
Iteration   1: 146935.178 ops/s
Iteration   2: 146536.636 ops/s
Iteration   3: 146741.289 ops/s
Iteration   4: 147545.208 ops/s
Iteration   5: 146602.841 ops/s
Iteration   6: 146435.400 ops/s
Iteration   7: 146934.305 ops/s
Iteration   8: 146889.039 ops/s
Iteration   9: 146932.629 ops/s
Iteration  10: 147467.694 ops/s
Iteration  11: 146825.597 ops/s
Iteration  12: 147635.431 ops/s
Iteration  13: 147266.151 ops/s
Iteration  14: 146834.835 ops/s
Iteration  15: 146918.754 ops/s
Iteration  16: 147428.532 ops/s
Iteration  17: 146944.571 ops/s
Iteration  18: 146432.783 ops/s
Iteration  19: 147556.154 ops/s
Iteration  20: 147413.792 ops/s
Iteration  21: 145865.325 ops/s
Iteration  22: 146817.853 ops/s
Iteration  23: 147446.772 ops/s
Iteration  24: 146224.652 ops/s
Iteration  25: 146484.854 ops/s
Iteration  26: 147412.830 ops/s
Iteration  27: 146943.387 ops/s
Iteration  28: 147144.499 ops/s
Iteration  29: 146386.813 ops/s
Iteration  30: 146677.422 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_914._Benchmark.benchmark_Cluster_914":
  146922.707 ±(99.9%) 296.450 ops/s [Average]
  (min, avg, max) = (145865.325, 146922.707, 147635.431), stdev = 443.712
  CI (99.9%): [146626.257, 147219.158] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_914._Benchmark.benchmark_Cluster_914  thrpt   30  146922.707 ± 296.450  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_915._Benchmark.benchmark_Cluster_915$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_915._Benchmark.benchmark_Cluster_915

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62756.751 ops/s
# Warmup Iteration   2: 99903.779 ops/s
# Warmup Iteration   3: 146258.807 ops/s
# Warmup Iteration   4: 145542.020 ops/s
# Warmup Iteration   5: 145896.264 ops/s
# Warmup Iteration   6: 146328.266 ops/s
# Warmup Iteration   7: 117800.772 ops/s
# Warmup Iteration   8: 143533.693 ops/s
# Warmup Iteration   9: 145586.916 ops/s
# Warmup Iteration  10: 145645.778 ops/s
# Warmup Iteration  11: 145863.909 ops/s
# Warmup Iteration  12: 145700.698 ops/s
# Warmup Iteration  13: 146042.570 ops/s
# Warmup Iteration  14: 145956.870 ops/s
# Warmup Iteration  15: 145604.982 ops/s
# Warmup Iteration  16: 145457.761 ops/s
# Warmup Iteration  17: 149196.952 ops/s
# Warmup Iteration  18: 149614.140 ops/s
# Warmup Iteration  19: 149819.716 ops/s
# Warmup Iteration  20: 149587.159 ops/s
# Warmup Iteration  21: 149679.241 ops/s
# Warmup Iteration  22: 149430.718 ops/s
# Warmup Iteration  23: 149638.335 ops/s
# Warmup Iteration  24: 149192.626 ops/s
# Warmup Iteration  25: 149161.019 ops/s
# Warmup Iteration  26: 149558.563 ops/s
# Warmup Iteration  27: 148852.686 ops/s
# Warmup Iteration  28: 149431.872 ops/s
# Warmup Iteration  29: 149271.474 ops/s
# Warmup Iteration  30: 149963.938 ops/s
Iteration   1: 150003.600 ops/s
Iteration   2: 149109.385 ops/s
Iteration   3: 149891.279 ops/s
Iteration   4: 149617.373 ops/s
Iteration   5: 149484.856 ops/s
Iteration   6: 149466.825 ops/s
Iteration   7: 149279.849 ops/s
Iteration   8: 150051.773 ops/s
Iteration   9: 149497.112 ops/s
Iteration  10: 149513.482 ops/s
Iteration  11: 149078.191 ops/s
Iteration  12: 149266.007 ops/s
Iteration  13: 148776.576 ops/s
Iteration  14: 149161.493 ops/s
Iteration  15: 149333.561 ops/s
Iteration  16: 149437.448 ops/s
Iteration  17: 149430.758 ops/s
Iteration  18: 149028.284 ops/s
Iteration  19: 149285.762 ops/s
Iteration  20: 149159.751 ops/s
Iteration  21: 149070.372 ops/s
Iteration  22: 149701.068 ops/s
Iteration  23: 149657.177 ops/s
Iteration  24: 149916.342 ops/s
Iteration  25: 149787.166 ops/s
Iteration  26: 149150.838 ops/s
Iteration  27: 149174.730 ops/s
Iteration  28: 149502.825 ops/s
Iteration  29: 149874.199 ops/s
Iteration  30: 149085.187 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_915._Benchmark.benchmark_Cluster_915":
  149426.442 ±(99.9%) 218.500 ops/s [Average]
  (min, avg, max) = (148776.576, 149426.442, 150051.773), stdev = 327.041
  CI (99.9%): [149207.942, 149644.943] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_915._Benchmark.benchmark_Cluster_915  thrpt   30  149426.442 ± 218.500  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_916._Benchmark.benchmark_Cluster_916$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_916._Benchmark.benchmark_Cluster_916

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65764.589 ops/s
# Warmup Iteration   2: 105469.559 ops/s
# Warmup Iteration   3: 156458.698 ops/s
# Warmup Iteration   4: 154816.093 ops/s
# Warmup Iteration   5: 154714.576 ops/s
# Warmup Iteration   6: 155635.720 ops/s
# Warmup Iteration   7: 120478.208 ops/s
# Warmup Iteration   8: 156895.134 ops/s
# Warmup Iteration   9: 156811.754 ops/s
# Warmup Iteration  10: 157035.326 ops/s
# Warmup Iteration  11: 156553.877 ops/s
# Warmup Iteration  12: 156796.838 ops/s
# Warmup Iteration  13: 157130.615 ops/s
# Warmup Iteration  14: 157269.262 ops/s
# Warmup Iteration  15: 156719.864 ops/s
# Warmup Iteration  16: 157018.837 ops/s
# Warmup Iteration  17: 159813.267 ops/s
# Warmup Iteration  18: 159653.383 ops/s
# Warmup Iteration  19: 160121.375 ops/s
# Warmup Iteration  20: 159629.303 ops/s
# Warmup Iteration  21: 159552.690 ops/s
# Warmup Iteration  22: 159936.519 ops/s
# Warmup Iteration  23: 159847.389 ops/s
# Warmup Iteration  24: 160112.625 ops/s
# Warmup Iteration  25: 160081.653 ops/s
# Warmup Iteration  26: 159765.608 ops/s
# Warmup Iteration  27: 159962.665 ops/s
# Warmup Iteration  28: 159537.799 ops/s
# Warmup Iteration  29: 159604.491 ops/s
# Warmup Iteration  30: 159707.379 ops/s
Iteration   1: 159096.141 ops/s
Iteration   2: 159362.699 ops/s
Iteration   3: 160130.193 ops/s
Iteration   4: 159986.826 ops/s
Iteration   5: 160148.054 ops/s
Iteration   6: 159850.283 ops/s
Iteration   7: 160498.015 ops/s
Iteration   8: 160376.928 ops/s
Iteration   9: 159882.103 ops/s
Iteration  10: 160018.897 ops/s
Iteration  11: 159700.117 ops/s
Iteration  12: 159912.872 ops/s
Iteration  13: 159781.519 ops/s
Iteration  14: 159965.127 ops/s
Iteration  15: 159925.494 ops/s
Iteration  16: 159686.317 ops/s
Iteration  17: 160421.556 ops/s
Iteration  18: 160295.090 ops/s
Iteration  19: 160023.831 ops/s
Iteration  20: 160046.982 ops/s
Iteration  21: 159859.176 ops/s
Iteration  22: 159490.495 ops/s
Iteration  23: 159811.876 ops/s
Iteration  24: 160362.489 ops/s
Iteration  25: 159631.411 ops/s
Iteration  26: 159959.252 ops/s
Iteration  27: 159829.005 ops/s
Iteration  28: 159715.826 ops/s
Iteration  29: 159800.869 ops/s
Iteration  30: 159796.931 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_916._Benchmark.benchmark_Cluster_916":
  159912.212 ±(99.9%) 205.751 ops/s [Average]
  (min, avg, max) = (159096.141, 159912.212, 160498.015), stdev = 307.959
  CI (99.9%): [159706.461, 160117.964] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_916._Benchmark.benchmark_Cluster_916  thrpt   30  159912.212 ± 205.751  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_917._Benchmark.benchmark_Cluster_917$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_917._Benchmark.benchmark_Cluster_917

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60926.563 ops/s
# Warmup Iteration   2: 116346.409 ops/s
# Warmup Iteration   3: 167205.335 ops/s
# Warmup Iteration   4: 168098.803 ops/s
# Warmup Iteration   5: 167454.159 ops/s
# Warmup Iteration   6: 131996.038 ops/s
# Warmup Iteration   7: 168011.063 ops/s
# Warmup Iteration   8: 168060.234 ops/s
# Warmup Iteration   9: 167922.699 ops/s
# Warmup Iteration  10: 168533.223 ops/s
# Warmup Iteration  11: 168452.275 ops/s
# Warmup Iteration  12: 168338.796 ops/s
# Warmup Iteration  13: 168036.790 ops/s
# Warmup Iteration  14: 167776.237 ops/s
# Warmup Iteration  15: 167590.669 ops/s
# Warmup Iteration  16: 168762.464 ops/s
# Warmup Iteration  17: 168710.355 ops/s
# Warmup Iteration  18: 169131.218 ops/s
# Warmup Iteration  19: 168597.284 ops/s
# Warmup Iteration  20: 168416.713 ops/s
# Warmup Iteration  21: 168787.530 ops/s
# Warmup Iteration  22: 168621.183 ops/s
# Warmup Iteration  23: 169022.837 ops/s
# Warmup Iteration  24: 168530.993 ops/s
# Warmup Iteration  25: 168343.141 ops/s
# Warmup Iteration  26: 168541.670 ops/s
# Warmup Iteration  27: 169042.067 ops/s
# Warmup Iteration  28: 168905.899 ops/s
# Warmup Iteration  29: 168509.664 ops/s
# Warmup Iteration  30: 168897.559 ops/s
Iteration   1: 168384.938 ops/s
Iteration   2: 168785.176 ops/s
Iteration   3: 169067.364 ops/s
Iteration   4: 169180.847 ops/s
Iteration   5: 168585.059 ops/s
Iteration   6: 169096.375 ops/s
Iteration   7: 168452.423 ops/s
Iteration   8: 169976.830 ops/s
Iteration   9: 169112.985 ops/s
Iteration  10: 169484.373 ops/s
Iteration  11: 169003.516 ops/s
Iteration  12: 169036.661 ops/s
Iteration  13: 169132.434 ops/s
Iteration  14: 168340.266 ops/s
Iteration  15: 168943.103 ops/s
Iteration  16: 167160.287 ops/s
Iteration  17: 168361.074 ops/s
Iteration  18: 168872.167 ops/s
Iteration  19: 168805.317 ops/s
Iteration  20: 168107.395 ops/s
Iteration  21: 168478.894 ops/s
Iteration  22: 168894.514 ops/s
Iteration  23: 169503.781 ops/s
Iteration  24: 168824.043 ops/s
Iteration  25: 168893.811 ops/s
Iteration  26: 168696.232 ops/s
Iteration  27: 168880.401 ops/s
Iteration  28: 168874.845 ops/s
Iteration  29: 167788.423 ops/s
Iteration  30: 168388.558 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_917._Benchmark.benchmark_Cluster_917":
  168770.403 ±(99.9%) 355.421 ops/s [Average]
  (min, avg, max) = (167160.287, 168770.403, 169976.830), stdev = 531.978
  CI (99.9%): [168414.982, 169125.824] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_917._Benchmark.benchmark_Cluster_917  thrpt   30  168770.403 ± 355.421  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_918._Benchmark.benchmark_Cluster_918$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_918._Benchmark.benchmark_Cluster_918

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 81211.955 ops/s
# Warmup Iteration   2: 129957.377 ops/s
# Warmup Iteration   3: 168355.637 ops/s
# Warmup Iteration   4: 168086.628 ops/s
# Warmup Iteration   5: 169155.871 ops/s
# Warmup Iteration   6: 169103.755 ops/s
# Warmup Iteration   7: 133369.412 ops/s
# Warmup Iteration   8: 168861.632 ops/s
# Warmup Iteration   9: 168881.158 ops/s
# Warmup Iteration  10: 168699.553 ops/s
# Warmup Iteration  11: 168645.831 ops/s
# Warmup Iteration  12: 168598.248 ops/s
# Warmup Iteration  13: 168803.304 ops/s
# Warmup Iteration  14: 168548.293 ops/s
# Warmup Iteration  15: 168925.924 ops/s
# Warmup Iteration  16: 168800.566 ops/s
# Warmup Iteration  17: 168789.881 ops/s
# Warmup Iteration  18: 168617.462 ops/s
# Warmup Iteration  19: 168644.256 ops/s
# Warmup Iteration  20: 168398.273 ops/s
# Warmup Iteration  21: 168742.732 ops/s
# Warmup Iteration  22: 168369.945 ops/s
# Warmup Iteration  23: 168567.361 ops/s
# Warmup Iteration  24: 168744.875 ops/s
# Warmup Iteration  25: 168531.501 ops/s
# Warmup Iteration  26: 168740.152 ops/s
# Warmup Iteration  27: 168659.777 ops/s
# Warmup Iteration  28: 168263.753 ops/s
# Warmup Iteration  29: 168394.966 ops/s
# Warmup Iteration  30: 168643.263 ops/s
Iteration   1: 168759.442 ops/s
Iteration   2: 168984.061 ops/s
Iteration   3: 168621.052 ops/s
Iteration   4: 168774.074 ops/s
Iteration   5: 168556.773 ops/s
Iteration   6: 168793.739 ops/s
Iteration   7: 168541.631 ops/s
Iteration   8: 168918.634 ops/s
Iteration   9: 168367.460 ops/s
Iteration  10: 168608.223 ops/s
Iteration  11: 168166.028 ops/s
Iteration  12: 168700.873 ops/s
Iteration  13: 168389.692 ops/s
Iteration  14: 168814.728 ops/s
Iteration  15: 168750.418 ops/s
Iteration  16: 168855.497 ops/s
Iteration  17: 168400.172 ops/s
Iteration  18: 168553.324 ops/s
Iteration  19: 168653.929 ops/s
Iteration  20: 168915.122 ops/s
Iteration  21: 168628.637 ops/s
Iteration  22: 168660.042 ops/s
Iteration  23: 168497.037 ops/s
Iteration  24: 168963.539 ops/s
Iteration  25: 168451.764 ops/s
Iteration  26: 168921.581 ops/s
Iteration  27: 168713.965 ops/s
Iteration  28: 168110.681 ops/s
Iteration  29: 168693.675 ops/s
Iteration  30: 168971.027 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_918._Benchmark.benchmark_Cluster_918":
  168657.894 ±(99.9%) 151.649 ops/s [Average]
  (min, avg, max) = (168110.681, 168657.894, 168984.061), stdev = 226.982
  CI (99.9%): [168506.245, 168809.543] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_918._Benchmark.benchmark_Cluster_918  thrpt   30  168657.894 ± 151.649  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_919._Benchmark.benchmark_Cluster_919$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_919._Benchmark.benchmark_Cluster_919

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73690.326 ops/s
# Warmup Iteration   2: 115509.056 ops/s
# Warmup Iteration   3: 161663.554 ops/s
# Warmup Iteration   4: 160962.824 ops/s
# Warmup Iteration   5: 161394.679 ops/s
# Warmup Iteration   6: 161819.443 ops/s
# Warmup Iteration   7: 132775.794 ops/s
# Warmup Iteration   8: 156917.493 ops/s
# Warmup Iteration   9: 161682.702 ops/s
# Warmup Iteration  10: 161606.508 ops/s
# Warmup Iteration  11: 161658.207 ops/s
# Warmup Iteration  12: 161656.565 ops/s
# Warmup Iteration  13: 161166.562 ops/s
# Warmup Iteration  14: 161503.418 ops/s
# Warmup Iteration  15: 161683.898 ops/s
# Warmup Iteration  16: 161677.567 ops/s
# Warmup Iteration  17: 161937.042 ops/s
# Warmup Iteration  18: 161749.918 ops/s
# Warmup Iteration  19: 161578.855 ops/s
# Warmup Iteration  20: 161613.640 ops/s
# Warmup Iteration  21: 161523.733 ops/s
# Warmup Iteration  22: 161626.023 ops/s
# Warmup Iteration  23: 161739.404 ops/s
# Warmup Iteration  24: 161542.589 ops/s
# Warmup Iteration  25: 161624.765 ops/s
# Warmup Iteration  26: 161743.474 ops/s
# Warmup Iteration  27: 161748.984 ops/s
# Warmup Iteration  28: 161468.564 ops/s
# Warmup Iteration  29: 161707.209 ops/s
# Warmup Iteration  30: 161698.350 ops/s
Iteration   1: 161859.207 ops/s
Iteration   2: 162001.005 ops/s
Iteration   3: 161739.815 ops/s
Iteration   4: 161651.880 ops/s
Iteration   5: 161859.124 ops/s
Iteration   6: 161557.792 ops/s
Iteration   7: 161758.206 ops/s
Iteration   8: 161660.664 ops/s
Iteration   9: 161753.192 ops/s
Iteration  10: 161695.685 ops/s
Iteration  11: 161957.454 ops/s
Iteration  12: 161671.926 ops/s
Iteration  13: 161673.488 ops/s
Iteration  14: 161797.561 ops/s
Iteration  15: 161632.371 ops/s
Iteration  16: 161741.121 ops/s
Iteration  17: 161526.548 ops/s
Iteration  18: 161569.542 ops/s
Iteration  19: 161566.502 ops/s
Iteration  20: 161702.028 ops/s
Iteration  21: 161555.848 ops/s
Iteration  22: 161845.279 ops/s
Iteration  23: 161755.612 ops/s
Iteration  24: 161587.312 ops/s
Iteration  25: 161727.225 ops/s
Iteration  26: 161215.254 ops/s
Iteration  27: 161835.430 ops/s
Iteration  28: 161653.851 ops/s
Iteration  29: 161852.682 ops/s
Iteration  30: 161667.730 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_919._Benchmark.benchmark_Cluster_919":
  161702.378 ±(99.9%) 100.770 ops/s [Average]
  (min, avg, max) = (161215.254, 161702.378, 162001.005), stdev = 150.827
  CI (99.9%): [161601.608, 161803.147] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_919._Benchmark.benchmark_Cluster_919  thrpt   30  161702.378 ± 100.770  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_92._Benchmark.benchmark_Cluster_92$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_92._Benchmark.benchmark_Cluster_92

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60367.302 ops/s
# Warmup Iteration   2: 97357.841 ops/s
# Warmup Iteration   3: 151056.603 ops/s
# Warmup Iteration   4: 149887.601 ops/s
# Warmup Iteration   5: 151003.391 ops/s
# Warmup Iteration   6: 151091.638 ops/s
# Warmup Iteration   7: 141584.384 ops/s
# Warmup Iteration   8: 126558.072 ops/s
# Warmup Iteration   9: 151429.858 ops/s
# Warmup Iteration  10: 151365.622 ops/s
# Warmup Iteration  11: 151465.593 ops/s
# Warmup Iteration  12: 151437.430 ops/s
# Warmup Iteration  13: 151449.050 ops/s
# Warmup Iteration  14: 151404.716 ops/s
# Warmup Iteration  15: 151281.198 ops/s
# Warmup Iteration  16: 151563.384 ops/s
# Warmup Iteration  17: 151572.290 ops/s
# Warmup Iteration  18: 151419.998 ops/s
# Warmup Iteration  19: 151520.882 ops/s
# Warmup Iteration  20: 151546.312 ops/s
# Warmup Iteration  21: 151520.070 ops/s
# Warmup Iteration  22: 151597.524 ops/s
# Warmup Iteration  23: 151372.027 ops/s
# Warmup Iteration  24: 151121.525 ops/s
# Warmup Iteration  25: 151483.819 ops/s
# Warmup Iteration  26: 150963.367 ops/s
# Warmup Iteration  27: 151337.821 ops/s
# Warmup Iteration  28: 151215.475 ops/s
# Warmup Iteration  29: 151660.653 ops/s
# Warmup Iteration  30: 151568.107 ops/s
Iteration   1: 151253.452 ops/s
Iteration   2: 151389.634 ops/s
Iteration   3: 151506.542 ops/s
Iteration   4: 151564.565 ops/s
Iteration   5: 151443.804 ops/s
Iteration   6: 151757.391 ops/s
Iteration   7: 151481.657 ops/s
Iteration   8: 151485.004 ops/s
Iteration   9: 151692.505 ops/s
Iteration  10: 151428.653 ops/s
Iteration  11: 151634.973 ops/s
Iteration  12: 151509.362 ops/s
Iteration  13: 151746.902 ops/s
Iteration  14: 151471.464 ops/s
Iteration  15: 151510.258 ops/s
Iteration  16: 151808.710 ops/s
Iteration  17: 151478.267 ops/s
Iteration  18: 151536.368 ops/s
Iteration  19: 151448.101 ops/s
Iteration  20: 151597.542 ops/s
Iteration  21: 151504.239 ops/s
Iteration  22: 151653.335 ops/s
Iteration  23: 151333.560 ops/s
Iteration  24: 151735.160 ops/s
Iteration  25: 151820.331 ops/s
Iteration  26: 151550.782 ops/s
Iteration  27: 151622.174 ops/s
Iteration  28: 151298.081 ops/s
Iteration  29: 151618.983 ops/s
Iteration  30: 151430.660 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_92._Benchmark.benchmark_Cluster_92":
  151543.749 ±(99.9%) 96.720 ops/s [Average]
  (min, avg, max) = (151253.452, 151543.749, 151820.331), stdev = 144.765
  CI (99.9%): [151447.029, 151640.468] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score    Error  Units
Cluster_92._Benchmark.benchmark_Cluster_92  thrpt   30  151543.749 ± 96.720  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_920._Benchmark.benchmark_Cluster_920$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_920._Benchmark.benchmark_Cluster_920

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78631.704 ops/s
# Warmup Iteration   2: 198036.479 ops/s
# Warmup Iteration   3: 259528.123 ops/s
# Warmup Iteration   4: 261034.125 ops/s
# Warmup Iteration   5: 208337.320 ops/s
# Warmup Iteration   6: 261329.976 ops/s
# Warmup Iteration   7: 260756.925 ops/s
# Warmup Iteration   8: 260997.102 ops/s
# Warmup Iteration   9: 261087.876 ops/s
# Warmup Iteration  10: 260995.806 ops/s
# Warmup Iteration  11: 260583.606 ops/s
# Warmup Iteration  12: 260901.127 ops/s
# Warmup Iteration  13: 260862.180 ops/s
# Warmup Iteration  14: 261312.986 ops/s
# Warmup Iteration  15: 260952.847 ops/s
# Warmup Iteration  16: 261010.321 ops/s
# Warmup Iteration  17: 260453.637 ops/s
# Warmup Iteration  18: 260700.068 ops/s
# Warmup Iteration  19: 260744.057 ops/s
# Warmup Iteration  20: 260714.146 ops/s
# Warmup Iteration  21: 260852.683 ops/s
# Warmup Iteration  22: 260160.563 ops/s
# Warmup Iteration  23: 260486.469 ops/s
# Warmup Iteration  24: 260386.254 ops/s
# Warmup Iteration  25: 260116.198 ops/s
# Warmup Iteration  26: 260734.757 ops/s
# Warmup Iteration  27: 260815.504 ops/s
# Warmup Iteration  28: 260768.754 ops/s
# Warmup Iteration  29: 261004.409 ops/s
# Warmup Iteration  30: 260599.146 ops/s
Iteration   1: 260571.449 ops/s
Iteration   2: 259998.271 ops/s
Iteration   3: 260153.699 ops/s
Iteration   4: 260613.124 ops/s
Iteration   5: 260961.951 ops/s
Iteration   6: 260348.960 ops/s
Iteration   7: 260294.969 ops/s
Iteration   8: 260715.597 ops/s
Iteration   9: 260525.130 ops/s
Iteration  10: 260540.552 ops/s
Iteration  11: 260258.689 ops/s
Iteration  12: 260623.763 ops/s
Iteration  13: 260270.430 ops/s
Iteration  14: 260676.063 ops/s
Iteration  15: 260574.450 ops/s
Iteration  16: 261166.014 ops/s
Iteration  17: 260759.051 ops/s
Iteration  18: 260754.478 ops/s
Iteration  19: 260319.759 ops/s
Iteration  20: 260906.545 ops/s
Iteration  21: 260466.992 ops/s
Iteration  22: 260184.517 ops/s
Iteration  23: 259376.906 ops/s
Iteration  24: 260399.060 ops/s
Iteration  25: 260755.356 ops/s
Iteration  26: 260757.481 ops/s
Iteration  27: 261137.932 ops/s
Iteration  28: 260918.955 ops/s
Iteration  29: 260967.904 ops/s
Iteration  30: 261060.478 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_920._Benchmark.benchmark_Cluster_920":
  260568.618 ±(99.9%) 252.147 ops/s [Average]
  (min, avg, max) = (259376.906, 260568.618, 261166.014), stdev = 377.401
  CI (99.9%): [260316.471, 260820.764] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_920._Benchmark.benchmark_Cluster_920  thrpt   30  260568.618 ± 252.147  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_921._Benchmark.benchmark_Cluster_921$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_921._Benchmark.benchmark_Cluster_921

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76099.651 ops/s
# Warmup Iteration   2: 131815.702 ops/s
# Warmup Iteration   3: 182001.622 ops/s
# Warmup Iteration   4: 180705.282 ops/s
# Warmup Iteration   5: 182241.375 ops/s
# Warmup Iteration   6: 181379.489 ops/s
# Warmup Iteration   7: 143923.935 ops/s
# Warmup Iteration   8: 182419.791 ops/s
# Warmup Iteration   9: 181866.490 ops/s
# Warmup Iteration  10: 182131.274 ops/s
# Warmup Iteration  11: 182085.001 ops/s
# Warmup Iteration  12: 181852.507 ops/s
# Warmup Iteration  13: 182183.640 ops/s
# Warmup Iteration  14: 182423.632 ops/s
# Warmup Iteration  15: 182539.291 ops/s
# Warmup Iteration  16: 182213.175 ops/s
# Warmup Iteration  17: 181872.089 ops/s
# Warmup Iteration  18: 182092.889 ops/s
# Warmup Iteration  19: 182253.438 ops/s
# Warmup Iteration  20: 181901.362 ops/s
# Warmup Iteration  21: 181698.742 ops/s
# Warmup Iteration  22: 181674.294 ops/s
# Warmup Iteration  23: 181543.032 ops/s
# Warmup Iteration  24: 181793.343 ops/s
# Warmup Iteration  25: 181991.936 ops/s
# Warmup Iteration  26: 181992.692 ops/s
# Warmup Iteration  27: 181654.664 ops/s
# Warmup Iteration  28: 181562.020 ops/s
# Warmup Iteration  29: 182558.987 ops/s
# Warmup Iteration  30: 181869.630 ops/s
Iteration   1: 182083.997 ops/s
Iteration   2: 181488.498 ops/s
Iteration   3: 181867.396 ops/s
Iteration   4: 181700.104 ops/s
Iteration   5: 182160.374 ops/s
Iteration   6: 181785.832 ops/s
Iteration   7: 182197.053 ops/s
Iteration   8: 182166.315 ops/s
Iteration   9: 182389.873 ops/s
Iteration  10: 181985.081 ops/s
Iteration  11: 181910.823 ops/s
Iteration  12: 182025.048 ops/s
Iteration  13: 182208.051 ops/s
Iteration  14: 180852.257 ops/s
Iteration  15: 181805.989 ops/s
Iteration  16: 182032.280 ops/s
Iteration  17: 182211.510 ops/s
Iteration  18: 181828.416 ops/s
Iteration  19: 182196.827 ops/s
Iteration  20: 182016.870 ops/s
Iteration  21: 182697.675 ops/s
Iteration  22: 182073.706 ops/s
Iteration  23: 182463.407 ops/s
Iteration  24: 182599.600 ops/s
Iteration  25: 182324.824 ops/s
Iteration  26: 182166.351 ops/s
Iteration  27: 182692.244 ops/s
Iteration  28: 182304.268 ops/s
Iteration  29: 182769.720 ops/s
Iteration  30: 182279.034 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_921._Benchmark.benchmark_Cluster_921":
  182109.447 ±(99.9%) 256.367 ops/s [Average]
  (min, avg, max) = (180852.257, 182109.447, 182769.720), stdev = 383.719
  CI (99.9%): [181853.080, 182365.815] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_921._Benchmark.benchmark_Cluster_921  thrpt   30  182109.447 ± 256.367  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_922._Benchmark.benchmark_Cluster_922$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_922._Benchmark.benchmark_Cluster_922

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48059.802 ops/s
# Warmup Iteration   2: 81970.653 ops/s
# Warmup Iteration   3: 120836.161 ops/s
# Warmup Iteration   4: 120264.386 ops/s
# Warmup Iteration   5: 121003.381 ops/s
# Warmup Iteration   6: 120779.545 ops/s
# Warmup Iteration   7: 97303.156 ops/s
# Warmup Iteration   8: 118901.515 ops/s
# Warmup Iteration   9: 121255.497 ops/s
# Warmup Iteration  10: 120643.525 ops/s
# Warmup Iteration  11: 121164.347 ops/s
# Warmup Iteration  12: 121072.461 ops/s
# Warmup Iteration  13: 121344.353 ops/s
# Warmup Iteration  14: 120948.451 ops/s
# Warmup Iteration  15: 120900.972 ops/s
# Warmup Iteration  16: 120831.809 ops/s
# Warmup Iteration  17: 120998.994 ops/s
# Warmup Iteration  18: 120667.076 ops/s
# Warmup Iteration  19: 121507.408 ops/s
# Warmup Iteration  20: 120921.228 ops/s
# Warmup Iteration  21: 121074.409 ops/s
# Warmup Iteration  22: 120891.876 ops/s
# Warmup Iteration  23: 120942.415 ops/s
# Warmup Iteration  24: 121160.596 ops/s
# Warmup Iteration  25: 120948.176 ops/s
# Warmup Iteration  26: 121361.320 ops/s
# Warmup Iteration  27: 121183.449 ops/s
# Warmup Iteration  28: 121008.973 ops/s
# Warmup Iteration  29: 121010.245 ops/s
# Warmup Iteration  30: 121434.140 ops/s
Iteration   1: 120880.038 ops/s
Iteration   2: 121203.953 ops/s
Iteration   3: 121351.666 ops/s
Iteration   4: 120657.092 ops/s
Iteration   5: 121200.023 ops/s
Iteration   6: 120877.672 ops/s
Iteration   7: 121008.420 ops/s
Iteration   8: 121461.000 ops/s
Iteration   9: 120786.890 ops/s
Iteration  10: 120837.266 ops/s
Iteration  11: 120913.877 ops/s
Iteration  12: 120996.885 ops/s
Iteration  13: 120796.203 ops/s
Iteration  14: 120722.675 ops/s
Iteration  15: 120962.831 ops/s
Iteration  16: 120797.001 ops/s
Iteration  17: 120541.174 ops/s
Iteration  18: 121325.546 ops/s
Iteration  19: 121340.281 ops/s
Iteration  20: 120983.908 ops/s
Iteration  21: 120849.832 ops/s
Iteration  22: 120822.271 ops/s
Iteration  23: 120866.412 ops/s
Iteration  24: 121121.807 ops/s
Iteration  25: 121147.213 ops/s
Iteration  26: 120795.812 ops/s
Iteration  27: 120959.246 ops/s
Iteration  28: 120523.981 ops/s
Iteration  29: 121156.056 ops/s
Iteration  30: 120923.899 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_922._Benchmark.benchmark_Cluster_922":
  120960.364 ±(99.9%) 156.891 ops/s [Average]
  (min, avg, max) = (120523.981, 120960.364, 121461.000), stdev = 234.827
  CI (99.9%): [120803.473, 121117.255] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_922._Benchmark.benchmark_Cluster_922  thrpt   30  120960.364 ± 156.891  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_923._Benchmark.benchmark_Cluster_923$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_923._Benchmark.benchmark_Cluster_923

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46941.384 ops/s
# Warmup Iteration   2: 114784.914 ops/s
# Warmup Iteration   3: 147836.935 ops/s
# Warmup Iteration   4: 148420.850 ops/s
# Warmup Iteration   5: 117517.107 ops/s
# Warmup Iteration   6: 148483.978 ops/s
# Warmup Iteration   7: 148509.897 ops/s
# Warmup Iteration   8: 148147.277 ops/s
# Warmup Iteration   9: 148517.024 ops/s
# Warmup Iteration  10: 148371.440 ops/s
# Warmup Iteration  11: 148629.478 ops/s
# Warmup Iteration  12: 148650.500 ops/s
# Warmup Iteration  13: 148507.285 ops/s
# Warmup Iteration  14: 148467.541 ops/s
# Warmup Iteration  15: 148257.428 ops/s
# Warmup Iteration  16: 148413.165 ops/s
# Warmup Iteration  17: 148600.656 ops/s
# Warmup Iteration  18: 148767.600 ops/s
# Warmup Iteration  19: 148287.553 ops/s
# Warmup Iteration  20: 148258.595 ops/s
# Warmup Iteration  21: 148170.591 ops/s
# Warmup Iteration  22: 148341.798 ops/s
# Warmup Iteration  23: 148542.186 ops/s
# Warmup Iteration  24: 148425.173 ops/s
# Warmup Iteration  25: 147844.891 ops/s
# Warmup Iteration  26: 148493.504 ops/s
# Warmup Iteration  27: 148530.664 ops/s
# Warmup Iteration  28: 148920.254 ops/s
# Warmup Iteration  29: 148414.157 ops/s
# Warmup Iteration  30: 148362.695 ops/s
Iteration   1: 148317.848 ops/s
Iteration   2: 148798.543 ops/s
Iteration   3: 148818.688 ops/s
Iteration   4: 148619.919 ops/s
Iteration   5: 148778.153 ops/s
Iteration   6: 148758.836 ops/s
Iteration   7: 149090.384 ops/s
Iteration   8: 148524.741 ops/s
Iteration   9: 148364.108 ops/s
Iteration  10: 148503.770 ops/s
Iteration  11: 148287.365 ops/s
Iteration  12: 148739.493 ops/s
Iteration  13: 148564.854 ops/s
Iteration  14: 148631.350 ops/s
Iteration  15: 148482.772 ops/s
Iteration  16: 148896.402 ops/s
Iteration  17: 148965.872 ops/s
Iteration  18: 148802.776 ops/s
Iteration  19: 148888.443 ops/s
Iteration  20: 149016.907 ops/s
Iteration  21: 148982.224 ops/s
Iteration  22: 148434.566 ops/s
Iteration  23: 148528.439 ops/s
Iteration  24: 148723.853 ops/s
Iteration  25: 148430.971 ops/s
Iteration  26: 148722.401 ops/s
Iteration  27: 149065.261 ops/s
Iteration  28: 148516.935 ops/s
Iteration  29: 148565.898 ops/s
Iteration  30: 148609.578 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_923._Benchmark.benchmark_Cluster_923":
  148681.045 ±(99.9%) 149.565 ops/s [Average]
  (min, avg, max) = (148287.365, 148681.045, 149090.384), stdev = 223.863
  CI (99.9%): [148531.480, 148830.610] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_923._Benchmark.benchmark_Cluster_923  thrpt   30  148681.045 ± 149.565  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_924._Benchmark.benchmark_Cluster_924$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_924._Benchmark.benchmark_Cluster_924

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77149.626 ops/s
# Warmup Iteration   2: 170707.903 ops/s
# Warmup Iteration   3: 219950.748 ops/s
# Warmup Iteration   4: 220974.113 ops/s
# Warmup Iteration   5: 173804.026 ops/s
# Warmup Iteration   6: 221681.321 ops/s
# Warmup Iteration   7: 221763.837 ops/s
# Warmup Iteration   8: 221877.596 ops/s
# Warmup Iteration   9: 220966.301 ops/s
# Warmup Iteration  10: 220974.755 ops/s
# Warmup Iteration  11: 221676.427 ops/s
# Warmup Iteration  12: 221889.839 ops/s
# Warmup Iteration  13: 221545.945 ops/s
# Warmup Iteration  14: 221291.555 ops/s
# Warmup Iteration  15: 221441.660 ops/s
# Warmup Iteration  16: 221228.844 ops/s
# Warmup Iteration  17: 221972.160 ops/s
# Warmup Iteration  18: 221644.552 ops/s
# Warmup Iteration  19: 221611.505 ops/s
# Warmup Iteration  20: 221209.791 ops/s
# Warmup Iteration  21: 221341.842 ops/s
# Warmup Iteration  22: 221523.608 ops/s
# Warmup Iteration  23: 221516.041 ops/s
# Warmup Iteration  24: 221500.208 ops/s
# Warmup Iteration  25: 221797.818 ops/s
# Warmup Iteration  26: 221862.778 ops/s
# Warmup Iteration  27: 221649.074 ops/s
# Warmup Iteration  28: 221487.202 ops/s
# Warmup Iteration  29: 221431.475 ops/s
# Warmup Iteration  30: 221689.110 ops/s
Iteration   1: 221978.998 ops/s
Iteration   2: 222029.978 ops/s
Iteration   3: 221581.137 ops/s
Iteration   4: 221832.879 ops/s
Iteration   5: 221324.517 ops/s
Iteration   6: 221712.778 ops/s
Iteration   7: 221776.224 ops/s
Iteration   8: 221667.387 ops/s
Iteration   9: 221584.601 ops/s
Iteration  10: 221888.713 ops/s
Iteration  11: 221383.481 ops/s
Iteration  12: 221365.140 ops/s
Iteration  13: 221439.157 ops/s
Iteration  14: 221903.410 ops/s
Iteration  15: 221609.405 ops/s
Iteration  16: 221098.244 ops/s
Iteration  17: 220908.905 ops/s
Iteration  18: 221333.517 ops/s
Iteration  19: 221690.813 ops/s
Iteration  20: 221754.618 ops/s
Iteration  21: 221532.957 ops/s
Iteration  22: 221359.478 ops/s
Iteration  23: 221633.703 ops/s
Iteration  24: 221515.864 ops/s
Iteration  25: 221795.895 ops/s
Iteration  26: 221683.553 ops/s
Iteration  27: 221701.197 ops/s
Iteration  28: 221372.527 ops/s
Iteration  29: 221301.723 ops/s
Iteration  30: 221566.702 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_924._Benchmark.benchmark_Cluster_924":
  221577.583 ±(99.9%) 170.851 ops/s [Average]
  (min, avg, max) = (220908.905, 221577.583, 222029.978), stdev = 255.721
  CI (99.9%): [221406.733, 221748.434] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_924._Benchmark.benchmark_Cluster_924  thrpt   30  221577.583 ± 170.851  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_925._Benchmark.benchmark_Cluster_925$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_925._Benchmark.benchmark_Cluster_925

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75833.186 ops/s
# Warmup Iteration   2: 105107.616 ops/s
# Warmup Iteration   3: 182990.518 ops/s
# Warmup Iteration   4: 185278.390 ops/s
# Warmup Iteration   5: 184848.691 ops/s
# Warmup Iteration   6: 185630.220 ops/s
# Warmup Iteration   7: 186136.598 ops/s
# Warmup Iteration   8: 186605.601 ops/s
# Warmup Iteration   9: 139349.518 ops/s
# Warmup Iteration  10: 185664.239 ops/s
# Warmup Iteration  11: 185639.657 ops/s
# Warmup Iteration  12: 186152.486 ops/s
# Warmup Iteration  13: 185347.602 ops/s
# Warmup Iteration  14: 185691.096 ops/s
# Warmup Iteration  15: 185754.656 ops/s
# Warmup Iteration  16: 185422.155 ops/s
# Warmup Iteration  17: 189875.276 ops/s
# Warmup Iteration  18: 189481.365 ops/s
# Warmup Iteration  19: 189425.610 ops/s
# Warmup Iteration  20: 189811.388 ops/s
# Warmup Iteration  21: 189653.486 ops/s
# Warmup Iteration  22: 189562.549 ops/s
# Warmup Iteration  23: 189669.809 ops/s
# Warmup Iteration  24: 189585.936 ops/s
# Warmup Iteration  25: 189306.265 ops/s
# Warmup Iteration  26: 189509.366 ops/s
# Warmup Iteration  27: 189621.718 ops/s
# Warmup Iteration  28: 189424.458 ops/s
# Warmup Iteration  29: 189561.252 ops/s
# Warmup Iteration  30: 189617.509 ops/s
Iteration   1: 189537.380 ops/s
Iteration   2: 189767.231 ops/s
Iteration   3: 189550.512 ops/s
Iteration   4: 190449.765 ops/s
Iteration   5: 189677.729 ops/s
Iteration   6: 189475.930 ops/s
Iteration   7: 189904.208 ops/s
Iteration   8: 189937.950 ops/s
Iteration   9: 190037.946 ops/s
Iteration  10: 189929.697 ops/s
Iteration  11: 189377.071 ops/s
Iteration  12: 189696.367 ops/s
Iteration  13: 189555.631 ops/s
Iteration  14: 189987.174 ops/s
Iteration  15: 189406.783 ops/s
Iteration  16: 189765.327 ops/s
Iteration  17: 190397.180 ops/s
Iteration  18: 189940.367 ops/s
Iteration  19: 189735.915 ops/s
Iteration  20: 190142.864 ops/s
Iteration  21: 189562.656 ops/s
Iteration  22: 190303.429 ops/s
Iteration  23: 190105.753 ops/s
Iteration  24: 189705.643 ops/s
Iteration  25: 189505.246 ops/s
Iteration  26: 190141.489 ops/s
Iteration  27: 189304.581 ops/s
Iteration  28: 189318.330 ops/s
Iteration  29: 189757.628 ops/s
Iteration  30: 189713.598 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_925._Benchmark.benchmark_Cluster_925":
  189789.713 ±(99.9%) 208.162 ops/s [Average]
  (min, avg, max) = (189304.581, 189789.713, 190449.765), stdev = 311.567
  CI (99.9%): [189581.551, 189997.875] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_925._Benchmark.benchmark_Cluster_925  thrpt   30  189789.713 ± 208.162  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_926._Benchmark.benchmark_Cluster_926$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_926._Benchmark.benchmark_Cluster_926

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80275.443 ops/s
# Warmup Iteration   2: 114910.030 ops/s
# Warmup Iteration   3: 166892.366 ops/s
# Warmup Iteration   4: 166003.700 ops/s
# Warmup Iteration   5: 167269.553 ops/s
# Warmup Iteration   6: 166884.336 ops/s
# Warmup Iteration   7: 166516.633 ops/s
# Warmup Iteration   8: 159385.995 ops/s
# Warmup Iteration   9: 139654.813 ops/s
# Warmup Iteration  10: 166973.799 ops/s
# Warmup Iteration  11: 166884.481 ops/s
# Warmup Iteration  12: 167481.935 ops/s
# Warmup Iteration  13: 167020.070 ops/s
# Warmup Iteration  14: 167196.967 ops/s
# Warmup Iteration  15: 167086.130 ops/s
# Warmup Iteration  16: 167391.759 ops/s
# Warmup Iteration  17: 171847.977 ops/s
# Warmup Iteration  18: 171824.733 ops/s
# Warmup Iteration  19: 171985.669 ops/s
# Warmup Iteration  20: 171685.475 ops/s
# Warmup Iteration  21: 171748.959 ops/s
# Warmup Iteration  22: 171750.401 ops/s
# Warmup Iteration  23: 172408.820 ops/s
# Warmup Iteration  24: 171854.804 ops/s
# Warmup Iteration  25: 171852.981 ops/s
# Warmup Iteration  26: 171717.075 ops/s
# Warmup Iteration  27: 171633.347 ops/s
# Warmup Iteration  28: 171793.347 ops/s
# Warmup Iteration  29: 171859.362 ops/s
# Warmup Iteration  30: 171900.219 ops/s
Iteration   1: 171754.826 ops/s
Iteration   2: 171877.336 ops/s
Iteration   3: 171938.246 ops/s
Iteration   4: 171991.204 ops/s
Iteration   5: 171900.229 ops/s
Iteration   6: 171603.918 ops/s
Iteration   7: 171770.672 ops/s
Iteration   8: 171860.090 ops/s
Iteration   9: 172058.312 ops/s
Iteration  10: 171609.407 ops/s
Iteration  11: 171565.982 ops/s
Iteration  12: 171750.763 ops/s
Iteration  13: 172057.472 ops/s
Iteration  14: 171627.681 ops/s
Iteration  15: 172042.489 ops/s
Iteration  16: 171566.902 ops/s
Iteration  17: 172145.725 ops/s
Iteration  18: 171828.611 ops/s
Iteration  19: 171794.867 ops/s
Iteration  20: 171989.876 ops/s
Iteration  21: 171517.740 ops/s
Iteration  22: 171649.964 ops/s
Iteration  23: 172238.508 ops/s
Iteration  24: 171382.180 ops/s
Iteration  25: 171516.091 ops/s
Iteration  26: 172163.940 ops/s
Iteration  27: 171869.167 ops/s
Iteration  28: 171933.168 ops/s
Iteration  29: 171890.893 ops/s
Iteration  30: 171829.099 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_926._Benchmark.benchmark_Cluster_926":
  171824.179 ±(99.9%) 143.543 ops/s [Average]
  (min, avg, max) = (171382.180, 171824.179, 172238.508), stdev = 214.848
  CI (99.9%): [171680.636, 171967.721] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_926._Benchmark.benchmark_Cluster_926  thrpt   30  171824.179 ± 143.543  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_927._Benchmark.benchmark_Cluster_927$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_927._Benchmark.benchmark_Cluster_927

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55080.174 ops/s
# Warmup Iteration   2: 119147.469 ops/s
# Warmup Iteration   3: 165252.787 ops/s
# Warmup Iteration   4: 167113.542 ops/s
# Warmup Iteration   5: 166866.158 ops/s
# Warmup Iteration   6: 131561.102 ops/s
# Warmup Iteration   7: 167648.684 ops/s
# Warmup Iteration   8: 167455.517 ops/s
# Warmup Iteration   9: 167603.612 ops/s
# Warmup Iteration  10: 167511.033 ops/s
# Warmup Iteration  11: 167689.369 ops/s
# Warmup Iteration  12: 167952.109 ops/s
# Warmup Iteration  13: 167942.831 ops/s
# Warmup Iteration  14: 167612.149 ops/s
# Warmup Iteration  15: 167580.267 ops/s
# Warmup Iteration  16: 167461.686 ops/s
# Warmup Iteration  17: 167474.100 ops/s
# Warmup Iteration  18: 167590.383 ops/s
# Warmup Iteration  19: 167538.768 ops/s
# Warmup Iteration  20: 167643.858 ops/s
# Warmup Iteration  21: 167734.409 ops/s
# Warmup Iteration  22: 167492.881 ops/s
# Warmup Iteration  23: 167751.399 ops/s
# Warmup Iteration  24: 167560.508 ops/s
# Warmup Iteration  25: 167736.276 ops/s
# Warmup Iteration  26: 167664.117 ops/s
# Warmup Iteration  27: 167611.144 ops/s
# Warmup Iteration  28: 167345.967 ops/s
# Warmup Iteration  29: 167197.663 ops/s
# Warmup Iteration  30: 167423.531 ops/s
Iteration   1: 167500.497 ops/s
Iteration   2: 167694.528 ops/s
Iteration   3: 167830.356 ops/s
Iteration   4: 167140.830 ops/s
Iteration   5: 167329.399 ops/s
Iteration   6: 167575.298 ops/s
Iteration   7: 167670.851 ops/s
Iteration   8: 167528.179 ops/s
Iteration   9: 167491.159 ops/s
Iteration  10: 167338.136 ops/s
Iteration  11: 167553.780 ops/s
Iteration  12: 167389.246 ops/s
Iteration  13: 167518.289 ops/s
Iteration  14: 167443.126 ops/s
Iteration  15: 167181.325 ops/s
Iteration  16: 167439.404 ops/s
Iteration  17: 167519.721 ops/s
Iteration  18: 168057.071 ops/s
Iteration  19: 167578.406 ops/s
Iteration  20: 167370.601 ops/s
Iteration  21: 167551.408 ops/s
Iteration  22: 167403.822 ops/s
Iteration  23: 167798.064 ops/s
Iteration  24: 167605.651 ops/s
Iteration  25: 167326.001 ops/s
Iteration  26: 167895.350 ops/s
Iteration  27: 167574.024 ops/s
Iteration  28: 167709.083 ops/s
Iteration  29: 167392.228 ops/s
Iteration  30: 167563.760 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_927._Benchmark.benchmark_Cluster_927":
  167532.320 ±(99.9%) 133.426 ops/s [Average]
  (min, avg, max) = (167140.830, 167532.320, 168057.071), stdev = 199.706
  CI (99.9%): [167398.894, 167665.746] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_927._Benchmark.benchmark_Cluster_927  thrpt   30  167532.320 ± 133.426  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_928._Benchmark.benchmark_Cluster_928$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_928._Benchmark.benchmark_Cluster_928

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 34985.719 ops/s
# Warmup Iteration   2: 85836.670 ops/s
# Warmup Iteration   3: 152737.602 ops/s
# Warmup Iteration   4: 152994.586 ops/s
# Warmup Iteration   5: 154146.481 ops/s
# Warmup Iteration   6: 153366.090 ops/s
# Warmup Iteration   7: 137547.281 ops/s
# Warmup Iteration   8: 137960.965 ops/s
# Warmup Iteration   9: 154213.692 ops/s
# Warmup Iteration  10: 154243.948 ops/s
# Warmup Iteration  11: 154402.351 ops/s
# Warmup Iteration  12: 154366.376 ops/s
# Warmup Iteration  13: 154494.703 ops/s
# Warmup Iteration  14: 154404.033 ops/s
# Warmup Iteration  15: 154373.783 ops/s
# Warmup Iteration  16: 154134.108 ops/s
# Warmup Iteration  17: 154070.917 ops/s
# Warmup Iteration  18: 154241.832 ops/s
# Warmup Iteration  19: 154340.030 ops/s
# Warmup Iteration  20: 154449.569 ops/s
# Warmup Iteration  21: 154183.992 ops/s
# Warmup Iteration  22: 154460.330 ops/s
# Warmup Iteration  23: 154430.663 ops/s
# Warmup Iteration  24: 154198.192 ops/s
# Warmup Iteration  25: 154115.937 ops/s
# Warmup Iteration  26: 154249.342 ops/s
# Warmup Iteration  27: 154169.738 ops/s
# Warmup Iteration  28: 154289.144 ops/s
# Warmup Iteration  29: 154250.260 ops/s
# Warmup Iteration  30: 154252.404 ops/s
Iteration   1: 154263.818 ops/s
Iteration   2: 154102.621 ops/s
Iteration   3: 154382.620 ops/s
Iteration   4: 154146.088 ops/s
Iteration   5: 154410.072 ops/s
Iteration   6: 154226.396 ops/s
Iteration   7: 154323.279 ops/s
Iteration   8: 154365.957 ops/s
Iteration   9: 154493.888 ops/s
Iteration  10: 154318.819 ops/s
Iteration  11: 154321.933 ops/s
Iteration  12: 154280.117 ops/s
Iteration  13: 154324.978 ops/s
Iteration  14: 154436.557 ops/s
Iteration  15: 154343.161 ops/s
Iteration  16: 154377.400 ops/s
Iteration  17: 154177.541 ops/s
Iteration  18: 154198.118 ops/s
Iteration  19: 154106.355 ops/s
Iteration  20: 154242.105 ops/s
Iteration  21: 154068.323 ops/s
Iteration  22: 154184.195 ops/s
Iteration  23: 154058.191 ops/s
Iteration  24: 154726.350 ops/s
Iteration  25: 154163.524 ops/s
Iteration  26: 154460.722 ops/s
Iteration  27: 154287.390 ops/s
Iteration  28: 154369.700 ops/s
Iteration  29: 154331.302 ops/s
Iteration  30: 154327.302 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_928._Benchmark.benchmark_Cluster_928":
  154293.961 ±(99.9%) 94.715 ops/s [Average]
  (min, avg, max) = (154058.191, 154293.961, 154726.350), stdev = 141.765
  CI (99.9%): [154199.246, 154388.676] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score    Error  Units
Cluster_928._Benchmark.benchmark_Cluster_928  thrpt   30  154293.961 ± 94.715  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_929._Benchmark.benchmark_Cluster_929$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_929._Benchmark.benchmark_Cluster_929

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62884.585 ops/s
# Warmup Iteration   2: 94817.660 ops/s
# Warmup Iteration   3: 151940.121 ops/s
# Warmup Iteration   4: 152255.254 ops/s
# Warmup Iteration   5: 153522.131 ops/s
# Warmup Iteration   6: 153510.266 ops/s
# Warmup Iteration   7: 153144.882 ops/s
# Warmup Iteration   8: 118677.633 ops/s
# Warmup Iteration   9: 153026.691 ops/s
# Warmup Iteration  10: 153256.329 ops/s
# Warmup Iteration  11: 153391.241 ops/s
# Warmup Iteration  12: 152980.875 ops/s
# Warmup Iteration  13: 153194.978 ops/s
# Warmup Iteration  14: 153089.941 ops/s
# Warmup Iteration  15: 153056.675 ops/s
# Warmup Iteration  16: 153132.375 ops/s
# Warmup Iteration  17: 155369.400 ops/s
# Warmup Iteration  18: 155780.772 ops/s
# Warmup Iteration  19: 155398.867 ops/s
# Warmup Iteration  20: 155701.384 ops/s
# Warmup Iteration  21: 155419.107 ops/s
# Warmup Iteration  22: 155556.028 ops/s
# Warmup Iteration  23: 155779.994 ops/s
# Warmup Iteration  24: 155584.048 ops/s
# Warmup Iteration  25: 155837.551 ops/s
# Warmup Iteration  26: 155877.698 ops/s
# Warmup Iteration  27: 156199.485 ops/s
# Warmup Iteration  28: 155953.090 ops/s
# Warmup Iteration  29: 155649.335 ops/s
# Warmup Iteration  30: 155429.437 ops/s
Iteration   1: 154896.238 ops/s
Iteration   2: 155105.351 ops/s
Iteration   3: 155474.785 ops/s
Iteration   4: 155903.122 ops/s
Iteration   5: 155567.051 ops/s
Iteration   6: 155541.926 ops/s
Iteration   7: 155912.661 ops/s
Iteration   8: 155336.430 ops/s
Iteration   9: 155334.065 ops/s
Iteration  10: 155569.543 ops/s
Iteration  11: 156127.292 ops/s
Iteration  12: 156286.862 ops/s
Iteration  13: 155239.665 ops/s
Iteration  14: 155510.966 ops/s
Iteration  15: 155945.516 ops/s
Iteration  16: 156186.369 ops/s
Iteration  17: 155346.793 ops/s
Iteration  18: 156031.591 ops/s
Iteration  19: 156056.920 ops/s
Iteration  20: 155115.950 ops/s
Iteration  21: 155479.777 ops/s
Iteration  22: 155652.601 ops/s
Iteration  23: 156002.921 ops/s
Iteration  24: 155094.766 ops/s
Iteration  25: 154992.203 ops/s
Iteration  26: 155322.161 ops/s
Iteration  27: 155905.391 ops/s
Iteration  28: 155547.241 ops/s
Iteration  29: 155188.287 ops/s
Iteration  30: 155256.598 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_929._Benchmark.benchmark_Cluster_929":
  155564.368 ±(99.9%) 259.114 ops/s [Average]
  (min, avg, max) = (154896.238, 155564.368, 156286.862), stdev = 387.830
  CI (99.9%): [155305.254, 155823.482] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_929._Benchmark.benchmark_Cluster_929  thrpt   30  155564.368 ± 259.114  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_93._Benchmark.benchmark_Cluster_93$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_93._Benchmark.benchmark_Cluster_93

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75698.253 ops/s
# Warmup Iteration   2: 92967.029 ops/s
# Warmup Iteration   3: 118067.613 ops/s
# Warmup Iteration   4: 139410.194 ops/s
# Warmup Iteration   5: 139541.083 ops/s
# Warmup Iteration   6: 137943.231 ops/s
# Warmup Iteration   7: 139168.553 ops/s
# Warmup Iteration   8: 139588.834 ops/s
# Warmup Iteration   9: 139616.583 ops/s
# Warmup Iteration  10: 139489.728 ops/s
# Warmup Iteration  11: 139098.760 ops/s
# Warmup Iteration  12: 125306.608 ops/s
# Warmup Iteration  13: 119213.454 ops/s
# Warmup Iteration  14: 139396.107 ops/s
# Warmup Iteration  15: 139117.331 ops/s
# Warmup Iteration  16: 139506.081 ops/s
# Warmup Iteration  17: 143634.454 ops/s
# Warmup Iteration  18: 143584.161 ops/s
# Warmup Iteration  19: 143491.541 ops/s
# Warmup Iteration  20: 143315.441 ops/s
# Warmup Iteration  21: 143260.276 ops/s
# Warmup Iteration  22: 143239.762 ops/s
# Warmup Iteration  23: 143224.535 ops/s
# Warmup Iteration  24: 143365.676 ops/s
# Warmup Iteration  25: 143386.684 ops/s
# Warmup Iteration  26: 143174.510 ops/s
# Warmup Iteration  27: 142926.822 ops/s
# Warmup Iteration  28: 143293.057 ops/s
# Warmup Iteration  29: 142957.238 ops/s
# Warmup Iteration  30: 143057.060 ops/s
Iteration   1: 143063.548 ops/s
Iteration   2: 142925.682 ops/s
Iteration   3: 143009.642 ops/s
Iteration   4: 143149.675 ops/s
Iteration   5: 143323.747 ops/s
Iteration   6: 142945.700 ops/s
Iteration   7: 142916.956 ops/s
Iteration   8: 142466.627 ops/s
Iteration   9: 142235.901 ops/s
Iteration  10: 142666.750 ops/s
Iteration  11: 142863.293 ops/s
Iteration  12: 143151.703 ops/s
Iteration  13: 143524.089 ops/s
Iteration  14: 143301.606 ops/s
Iteration  15: 142890.122 ops/s
Iteration  16: 143110.002 ops/s
Iteration  17: 142976.842 ops/s
Iteration  18: 143057.254 ops/s
Iteration  19: 143242.365 ops/s
Iteration  20: 142720.361 ops/s
Iteration  21: 142763.855 ops/s
Iteration  22: 142676.280 ops/s
Iteration  23: 143531.469 ops/s
Iteration  24: 143019.678 ops/s
Iteration  25: 143248.571 ops/s
Iteration  26: 143067.968 ops/s
Iteration  27: 142704.579 ops/s
Iteration  28: 142911.316 ops/s
Iteration  29: 141921.605 ops/s
Iteration  30: 142594.992 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_93._Benchmark.benchmark_Cluster_93":
  142932.739 ±(99.9%) 231.925 ops/s [Average]
  (min, avg, max) = (141921.605, 142932.739, 143531.469), stdev = 347.134
  CI (99.9%): [142700.814, 143164.664] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_93._Benchmark.benchmark_Cluster_93  thrpt   30  142932.739 ± 231.925  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_930._Benchmark.benchmark_Cluster_930$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_930._Benchmark.benchmark_Cluster_930

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68994.433 ops/s
# Warmup Iteration   2: 121426.680 ops/s
# Warmup Iteration   3: 183515.715 ops/s
# Warmup Iteration   4: 182039.387 ops/s
# Warmup Iteration   5: 183625.527 ops/s
# Warmup Iteration   6: 183537.151 ops/s
# Warmup Iteration   7: 143062.940 ops/s
# Warmup Iteration   8: 183886.033 ops/s
# Warmup Iteration   9: 183689.760 ops/s
# Warmup Iteration  10: 183573.546 ops/s
# Warmup Iteration  11: 183763.236 ops/s
# Warmup Iteration  12: 183681.600 ops/s
# Warmup Iteration  13: 183797.622 ops/s
# Warmup Iteration  14: 183466.799 ops/s
# Warmup Iteration  15: 183682.631 ops/s
# Warmup Iteration  16: 183926.821 ops/s
# Warmup Iteration  17: 184070.678 ops/s
# Warmup Iteration  18: 184131.184 ops/s
# Warmup Iteration  19: 184070.592 ops/s
# Warmup Iteration  20: 184306.806 ops/s
# Warmup Iteration  21: 183960.690 ops/s
# Warmup Iteration  22: 184047.824 ops/s
# Warmup Iteration  23: 184065.909 ops/s
# Warmup Iteration  24: 184125.292 ops/s
# Warmup Iteration  25: 184158.847 ops/s
# Warmup Iteration  26: 184125.776 ops/s
# Warmup Iteration  27: 183853.248 ops/s
# Warmup Iteration  28: 184075.070 ops/s
# Warmup Iteration  29: 183895.896 ops/s
# Warmup Iteration  30: 183592.829 ops/s
Iteration   1: 184065.258 ops/s
Iteration   2: 184340.156 ops/s
Iteration   3: 184224.036 ops/s
Iteration   4: 184211.972 ops/s
Iteration   5: 184086.853 ops/s
Iteration   6: 184177.470 ops/s
Iteration   7: 184208.283 ops/s
Iteration   8: 184111.494 ops/s
Iteration   9: 184179.603 ops/s
Iteration  10: 184303.694 ops/s
Iteration  11: 184005.460 ops/s
Iteration  12: 183928.928 ops/s
Iteration  13: 183959.374 ops/s
Iteration  14: 184025.630 ops/s
Iteration  15: 183479.094 ops/s
Iteration  16: 184728.431 ops/s
Iteration  17: 184088.334 ops/s
Iteration  18: 184348.115 ops/s
Iteration  19: 183906.990 ops/s
Iteration  20: 184326.529 ops/s
Iteration  21: 184162.654 ops/s
Iteration  22: 184134.237 ops/s
Iteration  23: 184032.111 ops/s
Iteration  24: 184265.828 ops/s
Iteration  25: 183845.350 ops/s
Iteration  26: 184363.690 ops/s
Iteration  27: 183745.503 ops/s
Iteration  28: 184324.636 ops/s
Iteration  29: 184033.556 ops/s
Iteration  30: 184275.423 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_930._Benchmark.benchmark_Cluster_930":
  184129.623 ±(99.9%) 152.124 ops/s [Average]
  (min, avg, max) = (183479.094, 184129.623, 184728.431), stdev = 227.692
  CI (99.9%): [183977.499, 184281.747] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_930._Benchmark.benchmark_Cluster_930  thrpt   30  184129.623 ± 152.124  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_931._Benchmark.benchmark_Cluster_931$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_931._Benchmark.benchmark_Cluster_931

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51884.614 ops/s
# Warmup Iteration   2: 118837.744 ops/s
# Warmup Iteration   3: 170446.497 ops/s
# Warmup Iteration   4: 171917.398 ops/s
# Warmup Iteration   5: 171864.238 ops/s
# Warmup Iteration   6: 135648.841 ops/s
# Warmup Iteration   7: 171939.549 ops/s
# Warmup Iteration   8: 172173.374 ops/s
# Warmup Iteration   9: 172038.087 ops/s
# Warmup Iteration  10: 171896.574 ops/s
# Warmup Iteration  11: 171867.666 ops/s
# Warmup Iteration  12: 171864.291 ops/s
# Warmup Iteration  13: 172034.023 ops/s
# Warmup Iteration  14: 171989.405 ops/s
# Warmup Iteration  15: 171927.592 ops/s
# Warmup Iteration  16: 172428.494 ops/s
# Warmup Iteration  17: 172256.355 ops/s
# Warmup Iteration  18: 172087.326 ops/s
# Warmup Iteration  19: 172124.474 ops/s
# Warmup Iteration  20: 172131.594 ops/s
# Warmup Iteration  21: 172008.874 ops/s
# Warmup Iteration  22: 172475.507 ops/s
# Warmup Iteration  23: 172170.502 ops/s
# Warmup Iteration  24: 172037.755 ops/s
# Warmup Iteration  25: 172064.640 ops/s
# Warmup Iteration  26: 172231.348 ops/s
# Warmup Iteration  27: 172312.149 ops/s
# Warmup Iteration  28: 172170.766 ops/s
# Warmup Iteration  29: 172063.310 ops/s
# Warmup Iteration  30: 172063.163 ops/s
Iteration   1: 172287.848 ops/s
Iteration   2: 172071.730 ops/s
Iteration   3: 172515.781 ops/s
Iteration   4: 171989.212 ops/s
Iteration   5: 172060.954 ops/s
Iteration   6: 172322.746 ops/s
Iteration   7: 171776.345 ops/s
Iteration   8: 171887.863 ops/s
Iteration   9: 172048.084 ops/s
Iteration  10: 171840.843 ops/s
Iteration  11: 171795.183 ops/s
Iteration  12: 172362.927 ops/s
Iteration  13: 172301.468 ops/s
Iteration  14: 171979.957 ops/s
Iteration  15: 172359.562 ops/s
Iteration  16: 172099.436 ops/s
Iteration  17: 172150.839 ops/s
Iteration  18: 172234.389 ops/s
Iteration  19: 171987.508 ops/s
Iteration  20: 172298.350 ops/s
Iteration  21: 172510.991 ops/s
Iteration  22: 171825.901 ops/s
Iteration  23: 172131.344 ops/s
Iteration  24: 171747.777 ops/s
Iteration  25: 172136.663 ops/s
Iteration  26: 172035.769 ops/s
Iteration  27: 172157.398 ops/s
Iteration  28: 171927.319 ops/s
Iteration  29: 172284.337 ops/s
Iteration  30: 171978.556 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_931._Benchmark.benchmark_Cluster_931":
  172103.569 ±(99.9%) 141.732 ops/s [Average]
  (min, avg, max) = (171747.777, 172103.569, 172515.781), stdev = 212.137
  CI (99.9%): [171961.838, 172245.301] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_931._Benchmark.benchmark_Cluster_931  thrpt   30  172103.569 ± 141.732  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_932._Benchmark.benchmark_Cluster_932$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_932._Benchmark.benchmark_Cluster_932

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 28154.127 ops/s
# Warmup Iteration   2: 82843.254 ops/s
# Warmup Iteration   3: 152559.326 ops/s
# Warmup Iteration   4: 151696.542 ops/s
# Warmup Iteration   5: 153187.084 ops/s
# Warmup Iteration   6: 121055.196 ops/s
# Warmup Iteration   7: 153468.002 ops/s
# Warmup Iteration   8: 153483.658 ops/s
# Warmup Iteration   9: 153540.936 ops/s
# Warmup Iteration  10: 153486.459 ops/s
# Warmup Iteration  11: 153217.406 ops/s
# Warmup Iteration  12: 153587.348 ops/s
# Warmup Iteration  13: 153441.720 ops/s
# Warmup Iteration  14: 153595.244 ops/s
# Warmup Iteration  15: 153515.974 ops/s
# Warmup Iteration  16: 153322.787 ops/s
# Warmup Iteration  17: 153073.600 ops/s
# Warmup Iteration  18: 153178.205 ops/s
# Warmup Iteration  19: 153597.894 ops/s
# Warmup Iteration  20: 153236.246 ops/s
# Warmup Iteration  21: 153136.643 ops/s
# Warmup Iteration  22: 153470.948 ops/s
# Warmup Iteration  23: 153329.793 ops/s
# Warmup Iteration  24: 153340.160 ops/s
# Warmup Iteration  25: 153162.044 ops/s
# Warmup Iteration  26: 153465.384 ops/s
# Warmup Iteration  27: 153124.080 ops/s
# Warmup Iteration  28: 153306.716 ops/s
# Warmup Iteration  29: 153472.096 ops/s
# Warmup Iteration  30: 153557.451 ops/s
Iteration   1: 153588.644 ops/s
Iteration   2: 152854.818 ops/s
Iteration   3: 153414.116 ops/s
Iteration   4: 153582.452 ops/s
Iteration   5: 153237.086 ops/s
Iteration   6: 153369.780 ops/s
Iteration   7: 153437.696 ops/s
Iteration   8: 153406.697 ops/s
Iteration   9: 153291.527 ops/s
Iteration  10: 153578.637 ops/s
Iteration  11: 153548.824 ops/s
Iteration  12: 153474.209 ops/s
Iteration  13: 153772.937 ops/s
Iteration  14: 153270.984 ops/s
Iteration  15: 153329.495 ops/s
Iteration  16: 153628.608 ops/s
Iteration  17: 153136.656 ops/s
Iteration  18: 153462.835 ops/s
Iteration  19: 152970.161 ops/s
Iteration  20: 153541.685 ops/s
Iteration  21: 153697.126 ops/s
Iteration  22: 153384.954 ops/s
Iteration  23: 153662.190 ops/s
Iteration  24: 153144.390 ops/s
Iteration  25: 153177.014 ops/s
Iteration  26: 153292.495 ops/s
Iteration  27: 153376.458 ops/s
Iteration  28: 153667.980 ops/s
Iteration  29: 153432.267 ops/s
Iteration  30: 153184.405 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_932._Benchmark.benchmark_Cluster_932":
  153397.237 ±(99.9%) 144.746 ops/s [Average]
  (min, avg, max) = (152854.818, 153397.237, 153772.937), stdev = 216.650
  CI (99.9%): [153252.491, 153541.984] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_932._Benchmark.benchmark_Cluster_932  thrpt   30  153397.237 ± 144.746  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_933._Benchmark.benchmark_Cluster_933$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_933._Benchmark.benchmark_Cluster_933

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 104740.574 ops/s
# Warmup Iteration   2: 116526.545 ops/s
# Warmup Iteration   3: 152317.474 ops/s
# Warmup Iteration   4: 165105.740 ops/s
# Warmup Iteration   5: 165658.250 ops/s
# Warmup Iteration   6: 164457.875 ops/s
# Warmup Iteration   7: 165155.456 ops/s
# Warmup Iteration   8: 165186.317 ops/s
# Warmup Iteration   9: 165328.219 ops/s
# Warmup Iteration  10: 164190.212 ops/s
# Warmup Iteration  11: 165424.510 ops/s
# Warmup Iteration  12: 143134.274 ops/s
# Warmup Iteration  13: 152956.454 ops/s
# Warmup Iteration  14: 165543.401 ops/s
# Warmup Iteration  15: 165739.481 ops/s
# Warmup Iteration  16: 165017.848 ops/s
# Warmup Iteration  17: 173482.745 ops/s
# Warmup Iteration  18: 173297.897 ops/s
# Warmup Iteration  19: 173616.562 ops/s
# Warmup Iteration  20: 173321.677 ops/s
# Warmup Iteration  21: 173634.039 ops/s
# Warmup Iteration  22: 174011.100 ops/s
# Warmup Iteration  23: 173797.140 ops/s
# Warmup Iteration  24: 173399.923 ops/s
# Warmup Iteration  25: 172490.879 ops/s
# Warmup Iteration  26: 172860.309 ops/s
# Warmup Iteration  27: 172794.304 ops/s
# Warmup Iteration  28: 173109.514 ops/s
# Warmup Iteration  29: 173222.682 ops/s
# Warmup Iteration  30: 173216.849 ops/s
Iteration   1: 172715.818 ops/s
Iteration   2: 173727.367 ops/s
Iteration   3: 172367.940 ops/s
Iteration   4: 173417.262 ops/s
Iteration   5: 172838.863 ops/s
Iteration   6: 173663.365 ops/s
Iteration   7: 173431.884 ops/s
Iteration   8: 173191.041 ops/s
Iteration   9: 173165.245 ops/s
Iteration  10: 173550.593 ops/s
Iteration  11: 173333.502 ops/s
Iteration  12: 173695.821 ops/s
Iteration  13: 172581.599 ops/s
Iteration  14: 172507.264 ops/s
Iteration  15: 173406.175 ops/s
Iteration  16: 173960.770 ops/s
Iteration  17: 173532.957 ops/s
Iteration  18: 173450.019 ops/s
Iteration  19: 173321.503 ops/s
Iteration  20: 173253.145 ops/s
Iteration  21: 173013.793 ops/s
Iteration  22: 173122.207 ops/s
Iteration  23: 173208.723 ops/s
Iteration  24: 173393.979 ops/s
Iteration  25: 173006.322 ops/s
Iteration  26: 173366.782 ops/s
Iteration  27: 173118.769 ops/s
Iteration  28: 173643.445 ops/s
Iteration  29: 173440.739 ops/s
Iteration  30: 173601.200 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_933._Benchmark.benchmark_Cluster_933":
  173267.603 ±(99.9%) 252.502 ops/s [Average]
  (min, avg, max) = (172367.940, 173267.603, 173960.770), stdev = 377.934
  CI (99.9%): [173015.101, 173520.106] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_933._Benchmark.benchmark_Cluster_933  thrpt   30  173267.603 ± 252.502  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_934._Benchmark.benchmark_Cluster_934$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_934._Benchmark.benchmark_Cluster_934

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50710.788 ops/s
# Warmup Iteration   2: 113825.329 ops/s
# Warmup Iteration   3: 175989.431 ops/s
# Warmup Iteration   4: 175296.914 ops/s
# Warmup Iteration   5: 176708.664 ops/s
# Warmup Iteration   6: 164120.417 ops/s
# Warmup Iteration   7: 153066.253 ops/s
# Warmup Iteration   8: 176067.405 ops/s
# Warmup Iteration   9: 176194.052 ops/s
# Warmup Iteration  10: 176110.390 ops/s
# Warmup Iteration  11: 176546.166 ops/s
# Warmup Iteration  12: 176464.096 ops/s
# Warmup Iteration  13: 176439.836 ops/s
# Warmup Iteration  14: 176379.199 ops/s
# Warmup Iteration  15: 176385.667 ops/s
# Warmup Iteration  16: 176162.281 ops/s
# Warmup Iteration  17: 176810.342 ops/s
# Warmup Iteration  18: 176634.242 ops/s
# Warmup Iteration  19: 176427.171 ops/s
# Warmup Iteration  20: 176321.609 ops/s
# Warmup Iteration  21: 176366.780 ops/s
# Warmup Iteration  22: 176176.455 ops/s
# Warmup Iteration  23: 176382.117 ops/s
# Warmup Iteration  24: 176507.216 ops/s
# Warmup Iteration  25: 176387.521 ops/s
# Warmup Iteration  26: 176161.466 ops/s
# Warmup Iteration  27: 176541.134 ops/s
# Warmup Iteration  28: 176405.032 ops/s
# Warmup Iteration  29: 176589.444 ops/s
# Warmup Iteration  30: 176464.224 ops/s
Iteration   1: 176024.596 ops/s
Iteration   2: 177060.022 ops/s
Iteration   3: 176466.381 ops/s
Iteration   4: 176436.089 ops/s
Iteration   5: 176381.997 ops/s
Iteration   6: 176854.041 ops/s
Iteration   7: 176608.723 ops/s
Iteration   8: 176278.405 ops/s
Iteration   9: 176814.368 ops/s
Iteration  10: 176575.818 ops/s
Iteration  11: 176841.776 ops/s
Iteration  12: 176603.750 ops/s
Iteration  13: 176997.105 ops/s
Iteration  14: 176517.032 ops/s
Iteration  15: 176627.405 ops/s
Iteration  16: 176393.306 ops/s
Iteration  17: 176691.404 ops/s
Iteration  18: 176488.342 ops/s
Iteration  19: 176633.869 ops/s
Iteration  20: 176448.301 ops/s
Iteration  21: 176181.480 ops/s
Iteration  22: 176824.124 ops/s
Iteration  23: 176097.918 ops/s
Iteration  24: 176330.061 ops/s
Iteration  25: 175975.577 ops/s
Iteration  26: 176521.089 ops/s
Iteration  27: 176106.467 ops/s
Iteration  28: 176516.476 ops/s
Iteration  29: 176469.589 ops/s
Iteration  30: 176603.246 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_934._Benchmark.benchmark_Cluster_934":
  176512.292 ±(99.9%) 181.674 ops/s [Average]
  (min, avg, max) = (175975.577, 176512.292, 177060.022), stdev = 271.921
  CI (99.9%): [176330.618, 176693.966] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_934._Benchmark.benchmark_Cluster_934  thrpt   30  176512.292 ± 181.674  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_935._Benchmark.benchmark_Cluster_935$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_935._Benchmark.benchmark_Cluster_935

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66212.523 ops/s
# Warmup Iteration   2: 93034.117 ops/s
# Warmup Iteration   3: 147148.364 ops/s
# Warmup Iteration   4: 147940.210 ops/s
# Warmup Iteration   5: 150219.951 ops/s
# Warmup Iteration   6: 150322.329 ops/s
# Warmup Iteration   7: 149961.145 ops/s
# Warmup Iteration   8: 128247.492 ops/s
# Warmup Iteration   9: 139155.528 ops/s
# Warmup Iteration  10: 149676.871 ops/s
# Warmup Iteration  11: 149471.495 ops/s
# Warmup Iteration  12: 150087.585 ops/s
# Warmup Iteration  13: 149881.675 ops/s
# Warmup Iteration  14: 149703.560 ops/s
# Warmup Iteration  15: 149629.411 ops/s
# Warmup Iteration  16: 149580.765 ops/s
# Warmup Iteration  17: 152775.974 ops/s
# Warmup Iteration  18: 153181.038 ops/s
# Warmup Iteration  19: 152766.019 ops/s
# Warmup Iteration  20: 153093.595 ops/s
# Warmup Iteration  21: 152707.626 ops/s
# Warmup Iteration  22: 153051.331 ops/s
# Warmup Iteration  23: 152781.474 ops/s
# Warmup Iteration  24: 152589.552 ops/s
# Warmup Iteration  25: 152834.340 ops/s
# Warmup Iteration  26: 152952.690 ops/s
# Warmup Iteration  27: 153090.953 ops/s
# Warmup Iteration  28: 153149.106 ops/s
# Warmup Iteration  29: 152820.088 ops/s
# Warmup Iteration  30: 152829.191 ops/s
Iteration   1: 152721.546 ops/s
Iteration   2: 153010.334 ops/s
Iteration   3: 152484.340 ops/s
Iteration   4: 153345.193 ops/s
Iteration   5: 153307.351 ops/s
Iteration   6: 153007.592 ops/s
Iteration   7: 152997.199 ops/s
Iteration   8: 153025.091 ops/s
Iteration   9: 153270.645 ops/s
Iteration  10: 153421.513 ops/s
Iteration  11: 152718.738 ops/s
Iteration  12: 152836.787 ops/s
Iteration  13: 152771.917 ops/s
Iteration  14: 153044.867 ops/s
Iteration  15: 152906.800 ops/s
Iteration  16: 153049.910 ops/s
Iteration  17: 153121.607 ops/s
Iteration  18: 152722.715 ops/s
Iteration  19: 153224.540 ops/s
Iteration  20: 153001.113 ops/s
Iteration  21: 153071.112 ops/s
Iteration  22: 152860.124 ops/s
Iteration  23: 152658.545 ops/s
Iteration  24: 152941.521 ops/s
Iteration  25: 152912.580 ops/s
Iteration  26: 152689.779 ops/s
Iteration  27: 152858.860 ops/s
Iteration  28: 152640.589 ops/s
Iteration  29: 153217.297 ops/s
Iteration  30: 153102.037 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_935._Benchmark.benchmark_Cluster_935":
  152964.741 ±(99.9%) 153.951 ops/s [Average]
  (min, avg, max) = (152484.340, 152964.741, 153421.513), stdev = 230.426
  CI (99.9%): [152810.791, 153118.692] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_935._Benchmark.benchmark_Cluster_935  thrpt   30  152964.741 ± 153.951  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_936._Benchmark.benchmark_Cluster_936$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_936._Benchmark.benchmark_Cluster_936

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 99201.662 ops/s
# Warmup Iteration   2: 129707.222 ops/s
# Warmup Iteration   3: 207336.641 ops/s
# Warmup Iteration   4: 207391.746 ops/s
# Warmup Iteration   5: 205547.641 ops/s
# Warmup Iteration   6: 206882.993 ops/s
# Warmup Iteration   7: 207151.623 ops/s
# Warmup Iteration   8: 206840.423 ops/s
# Warmup Iteration   9: 165123.775 ops/s
# Warmup Iteration  10: 204073.974 ops/s
# Warmup Iteration  11: 206757.688 ops/s
# Warmup Iteration  12: 206784.780 ops/s
# Warmup Iteration  13: 207102.021 ops/s
# Warmup Iteration  14: 206726.270 ops/s
# Warmup Iteration  15: 206826.769 ops/s
# Warmup Iteration  16: 206740.100 ops/s
# Warmup Iteration  17: 210822.078 ops/s
# Warmup Iteration  18: 210739.791 ops/s
# Warmup Iteration  19: 211124.874 ops/s
# Warmup Iteration  20: 210977.390 ops/s
# Warmup Iteration  21: 210501.136 ops/s
# Warmup Iteration  22: 210673.147 ops/s
# Warmup Iteration  23: 210123.412 ops/s
# Warmup Iteration  24: 210618.116 ops/s
# Warmup Iteration  25: 210311.189 ops/s
# Warmup Iteration  26: 210257.023 ops/s
# Warmup Iteration  27: 210737.235 ops/s
# Warmup Iteration  28: 210767.581 ops/s
# Warmup Iteration  29: 210818.958 ops/s
# Warmup Iteration  30: 210426.385 ops/s
Iteration   1: 210553.877 ops/s
Iteration   2: 210457.955 ops/s
Iteration   3: 210577.958 ops/s
Iteration   4: 210845.783 ops/s
Iteration   5: 210340.485 ops/s
Iteration   6: 210418.336 ops/s
Iteration   7: 210612.025 ops/s
Iteration   8: 210109.651 ops/s
Iteration   9: 210717.679 ops/s
Iteration  10: 210286.898 ops/s
Iteration  11: 210654.717 ops/s
Iteration  12: 210367.907 ops/s
Iteration  13: 210776.396 ops/s
Iteration  14: 210999.447 ops/s
Iteration  15: 210836.846 ops/s
Iteration  16: 210653.552 ops/s
Iteration  17: 210793.983 ops/s
Iteration  18: 210590.859 ops/s
Iteration  19: 210322.891 ops/s
Iteration  20: 210650.058 ops/s
Iteration  21: 210504.232 ops/s
Iteration  22: 210475.553 ops/s
Iteration  23: 210520.491 ops/s
Iteration  24: 210604.592 ops/s
Iteration  25: 210707.489 ops/s
Iteration  26: 210804.907 ops/s
Iteration  27: 210718.172 ops/s
Iteration  28: 210440.705 ops/s
Iteration  29: 210454.299 ops/s
Iteration  30: 210772.169 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_936._Benchmark.benchmark_Cluster_936":
  210585.664 ±(99.9%) 131.773 ops/s [Average]
  (min, avg, max) = (210109.651, 210585.664, 210999.447), stdev = 197.232
  CI (99.9%): [210453.891, 210717.437] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_936._Benchmark.benchmark_Cluster_936  thrpt   30  210585.664 ± 131.773  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_937._Benchmark.benchmark_Cluster_937$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_937._Benchmark.benchmark_Cluster_937

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78294.272 ops/s
# Warmup Iteration   2: 134166.032 ops/s
# Warmup Iteration   3: 185021.370 ops/s
# Warmup Iteration   4: 184407.944 ops/s
# Warmup Iteration   5: 186276.711 ops/s
# Warmup Iteration   6: 185330.151 ops/s
# Warmup Iteration   7: 148041.775 ops/s
# Warmup Iteration   8: 186078.165 ops/s
# Warmup Iteration   9: 186126.541 ops/s
# Warmup Iteration  10: 186169.272 ops/s
# Warmup Iteration  11: 185917.487 ops/s
# Warmup Iteration  12: 185903.974 ops/s
# Warmup Iteration  13: 186650.126 ops/s
# Warmup Iteration  14: 186211.924 ops/s
# Warmup Iteration  15: 185894.261 ops/s
# Warmup Iteration  16: 186117.306 ops/s
# Warmup Iteration  17: 185890.653 ops/s
# Warmup Iteration  18: 185973.683 ops/s
# Warmup Iteration  19: 186008.295 ops/s
# Warmup Iteration  20: 186025.836 ops/s
# Warmup Iteration  21: 186293.555 ops/s
# Warmup Iteration  22: 185687.796 ops/s
# Warmup Iteration  23: 185885.562 ops/s
# Warmup Iteration  24: 186172.346 ops/s
# Warmup Iteration  25: 186234.478 ops/s
# Warmup Iteration  26: 185316.922 ops/s
# Warmup Iteration  27: 186359.332 ops/s
# Warmup Iteration  28: 186180.396 ops/s
# Warmup Iteration  29: 185765.449 ops/s
# Warmup Iteration  30: 185830.294 ops/s
Iteration   1: 185463.870 ops/s
Iteration   2: 185851.741 ops/s
Iteration   3: 186188.239 ops/s
Iteration   4: 185725.906 ops/s
Iteration   5: 186550.971 ops/s
Iteration   6: 186297.411 ops/s
Iteration   7: 185548.273 ops/s
Iteration   8: 185809.838 ops/s
Iteration   9: 185695.728 ops/s
Iteration  10: 185810.015 ops/s
Iteration  11: 186436.570 ops/s
Iteration  12: 185926.725 ops/s
Iteration  13: 186225.853 ops/s
Iteration  14: 186167.374 ops/s
Iteration  15: 185394.393 ops/s
Iteration  16: 185442.931 ops/s
Iteration  17: 185656.903 ops/s
Iteration  18: 185893.935 ops/s
Iteration  19: 185998.699 ops/s
Iteration  20: 185886.943 ops/s
Iteration  21: 185702.121 ops/s
Iteration  22: 186071.982 ops/s
Iteration  23: 185805.065 ops/s
Iteration  24: 186109.321 ops/s
Iteration  25: 186277.208 ops/s
Iteration  26: 186067.292 ops/s
Iteration  27: 185698.385 ops/s
Iteration  28: 186617.621 ops/s
Iteration  29: 186232.347 ops/s
Iteration  30: 185630.799 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_937._Benchmark.benchmark_Cluster_937":
  185939.482 ±(99.9%) 216.770 ops/s [Average]
  (min, avg, max) = (185394.393, 185939.482, 186617.621), stdev = 324.452
  CI (99.9%): [185722.712, 186156.252] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_937._Benchmark.benchmark_Cluster_937  thrpt   30  185939.482 ± 216.770  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_938._Benchmark.benchmark_Cluster_938$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_938._Benchmark.benchmark_Cluster_938

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68912.410 ops/s
# Warmup Iteration   2: 107370.602 ops/s
# Warmup Iteration   3: 167103.926 ops/s
# Warmup Iteration   4: 165803.889 ops/s
# Warmup Iteration   5: 167046.783 ops/s
# Warmup Iteration   6: 166923.497 ops/s
# Warmup Iteration   7: 166849.579 ops/s
# Warmup Iteration   8: 131017.656 ops/s
# Warmup Iteration   9: 166088.875 ops/s
# Warmup Iteration  10: 166246.712 ops/s
# Warmup Iteration  11: 166198.563 ops/s
# Warmup Iteration  12: 165873.848 ops/s
# Warmup Iteration  13: 165703.095 ops/s
# Warmup Iteration  14: 166131.699 ops/s
# Warmup Iteration  15: 166352.107 ops/s
# Warmup Iteration  16: 166136.664 ops/s
# Warmup Iteration  17: 171092.889 ops/s
# Warmup Iteration  18: 170985.847 ops/s
# Warmup Iteration  19: 170651.255 ops/s
# Warmup Iteration  20: 170708.545 ops/s
# Warmup Iteration  21: 171167.431 ops/s
# Warmup Iteration  22: 171217.838 ops/s
# Warmup Iteration  23: 171164.635 ops/s
# Warmup Iteration  24: 171008.089 ops/s
# Warmup Iteration  25: 171058.666 ops/s
# Warmup Iteration  26: 171025.949 ops/s
# Warmup Iteration  27: 171200.789 ops/s
# Warmup Iteration  28: 170939.655 ops/s
# Warmup Iteration  29: 170912.004 ops/s
# Warmup Iteration  30: 171058.892 ops/s
Iteration   1: 171300.471 ops/s
Iteration   2: 170618.860 ops/s
Iteration   3: 171060.269 ops/s
Iteration   4: 170911.752 ops/s
Iteration   5: 171030.867 ops/s
Iteration   6: 170975.809 ops/s
Iteration   7: 170798.879 ops/s
Iteration   8: 170498.179 ops/s
Iteration   9: 170640.073 ops/s
Iteration  10: 170973.277 ops/s
Iteration  11: 170967.766 ops/s
Iteration  12: 170913.881 ops/s
Iteration  13: 171083.272 ops/s
Iteration  14: 170881.747 ops/s
Iteration  15: 170908.274 ops/s
Iteration  16: 170895.305 ops/s
Iteration  17: 171157.052 ops/s
Iteration  18: 170952.489 ops/s
Iteration  19: 170612.768 ops/s
Iteration  20: 171018.346 ops/s
Iteration  21: 170788.921 ops/s
Iteration  22: 171343.433 ops/s
Iteration  23: 170725.550 ops/s
Iteration  24: 170880.755 ops/s
Iteration  25: 170468.676 ops/s
Iteration  26: 170461.551 ops/s
Iteration  27: 170846.955 ops/s
Iteration  28: 170396.336 ops/s
Iteration  29: 170819.687 ops/s
Iteration  30: 170706.605 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_938._Benchmark.benchmark_Cluster_938":
  170854.594 ±(99.9%) 156.608 ops/s [Average]
  (min, avg, max) = (170396.336, 170854.594, 171343.433), stdev = 234.404
  CI (99.9%): [170697.985, 171011.202] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_938._Benchmark.benchmark_Cluster_938  thrpt   30  170854.594 ± 156.608  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_939._Benchmark.benchmark_Cluster_939$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_939._Benchmark.benchmark_Cluster_939

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63816.408 ops/s
# Warmup Iteration   2: 106367.510 ops/s
# Warmup Iteration   3: 154293.340 ops/s
# Warmup Iteration   4: 153125.407 ops/s
# Warmup Iteration   5: 154250.789 ops/s
# Warmup Iteration   6: 153856.063 ops/s
# Warmup Iteration   7: 144230.349 ops/s
# Warmup Iteration   8: 133847.263 ops/s
# Warmup Iteration   9: 154053.333 ops/s
# Warmup Iteration  10: 154710.357 ops/s
# Warmup Iteration  11: 154581.280 ops/s
# Warmup Iteration  12: 154296.560 ops/s
# Warmup Iteration  13: 154596.298 ops/s
# Warmup Iteration  14: 154342.455 ops/s
# Warmup Iteration  15: 154441.764 ops/s
# Warmup Iteration  16: 154385.279 ops/s
# Warmup Iteration  17: 154162.062 ops/s
# Warmup Iteration  18: 154498.873 ops/s
# Warmup Iteration  19: 154127.721 ops/s
# Warmup Iteration  20: 154056.776 ops/s
# Warmup Iteration  21: 154201.294 ops/s
# Warmup Iteration  22: 154198.798 ops/s
# Warmup Iteration  23: 154280.674 ops/s
# Warmup Iteration  24: 153979.147 ops/s
# Warmup Iteration  25: 154176.409 ops/s
# Warmup Iteration  26: 154214.582 ops/s
# Warmup Iteration  27: 154158.440 ops/s
# Warmup Iteration  28: 154166.507 ops/s
# Warmup Iteration  29: 154574.735 ops/s
# Warmup Iteration  30: 154439.626 ops/s
Iteration   1: 153994.540 ops/s
Iteration   2: 154440.685 ops/s
Iteration   3: 153951.073 ops/s
Iteration   4: 154286.904 ops/s
Iteration   5: 153959.629 ops/s
Iteration   6: 154396.042 ops/s
Iteration   7: 154637.392 ops/s
Iteration   8: 153762.527 ops/s
Iteration   9: 154210.153 ops/s
Iteration  10: 154227.981 ops/s
Iteration  11: 154356.410 ops/s
Iteration  12: 154128.334 ops/s
Iteration  13: 154503.880 ops/s
Iteration  14: 153824.441 ops/s
Iteration  15: 154213.556 ops/s
Iteration  16: 154422.862 ops/s
Iteration  17: 154240.521 ops/s
Iteration  18: 154553.551 ops/s
Iteration  19: 154134.191 ops/s
Iteration  20: 154391.063 ops/s
Iteration  21: 154559.248 ops/s
Iteration  22: 154638.605 ops/s
Iteration  23: 154269.259 ops/s
Iteration  24: 154220.710 ops/s
Iteration  25: 154479.770 ops/s
Iteration  26: 153918.548 ops/s
Iteration  27: 154545.090 ops/s
Iteration  28: 153931.071 ops/s
Iteration  29: 154329.889 ops/s
Iteration  30: 154777.039 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_939._Benchmark.benchmark_Cluster_939":
  154276.832 ±(99.9%) 174.491 ops/s [Average]
  (min, avg, max) = (153762.527, 154276.832, 154777.039), stdev = 261.169
  CI (99.9%): [154102.342, 154451.323] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_939._Benchmark.benchmark_Cluster_939  thrpt   30  154276.832 ± 174.491  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_94._Benchmark.benchmark_Cluster_94$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_94._Benchmark.benchmark_Cluster_94

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 114551.163 ops/s
# Warmup Iteration   2: 160538.556 ops/s
# Warmup Iteration   3: 227330.518 ops/s
# Warmup Iteration   4: 225580.780 ops/s
# Warmup Iteration   5: 227070.117 ops/s
# Warmup Iteration   6: 227494.335 ops/s
# Warmup Iteration   7: 227488.854 ops/s
# Warmup Iteration   8: 180506.506 ops/s
# Warmup Iteration   9: 227490.634 ops/s
# Warmup Iteration  10: 227221.384 ops/s
# Warmup Iteration  11: 227078.624 ops/s
# Warmup Iteration  12: 227326.134 ops/s
# Warmup Iteration  13: 227525.091 ops/s
# Warmup Iteration  14: 227416.442 ops/s
# Warmup Iteration  15: 227540.291 ops/s
# Warmup Iteration  16: 227623.039 ops/s
# Warmup Iteration  17: 227583.957 ops/s
# Warmup Iteration  18: 227726.855 ops/s
# Warmup Iteration  19: 227317.229 ops/s
# Warmup Iteration  20: 227375.687 ops/s
# Warmup Iteration  21: 227579.121 ops/s
# Warmup Iteration  22: 227710.419 ops/s
# Warmup Iteration  23: 227387.761 ops/s
# Warmup Iteration  24: 227589.776 ops/s
# Warmup Iteration  25: 227577.001 ops/s
# Warmup Iteration  26: 227525.054 ops/s
# Warmup Iteration  27: 227512.646 ops/s
# Warmup Iteration  28: 227584.608 ops/s
# Warmup Iteration  29: 227386.144 ops/s
# Warmup Iteration  30: 227871.398 ops/s
Iteration   1: 227385.937 ops/s
Iteration   2: 227958.923 ops/s
Iteration   3: 227666.843 ops/s
Iteration   4: 227382.205 ops/s
Iteration   5: 227279.738 ops/s
Iteration   6: 227745.350 ops/s
Iteration   7: 227642.299 ops/s
Iteration   8: 227560.237 ops/s
Iteration   9: 227778.160 ops/s
Iteration  10: 227487.563 ops/s
Iteration  11: 227579.627 ops/s
Iteration  12: 227979.819 ops/s
Iteration  13: 226944.679 ops/s
Iteration  14: 227362.699 ops/s
Iteration  15: 227369.893 ops/s
Iteration  16: 227594.992 ops/s
Iteration  17: 227713.481 ops/s
Iteration  18: 227245.308 ops/s
Iteration  19: 227466.599 ops/s
Iteration  20: 227504.293 ops/s
Iteration  21: 227311.094 ops/s
Iteration  22: 227551.084 ops/s
Iteration  23: 227413.381 ops/s
Iteration  24: 227805.821 ops/s
Iteration  25: 227897.235 ops/s
Iteration  26: 227658.664 ops/s
Iteration  27: 227893.030 ops/s
Iteration  28: 227603.438 ops/s
Iteration  29: 228098.472 ops/s
Iteration  30: 228080.591 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_94._Benchmark.benchmark_Cluster_94":
  227598.715 ±(99.9%) 178.377 ops/s [Average]
  (min, avg, max) = (226944.679, 227598.715, 228098.472), stdev = 266.986
  CI (99.9%): [227420.339, 227777.092] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_94._Benchmark.benchmark_Cluster_94  thrpt   30  227598.715 ± 178.377  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_940._Benchmark.benchmark_Cluster_940$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_940._Benchmark.benchmark_Cluster_940

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 126173.679 ops/s
# Warmup Iteration   2: 142332.632 ops/s
# Warmup Iteration   3: 160826.381 ops/s
# Warmup Iteration   4: 196506.053 ops/s
# Warmup Iteration   5: 196652.937 ops/s
# Warmup Iteration   6: 196535.949 ops/s
# Warmup Iteration   7: 195474.877 ops/s
# Warmup Iteration   8: 197073.592 ops/s
# Warmup Iteration   9: 196890.348 ops/s
# Warmup Iteration  10: 196778.075 ops/s
# Warmup Iteration  11: 196745.343 ops/s
# Warmup Iteration  12: 196681.763 ops/s
# Warmup Iteration  13: 196607.648 ops/s
# Warmup Iteration  14: 185363.312 ops/s
# Warmup Iteration  15: 162780.191 ops/s
# Warmup Iteration  16: 197002.971 ops/s
# Warmup Iteration  17: 205648.544 ops/s
# Warmup Iteration  18: 205177.558 ops/s
# Warmup Iteration  19: 205714.119 ops/s
# Warmup Iteration  20: 205744.793 ops/s
# Warmup Iteration  21: 206140.142 ops/s
# Warmup Iteration  22: 205194.618 ops/s
# Warmup Iteration  23: 205817.465 ops/s
# Warmup Iteration  24: 205733.951 ops/s
# Warmup Iteration  25: 205708.954 ops/s
# Warmup Iteration  26: 205036.262 ops/s
# Warmup Iteration  27: 204779.575 ops/s
# Warmup Iteration  28: 205369.814 ops/s
# Warmup Iteration  29: 206121.237 ops/s
# Warmup Iteration  30: 205387.150 ops/s
Iteration   1: 205235.603 ops/s
Iteration   2: 204957.136 ops/s
Iteration   3: 205730.705 ops/s
Iteration   4: 206124.641 ops/s
Iteration   5: 204742.111 ops/s
Iteration   6: 206146.358 ops/s
Iteration   7: 206447.728 ops/s
Iteration   8: 205642.947 ops/s
Iteration   9: 206198.451 ops/s
Iteration  10: 206230.130 ops/s
Iteration  11: 206047.385 ops/s
Iteration  12: 206007.782 ops/s
Iteration  13: 204894.016 ops/s
Iteration  14: 205612.768 ops/s
Iteration  15: 205421.990 ops/s
Iteration  16: 205541.274 ops/s
Iteration  17: 206087.953 ops/s
Iteration  18: 205994.977 ops/s
Iteration  19: 205323.200 ops/s
Iteration  20: 205826.945 ops/s
Iteration  21: 205494.758 ops/s
Iteration  22: 205572.016 ops/s
Iteration  23: 205313.620 ops/s
Iteration  24: 205072.061 ops/s
Iteration  25: 205306.061 ops/s
Iteration  26: 205592.202 ops/s
Iteration  27: 205575.269 ops/s
Iteration  28: 206260.442 ops/s
Iteration  29: 206381.288 ops/s
Iteration  30: 205830.026 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_940._Benchmark.benchmark_Cluster_940":
  205687.061 ±(99.9%) 306.488 ops/s [Average]
  (min, avg, max) = (204742.111, 205687.061, 206447.728), stdev = 458.736
  CI (99.9%): [205380.574, 205993.549] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_940._Benchmark.benchmark_Cluster_940  thrpt   30  205687.061 ± 306.488  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_941._Benchmark.benchmark_Cluster_941$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_941._Benchmark.benchmark_Cluster_941

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75328.760 ops/s
# Warmup Iteration   2: 95400.445 ops/s
# Warmup Iteration   3: 147477.304 ops/s
# Warmup Iteration   4: 148155.086 ops/s
# Warmup Iteration   5: 146773.519 ops/s
# Warmup Iteration   6: 147350.905 ops/s
# Warmup Iteration   7: 147652.971 ops/s
# Warmup Iteration   8: 147566.160 ops/s
# Warmup Iteration   9: 122961.578 ops/s
# Warmup Iteration  10: 141011.315 ops/s
# Warmup Iteration  11: 147697.882 ops/s
# Warmup Iteration  12: 148564.855 ops/s
# Warmup Iteration  13: 148257.344 ops/s
# Warmup Iteration  14: 148021.258 ops/s
# Warmup Iteration  15: 148205.611 ops/s
# Warmup Iteration  16: 148046.623 ops/s
# Warmup Iteration  17: 152827.358 ops/s
# Warmup Iteration  18: 152828.929 ops/s
# Warmup Iteration  19: 151957.842 ops/s
# Warmup Iteration  20: 152092.180 ops/s
# Warmup Iteration  21: 152414.413 ops/s
# Warmup Iteration  22: 152187.759 ops/s
# Warmup Iteration  23: 152381.740 ops/s
# Warmup Iteration  24: 152203.840 ops/s
# Warmup Iteration  25: 152187.342 ops/s
# Warmup Iteration  26: 152097.080 ops/s
# Warmup Iteration  27: 152243.398 ops/s
# Warmup Iteration  28: 152580.631 ops/s
# Warmup Iteration  29: 152686.087 ops/s
# Warmup Iteration  30: 152299.221 ops/s
Iteration   1: 152264.670 ops/s
Iteration   2: 151823.394 ops/s
Iteration   3: 151651.712 ops/s
Iteration   4: 152370.013 ops/s
Iteration   5: 152191.774 ops/s
Iteration   6: 152243.083 ops/s
Iteration   7: 152243.968 ops/s
Iteration   8: 152515.231 ops/s
Iteration   9: 152466.259 ops/s
Iteration  10: 152306.880 ops/s
Iteration  11: 152260.073 ops/s
Iteration  12: 152408.581 ops/s
Iteration  13: 152240.222 ops/s
Iteration  14: 152170.751 ops/s
Iteration  15: 152351.470 ops/s
Iteration  16: 152866.442 ops/s
Iteration  17: 152441.874 ops/s
Iteration  18: 152351.319 ops/s
Iteration  19: 152110.385 ops/s
Iteration  20: 151636.195 ops/s
Iteration  21: 151970.559 ops/s
Iteration  22: 152342.821 ops/s
Iteration  23: 152095.856 ops/s
Iteration  24: 152446.972 ops/s
Iteration  25: 152357.359 ops/s
Iteration  26: 153045.383 ops/s
Iteration  27: 152312.580 ops/s
Iteration  28: 151690.411 ops/s
Iteration  29: 152070.816 ops/s
Iteration  30: 152366.138 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_941._Benchmark.benchmark_Cluster_941":
  152253.773 ±(99.9%) 203.833 ops/s [Average]
  (min, avg, max) = (151636.195, 152253.773, 153045.383), stdev = 305.088
  CI (99.9%): [152049.940, 152457.606] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_941._Benchmark.benchmark_Cluster_941  thrpt   30  152253.773 ± 203.833  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_942._Benchmark.benchmark_Cluster_942$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_942._Benchmark.benchmark_Cluster_942

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64173.201 ops/s
# Warmup Iteration   2: 110060.242 ops/s
# Warmup Iteration   3: 153911.999 ops/s
# Warmup Iteration   4: 152217.725 ops/s
# Warmup Iteration   5: 153347.179 ops/s
# Warmup Iteration   6: 153381.737 ops/s
# Warmup Iteration   7: 121988.350 ops/s
# Warmup Iteration   8: 153141.209 ops/s
# Warmup Iteration   9: 153089.506 ops/s
# Warmup Iteration  10: 153380.680 ops/s
# Warmup Iteration  11: 153342.842 ops/s
# Warmup Iteration  12: 152965.831 ops/s
# Warmup Iteration  13: 153384.068 ops/s
# Warmup Iteration  14: 152839.707 ops/s
# Warmup Iteration  15: 152284.416 ops/s
# Warmup Iteration  16: 152564.801 ops/s
# Warmup Iteration  17: 153195.760 ops/s
# Warmup Iteration  18: 152821.523 ops/s
# Warmup Iteration  19: 153600.910 ops/s
# Warmup Iteration  20: 153421.317 ops/s
# Warmup Iteration  21: 153527.693 ops/s
# Warmup Iteration  22: 153758.989 ops/s
# Warmup Iteration  23: 153749.827 ops/s
# Warmup Iteration  24: 153055.633 ops/s
# Warmup Iteration  25: 153139.766 ops/s
# Warmup Iteration  26: 153879.923 ops/s
# Warmup Iteration  27: 153731.829 ops/s
# Warmup Iteration  28: 153761.428 ops/s
# Warmup Iteration  29: 153895.362 ops/s
# Warmup Iteration  30: 153582.907 ops/s
Iteration   1: 154017.469 ops/s
Iteration   2: 153715.649 ops/s
Iteration   3: 154071.519 ops/s
Iteration   4: 153893.212 ops/s
Iteration   5: 153828.079 ops/s
Iteration   6: 153954.250 ops/s
Iteration   7: 153914.826 ops/s
Iteration   8: 153970.880 ops/s
Iteration   9: 153837.063 ops/s
Iteration  10: 153623.166 ops/s
Iteration  11: 153469.522 ops/s
Iteration  12: 153728.675 ops/s
Iteration  13: 153855.076 ops/s
Iteration  14: 154000.543 ops/s
Iteration  15: 153710.334 ops/s
Iteration  16: 153713.283 ops/s
Iteration  17: 153619.074 ops/s
Iteration  18: 153789.853 ops/s
Iteration  19: 153828.464 ops/s
Iteration  20: 154080.966 ops/s
Iteration  21: 153889.775 ops/s
Iteration  22: 153934.577 ops/s
Iteration  23: 154009.804 ops/s
Iteration  24: 154293.284 ops/s
Iteration  25: 153874.805 ops/s
Iteration  26: 154170.382 ops/s
Iteration  27: 153556.028 ops/s
Iteration  28: 153577.747 ops/s
Iteration  29: 153705.693 ops/s
Iteration  30: 153855.435 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_942._Benchmark.benchmark_Cluster_942":
  153849.648 ±(99.9%) 125.629 ops/s [Average]
  (min, avg, max) = (153469.522, 153849.648, 154293.284), stdev = 188.036
  CI (99.9%): [153724.019, 153975.277] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_942._Benchmark.benchmark_Cluster_942  thrpt   30  153849.648 ± 125.629  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_943._Benchmark.benchmark_Cluster_943$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_943._Benchmark.benchmark_Cluster_943

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57987.060 ops/s
# Warmup Iteration   2: 106489.125 ops/s
# Warmup Iteration   3: 161558.076 ops/s
# Warmup Iteration   4: 160418.323 ops/s
# Warmup Iteration   5: 161962.941 ops/s
# Warmup Iteration   6: 161791.389 ops/s
# Warmup Iteration   7: 126956.710 ops/s
# Warmup Iteration   8: 161502.869 ops/s
# Warmup Iteration   9: 161695.046 ops/s
# Warmup Iteration  10: 161800.426 ops/s
# Warmup Iteration  11: 161885.655 ops/s
# Warmup Iteration  12: 161573.725 ops/s
# Warmup Iteration  13: 161801.640 ops/s
# Warmup Iteration  14: 161634.229 ops/s
# Warmup Iteration  15: 161310.837 ops/s
# Warmup Iteration  16: 161896.117 ops/s
# Warmup Iteration  17: 164184.002 ops/s
# Warmup Iteration  18: 164734.935 ops/s
# Warmup Iteration  19: 164124.795 ops/s
# Warmup Iteration  20: 163744.676 ops/s
# Warmup Iteration  21: 163915.377 ops/s
# Warmup Iteration  22: 165066.930 ops/s
# Warmup Iteration  23: 163939.981 ops/s
# Warmup Iteration  24: 164470.672 ops/s
# Warmup Iteration  25: 164387.546 ops/s
# Warmup Iteration  26: 164633.922 ops/s
# Warmup Iteration  27: 164212.436 ops/s
# Warmup Iteration  28: 164835.243 ops/s
# Warmup Iteration  29: 164470.041 ops/s
# Warmup Iteration  30: 164226.542 ops/s
Iteration   1: 164548.404 ops/s
Iteration   2: 164106.858 ops/s
Iteration   3: 164237.625 ops/s
Iteration   4: 164554.585 ops/s
Iteration   5: 164244.165 ops/s
Iteration   6: 164612.861 ops/s
Iteration   7: 164377.172 ops/s
Iteration   8: 164443.783 ops/s
Iteration   9: 164269.930 ops/s
Iteration  10: 164342.083 ops/s
Iteration  11: 164409.760 ops/s
Iteration  12: 164519.976 ops/s
Iteration  13: 164244.518 ops/s
Iteration  14: 164315.557 ops/s
Iteration  15: 164892.029 ops/s
Iteration  16: 164147.113 ops/s
Iteration  17: 164122.654 ops/s
Iteration  18: 164479.131 ops/s
Iteration  19: 164078.189 ops/s
Iteration  20: 164377.888 ops/s
Iteration  21: 164247.501 ops/s
Iteration  22: 164659.238 ops/s
Iteration  23: 164481.976 ops/s
Iteration  24: 164887.821 ops/s
Iteration  25: 164493.832 ops/s
Iteration  26: 164875.015 ops/s
Iteration  27: 164462.647 ops/s
Iteration  28: 164616.217 ops/s
Iteration  29: 163738.760 ops/s
Iteration  30: 164199.847 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_943._Benchmark.benchmark_Cluster_943":
  164399.571 ±(99.9%) 170.434 ops/s [Average]
  (min, avg, max) = (163738.760, 164399.571, 164892.029), stdev = 255.097
  CI (99.9%): [164229.138, 164570.005] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_943._Benchmark.benchmark_Cluster_943  thrpt   30  164399.571 ± 170.434  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_944._Benchmark.benchmark_Cluster_944$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_944._Benchmark.benchmark_Cluster_944

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63597.424 ops/s
# Warmup Iteration   2: 117401.337 ops/s
# Warmup Iteration   3: 176262.342 ops/s
# Warmup Iteration   4: 173990.647 ops/s
# Warmup Iteration   5: 176427.856 ops/s
# Warmup Iteration   6: 174575.635 ops/s
# Warmup Iteration   7: 137031.422 ops/s
# Warmup Iteration   8: 174821.547 ops/s
# Warmup Iteration   9: 174953.555 ops/s
# Warmup Iteration  10: 175112.909 ops/s
# Warmup Iteration  11: 175733.320 ops/s
# Warmup Iteration  12: 175279.747 ops/s
# Warmup Iteration  13: 174424.933 ops/s
# Warmup Iteration  14: 174861.562 ops/s
# Warmup Iteration  15: 174072.013 ops/s
# Warmup Iteration  16: 174750.790 ops/s
# Warmup Iteration  17: 177224.668 ops/s
# Warmup Iteration  18: 177430.511 ops/s
# Warmup Iteration  19: 177065.387 ops/s
# Warmup Iteration  20: 177135.118 ops/s
# Warmup Iteration  21: 176230.253 ops/s
# Warmup Iteration  22: 176580.465 ops/s
# Warmup Iteration  23: 176302.228 ops/s
# Warmup Iteration  24: 176795.041 ops/s
# Warmup Iteration  25: 176611.814 ops/s
# Warmup Iteration  26: 176680.791 ops/s
# Warmup Iteration  27: 177290.620 ops/s
# Warmup Iteration  28: 176539.716 ops/s
# Warmup Iteration  29: 176985.134 ops/s
# Warmup Iteration  30: 177173.197 ops/s
Iteration   1: 177262.055 ops/s
Iteration   2: 177161.234 ops/s
Iteration   3: 177037.822 ops/s
Iteration   4: 176045.727 ops/s
Iteration   5: 177709.291 ops/s
Iteration   6: 177366.897 ops/s
Iteration   7: 178053.364 ops/s
Iteration   8: 176348.212 ops/s
Iteration   9: 178187.795 ops/s
Iteration  10: 177742.676 ops/s
Iteration  11: 177700.630 ops/s
Iteration  12: 175985.792 ops/s
Iteration  13: 175745.127 ops/s
Iteration  14: 177654.634 ops/s
Iteration  15: 179782.755 ops/s
Iteration  16: 177748.124 ops/s
Iteration  17: 177175.704 ops/s
Iteration  18: 176785.021 ops/s
Iteration  19: 177091.933 ops/s
Iteration  20: 177624.485 ops/s
Iteration  21: 177653.229 ops/s
Iteration  22: 178093.973 ops/s
Iteration  23: 176198.650 ops/s
Iteration  24: 176323.553 ops/s
Iteration  25: 177508.723 ops/s
Iteration  26: 176615.351 ops/s
Iteration  27: 177398.939 ops/s
Iteration  28: 177097.589 ops/s
Iteration  29: 176228.037 ops/s
Iteration  30: 175851.019 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_944._Benchmark.benchmark_Cluster_944":
  177172.611 ±(99.9%) 578.787 ops/s [Average]
  (min, avg, max) = (175745.127, 177172.611, 179782.755), stdev = 866.301
  CI (99.9%): [176593.824, 177751.398] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_944._Benchmark.benchmark_Cluster_944  thrpt   30  177172.611 ± 578.787  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_945._Benchmark.benchmark_Cluster_945$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_945._Benchmark.benchmark_Cluster_945

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61942.139 ops/s
# Warmup Iteration   2: 100243.961 ops/s
# Warmup Iteration   3: 151279.597 ops/s
# Warmup Iteration   4: 150220.802 ops/s
# Warmup Iteration   5: 150835.992 ops/s
# Warmup Iteration   6: 149999.829 ops/s
# Warmup Iteration   7: 126232.027 ops/s
# Warmup Iteration   8: 142277.931 ops/s
# Warmup Iteration   9: 151372.173 ops/s
# Warmup Iteration  10: 151294.874 ops/s
# Warmup Iteration  11: 151229.632 ops/s
# Warmup Iteration  12: 151250.853 ops/s
# Warmup Iteration  13: 151005.254 ops/s
# Warmup Iteration  14: 151100.043 ops/s
# Warmup Iteration  15: 151083.925 ops/s
# Warmup Iteration  16: 151320.624 ops/s
# Warmup Iteration  17: 153415.307 ops/s
# Warmup Iteration  18: 153696.952 ops/s
# Warmup Iteration  19: 153527.341 ops/s
# Warmup Iteration  20: 153480.618 ops/s
# Warmup Iteration  21: 153553.474 ops/s
# Warmup Iteration  22: 153380.125 ops/s
# Warmup Iteration  23: 153598.047 ops/s
# Warmup Iteration  24: 153778.009 ops/s
# Warmup Iteration  25: 153945.240 ops/s
# Warmup Iteration  26: 153581.191 ops/s
# Warmup Iteration  27: 153822.322 ops/s
# Warmup Iteration  28: 153811.615 ops/s
# Warmup Iteration  29: 153566.911 ops/s
# Warmup Iteration  30: 153820.516 ops/s
Iteration   1: 153478.550 ops/s
Iteration   2: 153491.246 ops/s
Iteration   3: 153565.861 ops/s
Iteration   4: 153539.424 ops/s
Iteration   5: 153336.670 ops/s
Iteration   6: 153580.077 ops/s
Iteration   7: 153649.249 ops/s
Iteration   8: 153763.699 ops/s
Iteration   9: 153684.962 ops/s
Iteration  10: 153674.318 ops/s
Iteration  11: 153531.229 ops/s
Iteration  12: 153614.132 ops/s
Iteration  13: 153864.873 ops/s
Iteration  14: 153548.538 ops/s
Iteration  15: 153786.912 ops/s
Iteration  16: 153219.117 ops/s
Iteration  17: 153303.683 ops/s
Iteration  18: 153961.346 ops/s
Iteration  19: 153799.378 ops/s
Iteration  20: 153583.351 ops/s
Iteration  21: 153809.529 ops/s
Iteration  22: 153568.099 ops/s
Iteration  23: 153539.053 ops/s
Iteration  24: 153321.719 ops/s
Iteration  25: 153561.128 ops/s
Iteration  26: 153748.891 ops/s
Iteration  27: 153416.742 ops/s
Iteration  28: 153682.395 ops/s
Iteration  29: 153762.280 ops/s
Iteration  30: 153984.506 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_945._Benchmark.benchmark_Cluster_945":
  153612.365 ±(99.9%) 125.237 ops/s [Average]
  (min, avg, max) = (153219.117, 153612.365, 153984.506), stdev = 187.450
  CI (99.9%): [153487.128, 153737.603] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_945._Benchmark.benchmark_Cluster_945  thrpt   30  153612.365 ± 125.237  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_946._Benchmark.benchmark_Cluster_946$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_946._Benchmark.benchmark_Cluster_946

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68688.093 ops/s
# Warmup Iteration   2: 111082.883 ops/s
# Warmup Iteration   3: 162231.843 ops/s
# Warmup Iteration   4: 161670.396 ops/s
# Warmup Iteration   5: 163204.821 ops/s
# Warmup Iteration   6: 162794.180 ops/s
# Warmup Iteration   7: 156487.017 ops/s
# Warmup Iteration   8: 134824.627 ops/s
# Warmup Iteration   9: 162975.594 ops/s
# Warmup Iteration  10: 162390.455 ops/s
# Warmup Iteration  11: 162714.163 ops/s
# Warmup Iteration  12: 162798.834 ops/s
# Warmup Iteration  13: 163160.108 ops/s
# Warmup Iteration  14: 163097.850 ops/s
# Warmup Iteration  15: 162891.470 ops/s
# Warmup Iteration  16: 162951.814 ops/s
# Warmup Iteration  17: 162223.377 ops/s
# Warmup Iteration  18: 162798.549 ops/s
# Warmup Iteration  19: 162848.560 ops/s
# Warmup Iteration  20: 162079.093 ops/s
# Warmup Iteration  21: 162267.157 ops/s
# Warmup Iteration  22: 162349.874 ops/s
# Warmup Iteration  23: 162289.654 ops/s
# Warmup Iteration  24: 162925.154 ops/s
# Warmup Iteration  25: 163192.107 ops/s
# Warmup Iteration  26: 162127.590 ops/s
# Warmup Iteration  27: 162451.163 ops/s
# Warmup Iteration  28: 162995.981 ops/s
# Warmup Iteration  29: 162612.169 ops/s
# Warmup Iteration  30: 163156.916 ops/s
Iteration   1: 162632.241 ops/s
Iteration   2: 162678.227 ops/s
Iteration   3: 162341.871 ops/s
Iteration   4: 162848.277 ops/s
Iteration   5: 163477.871 ops/s
Iteration   6: 163218.553 ops/s
Iteration   7: 163487.544 ops/s
Iteration   8: 162869.212 ops/s
Iteration   9: 162692.897 ops/s
Iteration  10: 162834.471 ops/s
Iteration  11: 162809.506 ops/s
Iteration  12: 162444.273 ops/s
Iteration  13: 162714.387 ops/s
Iteration  14: 162784.765 ops/s
Iteration  15: 162978.206 ops/s
Iteration  16: 162766.653 ops/s
Iteration  17: 163456.386 ops/s
Iteration  18: 162358.174 ops/s
Iteration  19: 163304.563 ops/s
Iteration  20: 162764.373 ops/s
Iteration  21: 161945.184 ops/s
Iteration  22: 161743.508 ops/s
Iteration  23: 162395.143 ops/s
Iteration  24: 162759.850 ops/s
Iteration  25: 162625.147 ops/s
Iteration  26: 163094.127 ops/s
Iteration  27: 162650.314 ops/s
Iteration  28: 162698.082 ops/s
Iteration  29: 162860.442 ops/s
Iteration  30: 162989.841 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_946._Benchmark.benchmark_Cluster_946":
  162774.136 ±(99.9%) 266.406 ops/s [Average]
  (min, avg, max) = (161743.508, 162774.136, 163487.544), stdev = 398.745
  CI (99.9%): [162507.730, 163040.543] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_946._Benchmark.benchmark_Cluster_946  thrpt   30  162774.136 ± 266.406  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_947._Benchmark.benchmark_Cluster_947$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_947._Benchmark.benchmark_Cluster_947

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47068.555 ops/s
# Warmup Iteration   2: 114423.113 ops/s
# Warmup Iteration   3: 173061.767 ops/s
# Warmup Iteration   4: 173817.503 ops/s
# Warmup Iteration   5: 174201.625 ops/s
# Warmup Iteration   6: 135515.777 ops/s
# Warmup Iteration   7: 173845.380 ops/s
# Warmup Iteration   8: 174222.719 ops/s
# Warmup Iteration   9: 174464.289 ops/s
# Warmup Iteration  10: 174344.922 ops/s
# Warmup Iteration  11: 173954.590 ops/s
# Warmup Iteration  12: 174331.071 ops/s
# Warmup Iteration  13: 173589.820 ops/s
# Warmup Iteration  14: 174080.873 ops/s
# Warmup Iteration  15: 174005.494 ops/s
# Warmup Iteration  16: 173884.651 ops/s
# Warmup Iteration  17: 174428.927 ops/s
# Warmup Iteration  18: 174272.195 ops/s
# Warmup Iteration  19: 174391.616 ops/s
# Warmup Iteration  20: 173170.436 ops/s
# Warmup Iteration  21: 173884.040 ops/s
# Warmup Iteration  22: 174645.714 ops/s
# Warmup Iteration  23: 174403.731 ops/s
# Warmup Iteration  24: 173915.629 ops/s
# Warmup Iteration  25: 174801.584 ops/s
# Warmup Iteration  26: 174203.799 ops/s
# Warmup Iteration  27: 174287.456 ops/s
# Warmup Iteration  28: 174337.385 ops/s
# Warmup Iteration  29: 174567.153 ops/s
# Warmup Iteration  30: 174712.425 ops/s
Iteration   1: 174498.541 ops/s
Iteration   2: 174636.814 ops/s
Iteration   3: 174082.121 ops/s
Iteration   4: 174534.965 ops/s
Iteration   5: 174373.930 ops/s
Iteration   6: 174267.593 ops/s
Iteration   7: 173859.325 ops/s
Iteration   8: 174106.577 ops/s
Iteration   9: 174615.908 ops/s
Iteration  10: 173843.154 ops/s
Iteration  11: 174049.860 ops/s
Iteration  12: 174980.589 ops/s
Iteration  13: 174807.044 ops/s
Iteration  14: 175176.664 ops/s
Iteration  15: 175336.137 ops/s
Iteration  16: 174393.506 ops/s
Iteration  17: 174270.400 ops/s
Iteration  18: 174842.387 ops/s
Iteration  19: 174894.278 ops/s
Iteration  20: 174682.849 ops/s
Iteration  21: 174666.246 ops/s
Iteration  22: 174458.842 ops/s
Iteration  23: 174240.632 ops/s
Iteration  24: 174175.942 ops/s
Iteration  25: 174187.549 ops/s
Iteration  26: 174598.873 ops/s
Iteration  27: 174383.185 ops/s
Iteration  28: 174313.706 ops/s
Iteration  29: 174644.476 ops/s
Iteration  30: 174691.752 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_947._Benchmark.benchmark_Cluster_947":
  174487.128 ±(99.9%) 239.921 ops/s [Average]
  (min, avg, max) = (173843.154, 174487.128, 175336.137), stdev = 359.102
  CI (99.9%): [174247.207, 174727.049] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_947._Benchmark.benchmark_Cluster_947  thrpt   30  174487.128 ± 239.921  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_948._Benchmark.benchmark_Cluster_948$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_948._Benchmark.benchmark_Cluster_948

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46056.800 ops/s
# Warmup Iteration   2: 106517.362 ops/s
# Warmup Iteration   3: 169579.238 ops/s
# Warmup Iteration   4: 168434.137 ops/s
# Warmup Iteration   5: 169976.660 ops/s
# Warmup Iteration   6: 140947.054 ops/s
# Warmup Iteration   7: 163374.991 ops/s
# Warmup Iteration   8: 170016.395 ops/s
# Warmup Iteration   9: 169821.194 ops/s
# Warmup Iteration  10: 169741.434 ops/s
# Warmup Iteration  11: 169738.131 ops/s
# Warmup Iteration  12: 169659.318 ops/s
# Warmup Iteration  13: 169681.282 ops/s
# Warmup Iteration  14: 169521.290 ops/s
# Warmup Iteration  15: 169684.005 ops/s
# Warmup Iteration  16: 169755.231 ops/s
# Warmup Iteration  17: 169319.103 ops/s
# Warmup Iteration  18: 169519.070 ops/s
# Warmup Iteration  19: 169170.190 ops/s
# Warmup Iteration  20: 169049.041 ops/s
# Warmup Iteration  21: 169295.724 ops/s
# Warmup Iteration  22: 169348.992 ops/s
# Warmup Iteration  23: 169483.018 ops/s
# Warmup Iteration  24: 169433.088 ops/s
# Warmup Iteration  25: 169323.476 ops/s
# Warmup Iteration  26: 169411.985 ops/s
# Warmup Iteration  27: 169392.665 ops/s
# Warmup Iteration  28: 169168.125 ops/s
# Warmup Iteration  29: 169152.461 ops/s
# Warmup Iteration  30: 169202.906 ops/s
Iteration   1: 169248.967 ops/s
Iteration   2: 169066.640 ops/s
Iteration   3: 169091.092 ops/s
Iteration   4: 169309.225 ops/s
Iteration   5: 169422.181 ops/s
Iteration   6: 169517.204 ops/s
Iteration   7: 169353.675 ops/s
Iteration   8: 169619.767 ops/s
Iteration   9: 168926.408 ops/s
Iteration  10: 169765.048 ops/s
Iteration  11: 169532.058 ops/s
Iteration  12: 169841.560 ops/s
Iteration  13: 169329.002 ops/s
Iteration  14: 169556.385 ops/s
Iteration  15: 169843.736 ops/s
Iteration  16: 169602.143 ops/s
Iteration  17: 169599.811 ops/s
Iteration  18: 169194.433 ops/s
Iteration  19: 169497.778 ops/s
Iteration  20: 169361.739 ops/s
Iteration  21: 169175.162 ops/s
Iteration  22: 169727.500 ops/s
Iteration  23: 169177.590 ops/s
Iteration  24: 169474.405 ops/s
Iteration  25: 169364.736 ops/s
Iteration  26: 169485.028 ops/s
Iteration  27: 169286.574 ops/s
Iteration  28: 169266.425 ops/s
Iteration  29: 169537.037 ops/s
Iteration  30: 168943.008 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_948._Benchmark.benchmark_Cluster_948":
  169403.877 ±(99.9%) 162.325 ops/s [Average]
  (min, avg, max) = (168926.408, 169403.877, 169843.736), stdev = 242.961
  CI (99.9%): [169241.552, 169566.203] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_948._Benchmark.benchmark_Cluster_948  thrpt   30  169403.877 ± 162.325  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_949._Benchmark.benchmark_Cluster_949$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_949._Benchmark.benchmark_Cluster_949

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60564.212 ops/s
# Warmup Iteration   2: 129897.082 ops/s
# Warmup Iteration   3: 182432.499 ops/s
# Warmup Iteration   4: 183309.487 ops/s
# Warmup Iteration   5: 184044.547 ops/s
# Warmup Iteration   6: 146631.390 ops/s
# Warmup Iteration   7: 183424.415 ops/s
# Warmup Iteration   8: 183489.633 ops/s
# Warmup Iteration   9: 183255.057 ops/s
# Warmup Iteration  10: 183392.042 ops/s
# Warmup Iteration  11: 183681.407 ops/s
# Warmup Iteration  12: 183328.563 ops/s
# Warmup Iteration  13: 183412.146 ops/s
# Warmup Iteration  14: 183608.920 ops/s
# Warmup Iteration  15: 183381.631 ops/s
# Warmup Iteration  16: 183701.880 ops/s
# Warmup Iteration  17: 184458.911 ops/s
# Warmup Iteration  18: 184655.357 ops/s
# Warmup Iteration  19: 184720.203 ops/s
# Warmup Iteration  20: 184328.176 ops/s
# Warmup Iteration  21: 184502.466 ops/s
# Warmup Iteration  22: 184614.318 ops/s
# Warmup Iteration  23: 184307.138 ops/s
# Warmup Iteration  24: 184634.546 ops/s
# Warmup Iteration  25: 184712.513 ops/s
# Warmup Iteration  26: 184435.878 ops/s
# Warmup Iteration  27: 184344.328 ops/s
# Warmup Iteration  28: 184531.507 ops/s
# Warmup Iteration  29: 184421.753 ops/s
# Warmup Iteration  30: 184157.492 ops/s
Iteration   1: 184442.988 ops/s
Iteration   2: 184208.605 ops/s
Iteration   3: 184668.585 ops/s
Iteration   4: 184442.464 ops/s
Iteration   5: 184326.377 ops/s
Iteration   6: 184003.211 ops/s
Iteration   7: 183639.241 ops/s
Iteration   8: 183849.013 ops/s
Iteration   9: 183596.717 ops/s
Iteration  10: 184097.155 ops/s
Iteration  11: 184075.776 ops/s
Iteration  12: 184125.686 ops/s
Iteration  13: 184041.079 ops/s
Iteration  14: 184489.740 ops/s
Iteration  15: 184478.819 ops/s
Iteration  16: 183995.217 ops/s
Iteration  17: 184337.571 ops/s
Iteration  18: 184222.700 ops/s
Iteration  19: 184236.500 ops/s
Iteration  20: 184441.717 ops/s
Iteration  21: 184088.416 ops/s
Iteration  22: 184279.804 ops/s
Iteration  23: 183518.410 ops/s
Iteration  24: 184052.953 ops/s
Iteration  25: 184337.876 ops/s
Iteration  26: 183814.052 ops/s
Iteration  27: 184457.850 ops/s
Iteration  28: 184182.309 ops/s
Iteration  29: 183918.973 ops/s
Iteration  30: 184018.670 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_949._Benchmark.benchmark_Cluster_949":
  184146.282 ±(99.9%) 188.091 ops/s [Average]
  (min, avg, max) = (183518.410, 184146.282, 184668.585), stdev = 281.525
  CI (99.9%): [183958.192, 184334.373] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_949._Benchmark.benchmark_Cluster_949  thrpt   30  184146.282 ± 188.091  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_95._Benchmark.benchmark_Cluster_95$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_95._Benchmark.benchmark_Cluster_95

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74352.612 ops/s
# Warmup Iteration   2: 130781.568 ops/s
# Warmup Iteration   3: 176616.547 ops/s
# Warmup Iteration   4: 177532.223 ops/s
# Warmup Iteration   5: 178383.552 ops/s
# Warmup Iteration   6: 163991.691 ops/s
# Warmup Iteration   7: 153329.200 ops/s
# Warmup Iteration   8: 178115.952 ops/s
# Warmup Iteration   9: 178413.395 ops/s
# Warmup Iteration  10: 178308.782 ops/s
# Warmup Iteration  11: 177499.862 ops/s
# Warmup Iteration  12: 178138.283 ops/s
# Warmup Iteration  13: 178300.171 ops/s
# Warmup Iteration  14: 178562.286 ops/s
# Warmup Iteration  15: 178216.242 ops/s
# Warmup Iteration  16: 178272.910 ops/s
# Warmup Iteration  17: 181714.034 ops/s
# Warmup Iteration  18: 180888.649 ops/s
# Warmup Iteration  19: 180661.905 ops/s
# Warmup Iteration  20: 181182.967 ops/s
# Warmup Iteration  21: 181364.698 ops/s
# Warmup Iteration  22: 180921.275 ops/s
# Warmup Iteration  23: 181170.459 ops/s
# Warmup Iteration  24: 181458.517 ops/s
# Warmup Iteration  25: 180853.136 ops/s
# Warmup Iteration  26: 180841.177 ops/s
# Warmup Iteration  27: 181553.463 ops/s
# Warmup Iteration  28: 181338.228 ops/s
# Warmup Iteration  29: 180624.960 ops/s
# Warmup Iteration  30: 180889.329 ops/s
Iteration   1: 180599.551 ops/s
Iteration   2: 180982.000 ops/s
Iteration   3: 181470.092 ops/s
Iteration   4: 181346.200 ops/s
Iteration   5: 180916.875 ops/s
Iteration   6: 180738.432 ops/s
Iteration   7: 181275.350 ops/s
Iteration   8: 181180.735 ops/s
Iteration   9: 181515.051 ops/s
Iteration  10: 181202.968 ops/s
Iteration  11: 181345.254 ops/s
Iteration  12: 181177.216 ops/s
Iteration  13: 180286.064 ops/s
Iteration  14: 180842.331 ops/s
Iteration  15: 180238.373 ops/s
Iteration  16: 180445.094 ops/s
Iteration  17: 181502.814 ops/s
Iteration  18: 180955.250 ops/s
Iteration  19: 180933.926 ops/s
Iteration  20: 180734.327 ops/s
Iteration  21: 181413.297 ops/s
Iteration  22: 181473.668 ops/s
Iteration  23: 180953.282 ops/s
Iteration  24: 181277.995 ops/s
Iteration  25: 180920.261 ops/s
Iteration  26: 180813.989 ops/s
Iteration  27: 181047.301 ops/s
Iteration  28: 180642.466 ops/s
Iteration  29: 180431.688 ops/s
Iteration  30: 181211.500 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_95._Benchmark.benchmark_Cluster_95":
  180995.778 ±(99.9%) 245.248 ops/s [Average]
  (min, avg, max) = (180238.373, 180995.778, 181515.051), stdev = 367.076
  CI (99.9%): [180750.530, 181241.026] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_95._Benchmark.benchmark_Cluster_95  thrpt   30  180995.778 ± 245.248  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_950._Benchmark.benchmark_Cluster_950$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_950._Benchmark.benchmark_Cluster_950

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94358.965 ops/s
# Warmup Iteration   2: 146973.394 ops/s
# Warmup Iteration   3: 224419.188 ops/s
# Warmup Iteration   4: 222769.159 ops/s
# Warmup Iteration   5: 224927.282 ops/s
# Warmup Iteration   6: 224223.131 ops/s
# Warmup Iteration   7: 224067.997 ops/s
# Warmup Iteration   8: 178665.298 ops/s
# Warmup Iteration   9: 224348.805 ops/s
# Warmup Iteration  10: 224161.539 ops/s
# Warmup Iteration  11: 224727.923 ops/s
# Warmup Iteration  12: 223867.114 ops/s
# Warmup Iteration  13: 224373.562 ops/s
# Warmup Iteration  14: 224925.194 ops/s
# Warmup Iteration  15: 224430.875 ops/s
# Warmup Iteration  16: 224441.812 ops/s
# Warmup Iteration  17: 224153.119 ops/s
# Warmup Iteration  18: 223766.277 ops/s
# Warmup Iteration  19: 223794.155 ops/s
# Warmup Iteration  20: 224542.608 ops/s
# Warmup Iteration  21: 224725.403 ops/s
# Warmup Iteration  22: 223768.809 ops/s
# Warmup Iteration  23: 224410.940 ops/s
# Warmup Iteration  24: 224252.925 ops/s
# Warmup Iteration  25: 224247.387 ops/s
# Warmup Iteration  26: 223706.490 ops/s
# Warmup Iteration  27: 223777.077 ops/s
# Warmup Iteration  28: 223746.784 ops/s
# Warmup Iteration  29: 223716.063 ops/s
# Warmup Iteration  30: 224547.909 ops/s
Iteration   1: 223923.978 ops/s
Iteration   2: 224334.285 ops/s
Iteration   3: 223890.207 ops/s
Iteration   4: 223753.357 ops/s
Iteration   5: 223720.990 ops/s
Iteration   6: 224924.041 ops/s
Iteration   7: 224202.231 ops/s
Iteration   8: 224012.503 ops/s
Iteration   9: 224529.088 ops/s
Iteration  10: 223826.039 ops/s
Iteration  11: 224173.372 ops/s
Iteration  12: 224020.213 ops/s
Iteration  13: 225061.186 ops/s
Iteration  14: 223998.924 ops/s
Iteration  15: 224297.878 ops/s
Iteration  16: 224547.856 ops/s
Iteration  17: 223410.058 ops/s
Iteration  18: 224174.072 ops/s
Iteration  19: 224575.294 ops/s
Iteration  20: 223057.025 ops/s
Iteration  21: 223624.789 ops/s
Iteration  22: 223557.226 ops/s
Iteration  23: 224419.334 ops/s
Iteration  24: 223779.762 ops/s
Iteration  25: 224459.744 ops/s
Iteration  26: 224139.392 ops/s
Iteration  27: 223943.333 ops/s
Iteration  28: 224463.585 ops/s
Iteration  29: 224512.747 ops/s
Iteration  30: 224039.007 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_950._Benchmark.benchmark_Cluster_950":
  224112.384 ±(99.9%) 291.301 ops/s [Average]
  (min, avg, max) = (223057.025, 224112.384, 225061.186), stdev = 436.006
  CI (99.9%): [223821.082, 224403.685] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_950._Benchmark.benchmark_Cluster_950  thrpt   30  224112.384 ± 291.301  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_951._Benchmark.benchmark_Cluster_951$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_951._Benchmark.benchmark_Cluster_951

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75812.422 ops/s
# Warmup Iteration   2: 143094.264 ops/s
# Warmup Iteration   3: 187852.876 ops/s
# Warmup Iteration   4: 189509.090 ops/s
# Warmup Iteration   5: 188965.636 ops/s
# Warmup Iteration   6: 151400.695 ops/s
# Warmup Iteration   7: 189219.946 ops/s
# Warmup Iteration   8: 189018.691 ops/s
# Warmup Iteration   9: 189421.601 ops/s
# Warmup Iteration  10: 189423.824 ops/s
# Warmup Iteration  11: 189042.204 ops/s
# Warmup Iteration  12: 189284.129 ops/s
# Warmup Iteration  13: 189407.725 ops/s
# Warmup Iteration  14: 189402.896 ops/s
# Warmup Iteration  15: 189192.369 ops/s
# Warmup Iteration  16: 189300.782 ops/s
# Warmup Iteration  17: 188287.433 ops/s
# Warmup Iteration  18: 188886.096 ops/s
# Warmup Iteration  19: 189123.683 ops/s
# Warmup Iteration  20: 189065.860 ops/s
# Warmup Iteration  21: 189057.362 ops/s
# Warmup Iteration  22: 189084.270 ops/s
# Warmup Iteration  23: 188805.638 ops/s
# Warmup Iteration  24: 189016.922 ops/s
# Warmup Iteration  25: 188784.111 ops/s
# Warmup Iteration  26: 188537.085 ops/s
# Warmup Iteration  27: 188970.532 ops/s
# Warmup Iteration  28: 188956.971 ops/s
# Warmup Iteration  29: 189077.388 ops/s
# Warmup Iteration  30: 189025.372 ops/s
Iteration   1: 188736.475 ops/s
Iteration   2: 189056.226 ops/s
Iteration   3: 188654.054 ops/s
Iteration   4: 188703.098 ops/s
Iteration   5: 189491.467 ops/s
Iteration   6: 187790.119 ops/s
Iteration   7: 188386.667 ops/s
Iteration   8: 189004.764 ops/s
Iteration   9: 189244.141 ops/s
Iteration  10: 189086.859 ops/s
Iteration  11: 189412.331 ops/s
Iteration  12: 188864.941 ops/s
Iteration  13: 189179.431 ops/s
Iteration  14: 189169.462 ops/s
Iteration  15: 188796.243 ops/s
Iteration  16: 189225.767 ops/s
Iteration  17: 188648.017 ops/s
Iteration  18: 189060.981 ops/s
Iteration  19: 188879.130 ops/s
Iteration  20: 189408.607 ops/s
Iteration  21: 189086.827 ops/s
Iteration  22: 188695.967 ops/s
Iteration  23: 189597.939 ops/s
Iteration  24: 189030.226 ops/s
Iteration  25: 189179.279 ops/s
Iteration  26: 188844.532 ops/s
Iteration  27: 189197.121 ops/s
Iteration  28: 188742.467 ops/s
Iteration  29: 189256.424 ops/s
Iteration  30: 188835.315 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_951._Benchmark.benchmark_Cluster_951":
  188975.496 ±(99.9%) 241.043 ops/s [Average]
  (min, avg, max) = (187790.119, 188975.496, 189597.939), stdev = 360.782
  CI (99.9%): [188734.453, 189216.539] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_951._Benchmark.benchmark_Cluster_951  thrpt   30  188975.496 ± 241.043  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_952._Benchmark.benchmark_Cluster_952$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_952._Benchmark.benchmark_Cluster_952

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 134413.150 ops/s
# Warmup Iteration   2: 146619.729 ops/s
# Warmup Iteration   3: 158391.641 ops/s
# Warmup Iteration   4: 192733.144 ops/s
# Warmup Iteration   5: 192256.390 ops/s
# Warmup Iteration   6: 192807.910 ops/s
# Warmup Iteration   7: 191008.773 ops/s
# Warmup Iteration   8: 191871.768 ops/s
# Warmup Iteration   9: 192125.998 ops/s
# Warmup Iteration  10: 192538.472 ops/s
# Warmup Iteration  11: 192621.895 ops/s
# Warmup Iteration  12: 192609.883 ops/s
# Warmup Iteration  13: 192665.323 ops/s
# Warmup Iteration  14: 191815.571 ops/s
# Warmup Iteration  15: 192145.262 ops/s
# Warmup Iteration  16: 152644.783 ops/s
# Warmup Iteration  17: 199137.575 ops/s
# Warmup Iteration  18: 199371.385 ops/s
# Warmup Iteration  19: 199479.097 ops/s
# Warmup Iteration  20: 199650.181 ops/s
# Warmup Iteration  21: 199023.071 ops/s
# Warmup Iteration  22: 199333.282 ops/s
# Warmup Iteration  23: 199431.725 ops/s
# Warmup Iteration  24: 199086.661 ops/s
# Warmup Iteration  25: 199068.864 ops/s
# Warmup Iteration  26: 199382.778 ops/s
# Warmup Iteration  27: 199757.885 ops/s
# Warmup Iteration  28: 199297.265 ops/s
# Warmup Iteration  29: 199326.619 ops/s
# Warmup Iteration  30: 199689.540 ops/s
Iteration   1: 199340.986 ops/s
Iteration   2: 198970.207 ops/s
Iteration   3: 198936.283 ops/s
Iteration   4: 199086.027 ops/s
Iteration   5: 199536.212 ops/s
Iteration   6: 199132.701 ops/s
Iteration   7: 199019.945 ops/s
Iteration   8: 199621.470 ops/s
Iteration   9: 199060.988 ops/s
Iteration  10: 199366.516 ops/s
Iteration  11: 199365.858 ops/s
Iteration  12: 199426.310 ops/s
Iteration  13: 199149.912 ops/s
Iteration  14: 199780.936 ops/s
Iteration  15: 199566.626 ops/s
Iteration  16: 199665.447 ops/s
Iteration  17: 199291.753 ops/s
Iteration  18: 199070.249 ops/s
Iteration  19: 199406.179 ops/s
Iteration  20: 199062.474 ops/s
Iteration  21: 199733.706 ops/s
Iteration  22: 199442.374 ops/s
Iteration  23: 199361.030 ops/s
Iteration  24: 199530.195 ops/s
Iteration  25: 198847.900 ops/s
Iteration  26: 199082.366 ops/s
Iteration  27: 198991.616 ops/s
Iteration  28: 199256.978 ops/s
Iteration  29: 198954.049 ops/s
Iteration  30: 199472.229 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_952._Benchmark.benchmark_Cluster_952":
  199284.317 ±(99.9%) 174.165 ops/s [Average]
  (min, avg, max) = (198847.900, 199284.317, 199780.936), stdev = 260.682
  CI (99.9%): [199110.152, 199458.482] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_952._Benchmark.benchmark_Cluster_952  thrpt   30  199284.317 ± 174.165  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_953._Benchmark.benchmark_Cluster_953$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_953._Benchmark.benchmark_Cluster_953

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66358.013 ops/s
# Warmup Iteration   2: 129906.062 ops/s
# Warmup Iteration   3: 168024.079 ops/s
# Warmup Iteration   4: 169516.966 ops/s
# Warmup Iteration   5: 169244.933 ops/s
# Warmup Iteration   6: 134747.397 ops/s
# Warmup Iteration   7: 169455.643 ops/s
# Warmup Iteration   8: 169649.082 ops/s
# Warmup Iteration   9: 169414.588 ops/s
# Warmup Iteration  10: 169569.081 ops/s
# Warmup Iteration  11: 169275.226 ops/s
# Warmup Iteration  12: 169407.551 ops/s
# Warmup Iteration  13: 169141.588 ops/s
# Warmup Iteration  14: 169137.953 ops/s
# Warmup Iteration  15: 169065.505 ops/s
# Warmup Iteration  16: 169330.915 ops/s
# Warmup Iteration  17: 169249.242 ops/s
# Warmup Iteration  18: 169239.412 ops/s
# Warmup Iteration  19: 169420.071 ops/s
# Warmup Iteration  20: 169386.813 ops/s
# Warmup Iteration  21: 169279.910 ops/s
# Warmup Iteration  22: 169250.711 ops/s
# Warmup Iteration  23: 169430.965 ops/s
# Warmup Iteration  24: 169431.691 ops/s
# Warmup Iteration  25: 169316.559 ops/s
# Warmup Iteration  26: 169377.590 ops/s
# Warmup Iteration  27: 169528.180 ops/s
# Warmup Iteration  28: 169287.608 ops/s
# Warmup Iteration  29: 169392.379 ops/s
# Warmup Iteration  30: 169237.232 ops/s
Iteration   1: 169275.990 ops/s
Iteration   2: 169626.146 ops/s
Iteration   3: 169613.065 ops/s
Iteration   4: 169386.613 ops/s
Iteration   5: 169437.099 ops/s
Iteration   6: 169168.222 ops/s
Iteration   7: 169428.612 ops/s
Iteration   8: 169377.883 ops/s
Iteration   9: 169188.064 ops/s
Iteration  10: 169148.596 ops/s
Iteration  11: 169172.286 ops/s
Iteration  12: 169567.674 ops/s
Iteration  13: 169529.947 ops/s
Iteration  14: 169368.785 ops/s
Iteration  15: 169659.033 ops/s
Iteration  16: 169047.629 ops/s
Iteration  17: 169547.760 ops/s
Iteration  18: 169410.308 ops/s
Iteration  19: 169266.206 ops/s
Iteration  20: 169181.965 ops/s
Iteration  21: 169390.645 ops/s
Iteration  22: 169731.387 ops/s
Iteration  23: 169479.882 ops/s
Iteration  24: 169664.283 ops/s
Iteration  25: 169282.840 ops/s
Iteration  26: 169673.307 ops/s
Iteration  27: 169468.855 ops/s
Iteration  28: 169220.852 ops/s
Iteration  29: 169559.495 ops/s
Iteration  30: 169020.461 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_953._Benchmark.benchmark_Cluster_953":
  169396.463 ±(99.9%) 132.093 ops/s [Average]
  (min, avg, max) = (169020.461, 169396.463, 169731.387), stdev = 197.711
  CI (99.9%): [169264.370, 169528.556] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_953._Benchmark.benchmark_Cluster_953  thrpt   30  169396.463 ± 132.093  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_954._Benchmark.benchmark_Cluster_954$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_954._Benchmark.benchmark_Cluster_954

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79348.377 ops/s
# Warmup Iteration   2: 122596.047 ops/s
# Warmup Iteration   3: 175987.305 ops/s
# Warmup Iteration   4: 174481.619 ops/s
# Warmup Iteration   5: 175852.635 ops/s
# Warmup Iteration   6: 175498.733 ops/s
# Warmup Iteration   7: 163238.893 ops/s
# Warmup Iteration   8: 150298.881 ops/s
# Warmup Iteration   9: 175741.475 ops/s
# Warmup Iteration  10: 175749.576 ops/s
# Warmup Iteration  11: 175794.584 ops/s
# Warmup Iteration  12: 175856.685 ops/s
# Warmup Iteration  13: 175929.900 ops/s
# Warmup Iteration  14: 175927.817 ops/s
# Warmup Iteration  15: 175693.675 ops/s
# Warmup Iteration  16: 175983.733 ops/s
# Warmup Iteration  17: 175923.493 ops/s
# Warmup Iteration  18: 175770.762 ops/s
# Warmup Iteration  19: 175894.700 ops/s
# Warmup Iteration  20: 175808.947 ops/s
# Warmup Iteration  21: 176053.321 ops/s
# Warmup Iteration  22: 175720.381 ops/s
# Warmup Iteration  23: 175786.134 ops/s
# Warmup Iteration  24: 175804.314 ops/s
# Warmup Iteration  25: 176030.494 ops/s
# Warmup Iteration  26: 175646.030 ops/s
# Warmup Iteration  27: 175898.523 ops/s
# Warmup Iteration  28: 176076.783 ops/s
# Warmup Iteration  29: 176049.797 ops/s
# Warmup Iteration  30: 175998.887 ops/s
Iteration   1: 175712.933 ops/s
Iteration   2: 176049.317 ops/s
Iteration   3: 176081.169 ops/s
Iteration   4: 176043.198 ops/s
Iteration   5: 176237.748 ops/s
Iteration   6: 175949.836 ops/s
Iteration   7: 176223.636 ops/s
Iteration   8: 175995.780 ops/s
Iteration   9: 176168.218 ops/s
Iteration  10: 175892.965 ops/s
Iteration  11: 176270.362 ops/s
Iteration  12: 176191.649 ops/s
Iteration  13: 175933.385 ops/s
Iteration  14: 176155.575 ops/s
Iteration  15: 175972.630 ops/s
Iteration  16: 176327.752 ops/s
Iteration  17: 176044.473 ops/s
Iteration  18: 176278.287 ops/s
Iteration  19: 176203.051 ops/s
Iteration  20: 175814.131 ops/s
Iteration  21: 176074.445 ops/s
Iteration  22: 176109.409 ops/s
Iteration  23: 176205.716 ops/s
Iteration  24: 176035.181 ops/s
Iteration  25: 176149.394 ops/s
Iteration  26: 175887.584 ops/s
Iteration  27: 175897.762 ops/s
Iteration  28: 176128.306 ops/s
Iteration  29: 175749.808 ops/s
Iteration  30: 176291.398 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_954._Benchmark.benchmark_Cluster_954":
  176069.170 ±(99.9%) 108.928 ops/s [Average]
  (min, avg, max) = (175712.933, 176069.170, 176327.752), stdev = 163.039
  CI (99.9%): [175960.242, 176178.098] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_954._Benchmark.benchmark_Cluster_954  thrpt   30  176069.170 ± 108.928  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_955._Benchmark.benchmark_Cluster_955$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_955._Benchmark.benchmark_Cluster_955

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75814.885 ops/s
# Warmup Iteration   2: 125512.123 ops/s
# Warmup Iteration   3: 184091.476 ops/s
# Warmup Iteration   4: 182927.669 ops/s
# Warmup Iteration   5: 184411.596 ops/s
# Warmup Iteration   6: 184572.602 ops/s
# Warmup Iteration   7: 176011.762 ops/s
# Warmup Iteration   8: 154882.997 ops/s
# Warmup Iteration   9: 184231.500 ops/s
# Warmup Iteration  10: 184543.295 ops/s
# Warmup Iteration  11: 184510.636 ops/s
# Warmup Iteration  12: 184445.629 ops/s
# Warmup Iteration  13: 184421.025 ops/s
# Warmup Iteration  14: 183704.765 ops/s
# Warmup Iteration  15: 184260.366 ops/s
# Warmup Iteration  16: 184523.657 ops/s
# Warmup Iteration  17: 184052.856 ops/s
# Warmup Iteration  18: 184171.152 ops/s
# Warmup Iteration  19: 183887.918 ops/s
# Warmup Iteration  20: 184166.935 ops/s
# Warmup Iteration  21: 184130.754 ops/s
# Warmup Iteration  22: 184298.312 ops/s
# Warmup Iteration  23: 184164.536 ops/s
# Warmup Iteration  24: 183825.302 ops/s
# Warmup Iteration  25: 184003.061 ops/s
# Warmup Iteration  26: 183936.094 ops/s
# Warmup Iteration  27: 184126.711 ops/s
# Warmup Iteration  28: 183980.307 ops/s
# Warmup Iteration  29: 183973.349 ops/s
# Warmup Iteration  30: 183962.599 ops/s
Iteration   1: 184241.539 ops/s
Iteration   2: 184172.366 ops/s
Iteration   3: 184411.899 ops/s
Iteration   4: 184230.179 ops/s
Iteration   5: 184393.496 ops/s
Iteration   6: 184250.773 ops/s
Iteration   7: 184058.454 ops/s
Iteration   8: 183459.978 ops/s
Iteration   9: 184004.097 ops/s
Iteration  10: 184221.196 ops/s
Iteration  11: 183931.341 ops/s
Iteration  12: 184316.743 ops/s
Iteration  13: 183887.665 ops/s
Iteration  14: 184087.199 ops/s
Iteration  15: 184162.917 ops/s
Iteration  16: 183946.083 ops/s
Iteration  17: 184309.824 ops/s
Iteration  18: 184105.023 ops/s
Iteration  19: 184150.680 ops/s
Iteration  20: 183709.705 ops/s
Iteration  21: 184192.788 ops/s
Iteration  22: 183898.498 ops/s
Iteration  23: 184216.186 ops/s
Iteration  24: 184274.226 ops/s
Iteration  25: 183766.643 ops/s
Iteration  26: 184154.547 ops/s
Iteration  27: 183892.932 ops/s
Iteration  28: 183930.927 ops/s
Iteration  29: 183611.945 ops/s
Iteration  30: 184096.020 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_955._Benchmark.benchmark_Cluster_955":
  184069.529 ±(99.9%) 152.952 ops/s [Average]
  (min, avg, max) = (183459.978, 184069.529, 184411.899), stdev = 228.931
  CI (99.9%): [183916.577, 184222.481] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_955._Benchmark.benchmark_Cluster_955  thrpt   30  184069.529 ± 152.952  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_956._Benchmark.benchmark_Cluster_956$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_956._Benchmark.benchmark_Cluster_956

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66599.183 ops/s
# Warmup Iteration   2: 134133.639 ops/s
# Warmup Iteration   3: 180848.180 ops/s
# Warmup Iteration   4: 182215.300 ops/s
# Warmup Iteration   5: 182021.011 ops/s
# Warmup Iteration   6: 145729.484 ops/s
# Warmup Iteration   7: 182518.231 ops/s
# Warmup Iteration   8: 182204.246 ops/s
# Warmup Iteration   9: 182367.652 ops/s
# Warmup Iteration  10: 182271.344 ops/s
# Warmup Iteration  11: 182154.987 ops/s
# Warmup Iteration  12: 182405.437 ops/s
# Warmup Iteration  13: 182207.891 ops/s
# Warmup Iteration  14: 182284.214 ops/s
# Warmup Iteration  15: 182222.527 ops/s
# Warmup Iteration  16: 182232.035 ops/s
# Warmup Iteration  17: 182321.563 ops/s
# Warmup Iteration  18: 182087.329 ops/s
# Warmup Iteration  19: 182159.858 ops/s
# Warmup Iteration  20: 182439.921 ops/s
# Warmup Iteration  21: 182352.417 ops/s
# Warmup Iteration  22: 182327.741 ops/s
# Warmup Iteration  23: 182253.820 ops/s
# Warmup Iteration  24: 182101.172 ops/s
# Warmup Iteration  25: 182405.076 ops/s
# Warmup Iteration  26: 182221.296 ops/s
# Warmup Iteration  27: 182278.604 ops/s
# Warmup Iteration  28: 181972.288 ops/s
# Warmup Iteration  29: 182251.896 ops/s
# Warmup Iteration  30: 182212.983 ops/s
Iteration   1: 182208.720 ops/s
Iteration   2: 182235.981 ops/s
Iteration   3: 182418.656 ops/s
Iteration   4: 182166.123 ops/s
Iteration   5: 182244.328 ops/s
Iteration   6: 182065.179 ops/s
Iteration   7: 182466.885 ops/s
Iteration   8: 182196.394 ops/s
Iteration   9: 182183.418 ops/s
Iteration  10: 182398.121 ops/s
Iteration  11: 182230.719 ops/s
Iteration  12: 181940.530 ops/s
Iteration  13: 181603.038 ops/s
Iteration  14: 181451.208 ops/s
Iteration  15: 181616.255 ops/s
Iteration  16: 181605.695 ops/s
Iteration  17: 181994.315 ops/s
Iteration  18: 181646.875 ops/s
Iteration  19: 182016.996 ops/s
Iteration  20: 181727.728 ops/s
Iteration  21: 181718.624 ops/s
Iteration  22: 182035.857 ops/s
Iteration  23: 182008.253 ops/s
Iteration  24: 182030.356 ops/s
Iteration  25: 181924.875 ops/s
Iteration  26: 182165.527 ops/s
Iteration  27: 181961.038 ops/s
Iteration  28: 181972.476 ops/s
Iteration  29: 182254.120 ops/s
Iteration  30: 182238.096 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_956._Benchmark.benchmark_Cluster_956":
  182024.213 ±(99.9%) 177.748 ops/s [Average]
  (min, avg, max) = (181451.208, 182024.213, 182466.885), stdev = 266.045
  CI (99.9%): [181846.465, 182201.961] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_956._Benchmark.benchmark_Cluster_956  thrpt   30  182024.213 ± 177.748  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_957._Benchmark.benchmark_Cluster_957$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_957._Benchmark.benchmark_Cluster_957

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60686.843 ops/s
# Warmup Iteration   2: 127322.224 ops/s
# Warmup Iteration   3: 177419.000 ops/s
# Warmup Iteration   4: 178746.408 ops/s
# Warmup Iteration   5: 177992.039 ops/s
# Warmup Iteration   6: 141926.271 ops/s
# Warmup Iteration   7: 178618.958 ops/s
# Warmup Iteration   8: 178616.459 ops/s
# Warmup Iteration   9: 178808.335 ops/s
# Warmup Iteration  10: 178425.178 ops/s
# Warmup Iteration  11: 178222.203 ops/s
# Warmup Iteration  12: 178365.295 ops/s
# Warmup Iteration  13: 178444.164 ops/s
# Warmup Iteration  14: 178493.682 ops/s
# Warmup Iteration  15: 178407.123 ops/s
# Warmup Iteration  16: 178663.029 ops/s
# Warmup Iteration  17: 178486.794 ops/s
# Warmup Iteration  18: 178489.708 ops/s
# Warmup Iteration  19: 178158.165 ops/s
# Warmup Iteration  20: 178634.168 ops/s
# Warmup Iteration  21: 178710.348 ops/s
# Warmup Iteration  22: 178594.695 ops/s
# Warmup Iteration  23: 178927.483 ops/s
# Warmup Iteration  24: 178685.715 ops/s
# Warmup Iteration  25: 178143.910 ops/s
# Warmup Iteration  26: 178653.257 ops/s
# Warmup Iteration  27: 178779.323 ops/s
# Warmup Iteration  28: 178704.234 ops/s
# Warmup Iteration  29: 178756.536 ops/s
# Warmup Iteration  30: 178557.423 ops/s
Iteration   1: 178495.110 ops/s
Iteration   2: 179131.582 ops/s
Iteration   3: 178641.718 ops/s
Iteration   4: 178314.041 ops/s
Iteration   5: 178591.424 ops/s
Iteration   6: 178874.039 ops/s
Iteration   7: 179084.538 ops/s
Iteration   8: 178762.301 ops/s
Iteration   9: 179130.013 ops/s
Iteration  10: 178841.543 ops/s
Iteration  11: 178856.430 ops/s
Iteration  12: 179177.775 ops/s
Iteration  13: 178529.651 ops/s
Iteration  14: 178743.518 ops/s
Iteration  15: 178646.148 ops/s
Iteration  16: 178857.450 ops/s
Iteration  17: 178801.104 ops/s
Iteration  18: 178655.092 ops/s
Iteration  19: 178882.385 ops/s
Iteration  20: 178542.383 ops/s
Iteration  21: 178985.136 ops/s
Iteration  22: 178665.548 ops/s
Iteration  23: 178757.938 ops/s
Iteration  24: 178980.375 ops/s
Iteration  25: 177986.155 ops/s
Iteration  26: 178708.306 ops/s
Iteration  27: 178232.347 ops/s
Iteration  28: 179074.966 ops/s
Iteration  29: 178604.776 ops/s
Iteration  30: 178901.932 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_957._Benchmark.benchmark_Cluster_957":
  178748.524 ±(99.9%) 182.914 ops/s [Average]
  (min, avg, max) = (177986.155, 178748.524, 179177.775), stdev = 273.778
  CI (99.9%): [178565.610, 178931.438] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_957._Benchmark.benchmark_Cluster_957  thrpt   30  178748.524 ± 182.914  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_958._Benchmark.benchmark_Cluster_958$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_958._Benchmark.benchmark_Cluster_958

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 33799.689 ops/s
# Warmup Iteration   2: 82530.959 ops/s
# Warmup Iteration   3: 138269.703 ops/s
# Warmup Iteration   4: 137339.549 ops/s
# Warmup Iteration   5: 138283.082 ops/s
# Warmup Iteration   6: 131891.805 ops/s
# Warmup Iteration   7: 117347.398 ops/s
# Warmup Iteration   8: 138426.926 ops/s
# Warmup Iteration   9: 138523.923 ops/s
# Warmup Iteration  10: 138544.012 ops/s
# Warmup Iteration  11: 138609.925 ops/s
# Warmup Iteration  12: 138540.752 ops/s
# Warmup Iteration  13: 138567.580 ops/s
# Warmup Iteration  14: 138628.328 ops/s
# Warmup Iteration  15: 138709.449 ops/s
# Warmup Iteration  16: 138730.430 ops/s
# Warmup Iteration  17: 138645.120 ops/s
# Warmup Iteration  18: 138736.185 ops/s
# Warmup Iteration  19: 138790.744 ops/s
# Warmup Iteration  20: 138685.709 ops/s
# Warmup Iteration  21: 138590.968 ops/s
# Warmup Iteration  22: 138504.193 ops/s
# Warmup Iteration  23: 138386.747 ops/s
# Warmup Iteration  24: 138498.572 ops/s
# Warmup Iteration  25: 138650.468 ops/s
# Warmup Iteration  26: 138528.635 ops/s
# Warmup Iteration  27: 138578.633 ops/s
# Warmup Iteration  28: 138694.105 ops/s
# Warmup Iteration  29: 138664.767 ops/s
# Warmup Iteration  30: 138697.127 ops/s
Iteration   1: 138691.303 ops/s
Iteration   2: 138942.997 ops/s
Iteration   3: 138842.467 ops/s
Iteration   4: 138515.023 ops/s
Iteration   5: 138710.488 ops/s
Iteration   6: 138631.958 ops/s
Iteration   7: 138862.489 ops/s
Iteration   8: 138579.719 ops/s
Iteration   9: 138882.276 ops/s
Iteration  10: 138281.112 ops/s
Iteration  11: 138778.148 ops/s
Iteration  12: 138550.781 ops/s
Iteration  13: 138423.162 ops/s
Iteration  14: 138949.136 ops/s
Iteration  15: 138320.762 ops/s
Iteration  16: 138934.793 ops/s
Iteration  17: 138567.431 ops/s
Iteration  18: 138742.087 ops/s
Iteration  19: 138444.275 ops/s
Iteration  20: 138601.394 ops/s
Iteration  21: 138869.124 ops/s
Iteration  22: 138823.899 ops/s
Iteration  23: 138325.150 ops/s
Iteration  24: 138653.152 ops/s
Iteration  25: 138520.164 ops/s
Iteration  26: 138572.491 ops/s
Iteration  27: 138893.525 ops/s
Iteration  28: 138819.588 ops/s
Iteration  29: 138508.340 ops/s
Iteration  30: 138755.088 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_958._Benchmark.benchmark_Cluster_958":
  138666.411 ±(99.9%) 131.379 ops/s [Average]
  (min, avg, max) = (138281.112, 138666.411, 138949.136), stdev = 196.641
  CI (99.9%): [138535.032, 138797.789] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_958._Benchmark.benchmark_Cluster_958  thrpt   30  138666.411 ± 131.379  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_959._Benchmark.benchmark_Cluster_959$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_959._Benchmark.benchmark_Cluster_959

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 130329.162 ops/s
# Warmup Iteration   2: 175600.580 ops/s
# Warmup Iteration   3: 259179.927 ops/s
# Warmup Iteration   4: 257798.877 ops/s
# Warmup Iteration   5: 258875.439 ops/s
# Warmup Iteration   6: 259366.320 ops/s
# Warmup Iteration   7: 259140.663 ops/s
# Warmup Iteration   8: 259394.374 ops/s
# Warmup Iteration   9: 207254.316 ops/s
# Warmup Iteration  10: 259467.757 ops/s
# Warmup Iteration  11: 259175.520 ops/s
# Warmup Iteration  12: 259100.608 ops/s
# Warmup Iteration  13: 259440.710 ops/s
# Warmup Iteration  14: 259475.456 ops/s
# Warmup Iteration  15: 259377.881 ops/s
# Warmup Iteration  16: 259315.434 ops/s
# Warmup Iteration  17: 259352.214 ops/s
# Warmup Iteration  18: 259114.579 ops/s
# Warmup Iteration  19: 259202.262 ops/s
# Warmup Iteration  20: 259299.174 ops/s
# Warmup Iteration  21: 259142.850 ops/s
# Warmup Iteration  22: 258972.083 ops/s
# Warmup Iteration  23: 259172.576 ops/s
# Warmup Iteration  24: 259339.909 ops/s
# Warmup Iteration  25: 259447.768 ops/s
# Warmup Iteration  26: 259140.404 ops/s
# Warmup Iteration  27: 259304.578 ops/s
# Warmup Iteration  28: 259242.676 ops/s
# Warmup Iteration  29: 259130.479 ops/s
# Warmup Iteration  30: 258988.726 ops/s
Iteration   1: 259420.637 ops/s
Iteration   2: 258943.550 ops/s
Iteration   3: 259096.855 ops/s
Iteration   4: 259570.312 ops/s
Iteration   5: 259666.482 ops/s
Iteration   6: 259030.188 ops/s
Iteration   7: 259298.004 ops/s
Iteration   8: 259257.259 ops/s
Iteration   9: 259029.228 ops/s
Iteration  10: 259241.114 ops/s
Iteration  11: 259300.571 ops/s
Iteration  12: 259221.987 ops/s
Iteration  13: 259247.688 ops/s
Iteration  14: 259512.508 ops/s
Iteration  15: 258947.089 ops/s
Iteration  16: 259160.438 ops/s
Iteration  17: 258856.505 ops/s
Iteration  18: 259294.863 ops/s
Iteration  19: 259267.763 ops/s
Iteration  20: 259116.037 ops/s
Iteration  21: 259454.417 ops/s
Iteration  22: 258840.894 ops/s
Iteration  23: 259083.524 ops/s
Iteration  24: 259429.017 ops/s
Iteration  25: 259346.683 ops/s
Iteration  26: 258943.964 ops/s
Iteration  27: 259049.301 ops/s
Iteration  28: 259190.846 ops/s
Iteration  29: 258810.897 ops/s
Iteration  30: 258873.882 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_959._Benchmark.benchmark_Cluster_959":
  259183.417 ±(99.9%) 151.246 ops/s [Average]
  (min, avg, max) = (258810.897, 259183.417, 259666.482), stdev = 226.378
  CI (99.9%): [259032.171, 259334.662] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_959._Benchmark.benchmark_Cluster_959  thrpt   30  259183.417 ± 151.246  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_96._Benchmark.benchmark_Cluster_96$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_96._Benchmark.benchmark_Cluster_96

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70475.378 ops/s
# Warmup Iteration   2: 92239.988 ops/s
# Warmup Iteration   3: 158946.301 ops/s
# Warmup Iteration   4: 163057.152 ops/s
# Warmup Iteration   5: 160460.204 ops/s
# Warmup Iteration   6: 163199.169 ops/s
# Warmup Iteration   7: 163095.590 ops/s
# Warmup Iteration   8: 162495.299 ops/s
# Warmup Iteration   9: 124089.320 ops/s
# Warmup Iteration  10: 162325.444 ops/s
# Warmup Iteration  11: 163025.149 ops/s
# Warmup Iteration  12: 162727.865 ops/s
# Warmup Iteration  13: 162795.112 ops/s
# Warmup Iteration  14: 162853.895 ops/s
# Warmup Iteration  15: 162887.214 ops/s
# Warmup Iteration  16: 163177.604 ops/s
# Warmup Iteration  17: 164194.672 ops/s
# Warmup Iteration  18: 164001.820 ops/s
# Warmup Iteration  19: 164324.585 ops/s
# Warmup Iteration  20: 164236.824 ops/s
# Warmup Iteration  21: 164568.352 ops/s
# Warmup Iteration  22: 164192.305 ops/s
# Warmup Iteration  23: 164416.045 ops/s
# Warmup Iteration  24: 163818.209 ops/s
# Warmup Iteration  25: 164129.266 ops/s
# Warmup Iteration  26: 163031.884 ops/s
# Warmup Iteration  27: 164089.950 ops/s
# Warmup Iteration  28: 163704.857 ops/s
# Warmup Iteration  29: 163768.644 ops/s
# Warmup Iteration  30: 164073.506 ops/s
Iteration   1: 163941.175 ops/s
Iteration   2: 162856.450 ops/s
Iteration   3: 163040.102 ops/s
Iteration   4: 163265.718 ops/s
Iteration   5: 164534.272 ops/s
Iteration   6: 164441.241 ops/s
Iteration   7: 163207.024 ops/s
Iteration   8: 164492.266 ops/s
Iteration   9: 163708.519 ops/s
Iteration  10: 164565.243 ops/s
Iteration  11: 164621.607 ops/s
Iteration  12: 164195.527 ops/s
Iteration  13: 164250.527 ops/s
Iteration  14: 164158.902 ops/s
Iteration  15: 163474.954 ops/s
Iteration  16: 164053.183 ops/s
Iteration  17: 164212.323 ops/s
Iteration  18: 163947.014 ops/s
Iteration  19: 164213.900 ops/s
Iteration  20: 163743.371 ops/s
Iteration  21: 162564.988 ops/s
Iteration  22: 164207.883 ops/s
Iteration  23: 164521.716 ops/s
Iteration  24: 164420.625 ops/s
Iteration  25: 164180.965 ops/s
Iteration  26: 164237.982 ops/s
Iteration  27: 164353.114 ops/s
Iteration  28: 164629.669 ops/s
Iteration  29: 164075.602 ops/s
Iteration  30: 164596.641 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_96._Benchmark.benchmark_Cluster_96":
  164023.750 ±(99.9%) 371.887 ops/s [Average]
  (min, avg, max) = (162564.988, 164023.750, 164629.669), stdev = 556.623
  CI (99.9%): [163651.863, 164395.637] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_96._Benchmark.benchmark_Cluster_96  thrpt   30  164023.750 ± 371.887  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_960._Benchmark.benchmark_Cluster_960$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_960._Benchmark.benchmark_Cluster_960

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71612.597 ops/s
# Warmup Iteration   2: 121446.879 ops/s
# Warmup Iteration   3: 184521.820 ops/s
# Warmup Iteration   4: 183486.673 ops/s
# Warmup Iteration   5: 184592.531 ops/s
# Warmup Iteration   6: 184370.107 ops/s
# Warmup Iteration   7: 160202.310 ops/s
# Warmup Iteration   8: 170373.532 ops/s
# Warmup Iteration   9: 184508.035 ops/s
# Warmup Iteration  10: 184082.114 ops/s
# Warmup Iteration  11: 184476.613 ops/s
# Warmup Iteration  12: 184447.251 ops/s
# Warmup Iteration  13: 184409.371 ops/s
# Warmup Iteration  14: 184312.962 ops/s
# Warmup Iteration  15: 184345.152 ops/s
# Warmup Iteration  16: 184407.743 ops/s
# Warmup Iteration  17: 183969.932 ops/s
# Warmup Iteration  18: 183833.097 ops/s
# Warmup Iteration  19: 183792.732 ops/s
# Warmup Iteration  20: 184054.987 ops/s
# Warmup Iteration  21: 183779.433 ops/s
# Warmup Iteration  22: 183935.412 ops/s
# Warmup Iteration  23: 183862.205 ops/s
# Warmup Iteration  24: 183935.784 ops/s
# Warmup Iteration  25: 183875.515 ops/s
# Warmup Iteration  26: 184110.402 ops/s
# Warmup Iteration  27: 183848.698 ops/s
# Warmup Iteration  28: 183797.324 ops/s
# Warmup Iteration  29: 183662.434 ops/s
# Warmup Iteration  30: 183980.237 ops/s
Iteration   1: 184091.168 ops/s
Iteration   2: 184379.009 ops/s
Iteration   3: 184274.746 ops/s
Iteration   4: 183746.786 ops/s
Iteration   5: 184112.754 ops/s
Iteration   6: 183802.577 ops/s
Iteration   7: 184089.436 ops/s
Iteration   8: 184118.681 ops/s
Iteration   9: 184283.450 ops/s
Iteration  10: 183598.381 ops/s
Iteration  11: 184188.160 ops/s
Iteration  12: 184029.268 ops/s
Iteration  13: 183719.370 ops/s
Iteration  14: 183907.228 ops/s
Iteration  15: 183854.112 ops/s
Iteration  16: 184106.536 ops/s
Iteration  17: 183974.493 ops/s
Iteration  18: 183607.192 ops/s
Iteration  19: 183596.186 ops/s
Iteration  20: 183757.727 ops/s
Iteration  21: 183809.823 ops/s
Iteration  22: 183750.593 ops/s
Iteration  23: 184011.481 ops/s
Iteration  24: 184193.483 ops/s
Iteration  25: 183855.622 ops/s
Iteration  26: 183687.260 ops/s
Iteration  27: 184045.736 ops/s
Iteration  28: 183879.179 ops/s
Iteration  29: 184094.307 ops/s
Iteration  30: 183656.411 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_960._Benchmark.benchmark_Cluster_960":
  183940.705 ±(99.9%) 148.500 ops/s [Average]
  (min, avg, max) = (183596.186, 183940.705, 184379.009), stdev = 222.268
  CI (99.9%): [183792.205, 184089.205] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_960._Benchmark.benchmark_Cluster_960  thrpt   30  183940.705 ± 148.500  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_961._Benchmark.benchmark_Cluster_961$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_961._Benchmark.benchmark_Cluster_961

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 148613.014 ops/s
# Warmup Iteration   2: 160495.087 ops/s
# Warmup Iteration   3: 175393.605 ops/s
# Warmup Iteration   4: 213251.679 ops/s
# Warmup Iteration   5: 212843.701 ops/s
# Warmup Iteration   6: 213260.590 ops/s
# Warmup Iteration   7: 211386.190 ops/s
# Warmup Iteration   8: 213184.427 ops/s
# Warmup Iteration   9: 212897.149 ops/s
# Warmup Iteration  10: 212619.160 ops/s
# Warmup Iteration  11: 212458.127 ops/s
# Warmup Iteration  12: 213407.079 ops/s
# Warmup Iteration  13: 212881.446 ops/s
# Warmup Iteration  14: 212657.178 ops/s
# Warmup Iteration  15: 202739.275 ops/s
# Warmup Iteration  16: 177712.138 ops/s
# Warmup Iteration  17: 223180.372 ops/s
# Warmup Iteration  18: 222821.907 ops/s
# Warmup Iteration  19: 223138.952 ops/s
# Warmup Iteration  20: 223098.292 ops/s
# Warmup Iteration  21: 223210.134 ops/s
# Warmup Iteration  22: 223048.741 ops/s
# Warmup Iteration  23: 223042.813 ops/s
# Warmup Iteration  24: 221991.780 ops/s
# Warmup Iteration  25: 222469.116 ops/s
# Warmup Iteration  26: 222687.660 ops/s
# Warmup Iteration  27: 223166.008 ops/s
# Warmup Iteration  28: 222691.196 ops/s
# Warmup Iteration  29: 222694.649 ops/s
# Warmup Iteration  30: 223089.524 ops/s
Iteration   1: 223141.165 ops/s
Iteration   2: 222902.191 ops/s
Iteration   3: 222466.482 ops/s
Iteration   4: 222905.957 ops/s
Iteration   5: 222993.294 ops/s
Iteration   6: 223010.778 ops/s
Iteration   7: 222960.793 ops/s
Iteration   8: 222471.918 ops/s
Iteration   9: 222553.409 ops/s
Iteration  10: 222380.293 ops/s
Iteration  11: 222746.664 ops/s
Iteration  12: 222998.078 ops/s
Iteration  13: 222292.577 ops/s
Iteration  14: 222911.745 ops/s
Iteration  15: 222854.399 ops/s
Iteration  16: 222920.007 ops/s
Iteration  17: 222721.506 ops/s
Iteration  18: 222294.104 ops/s
Iteration  19: 222713.146 ops/s
Iteration  20: 222715.971 ops/s
Iteration  21: 223200.957 ops/s
Iteration  22: 223243.483 ops/s
Iteration  23: 222698.081 ops/s
Iteration  24: 222389.496 ops/s
Iteration  25: 223230.338 ops/s
Iteration  26: 222885.921 ops/s
Iteration  27: 222653.526 ops/s
Iteration  28: 222816.359 ops/s
Iteration  29: 222831.998 ops/s
Iteration  30: 222768.492 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_961._Benchmark.benchmark_Cluster_961":
  222789.104 ±(99.9%) 177.926 ops/s [Average]
  (min, avg, max) = (222292.577, 222789.104, 223243.483), stdev = 266.312
  CI (99.9%): [222611.178, 222967.031] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_961._Benchmark.benchmark_Cluster_961  thrpt   30  222789.104 ± 177.926  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_962._Benchmark.benchmark_Cluster_962$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_962._Benchmark.benchmark_Cluster_962

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74710.051 ops/s
# Warmup Iteration   2: 101574.661 ops/s
# Warmup Iteration   3: 155309.173 ops/s
# Warmup Iteration   4: 153490.148 ops/s
# Warmup Iteration   5: 154959.082 ops/s
# Warmup Iteration   6: 154840.888 ops/s
# Warmup Iteration   7: 155220.875 ops/s
# Warmup Iteration   8: 149765.088 ops/s
# Warmup Iteration   9: 125278.301 ops/s
# Warmup Iteration  10: 154940.059 ops/s
# Warmup Iteration  11: 155162.927 ops/s
# Warmup Iteration  12: 154966.107 ops/s
# Warmup Iteration  13: 154894.109 ops/s
# Warmup Iteration  14: 155352.844 ops/s
# Warmup Iteration  15: 155664.381 ops/s
# Warmup Iteration  16: 155092.861 ops/s
# Warmup Iteration  17: 157615.246 ops/s
# Warmup Iteration  18: 157219.319 ops/s
# Warmup Iteration  19: 156977.892 ops/s
# Warmup Iteration  20: 157240.158 ops/s
# Warmup Iteration  21: 157564.290 ops/s
# Warmup Iteration  22: 157481.695 ops/s
# Warmup Iteration  23: 157205.356 ops/s
# Warmup Iteration  24: 157374.997 ops/s
# Warmup Iteration  25: 157096.146 ops/s
# Warmup Iteration  26: 157431.718 ops/s
# Warmup Iteration  27: 156697.782 ops/s
# Warmup Iteration  28: 156843.034 ops/s
# Warmup Iteration  29: 156775.854 ops/s
# Warmup Iteration  30: 156756.635 ops/s
Iteration   1: 157217.655 ops/s
Iteration   2: 158167.699 ops/s
Iteration   3: 156543.367 ops/s
Iteration   4: 157326.370 ops/s
Iteration   5: 157418.938 ops/s
Iteration   6: 157039.764 ops/s
Iteration   7: 156299.287 ops/s
Iteration   8: 156662.089 ops/s
Iteration   9: 156281.031 ops/s
Iteration  10: 157078.186 ops/s
Iteration  11: 156364.340 ops/s
Iteration  12: 157758.981 ops/s
Iteration  13: 157802.842 ops/s
Iteration  14: 157979.985 ops/s
Iteration  15: 156453.646 ops/s
Iteration  16: 157478.171 ops/s
Iteration  17: 156593.804 ops/s
Iteration  18: 158015.099 ops/s
Iteration  19: 157538.824 ops/s
Iteration  20: 156896.445 ops/s
Iteration  21: 156493.725 ops/s
Iteration  22: 156774.269 ops/s
Iteration  23: 156611.801 ops/s
Iteration  24: 157152.881 ops/s
Iteration  25: 156559.688 ops/s
Iteration  26: 156712.455 ops/s
Iteration  27: 156595.906 ops/s
Iteration  28: 157928.864 ops/s
Iteration  29: 157433.834 ops/s
Iteration  30: 156734.227 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_962._Benchmark.benchmark_Cluster_962":
  157063.806 ±(99.9%) 383.613 ops/s [Average]
  (min, avg, max) = (156281.031, 157063.806, 158167.699), stdev = 574.174
  CI (99.9%): [156680.193, 157447.419] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_962._Benchmark.benchmark_Cluster_962  thrpt   30  157063.806 ± 383.613  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_963._Benchmark.benchmark_Cluster_963$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_963._Benchmark.benchmark_Cluster_963

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54372.862 ops/s
# Warmup Iteration   2: 95795.461 ops/s
# Warmup Iteration   3: 147401.649 ops/s
# Warmup Iteration   4: 146645.216 ops/s
# Warmup Iteration   5: 147159.009 ops/s
# Warmup Iteration   6: 147082.612 ops/s
# Warmup Iteration   7: 136025.955 ops/s
# Warmup Iteration   8: 126736.940 ops/s
# Warmup Iteration   9: 148087.545 ops/s
# Warmup Iteration  10: 147607.764 ops/s
# Warmup Iteration  11: 147855.365 ops/s
# Warmup Iteration  12: 147736.475 ops/s
# Warmup Iteration  13: 147602.874 ops/s
# Warmup Iteration  14: 147492.750 ops/s
# Warmup Iteration  15: 147473.382 ops/s
# Warmup Iteration  16: 148200.022 ops/s
# Warmup Iteration  17: 152248.715 ops/s
# Warmup Iteration  18: 151960.998 ops/s
# Warmup Iteration  19: 151816.087 ops/s
# Warmup Iteration  20: 152098.547 ops/s
# Warmup Iteration  21: 151815.288 ops/s
# Warmup Iteration  22: 151908.019 ops/s
# Warmup Iteration  23: 151759.883 ops/s
# Warmup Iteration  24: 151958.394 ops/s
# Warmup Iteration  25: 152330.459 ops/s
# Warmup Iteration  26: 151906.691 ops/s
# Warmup Iteration  27: 152098.974 ops/s
# Warmup Iteration  28: 152343.696 ops/s
# Warmup Iteration  29: 152234.142 ops/s
# Warmup Iteration  30: 152242.015 ops/s
Iteration   1: 151951.259 ops/s
Iteration   2: 152328.216 ops/s
Iteration   3: 152097.389 ops/s
Iteration   4: 152110.065 ops/s
Iteration   5: 151977.144 ops/s
Iteration   6: 151953.695 ops/s
Iteration   7: 152196.895 ops/s
Iteration   8: 152000.442 ops/s
Iteration   9: 152124.442 ops/s
Iteration  10: 152577.661 ops/s
Iteration  11: 152212.757 ops/s
Iteration  12: 151539.588 ops/s
Iteration  13: 152262.396 ops/s
Iteration  14: 152544.928 ops/s
Iteration  15: 152477.010 ops/s
Iteration  16: 152557.052 ops/s
Iteration  17: 152101.387 ops/s
Iteration  18: 152209.332 ops/s
Iteration  19: 151897.242 ops/s
Iteration  20: 152238.290 ops/s
Iteration  21: 152156.733 ops/s
Iteration  22: 152356.308 ops/s
Iteration  23: 151813.857 ops/s
Iteration  24: 152125.562 ops/s
Iteration  25: 151586.492 ops/s
Iteration  26: 152114.739 ops/s
Iteration  27: 152218.390 ops/s
Iteration  28: 151943.881 ops/s
Iteration  29: 151420.074 ops/s
Iteration  30: 151385.770 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_963._Benchmark.benchmark_Cluster_963":
  152082.633 ±(99.9%) 205.751 ops/s [Average]
  (min, avg, max) = (151385.770, 152082.633, 152577.661), stdev = 307.959
  CI (99.9%): [151876.882, 152288.384] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_963._Benchmark.benchmark_Cluster_963  thrpt   30  152082.633 ± 205.751  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_964._Benchmark.benchmark_Cluster_964$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_964._Benchmark.benchmark_Cluster_964

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 88904.218 ops/s
# Warmup Iteration   2: 116022.033 ops/s
# Warmup Iteration   3: 175950.745 ops/s
# Warmup Iteration   4: 175345.980 ops/s
# Warmup Iteration   5: 176439.954 ops/s
# Warmup Iteration   6: 175918.039 ops/s
# Warmup Iteration   7: 175678.492 ops/s
# Warmup Iteration   8: 175747.726 ops/s
# Warmup Iteration   9: 138879.977 ops/s
# Warmup Iteration  10: 176080.445 ops/s
# Warmup Iteration  11: 176038.477 ops/s
# Warmup Iteration  12: 176259.325 ops/s
# Warmup Iteration  13: 176316.640 ops/s
# Warmup Iteration  14: 176425.537 ops/s
# Warmup Iteration  15: 176040.264 ops/s
# Warmup Iteration  16: 176027.178 ops/s
# Warmup Iteration  17: 180808.942 ops/s
# Warmup Iteration  18: 180880.986 ops/s
# Warmup Iteration  19: 181023.678 ops/s
# Warmup Iteration  20: 180653.482 ops/s
# Warmup Iteration  21: 181079.996 ops/s
# Warmup Iteration  22: 181007.721 ops/s
# Warmup Iteration  23: 181070.459 ops/s
# Warmup Iteration  24: 180928.821 ops/s
# Warmup Iteration  25: 180837.932 ops/s
# Warmup Iteration  26: 180580.822 ops/s
# Warmup Iteration  27: 180964.216 ops/s
# Warmup Iteration  28: 180915.922 ops/s
# Warmup Iteration  29: 181029.324 ops/s
# Warmup Iteration  30: 181172.791 ops/s
Iteration   1: 180732.628 ops/s
Iteration   2: 181092.180 ops/s
Iteration   3: 180952.001 ops/s
Iteration   4: 180770.924 ops/s
Iteration   5: 181503.335 ops/s
Iteration   6: 181256.678 ops/s
Iteration   7: 180676.805 ops/s
Iteration   8: 180951.193 ops/s
Iteration   9: 181190.990 ops/s
Iteration  10: 181009.148 ops/s
Iteration  11: 180994.166 ops/s
Iteration  12: 180819.507 ops/s
Iteration  13: 180647.687 ops/s
Iteration  14: 180402.545 ops/s
Iteration  15: 180647.511 ops/s
Iteration  16: 181383.299 ops/s
Iteration  17: 181015.977 ops/s
Iteration  18: 180633.421 ops/s
Iteration  19: 181330.215 ops/s
Iteration  20: 181297.704 ops/s
Iteration  21: 181137.156 ops/s
Iteration  22: 181345.726 ops/s
Iteration  23: 181440.137 ops/s
Iteration  24: 180854.611 ops/s
Iteration  25: 180938.895 ops/s
Iteration  26: 180887.826 ops/s
Iteration  27: 181341.670 ops/s
Iteration  28: 180978.793 ops/s
Iteration  29: 180654.617 ops/s
Iteration  30: 181021.902 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_964._Benchmark.benchmark_Cluster_964":
  180996.975 ±(99.9%) 189.001 ops/s [Average]
  (min, avg, max) = (180402.545, 180996.975, 181503.335), stdev = 282.888
  CI (99.9%): [180807.974, 181185.976] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_964._Benchmark.benchmark_Cluster_964  thrpt   30  180996.975 ± 189.001  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_965._Benchmark.benchmark_Cluster_965$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_965._Benchmark.benchmark_Cluster_965

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68201.242 ops/s
# Warmup Iteration   2: 117579.896 ops/s
# Warmup Iteration   3: 172220.194 ops/s
# Warmup Iteration   4: 170808.624 ops/s
# Warmup Iteration   5: 172448.821 ops/s
# Warmup Iteration   6: 172228.912 ops/s
# Warmup Iteration   7: 135485.061 ops/s
# Warmup Iteration   8: 172591.320 ops/s
# Warmup Iteration   9: 172710.412 ops/s
# Warmup Iteration  10: 172646.362 ops/s
# Warmup Iteration  11: 172686.672 ops/s
# Warmup Iteration  12: 172774.779 ops/s
# Warmup Iteration  13: 172799.685 ops/s
# Warmup Iteration  14: 173013.169 ops/s
# Warmup Iteration  15: 172503.345 ops/s
# Warmup Iteration  16: 172492.877 ops/s
# Warmup Iteration  17: 172506.047 ops/s
# Warmup Iteration  18: 172619.669 ops/s
# Warmup Iteration  19: 172693.831 ops/s
# Warmup Iteration  20: 172646.194 ops/s
# Warmup Iteration  21: 172409.464 ops/s
# Warmup Iteration  22: 172618.924 ops/s
# Warmup Iteration  23: 172849.568 ops/s
# Warmup Iteration  24: 172580.866 ops/s
# Warmup Iteration  25: 172598.511 ops/s
# Warmup Iteration  26: 172752.459 ops/s
# Warmup Iteration  27: 172726.974 ops/s
# Warmup Iteration  28: 172679.519 ops/s
# Warmup Iteration  29: 172761.453 ops/s
# Warmup Iteration  30: 172789.853 ops/s
Iteration   1: 172216.283 ops/s
Iteration   2: 172815.713 ops/s
Iteration   3: 172320.255 ops/s
Iteration   4: 172603.936 ops/s
Iteration   5: 172657.808 ops/s
Iteration   6: 172773.167 ops/s
Iteration   7: 172190.830 ops/s
Iteration   8: 172685.486 ops/s
Iteration   9: 172967.899 ops/s
Iteration  10: 172492.095 ops/s
Iteration  11: 172405.151 ops/s
Iteration  12: 172343.051 ops/s
Iteration  13: 172637.900 ops/s
Iteration  14: 172550.260 ops/s
Iteration  15: 172437.547 ops/s
Iteration  16: 172441.977 ops/s
Iteration  17: 172804.384 ops/s
Iteration  18: 172572.853 ops/s
Iteration  19: 172754.534 ops/s
Iteration  20: 172570.605 ops/s
Iteration  21: 172569.086 ops/s
Iteration  22: 172673.397 ops/s
Iteration  23: 172680.738 ops/s
Iteration  24: 172413.837 ops/s
Iteration  25: 173079.304 ops/s
Iteration  26: 172800.531 ops/s
Iteration  27: 172810.168 ops/s
Iteration  28: 172495.405 ops/s
Iteration  29: 172965.147 ops/s
Iteration  30: 172601.526 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_965._Benchmark.benchmark_Cluster_965":
  172611.029 ±(99.9%) 144.464 ops/s [Average]
  (min, avg, max) = (172190.830, 172611.029, 173079.304), stdev = 216.227
  CI (99.9%): [172466.565, 172755.493] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_965._Benchmark.benchmark_Cluster_965  thrpt   30  172611.029 ± 144.464  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_966._Benchmark.benchmark_Cluster_966$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_966._Benchmark.benchmark_Cluster_966

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68782.276 ops/s
# Warmup Iteration   2: 106154.118 ops/s
# Warmup Iteration   3: 158060.424 ops/s
# Warmup Iteration   4: 157420.149 ops/s
# Warmup Iteration   5: 158304.323 ops/s
# Warmup Iteration   6: 157907.748 ops/s
# Warmup Iteration   7: 158170.809 ops/s
# Warmup Iteration   8: 123846.838 ops/s
# Warmup Iteration   9: 157919.997 ops/s
# Warmup Iteration  10: 157761.350 ops/s
# Warmup Iteration  11: 157994.901 ops/s
# Warmup Iteration  12: 157967.901 ops/s
# Warmup Iteration  13: 157813.940 ops/s
# Warmup Iteration  14: 157735.074 ops/s
# Warmup Iteration  15: 157817.640 ops/s
# Warmup Iteration  16: 157791.612 ops/s
# Warmup Iteration  17: 159654.727 ops/s
# Warmup Iteration  18: 159740.533 ops/s
# Warmup Iteration  19: 159875.325 ops/s
# Warmup Iteration  20: 159640.244 ops/s
# Warmup Iteration  21: 159408.346 ops/s
# Warmup Iteration  22: 159568.804 ops/s
# Warmup Iteration  23: 159738.370 ops/s
# Warmup Iteration  24: 159458.734 ops/s
# Warmup Iteration  25: 159980.295 ops/s
# Warmup Iteration  26: 159851.513 ops/s
# Warmup Iteration  27: 159842.406 ops/s
# Warmup Iteration  28: 159927.938 ops/s
# Warmup Iteration  29: 159901.905 ops/s
# Warmup Iteration  30: 159562.264 ops/s
Iteration   1: 159914.234 ops/s
Iteration   2: 159909.159 ops/s
Iteration   3: 159516.894 ops/s
Iteration   4: 160106.572 ops/s
Iteration   5: 160094.613 ops/s
Iteration   6: 160114.525 ops/s
Iteration   7: 159956.897 ops/s
Iteration   8: 159990.749 ops/s
Iteration   9: 159901.449 ops/s
Iteration  10: 160033.217 ops/s
Iteration  11: 159983.722 ops/s
Iteration  12: 159815.787 ops/s
Iteration  13: 160318.185 ops/s
Iteration  14: 159965.320 ops/s
Iteration  15: 160366.487 ops/s
Iteration  16: 160163.908 ops/s
Iteration  17: 160074.646 ops/s
Iteration  18: 160181.387 ops/s
Iteration  19: 159894.055 ops/s
Iteration  20: 160213.865 ops/s
Iteration  21: 159726.236 ops/s
Iteration  22: 160136.423 ops/s
Iteration  23: 160220.818 ops/s
Iteration  24: 159761.481 ops/s
Iteration  25: 160354.676 ops/s
Iteration  26: 159759.633 ops/s
Iteration  27: 159923.032 ops/s
Iteration  28: 159917.971 ops/s
Iteration  29: 159816.894 ops/s
Iteration  30: 159927.908 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_966._Benchmark.benchmark_Cluster_966":
  160002.025 ±(99.9%) 131.444 ops/s [Average]
  (min, avg, max) = (159516.894, 160002.025, 160366.487), stdev = 196.739
  CI (99.9%): [159870.581, 160133.468] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_966._Benchmark.benchmark_Cluster_966  thrpt   30  160002.025 ± 131.444  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_967._Benchmark.benchmark_Cluster_967$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_967._Benchmark.benchmark_Cluster_967

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54436.198 ops/s
# Warmup Iteration   2: 105850.010 ops/s
# Warmup Iteration   3: 170450.729 ops/s
# Warmup Iteration   4: 169931.213 ops/s
# Warmup Iteration   5: 170747.877 ops/s
# Warmup Iteration   6: 170782.693 ops/s
# Warmup Iteration   7: 136362.216 ops/s
# Warmup Iteration   8: 169764.394 ops/s
# Warmup Iteration   9: 171348.977 ops/s
# Warmup Iteration  10: 171425.601 ops/s
# Warmup Iteration  11: 170808.636 ops/s
# Warmup Iteration  12: 171267.433 ops/s
# Warmup Iteration  13: 171062.100 ops/s
# Warmup Iteration  14: 171083.041 ops/s
# Warmup Iteration  15: 170910.084 ops/s
# Warmup Iteration  16: 170906.938 ops/s
# Warmup Iteration  17: 171084.904 ops/s
# Warmup Iteration  18: 170856.330 ops/s
# Warmup Iteration  19: 170674.405 ops/s
# Warmup Iteration  20: 170489.684 ops/s
# Warmup Iteration  21: 170576.415 ops/s
# Warmup Iteration  22: 170715.756 ops/s
# Warmup Iteration  23: 170446.816 ops/s
# Warmup Iteration  24: 170695.644 ops/s
# Warmup Iteration  25: 170666.367 ops/s
# Warmup Iteration  26: 171033.901 ops/s
# Warmup Iteration  27: 170777.020 ops/s
# Warmup Iteration  28: 170735.370 ops/s
# Warmup Iteration  29: 170627.514 ops/s
# Warmup Iteration  30: 170871.238 ops/s
Iteration   1: 170653.998 ops/s
Iteration   2: 170530.894 ops/s
Iteration   3: 170573.733 ops/s
Iteration   4: 170416.510 ops/s
Iteration   5: 170530.773 ops/s
Iteration   6: 170747.399 ops/s
Iteration   7: 170472.045 ops/s
Iteration   8: 170857.287 ops/s
Iteration   9: 170650.259 ops/s
Iteration  10: 170976.628 ops/s
Iteration  11: 170688.703 ops/s
Iteration  12: 170442.411 ops/s
Iteration  13: 170961.046 ops/s
Iteration  14: 170426.904 ops/s
Iteration  15: 170323.087 ops/s
Iteration  16: 170581.704 ops/s
Iteration  17: 170926.515 ops/s
Iteration  18: 170889.666 ops/s
Iteration  19: 171168.772 ops/s
Iteration  20: 170843.720 ops/s
Iteration  21: 170834.912 ops/s
Iteration  22: 170463.594 ops/s
Iteration  23: 170719.265 ops/s
Iteration  24: 170416.883 ops/s
Iteration  25: 171180.015 ops/s
Iteration  26: 171228.397 ops/s
Iteration  27: 170755.741 ops/s
Iteration  28: 170948.953 ops/s
Iteration  29: 170506.612 ops/s
Iteration  30: 170648.818 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_967._Benchmark.benchmark_Cluster_967":
  170712.175 ±(99.9%) 165.126 ops/s [Average]
  (min, avg, max) = (170323.087, 170712.175, 171228.397), stdev = 247.153
  CI (99.9%): [170547.049, 170877.301] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_967._Benchmark.benchmark_Cluster_967  thrpt   30  170712.175 ± 165.126  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_968._Benchmark.benchmark_Cluster_968$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_968._Benchmark.benchmark_Cluster_968

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52526.066 ops/s
# Warmup Iteration   2: 116207.356 ops/s
# Warmup Iteration   3: 177686.026 ops/s
# Warmup Iteration   4: 177246.537 ops/s
# Warmup Iteration   5: 178287.065 ops/s
# Warmup Iteration   6: 146162.025 ops/s
# Warmup Iteration   7: 173207.447 ops/s
# Warmup Iteration   8: 179044.564 ops/s
# Warmup Iteration   9: 178715.303 ops/s
# Warmup Iteration  10: 178822.822 ops/s
# Warmup Iteration  11: 178663.029 ops/s
# Warmup Iteration  12: 178804.723 ops/s
# Warmup Iteration  13: 178738.099 ops/s
# Warmup Iteration  14: 178303.391 ops/s
# Warmup Iteration  15: 178655.296 ops/s
# Warmup Iteration  16: 178736.563 ops/s
# Warmup Iteration  17: 178302.619 ops/s
# Warmup Iteration  18: 178810.146 ops/s
# Warmup Iteration  19: 178350.194 ops/s
# Warmup Iteration  20: 178506.755 ops/s
# Warmup Iteration  21: 178354.907 ops/s
# Warmup Iteration  22: 178294.990 ops/s
# Warmup Iteration  23: 178588.650 ops/s
# Warmup Iteration  24: 178614.573 ops/s
# Warmup Iteration  25: 178686.129 ops/s
# Warmup Iteration  26: 178564.253 ops/s
# Warmup Iteration  27: 178818.519 ops/s
# Warmup Iteration  28: 178754.849 ops/s
# Warmup Iteration  29: 178402.047 ops/s
# Warmup Iteration  30: 178776.905 ops/s
Iteration   1: 178858.147 ops/s
Iteration   2: 178496.362 ops/s
Iteration   3: 178552.617 ops/s
Iteration   4: 178613.011 ops/s
Iteration   5: 178483.726 ops/s
Iteration   6: 178603.961 ops/s
Iteration   7: 177855.275 ops/s
Iteration   8: 176813.991 ops/s
Iteration   9: 177977.116 ops/s
Iteration  10: 178519.947 ops/s
Iteration  11: 178314.469 ops/s
Iteration  12: 178490.405 ops/s
Iteration  13: 178780.138 ops/s
Iteration  14: 178427.776 ops/s
Iteration  15: 178641.832 ops/s
Iteration  16: 178472.487 ops/s
Iteration  17: 178497.394 ops/s
Iteration  18: 178333.839 ops/s
Iteration  19: 178377.312 ops/s
Iteration  20: 178597.739 ops/s
Iteration  21: 178331.513 ops/s
Iteration  22: 178342.819 ops/s
Iteration  23: 178470.049 ops/s
Iteration  24: 178583.462 ops/s
Iteration  25: 178508.786 ops/s
Iteration  26: 178602.348 ops/s
Iteration  27: 178562.029 ops/s
Iteration  28: 178899.115 ops/s
Iteration  29: 178717.787 ops/s
Iteration  30: 178402.851 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_968._Benchmark.benchmark_Cluster_968":
  178437.610 ±(99.9%) 249.771 ops/s [Average]
  (min, avg, max) = (176813.991, 178437.610, 178899.115), stdev = 373.845
  CI (99.9%): [178187.839, 178687.381] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_968._Benchmark.benchmark_Cluster_968  thrpt   30  178437.610 ± 249.771  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_969._Benchmark.benchmark_Cluster_969$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_969._Benchmark.benchmark_Cluster_969

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 35022.966 ops/s
# Warmup Iteration   2: 93716.624 ops/s
# Warmup Iteration   3: 159963.395 ops/s
# Warmup Iteration   4: 158933.334 ops/s
# Warmup Iteration   5: 159488.079 ops/s
# Warmup Iteration   6: 126873.672 ops/s
# Warmup Iteration   7: 160243.122 ops/s
# Warmup Iteration   8: 160320.782 ops/s
# Warmup Iteration   9: 160241.042 ops/s
# Warmup Iteration  10: 160200.974 ops/s
# Warmup Iteration  11: 160344.031 ops/s
# Warmup Iteration  12: 160035.621 ops/s
# Warmup Iteration  13: 159882.883 ops/s
# Warmup Iteration  14: 159811.151 ops/s
# Warmup Iteration  15: 159981.994 ops/s
# Warmup Iteration  16: 159926.051 ops/s
# Warmup Iteration  17: 160210.216 ops/s
# Warmup Iteration  18: 159820.741 ops/s
# Warmup Iteration  19: 159816.337 ops/s
# Warmup Iteration  20: 159789.911 ops/s
# Warmup Iteration  21: 159845.674 ops/s
# Warmup Iteration  22: 160177.421 ops/s
# Warmup Iteration  23: 159519.824 ops/s
# Warmup Iteration  24: 159666.860 ops/s
# Warmup Iteration  25: 159759.149 ops/s
# Warmup Iteration  26: 160074.248 ops/s
# Warmup Iteration  27: 159685.745 ops/s
# Warmup Iteration  28: 159932.139 ops/s
# Warmup Iteration  29: 160138.682 ops/s
# Warmup Iteration  30: 159939.818 ops/s
Iteration   1: 159617.774 ops/s
Iteration   2: 159932.240 ops/s
Iteration   3: 159829.375 ops/s
Iteration   4: 159822.237 ops/s
Iteration   5: 160528.315 ops/s
Iteration   6: 160119.200 ops/s
Iteration   7: 159871.496 ops/s
Iteration   8: 160059.092 ops/s
Iteration   9: 159926.127 ops/s
Iteration  10: 159658.577 ops/s
Iteration  11: 159972.935 ops/s
Iteration  12: 160372.016 ops/s
Iteration  13: 160226.555 ops/s
Iteration  14: 160295.315 ops/s
Iteration  15: 159884.543 ops/s
Iteration  16: 159520.112 ops/s
Iteration  17: 160053.269 ops/s
Iteration  18: 160068.942 ops/s
Iteration  19: 159871.533 ops/s
Iteration  20: 159706.620 ops/s
Iteration  21: 159729.542 ops/s
Iteration  22: 160108.284 ops/s
Iteration  23: 159832.912 ops/s
Iteration  24: 159904.069 ops/s
Iteration  25: 160099.619 ops/s
Iteration  26: 159715.785 ops/s
Iteration  27: 159904.071 ops/s
Iteration  28: 159950.663 ops/s
Iteration  29: 159475.630 ops/s
Iteration  30: 159337.266 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_969._Benchmark.benchmark_Cluster_969":
  159913.137 ±(99.9%) 175.032 ops/s [Average]
  (min, avg, max) = (159337.266, 159913.137, 160528.315), stdev = 261.980
  CI (99.9%): [159738.105, 160088.169] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_969._Benchmark.benchmark_Cluster_969  thrpt   30  159913.137 ± 175.032  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_97._Benchmark.benchmark_Cluster_97$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_97._Benchmark.benchmark_Cluster_97

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53689.610 ops/s
# Warmup Iteration   2: 123683.761 ops/s
# Warmup Iteration   3: 181738.971 ops/s
# Warmup Iteration   4: 182923.309 ops/s
# Warmup Iteration   5: 182623.886 ops/s
# Warmup Iteration   6: 144173.102 ops/s
# Warmup Iteration   7: 183876.990 ops/s
# Warmup Iteration   8: 184167.286 ops/s
# Warmup Iteration   9: 184135.015 ops/s
# Warmup Iteration  10: 184086.415 ops/s
# Warmup Iteration  11: 183784.385 ops/s
# Warmup Iteration  12: 182930.692 ops/s
# Warmup Iteration  13: 184042.285 ops/s
# Warmup Iteration  14: 183787.750 ops/s
# Warmup Iteration  15: 183517.102 ops/s
# Warmup Iteration  16: 183635.189 ops/s
# Warmup Iteration  17: 183780.555 ops/s
# Warmup Iteration  18: 183268.658 ops/s
# Warmup Iteration  19: 183513.885 ops/s
# Warmup Iteration  20: 183370.971 ops/s
# Warmup Iteration  21: 183655.558 ops/s
# Warmup Iteration  22: 183865.160 ops/s
# Warmup Iteration  23: 183926.157 ops/s
# Warmup Iteration  24: 183597.362 ops/s
# Warmup Iteration  25: 183712.916 ops/s
# Warmup Iteration  26: 183238.410 ops/s
# Warmup Iteration  27: 183124.870 ops/s
# Warmup Iteration  28: 183607.728 ops/s
# Warmup Iteration  29: 183657.611 ops/s
# Warmup Iteration  30: 183859.281 ops/s
Iteration   1: 183778.074 ops/s
Iteration   2: 183917.910 ops/s
Iteration   3: 183967.220 ops/s
Iteration   4: 184162.877 ops/s
Iteration   5: 183654.159 ops/s
Iteration   6: 183565.944 ops/s
Iteration   7: 183841.982 ops/s
Iteration   8: 183320.648 ops/s
Iteration   9: 183507.922 ops/s
Iteration  10: 183722.701 ops/s
Iteration  11: 183444.323 ops/s
Iteration  12: 183941.940 ops/s
Iteration  13: 184343.752 ops/s
Iteration  14: 183920.197 ops/s
Iteration  15: 183563.925 ops/s
Iteration  16: 183292.587 ops/s
Iteration  17: 183683.438 ops/s
Iteration  18: 183636.205 ops/s
Iteration  19: 183716.235 ops/s
Iteration  20: 183508.577 ops/s
Iteration  21: 183561.307 ops/s
Iteration  22: 183247.909 ops/s
Iteration  23: 183708.257 ops/s
Iteration  24: 184053.950 ops/s
Iteration  25: 183994.189 ops/s
Iteration  26: 184012.086 ops/s
Iteration  27: 184264.569 ops/s
Iteration  28: 183239.044 ops/s
Iteration  29: 183273.423 ops/s
Iteration  30: 183764.098 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_97._Benchmark.benchmark_Cluster_97":
  183720.315 ±(99.9%) 200.479 ops/s [Average]
  (min, avg, max) = (183239.044, 183720.315, 184343.752), stdev = 300.068
  CI (99.9%): [183519.836, 183920.794] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_97._Benchmark.benchmark_Cluster_97  thrpt   30  183720.315 ± 200.479  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_970._Benchmark.benchmark_Cluster_970$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_970._Benchmark.benchmark_Cluster_970

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 27851.346 ops/s
# Warmup Iteration   2: 48835.924 ops/s
# Warmup Iteration   3: 64142.375 ops/s
# Warmup Iteration   4: 74239.151 ops/s
# Warmup Iteration   5: 73590.776 ops/s
# Warmup Iteration   6: 73935.522 ops/s
# Warmup Iteration   7: 73983.029 ops/s
# Warmup Iteration   8: 73869.721 ops/s
# Warmup Iteration   9: 73377.004 ops/s
# Warmup Iteration  10: 74019.870 ops/s
# Warmup Iteration  11: 57970.537 ops/s
# Warmup Iteration  12: 74231.229 ops/s
# Warmup Iteration  13: 74251.158 ops/s
# Warmup Iteration  14: 74424.853 ops/s
# Warmup Iteration  15: 74530.947 ops/s
# Warmup Iteration  16: 74237.170 ops/s
# Warmup Iteration  17: 73906.142 ops/s
# Warmup Iteration  18: 74137.503 ops/s
# Warmup Iteration  19: 74128.612 ops/s
# Warmup Iteration  20: 74275.097 ops/s
# Warmup Iteration  21: 74033.355 ops/s
# Warmup Iteration  22: 74118.862 ops/s
# Warmup Iteration  23: 74049.177 ops/s
# Warmup Iteration  24: 74096.499 ops/s
# Warmup Iteration  25: 74139.709 ops/s
# Warmup Iteration  26: 74113.542 ops/s
# Warmup Iteration  27: 74054.285 ops/s
# Warmup Iteration  28: 74238.631 ops/s
# Warmup Iteration  29: 74108.669 ops/s
# Warmup Iteration  30: 74109.607 ops/s
Iteration   1: 74418.671 ops/s
Iteration   2: 74307.340 ops/s
Iteration   3: 74022.264 ops/s
Iteration   4: 74007.104 ops/s
Iteration   5: 74144.051 ops/s
Iteration   6: 74411.938 ops/s
Iteration   7: 74194.723 ops/s
Iteration   8: 74298.939 ops/s
Iteration   9: 74322.256 ops/s
Iteration  10: 74410.242 ops/s
Iteration  11: 74050.536 ops/s
Iteration  12: 74108.768 ops/s
Iteration  13: 74147.485 ops/s
Iteration  14: 74280.112 ops/s
Iteration  15: 73842.789 ops/s
Iteration  16: 73894.721 ops/s
Iteration  17: 74321.266 ops/s
Iteration  18: 74091.156 ops/s
Iteration  19: 74197.434 ops/s
Iteration  20: 74182.030 ops/s
Iteration  21: 74246.826 ops/s
Iteration  22: 74360.985 ops/s
Iteration  23: 74367.935 ops/s
Iteration  24: 74335.866 ops/s
Iteration  25: 74395.979 ops/s
Iteration  26: 74253.529 ops/s
Iteration  27: 74236.403 ops/s
Iteration  28: 74189.748 ops/s
Iteration  29: 73987.314 ops/s
Iteration  30: 74195.300 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_970._Benchmark.benchmark_Cluster_970":
  74207.457 ±(99.9%) 103.335 ops/s [Average]
  (min, avg, max) = (73842.789, 74207.457, 74418.671), stdev = 154.666
  CI (99.9%): [74104.122, 74310.792] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_970._Benchmark.benchmark_Cluster_970  thrpt   30  74207.457 ± 103.335  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_971._Benchmark.benchmark_Cluster_971$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_971._Benchmark.benchmark_Cluster_971

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63218.221 ops/s
# Warmup Iteration   2: 120034.328 ops/s
# Warmup Iteration   3: 185670.149 ops/s
# Warmup Iteration   4: 183746.903 ops/s
# Warmup Iteration   5: 185675.545 ops/s
# Warmup Iteration   6: 176389.770 ops/s
# Warmup Iteration   7: 152486.066 ops/s
# Warmup Iteration   8: 185310.074 ops/s
# Warmup Iteration   9: 185668.181 ops/s
# Warmup Iteration  10: 185069.672 ops/s
# Warmup Iteration  11: 185350.346 ops/s
# Warmup Iteration  12: 185517.204 ops/s
# Warmup Iteration  13: 185497.727 ops/s
# Warmup Iteration  14: 185339.371 ops/s
# Warmup Iteration  15: 185416.628 ops/s
# Warmup Iteration  16: 185483.738 ops/s
# Warmup Iteration  17: 185171.196 ops/s
# Warmup Iteration  18: 185105.434 ops/s
# Warmup Iteration  19: 185077.257 ops/s
# Warmup Iteration  20: 185307.982 ops/s
# Warmup Iteration  21: 184665.871 ops/s
# Warmup Iteration  22: 184839.889 ops/s
# Warmup Iteration  23: 185329.003 ops/s
# Warmup Iteration  24: 184937.706 ops/s
# Warmup Iteration  25: 185049.668 ops/s
# Warmup Iteration  26: 185050.195 ops/s
# Warmup Iteration  27: 185275.433 ops/s
# Warmup Iteration  28: 185012.934 ops/s
# Warmup Iteration  29: 185019.498 ops/s
# Warmup Iteration  30: 185110.340 ops/s
Iteration   1: 184894.407 ops/s
Iteration   2: 184548.678 ops/s
Iteration   3: 185194.291 ops/s
Iteration   4: 185011.676 ops/s
Iteration   5: 185408.979 ops/s
Iteration   6: 185124.918 ops/s
Iteration   7: 185428.606 ops/s
Iteration   8: 185066.022 ops/s
Iteration   9: 185200.616 ops/s
Iteration  10: 184199.076 ops/s
Iteration  11: 184893.123 ops/s
Iteration  12: 184938.713 ops/s
Iteration  13: 184584.525 ops/s
Iteration  14: 184583.343 ops/s
Iteration  15: 184848.945 ops/s
Iteration  16: 185127.357 ops/s
Iteration  17: 184761.577 ops/s
Iteration  18: 184922.564 ops/s
Iteration  19: 184846.170 ops/s
Iteration  20: 184785.133 ops/s
Iteration  21: 184166.359 ops/s
Iteration  22: 185282.107 ops/s
Iteration  23: 185228.340 ops/s
Iteration  24: 185158.111 ops/s
Iteration  25: 184577.757 ops/s
Iteration  26: 184887.986 ops/s
Iteration  27: 184892.547 ops/s
Iteration  28: 185004.481 ops/s
Iteration  29: 185184.090 ops/s
Iteration  30: 185539.943 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_971._Benchmark.benchmark_Cluster_971":
  184943.015 ±(99.9%) 219.164 ops/s [Average]
  (min, avg, max) = (184166.359, 184943.015, 185539.943), stdev = 328.034
  CI (99.9%): [184723.851, 185162.179] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_971._Benchmark.benchmark_Cluster_971  thrpt   30  184943.015 ± 219.164  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_972._Benchmark.benchmark_Cluster_972$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_972._Benchmark.benchmark_Cluster_972

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55068.872 ops/s
# Warmup Iteration   2: 110515.388 ops/s
# Warmup Iteration   3: 165408.818 ops/s
# Warmup Iteration   4: 164125.498 ops/s
# Warmup Iteration   5: 165502.549 ops/s
# Warmup Iteration   6: 161844.178 ops/s
# Warmup Iteration   7: 134608.780 ops/s
# Warmup Iteration   8: 164838.706 ops/s
# Warmup Iteration   9: 165077.046 ops/s
# Warmup Iteration  10: 164915.884 ops/s
# Warmup Iteration  11: 164778.294 ops/s
# Warmup Iteration  12: 165331.611 ops/s
# Warmup Iteration  13: 165134.682 ops/s
# Warmup Iteration  14: 165404.260 ops/s
# Warmup Iteration  15: 164986.770 ops/s
# Warmup Iteration  16: 164699.330 ops/s
# Warmup Iteration  17: 165235.406 ops/s
# Warmup Iteration  18: 165051.951 ops/s
# Warmup Iteration  19: 165184.956 ops/s
# Warmup Iteration  20: 164919.806 ops/s
# Warmup Iteration  21: 165223.607 ops/s
# Warmup Iteration  22: 165157.533 ops/s
# Warmup Iteration  23: 165162.120 ops/s
# Warmup Iteration  24: 164973.223 ops/s
# Warmup Iteration  25: 165019.693 ops/s
# Warmup Iteration  26: 165132.884 ops/s
# Warmup Iteration  27: 165005.542 ops/s
# Warmup Iteration  28: 165364.265 ops/s
# Warmup Iteration  29: 165269.492 ops/s
# Warmup Iteration  30: 164750.420 ops/s
Iteration   1: 164446.934 ops/s
Iteration   2: 165243.226 ops/s
Iteration   3: 164681.465 ops/s
Iteration   4: 164961.960 ops/s
Iteration   5: 164781.517 ops/s
Iteration   6: 164907.741 ops/s
Iteration   7: 164640.164 ops/s
Iteration   8: 165171.434 ops/s
Iteration   9: 165069.300 ops/s
Iteration  10: 165563.443 ops/s
Iteration  11: 165139.492 ops/s
Iteration  12: 165296.403 ops/s
Iteration  13: 165217.368 ops/s
Iteration  14: 165594.273 ops/s
Iteration  15: 165413.562 ops/s
Iteration  16: 165583.407 ops/s
Iteration  17: 165230.664 ops/s
Iteration  18: 165081.223 ops/s
Iteration  19: 165281.722 ops/s
Iteration  20: 164656.688 ops/s
Iteration  21: 164890.738 ops/s
Iteration  22: 165131.578 ops/s
Iteration  23: 165527.908 ops/s
Iteration  24: 165375.497 ops/s
Iteration  25: 165495.964 ops/s
Iteration  26: 165012.485 ops/s
Iteration  27: 165654.439 ops/s
Iteration  28: 165460.851 ops/s
Iteration  29: 165522.015 ops/s
Iteration  30: 164868.659 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_972._Benchmark.benchmark_Cluster_972":
  165163.404 ±(99.9%) 218.650 ops/s [Average]
  (min, avg, max) = (164446.934, 165163.404, 165654.439), stdev = 327.265
  CI (99.9%): [164944.754, 165382.054] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_972._Benchmark.benchmark_Cluster_972  thrpt   30  165163.404 ± 218.650  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_973._Benchmark.benchmark_Cluster_973$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_973._Benchmark.benchmark_Cluster_973

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70582.438 ops/s
# Warmup Iteration   2: 146875.879 ops/s
# Warmup Iteration   3: 209466.059 ops/s
# Warmup Iteration   4: 210905.032 ops/s
# Warmup Iteration   5: 210228.681 ops/s
# Warmup Iteration   6: 166764.865 ops/s
# Warmup Iteration   7: 211112.179 ops/s
# Warmup Iteration   8: 211136.399 ops/s
# Warmup Iteration   9: 210979.606 ops/s
# Warmup Iteration  10: 211048.982 ops/s
# Warmup Iteration  11: 211478.527 ops/s
# Warmup Iteration  12: 211581.712 ops/s
# Warmup Iteration  13: 211464.382 ops/s
# Warmup Iteration  14: 211628.757 ops/s
# Warmup Iteration  15: 211381.321 ops/s
# Warmup Iteration  16: 211201.055 ops/s
# Warmup Iteration  17: 211031.119 ops/s
# Warmup Iteration  18: 211472.257 ops/s
# Warmup Iteration  19: 211062.657 ops/s
# Warmup Iteration  20: 210408.670 ops/s
# Warmup Iteration  21: 211196.976 ops/s
# Warmup Iteration  22: 210934.942 ops/s
# Warmup Iteration  23: 211092.601 ops/s
# Warmup Iteration  24: 210868.536 ops/s
# Warmup Iteration  25: 211139.435 ops/s
# Warmup Iteration  26: 211198.367 ops/s
# Warmup Iteration  27: 210755.365 ops/s
# Warmup Iteration  28: 210915.230 ops/s
# Warmup Iteration  29: 210780.864 ops/s
# Warmup Iteration  30: 210505.504 ops/s
Iteration   1: 210701.201 ops/s
Iteration   2: 210904.912 ops/s
Iteration   3: 210970.200 ops/s
Iteration   4: 210970.320 ops/s
Iteration   5: 210933.401 ops/s
Iteration   6: 211509.614 ops/s
Iteration   7: 210885.573 ops/s
Iteration   8: 211089.495 ops/s
Iteration   9: 211374.564 ops/s
Iteration  10: 210829.117 ops/s
Iteration  11: 211101.158 ops/s
Iteration  12: 210869.031 ops/s
Iteration  13: 211444.234 ops/s
Iteration  14: 210825.127 ops/s
Iteration  15: 211254.637 ops/s
Iteration  16: 211359.667 ops/s
Iteration  17: 211148.451 ops/s
Iteration  18: 211353.585 ops/s
Iteration  19: 210871.438 ops/s
Iteration  20: 210957.957 ops/s
Iteration  21: 210564.535 ops/s
Iteration  22: 210904.030 ops/s
Iteration  23: 210815.349 ops/s
Iteration  24: 210700.595 ops/s
Iteration  25: 210886.399 ops/s
Iteration  26: 210928.968 ops/s
Iteration  27: 211018.200 ops/s
Iteration  28: 210779.842 ops/s
Iteration  29: 210581.159 ops/s
Iteration  30: 211146.721 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_973._Benchmark.benchmark_Cluster_973":
  210989.316 ±(99.9%) 164.243 ops/s [Average]
  (min, avg, max) = (210564.535, 210989.316, 211509.614), stdev = 245.832
  CI (99.9%): [210825.073, 211153.559] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_973._Benchmark.benchmark_Cluster_973  thrpt   30  210989.316 ± 164.243  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_974._Benchmark.benchmark_Cluster_974$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_974._Benchmark.benchmark_Cluster_974

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 49741.408 ops/s
# Warmup Iteration   2: 101909.805 ops/s
# Warmup Iteration   3: 169619.274 ops/s
# Warmup Iteration   4: 168513.446 ops/s
# Warmup Iteration   5: 169511.902 ops/s
# Warmup Iteration   6: 169450.828 ops/s
# Warmup Iteration   7: 134889.144 ops/s
# Warmup Iteration   8: 169708.568 ops/s
# Warmup Iteration   9: 169365.542 ops/s
# Warmup Iteration  10: 169660.402 ops/s
# Warmup Iteration  11: 169607.247 ops/s
# Warmup Iteration  12: 169587.306 ops/s
# Warmup Iteration  13: 169526.442 ops/s
# Warmup Iteration  14: 169256.782 ops/s
# Warmup Iteration  15: 169598.958 ops/s
# Warmup Iteration  16: 169518.689 ops/s
# Warmup Iteration  17: 167880.072 ops/s
# Warmup Iteration  18: 167804.252 ops/s
# Warmup Iteration  19: 167948.288 ops/s
# Warmup Iteration  20: 167990.327 ops/s
# Warmup Iteration  21: 168026.423 ops/s
# Warmup Iteration  22: 167929.086 ops/s
# Warmup Iteration  23: 168177.037 ops/s
# Warmup Iteration  24: 167741.349 ops/s
# Warmup Iteration  25: 168037.653 ops/s
# Warmup Iteration  26: 168090.124 ops/s
# Warmup Iteration  27: 168232.735 ops/s
# Warmup Iteration  28: 168093.892 ops/s
# Warmup Iteration  29: 167970.415 ops/s
# Warmup Iteration  30: 167974.807 ops/s
Iteration   1: 167980.136 ops/s
Iteration   2: 168178.951 ops/s
Iteration   3: 167942.822 ops/s
Iteration   4: 168053.078 ops/s
Iteration   5: 168146.378 ops/s
Iteration   6: 168187.873 ops/s
Iteration   7: 167831.632 ops/s
Iteration   8: 168228.409 ops/s
Iteration   9: 167812.326 ops/s
Iteration  10: 168209.537 ops/s
Iteration  11: 168070.825 ops/s
Iteration  12: 168276.347 ops/s
Iteration  13: 167812.972 ops/s
Iteration  14: 168187.326 ops/s
Iteration  15: 167810.856 ops/s
Iteration  16: 168263.609 ops/s
Iteration  17: 168259.506 ops/s
Iteration  18: 168022.047 ops/s
Iteration  19: 168023.692 ops/s
Iteration  20: 167948.211 ops/s
Iteration  21: 168153.052 ops/s
Iteration  22: 167765.693 ops/s
Iteration  23: 168057.813 ops/s
Iteration  24: 168056.656 ops/s
Iteration  25: 168151.390 ops/s
Iteration  26: 167666.786 ops/s
Iteration  27: 167533.636 ops/s
Iteration  28: 167495.188 ops/s
Iteration  29: 167704.192 ops/s
Iteration  30: 167748.003 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_974._Benchmark.benchmark_Cluster_974":
  167985.965 ±(99.9%) 147.785 ops/s [Average]
  (min, avg, max) = (167495.188, 167985.965, 168276.347), stdev = 221.197
  CI (99.9%): [167838.180, 168133.749] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_974._Benchmark.benchmark_Cluster_974  thrpt   30  167985.965 ± 147.785  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_975._Benchmark.benchmark_Cluster_975$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_975._Benchmark.benchmark_Cluster_975

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 99958.514 ops/s
# Warmup Iteration   2: 105375.302 ops/s
# Warmup Iteration   3: 146856.427 ops/s
# Warmup Iteration   4: 154606.522 ops/s
# Warmup Iteration   5: 154892.824 ops/s
# Warmup Iteration   6: 154716.109 ops/s
# Warmup Iteration   7: 154632.366 ops/s
# Warmup Iteration   8: 154543.477 ops/s
# Warmup Iteration   9: 155163.297 ops/s
# Warmup Iteration  10: 155088.534 ops/s
# Warmup Iteration  11: 144158.050 ops/s
# Warmup Iteration  12: 133223.688 ops/s
# Warmup Iteration  13: 154817.561 ops/s
# Warmup Iteration  14: 154594.291 ops/s
# Warmup Iteration  15: 155116.826 ops/s
# Warmup Iteration  16: 154923.221 ops/s
# Warmup Iteration  17: 161341.885 ops/s
# Warmup Iteration  18: 161149.950 ops/s
# Warmup Iteration  19: 161446.297 ops/s
# Warmup Iteration  20: 160893.611 ops/s
# Warmup Iteration  21: 161031.063 ops/s
# Warmup Iteration  22: 161167.225 ops/s
# Warmup Iteration  23: 160975.711 ops/s
# Warmup Iteration  24: 160907.948 ops/s
# Warmup Iteration  25: 161232.576 ops/s
# Warmup Iteration  26: 161574.496 ops/s
# Warmup Iteration  27: 161461.236 ops/s
# Warmup Iteration  28: 160681.902 ops/s
# Warmup Iteration  29: 161160.344 ops/s
# Warmup Iteration  30: 160994.609 ops/s
Iteration   1: 160784.219 ops/s
Iteration   2: 161038.418 ops/s
Iteration   3: 161026.102 ops/s
Iteration   4: 161774.587 ops/s
Iteration   5: 160311.889 ops/s
Iteration   6: 161462.711 ops/s
Iteration   7: 161496.739 ops/s
Iteration   8: 160975.003 ops/s
Iteration   9: 161462.877 ops/s
Iteration  10: 161008.716 ops/s
Iteration  11: 160930.700 ops/s
Iteration  12: 161406.578 ops/s
Iteration  13: 161394.023 ops/s
Iteration  14: 160865.427 ops/s
Iteration  15: 161047.843 ops/s
Iteration  16: 161287.748 ops/s
Iteration  17: 160945.328 ops/s
Iteration  18: 161482.477 ops/s
Iteration  19: 160799.232 ops/s
Iteration  20: 161063.801 ops/s
Iteration  21: 161179.781 ops/s
Iteration  22: 160862.085 ops/s
Iteration  23: 160525.927 ops/s
Iteration  24: 161423.956 ops/s
Iteration  25: 161147.271 ops/s
Iteration  26: 160969.342 ops/s
Iteration  27: 161263.252 ops/s
Iteration  28: 161381.987 ops/s
Iteration  29: 161321.525 ops/s
Iteration  30: 161003.959 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_975._Benchmark.benchmark_Cluster_975":
  161121.450 ±(99.9%) 209.861 ops/s [Average]
  (min, avg, max) = (160311.889, 161121.450, 161774.587), stdev = 314.110
  CI (99.9%): [160911.590, 161331.311] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_975._Benchmark.benchmark_Cluster_975  thrpt   30  161121.450 ± 209.861  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_976._Benchmark.benchmark_Cluster_976$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_976._Benchmark.benchmark_Cluster_976

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65091.403 ops/s
# Warmup Iteration   2: 100554.613 ops/s
# Warmup Iteration   3: 147859.170 ops/s
# Warmup Iteration   4: 147884.797 ops/s
# Warmup Iteration   5: 147936.086 ops/s
# Warmup Iteration   6: 147774.265 ops/s
# Warmup Iteration   7: 115487.679 ops/s
# Warmup Iteration   8: 148018.269 ops/s
# Warmup Iteration   9: 148248.713 ops/s
# Warmup Iteration  10: 148282.764 ops/s
# Warmup Iteration  11: 147833.831 ops/s
# Warmup Iteration  12: 147485.490 ops/s
# Warmup Iteration  13: 148103.576 ops/s
# Warmup Iteration  14: 148181.527 ops/s
# Warmup Iteration  15: 148355.670 ops/s
# Warmup Iteration  16: 147883.973 ops/s
# Warmup Iteration  17: 151507.563 ops/s
# Warmup Iteration  18: 151404.798 ops/s
# Warmup Iteration  19: 151213.560 ops/s
# Warmup Iteration  20: 151531.796 ops/s
# Warmup Iteration  21: 151031.940 ops/s
# Warmup Iteration  22: 150946.314 ops/s
# Warmup Iteration  23: 151162.094 ops/s
# Warmup Iteration  24: 151259.610 ops/s
# Warmup Iteration  25: 151280.398 ops/s
# Warmup Iteration  26: 151619.385 ops/s
# Warmup Iteration  27: 151569.738 ops/s
# Warmup Iteration  28: 151287.254 ops/s
# Warmup Iteration  29: 151638.391 ops/s
# Warmup Iteration  30: 151420.084 ops/s
Iteration   1: 151422.576 ops/s
Iteration   2: 151650.320 ops/s
Iteration   3: 151573.306 ops/s
Iteration   4: 150823.128 ops/s
Iteration   5: 150704.511 ops/s
Iteration   6: 150996.402 ops/s
Iteration   7: 150819.000 ops/s
Iteration   8: 151770.330 ops/s
Iteration   9: 151392.846 ops/s
Iteration  10: 151567.962 ops/s
Iteration  11: 151579.034 ops/s
Iteration  12: 151017.609 ops/s
Iteration  13: 151338.041 ops/s
Iteration  14: 151532.528 ops/s
Iteration  15: 151638.596 ops/s
Iteration  16: 151415.484 ops/s
Iteration  17: 151499.100 ops/s
Iteration  18: 151377.259 ops/s
Iteration  19: 151798.059 ops/s
Iteration  20: 151639.161 ops/s
Iteration  21: 151545.553 ops/s
Iteration  22: 151434.363 ops/s
Iteration  23: 151310.776 ops/s
Iteration  24: 150673.366 ops/s
Iteration  25: 151130.763 ops/s
Iteration  26: 151088.904 ops/s
Iteration  27: 151538.461 ops/s
Iteration  28: 151124.324 ops/s
Iteration  29: 151210.042 ops/s
Iteration  30: 151108.181 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_976._Benchmark.benchmark_Cluster_976":
  151323.999 ±(99.9%) 208.677 ops/s [Average]
  (min, avg, max) = (150673.366, 151323.999, 151798.059), stdev = 312.339
  CI (99.9%): [151115.322, 151532.677] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_976._Benchmark.benchmark_Cluster_976  thrpt   30  151323.999 ± 208.677  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_977._Benchmark.benchmark_Cluster_977$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_977._Benchmark.benchmark_Cluster_977

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77964.926 ops/s
# Warmup Iteration   2: 90711.415 ops/s
# Warmup Iteration   3: 147314.484 ops/s
# Warmup Iteration   4: 148967.129 ops/s
# Warmup Iteration   5: 147945.912 ops/s
# Warmup Iteration   6: 148891.762 ops/s
# Warmup Iteration   7: 148617.144 ops/s
# Warmup Iteration   8: 148530.653 ops/s
# Warmup Iteration   9: 145511.281 ops/s
# Warmup Iteration  10: 116204.318 ops/s
# Warmup Iteration  11: 149164.330 ops/s
# Warmup Iteration  12: 148882.533 ops/s
# Warmup Iteration  13: 148805.675 ops/s
# Warmup Iteration  14: 149445.849 ops/s
# Warmup Iteration  15: 148874.904 ops/s
# Warmup Iteration  16: 148756.809 ops/s
# Warmup Iteration  17: 152810.104 ops/s
# Warmup Iteration  18: 152885.912 ops/s
# Warmup Iteration  19: 152510.531 ops/s
# Warmup Iteration  20: 152775.969 ops/s
# Warmup Iteration  21: 153172.708 ops/s
# Warmup Iteration  22: 152880.757 ops/s
# Warmup Iteration  23: 153373.369 ops/s
# Warmup Iteration  24: 152939.758 ops/s
# Warmup Iteration  25: 152686.929 ops/s
# Warmup Iteration  26: 152763.563 ops/s
# Warmup Iteration  27: 152543.181 ops/s
# Warmup Iteration  28: 152828.329 ops/s
# Warmup Iteration  29: 152841.469 ops/s
# Warmup Iteration  30: 152696.149 ops/s
Iteration   1: 152680.153 ops/s
Iteration   2: 153074.709 ops/s
Iteration   3: 153099.549 ops/s
Iteration   4: 153236.218 ops/s
Iteration   5: 152753.098 ops/s
Iteration   6: 152830.834 ops/s
Iteration   7: 152770.521 ops/s
Iteration   8: 153019.434 ops/s
Iteration   9: 152708.103 ops/s
Iteration  10: 152748.249 ops/s
Iteration  11: 152873.378 ops/s
Iteration  12: 152837.671 ops/s
Iteration  13: 152920.247 ops/s
Iteration  14: 152960.030 ops/s
Iteration  15: 152850.646 ops/s
Iteration  16: 152909.314 ops/s
Iteration  17: 152930.359 ops/s
Iteration  18: 152948.756 ops/s
Iteration  19: 152691.537 ops/s
Iteration  20: 152927.551 ops/s
Iteration  21: 152690.970 ops/s
Iteration  22: 152873.214 ops/s
Iteration  23: 152864.062 ops/s
Iteration  24: 152701.406 ops/s
Iteration  25: 152955.988 ops/s
Iteration  26: 153059.682 ops/s
Iteration  27: 152856.275 ops/s
Iteration  28: 153227.947 ops/s
Iteration  29: 152964.393 ops/s
Iteration  30: 153125.870 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_977._Benchmark.benchmark_Cluster_977":
  152903.005 ±(99.9%) 102.738 ops/s [Average]
  (min, avg, max) = (152680.153, 152903.005, 153236.218), stdev = 153.773
  CI (99.9%): [152800.268, 153005.743] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_977._Benchmark.benchmark_Cluster_977  thrpt   30  152903.005 ± 102.738  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_978._Benchmark.benchmark_Cluster_978$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_978._Benchmark.benchmark_Cluster_978

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66312.732 ops/s
# Warmup Iteration   2: 161546.077 ops/s
# Warmup Iteration   3: 196063.851 ops/s
# Warmup Iteration   4: 196775.225 ops/s
# Warmup Iteration   5: 156031.506 ops/s
# Warmup Iteration   6: 196719.276 ops/s
# Warmup Iteration   7: 197644.851 ops/s
# Warmup Iteration   8: 197422.745 ops/s
# Warmup Iteration   9: 197446.244 ops/s
# Warmup Iteration  10: 197100.459 ops/s
# Warmup Iteration  11: 195974.070 ops/s
# Warmup Iteration  12: 196977.468 ops/s
# Warmup Iteration  13: 196762.471 ops/s
# Warmup Iteration  14: 197540.260 ops/s
# Warmup Iteration  15: 196957.127 ops/s
# Warmup Iteration  16: 197051.048 ops/s
# Warmup Iteration  17: 197363.242 ops/s
# Warmup Iteration  18: 195940.149 ops/s
# Warmup Iteration  19: 196311.341 ops/s
# Warmup Iteration  20: 196670.365 ops/s
# Warmup Iteration  21: 196776.339 ops/s
# Warmup Iteration  22: 196818.281 ops/s
# Warmup Iteration  23: 197213.848 ops/s
# Warmup Iteration  24: 197147.513 ops/s
# Warmup Iteration  25: 197108.625 ops/s
# Warmup Iteration  26: 196909.609 ops/s
# Warmup Iteration  27: 196743.767 ops/s
# Warmup Iteration  28: 196940.317 ops/s
# Warmup Iteration  29: 196870.252 ops/s
# Warmup Iteration  30: 196950.450 ops/s
Iteration   1: 196702.762 ops/s
Iteration   2: 196811.585 ops/s
Iteration   3: 196763.087 ops/s
Iteration   4: 197453.986 ops/s
Iteration   5: 197241.690 ops/s
Iteration   6: 196868.460 ops/s
Iteration   7: 197012.981 ops/s
Iteration   8: 196770.807 ops/s
Iteration   9: 196933.484 ops/s
Iteration  10: 196505.013 ops/s
Iteration  11: 196755.040 ops/s
Iteration  12: 196770.128 ops/s
Iteration  13: 196576.492 ops/s
Iteration  14: 196992.419 ops/s
Iteration  15: 197110.687 ops/s
Iteration  16: 197042.628 ops/s
Iteration  17: 197169.923 ops/s
Iteration  18: 196147.512 ops/s
Iteration  19: 196386.546 ops/s
Iteration  20: 196844.231 ops/s
Iteration  21: 196481.527 ops/s
Iteration  22: 195594.092 ops/s
Iteration  23: 197049.138 ops/s
Iteration  24: 196863.355 ops/s
Iteration  25: 197172.187 ops/s
Iteration  26: 197131.639 ops/s
Iteration  27: 197251.010 ops/s
Iteration  28: 196985.462 ops/s
Iteration  29: 197229.949 ops/s
Iteration  30: 197277.788 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_978._Benchmark.benchmark_Cluster_978":
  196863.187 ±(99.9%) 253.399 ops/s [Average]
  (min, avg, max) = (195594.092, 196863.187, 197453.986), stdev = 379.275
  CI (99.9%): [196609.788, 197116.586] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_978._Benchmark.benchmark_Cluster_978  thrpt   30  196863.187 ± 253.399  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_979._Benchmark.benchmark_Cluster_979$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_979._Benchmark.benchmark_Cluster_979

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80827.829 ops/s
# Warmup Iteration   2: 134371.495 ops/s
# Warmup Iteration   3: 193876.018 ops/s
# Warmup Iteration   4: 192487.083 ops/s
# Warmup Iteration   5: 193566.065 ops/s
# Warmup Iteration   6: 193661.109 ops/s
# Warmup Iteration   7: 152382.533 ops/s
# Warmup Iteration   8: 193692.915 ops/s
# Warmup Iteration   9: 193793.716 ops/s
# Warmup Iteration  10: 193529.154 ops/s
# Warmup Iteration  11: 193673.088 ops/s
# Warmup Iteration  12: 193695.718 ops/s
# Warmup Iteration  13: 194043.506 ops/s
# Warmup Iteration  14: 193888.580 ops/s
# Warmup Iteration  15: 193582.834 ops/s
# Warmup Iteration  16: 193704.498 ops/s
# Warmup Iteration  17: 193276.502 ops/s
# Warmup Iteration  18: 192759.041 ops/s
# Warmup Iteration  19: 192962.508 ops/s
# Warmup Iteration  20: 193045.147 ops/s
# Warmup Iteration  21: 193058.690 ops/s
# Warmup Iteration  22: 192995.329 ops/s
# Warmup Iteration  23: 193076.507 ops/s
# Warmup Iteration  24: 192916.128 ops/s
# Warmup Iteration  25: 192652.698 ops/s
# Warmup Iteration  26: 192932.131 ops/s
# Warmup Iteration  27: 192947.374 ops/s
# Warmup Iteration  28: 193055.376 ops/s
# Warmup Iteration  29: 192862.793 ops/s
# Warmup Iteration  30: 192834.431 ops/s
Iteration   1: 192658.121 ops/s
Iteration   2: 193055.156 ops/s
Iteration   3: 192903.348 ops/s
Iteration   4: 192972.264 ops/s
Iteration   5: 193012.972 ops/s
Iteration   6: 192948.970 ops/s
Iteration   7: 193021.044 ops/s
Iteration   8: 192658.318 ops/s
Iteration   9: 192918.126 ops/s
Iteration  10: 192537.046 ops/s
Iteration  11: 192528.611 ops/s
Iteration  12: 192480.133 ops/s
Iteration  13: 193104.954 ops/s
Iteration  14: 192815.680 ops/s
Iteration  15: 193040.556 ops/s
Iteration  16: 192963.164 ops/s
Iteration  17: 193162.738 ops/s
Iteration  18: 193002.511 ops/s
Iteration  19: 192643.028 ops/s
Iteration  20: 192963.612 ops/s
Iteration  21: 192962.085 ops/s
Iteration  22: 193078.217 ops/s
Iteration  23: 192794.055 ops/s
Iteration  24: 193174.246 ops/s
Iteration  25: 192953.980 ops/s
Iteration  26: 192972.491 ops/s
Iteration  27: 193044.951 ops/s
Iteration  28: 193154.099 ops/s
Iteration  29: 193187.926 ops/s
Iteration  30: 193145.829 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_979._Benchmark.benchmark_Cluster_979":
  192928.608 ±(99.9%) 134.734 ops/s [Average]
  (min, avg, max) = (192480.133, 192928.608, 193187.926), stdev = 201.664
  CI (99.9%): [192793.874, 193063.342] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_979._Benchmark.benchmark_Cluster_979  thrpt   30  192928.608 ± 134.734  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_98._Benchmark.benchmark_Cluster_98$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_98._Benchmark.benchmark_Cluster_98

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48912.572 ops/s
# Warmup Iteration   2: 107277.293 ops/s
# Warmup Iteration   3: 151045.944 ops/s
# Warmup Iteration   4: 150423.298 ops/s
# Warmup Iteration   5: 151854.453 ops/s
# Warmup Iteration   6: 119652.246 ops/s
# Warmup Iteration   7: 150656.863 ops/s
# Warmup Iteration   8: 151128.687 ops/s
# Warmup Iteration   9: 149325.006 ops/s
# Warmup Iteration  10: 150200.230 ops/s
# Warmup Iteration  11: 150737.029 ops/s
# Warmup Iteration  12: 150660.428 ops/s
# Warmup Iteration  13: 150982.320 ops/s
# Warmup Iteration  14: 150568.702 ops/s
# Warmup Iteration  15: 150839.140 ops/s
# Warmup Iteration  16: 150972.508 ops/s
# Warmup Iteration  17: 152151.270 ops/s
# Warmup Iteration  18: 152311.569 ops/s
# Warmup Iteration  19: 151411.615 ops/s
# Warmup Iteration  20: 151706.235 ops/s
# Warmup Iteration  21: 152275.770 ops/s
# Warmup Iteration  22: 152214.936 ops/s
# Warmup Iteration  23: 151827.998 ops/s
# Warmup Iteration  24: 151869.006 ops/s
# Warmup Iteration  25: 151941.193 ops/s
# Warmup Iteration  26: 152366.066 ops/s
# Warmup Iteration  27: 152259.364 ops/s
# Warmup Iteration  28: 151967.724 ops/s
# Warmup Iteration  29: 151636.690 ops/s
# Warmup Iteration  30: 152169.801 ops/s
Iteration   1: 152281.553 ops/s
Iteration   2: 152196.790 ops/s
Iteration   3: 152040.333 ops/s
Iteration   4: 151073.146 ops/s
Iteration   5: 152138.600 ops/s
Iteration   6: 152239.876 ops/s
Iteration   7: 152396.932 ops/s
Iteration   8: 151256.032 ops/s
Iteration   9: 151345.284 ops/s
Iteration  10: 151285.681 ops/s
Iteration  11: 151253.512 ops/s
Iteration  12: 152650.576 ops/s
Iteration  13: 152410.338 ops/s
Iteration  14: 152329.772 ops/s
Iteration  15: 152208.650 ops/s
Iteration  16: 152213.171 ops/s
Iteration  17: 152413.906 ops/s
Iteration  18: 151376.180 ops/s
Iteration  19: 151879.053 ops/s
Iteration  20: 152113.187 ops/s
Iteration  21: 150908.602 ops/s
Iteration  22: 152558.081 ops/s
Iteration  23: 152343.418 ops/s
Iteration  24: 152355.064 ops/s
Iteration  25: 151470.534 ops/s
Iteration  26: 150940.031 ops/s
Iteration  27: 151674.679 ops/s
Iteration  28: 151376.621 ops/s
Iteration  29: 152226.151 ops/s
Iteration  30: 151621.434 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_98._Benchmark.benchmark_Cluster_98":
  151885.906 ±(99.9%) 352.851 ops/s [Average]
  (min, avg, max) = (150908.602, 151885.906, 152650.576), stdev = 528.131
  CI (99.9%): [151533.055, 152238.757] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_98._Benchmark.benchmark_Cluster_98  thrpt   30  151885.906 ± 352.851  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_980._Benchmark.benchmark_Cluster_980$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_980._Benchmark.benchmark_Cluster_980

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80708.824 ops/s
# Warmup Iteration   2: 137305.600 ops/s
# Warmup Iteration   3: 203764.988 ops/s
# Warmup Iteration   4: 202832.098 ops/s
# Warmup Iteration   5: 203703.076 ops/s
# Warmup Iteration   6: 203570.594 ops/s
# Warmup Iteration   7: 174847.229 ops/s
# Warmup Iteration   8: 191020.393 ops/s
# Warmup Iteration   9: 203631.437 ops/s
# Warmup Iteration  10: 203878.108 ops/s
# Warmup Iteration  11: 204124.337 ops/s
# Warmup Iteration  12: 204040.936 ops/s
# Warmup Iteration  13: 204215.592 ops/s
# Warmup Iteration  14: 204224.480 ops/s
# Warmup Iteration  15: 203850.377 ops/s
# Warmup Iteration  16: 203703.228 ops/s
# Warmup Iteration  17: 203893.223 ops/s
# Warmup Iteration  18: 203593.206 ops/s
# Warmup Iteration  19: 203727.748 ops/s
# Warmup Iteration  20: 203779.970 ops/s
# Warmup Iteration  21: 203764.306 ops/s
# Warmup Iteration  22: 203730.596 ops/s
# Warmup Iteration  23: 203322.046 ops/s
# Warmup Iteration  24: 202858.860 ops/s
# Warmup Iteration  25: 203434.042 ops/s
# Warmup Iteration  26: 203628.078 ops/s
# Warmup Iteration  27: 203729.826 ops/s
# Warmup Iteration  28: 203294.379 ops/s
# Warmup Iteration  29: 203557.388 ops/s
# Warmup Iteration  30: 203425.134 ops/s
Iteration   1: 202682.159 ops/s
Iteration   2: 203387.077 ops/s
Iteration   3: 203621.132 ops/s
Iteration   4: 203440.038 ops/s
Iteration   5: 203442.003 ops/s
Iteration   6: 203242.311 ops/s
Iteration   7: 203481.444 ops/s
Iteration   8: 203496.414 ops/s
Iteration   9: 203814.664 ops/s
Iteration  10: 203417.523 ops/s
Iteration  11: 203862.812 ops/s
Iteration  12: 203599.701 ops/s
Iteration  13: 204098.156 ops/s
Iteration  14: 203900.333 ops/s
Iteration  15: 203773.544 ops/s
Iteration  16: 203223.825 ops/s
Iteration  17: 203096.122 ops/s
Iteration  18: 203478.655 ops/s
Iteration  19: 203768.851 ops/s
Iteration  20: 204015.486 ops/s
Iteration  21: 203809.019 ops/s
Iteration  22: 204142.428 ops/s
Iteration  23: 204243.573 ops/s
Iteration  24: 203640.760 ops/s
Iteration  25: 204212.134 ops/s
Iteration  26: 203801.790 ops/s
Iteration  27: 204040.270 ops/s
Iteration  28: 203515.037 ops/s
Iteration  29: 203827.569 ops/s
Iteration  30: 203369.153 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_980._Benchmark.benchmark_Cluster_980":
  203648.133 ±(99.9%) 236.230 ops/s [Average]
  (min, avg, max) = (202682.159, 203648.133, 204243.573), stdev = 353.578
  CI (99.9%): [203411.903, 203884.363] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_980._Benchmark.benchmark_Cluster_980  thrpt   30  203648.133 ± 236.230  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_981._Benchmark.benchmark_Cluster_981$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_981._Benchmark.benchmark_Cluster_981

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79725.541 ops/s
# Warmup Iteration   2: 126635.949 ops/s
# Warmup Iteration   3: 185938.580 ops/s
# Warmup Iteration   4: 185354.668 ops/s
# Warmup Iteration   5: 185538.402 ops/s
# Warmup Iteration   6: 185377.302 ops/s
# Warmup Iteration   7: 158397.734 ops/s
# Warmup Iteration   8: 174071.925 ops/s
# Warmup Iteration   9: 186912.428 ops/s
# Warmup Iteration  10: 186540.432 ops/s
# Warmup Iteration  11: 186504.861 ops/s
# Warmup Iteration  12: 186325.952 ops/s
# Warmup Iteration  13: 186560.294 ops/s
# Warmup Iteration  14: 186447.207 ops/s
# Warmup Iteration  15: 186347.571 ops/s
# Warmup Iteration  16: 186287.535 ops/s
# Warmup Iteration  17: 189663.913 ops/s
# Warmup Iteration  18: 189428.811 ops/s
# Warmup Iteration  19: 189988.179 ops/s
# Warmup Iteration  20: 189438.397 ops/s
# Warmup Iteration  21: 189162.486 ops/s
# Warmup Iteration  22: 189600.535 ops/s
# Warmup Iteration  23: 189158.786 ops/s
# Warmup Iteration  24: 189044.144 ops/s
# Warmup Iteration  25: 188451.627 ops/s
# Warmup Iteration  26: 189372.279 ops/s
# Warmup Iteration  27: 189053.314 ops/s
# Warmup Iteration  28: 189494.742 ops/s
# Warmup Iteration  29: 189847.969 ops/s
# Warmup Iteration  30: 189164.479 ops/s
Iteration   1: 188880.338 ops/s
Iteration   2: 189222.168 ops/s
Iteration   3: 188425.003 ops/s
Iteration   4: 188193.229 ops/s
Iteration   5: 189993.234 ops/s
Iteration   6: 189935.930 ops/s
Iteration   7: 189489.433 ops/s
Iteration   8: 190166.762 ops/s
Iteration   9: 189302.393 ops/s
Iteration  10: 189101.312 ops/s
Iteration  11: 189155.913 ops/s
Iteration  12: 188908.974 ops/s
Iteration  13: 189899.459 ops/s
Iteration  14: 189769.206 ops/s
Iteration  15: 189468.046 ops/s
Iteration  16: 189205.008 ops/s
Iteration  17: 189445.790 ops/s
Iteration  18: 189289.771 ops/s
Iteration  19: 189512.269 ops/s
Iteration  20: 189005.874 ops/s
Iteration  21: 189521.777 ops/s
Iteration  22: 189439.985 ops/s
Iteration  23: 189378.088 ops/s
Iteration  24: 190378.077 ops/s
Iteration  25: 189355.497 ops/s
Iteration  26: 189649.749 ops/s
Iteration  27: 189342.185 ops/s
Iteration  28: 189561.001 ops/s
Iteration  29: 189169.395 ops/s
Iteration  30: 189455.929 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_981._Benchmark.benchmark_Cluster_981":
  189387.393 ±(99.9%) 305.725 ops/s [Average]
  (min, avg, max) = (188193.229, 189387.393, 190378.077), stdev = 457.595
  CI (99.9%): [189081.668, 189693.118] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_981._Benchmark.benchmark_Cluster_981  thrpt   30  189387.393 ± 305.725  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_982._Benchmark.benchmark_Cluster_982$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_982._Benchmark.benchmark_Cluster_982

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73666.213 ops/s
# Warmup Iteration   2: 165539.577 ops/s
# Warmup Iteration   3: 209376.485 ops/s
# Warmup Iteration   4: 210643.501 ops/s
# Warmup Iteration   5: 168752.210 ops/s
# Warmup Iteration   6: 211188.222 ops/s
# Warmup Iteration   7: 211353.996 ops/s
# Warmup Iteration   8: 210958.815 ops/s
# Warmup Iteration   9: 211365.268 ops/s
# Warmup Iteration  10: 211396.588 ops/s
# Warmup Iteration  11: 210843.383 ops/s
# Warmup Iteration  12: 211254.686 ops/s
# Warmup Iteration  13: 210624.669 ops/s
# Warmup Iteration  14: 211135.832 ops/s
# Warmup Iteration  15: 210382.818 ops/s
# Warmup Iteration  16: 210459.408 ops/s
# Warmup Iteration  17: 211229.822 ops/s
# Warmup Iteration  18: 210734.250 ops/s
# Warmup Iteration  19: 210325.775 ops/s
# Warmup Iteration  20: 211000.664 ops/s
# Warmup Iteration  21: 210715.174 ops/s
# Warmup Iteration  22: 210219.750 ops/s
# Warmup Iteration  23: 210019.093 ops/s
# Warmup Iteration  24: 210643.214 ops/s
# Warmup Iteration  25: 210614.344 ops/s
# Warmup Iteration  26: 210677.793 ops/s
# Warmup Iteration  27: 210506.954 ops/s
# Warmup Iteration  28: 210813.723 ops/s
# Warmup Iteration  29: 210855.779 ops/s
# Warmup Iteration  30: 211201.618 ops/s
Iteration   1: 210963.995 ops/s
Iteration   2: 211299.824 ops/s
Iteration   3: 210803.573 ops/s
Iteration   4: 211644.594 ops/s
Iteration   5: 210401.928 ops/s
Iteration   6: 211415.572 ops/s
Iteration   7: 211319.914 ops/s
Iteration   8: 211070.509 ops/s
Iteration   9: 210764.995 ops/s
Iteration  10: 210611.311 ops/s
Iteration  11: 210504.412 ops/s
Iteration  12: 211084.453 ops/s
Iteration  13: 210888.857 ops/s
Iteration  14: 211021.704 ops/s
Iteration  15: 210661.894 ops/s
Iteration  16: 210415.756 ops/s
Iteration  17: 210328.845 ops/s
Iteration  18: 210858.756 ops/s
Iteration  19: 211542.577 ops/s
Iteration  20: 211053.671 ops/s
Iteration  21: 210964.938 ops/s
Iteration  22: 210784.379 ops/s
Iteration  23: 210974.780 ops/s
Iteration  24: 210727.593 ops/s
Iteration  25: 211110.850 ops/s
Iteration  26: 211141.041 ops/s
Iteration  27: 211005.944 ops/s
Iteration  28: 210942.562 ops/s
Iteration  29: 210898.963 ops/s
Iteration  30: 211548.543 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_982._Benchmark.benchmark_Cluster_982":
  210958.558 ±(99.9%) 225.234 ops/s [Average]
  (min, avg, max) = (210328.845, 210958.558, 211644.594), stdev = 337.120
  CI (99.9%): [210733.324, 211183.792] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_982._Benchmark.benchmark_Cluster_982  thrpt   30  210958.558 ± 225.234  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_983._Benchmark.benchmark_Cluster_983$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_983._Benchmark.benchmark_Cluster_983

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67146.494 ops/s
# Warmup Iteration   2: 131241.625 ops/s
# Warmup Iteration   3: 196100.597 ops/s
# Warmup Iteration   4: 194642.268 ops/s
# Warmup Iteration   5: 195809.698 ops/s
# Warmup Iteration   6: 172869.039 ops/s
# Warmup Iteration   7: 175001.491 ops/s
# Warmup Iteration   8: 195640.330 ops/s
# Warmup Iteration   9: 196142.573 ops/s
# Warmup Iteration  10: 195891.800 ops/s
# Warmup Iteration  11: 195909.886 ops/s
# Warmup Iteration  12: 195980.310 ops/s
# Warmup Iteration  13: 195695.100 ops/s
# Warmup Iteration  14: 195153.964 ops/s
# Warmup Iteration  15: 195348.562 ops/s
# Warmup Iteration  16: 195472.806 ops/s
# Warmup Iteration  17: 195845.432 ops/s
# Warmup Iteration  18: 195990.730 ops/s
# Warmup Iteration  19: 196239.085 ops/s
# Warmup Iteration  20: 195814.263 ops/s
# Warmup Iteration  21: 195534.652 ops/s
# Warmup Iteration  22: 195793.482 ops/s
# Warmup Iteration  23: 195925.558 ops/s
# Warmup Iteration  24: 195682.306 ops/s
# Warmup Iteration  25: 195567.510 ops/s
# Warmup Iteration  26: 195907.220 ops/s
# Warmup Iteration  27: 196110.585 ops/s
# Warmup Iteration  28: 195530.726 ops/s
# Warmup Iteration  29: 196017.695 ops/s
# Warmup Iteration  30: 196268.239 ops/s
Iteration   1: 195486.467 ops/s
Iteration   2: 196387.821 ops/s
Iteration   3: 195956.323 ops/s
Iteration   4: 196234.285 ops/s
Iteration   5: 196112.742 ops/s
Iteration   6: 196063.051 ops/s
Iteration   7: 195798.040 ops/s
Iteration   8: 195729.624 ops/s
Iteration   9: 195825.871 ops/s
Iteration  10: 196168.878 ops/s
Iteration  11: 196281.996 ops/s
Iteration  12: 195947.761 ops/s
Iteration  13: 195868.989 ops/s
Iteration  14: 195263.509 ops/s
Iteration  15: 195307.419 ops/s
Iteration  16: 196354.864 ops/s
Iteration  17: 196339.239 ops/s
Iteration  18: 196290.647 ops/s
Iteration  19: 196256.510 ops/s
Iteration  20: 196455.343 ops/s
Iteration  21: 195909.236 ops/s
Iteration  22: 196524.535 ops/s
Iteration  23: 196343.481 ops/s
Iteration  24: 196766.119 ops/s
Iteration  25: 196139.476 ops/s
Iteration  26: 196070.704 ops/s
Iteration  27: 195443.829 ops/s
Iteration  28: 195701.860 ops/s
Iteration  29: 195569.480 ops/s
Iteration  30: 195650.777 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_983._Benchmark.benchmark_Cluster_983":
  196008.296 ±(99.9%) 251.111 ops/s [Average]
  (min, avg, max) = (195263.509, 196008.296, 196766.119), stdev = 375.851
  CI (99.9%): [195757.185, 196259.407] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_983._Benchmark.benchmark_Cluster_983  thrpt   30  196008.296 ± 251.111  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_984._Benchmark.benchmark_Cluster_984$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_984._Benchmark.benchmark_Cluster_984

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53769.068 ops/s
# Warmup Iteration   2: 125958.298 ops/s
# Warmup Iteration   3: 183817.139 ops/s
# Warmup Iteration   4: 185362.542 ops/s
# Warmup Iteration   5: 185007.890 ops/s
# Warmup Iteration   6: 146474.922 ops/s
# Warmup Iteration   7: 185581.728 ops/s
# Warmup Iteration   8: 185099.060 ops/s
# Warmup Iteration   9: 184715.175 ops/s
# Warmup Iteration  10: 184980.136 ops/s
# Warmup Iteration  11: 185024.505 ops/s
# Warmup Iteration  12: 185350.373 ops/s
# Warmup Iteration  13: 185018.394 ops/s
# Warmup Iteration  14: 184854.389 ops/s
# Warmup Iteration  15: 185870.378 ops/s
# Warmup Iteration  16: 185223.834 ops/s
# Warmup Iteration  17: 184846.441 ops/s
# Warmup Iteration  18: 184747.072 ops/s
# Warmup Iteration  19: 184793.863 ops/s
# Warmup Iteration  20: 184869.604 ops/s
# Warmup Iteration  21: 184402.234 ops/s
# Warmup Iteration  22: 184477.462 ops/s
# Warmup Iteration  23: 185306.084 ops/s
# Warmup Iteration  24: 185299.915 ops/s
# Warmup Iteration  25: 185448.685 ops/s
# Warmup Iteration  26: 185446.452 ops/s
# Warmup Iteration  27: 185602.028 ops/s
# Warmup Iteration  28: 185521.833 ops/s
# Warmup Iteration  29: 185768.079 ops/s
# Warmup Iteration  30: 185604.133 ops/s
Iteration   1: 184886.181 ops/s
Iteration   2: 184045.123 ops/s
Iteration   3: 184983.158 ops/s
Iteration   4: 184721.620 ops/s
Iteration   5: 185210.177 ops/s
Iteration   6: 184703.179 ops/s
Iteration   7: 184995.418 ops/s
Iteration   8: 184446.231 ops/s
Iteration   9: 184463.962 ops/s
Iteration  10: 184552.078 ops/s
Iteration  11: 184952.497 ops/s
Iteration  12: 185118.015 ops/s
Iteration  13: 185603.746 ops/s
Iteration  14: 184802.408 ops/s
Iteration  15: 184828.112 ops/s
Iteration  16: 185216.490 ops/s
Iteration  17: 185027.727 ops/s
Iteration  18: 184925.762 ops/s
Iteration  19: 184822.402 ops/s
Iteration  20: 184263.322 ops/s
Iteration  21: 185321.713 ops/s
Iteration  22: 185101.251 ops/s
Iteration  23: 185051.681 ops/s
Iteration  24: 184285.076 ops/s
Iteration  25: 185311.748 ops/s
Iteration  26: 184979.724 ops/s
Iteration  27: 185142.187 ops/s
Iteration  28: 185003.437 ops/s
Iteration  29: 184753.773 ops/s
Iteration  30: 185494.071 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_984._Benchmark.benchmark_Cluster_984":
  184900.409 ±(99.9%) 240.529 ops/s [Average]
  (min, avg, max) = (184045.123, 184900.409, 185603.746), stdev = 360.013
  CI (99.9%): [184659.880, 185140.938] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_984._Benchmark.benchmark_Cluster_984  thrpt   30  184900.409 ± 240.529  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_985._Benchmark.benchmark_Cluster_985$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_985._Benchmark.benchmark_Cluster_985

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 105991.197 ops/s
# Warmup Iteration   2: 174058.623 ops/s
# Warmup Iteration   3: 242937.104 ops/s
# Warmup Iteration   4: 241354.616 ops/s
# Warmup Iteration   5: 242309.581 ops/s
# Warmup Iteration   6: 242754.212 ops/s
# Warmup Iteration   7: 197976.325 ops/s
# Warmup Iteration   8: 239653.056 ops/s
# Warmup Iteration   9: 243095.865 ops/s
# Warmup Iteration  10: 243147.125 ops/s
# Warmup Iteration  11: 242999.932 ops/s
# Warmup Iteration  12: 242988.235 ops/s
# Warmup Iteration  13: 243070.212 ops/s
# Warmup Iteration  14: 243164.441 ops/s
# Warmup Iteration  15: 243222.058 ops/s
# Warmup Iteration  16: 242931.329 ops/s
# Warmup Iteration  17: 243729.746 ops/s
# Warmup Iteration  18: 244138.879 ops/s
# Warmup Iteration  19: 243627.354 ops/s
# Warmup Iteration  20: 243575.243 ops/s
# Warmup Iteration  21: 243958.196 ops/s
# Warmup Iteration  22: 243981.933 ops/s
# Warmup Iteration  23: 243811.810 ops/s
# Warmup Iteration  24: 244052.507 ops/s
# Warmup Iteration  25: 243902.557 ops/s
# Warmup Iteration  26: 243707.763 ops/s
# Warmup Iteration  27: 243622.887 ops/s
# Warmup Iteration  28: 243732.830 ops/s
# Warmup Iteration  29: 243886.875 ops/s
# Warmup Iteration  30: 243543.099 ops/s
Iteration   1: 243891.935 ops/s
Iteration   2: 244087.807 ops/s
Iteration   3: 244024.182 ops/s
Iteration   4: 244264.212 ops/s
Iteration   5: 243802.255 ops/s
Iteration   6: 244076.741 ops/s
Iteration   7: 243625.779 ops/s
Iteration   8: 244023.583 ops/s
Iteration   9: 243713.564 ops/s
Iteration  10: 243556.239 ops/s
Iteration  11: 243842.720 ops/s
Iteration  12: 243671.714 ops/s
Iteration  13: 244195.479 ops/s
Iteration  14: 243877.811 ops/s
Iteration  15: 244101.588 ops/s
Iteration  16: 243826.485 ops/s
Iteration  17: 243947.245 ops/s
Iteration  18: 243384.656 ops/s
Iteration  19: 243840.923 ops/s
Iteration  20: 243874.836 ops/s
Iteration  21: 243762.494 ops/s
Iteration  22: 244151.551 ops/s
Iteration  23: 243751.371 ops/s
Iteration  24: 243871.071 ops/s
Iteration  25: 243531.697 ops/s
Iteration  26: 244294.149 ops/s
Iteration  27: 244011.391 ops/s
Iteration  28: 244138.870 ops/s
Iteration  29: 243506.124 ops/s
Iteration  30: 244241.728 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_985._Benchmark.benchmark_Cluster_985":
  243896.340 ±(99.9%) 160.129 ops/s [Average]
  (min, avg, max) = (243384.656, 243896.340, 244294.149), stdev = 239.674
  CI (99.9%): [243736.211, 244056.469] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_985._Benchmark.benchmark_Cluster_985  thrpt   30  243896.340 ± 160.129  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_986._Benchmark.benchmark_Cluster_986$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_986._Benchmark.benchmark_Cluster_986

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55379.324 ops/s
# Warmup Iteration   2: 113200.693 ops/s
# Warmup Iteration   3: 151486.544 ops/s
# Warmup Iteration   4: 153024.210 ops/s
# Warmup Iteration   5: 152646.087 ops/s
# Warmup Iteration   6: 121619.453 ops/s
# Warmup Iteration   7: 152848.215 ops/s
# Warmup Iteration   8: 152545.278 ops/s
# Warmup Iteration   9: 152889.245 ops/s
# Warmup Iteration  10: 152538.378 ops/s
# Warmup Iteration  11: 152521.226 ops/s
# Warmup Iteration  12: 152382.866 ops/s
# Warmup Iteration  13: 152672.511 ops/s
# Warmup Iteration  14: 152077.912 ops/s
# Warmup Iteration  15: 152527.943 ops/s
# Warmup Iteration  16: 152757.515 ops/s
# Warmup Iteration  17: 152437.223 ops/s
# Warmup Iteration  18: 152702.609 ops/s
# Warmup Iteration  19: 152512.681 ops/s
# Warmup Iteration  20: 152510.790 ops/s
# Warmup Iteration  21: 152462.450 ops/s
# Warmup Iteration  22: 152450.810 ops/s
# Warmup Iteration  23: 152815.966 ops/s
# Warmup Iteration  24: 152788.278 ops/s
# Warmup Iteration  25: 152425.129 ops/s
# Warmup Iteration  26: 152499.942 ops/s
# Warmup Iteration  27: 152427.883 ops/s
# Warmup Iteration  28: 152426.371 ops/s
# Warmup Iteration  29: 152467.949 ops/s
# Warmup Iteration  30: 152335.215 ops/s
Iteration   1: 152442.844 ops/s
Iteration   2: 152199.648 ops/s
Iteration   3: 152889.510 ops/s
Iteration   4: 152457.280 ops/s
Iteration   5: 152448.927 ops/s
Iteration   6: 152154.657 ops/s
Iteration   7: 152601.346 ops/s
Iteration   8: 152281.836 ops/s
Iteration   9: 152723.618 ops/s
Iteration  10: 152796.783 ops/s
Iteration  11: 152564.302 ops/s
Iteration  12: 152762.377 ops/s
Iteration  13: 152394.270 ops/s
Iteration  14: 152397.567 ops/s
Iteration  15: 152715.888 ops/s
Iteration  16: 153061.864 ops/s
Iteration  17: 152655.564 ops/s
Iteration  18: 152449.253 ops/s
Iteration  19: 152599.959 ops/s
Iteration  20: 152257.316 ops/s
Iteration  21: 152608.224 ops/s
Iteration  22: 152236.690 ops/s
Iteration  23: 152380.762 ops/s
Iteration  24: 152579.031 ops/s
Iteration  25: 152738.924 ops/s
Iteration  26: 152470.256 ops/s
Iteration  27: 152567.068 ops/s
Iteration  28: 152863.976 ops/s
Iteration  29: 152270.761 ops/s
Iteration  30: 152891.826 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_986._Benchmark.benchmark_Cluster_986":
  152548.744 ±(99.9%) 154.396 ops/s [Average]
  (min, avg, max) = (152154.657, 152548.744, 153061.864), stdev = 231.092
  CI (99.9%): [152394.349, 152703.140] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_986._Benchmark.benchmark_Cluster_986  thrpt   30  152548.744 ± 154.396  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_987._Benchmark.benchmark_Cluster_987$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_987._Benchmark.benchmark_Cluster_987

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 141525.176 ops/s
# Warmup Iteration   2: 153688.676 ops/s
# Warmup Iteration   3: 164141.659 ops/s
# Warmup Iteration   4: 200393.575 ops/s
# Warmup Iteration   5: 200490.371 ops/s
# Warmup Iteration   6: 201408.172 ops/s
# Warmup Iteration   7: 199626.501 ops/s
# Warmup Iteration   8: 200531.887 ops/s
# Warmup Iteration   9: 200471.222 ops/s
# Warmup Iteration  10: 201065.936 ops/s
# Warmup Iteration  11: 201225.434 ops/s
# Warmup Iteration  12: 200932.501 ops/s
# Warmup Iteration  13: 201044.542 ops/s
# Warmup Iteration  14: 200416.948 ops/s
# Warmup Iteration  15: 200522.573 ops/s
# Warmup Iteration  16: 166761.623 ops/s
# Warmup Iteration  17: 199603.390 ops/s
# Warmup Iteration  18: 207789.508 ops/s
# Warmup Iteration  19: 207411.535 ops/s
# Warmup Iteration  20: 207710.299 ops/s
# Warmup Iteration  21: 207597.267 ops/s
# Warmup Iteration  22: 207393.202 ops/s
# Warmup Iteration  23: 207288.038 ops/s
# Warmup Iteration  24: 207622.088 ops/s
# Warmup Iteration  25: 207547.519 ops/s
# Warmup Iteration  26: 207504.936 ops/s
# Warmup Iteration  27: 208270.244 ops/s
# Warmup Iteration  28: 207676.973 ops/s
# Warmup Iteration  29: 207625.819 ops/s
# Warmup Iteration  30: 207299.983 ops/s
Iteration   1: 207506.239 ops/s
Iteration   2: 207563.308 ops/s
Iteration   3: 207473.153 ops/s
Iteration   4: 207412.050 ops/s
Iteration   5: 207541.602 ops/s
Iteration   6: 207345.007 ops/s
Iteration   7: 207173.259 ops/s
Iteration   8: 207135.421 ops/s
Iteration   9: 208086.274 ops/s
Iteration  10: 207594.889 ops/s
Iteration  11: 207371.128 ops/s
Iteration  12: 207815.269 ops/s
Iteration  13: 207461.209 ops/s
Iteration  14: 207625.359 ops/s
Iteration  15: 207465.540 ops/s
Iteration  16: 207838.881 ops/s
Iteration  17: 207733.890 ops/s
Iteration  18: 207716.129 ops/s
Iteration  19: 207548.160 ops/s
Iteration  20: 207848.465 ops/s
Iteration  21: 207668.289 ops/s
Iteration  22: 207476.994 ops/s
Iteration  23: 207429.018 ops/s
Iteration  24: 207798.719 ops/s
Iteration  25: 207901.191 ops/s
Iteration  26: 208164.697 ops/s
Iteration  27: 207018.579 ops/s
Iteration  28: 207850.737 ops/s
Iteration  29: 208118.593 ops/s
Iteration  30: 207801.090 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_987._Benchmark.benchmark_Cluster_987":
  207616.105 ±(99.9%) 186.290 ops/s [Average]
  (min, avg, max) = (207018.579, 207616.105, 208164.697), stdev = 278.831
  CI (99.9%): [207429.814, 207802.395] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_987._Benchmark.benchmark_Cluster_987  thrpt   30  207616.105 ± 186.290  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_988._Benchmark.benchmark_Cluster_988$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_988._Benchmark.benchmark_Cluster_988

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73668.928 ops/s
# Warmup Iteration   2: 89564.365 ops/s
# Warmup Iteration   3: 135709.759 ops/s
# Warmup Iteration   4: 138788.157 ops/s
# Warmup Iteration   5: 138000.491 ops/s
# Warmup Iteration   6: 138157.458 ops/s
# Warmup Iteration   7: 138263.669 ops/s
# Warmup Iteration   8: 138897.557 ops/s
# Warmup Iteration   9: 138566.668 ops/s
# Warmup Iteration  10: 111105.245 ops/s
# Warmup Iteration  11: 136581.936 ops/s
# Warmup Iteration  12: 138373.453 ops/s
# Warmup Iteration  13: 138377.676 ops/s
# Warmup Iteration  14: 138396.280 ops/s
# Warmup Iteration  15: 137870.294 ops/s
# Warmup Iteration  16: 138636.213 ops/s
# Warmup Iteration  17: 142846.269 ops/s
# Warmup Iteration  18: 142726.675 ops/s
# Warmup Iteration  19: 142842.780 ops/s
# Warmup Iteration  20: 142873.461 ops/s
# Warmup Iteration  21: 142841.682 ops/s
# Warmup Iteration  22: 142915.305 ops/s
# Warmup Iteration  23: 143074.828 ops/s
# Warmup Iteration  24: 143099.400 ops/s
# Warmup Iteration  25: 142910.143 ops/s
# Warmup Iteration  26: 142725.155 ops/s
# Warmup Iteration  27: 142817.341 ops/s
# Warmup Iteration  28: 142825.688 ops/s
# Warmup Iteration  29: 142922.379 ops/s
# Warmup Iteration  30: 142954.174 ops/s
Iteration   1: 143213.989 ops/s
Iteration   2: 142983.932 ops/s
Iteration   3: 142657.479 ops/s
Iteration   4: 142744.821 ops/s
Iteration   5: 143200.080 ops/s
Iteration   6: 142556.123 ops/s
Iteration   7: 142664.780 ops/s
Iteration   8: 142813.591 ops/s
Iteration   9: 142831.628 ops/s
Iteration  10: 143188.225 ops/s
Iteration  11: 142692.063 ops/s
Iteration  12: 141848.378 ops/s
Iteration  13: 143018.748 ops/s
Iteration  14: 142802.696 ops/s
Iteration  15: 142691.391 ops/s
Iteration  16: 142767.447 ops/s
Iteration  17: 142669.775 ops/s
Iteration  18: 142923.938 ops/s
Iteration  19: 142568.468 ops/s
Iteration  20: 142873.252 ops/s
Iteration  21: 142994.827 ops/s
Iteration  22: 142352.488 ops/s
Iteration  23: 142913.971 ops/s
Iteration  24: 142853.223 ops/s
Iteration  25: 142401.672 ops/s
Iteration  26: 142800.228 ops/s
Iteration  27: 142809.048 ops/s
Iteration  28: 142785.135 ops/s
Iteration  29: 142536.128 ops/s
Iteration  30: 143265.225 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_988._Benchmark.benchmark_Cluster_988":
  142780.758 ±(99.9%) 191.218 ops/s [Average]
  (min, avg, max) = (141848.378, 142780.758, 143265.225), stdev = 286.207
  CI (99.9%): [142589.540, 142971.977] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_988._Benchmark.benchmark_Cluster_988  thrpt   30  142780.758 ± 191.218  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_989._Benchmark.benchmark_Cluster_989$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_989._Benchmark.benchmark_Cluster_989

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58577.161 ops/s
# Warmup Iteration   2: 120601.648 ops/s
# Warmup Iteration   3: 182681.362 ops/s
# Warmup Iteration   4: 180974.868 ops/s
# Warmup Iteration   5: 182421.427 ops/s
# Warmup Iteration   6: 182553.022 ops/s
# Warmup Iteration   7: 145958.185 ops/s
# Warmup Iteration   8: 182996.647 ops/s
# Warmup Iteration   9: 182160.283 ops/s
# Warmup Iteration  10: 183782.707 ops/s
# Warmup Iteration  11: 183555.906 ops/s
# Warmup Iteration  12: 183676.649 ops/s
# Warmup Iteration  13: 183563.936 ops/s
# Warmup Iteration  14: 182604.364 ops/s
# Warmup Iteration  15: 182121.459 ops/s
# Warmup Iteration  16: 182394.403 ops/s
# Warmup Iteration  17: 181892.135 ops/s
# Warmup Iteration  18: 181951.061 ops/s
# Warmup Iteration  19: 181664.729 ops/s
# Warmup Iteration  20: 182011.179 ops/s
# Warmup Iteration  21: 182071.675 ops/s
# Warmup Iteration  22: 181912.763 ops/s
# Warmup Iteration  23: 181789.705 ops/s
# Warmup Iteration  24: 181689.006 ops/s
# Warmup Iteration  25: 181999.346 ops/s
# Warmup Iteration  26: 182234.155 ops/s
# Warmup Iteration  27: 182343.075 ops/s
# Warmup Iteration  28: 182121.062 ops/s
# Warmup Iteration  29: 182926.544 ops/s
# Warmup Iteration  30: 182227.556 ops/s
Iteration   1: 182929.911 ops/s
Iteration   2: 182231.585 ops/s
Iteration   3: 181922.846 ops/s
Iteration   4: 181603.686 ops/s
Iteration   5: 182584.279 ops/s
Iteration   6: 182263.343 ops/s
Iteration   7: 182429.973 ops/s
Iteration   8: 182513.438 ops/s
Iteration   9: 182794.972 ops/s
Iteration  10: 182668.085 ops/s
Iteration  11: 182744.351 ops/s
Iteration  12: 182728.491 ops/s
Iteration  13: 182522.899 ops/s
Iteration  14: 181655.518 ops/s
Iteration  15: 182389.128 ops/s
Iteration  16: 182457.905 ops/s
Iteration  17: 182015.156 ops/s
Iteration  18: 182307.618 ops/s
Iteration  19: 181971.482 ops/s
Iteration  20: 181788.868 ops/s
Iteration  21: 181516.169 ops/s
Iteration  22: 182042.240 ops/s
Iteration  23: 182077.898 ops/s
Iteration  24: 182322.958 ops/s
Iteration  25: 181587.738 ops/s
Iteration  26: 181997.103 ops/s
Iteration  27: 181534.800 ops/s
Iteration  28: 181860.697 ops/s
Iteration  29: 181784.768 ops/s
Iteration  30: 181670.442 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_989._Benchmark.benchmark_Cluster_989":
  182163.945 ±(99.9%) 280.117 ops/s [Average]
  (min, avg, max) = (181516.169, 182163.945, 182929.911), stdev = 419.267
  CI (99.9%): [181883.827, 182444.062] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_989._Benchmark.benchmark_Cluster_989  thrpt   30  182163.945 ± 280.117  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_99._Benchmark.benchmark_Cluster_99$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_99._Benchmark.benchmark_Cluster_99

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80029.886 ops/s
# Warmup Iteration   2: 98185.724 ops/s
# Warmup Iteration   3: 153132.540 ops/s
# Warmup Iteration   4: 157091.231 ops/s
# Warmup Iteration   5: 154770.352 ops/s
# Warmup Iteration   6: 157120.842 ops/s
# Warmup Iteration   7: 156948.971 ops/s
# Warmup Iteration   8: 156932.000 ops/s
# Warmup Iteration   9: 156730.096 ops/s
# Warmup Iteration  10: 119814.354 ops/s
# Warmup Iteration  11: 157066.096 ops/s
# Warmup Iteration  12: 156996.211 ops/s
# Warmup Iteration  13: 156962.432 ops/s
# Warmup Iteration  14: 157097.272 ops/s
# Warmup Iteration  15: 157042.452 ops/s
# Warmup Iteration  16: 156981.007 ops/s
# Warmup Iteration  17: 160520.930 ops/s
# Warmup Iteration  18: 161512.547 ops/s
# Warmup Iteration  19: 161267.773 ops/s
# Warmup Iteration  20: 160942.079 ops/s
# Warmup Iteration  21: 160863.786 ops/s
# Warmup Iteration  22: 160529.051 ops/s
# Warmup Iteration  23: 161029.322 ops/s
# Warmup Iteration  24: 161328.177 ops/s
# Warmup Iteration  25: 161140.667 ops/s
# Warmup Iteration  26: 161167.870 ops/s
# Warmup Iteration  27: 161425.630 ops/s
# Warmup Iteration  28: 160748.922 ops/s
# Warmup Iteration  29: 160756.739 ops/s
# Warmup Iteration  30: 160987.905 ops/s
Iteration   1: 160654.056 ops/s
Iteration   2: 160816.902 ops/s
Iteration   3: 161268.084 ops/s
Iteration   4: 161371.800 ops/s
Iteration   5: 160599.088 ops/s
Iteration   6: 161476.995 ops/s
Iteration   7: 161293.242 ops/s
Iteration   8: 161128.117 ops/s
Iteration   9: 161415.203 ops/s
Iteration  10: 161296.395 ops/s
Iteration  11: 160640.455 ops/s
Iteration  12: 160409.758 ops/s
Iteration  13: 160060.271 ops/s
Iteration  14: 160641.473 ops/s
Iteration  15: 161046.594 ops/s
Iteration  16: 161512.868 ops/s
Iteration  17: 161530.992 ops/s
Iteration  18: 160789.944 ops/s
Iteration  19: 161395.784 ops/s
Iteration  20: 161517.497 ops/s
Iteration  21: 161142.605 ops/s
Iteration  22: 161584.503 ops/s
Iteration  23: 160953.881 ops/s
Iteration  24: 160619.110 ops/s
Iteration  25: 161050.498 ops/s
Iteration  26: 160980.017 ops/s
Iteration  27: 160923.002 ops/s
Iteration  28: 160633.055 ops/s
Iteration  29: 161065.041 ops/s
Iteration  30: 160827.617 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_99._Benchmark.benchmark_Cluster_99":
  161021.495 ±(99.9%) 257.029 ops/s [Average]
  (min, avg, max) = (160060.271, 161021.495, 161584.503), stdev = 384.709
  CI (99.9%): [160764.466, 161278.524] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_99._Benchmark.benchmark_Cluster_99  thrpt   30  161021.495 ± 257.029  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_990._Benchmark.benchmark_Cluster_990$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_990._Benchmark.benchmark_Cluster_990

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 102198.866 ops/s
# Warmup Iteration   2: 115093.795 ops/s
# Warmup Iteration   3: 115268.128 ops/s
# Warmup Iteration   4: 145908.723 ops/s
# Warmup Iteration   5: 147346.057 ops/s
# Warmup Iteration   6: 147489.848 ops/s
# Warmup Iteration   7: 147416.812 ops/s
# Warmup Iteration   8: 145521.786 ops/s
# Warmup Iteration   9: 147580.056 ops/s
# Warmup Iteration  10: 147194.158 ops/s
# Warmup Iteration  11: 147406.956 ops/s
# Warmup Iteration  12: 147485.413 ops/s
# Warmup Iteration  13: 147582.404 ops/s
# Warmup Iteration  14: 147220.831 ops/s
# Warmup Iteration  15: 147257.740 ops/s
# Warmup Iteration  16: 147488.078 ops/s
# Warmup Iteration  17: 153517.125 ops/s
# Warmup Iteration  18: 121172.085 ops/s
# Warmup Iteration  19: 153414.205 ops/s
# Warmup Iteration  20: 153375.363 ops/s
# Warmup Iteration  21: 153099.578 ops/s
# Warmup Iteration  22: 153119.318 ops/s
# Warmup Iteration  23: 153397.884 ops/s
# Warmup Iteration  24: 153514.959 ops/s
# Warmup Iteration  25: 152980.823 ops/s
# Warmup Iteration  26: 153213.255 ops/s
# Warmup Iteration  27: 153285.668 ops/s
# Warmup Iteration  28: 153048.912 ops/s
# Warmup Iteration  29: 153234.565 ops/s
# Warmup Iteration  30: 153213.744 ops/s
Iteration   1: 153512.296 ops/s
Iteration   2: 153338.532 ops/s
Iteration   3: 153056.371 ops/s
Iteration   4: 152725.725 ops/s
Iteration   5: 153450.132 ops/s
Iteration   6: 153182.172 ops/s
Iteration   7: 153404.863 ops/s
Iteration   8: 152910.316 ops/s
Iteration   9: 153535.962 ops/s
Iteration  10: 153200.229 ops/s
Iteration  11: 153396.355 ops/s
Iteration  12: 153711.313 ops/s
Iteration  13: 153484.145 ops/s
Iteration  14: 153457.485 ops/s
Iteration  15: 152925.218 ops/s
Iteration  16: 153576.241 ops/s
Iteration  17: 153525.021 ops/s
Iteration  18: 153305.427 ops/s
Iteration  19: 153413.528 ops/s
Iteration  20: 152987.252 ops/s
Iteration  21: 152991.901 ops/s
Iteration  22: 153236.237 ops/s
Iteration  23: 153231.139 ops/s
Iteration  24: 153267.446 ops/s
Iteration  25: 153189.622 ops/s
Iteration  26: 153085.682 ops/s
Iteration  27: 152974.725 ops/s
Iteration  28: 153250.317 ops/s
Iteration  29: 152648.677 ops/s
Iteration  30: 153365.645 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_990._Benchmark.benchmark_Cluster_990":
  153244.666 ±(99.9%) 172.079 ops/s [Average]
  (min, avg, max) = (152648.677, 153244.666, 153711.313), stdev = 257.559
  CI (99.9%): [153072.587, 153416.745] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_990._Benchmark.benchmark_Cluster_990  thrpt   30  153244.666 ± 172.079  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_991._Benchmark.benchmark_Cluster_991$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_991._Benchmark.benchmark_Cluster_991

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78732.774 ops/s
# Warmup Iteration   2: 106456.277 ops/s
# Warmup Iteration   3: 165583.193 ops/s
# Warmup Iteration   4: 163555.729 ops/s
# Warmup Iteration   5: 165605.781 ops/s
# Warmup Iteration   6: 165701.077 ops/s
# Warmup Iteration   7: 165648.652 ops/s
# Warmup Iteration   8: 165626.115 ops/s
# Warmup Iteration   9: 129696.009 ops/s
# Warmup Iteration  10: 165058.270 ops/s
# Warmup Iteration  11: 165189.695 ops/s
# Warmup Iteration  12: 164825.336 ops/s
# Warmup Iteration  13: 164428.217 ops/s
# Warmup Iteration  14: 165332.732 ops/s
# Warmup Iteration  15: 165034.706 ops/s
# Warmup Iteration  16: 165688.320 ops/s
# Warmup Iteration  17: 170138.890 ops/s
# Warmup Iteration  18: 169972.541 ops/s
# Warmup Iteration  19: 169765.276 ops/s
# Warmup Iteration  20: 169600.789 ops/s
# Warmup Iteration  21: 170789.365 ops/s
# Warmup Iteration  22: 170305.697 ops/s
# Warmup Iteration  23: 170265.926 ops/s
# Warmup Iteration  24: 170125.541 ops/s
# Warmup Iteration  25: 169626.024 ops/s
# Warmup Iteration  26: 169949.744 ops/s
# Warmup Iteration  27: 169287.731 ops/s
# Warmup Iteration  28: 169048.073 ops/s
# Warmup Iteration  29: 169429.378 ops/s
# Warmup Iteration  30: 169487.319 ops/s
Iteration   1: 169496.709 ops/s
Iteration   2: 169288.305 ops/s
Iteration   3: 168725.798 ops/s
Iteration   4: 168235.409 ops/s
Iteration   5: 169415.092 ops/s
Iteration   6: 168274.246 ops/s
Iteration   7: 170190.993 ops/s
Iteration   8: 169391.981 ops/s
Iteration   9: 168818.151 ops/s
Iteration  10: 169568.030 ops/s
Iteration  11: 169575.308 ops/s
Iteration  12: 169812.121 ops/s
Iteration  13: 168823.417 ops/s
Iteration  14: 169269.872 ops/s
Iteration  15: 169481.394 ops/s
Iteration  16: 168535.861 ops/s
Iteration  17: 169114.206 ops/s
Iteration  18: 169695.022 ops/s
Iteration  19: 168811.326 ops/s
Iteration  20: 168839.709 ops/s
Iteration  21: 169076.490 ops/s
Iteration  22: 169600.331 ops/s
Iteration  23: 168468.562 ops/s
Iteration  24: 169854.732 ops/s
Iteration  25: 169944.799 ops/s
Iteration  26: 170550.594 ops/s
Iteration  27: 168929.355 ops/s
Iteration  28: 170053.206 ops/s
Iteration  29: 169676.979 ops/s
Iteration  30: 169752.585 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_991._Benchmark.benchmark_Cluster_991":
  169309.020 ±(99.9%) 385.720 ops/s [Average]
  (min, avg, max) = (168235.409, 169309.020, 170550.594), stdev = 577.328
  CI (99.9%): [168923.299, 169694.740] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_991._Benchmark.benchmark_Cluster_991  thrpt   30  169309.020 ± 385.720  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_992._Benchmark.benchmark_Cluster_992$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_992._Benchmark.benchmark_Cluster_992

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72716.072 ops/s
# Warmup Iteration   2: 130566.650 ops/s
# Warmup Iteration   3: 162107.288 ops/s
# Warmup Iteration   4: 163305.341 ops/s
# Warmup Iteration   5: 163181.462 ops/s
# Warmup Iteration   6: 130405.031 ops/s
# Warmup Iteration   7: 162979.797 ops/s
# Warmup Iteration   8: 163092.718 ops/s
# Warmup Iteration   9: 163068.923 ops/s
# Warmup Iteration  10: 162931.621 ops/s
# Warmup Iteration  11: 162919.341 ops/s
# Warmup Iteration  12: 162995.667 ops/s
# Warmup Iteration  13: 162881.232 ops/s
# Warmup Iteration  14: 163016.609 ops/s
# Warmup Iteration  15: 163060.060 ops/s
# Warmup Iteration  16: 162938.264 ops/s
# Warmup Iteration  17: 162327.018 ops/s
# Warmup Iteration  18: 162551.782 ops/s
# Warmup Iteration  19: 162469.244 ops/s
# Warmup Iteration  20: 162594.262 ops/s
# Warmup Iteration  21: 162523.630 ops/s
# Warmup Iteration  22: 162338.129 ops/s
# Warmup Iteration  23: 162712.698 ops/s
# Warmup Iteration  24: 162709.260 ops/s
# Warmup Iteration  25: 162624.275 ops/s
# Warmup Iteration  26: 162538.788 ops/s
# Warmup Iteration  27: 162686.741 ops/s
# Warmup Iteration  28: 162753.691 ops/s
# Warmup Iteration  29: 162707.957 ops/s
# Warmup Iteration  30: 162582.656 ops/s
Iteration   1: 163089.059 ops/s
Iteration   2: 162902.934 ops/s
Iteration   3: 162834.027 ops/s
Iteration   4: 162742.184 ops/s
Iteration   5: 162976.592 ops/s
Iteration   6: 162888.004 ops/s
Iteration   7: 162981.666 ops/s
Iteration   8: 162956.711 ops/s
Iteration   9: 162859.238 ops/s
Iteration  10: 163155.750 ops/s
Iteration  11: 162908.341 ops/s
Iteration  12: 162926.903 ops/s
Iteration  13: 162716.117 ops/s
Iteration  14: 163053.316 ops/s
Iteration  15: 162920.084 ops/s
Iteration  16: 163118.564 ops/s
Iteration  17: 163016.646 ops/s
Iteration  18: 162948.441 ops/s
Iteration  19: 163098.993 ops/s
Iteration  20: 162630.144 ops/s
Iteration  21: 162828.708 ops/s
Iteration  22: 162585.465 ops/s
Iteration  23: 162944.344 ops/s
Iteration  24: 162712.671 ops/s
Iteration  25: 162579.197 ops/s
Iteration  26: 162468.627 ops/s
Iteration  27: 162720.833 ops/s
Iteration  28: 162746.565 ops/s
Iteration  29: 162249.718 ops/s
Iteration  30: 162632.438 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_992._Benchmark.benchmark_Cluster_992":
  162839.743 ±(99.9%) 138.924 ops/s [Average]
  (min, avg, max) = (162249.718, 162839.743, 163155.750), stdev = 207.935
  CI (99.9%): [162700.818, 162978.667] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_992._Benchmark.benchmark_Cluster_992  thrpt   30  162839.743 ± 138.924  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_993._Benchmark.benchmark_Cluster_993$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_993._Benchmark.benchmark_Cluster_993

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59878.369 ops/s
# Warmup Iteration   2: 114317.301 ops/s
# Warmup Iteration   3: 173396.367 ops/s
# Warmup Iteration   4: 171169.293 ops/s
# Warmup Iteration   5: 173484.158 ops/s
# Warmup Iteration   6: 172949.310 ops/s
# Warmup Iteration   7: 136039.498 ops/s
# Warmup Iteration   8: 173941.530 ops/s
# Warmup Iteration   9: 173742.562 ops/s
# Warmup Iteration  10: 173841.076 ops/s
# Warmup Iteration  11: 173926.322 ops/s
# Warmup Iteration  12: 173874.666 ops/s
# Warmup Iteration  13: 174092.621 ops/s
# Warmup Iteration  14: 173693.277 ops/s
# Warmup Iteration  15: 173899.390 ops/s
# Warmup Iteration  16: 174065.106 ops/s
# Warmup Iteration  17: 174115.880 ops/s
# Warmup Iteration  18: 174003.001 ops/s
# Warmup Iteration  19: 174010.403 ops/s
# Warmup Iteration  20: 174004.234 ops/s
# Warmup Iteration  21: 174012.354 ops/s
# Warmup Iteration  22: 173678.671 ops/s
# Warmup Iteration  23: 173968.634 ops/s
# Warmup Iteration  24: 174032.520 ops/s
# Warmup Iteration  25: 173735.392 ops/s
# Warmup Iteration  26: 173653.666 ops/s
# Warmup Iteration  27: 173944.636 ops/s
# Warmup Iteration  28: 174039.107 ops/s
# Warmup Iteration  29: 174035.421 ops/s
# Warmup Iteration  30: 174145.445 ops/s
Iteration   1: 173635.029 ops/s
Iteration   2: 173942.796 ops/s
Iteration   3: 173937.907 ops/s
Iteration   4: 174000.850 ops/s
Iteration   5: 174271.597 ops/s
Iteration   6: 173866.917 ops/s
Iteration   7: 174436.144 ops/s
Iteration   8: 173967.271 ops/s
Iteration   9: 174334.831 ops/s
Iteration  10: 173774.229 ops/s
Iteration  11: 174060.544 ops/s
Iteration  12: 173825.085 ops/s
Iteration  13: 174084.572 ops/s
Iteration  14: 173701.707 ops/s
Iteration  15: 174212.806 ops/s
Iteration  16: 173896.874 ops/s
Iteration  17: 174019.315 ops/s
Iteration  18: 173898.362 ops/s
Iteration  19: 173868.980 ops/s
Iteration  20: 174031.829 ops/s
Iteration  21: 174204.549 ops/s
Iteration  22: 173679.523 ops/s
Iteration  23: 174190.408 ops/s
Iteration  24: 173985.839 ops/s
Iteration  25: 174399.046 ops/s
Iteration  26: 173799.340 ops/s
Iteration  27: 173944.874 ops/s
Iteration  28: 173508.059 ops/s
Iteration  29: 173934.499 ops/s
Iteration  30: 173775.411 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_993._Benchmark.benchmark_Cluster_993":
  173972.973 ±(99.9%) 149.896 ops/s [Average]
  (min, avg, max) = (173508.059, 173972.973, 174436.144), stdev = 224.357
  CI (99.9%): [173823.077, 174122.869] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_993._Benchmark.benchmark_Cluster_993  thrpt   30  173972.973 ± 149.896  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_994._Benchmark.benchmark_Cluster_994$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_994._Benchmark.benchmark_Cluster_994

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51487.959 ops/s
# Warmup Iteration   2: 98419.163 ops/s
# Warmup Iteration   3: 151079.789 ops/s
# Warmup Iteration   4: 150273.649 ops/s
# Warmup Iteration   5: 151118.628 ops/s
# Warmup Iteration   6: 151008.452 ops/s
# Warmup Iteration   7: 119811.357 ops/s
# Warmup Iteration   8: 150922.852 ops/s
# Warmup Iteration   9: 150693.319 ops/s
# Warmup Iteration  10: 150600.566 ops/s
# Warmup Iteration  11: 150995.383 ops/s
# Warmup Iteration  12: 150899.003 ops/s
# Warmup Iteration  13: 150581.449 ops/s
# Warmup Iteration  14: 150718.570 ops/s
# Warmup Iteration  15: 150530.766 ops/s
# Warmup Iteration  16: 150771.457 ops/s
# Warmup Iteration  17: 150529.510 ops/s
# Warmup Iteration  18: 150918.772 ops/s
# Warmup Iteration  19: 150573.287 ops/s
# Warmup Iteration  20: 150875.538 ops/s
# Warmup Iteration  21: 150670.565 ops/s
# Warmup Iteration  22: 150931.106 ops/s
# Warmup Iteration  23: 150584.103 ops/s
# Warmup Iteration  24: 151213.752 ops/s
# Warmup Iteration  25: 150769.636 ops/s
# Warmup Iteration  26: 150643.220 ops/s
# Warmup Iteration  27: 150467.911 ops/s
# Warmup Iteration  28: 150889.837 ops/s
# Warmup Iteration  29: 150642.924 ops/s
# Warmup Iteration  30: 150614.913 ops/s
Iteration   1: 150378.781 ops/s
Iteration   2: 151029.168 ops/s
Iteration   3: 150577.085 ops/s
Iteration   4: 150492.934 ops/s
Iteration   5: 150902.652 ops/s
Iteration   6: 150700.422 ops/s
Iteration   7: 150348.832 ops/s
Iteration   8: 151169.389 ops/s
Iteration   9: 150843.037 ops/s
Iteration  10: 151120.606 ops/s
Iteration  11: 150477.416 ops/s
Iteration  12: 150689.785 ops/s
Iteration  13: 150551.524 ops/s
Iteration  14: 150735.977 ops/s
Iteration  15: 150904.419 ops/s
Iteration  16: 150831.270 ops/s
Iteration  17: 150174.119 ops/s
Iteration  18: 150529.929 ops/s
Iteration  19: 150738.064 ops/s
Iteration  20: 150820.756 ops/s
Iteration  21: 150987.334 ops/s
Iteration  22: 151106.432 ops/s
Iteration  23: 150714.329 ops/s
Iteration  24: 150669.830 ops/s
Iteration  25: 150665.531 ops/s
Iteration  26: 150625.574 ops/s
Iteration  27: 150446.197 ops/s
Iteration  28: 151029.369 ops/s
Iteration  29: 150883.361 ops/s
Iteration  30: 151167.643 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_994._Benchmark.benchmark_Cluster_994":
  150743.726 ±(99.9%) 172.293 ops/s [Average]
  (min, avg, max) = (150174.119, 150743.726, 151169.389), stdev = 257.880
  CI (99.9%): [150571.433, 150916.018] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_994._Benchmark.benchmark_Cluster_994  thrpt   30  150743.726 ± 172.293  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_995._Benchmark.benchmark_Cluster_995$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_995._Benchmark.benchmark_Cluster_995

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61956.398 ops/s
# Warmup Iteration   2: 132845.429 ops/s
# Warmup Iteration   3: 184621.701 ops/s
# Warmup Iteration   4: 186206.991 ops/s
# Warmup Iteration   5: 185967.246 ops/s
# Warmup Iteration   6: 147230.270 ops/s
# Warmup Iteration   7: 186149.795 ops/s
# Warmup Iteration   8: 186183.007 ops/s
# Warmup Iteration   9: 186064.823 ops/s
# Warmup Iteration  10: 186267.520 ops/s
# Warmup Iteration  11: 186210.720 ops/s
# Warmup Iteration  12: 185995.467 ops/s
# Warmup Iteration  13: 185955.115 ops/s
# Warmup Iteration  14: 186078.673 ops/s
# Warmup Iteration  15: 186143.576 ops/s
# Warmup Iteration  16: 185955.045 ops/s
# Warmup Iteration  17: 186502.197 ops/s
# Warmup Iteration  18: 186192.758 ops/s
# Warmup Iteration  19: 185826.951 ops/s
# Warmup Iteration  20: 186146.795 ops/s
# Warmup Iteration  21: 186257.275 ops/s
# Warmup Iteration  22: 186137.731 ops/s
# Warmup Iteration  23: 186341.936 ops/s
# Warmup Iteration  24: 186320.023 ops/s
# Warmup Iteration  25: 186076.022 ops/s
# Warmup Iteration  26: 186173.598 ops/s
# Warmup Iteration  27: 186149.463 ops/s
# Warmup Iteration  28: 185996.551 ops/s
# Warmup Iteration  29: 185984.964 ops/s
# Warmup Iteration  30: 186169.094 ops/s
Iteration   1: 186263.965 ops/s
Iteration   2: 186046.325 ops/s
Iteration   3: 186253.581 ops/s
Iteration   4: 186446.984 ops/s
Iteration   5: 186286.466 ops/s
Iteration   6: 186425.096 ops/s
Iteration   7: 186174.658 ops/s
Iteration   8: 186193.872 ops/s
Iteration   9: 186523.809 ops/s
Iteration  10: 186114.445 ops/s
Iteration  11: 186411.487 ops/s
Iteration  12: 186239.021 ops/s
Iteration  13: 186015.764 ops/s
Iteration  14: 186633.100 ops/s
Iteration  15: 186328.519 ops/s
Iteration  16: 186391.417 ops/s
Iteration  17: 186368.058 ops/s
Iteration  18: 186261.630 ops/s
Iteration  19: 186289.114 ops/s
Iteration  20: 186214.026 ops/s
Iteration  21: 186422.609 ops/s
Iteration  22: 186315.553 ops/s
Iteration  23: 186099.983 ops/s
Iteration  24: 186181.412 ops/s
Iteration  25: 185442.920 ops/s
Iteration  26: 186041.990 ops/s
Iteration  27: 185447.510 ops/s
Iteration  28: 186296.248 ops/s
Iteration  29: 186280.182 ops/s
Iteration  30: 185968.599 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_995._Benchmark.benchmark_Cluster_995":
  186212.611 ±(99.9%) 172.169 ops/s [Average]
  (min, avg, max) = (185442.920, 186212.611, 186633.100), stdev = 257.694
  CI (99.9%): [186040.443, 186384.780] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_995._Benchmark.benchmark_Cluster_995  thrpt   30  186212.611 ± 172.169  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_996._Benchmark.benchmark_Cluster_996$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_996._Benchmark.benchmark_Cluster_996

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96747.967 ops/s
# Warmup Iteration   2: 151514.907 ops/s
# Warmup Iteration   3: 221508.142 ops/s
# Warmup Iteration   4: 220364.046 ops/s
# Warmup Iteration   5: 221917.809 ops/s
# Warmup Iteration   6: 221478.251 ops/s
# Warmup Iteration   7: 219930.397 ops/s
# Warmup Iteration   8: 176768.695 ops/s
# Warmup Iteration   9: 221759.167 ops/s
# Warmup Iteration  10: 221323.699 ops/s
# Warmup Iteration  11: 221877.108 ops/s
# Warmup Iteration  12: 221439.346 ops/s
# Warmup Iteration  13: 221674.956 ops/s
# Warmup Iteration  14: 221728.115 ops/s
# Warmup Iteration  15: 221812.992 ops/s
# Warmup Iteration  16: 221761.373 ops/s
# Warmup Iteration  17: 221979.960 ops/s
# Warmup Iteration  18: 221880.405 ops/s
# Warmup Iteration  19: 221625.401 ops/s
# Warmup Iteration  20: 221759.583 ops/s
# Warmup Iteration  21: 221905.682 ops/s
# Warmup Iteration  22: 221660.692 ops/s
# Warmup Iteration  23: 221893.977 ops/s
# Warmup Iteration  24: 221690.136 ops/s
# Warmup Iteration  25: 222120.255 ops/s
# Warmup Iteration  26: 221924.934 ops/s
# Warmup Iteration  27: 221650.113 ops/s
# Warmup Iteration  28: 221897.715 ops/s
# Warmup Iteration  29: 221538.558 ops/s
# Warmup Iteration  30: 221949.917 ops/s
Iteration   1: 221966.140 ops/s
Iteration   2: 221922.312 ops/s
Iteration   3: 221357.295 ops/s
Iteration   4: 221951.555 ops/s
Iteration   5: 221911.162 ops/s
Iteration   6: 221899.689 ops/s
Iteration   7: 221606.371 ops/s
Iteration   8: 222029.062 ops/s
Iteration   9: 222002.639 ops/s
Iteration  10: 221685.402 ops/s
Iteration  11: 222040.008 ops/s
Iteration  12: 221821.691 ops/s
Iteration  13: 222169.742 ops/s
Iteration  14: 221715.579 ops/s
Iteration  15: 221741.726 ops/s
Iteration  16: 221989.949 ops/s
Iteration  17: 221388.601 ops/s
Iteration  18: 221931.205 ops/s
Iteration  19: 221625.281 ops/s
Iteration  20: 221948.127 ops/s
Iteration  21: 221756.206 ops/s
Iteration  22: 221884.719 ops/s
Iteration  23: 222107.384 ops/s
Iteration  24: 221797.219 ops/s
Iteration  25: 222074.624 ops/s
Iteration  26: 221650.622 ops/s
Iteration  27: 222155.428 ops/s
Iteration  28: 222412.906 ops/s
Iteration  29: 221816.564 ops/s
Iteration  30: 221760.954 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_996._Benchmark.benchmark_Cluster_996":
  221870.672 ±(99.9%) 150.091 ops/s [Average]
  (min, avg, max) = (221357.295, 221870.672, 222412.906), stdev = 224.650
  CI (99.9%): [221720.581, 222020.763] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_996._Benchmark.benchmark_Cluster_996  thrpt   30  221870.672 ± 150.091  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_997._Benchmark.benchmark_Cluster_997$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_997._Benchmark.benchmark_Cluster_997

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66227.847 ops/s
# Warmup Iteration   2: 103162.659 ops/s
# Warmup Iteration   3: 158104.589 ops/s
# Warmup Iteration   4: 157110.522 ops/s
# Warmup Iteration   5: 158098.956 ops/s
# Warmup Iteration   6: 158166.094 ops/s
# Warmup Iteration   7: 158141.666 ops/s
# Warmup Iteration   8: 140163.871 ops/s
# Warmup Iteration   9: 143812.467 ops/s
# Warmup Iteration  10: 158184.480 ops/s
# Warmup Iteration  11: 158009.200 ops/s
# Warmup Iteration  12: 158137.063 ops/s
# Warmup Iteration  13: 158252.589 ops/s
# Warmup Iteration  14: 158319.206 ops/s
# Warmup Iteration  15: 158062.926 ops/s
# Warmup Iteration  16: 158288.174 ops/s
# Warmup Iteration  17: 158412.280 ops/s
# Warmup Iteration  18: 158389.368 ops/s
# Warmup Iteration  19: 158066.238 ops/s
# Warmup Iteration  20: 158300.085 ops/s
# Warmup Iteration  21: 158373.160 ops/s
# Warmup Iteration  22: 158177.414 ops/s
# Warmup Iteration  23: 158376.092 ops/s
# Warmup Iteration  24: 158092.434 ops/s
# Warmup Iteration  25: 158412.864 ops/s
# Warmup Iteration  26: 158113.917 ops/s
# Warmup Iteration  27: 158092.239 ops/s
# Warmup Iteration  28: 158220.553 ops/s
# Warmup Iteration  29: 158490.681 ops/s
# Warmup Iteration  30: 158260.252 ops/s
Iteration   1: 158129.089 ops/s
Iteration   2: 158501.801 ops/s
Iteration   3: 158435.643 ops/s
Iteration   4: 157941.168 ops/s
Iteration   5: 158400.351 ops/s
Iteration   6: 158431.278 ops/s
Iteration   7: 158165.037 ops/s
Iteration   8: 158576.461 ops/s
Iteration   9: 158293.644 ops/s
Iteration  10: 158429.837 ops/s
Iteration  11: 158361.852 ops/s
Iteration  12: 158252.645 ops/s
Iteration  13: 158254.844 ops/s
Iteration  14: 158511.720 ops/s
Iteration  15: 158425.883 ops/s
Iteration  16: 158330.798 ops/s
Iteration  17: 158132.919 ops/s
Iteration  18: 158481.156 ops/s
Iteration  19: 158340.797 ops/s
Iteration  20: 158328.178 ops/s
Iteration  21: 158527.775 ops/s
Iteration  22: 157747.421 ops/s
Iteration  23: 158077.292 ops/s
Iteration  24: 158453.169 ops/s
Iteration  25: 157967.823 ops/s
Iteration  26: 158212.815 ops/s
Iteration  27: 158250.132 ops/s
Iteration  28: 158173.423 ops/s
Iteration  29: 158249.482 ops/s
Iteration  30: 158147.513 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_997._Benchmark.benchmark_Cluster_997":
  158284.398 ±(99.9%) 128.580 ops/s [Average]
  (min, avg, max) = (157747.421, 158284.398, 158576.461), stdev = 192.452
  CI (99.9%): [158155.818, 158412.978] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_997._Benchmark.benchmark_Cluster_997  thrpt   30  158284.398 ± 128.580  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_998._Benchmark.benchmark_Cluster_998$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_998._Benchmark.benchmark_Cluster_998

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 101688.686 ops/s
# Warmup Iteration   2: 113070.011 ops/s
# Warmup Iteration   3: 113209.419 ops/s
# Warmup Iteration   4: 141368.613 ops/s
# Warmup Iteration   5: 144927.899 ops/s
# Warmup Iteration   6: 144287.395 ops/s
# Warmup Iteration   7: 144043.693 ops/s
# Warmup Iteration   8: 143115.066 ops/s
# Warmup Iteration   9: 144180.055 ops/s
# Warmup Iteration  10: 144330.960 ops/s
# Warmup Iteration  11: 143887.301 ops/s
# Warmup Iteration  12: 144199.319 ops/s
# Warmup Iteration  13: 144097.805 ops/s
# Warmup Iteration  14: 144208.207 ops/s
# Warmup Iteration  15: 143926.525 ops/s
# Warmup Iteration  16: 144555.556 ops/s
# Warmup Iteration  17: 151439.620 ops/s
# Warmup Iteration  18: 124623.611 ops/s
# Warmup Iteration  19: 145836.466 ops/s
# Warmup Iteration  20: 151019.895 ops/s
# Warmup Iteration  21: 150928.099 ops/s
# Warmup Iteration  22: 150715.428 ops/s
# Warmup Iteration  23: 150790.359 ops/s
# Warmup Iteration  24: 151135.653 ops/s
# Warmup Iteration  25: 151026.125 ops/s
# Warmup Iteration  26: 150675.910 ops/s
# Warmup Iteration  27: 150892.581 ops/s
# Warmup Iteration  28: 150906.351 ops/s
# Warmup Iteration  29: 151239.828 ops/s
# Warmup Iteration  30: 151092.478 ops/s
Iteration   1: 150855.923 ops/s
Iteration   2: 151196.103 ops/s
Iteration   3: 150871.529 ops/s
Iteration   4: 150925.675 ops/s
Iteration   5: 151246.163 ops/s
Iteration   6: 151200.736 ops/s
Iteration   7: 150828.504 ops/s
Iteration   8: 150823.206 ops/s
Iteration   9: 151160.460 ops/s
Iteration  10: 150891.597 ops/s
Iteration  11: 151144.443 ops/s
Iteration  12: 150755.582 ops/s
Iteration  13: 150721.293 ops/s
Iteration  14: 150995.820 ops/s
Iteration  15: 150889.244 ops/s
Iteration  16: 151422.070 ops/s
Iteration  17: 150838.804 ops/s
Iteration  18: 150724.470 ops/s
Iteration  19: 150903.004 ops/s
Iteration  20: 151031.685 ops/s
Iteration  21: 150760.421 ops/s
Iteration  22: 151126.777 ops/s
Iteration  23: 151177.326 ops/s
Iteration  24: 151041.025 ops/s
Iteration  25: 150883.842 ops/s
Iteration  26: 150880.230 ops/s
Iteration  27: 151090.829 ops/s
Iteration  28: 150936.696 ops/s
Iteration  29: 151159.997 ops/s
Iteration  30: 150943.131 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_998._Benchmark.benchmark_Cluster_998":
  150980.886 ±(99.9%) 118.083 ops/s [Average]
  (min, avg, max) = (150721.293, 150980.886, 151422.070), stdev = 176.741
  CI (99.9%): [150862.803, 151098.969] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_998._Benchmark.benchmark_Cluster_998  thrpt   30  150980.886 ± 118.083  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_999._Benchmark.benchmark_Cluster_999$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms8G -Xmx8G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_999._Benchmark.benchmark_Cluster_999

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 38868.728 ops/s
# Warmup Iteration   2: 83386.480 ops/s
# Warmup Iteration   3: 128647.164 ops/s
# Warmup Iteration   4: 127618.038 ops/s
# Warmup Iteration   5: 128637.996 ops/s
# Warmup Iteration   6: 128613.598 ops/s
# Warmup Iteration   7: 101894.623 ops/s
# Warmup Iteration   8: 128610.439 ops/s
# Warmup Iteration   9: 128345.094 ops/s
# Warmup Iteration  10: 128001.972 ops/s
# Warmup Iteration  11: 128127.990 ops/s
# Warmup Iteration  12: 128453.888 ops/s
# Warmup Iteration  13: 128127.615 ops/s
# Warmup Iteration  14: 128324.619 ops/s
# Warmup Iteration  15: 128355.513 ops/s
# Warmup Iteration  16: 128533.157 ops/s
# Warmup Iteration  17: 128632.209 ops/s
# Warmup Iteration  18: 128580.976 ops/s
# Warmup Iteration  19: 128630.838 ops/s
# Warmup Iteration  20: 128624.086 ops/s
# Warmup Iteration  21: 128712.980 ops/s
# Warmup Iteration  22: 128819.655 ops/s
# Warmup Iteration  23: 128485.560 ops/s
# Warmup Iteration  24: 128406.733 ops/s
# Warmup Iteration  25: 128555.647 ops/s
# Warmup Iteration  26: 128749.133 ops/s
# Warmup Iteration  27: 128798.267 ops/s
# Warmup Iteration  28: 128900.828 ops/s
# Warmup Iteration  29: 128748.448 ops/s
# Warmup Iteration  30: 128760.748 ops/s
Iteration   1: 128706.862 ops/s
Iteration   2: 128774.932 ops/s
Iteration   3: 128884.871 ops/s
Iteration   4: 128586.267 ops/s
Iteration   5: 128768.229 ops/s
Iteration   6: 128924.806 ops/s
Iteration   7: 129054.039 ops/s
Iteration   8: 128652.836 ops/s
Iteration   9: 128903.861 ops/s
Iteration  10: 128564.094 ops/s
Iteration  11: 128350.754 ops/s
Iteration  12: 128560.575 ops/s
Iteration  13: 128805.690 ops/s
Iteration  14: 128831.872 ops/s
Iteration  15: 128860.219 ops/s
Iteration  16: 128603.727 ops/s
Iteration  17: 128481.129 ops/s
Iteration  18: 128329.144 ops/s
Iteration  19: 128193.552 ops/s
Iteration  20: 128309.364 ops/s
Iteration  21: 128120.169 ops/s
Iteration  22: 128376.637 ops/s
Iteration  23: 128098.593 ops/s
Iteration  24: 128287.435 ops/s
Iteration  25: 128355.513 ops/s
Iteration  26: 128981.857 ops/s
Iteration  27: 128884.437 ops/s
Iteration  28: 128940.128 ops/s
Iteration  29: 128678.555 ops/s
Iteration  30: 128696.770 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_999._Benchmark.benchmark_Cluster_999":
  128618.897 ±(99.9%) 182.364 ops/s [Average]
  (min, avg, max) = (128098.593, 128618.897, 129054.039), stdev = 272.953
  CI (99.9%): [128436.534, 128801.261] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_999._Benchmark.benchmark_Cluster_999  thrpt   30  128618.897 ± 182.364  ops/s
----------------------------------------
