=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1._Benchmark.benchmark_Cluster_1$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1._Benchmark.benchmark_Cluster_1

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57808.780 ops/s
# Warmup Iteration   2: 69474.406 ops/s
# Warmup Iteration   3: 85404.687 ops/s
# Warmup Iteration   4: 115845.402 ops/s
# Warmup Iteration   5: 115412.410 ops/s
# Warmup Iteration   6: 114254.376 ops/s
# Warmup Iteration   7: 114932.775 ops/s
# Warmup Iteration   8: 115166.533 ops/s
# Warmup Iteration   9: 114559.853 ops/s
# Warmup Iteration  10: 114752.223 ops/s
# Warmup Iteration  11: 114632.302 ops/s
# Warmup Iteration  12: 107073.236 ops/s
# Warmup Iteration  13: 85668.724 ops/s
# Warmup Iteration  14: 115452.646 ops/s
# Warmup Iteration  15: 115311.641 ops/s
# Warmup Iteration  16: 115002.981 ops/s
# Warmup Iteration  17: 118390.833 ops/s
# Warmup Iteration  18: 118581.450 ops/s
# Warmup Iteration  19: 118814.170 ops/s
# Warmup Iteration  20: 119574.761 ops/s
# Warmup Iteration  21: 119052.230 ops/s
# Warmup Iteration  22: 119463.144 ops/s
# Warmup Iteration  23: 118798.162 ops/s
# Warmup Iteration  24: 119648.322 ops/s
# Warmup Iteration  25: 118685.081 ops/s
# Warmup Iteration  26: 118222.139 ops/s
# Warmup Iteration  27: 118438.874 ops/s
# Warmup Iteration  28: 119090.731 ops/s
# Warmup Iteration  29: 120103.415 ops/s
# Warmup Iteration  30: 119488.207 ops/s
Iteration   1: 119379.983 ops/s
Iteration   2: 119653.149 ops/s
Iteration   3: 119837.378 ops/s
Iteration   4: 119818.526 ops/s
Iteration   5: 119402.059 ops/s
Iteration   6: 118665.315 ops/s
Iteration   7: 119463.187 ops/s
Iteration   8: 119255.096 ops/s
Iteration   9: 119518.433 ops/s
Iteration  10: 119493.382 ops/s
Iteration  11: 119426.801 ops/s
Iteration  12: 119593.010 ops/s
Iteration  13: 119451.264 ops/s
Iteration  14: 118745.175 ops/s
Iteration  15: 120283.753 ops/s
Iteration  16: 119704.775 ops/s
Iteration  17: 119993.231 ops/s
Iteration  18: 119813.894 ops/s
Iteration  19: 119417.510 ops/s
Iteration  20: 119354.073 ops/s
Iteration  21: 119133.044 ops/s
Iteration  22: 118709.732 ops/s
Iteration  23: 117989.307 ops/s
Iteration  24: 119463.459 ops/s
Iteration  25: 119526.283 ops/s
Iteration  26: 119543.679 ops/s
Iteration  27: 119533.271 ops/s
Iteration  28: 119745.820 ops/s
Iteration  29: 119665.624 ops/s
Iteration  30: 119056.572 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1._Benchmark.benchmark_Cluster_1":
  119421.226 ±(99.9%) 298.226 ops/s [Average]
  (min, avg, max) = (117989.307, 119421.226, 120283.753), stdev = 446.370
  CI (99.9%): [119123.001, 119719.452] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score     Error  Units
Cluster_1._Benchmark.benchmark_Cluster_1  thrpt   30  119421.226 ± 298.226  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_10._Benchmark.benchmark_Cluster_10$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_10._Benchmark.benchmark_Cluster_10

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71279.909 ops/s
# Warmup Iteration   2: 91257.679 ops/s
# Warmup Iteration   3: 90454.206 ops/s
# Warmup Iteration   4: 102244.924 ops/s
# Warmup Iteration   5: 132556.530 ops/s
# Warmup Iteration   6: 132411.512 ops/s
# Warmup Iteration   7: 128280.811 ops/s
# Warmup Iteration   8: 129483.068 ops/s
# Warmup Iteration   9: 128924.802 ops/s
# Warmup Iteration  10: 131261.380 ops/s
# Warmup Iteration  11: 131522.617 ops/s
# Warmup Iteration  12: 132351.256 ops/s
# Warmup Iteration  13: 132566.876 ops/s
# Warmup Iteration  14: 131492.880 ops/s
# Warmup Iteration  15: 130627.722 ops/s
# Warmup Iteration  16: 130655.603 ops/s
# Warmup Iteration  17: 135934.585 ops/s
# Warmup Iteration  18: 135929.731 ops/s
# Warmup Iteration  19: 107148.457 ops/s
# Warmup Iteration  20: 112427.178 ops/s
# Warmup Iteration  21: 134196.661 ops/s
# Warmup Iteration  22: 132245.975 ops/s
# Warmup Iteration  23: 132839.423 ops/s
# Warmup Iteration  24: 131644.092 ops/s
# Warmup Iteration  25: 131307.945 ops/s
# Warmup Iteration  26: 130815.561 ops/s
# Warmup Iteration  27: 131441.341 ops/s
# Warmup Iteration  28: 133287.041 ops/s
# Warmup Iteration  29: 132701.360 ops/s
# Warmup Iteration  30: 132869.685 ops/s
Iteration   1: 132409.125 ops/s
Iteration   2: 131767.346 ops/s
Iteration   3: 130016.239 ops/s
Iteration   4: 131771.781 ops/s
Iteration   5: 133044.180 ops/s
Iteration   6: 134085.461 ops/s
Iteration   7: 132446.103 ops/s
Iteration   8: 132419.016 ops/s
Iteration   9: 133804.555 ops/s
Iteration  10: 132486.915 ops/s
Iteration  11: 131537.715 ops/s
Iteration  12: 129781.258 ops/s
Iteration  13: 130162.171 ops/s
Iteration  14: 131036.552 ops/s
Iteration  15: 129414.997 ops/s
Iteration  16: 131634.863 ops/s
Iteration  17: 131903.116 ops/s
Iteration  18: 132031.999 ops/s
Iteration  19: 131695.031 ops/s
Iteration  20: 130449.626 ops/s
Iteration  21: 132136.780 ops/s
Iteration  22: 130845.269 ops/s
Iteration  23: 131259.249 ops/s
Iteration  24: 131708.230 ops/s
Iteration  25: 129985.804 ops/s
Iteration  26: 131127.878 ops/s
Iteration  27: 132810.274 ops/s
Iteration  28: 131794.266 ops/s
Iteration  29: 131924.906 ops/s
Iteration  30: 131693.251 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_10._Benchmark.benchmark_Cluster_10":
  131639.465 ±(99.9%) 744.228 ops/s [Average]
  (min, avg, max) = (129414.997, 131639.465, 134085.461), stdev = 1113.925
  CI (99.9%): [130895.237, 132383.693] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_10._Benchmark.benchmark_Cluster_10  thrpt   30  131639.465 ± 744.228  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_100._Benchmark.benchmark_Cluster_100$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_100._Benchmark.benchmark_Cluster_100

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91266.986 ops/s
# Warmup Iteration   2: 108091.719 ops/s
# Warmup Iteration   3: 109035.923 ops/s
# Warmup Iteration   4: 126708.671 ops/s
# Warmup Iteration   5: 150446.070 ops/s
# Warmup Iteration   6: 151779.706 ops/s
# Warmup Iteration   7: 151380.182 ops/s
# Warmup Iteration   8: 151071.319 ops/s
# Warmup Iteration   9: 149137.545 ops/s
# Warmup Iteration  10: 151098.773 ops/s
# Warmup Iteration  11: 150441.137 ops/s
# Warmup Iteration  12: 151570.474 ops/s
# Warmup Iteration  13: 152003.551 ops/s
# Warmup Iteration  14: 150827.592 ops/s
# Warmup Iteration  15: 150931.728 ops/s
# Warmup Iteration  16: 150986.622 ops/s
# Warmup Iteration  17: 159425.206 ops/s
# Warmup Iteration  18: 158942.098 ops/s
# Warmup Iteration  19: 125974.211 ops/s
# Warmup Iteration  20: 141560.513 ops/s
# Warmup Iteration  21: 157412.511 ops/s
# Warmup Iteration  22: 157263.437 ops/s
# Warmup Iteration  23: 157709.621 ops/s
# Warmup Iteration  24: 157040.897 ops/s
# Warmup Iteration  25: 158185.230 ops/s
# Warmup Iteration  26: 157409.372 ops/s
# Warmup Iteration  27: 157165.725 ops/s
# Warmup Iteration  28: 157423.873 ops/s
# Warmup Iteration  29: 157925.960 ops/s
# Warmup Iteration  30: 158284.187 ops/s
Iteration   1: 158507.443 ops/s
Iteration   2: 158552.084 ops/s
Iteration   3: 159220.471 ops/s
Iteration   4: 159060.484 ops/s
Iteration   5: 158165.695 ops/s
Iteration   6: 158319.590 ops/s
Iteration   7: 159264.074 ops/s
Iteration   8: 159358.981 ops/s
Iteration   9: 158535.825 ops/s
Iteration  10: 158500.392 ops/s
Iteration  11: 158378.111 ops/s
Iteration  12: 159350.211 ops/s
Iteration  13: 158509.686 ops/s
Iteration  14: 158500.094 ops/s
Iteration  15: 158652.681 ops/s
Iteration  16: 159178.646 ops/s
Iteration  17: 158826.314 ops/s
Iteration  18: 158160.094 ops/s
Iteration  19: 159084.395 ops/s
Iteration  20: 159105.380 ops/s
Iteration  21: 158446.868 ops/s
Iteration  22: 158578.130 ops/s
Iteration  23: 158759.107 ops/s
Iteration  24: 158485.709 ops/s
Iteration  25: 158483.137 ops/s
Iteration  26: 159050.139 ops/s
Iteration  27: 157135.719 ops/s
Iteration  28: 158029.588 ops/s
Iteration  29: 157208.640 ops/s
Iteration  30: 158482.978 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_100._Benchmark.benchmark_Cluster_100":
  158596.355 ±(99.9%) 357.560 ops/s [Average]
  (min, avg, max) = (157135.719, 158596.355, 159358.981), stdev = 535.178
  CI (99.9%): [158238.796, 158953.915] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_100._Benchmark.benchmark_Cluster_100  thrpt   30  158596.355 ± 357.560  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1000._Benchmark.benchmark_Cluster_1000$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1000._Benchmark.benchmark_Cluster_1000

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 106128.880 ops/s
# Warmup Iteration   2: 118347.404 ops/s
# Warmup Iteration   3: 117877.295 ops/s
# Warmup Iteration   4: 144483.803 ops/s
# Warmup Iteration   5: 164998.665 ops/s
# Warmup Iteration   6: 165090.483 ops/s
# Warmup Iteration   7: 164781.705 ops/s
# Warmup Iteration   8: 164763.264 ops/s
# Warmup Iteration   9: 163104.357 ops/s
# Warmup Iteration  10: 164645.501 ops/s
# Warmup Iteration  11: 164587.689 ops/s
# Warmup Iteration  12: 165056.919 ops/s
# Warmup Iteration  13: 164327.030 ops/s
# Warmup Iteration  14: 163288.203 ops/s
# Warmup Iteration  15: 164571.960 ops/s
# Warmup Iteration  16: 165196.046 ops/s
# Warmup Iteration  17: 175073.798 ops/s
# Warmup Iteration  18: 162450.958 ops/s
# Warmup Iteration  19: 129482.275 ops/s
# Warmup Iteration  20: 172844.898 ops/s
# Warmup Iteration  21: 174226.909 ops/s
# Warmup Iteration  22: 172728.019 ops/s
# Warmup Iteration  23: 172625.154 ops/s
# Warmup Iteration  24: 173332.208 ops/s
# Warmup Iteration  25: 172786.419 ops/s
# Warmup Iteration  26: 173532.593 ops/s
# Warmup Iteration  27: 174322.729 ops/s
# Warmup Iteration  28: 173364.841 ops/s
# Warmup Iteration  29: 172869.740 ops/s
# Warmup Iteration  30: 172298.070 ops/s
Iteration   1: 172070.043 ops/s
Iteration   2: 173039.567 ops/s
Iteration   3: 175189.116 ops/s
Iteration   4: 173986.845 ops/s
Iteration   5: 173094.554 ops/s
Iteration   6: 171497.510 ops/s
Iteration   7: 174085.476 ops/s
Iteration   8: 174151.134 ops/s
Iteration   9: 172523.668 ops/s
Iteration  10: 172453.570 ops/s
Iteration  11: 171439.725 ops/s
Iteration  12: 172464.467 ops/s
Iteration  13: 172893.297 ops/s
Iteration  14: 173130.672 ops/s
Iteration  15: 172775.610 ops/s
Iteration  16: 172548.971 ops/s
Iteration  17: 173904.068 ops/s
Iteration  18: 173140.094 ops/s
Iteration  19: 173684.901 ops/s
Iteration  20: 172796.726 ops/s
Iteration  21: 173404.245 ops/s
Iteration  22: 172155.728 ops/s
Iteration  23: 173261.451 ops/s
Iteration  24: 171902.786 ops/s
Iteration  25: 172837.224 ops/s
Iteration  26: 173385.790 ops/s
Iteration  27: 173810.333 ops/s
Iteration  28: 172505.089 ops/s
Iteration  29: 174138.191 ops/s
Iteration  30: 173544.288 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1000._Benchmark.benchmark_Cluster_1000":
  173060.505 ±(99.9%) 568.348 ops/s [Average]
  (min, avg, max) = (171439.725, 173060.505, 175189.116), stdev = 850.676
  CI (99.9%): [172492.157, 173628.853] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1000._Benchmark.benchmark_Cluster_1000  thrpt   30  173060.505 ± 568.348  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1001._Benchmark.benchmark_Cluster_1001$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1001._Benchmark.benchmark_Cluster_1001

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66635.873 ops/s
# Warmup Iteration   2: 99294.606 ops/s
# Warmup Iteration   3: 160374.681 ops/s
# Warmup Iteration   4: 192181.060 ops/s
# Warmup Iteration   5: 191124.214 ops/s
# Warmup Iteration   6: 193558.154 ops/s
# Warmup Iteration   7: 192617.760 ops/s
# Warmup Iteration   8: 192427.577 ops/s
# Warmup Iteration   9: 158770.149 ops/s
# Warmup Iteration  10: 165500.759 ops/s
# Warmup Iteration  11: 193652.723 ops/s
# Warmup Iteration  12: 193771.852 ops/s
# Warmup Iteration  13: 191862.077 ops/s
# Warmup Iteration  14: 190481.603 ops/s
# Warmup Iteration  15: 189434.142 ops/s
# Warmup Iteration  16: 193614.585 ops/s
# Warmup Iteration  17: 191097.963 ops/s
# Warmup Iteration  18: 189877.123 ops/s
# Warmup Iteration  19: 191320.639 ops/s
# Warmup Iteration  20: 192594.080 ops/s
# Warmup Iteration  21: 190254.213 ops/s
# Warmup Iteration  22: 189846.531 ops/s
# Warmup Iteration  23: 189550.173 ops/s
# Warmup Iteration  24: 191734.873 ops/s
# Warmup Iteration  25: 192639.717 ops/s
# Warmup Iteration  26: 193124.151 ops/s
# Warmup Iteration  27: 193284.087 ops/s
# Warmup Iteration  28: 192679.734 ops/s
# Warmup Iteration  29: 193700.800 ops/s
# Warmup Iteration  30: 192945.039 ops/s
Iteration   1: 194514.846 ops/s
Iteration   2: 193667.419 ops/s
Iteration   3: 192875.794 ops/s
Iteration   4: 193317.877 ops/s
Iteration   5: 193819.967 ops/s
Iteration   6: 194580.843 ops/s
Iteration   7: 192301.926 ops/s
Iteration   8: 192942.056 ops/s
Iteration   9: 193726.006 ops/s
Iteration  10: 191988.694 ops/s
Iteration  11: 194210.803 ops/s
Iteration  12: 194194.660 ops/s
Iteration  13: 192735.168 ops/s
Iteration  14: 191931.684 ops/s
Iteration  15: 191737.323 ops/s
Iteration  16: 191631.284 ops/s
Iteration  17: 192188.524 ops/s
Iteration  18: 192436.026 ops/s
Iteration  19: 190381.854 ops/s
Iteration  20: 193681.943 ops/s
Iteration  21: 194190.237 ops/s
Iteration  22: 194093.793 ops/s
Iteration  23: 195481.007 ops/s
Iteration  24: 192787.038 ops/s
Iteration  25: 191840.334 ops/s
Iteration  26: 192637.581 ops/s
Iteration  27: 192855.329 ops/s
Iteration  28: 194283.680 ops/s
Iteration  29: 194282.017 ops/s
Iteration  30: 193115.886 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1001._Benchmark.benchmark_Cluster_1001":
  193147.720 ±(99.9%) 753.624 ops/s [Average]
  (min, avg, max) = (190381.854, 193147.720, 195481.007), stdev = 1127.989
  CI (99.9%): [192394.096, 193901.344] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1001._Benchmark.benchmark_Cluster_1001  thrpt   30  193147.720 ± 753.624  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1002._Benchmark.benchmark_Cluster_1002$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1002._Benchmark.benchmark_Cluster_1002

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 29983.537 ops/s
# Warmup Iteration   2: 57381.408 ops/s
# Warmup Iteration   3: 58221.278 ops/s
# Warmup Iteration   4: 81139.116 ops/s
# Warmup Iteration   5: 100989.613 ops/s
# Warmup Iteration   6: 101145.173 ops/s
# Warmup Iteration   7: 100957.441 ops/s
# Warmup Iteration   8: 101661.481 ops/s
# Warmup Iteration   9: 101145.609 ops/s
# Warmup Iteration  10: 100956.286 ops/s
# Warmup Iteration  11: 101342.220 ops/s
# Warmup Iteration  12: 101402.792 ops/s
# Warmup Iteration  13: 59948.064 ops/s
# Warmup Iteration  14: 100310.152 ops/s
# Warmup Iteration  15: 100599.067 ops/s
# Warmup Iteration  16: 100961.085 ops/s
# Warmup Iteration  17: 102652.617 ops/s
# Warmup Iteration  18: 102980.634 ops/s
# Warmup Iteration  19: 103492.696 ops/s
# Warmup Iteration  20: 103035.368 ops/s
# Warmup Iteration  21: 103052.662 ops/s
# Warmup Iteration  22: 102584.508 ops/s
# Warmup Iteration  23: 102119.597 ops/s
# Warmup Iteration  24: 101809.130 ops/s
# Warmup Iteration  25: 103919.363 ops/s
# Warmup Iteration  26: 103214.185 ops/s
# Warmup Iteration  27: 103001.983 ops/s
# Warmup Iteration  28: 103309.010 ops/s
# Warmup Iteration  29: 102208.728 ops/s
# Warmup Iteration  30: 102625.361 ops/s
Iteration   1: 103166.577 ops/s
Iteration   2: 103559.850 ops/s
Iteration   3: 102980.135 ops/s
Iteration   4: 102780.841 ops/s
Iteration   5: 102047.469 ops/s
Iteration   6: 102765.114 ops/s
Iteration   7: 103645.982 ops/s
Iteration   8: 102250.541 ops/s
Iteration   9: 102782.615 ops/s
Iteration  10: 102545.656 ops/s
Iteration  11: 102844.872 ops/s
Iteration  12: 103150.716 ops/s
Iteration  13: 102885.157 ops/s
Iteration  14: 102651.610 ops/s
Iteration  15: 102515.346 ops/s
Iteration  16: 102614.026 ops/s
Iteration  17: 102570.042 ops/s
Iteration  18: 101881.040 ops/s
Iteration  19: 102087.282 ops/s
Iteration  20: 101663.753 ops/s
Iteration  21: 102571.298 ops/s
Iteration  22: 102538.003 ops/s
Iteration  23: 102464.568 ops/s
Iteration  24: 103140.614 ops/s
Iteration  25: 102652.540 ops/s
Iteration  26: 102625.788 ops/s
Iteration  27: 102521.194 ops/s
Iteration  28: 102381.742 ops/s
Iteration  29: 103597.299 ops/s
Iteration  30: 103644.331 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1002._Benchmark.benchmark_Cluster_1002":
  102717.533 ±(99.9%) 331.971 ops/s [Average]
  (min, avg, max) = (101663.753, 102717.533, 103645.982), stdev = 496.879
  CI (99.9%): [102385.562, 103049.504] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1002._Benchmark.benchmark_Cluster_1002  thrpt   30  102717.533 ± 331.971  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1003._Benchmark.benchmark_Cluster_1003$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1003._Benchmark.benchmark_Cluster_1003

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72488.694 ops/s
# Warmup Iteration   2: 91951.328 ops/s
# Warmup Iteration   3: 131153.104 ops/s
# Warmup Iteration   4: 164473.076 ops/s
# Warmup Iteration   5: 162824.906 ops/s
# Warmup Iteration   6: 165154.154 ops/s
# Warmup Iteration   7: 164334.397 ops/s
# Warmup Iteration   8: 163999.001 ops/s
# Warmup Iteration   9: 164247.131 ops/s
# Warmup Iteration  10: 163912.059 ops/s
# Warmup Iteration  11: 112260.001 ops/s
# Warmup Iteration  12: 164358.857 ops/s
# Warmup Iteration  13: 165111.079 ops/s
# Warmup Iteration  14: 165389.641 ops/s
# Warmup Iteration  15: 164699.558 ops/s
# Warmup Iteration  16: 164684.884 ops/s
# Warmup Iteration  17: 164207.940 ops/s
# Warmup Iteration  18: 164418.155 ops/s
# Warmup Iteration  19: 164607.514 ops/s
# Warmup Iteration  20: 164341.765 ops/s
# Warmup Iteration  21: 164664.093 ops/s
# Warmup Iteration  22: 164547.742 ops/s
# Warmup Iteration  23: 165187.922 ops/s
# Warmup Iteration  24: 164372.918 ops/s
# Warmup Iteration  25: 164695.172 ops/s
# Warmup Iteration  26: 164863.644 ops/s
# Warmup Iteration  27: 164343.183 ops/s
# Warmup Iteration  28: 164769.335 ops/s
# Warmup Iteration  29: 165342.199 ops/s
# Warmup Iteration  30: 164607.643 ops/s
Iteration   1: 165084.276 ops/s
Iteration   2: 164111.341 ops/s
Iteration   3: 165206.978 ops/s
Iteration   4: 164637.085 ops/s
Iteration   5: 165113.217 ops/s
Iteration   6: 163948.136 ops/s
Iteration   7: 164148.103 ops/s
Iteration   8: 165116.346 ops/s
Iteration   9: 165320.411 ops/s
Iteration  10: 165237.760 ops/s
Iteration  11: 165123.892 ops/s
Iteration  12: 165155.740 ops/s
Iteration  13: 163892.809 ops/s
Iteration  14: 164444.373 ops/s
Iteration  15: 164709.026 ops/s
Iteration  16: 163776.084 ops/s
Iteration  17: 165251.386 ops/s
Iteration  18: 165141.565 ops/s
Iteration  19: 164921.843 ops/s
Iteration  20: 164524.689 ops/s
Iteration  21: 164968.440 ops/s
Iteration  22: 164997.544 ops/s
Iteration  23: 164039.008 ops/s
Iteration  24: 164700.714 ops/s
Iteration  25: 164823.105 ops/s
Iteration  26: 164473.113 ops/s
Iteration  27: 164837.510 ops/s
Iteration  28: 165578.332 ops/s
Iteration  29: 164499.212 ops/s
Iteration  30: 164124.375 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1003._Benchmark.benchmark_Cluster_1003":
  164730.214 ±(99.9%) 327.753 ops/s [Average]
  (min, avg, max) = (163776.084, 164730.214, 165578.332), stdev = 490.565
  CI (99.9%): [164402.461, 165057.967] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1003._Benchmark.benchmark_Cluster_1003  thrpt   30  164730.214 ± 327.753  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1004._Benchmark.benchmark_Cluster_1004$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1004._Benchmark.benchmark_Cluster_1004

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55411.523 ops/s
# Warmup Iteration   2: 95206.289 ops/s
# Warmup Iteration   3: 210119.682 ops/s
# Warmup Iteration   4: 222968.909 ops/s
# Warmup Iteration   5: 226200.745 ops/s
# Warmup Iteration   6: 225953.897 ops/s
# Warmup Iteration   7: 155595.537 ops/s
# Warmup Iteration   8: 220443.038 ops/s
# Warmup Iteration   9: 225448.968 ops/s
# Warmup Iteration  10: 226006.645 ops/s
# Warmup Iteration  11: 226636.178 ops/s
# Warmup Iteration  12: 226335.779 ops/s
# Warmup Iteration  13: 226376.618 ops/s
# Warmup Iteration  14: 227073.528 ops/s
# Warmup Iteration  15: 227543.144 ops/s
# Warmup Iteration  16: 227378.151 ops/s
# Warmup Iteration  17: 228250.331 ops/s
# Warmup Iteration  18: 227837.604 ops/s
# Warmup Iteration  19: 227709.474 ops/s
# Warmup Iteration  20: 227978.681 ops/s
# Warmup Iteration  21: 229025.627 ops/s
# Warmup Iteration  22: 227497.519 ops/s
# Warmup Iteration  23: 229107.677 ops/s
# Warmup Iteration  24: 228748.975 ops/s
# Warmup Iteration  25: 229498.676 ops/s
# Warmup Iteration  26: 227635.890 ops/s
# Warmup Iteration  27: 228600.445 ops/s
# Warmup Iteration  28: 227213.704 ops/s
# Warmup Iteration  29: 229452.195 ops/s
# Warmup Iteration  30: 229670.679 ops/s
Iteration   1: 230613.592 ops/s
Iteration   2: 227524.904 ops/s
Iteration   3: 227716.112 ops/s
Iteration   4: 228784.718 ops/s
Iteration   5: 228722.427 ops/s
Iteration   6: 228472.562 ops/s
Iteration   7: 229187.693 ops/s
Iteration   8: 226733.791 ops/s
Iteration   9: 227327.028 ops/s
Iteration  10: 226152.044 ops/s
Iteration  11: 226025.778 ops/s
Iteration  12: 227430.514 ops/s
Iteration  13: 228106.942 ops/s
Iteration  14: 228244.559 ops/s
Iteration  15: 227721.281 ops/s
Iteration  16: 228054.978 ops/s
Iteration  17: 226900.786 ops/s
Iteration  18: 226681.789 ops/s
Iteration  19: 227118.685 ops/s
Iteration  20: 228268.402 ops/s
Iteration  21: 228510.470 ops/s
Iteration  22: 227352.519 ops/s
Iteration  23: 228388.277 ops/s
Iteration  24: 227968.521 ops/s
Iteration  25: 227766.838 ops/s
Iteration  26: 226833.854 ops/s
Iteration  27: 227948.642 ops/s
Iteration  28: 228558.857 ops/s
Iteration  29: 228666.390 ops/s
Iteration  30: 228813.689 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1004._Benchmark.benchmark_Cluster_1004":
  227886.555 ±(99.9%) 642.622 ops/s [Average]
  (min, avg, max) = (226025.778, 227886.555, 230613.592), stdev = 961.846
  CI (99.9%): [227243.933, 228529.176] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1004._Benchmark.benchmark_Cluster_1004  thrpt   30  227886.555 ± 642.622  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1005._Benchmark.benchmark_Cluster_1005$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1005._Benchmark.benchmark_Cluster_1005

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71816.678 ops/s
# Warmup Iteration   2: 100952.812 ops/s
# Warmup Iteration   3: 148102.349 ops/s
# Warmup Iteration   4: 186525.588 ops/s
# Warmup Iteration   5: 184329.973 ops/s
# Warmup Iteration   6: 187092.176 ops/s
# Warmup Iteration   7: 186318.952 ops/s
# Warmup Iteration   8: 186941.348 ops/s
# Warmup Iteration   9: 187043.587 ops/s
# Warmup Iteration  10: 145859.790 ops/s
# Warmup Iteration  11: 166737.928 ops/s
# Warmup Iteration  12: 187196.182 ops/s
# Warmup Iteration  13: 188030.765 ops/s
# Warmup Iteration  14: 187544.336 ops/s
# Warmup Iteration  15: 186769.707 ops/s
# Warmup Iteration  16: 187038.451 ops/s
# Warmup Iteration  17: 187321.292 ops/s
# Warmup Iteration  18: 187136.416 ops/s
# Warmup Iteration  19: 186142.121 ops/s
# Warmup Iteration  20: 186766.530 ops/s
# Warmup Iteration  21: 186605.931 ops/s
# Warmup Iteration  22: 186000.882 ops/s
# Warmup Iteration  23: 185620.156 ops/s
# Warmup Iteration  24: 186871.495 ops/s
# Warmup Iteration  25: 186195.782 ops/s
# Warmup Iteration  26: 185944.204 ops/s
# Warmup Iteration  27: 187508.010 ops/s
# Warmup Iteration  28: 188579.519 ops/s
# Warmup Iteration  29: 188430.367 ops/s
# Warmup Iteration  30: 187874.531 ops/s
Iteration   1: 186654.205 ops/s
Iteration   2: 185980.918 ops/s
Iteration   3: 188082.846 ops/s
Iteration   4: 187679.268 ops/s
Iteration   5: 186945.232 ops/s
Iteration   6: 188484.475 ops/s
Iteration   7: 186670.674 ops/s
Iteration   8: 186287.916 ops/s
Iteration   9: 186346.961 ops/s
Iteration  10: 185318.165 ops/s
Iteration  11: 187971.055 ops/s
Iteration  12: 188550.509 ops/s
Iteration  13: 185999.490 ops/s
Iteration  14: 188517.139 ops/s
Iteration  15: 188786.706 ops/s
Iteration  16: 189010.607 ops/s
Iteration  17: 187636.884 ops/s
Iteration  18: 188458.828 ops/s
Iteration  19: 189087.044 ops/s
Iteration  20: 189040.316 ops/s
Iteration  21: 187801.168 ops/s
Iteration  22: 186484.007 ops/s
Iteration  23: 188148.165 ops/s
Iteration  24: 186567.762 ops/s
Iteration  25: 189088.051 ops/s
Iteration  26: 188115.372 ops/s
Iteration  27: 187429.280 ops/s
Iteration  28: 188366.230 ops/s
Iteration  29: 189007.885 ops/s
Iteration  30: 188013.175 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1005._Benchmark.benchmark_Cluster_1005":
  187684.344 ±(99.9%) 732.751 ops/s [Average]
  (min, avg, max) = (185318.165, 187684.344, 189088.051), stdev = 1096.747
  CI (99.9%): [186951.594, 188417.095] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1005._Benchmark.benchmark_Cluster_1005  thrpt   30  187684.344 ± 732.751  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1006._Benchmark.benchmark_Cluster_1006$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1006._Benchmark.benchmark_Cluster_1006

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61749.712 ops/s
# Warmup Iteration   2: 113287.121 ops/s
# Warmup Iteration   3: 185269.360 ops/s
# Warmup Iteration   4: 186237.966 ops/s
# Warmup Iteration   5: 188024.044 ops/s
# Warmup Iteration   6: 127270.492 ops/s
# Warmup Iteration   7: 186576.431 ops/s
# Warmup Iteration   8: 187059.104 ops/s
# Warmup Iteration   9: 187224.697 ops/s
# Warmup Iteration  10: 186736.804 ops/s
# Warmup Iteration  11: 187484.938 ops/s
# Warmup Iteration  12: 187607.853 ops/s
# Warmup Iteration  13: 188589.608 ops/s
# Warmup Iteration  14: 186185.676 ops/s
# Warmup Iteration  15: 186011.779 ops/s
# Warmup Iteration  16: 185971.779 ops/s
# Warmup Iteration  17: 187245.433 ops/s
# Warmup Iteration  18: 185831.118 ops/s
# Warmup Iteration  19: 187922.315 ops/s
# Warmup Iteration  20: 185724.877 ops/s
# Warmup Iteration  21: 187259.176 ops/s
# Warmup Iteration  22: 187113.178 ops/s
# Warmup Iteration  23: 187402.223 ops/s
# Warmup Iteration  24: 186540.853 ops/s
# Warmup Iteration  25: 186317.152 ops/s
# Warmup Iteration  26: 186493.186 ops/s
# Warmup Iteration  27: 188000.827 ops/s
# Warmup Iteration  28: 187273.732 ops/s
# Warmup Iteration  29: 187419.879 ops/s
# Warmup Iteration  30: 184974.942 ops/s
Iteration   1: 185449.275 ops/s
Iteration   2: 186671.619 ops/s
Iteration   3: 185884.065 ops/s
Iteration   4: 187048.752 ops/s
Iteration   5: 187522.151 ops/s
Iteration   6: 189358.229 ops/s
Iteration   7: 186261.901 ops/s
Iteration   8: 186781.923 ops/s
Iteration   9: 187414.008 ops/s
Iteration  10: 186852.723 ops/s
Iteration  11: 186013.353 ops/s
Iteration  12: 186085.288 ops/s
Iteration  13: 187580.816 ops/s
Iteration  14: 184965.342 ops/s
Iteration  15: 187866.986 ops/s
Iteration  16: 187690.960 ops/s
Iteration  17: 186101.561 ops/s
Iteration  18: 186209.814 ops/s
Iteration  19: 186462.452 ops/s
Iteration  20: 187734.528 ops/s
Iteration  21: 187801.726 ops/s
Iteration  22: 185865.409 ops/s
Iteration  23: 187290.057 ops/s
Iteration  24: 188901.807 ops/s
Iteration  25: 188004.839 ops/s
Iteration  26: 185592.642 ops/s
Iteration  27: 188670.353 ops/s
Iteration  28: 187199.353 ops/s
Iteration  29: 187007.876 ops/s
Iteration  30: 186572.533 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1006._Benchmark.benchmark_Cluster_1006":
  186962.078 ±(99.9%) 699.040 ops/s [Average]
  (min, avg, max) = (184965.342, 186962.078, 189358.229), stdev = 1046.291
  CI (99.9%): [186263.038, 187661.118] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1006._Benchmark.benchmark_Cluster_1006  thrpt   30  186962.078 ± 699.040  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1007._Benchmark.benchmark_Cluster_1007$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1007._Benchmark.benchmark_Cluster_1007

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62412.887 ops/s
# Warmup Iteration   2: 87414.874 ops/s
# Warmup Iteration   3: 89777.181 ops/s
# Warmup Iteration   4: 137409.976 ops/s
# Warmup Iteration   5: 139950.472 ops/s
# Warmup Iteration   6: 140277.829 ops/s
# Warmup Iteration   7: 139084.741 ops/s
# Warmup Iteration   8: 140163.129 ops/s
# Warmup Iteration   9: 139748.753 ops/s
# Warmup Iteration  10: 139372.190 ops/s
# Warmup Iteration  11: 140344.238 ops/s
# Warmup Iteration  12: 138706.291 ops/s
# Warmup Iteration  13: 139839.940 ops/s
# Warmup Iteration  14: 99651.129 ops/s
# Warmup Iteration  15: 130147.468 ops/s
# Warmup Iteration  16: 139579.624 ops/s
# Warmup Iteration  17: 144935.292 ops/s
# Warmup Iteration  18: 145919.006 ops/s
# Warmup Iteration  19: 145039.653 ops/s
# Warmup Iteration  20: 145407.622 ops/s
# Warmup Iteration  21: 145419.118 ops/s
# Warmup Iteration  22: 146555.630 ops/s
# Warmup Iteration  23: 145860.975 ops/s
# Warmup Iteration  24: 145183.578 ops/s
# Warmup Iteration  25: 145772.803 ops/s
# Warmup Iteration  26: 145942.234 ops/s
# Warmup Iteration  27: 145890.503 ops/s
# Warmup Iteration  28: 146037.587 ops/s
# Warmup Iteration  29: 145500.715 ops/s
# Warmup Iteration  30: 145928.597 ops/s
Iteration   1: 146655.361 ops/s
Iteration   2: 145847.453 ops/s
Iteration   3: 145853.052 ops/s
Iteration   4: 146017.288 ops/s
Iteration   5: 145995.778 ops/s
Iteration   6: 146164.361 ops/s
Iteration   7: 145994.497 ops/s
Iteration   8: 145657.108 ops/s
Iteration   9: 145362.484 ops/s
Iteration  10: 145660.370 ops/s
Iteration  11: 146493.983 ops/s
Iteration  12: 146335.856 ops/s
Iteration  13: 145536.043 ops/s
Iteration  14: 146395.760 ops/s
Iteration  15: 145470.246 ops/s
Iteration  16: 145876.283 ops/s
Iteration  17: 146407.524 ops/s
Iteration  18: 145073.829 ops/s
Iteration  19: 144542.185 ops/s
Iteration  20: 144555.020 ops/s
Iteration  21: 145390.297 ops/s
Iteration  22: 146053.206 ops/s
Iteration  23: 145229.832 ops/s
Iteration  24: 145218.473 ops/s
Iteration  25: 145315.192 ops/s
Iteration  26: 145608.863 ops/s
Iteration  27: 145154.360 ops/s
Iteration  28: 145184.773 ops/s
Iteration  29: 144768.348 ops/s
Iteration  30: 145737.190 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1007._Benchmark.benchmark_Cluster_1007":
  145651.834 ±(99.9%) 370.796 ops/s [Average]
  (min, avg, max) = (144542.185, 145651.834, 146655.361), stdev = 554.990
  CI (99.9%): [145281.038, 146022.630] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1007._Benchmark.benchmark_Cluster_1007  thrpt   30  145651.834 ± 370.796  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1008._Benchmark.benchmark_Cluster_1008$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1008._Benchmark.benchmark_Cluster_1008

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67517.454 ops/s
# Warmup Iteration   2: 103011.062 ops/s
# Warmup Iteration   3: 136556.867 ops/s
# Warmup Iteration   4: 182338.836 ops/s
# Warmup Iteration   5: 182141.334 ops/s
# Warmup Iteration   6: 180417.709 ops/s
# Warmup Iteration   7: 182872.019 ops/s
# Warmup Iteration   8: 183078.662 ops/s
# Warmup Iteration   9: 182856.953 ops/s
# Warmup Iteration  10: 182692.778 ops/s
# Warmup Iteration  11: 127292.628 ops/s
# Warmup Iteration  12: 181755.512 ops/s
# Warmup Iteration  13: 183022.638 ops/s
# Warmup Iteration  14: 183091.499 ops/s
# Warmup Iteration  15: 183329.666 ops/s
# Warmup Iteration  16: 183037.109 ops/s
# Warmup Iteration  17: 182948.796 ops/s
# Warmup Iteration  18: 182810.817 ops/s
# Warmup Iteration  19: 181898.763 ops/s
# Warmup Iteration  20: 182223.795 ops/s
# Warmup Iteration  21: 182658.440 ops/s
# Warmup Iteration  22: 180703.941 ops/s
# Warmup Iteration  23: 182568.293 ops/s
# Warmup Iteration  24: 181879.379 ops/s
# Warmup Iteration  25: 181244.769 ops/s
# Warmup Iteration  26: 182000.104 ops/s
# Warmup Iteration  27: 181785.674 ops/s
# Warmup Iteration  28: 180223.475 ops/s
# Warmup Iteration  29: 179704.564 ops/s
# Warmup Iteration  30: 179742.855 ops/s
Iteration   1: 180974.598 ops/s
Iteration   2: 180166.319 ops/s
Iteration   3: 181275.176 ops/s
Iteration   4: 179434.979 ops/s
Iteration   5: 182815.178 ops/s
Iteration   6: 180308.179 ops/s
Iteration   7: 180324.931 ops/s
Iteration   8: 179666.151 ops/s
Iteration   9: 181111.226 ops/s
Iteration  10: 180653.354 ops/s
Iteration  11: 181456.373 ops/s
Iteration  12: 181435.923 ops/s
Iteration  13: 181952.781 ops/s
Iteration  14: 182295.839 ops/s
Iteration  15: 180897.251 ops/s
Iteration  16: 180167.651 ops/s
Iteration  17: 179886.137 ops/s
Iteration  18: 180547.095 ops/s
Iteration  19: 182051.747 ops/s
Iteration  20: 181254.090 ops/s
Iteration  21: 182417.012 ops/s
Iteration  22: 180574.106 ops/s
Iteration  23: 181982.256 ops/s
Iteration  24: 179539.063 ops/s
Iteration  25: 180314.894 ops/s
Iteration  26: 181031.527 ops/s
Iteration  27: 181401.806 ops/s
Iteration  28: 180435.666 ops/s
Iteration  29: 181435.542 ops/s
Iteration  30: 181348.342 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1008._Benchmark.benchmark_Cluster_1008":
  180971.840 ±(99.9%) 584.463 ops/s [Average]
  (min, avg, max) = (179434.979, 180971.840, 182815.178), stdev = 874.796
  CI (99.9%): [180387.377, 181556.302] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1008._Benchmark.benchmark_Cluster_1008  thrpt   30  180971.840 ± 584.463  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1009._Benchmark.benchmark_Cluster_1009$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1009._Benchmark.benchmark_Cluster_1009

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61003.052 ops/s
# Warmup Iteration   2: 91180.902 ops/s
# Warmup Iteration   3: 93550.985 ops/s
# Warmup Iteration   4: 133338.428 ops/s
# Warmup Iteration   5: 149410.543 ops/s
# Warmup Iteration   6: 148067.732 ops/s
# Warmup Iteration   7: 146229.753 ops/s
# Warmup Iteration   8: 147869.358 ops/s
# Warmup Iteration   9: 146122.833 ops/s
# Warmup Iteration  10: 147573.781 ops/s
# Warmup Iteration  11: 146411.748 ops/s
# Warmup Iteration  12: 147055.725 ops/s
# Warmup Iteration  13: 147689.987 ops/s
# Warmup Iteration  14: 147376.927 ops/s
# Warmup Iteration  15: 115169.808 ops/s
# Warmup Iteration  16: 128783.722 ops/s
# Warmup Iteration  17: 150974.537 ops/s
# Warmup Iteration  18: 150323.775 ops/s
# Warmup Iteration  19: 149315.364 ops/s
# Warmup Iteration  20: 149023.225 ops/s
# Warmup Iteration  21: 149425.678 ops/s
# Warmup Iteration  22: 149998.927 ops/s
# Warmup Iteration  23: 151530.747 ops/s
# Warmup Iteration  24: 149891.794 ops/s
# Warmup Iteration  25: 150678.578 ops/s
# Warmup Iteration  26: 150573.762 ops/s
# Warmup Iteration  27: 150954.551 ops/s
# Warmup Iteration  28: 150834.919 ops/s
# Warmup Iteration  29: 150164.674 ops/s
# Warmup Iteration  30: 151133.883 ops/s
Iteration   1: 149335.106 ops/s
Iteration   2: 151111.575 ops/s
Iteration   3: 150248.203 ops/s
Iteration   4: 149632.359 ops/s
Iteration   5: 149366.494 ops/s
Iteration   6: 149579.046 ops/s
Iteration   7: 150344.899 ops/s
Iteration   8: 149723.398 ops/s
Iteration   9: 150736.240 ops/s
Iteration  10: 150819.603 ops/s
Iteration  11: 150936.348 ops/s
Iteration  12: 150554.959 ops/s
Iteration  13: 149877.148 ops/s
Iteration  14: 150749.763 ops/s
Iteration  15: 150583.168 ops/s
Iteration  16: 149559.125 ops/s
Iteration  17: 150160.999 ops/s
Iteration  18: 150641.921 ops/s
Iteration  19: 151484.001 ops/s
Iteration  20: 150375.510 ops/s
Iteration  21: 150772.159 ops/s
Iteration  22: 151149.975 ops/s
Iteration  23: 150975.581 ops/s
Iteration  24: 150888.425 ops/s
Iteration  25: 149894.625 ops/s
Iteration  26: 149821.878 ops/s
Iteration  27: 149904.697 ops/s
Iteration  28: 149866.376 ops/s
Iteration  29: 149788.152 ops/s
Iteration  30: 149295.151 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1009._Benchmark.benchmark_Cluster_1009":
  150272.563 ±(99.9%) 411.149 ops/s [Average]
  (min, avg, max) = (149295.151, 150272.563, 151484.001), stdev = 615.389
  CI (99.9%): [149861.414, 150683.712] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1009._Benchmark.benchmark_Cluster_1009  thrpt   30  150272.563 ± 411.149  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_101._Benchmark.benchmark_Cluster_101$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_101._Benchmark.benchmark_Cluster_101

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66960.973 ops/s
# Warmup Iteration   2: 88364.474 ops/s
# Warmup Iteration   3: 175269.531 ops/s
# Warmup Iteration   4: 180297.632 ops/s
# Warmup Iteration   5: 182019.453 ops/s
# Warmup Iteration   6: 181504.119 ops/s
# Warmup Iteration   7: 181562.507 ops/s
# Warmup Iteration   8: 129504.548 ops/s
# Warmup Iteration   9: 177451.337 ops/s
# Warmup Iteration  10: 182847.967 ops/s
# Warmup Iteration  11: 182893.416 ops/s
# Warmup Iteration  12: 182732.102 ops/s
# Warmup Iteration  13: 183023.513 ops/s
# Warmup Iteration  14: 183366.489 ops/s
# Warmup Iteration  15: 181680.948 ops/s
# Warmup Iteration  16: 182767.162 ops/s
# Warmup Iteration  17: 183369.172 ops/s
# Warmup Iteration  18: 183427.040 ops/s
# Warmup Iteration  19: 183356.284 ops/s
# Warmup Iteration  20: 182699.579 ops/s
# Warmup Iteration  21: 183115.536 ops/s
# Warmup Iteration  22: 182636.411 ops/s
# Warmup Iteration  23: 182331.354 ops/s
# Warmup Iteration  24: 184190.202 ops/s
# Warmup Iteration  25: 183658.200 ops/s
# Warmup Iteration  26: 183011.522 ops/s
# Warmup Iteration  27: 182477.963 ops/s
# Warmup Iteration  28: 181773.494 ops/s
# Warmup Iteration  29: 182213.061 ops/s
# Warmup Iteration  30: 182717.324 ops/s
Iteration   1: 182035.833 ops/s
Iteration   2: 182603.885 ops/s
Iteration   3: 182613.844 ops/s
Iteration   4: 183360.788 ops/s
Iteration   5: 181530.257 ops/s
Iteration   6: 182131.343 ops/s
Iteration   7: 182600.889 ops/s
Iteration   8: 183514.894 ops/s
Iteration   9: 182117.974 ops/s
Iteration  10: 182915.037 ops/s
Iteration  11: 181947.231 ops/s
Iteration  12: 181584.547 ops/s
Iteration  13: 182138.014 ops/s
Iteration  14: 181968.062 ops/s
Iteration  15: 183317.836 ops/s
Iteration  16: 183513.496 ops/s
Iteration  17: 182547.928 ops/s
Iteration  18: 184423.096 ops/s
Iteration  19: 184269.393 ops/s
Iteration  20: 182416.637 ops/s
Iteration  21: 183264.750 ops/s
Iteration  22: 182257.550 ops/s
Iteration  23: 183351.890 ops/s
Iteration  24: 181960.629 ops/s
Iteration  25: 181578.835 ops/s
Iteration  26: 184279.079 ops/s
Iteration  27: 184515.027 ops/s
Iteration  28: 182479.618 ops/s
Iteration  29: 182181.222 ops/s
Iteration  30: 181786.052 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_101._Benchmark.benchmark_Cluster_101":
  182706.855 ±(99.9%) 589.398 ops/s [Average]
  (min, avg, max) = (181530.257, 182706.855, 184515.027), stdev = 882.183
  CI (99.9%): [182117.457, 183296.252] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_101._Benchmark.benchmark_Cluster_101  thrpt   30  182706.855 ± 589.398  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1010._Benchmark.benchmark_Cluster_1010$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1010._Benchmark.benchmark_Cluster_1010

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 32982.095 ops/s
# Warmup Iteration   2: 57443.727 ops/s
# Warmup Iteration   3: 59416.978 ops/s
# Warmup Iteration   4: 93270.840 ops/s
# Warmup Iteration   5: 92486.719 ops/s
# Warmup Iteration   6: 93893.304 ops/s
# Warmup Iteration   7: 91503.826 ops/s
# Warmup Iteration   8: 93554.917 ops/s
# Warmup Iteration   9: 92828.597 ops/s
# Warmup Iteration  10: 93465.099 ops/s
# Warmup Iteration  11: 93106.371 ops/s
# Warmup Iteration  12: 92797.612 ops/s
# Warmup Iteration  13: 89953.785 ops/s
# Warmup Iteration  14: 65426.707 ops/s
# Warmup Iteration  15: 92741.107 ops/s
# Warmup Iteration  16: 93536.457 ops/s
# Warmup Iteration  17: 93942.585 ops/s
# Warmup Iteration  18: 93289.354 ops/s
# Warmup Iteration  19: 92960.952 ops/s
# Warmup Iteration  20: 93585.396 ops/s
# Warmup Iteration  21: 93746.392 ops/s
# Warmup Iteration  22: 94060.850 ops/s
# Warmup Iteration  23: 93697.311 ops/s
# Warmup Iteration  24: 93456.500 ops/s
# Warmup Iteration  25: 93675.844 ops/s
# Warmup Iteration  26: 93730.898 ops/s
# Warmup Iteration  27: 93882.497 ops/s
# Warmup Iteration  28: 93532.946 ops/s
# Warmup Iteration  29: 93273.473 ops/s
# Warmup Iteration  30: 93188.588 ops/s
Iteration   1: 93873.718 ops/s
Iteration   2: 93540.453 ops/s
Iteration   3: 93360.925 ops/s
Iteration   4: 93267.743 ops/s
Iteration   5: 94602.952 ops/s
Iteration   6: 94821.042 ops/s
Iteration   7: 94406.899 ops/s
Iteration   8: 93053.849 ops/s
Iteration   9: 93640.572 ops/s
Iteration  10: 93728.574 ops/s
Iteration  11: 94300.659 ops/s
Iteration  12: 93592.946 ops/s
Iteration  13: 93517.150 ops/s
Iteration  14: 92659.375 ops/s
Iteration  15: 94164.812 ops/s
Iteration  16: 94407.256 ops/s
Iteration  17: 93053.387 ops/s
Iteration  18: 93831.578 ops/s
Iteration  19: 94304.770 ops/s
Iteration  20: 93232.967 ops/s
Iteration  21: 93617.078 ops/s
Iteration  22: 94146.898 ops/s
Iteration  23: 94109.924 ops/s
Iteration  24: 93895.828 ops/s
Iteration  25: 93175.154 ops/s
Iteration  26: 92729.360 ops/s
Iteration  27: 93477.943 ops/s
Iteration  28: 93780.220 ops/s
Iteration  29: 93843.406 ops/s
Iteration  30: 93466.518 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1010._Benchmark.benchmark_Cluster_1010":
  93720.132 ±(99.9%) 357.955 ops/s [Average]
  (min, avg, max) = (92659.375, 93720.132, 94821.042), stdev = 535.771
  CI (99.9%): [93362.176, 94078.087] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt      Score     Error  Units
Cluster_1010._Benchmark.benchmark_Cluster_1010  thrpt   30  93720.132 ± 357.955  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1011._Benchmark.benchmark_Cluster_1011$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1011._Benchmark.benchmark_Cluster_1011

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 35269.925 ops/s
# Warmup Iteration   2: 74427.970 ops/s
# Warmup Iteration   3: 118682.120 ops/s
# Warmup Iteration   4: 153683.579 ops/s
# Warmup Iteration   5: 152836.415 ops/s
# Warmup Iteration   6: 153768.591 ops/s
# Warmup Iteration   7: 154090.682 ops/s
# Warmup Iteration   8: 152606.920 ops/s
# Warmup Iteration   9: 105938.882 ops/s
# Warmup Iteration  10: 153670.646 ops/s
# Warmup Iteration  11: 153226.929 ops/s
# Warmup Iteration  12: 154061.899 ops/s
# Warmup Iteration  13: 154452.758 ops/s
# Warmup Iteration  14: 153693.373 ops/s
# Warmup Iteration  15: 154082.065 ops/s
# Warmup Iteration  16: 153438.951 ops/s
# Warmup Iteration  17: 154075.625 ops/s
# Warmup Iteration  18: 154387.118 ops/s
# Warmup Iteration  19: 153931.882 ops/s
# Warmup Iteration  20: 153363.682 ops/s
# Warmup Iteration  21: 154509.194 ops/s
# Warmup Iteration  22: 154887.239 ops/s
# Warmup Iteration  23: 154330.536 ops/s
# Warmup Iteration  24: 154291.409 ops/s
# Warmup Iteration  25: 153323.603 ops/s
# Warmup Iteration  26: 153707.634 ops/s
# Warmup Iteration  27: 153713.632 ops/s
# Warmup Iteration  28: 153626.710 ops/s
# Warmup Iteration  29: 152671.719 ops/s
# Warmup Iteration  30: 154308.836 ops/s
Iteration   1: 153337.862 ops/s
Iteration   2: 153011.633 ops/s
Iteration   3: 154250.836 ops/s
Iteration   4: 153115.415 ops/s
Iteration   5: 152967.385 ops/s
Iteration   6: 153774.565 ops/s
Iteration   7: 154639.458 ops/s
Iteration   8: 153739.865 ops/s
Iteration   9: 153555.263 ops/s
Iteration  10: 152891.783 ops/s
Iteration  11: 153607.260 ops/s
Iteration  12: 153386.651 ops/s
Iteration  13: 154172.541 ops/s
Iteration  14: 154970.572 ops/s
Iteration  15: 153844.794 ops/s
Iteration  16: 154377.567 ops/s
Iteration  17: 154506.435 ops/s
Iteration  18: 154329.144 ops/s
Iteration  19: 153697.221 ops/s
Iteration  20: 153621.778 ops/s
Iteration  21: 153441.468 ops/s
Iteration  22: 153668.033 ops/s
Iteration  23: 153619.276 ops/s
Iteration  24: 153602.759 ops/s
Iteration  25: 153551.134 ops/s
Iteration  26: 154034.242 ops/s
Iteration  27: 153961.911 ops/s
Iteration  28: 154787.186 ops/s
Iteration  29: 154110.974 ops/s
Iteration  30: 152423.727 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1011._Benchmark.benchmark_Cluster_1011":
  153766.625 ±(99.9%) 391.553 ops/s [Average]
  (min, avg, max) = (152423.727, 153766.625, 154970.572), stdev = 586.058
  CI (99.9%): [153375.072, 154158.177] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1011._Benchmark.benchmark_Cluster_1011  thrpt   30  153766.625 ± 391.553  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1012._Benchmark.benchmark_Cluster_1012$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1012._Benchmark.benchmark_Cluster_1012

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 110362.655 ops/s
# Warmup Iteration   2: 127180.441 ops/s
# Warmup Iteration   3: 127077.030 ops/s
# Warmup Iteration   4: 189263.933 ops/s
# Warmup Iteration   5: 190470.109 ops/s
# Warmup Iteration   6: 189920.504 ops/s
# Warmup Iteration   7: 189060.292 ops/s
# Warmup Iteration   8: 191418.507 ops/s
# Warmup Iteration   9: 191455.869 ops/s
# Warmup Iteration  10: 190721.783 ops/s
# Warmup Iteration  11: 191924.631 ops/s
# Warmup Iteration  12: 190313.563 ops/s
# Warmup Iteration  13: 190665.502 ops/s
# Warmup Iteration  14: 189258.672 ops/s
# Warmup Iteration  15: 161718.060 ops/s
# Warmup Iteration  16: 160073.755 ops/s
# Warmup Iteration  17: 200575.511 ops/s
# Warmup Iteration  18: 197671.474 ops/s
# Warmup Iteration  19: 199350.486 ops/s
# Warmup Iteration  20: 199409.005 ops/s
# Warmup Iteration  21: 199642.974 ops/s
# Warmup Iteration  22: 200922.153 ops/s
# Warmup Iteration  23: 200428.040 ops/s
# Warmup Iteration  24: 200024.957 ops/s
# Warmup Iteration  25: 200332.772 ops/s
# Warmup Iteration  26: 201165.036 ops/s
# Warmup Iteration  27: 200644.028 ops/s
# Warmup Iteration  28: 200006.170 ops/s
# Warmup Iteration  29: 199295.835 ops/s
# Warmup Iteration  30: 199372.429 ops/s
Iteration   1: 199449.440 ops/s
Iteration   2: 199951.988 ops/s
Iteration   3: 200476.760 ops/s
Iteration   4: 200891.468 ops/s
Iteration   5: 200788.362 ops/s
Iteration   6: 200017.703 ops/s
Iteration   7: 199551.811 ops/s
Iteration   8: 200343.519 ops/s
Iteration   9: 199398.458 ops/s
Iteration  10: 200680.908 ops/s
Iteration  11: 199578.622 ops/s
Iteration  12: 202179.891 ops/s
Iteration  13: 202412.151 ops/s
Iteration  14: 201087.193 ops/s
Iteration  15: 199590.692 ops/s
Iteration  16: 201655.146 ops/s
Iteration  17: 200609.059 ops/s
Iteration  18: 199471.022 ops/s
Iteration  19: 199613.247 ops/s
Iteration  20: 200112.452 ops/s
Iteration  21: 200510.081 ops/s
Iteration  22: 200395.879 ops/s
Iteration  23: 199427.130 ops/s
Iteration  24: 199706.664 ops/s
Iteration  25: 199582.555 ops/s
Iteration  26: 199279.477 ops/s
Iteration  27: 198888.426 ops/s
Iteration  28: 199797.150 ops/s
Iteration  29: 200211.243 ops/s
Iteration  30: 199840.733 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1012._Benchmark.benchmark_Cluster_1012":
  200183.308 ±(99.9%) 563.192 ops/s [Average]
  (min, avg, max) = (198888.426, 200183.308, 202412.151), stdev = 842.959
  CI (99.9%): [199620.116, 200746.500] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1012._Benchmark.benchmark_Cluster_1012  thrpt   30  200183.308 ± 563.192  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1013._Benchmark.benchmark_Cluster_1013$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1013._Benchmark.benchmark_Cluster_1013

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52581.039 ops/s
# Warmup Iteration   2: 83600.960 ops/s
# Warmup Iteration   3: 111912.182 ops/s
# Warmup Iteration   4: 149404.357 ops/s
# Warmup Iteration   5: 148253.396 ops/s
# Warmup Iteration   6: 148533.112 ops/s
# Warmup Iteration   7: 149928.723 ops/s
# Warmup Iteration   8: 149582.405 ops/s
# Warmup Iteration   9: 149746.440 ops/s
# Warmup Iteration  10: 149160.858 ops/s
# Warmup Iteration  11: 101747.470 ops/s
# Warmup Iteration  12: 149405.202 ops/s
# Warmup Iteration  13: 148529.674 ops/s
# Warmup Iteration  14: 148784.896 ops/s
# Warmup Iteration  15: 149096.581 ops/s
# Warmup Iteration  16: 150142.411 ops/s
# Warmup Iteration  17: 149544.579 ops/s
# Warmup Iteration  18: 148797.675 ops/s
# Warmup Iteration  19: 148621.186 ops/s
# Warmup Iteration  20: 148888.385 ops/s
# Warmup Iteration  21: 150159.349 ops/s
# Warmup Iteration  22: 149003.412 ops/s
# Warmup Iteration  23: 149309.375 ops/s
# Warmup Iteration  24: 148145.361 ops/s
# Warmup Iteration  25: 148127.084 ops/s
# Warmup Iteration  26: 149337.406 ops/s
# Warmup Iteration  27: 148126.270 ops/s
# Warmup Iteration  28: 147833.371 ops/s
# Warmup Iteration  29: 149115.288 ops/s
# Warmup Iteration  30: 148884.226 ops/s
Iteration   1: 148699.457 ops/s
Iteration   2: 147869.043 ops/s
Iteration   3: 149928.004 ops/s
Iteration   4: 147995.022 ops/s
Iteration   5: 147712.771 ops/s
Iteration   6: 147581.510 ops/s
Iteration   7: 147774.427 ops/s
Iteration   8: 148948.327 ops/s
Iteration   9: 147856.997 ops/s
Iteration  10: 149253.756 ops/s
Iteration  11: 150495.682 ops/s
Iteration  12: 150324.422 ops/s
Iteration  13: 149675.609 ops/s
Iteration  14: 149606.289 ops/s
Iteration  15: 149927.998 ops/s
Iteration  16: 149703.868 ops/s
Iteration  17: 150450.597 ops/s
Iteration  18: 149746.747 ops/s
Iteration  19: 148918.540 ops/s
Iteration  20: 148933.920 ops/s
Iteration  21: 149554.139 ops/s
Iteration  22: 148303.486 ops/s
Iteration  23: 147919.641 ops/s
Iteration  24: 147988.534 ops/s
Iteration  25: 148192.010 ops/s
Iteration  26: 147712.422 ops/s
Iteration  27: 148063.530 ops/s
Iteration  28: 147035.286 ops/s
Iteration  29: 147323.428 ops/s
Iteration  30: 149609.281 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1013._Benchmark.benchmark_Cluster_1013":
  148770.158 ±(99.9%) 682.443 ops/s [Average]
  (min, avg, max) = (147035.286, 148770.158, 150495.682), stdev = 1021.449
  CI (99.9%): [148087.715, 149452.601] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1013._Benchmark.benchmark_Cluster_1013  thrpt   30  148770.158 ± 682.443  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1014._Benchmark.benchmark_Cluster_1014$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1014._Benchmark.benchmark_Cluster_1014

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 98508.498 ops/s
# Warmup Iteration   2: 128046.019 ops/s
# Warmup Iteration   3: 221279.743 ops/s
# Warmup Iteration   4: 249461.352 ops/s
# Warmup Iteration   5: 248182.637 ops/s
# Warmup Iteration   6: 249994.950 ops/s
# Warmup Iteration   7: 251209.819 ops/s
# Warmup Iteration   8: 248581.611 ops/s
# Warmup Iteration   9: 189686.276 ops/s
# Warmup Iteration  10: 225941.181 ops/s
# Warmup Iteration  11: 245015.539 ops/s
# Warmup Iteration  12: 245866.140 ops/s
# Warmup Iteration  13: 247005.612 ops/s
# Warmup Iteration  14: 248061.714 ops/s
# Warmup Iteration  15: 248031.717 ops/s
# Warmup Iteration  16: 248225.766 ops/s
# Warmup Iteration  17: 249619.890 ops/s
# Warmup Iteration  18: 248672.532 ops/s
# Warmup Iteration  19: 249163.270 ops/s
# Warmup Iteration  20: 248473.573 ops/s
# Warmup Iteration  21: 247178.139 ops/s
# Warmup Iteration  22: 251381.124 ops/s
# Warmup Iteration  23: 250043.696 ops/s
# Warmup Iteration  24: 248569.433 ops/s
# Warmup Iteration  25: 250896.783 ops/s
# Warmup Iteration  26: 249634.384 ops/s
# Warmup Iteration  27: 248889.774 ops/s
# Warmup Iteration  28: 247598.199 ops/s
# Warmup Iteration  29: 248482.367 ops/s
# Warmup Iteration  30: 249541.678 ops/s
Iteration   1: 249605.230 ops/s
Iteration   2: 248107.959 ops/s
Iteration   3: 248714.763 ops/s
Iteration   4: 245990.902 ops/s
Iteration   5: 250047.352 ops/s
Iteration   6: 247799.931 ops/s
Iteration   7: 248373.960 ops/s
Iteration   8: 248497.295 ops/s
Iteration   9: 250432.746 ops/s
Iteration  10: 250530.972 ops/s
Iteration  11: 251365.669 ops/s
Iteration  12: 250514.057 ops/s
Iteration  13: 249897.578 ops/s
Iteration  14: 251128.908 ops/s
Iteration  15: 250712.776 ops/s
Iteration  16: 249550.274 ops/s
Iteration  17: 249202.096 ops/s
Iteration  18: 247358.212 ops/s
Iteration  19: 249854.285 ops/s
Iteration  20: 247977.325 ops/s
Iteration  21: 248333.018 ops/s
Iteration  22: 250431.982 ops/s
Iteration  23: 249354.063 ops/s
Iteration  24: 249453.978 ops/s
Iteration  25: 249647.190 ops/s
Iteration  26: 248665.003 ops/s
Iteration  27: 247943.700 ops/s
Iteration  28: 248827.387 ops/s
Iteration  29: 249280.121 ops/s
Iteration  30: 248674.309 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1014._Benchmark.benchmark_Cluster_1014":
  249209.101 ±(99.9%) 806.214 ops/s [Average]
  (min, avg, max) = (245990.902, 249209.101, 251365.669), stdev = 1206.704
  CI (99.9%): [248402.887, 250015.316] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1014._Benchmark.benchmark_Cluster_1014  thrpt   30  249209.101 ± 806.214  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1015._Benchmark.benchmark_Cluster_1015$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1015._Benchmark.benchmark_Cluster_1015

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57280.412 ops/s
# Warmup Iteration   2: 90666.197 ops/s
# Warmup Iteration   3: 152747.189 ops/s
# Warmup Iteration   4: 179958.447 ops/s
# Warmup Iteration   5: 177698.775 ops/s
# Warmup Iteration   6: 180761.804 ops/s
# Warmup Iteration   7: 180010.472 ops/s
# Warmup Iteration   8: 180740.056 ops/s
# Warmup Iteration   9: 123662.300 ops/s
# Warmup Iteration  10: 180078.908 ops/s
# Warmup Iteration  11: 180635.829 ops/s
# Warmup Iteration  12: 180030.669 ops/s
# Warmup Iteration  13: 179459.804 ops/s
# Warmup Iteration  14: 180396.324 ops/s
# Warmup Iteration  15: 180271.439 ops/s
# Warmup Iteration  16: 178713.110 ops/s
# Warmup Iteration  17: 181039.018 ops/s
# Warmup Iteration  18: 180676.988 ops/s
# Warmup Iteration  19: 181007.302 ops/s
# Warmup Iteration  20: 181444.623 ops/s
# Warmup Iteration  21: 180790.080 ops/s
# Warmup Iteration  22: 180891.700 ops/s
# Warmup Iteration  23: 180991.209 ops/s
# Warmup Iteration  24: 180115.780 ops/s
# Warmup Iteration  25: 180590.822 ops/s
# Warmup Iteration  26: 180761.524 ops/s
# Warmup Iteration  27: 180378.802 ops/s
# Warmup Iteration  28: 179088.235 ops/s
# Warmup Iteration  29: 180175.942 ops/s
# Warmup Iteration  30: 180353.468 ops/s
Iteration   1: 179704.195 ops/s
Iteration   2: 180988.698 ops/s
Iteration   3: 181015.065 ops/s
Iteration   4: 180702.045 ops/s
Iteration   5: 181056.382 ops/s
Iteration   6: 180938.480 ops/s
Iteration   7: 181342.860 ops/s
Iteration   8: 181524.949 ops/s
Iteration   9: 181393.320 ops/s
Iteration  10: 181888.485 ops/s
Iteration  11: 181115.905 ops/s
Iteration  12: 181065.233 ops/s
Iteration  13: 181846.364 ops/s
Iteration  14: 181149.323 ops/s
Iteration  15: 180422.918 ops/s
Iteration  16: 180006.959 ops/s
Iteration  17: 180751.502 ops/s
Iteration  18: 181195.404 ops/s
Iteration  19: 180317.255 ops/s
Iteration  20: 180602.061 ops/s
Iteration  21: 181374.719 ops/s
Iteration  22: 181365.278 ops/s
Iteration  23: 180724.305 ops/s
Iteration  24: 180040.476 ops/s
Iteration  25: 180159.220 ops/s
Iteration  26: 181102.480 ops/s
Iteration  27: 180636.329 ops/s
Iteration  28: 181070.678 ops/s
Iteration  29: 180358.101 ops/s
Iteration  30: 180230.317 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1015._Benchmark.benchmark_Cluster_1015":
  180869.644 ±(99.9%) 362.394 ops/s [Average]
  (min, avg, max) = (179704.195, 180869.644, 181888.485), stdev = 542.415
  CI (99.9%): [180507.249, 181232.038] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1015._Benchmark.benchmark_Cluster_1015  thrpt   30  180869.644 ± 362.394  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1016._Benchmark.benchmark_Cluster_1016$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1016._Benchmark.benchmark_Cluster_1016

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80040.634 ops/s
# Warmup Iteration   2: 105345.496 ops/s
# Warmup Iteration   3: 147121.031 ops/s
# Warmup Iteration   4: 187730.963 ops/s
# Warmup Iteration   5: 185419.974 ops/s
# Warmup Iteration   6: 186809.695 ops/s
# Warmup Iteration   7: 186307.672 ops/s
# Warmup Iteration   8: 186360.157 ops/s
# Warmup Iteration   9: 185693.003 ops/s
# Warmup Iteration  10: 187168.955 ops/s
# Warmup Iteration  11: 126701.739 ops/s
# Warmup Iteration  12: 186703.361 ops/s
# Warmup Iteration  13: 185442.547 ops/s
# Warmup Iteration  14: 187236.774 ops/s
# Warmup Iteration  15: 186396.628 ops/s
# Warmup Iteration  16: 186967.667 ops/s
# Warmup Iteration  17: 186504.811 ops/s
# Warmup Iteration  18: 186460.730 ops/s
# Warmup Iteration  19: 186956.720 ops/s
# Warmup Iteration  20: 187429.641 ops/s
# Warmup Iteration  21: 186913.053 ops/s
# Warmup Iteration  22: 186016.854 ops/s
# Warmup Iteration  23: 187508.212 ops/s
# Warmup Iteration  24: 187098.694 ops/s
# Warmup Iteration  25: 186924.922 ops/s
# Warmup Iteration  26: 187295.952 ops/s
# Warmup Iteration  27: 186709.721 ops/s
# Warmup Iteration  28: 186289.029 ops/s
# Warmup Iteration  29: 188056.310 ops/s
# Warmup Iteration  30: 186885.171 ops/s
Iteration   1: 186937.764 ops/s
Iteration   2: 187475.230 ops/s
Iteration   3: 187381.677 ops/s
Iteration   4: 186691.801 ops/s
Iteration   5: 186372.706 ops/s
Iteration   6: 187406.257 ops/s
Iteration   7: 187700.740 ops/s
Iteration   8: 186740.233 ops/s
Iteration   9: 188110.710 ops/s
Iteration  10: 186535.199 ops/s
Iteration  11: 188174.158 ops/s
Iteration  12: 187368.698 ops/s
Iteration  13: 188265.147 ops/s
Iteration  14: 188473.580 ops/s
Iteration  15: 187619.469 ops/s
Iteration  16: 187840.649 ops/s
Iteration  17: 187312.569 ops/s
Iteration  18: 187361.606 ops/s
Iteration  19: 185913.747 ops/s
Iteration  20: 187453.989 ops/s
Iteration  21: 187849.181 ops/s
Iteration  22: 187323.068 ops/s
Iteration  23: 186074.314 ops/s
Iteration  24: 187490.586 ops/s
Iteration  25: 187248.008 ops/s
Iteration  26: 187941.477 ops/s
Iteration  27: 187746.622 ops/s
Iteration  28: 188008.009 ops/s
Iteration  29: 187659.488 ops/s
Iteration  30: 187838.497 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1016._Benchmark.benchmark_Cluster_1016":
  187410.506 ±(99.9%) 421.745 ops/s [Average]
  (min, avg, max) = (185913.747, 187410.506, 188473.580), stdev = 631.247
  CI (99.9%): [186988.761, 187832.251] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1016._Benchmark.benchmark_Cluster_1016  thrpt   30  187410.506 ± 421.745  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1017._Benchmark.benchmark_Cluster_1017$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1017._Benchmark.benchmark_Cluster_1017

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65480.697 ops/s
# Warmup Iteration   2: 91028.952 ops/s
# Warmup Iteration   3: 93168.483 ops/s
# Warmup Iteration   4: 147412.555 ops/s
# Warmup Iteration   5: 146999.766 ops/s
# Warmup Iteration   6: 148842.042 ops/s
# Warmup Iteration   7: 145989.290 ops/s
# Warmup Iteration   8: 148394.262 ops/s
# Warmup Iteration   9: 148055.311 ops/s
# Warmup Iteration  10: 148233.882 ops/s
# Warmup Iteration  11: 147905.791 ops/s
# Warmup Iteration  12: 148334.970 ops/s
# Warmup Iteration  13: 148796.294 ops/s
# Warmup Iteration  14: 108397.416 ops/s
# Warmup Iteration  15: 134332.568 ops/s
# Warmup Iteration  16: 147779.555 ops/s
# Warmup Iteration  17: 151383.158 ops/s
# Warmup Iteration  18: 152680.632 ops/s
# Warmup Iteration  19: 151429.653 ops/s
# Warmup Iteration  20: 150867.812 ops/s
# Warmup Iteration  21: 151611.594 ops/s
# Warmup Iteration  22: 150602.788 ops/s
# Warmup Iteration  23: 151358.189 ops/s
# Warmup Iteration  24: 150055.530 ops/s
# Warmup Iteration  25: 151312.122 ops/s
# Warmup Iteration  26: 150928.597 ops/s
# Warmup Iteration  27: 150908.782 ops/s
# Warmup Iteration  28: 150251.042 ops/s
# Warmup Iteration  29: 150842.790 ops/s
# Warmup Iteration  30: 151251.584 ops/s
Iteration   1: 150717.466 ops/s
Iteration   2: 151262.044 ops/s
Iteration   3: 151220.737 ops/s
Iteration   4: 151612.311 ops/s
Iteration   5: 150633.653 ops/s
Iteration   6: 151359.360 ops/s
Iteration   7: 151523.337 ops/s
Iteration   8: 151354.806 ops/s
Iteration   9: 151288.436 ops/s
Iteration  10: 151552.413 ops/s
Iteration  11: 150680.676 ops/s
Iteration  12: 150518.712 ops/s
Iteration  13: 151495.047 ops/s
Iteration  14: 151794.446 ops/s
Iteration  15: 151245.687 ops/s
Iteration  16: 152416.112 ops/s
Iteration  17: 152748.684 ops/s
Iteration  18: 152202.530 ops/s
Iteration  19: 151822.871 ops/s
Iteration  20: 151925.129 ops/s
Iteration  21: 151596.938 ops/s
Iteration  22: 150937.452 ops/s
Iteration  23: 150915.399 ops/s
Iteration  24: 152070.204 ops/s
Iteration  25: 151279.861 ops/s
Iteration  26: 151949.330 ops/s
Iteration  27: 151033.795 ops/s
Iteration  28: 151021.590 ops/s
Iteration  29: 152020.639 ops/s
Iteration  30: 152387.895 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1017._Benchmark.benchmark_Cluster_1017":
  151486.252 ±(99.9%) 378.446 ops/s [Average]
  (min, avg, max) = (150518.712, 151486.252, 152748.684), stdev = 566.439
  CI (99.9%): [151107.807, 151864.698] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1017._Benchmark.benchmark_Cluster_1017  thrpt   30  151486.252 ± 378.446  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1018._Benchmark.benchmark_Cluster_1018$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1018._Benchmark.benchmark_Cluster_1018

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62938.215 ops/s
# Warmup Iteration   2: 84989.565 ops/s
# Warmup Iteration   3: 147353.808 ops/s
# Warmup Iteration   4: 169949.869 ops/s
# Warmup Iteration   5: 167385.709 ops/s
# Warmup Iteration   6: 167650.703 ops/s
# Warmup Iteration   7: 168071.676 ops/s
# Warmup Iteration   8: 168649.412 ops/s
# Warmup Iteration   9: 112212.449 ops/s
# Warmup Iteration  10: 166739.618 ops/s
# Warmup Iteration  11: 167752.619 ops/s
# Warmup Iteration  12: 167819.124 ops/s
# Warmup Iteration  13: 167930.766 ops/s
# Warmup Iteration  14: 168566.926 ops/s
# Warmup Iteration  15: 168178.933 ops/s
# Warmup Iteration  16: 168717.555 ops/s
# Warmup Iteration  17: 168697.288 ops/s
# Warmup Iteration  18: 168663.667 ops/s
# Warmup Iteration  19: 168105.381 ops/s
# Warmup Iteration  20: 168850.502 ops/s
# Warmup Iteration  21: 167648.915 ops/s
# Warmup Iteration  22: 169573.295 ops/s
# Warmup Iteration  23: 168013.443 ops/s
# Warmup Iteration  24: 168881.636 ops/s
# Warmup Iteration  25: 168309.178 ops/s
# Warmup Iteration  26: 168422.067 ops/s
# Warmup Iteration  27: 167870.793 ops/s
# Warmup Iteration  28: 167524.278 ops/s
# Warmup Iteration  29: 167753.067 ops/s
# Warmup Iteration  30: 167845.527 ops/s
Iteration   1: 168877.716 ops/s
Iteration   2: 167795.875 ops/s
Iteration   3: 169001.002 ops/s
Iteration   4: 169024.817 ops/s
Iteration   5: 167799.459 ops/s
Iteration   6: 168973.970 ops/s
Iteration   7: 168538.400 ops/s
Iteration   8: 167928.691 ops/s
Iteration   9: 167968.321 ops/s
Iteration  10: 168816.407 ops/s
Iteration  11: 169467.936 ops/s
Iteration  12: 167664.114 ops/s
Iteration  13: 167306.089 ops/s
Iteration  14: 168315.205 ops/s
Iteration  15: 167548.271 ops/s
Iteration  16: 168088.460 ops/s
Iteration  17: 168066.105 ops/s
Iteration  18: 167804.219 ops/s
Iteration  19: 167225.204 ops/s
Iteration  20: 167847.583 ops/s
Iteration  21: 168083.319 ops/s
Iteration  22: 169317.073 ops/s
Iteration  23: 168086.226 ops/s
Iteration  24: 167578.501 ops/s
Iteration  25: 168253.686 ops/s
Iteration  26: 167715.185 ops/s
Iteration  27: 168065.559 ops/s
Iteration  28: 167238.410 ops/s
Iteration  29: 167702.342 ops/s
Iteration  30: 167296.932 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1018._Benchmark.benchmark_Cluster_1018":
  168113.169 ±(99.9%) 418.847 ops/s [Average]
  (min, avg, max) = (167225.204, 168113.169, 169467.936), stdev = 626.910
  CI (99.9%): [167694.323, 168532.016] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1018._Benchmark.benchmark_Cluster_1018  thrpt   30  168113.169 ± 418.847  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1019._Benchmark.benchmark_Cluster_1019$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1019._Benchmark.benchmark_Cluster_1019

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46131.667 ops/s
# Warmup Iteration   2: 70739.963 ops/s
# Warmup Iteration   3: 70799.582 ops/s
# Warmup Iteration   4: 81699.218 ops/s
# Warmup Iteration   5: 104276.340 ops/s
# Warmup Iteration   6: 104607.010 ops/s
# Warmup Iteration   7: 104772.583 ops/s
# Warmup Iteration   8: 104587.824 ops/s
# Warmup Iteration   9: 102944.459 ops/s
# Warmup Iteration  10: 103740.093 ops/s
# Warmup Iteration  11: 104779.997 ops/s
# Warmup Iteration  12: 104997.679 ops/s
# Warmup Iteration  13: 103981.025 ops/s
# Warmup Iteration  14: 104275.891 ops/s
# Warmup Iteration  15: 104522.355 ops/s
# Warmup Iteration  16: 104637.705 ops/s
# Warmup Iteration  17: 107281.162 ops/s
# Warmup Iteration  18: 85063.235 ops/s
# Warmup Iteration  19: 90758.583 ops/s
# Warmup Iteration  20: 106284.355 ops/s
# Warmup Iteration  21: 106273.139 ops/s
# Warmup Iteration  22: 106713.687 ops/s
# Warmup Iteration  23: 107004.392 ops/s
# Warmup Iteration  24: 106660.362 ops/s
# Warmup Iteration  25: 106256.784 ops/s
# Warmup Iteration  26: 106536.351 ops/s
# Warmup Iteration  27: 106423.734 ops/s
# Warmup Iteration  28: 106461.330 ops/s
# Warmup Iteration  29: 106587.900 ops/s
# Warmup Iteration  30: 106707.756 ops/s
Iteration   1: 106672.237 ops/s
Iteration   2: 107121.024 ops/s
Iteration   3: 106906.106 ops/s
Iteration   4: 106933.034 ops/s
Iteration   5: 107282.734 ops/s
Iteration   6: 106253.881 ops/s
Iteration   7: 106745.964 ops/s
Iteration   8: 105907.548 ops/s
Iteration   9: 106595.713 ops/s
Iteration  10: 106652.646 ops/s
Iteration  11: 106500.581 ops/s
Iteration  12: 106663.599 ops/s
Iteration  13: 106218.698 ops/s
Iteration  14: 105981.104 ops/s
Iteration  15: 106316.083 ops/s
Iteration  16: 106828.148 ops/s
Iteration  17: 106466.238 ops/s
Iteration  18: 106436.258 ops/s
Iteration  19: 106569.101 ops/s
Iteration  20: 106028.654 ops/s
Iteration  21: 106333.708 ops/s
Iteration  22: 106496.443 ops/s
Iteration  23: 107327.972 ops/s
Iteration  24: 106983.676 ops/s
Iteration  25: 105965.658 ops/s
Iteration  26: 105710.667 ops/s
Iteration  27: 106084.667 ops/s
Iteration  28: 106517.572 ops/s
Iteration  29: 105209.005 ops/s
Iteration  30: 105785.905 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1019._Benchmark.benchmark_Cluster_1019":
  106449.821 ±(99.9%) 322.651 ops/s [Average]
  (min, avg, max) = (105209.005, 106449.821, 107327.972), stdev = 482.928
  CI (99.9%): [106127.170, 106772.471] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1019._Benchmark.benchmark_Cluster_1019  thrpt   30  106449.821 ± 322.651  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_102._Benchmark.benchmark_Cluster_102$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_102._Benchmark.benchmark_Cluster_102

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63739.048 ops/s
# Warmup Iteration   2: 85813.451 ops/s
# Warmup Iteration   3: 146491.386 ops/s
# Warmup Iteration   4: 167932.848 ops/s
# Warmup Iteration   5: 168094.961 ops/s
# Warmup Iteration   6: 167997.317 ops/s
# Warmup Iteration   7: 168807.203 ops/s
# Warmup Iteration   8: 168532.717 ops/s
# Warmup Iteration   9: 120406.138 ops/s
# Warmup Iteration  10: 160432.772 ops/s
# Warmup Iteration  11: 166828.119 ops/s
# Warmup Iteration  12: 168360.195 ops/s
# Warmup Iteration  13: 166485.880 ops/s
# Warmup Iteration  14: 166347.359 ops/s
# Warmup Iteration  15: 169597.286 ops/s
# Warmup Iteration  16: 168506.060 ops/s
# Warmup Iteration  17: 168957.844 ops/s
# Warmup Iteration  18: 167823.741 ops/s
# Warmup Iteration  19: 166683.354 ops/s
# Warmup Iteration  20: 168860.376 ops/s
# Warmup Iteration  21: 169678.054 ops/s
# Warmup Iteration  22: 169620.177 ops/s
# Warmup Iteration  23: 169530.878 ops/s
# Warmup Iteration  24: 169012.122 ops/s
# Warmup Iteration  25: 169691.527 ops/s
# Warmup Iteration  26: 170245.281 ops/s
# Warmup Iteration  27: 168374.358 ops/s
# Warmup Iteration  28: 169449.542 ops/s
# Warmup Iteration  29: 169817.234 ops/s
# Warmup Iteration  30: 170424.121 ops/s
Iteration   1: 170523.529 ops/s
Iteration   2: 170263.867 ops/s
Iteration   3: 168625.213 ops/s
Iteration   4: 170188.347 ops/s
Iteration   5: 169741.705 ops/s
Iteration   6: 168966.941 ops/s
Iteration   7: 169090.603 ops/s
Iteration   8: 170198.582 ops/s
Iteration   9: 167676.356 ops/s
Iteration  10: 167094.946 ops/s
Iteration  11: 170597.338 ops/s
Iteration  12: 169323.082 ops/s
Iteration  13: 170310.660 ops/s
Iteration  14: 168189.528 ops/s
Iteration  15: 169325.434 ops/s
Iteration  16: 169575.256 ops/s
Iteration  17: 168629.205 ops/s
Iteration  18: 168793.227 ops/s
Iteration  19: 169148.999 ops/s
Iteration  20: 168976.094 ops/s
Iteration  21: 169727.815 ops/s
Iteration  22: 167790.775 ops/s
Iteration  23: 168968.153 ops/s
Iteration  24: 170102.741 ops/s
Iteration  25: 169097.299 ops/s
Iteration  26: 169558.214 ops/s
Iteration  27: 168278.556 ops/s
Iteration  28: 168935.131 ops/s
Iteration  29: 169871.819 ops/s
Iteration  30: 170590.642 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_102._Benchmark.benchmark_Cluster_102":
  169272.002 ±(99.9%) 603.273 ops/s [Average]
  (min, avg, max) = (167094.946, 169272.002, 170597.338), stdev = 902.950
  CI (99.9%): [168668.729, 169875.274] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_102._Benchmark.benchmark_Cluster_102  thrpt   30  169272.002 ± 603.273  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1020._Benchmark.benchmark_Cluster_1020$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1020._Benchmark.benchmark_Cluster_1020

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96134.473 ops/s
# Warmup Iteration   2: 115960.449 ops/s
# Warmup Iteration   3: 230447.121 ops/s
# Warmup Iteration   4: 237459.226 ops/s
# Warmup Iteration   5: 240846.444 ops/s
# Warmup Iteration   6: 240997.785 ops/s
# Warmup Iteration   7: 240792.066 ops/s
# Warmup Iteration   8: 203099.348 ops/s
# Warmup Iteration   9: 200931.019 ops/s
# Warmup Iteration  10: 241535.658 ops/s
# Warmup Iteration  11: 240884.337 ops/s
# Warmup Iteration  12: 240718.258 ops/s
# Warmup Iteration  13: 240702.597 ops/s
# Warmup Iteration  14: 241090.406 ops/s
# Warmup Iteration  15: 242434.391 ops/s
# Warmup Iteration  16: 242656.485 ops/s
# Warmup Iteration  17: 240327.239 ops/s
# Warmup Iteration  18: 240531.145 ops/s
# Warmup Iteration  19: 240395.040 ops/s
# Warmup Iteration  20: 241220.902 ops/s
# Warmup Iteration  21: 241128.765 ops/s
# Warmup Iteration  22: 240288.953 ops/s
# Warmup Iteration  23: 238196.764 ops/s
# Warmup Iteration  24: 239148.176 ops/s
# Warmup Iteration  25: 239263.244 ops/s
# Warmup Iteration  26: 240723.759 ops/s
# Warmup Iteration  27: 239733.442 ops/s
# Warmup Iteration  28: 239228.903 ops/s
# Warmup Iteration  29: 239807.106 ops/s
# Warmup Iteration  30: 241792.707 ops/s
Iteration   1: 239855.701 ops/s
Iteration   2: 241904.050 ops/s
Iteration   3: 239504.832 ops/s
Iteration   4: 239997.346 ops/s
Iteration   5: 240508.007 ops/s
Iteration   6: 239575.352 ops/s
Iteration   7: 239984.200 ops/s
Iteration   8: 239367.963 ops/s
Iteration   9: 240488.600 ops/s
Iteration  10: 239457.728 ops/s
Iteration  11: 240053.234 ops/s
Iteration  12: 240041.628 ops/s
Iteration  13: 241236.570 ops/s
Iteration  14: 240317.073 ops/s
Iteration  15: 239679.173 ops/s
Iteration  16: 239967.773 ops/s
Iteration  17: 242036.762 ops/s
Iteration  18: 240273.772 ops/s
Iteration  19: 241074.082 ops/s
Iteration  20: 241366.860 ops/s
Iteration  21: 240497.468 ops/s
Iteration  22: 239578.042 ops/s
Iteration  23: 239570.240 ops/s
Iteration  24: 240226.538 ops/s
Iteration  25: 240243.587 ops/s
Iteration  26: 239202.419 ops/s
Iteration  27: 239092.252 ops/s
Iteration  28: 240185.840 ops/s
Iteration  29: 242405.435 ops/s
Iteration  30: 240134.889 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1020._Benchmark.benchmark_Cluster_1020":
  240260.914 ±(99.9%) 557.928 ops/s [Average]
  (min, avg, max) = (239092.252, 240260.914, 242405.435), stdev = 835.080
  CI (99.9%): [239702.986, 240818.841] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1020._Benchmark.benchmark_Cluster_1020  thrpt   30  240260.914 ± 557.928  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1021._Benchmark.benchmark_Cluster_1021$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1021._Benchmark.benchmark_Cluster_1021

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52140.087 ops/s
# Warmup Iteration   2: 62945.265 ops/s
# Warmup Iteration   3: 76335.254 ops/s
# Warmup Iteration   4: 101960.794 ops/s
# Warmup Iteration   5: 101941.231 ops/s
# Warmup Iteration   6: 100558.214 ops/s
# Warmup Iteration   7: 101912.836 ops/s
# Warmup Iteration   8: 101015.850 ops/s
# Warmup Iteration   9: 101029.961 ops/s
# Warmup Iteration  10: 101411.743 ops/s
# Warmup Iteration  11: 101576.664 ops/s
# Warmup Iteration  12: 97863.554 ops/s
# Warmup Iteration  13: 72688.328 ops/s
# Warmup Iteration  14: 102095.960 ops/s
# Warmup Iteration  15: 102000.385 ops/s
# Warmup Iteration  16: 102008.949 ops/s
# Warmup Iteration  17: 103055.252 ops/s
# Warmup Iteration  18: 102514.942 ops/s
# Warmup Iteration  19: 102645.119 ops/s
# Warmup Iteration  20: 102489.000 ops/s
# Warmup Iteration  21: 102233.862 ops/s
# Warmup Iteration  22: 102572.416 ops/s
# Warmup Iteration  23: 102161.269 ops/s
# Warmup Iteration  24: 102516.005 ops/s
# Warmup Iteration  25: 102294.289 ops/s
# Warmup Iteration  26: 102436.545 ops/s
# Warmup Iteration  27: 102306.869 ops/s
# Warmup Iteration  28: 102660.220 ops/s
# Warmup Iteration  29: 103034.926 ops/s
# Warmup Iteration  30: 103076.435 ops/s
Iteration   1: 102929.241 ops/s
Iteration   2: 102033.742 ops/s
Iteration   3: 102123.754 ops/s
Iteration   4: 102513.117 ops/s
Iteration   5: 102154.038 ops/s
Iteration   6: 102495.932 ops/s
Iteration   7: 101997.303 ops/s
Iteration   8: 102512.731 ops/s
Iteration   9: 102602.968 ops/s
Iteration  10: 102575.897 ops/s
Iteration  11: 102248.388 ops/s
Iteration  12: 102532.356 ops/s
Iteration  13: 102164.779 ops/s
Iteration  14: 102623.729 ops/s
Iteration  15: 101976.945 ops/s
Iteration  16: 102916.260 ops/s
Iteration  17: 102839.252 ops/s
Iteration  18: 102901.215 ops/s
Iteration  19: 101388.037 ops/s
Iteration  20: 102814.758 ops/s
Iteration  21: 102577.204 ops/s
Iteration  22: 102744.438 ops/s
Iteration  23: 102084.923 ops/s
Iteration  24: 102595.722 ops/s
Iteration  25: 102266.580 ops/s
Iteration  26: 101872.749 ops/s
Iteration  27: 101994.708 ops/s
Iteration  28: 103082.665 ops/s
Iteration  29: 103006.387 ops/s
Iteration  30: 103472.297 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1021._Benchmark.benchmark_Cluster_1021":
  102468.071 ±(99.9%) 294.742 ops/s [Average]
  (min, avg, max) = (101388.037, 102468.071, 103472.297), stdev = 441.155
  CI (99.9%): [102173.329, 102762.812] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1021._Benchmark.benchmark_Cluster_1021  thrpt   30  102468.071 ± 294.742  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1022._Benchmark.benchmark_Cluster_1022$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1022._Benchmark.benchmark_Cluster_1022

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 92786.427 ops/s
# Warmup Iteration   2: 107322.492 ops/s
# Warmup Iteration   3: 203063.294 ops/s
# Warmup Iteration   4: 214105.407 ops/s
# Warmup Iteration   5: 213581.161 ops/s
# Warmup Iteration   6: 214056.165 ops/s
# Warmup Iteration   7: 214108.817 ops/s
# Warmup Iteration   8: 216050.642 ops/s
# Warmup Iteration   9: 146604.248 ops/s
# Warmup Iteration  10: 215065.412 ops/s
# Warmup Iteration  11: 214746.572 ops/s
# Warmup Iteration  12: 215060.130 ops/s
# Warmup Iteration  13: 215702.358 ops/s
# Warmup Iteration  14: 215763.430 ops/s
# Warmup Iteration  15: 215530.399 ops/s
# Warmup Iteration  16: 215244.160 ops/s
# Warmup Iteration  17: 215714.674 ops/s
# Warmup Iteration  18: 215141.686 ops/s
# Warmup Iteration  19: 214905.403 ops/s
# Warmup Iteration  20: 215155.565 ops/s
# Warmup Iteration  21: 215080.549 ops/s
# Warmup Iteration  22: 215479.116 ops/s
# Warmup Iteration  23: 214483.033 ops/s
# Warmup Iteration  24: 215228.950 ops/s
# Warmup Iteration  25: 214952.214 ops/s
# Warmup Iteration  26: 215847.255 ops/s
# Warmup Iteration  27: 214997.128 ops/s
# Warmup Iteration  28: 215547.630 ops/s
# Warmup Iteration  29: 214632.115 ops/s
# Warmup Iteration  30: 216188.181 ops/s
Iteration   1: 214574.865 ops/s
Iteration   2: 214315.444 ops/s
Iteration   3: 215090.619 ops/s
Iteration   4: 214132.529 ops/s
Iteration   5: 215428.471 ops/s
Iteration   6: 215185.987 ops/s
Iteration   7: 215763.285 ops/s
Iteration   8: 216424.504 ops/s
Iteration   9: 214404.315 ops/s
Iteration  10: 215292.688 ops/s
Iteration  11: 214383.064 ops/s
Iteration  12: 214841.931 ops/s
Iteration  13: 214968.390 ops/s
Iteration  14: 214342.110 ops/s
Iteration  15: 214678.084 ops/s
Iteration  16: 215218.839 ops/s
Iteration  17: 215198.997 ops/s
Iteration  18: 214741.292 ops/s
Iteration  19: 213359.310 ops/s
Iteration  20: 214325.817 ops/s
Iteration  21: 214987.081 ops/s
Iteration  22: 214350.963 ops/s
Iteration  23: 214661.057 ops/s
Iteration  24: 214971.029 ops/s
Iteration  25: 214873.856 ops/s
Iteration  26: 217072.430 ops/s
Iteration  27: 215727.578 ops/s
Iteration  28: 214692.485 ops/s
Iteration  29: 215618.687 ops/s
Iteration  30: 214623.163 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1022._Benchmark.benchmark_Cluster_1022":
  214941.629 ±(99.9%) 477.595 ops/s [Average]
  (min, avg, max) = (213359.310, 214941.629, 217072.430), stdev = 714.841
  CI (99.9%): [214464.034, 215419.224] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1022._Benchmark.benchmark_Cluster_1022  thrpt   30  214941.629 ± 477.595  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1023._Benchmark.benchmark_Cluster_1023$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1023._Benchmark.benchmark_Cluster_1023

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65548.155 ops/s
# Warmup Iteration   2: 76128.481 ops/s
# Warmup Iteration   3: 117928.996 ops/s
# Warmup Iteration   4: 143080.591 ops/s
# Warmup Iteration   5: 141996.552 ops/s
# Warmup Iteration   6: 142995.455 ops/s
# Warmup Iteration   7: 143388.325 ops/s
# Warmup Iteration   8: 143624.913 ops/s
# Warmup Iteration   9: 143651.466 ops/s
# Warmup Iteration  10: 116295.571 ops/s
# Warmup Iteration  11: 122680.014 ops/s
# Warmup Iteration  12: 143495.187 ops/s
# Warmup Iteration  13: 143465.246 ops/s
# Warmup Iteration  14: 142172.816 ops/s
# Warmup Iteration  15: 143586.398 ops/s
# Warmup Iteration  16: 143802.963 ops/s
# Warmup Iteration  17: 146239.604 ops/s
# Warmup Iteration  18: 145528.694 ops/s
# Warmup Iteration  19: 145537.710 ops/s
# Warmup Iteration  20: 145951.441 ops/s
# Warmup Iteration  21: 146248.978 ops/s
# Warmup Iteration  22: 145589.753 ops/s
# Warmup Iteration  23: 146415.616 ops/s
# Warmup Iteration  24: 145808.112 ops/s
# Warmup Iteration  25: 144424.587 ops/s
# Warmup Iteration  26: 145379.137 ops/s
# Warmup Iteration  27: 145148.003 ops/s
# Warmup Iteration  28: 146190.728 ops/s
# Warmup Iteration  29: 146065.966 ops/s
# Warmup Iteration  30: 145270.921 ops/s
Iteration   1: 145312.641 ops/s
Iteration   2: 145341.680 ops/s
Iteration   3: 145583.541 ops/s
Iteration   4: 145338.846 ops/s
Iteration   5: 144584.141 ops/s
Iteration   6: 145264.328 ops/s
Iteration   7: 146154.615 ops/s
Iteration   8: 145168.790 ops/s
Iteration   9: 145153.999 ops/s
Iteration  10: 145259.213 ops/s
Iteration  11: 146503.886 ops/s
Iteration  12: 145399.623 ops/s
Iteration  13: 146044.423 ops/s
Iteration  14: 144527.991 ops/s
Iteration  15: 145837.228 ops/s
Iteration  16: 145245.224 ops/s
Iteration  17: 145275.765 ops/s
Iteration  18: 145091.712 ops/s
Iteration  19: 145329.762 ops/s
Iteration  20: 145514.484 ops/s
Iteration  21: 145540.801 ops/s
Iteration  22: 146167.341 ops/s
Iteration  23: 146036.707 ops/s
Iteration  24: 145888.734 ops/s
Iteration  25: 146103.008 ops/s
Iteration  26: 146501.322 ops/s
Iteration  27: 145127.424 ops/s
Iteration  28: 145551.946 ops/s
Iteration  29: 146266.919 ops/s
Iteration  30: 145743.186 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1023._Benchmark.benchmark_Cluster_1023":
  145561.976 ±(99.9%) 335.511 ops/s [Average]
  (min, avg, max) = (144527.991, 145561.976, 146503.886), stdev = 502.177
  CI (99.9%): [145226.465, 145897.487] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1023._Benchmark.benchmark_Cluster_1023  thrpt   30  145561.976 ± 335.511  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1024._Benchmark.benchmark_Cluster_1024$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1024._Benchmark.benchmark_Cluster_1024

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80672.078 ops/s
# Warmup Iteration   2: 93006.723 ops/s
# Warmup Iteration   3: 184257.051 ops/s
# Warmup Iteration   4: 185878.777 ops/s
# Warmup Iteration   5: 189582.106 ops/s
# Warmup Iteration   6: 190392.219 ops/s
# Warmup Iteration   7: 191259.842 ops/s
# Warmup Iteration   8: 169703.633 ops/s
# Warmup Iteration   9: 149573.692 ops/s
# Warmup Iteration  10: 190367.486 ops/s
# Warmup Iteration  11: 189127.867 ops/s
# Warmup Iteration  12: 191253.369 ops/s
# Warmup Iteration  13: 190969.654 ops/s
# Warmup Iteration  14: 191599.756 ops/s
# Warmup Iteration  15: 190964.060 ops/s
# Warmup Iteration  16: 190294.761 ops/s
# Warmup Iteration  17: 194148.550 ops/s
# Warmup Iteration  18: 192933.901 ops/s
# Warmup Iteration  19: 192772.814 ops/s
# Warmup Iteration  20: 193439.803 ops/s
# Warmup Iteration  21: 193647.172 ops/s
# Warmup Iteration  22: 193221.387 ops/s
# Warmup Iteration  23: 193312.954 ops/s
# Warmup Iteration  24: 193613.608 ops/s
# Warmup Iteration  25: 193837.212 ops/s
# Warmup Iteration  26: 193560.021 ops/s
# Warmup Iteration  27: 194975.673 ops/s
# Warmup Iteration  28: 194404.650 ops/s
# Warmup Iteration  29: 194486.160 ops/s
# Warmup Iteration  30: 194789.480 ops/s
Iteration   1: 193419.729 ops/s
Iteration   2: 194624.923 ops/s
Iteration   3: 194905.458 ops/s
Iteration   4: 193815.399 ops/s
Iteration   5: 193459.731 ops/s
Iteration   6: 194918.033 ops/s
Iteration   7: 194718.140 ops/s
Iteration   8: 193738.598 ops/s
Iteration   9: 193736.580 ops/s
Iteration  10: 193470.628 ops/s
Iteration  11: 193040.737 ops/s
Iteration  12: 194786.736 ops/s
Iteration  13: 194290.479 ops/s
Iteration  14: 194299.969 ops/s
Iteration  15: 195426.193 ops/s
Iteration  16: 194205.837 ops/s
Iteration  17: 194342.236 ops/s
Iteration  18: 194652.951 ops/s
Iteration  19: 194326.312 ops/s
Iteration  20: 193345.957 ops/s
Iteration  21: 193450.821 ops/s
Iteration  22: 193573.539 ops/s
Iteration  23: 194766.134 ops/s
Iteration  24: 194824.830 ops/s
Iteration  25: 193985.248 ops/s
Iteration  26: 194535.081 ops/s
Iteration  27: 194893.100 ops/s
Iteration  28: 194527.597 ops/s
Iteration  29: 193756.995 ops/s
Iteration  30: 194521.403 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1024._Benchmark.benchmark_Cluster_1024":
  194211.979 ±(99.9%) 404.181 ops/s [Average]
  (min, avg, max) = (193040.737, 194211.979, 195426.193), stdev = 604.959
  CI (99.9%): [193807.798, 194616.160] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1024._Benchmark.benchmark_Cluster_1024  thrpt   30  194211.979 ± 404.181  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1025._Benchmark.benchmark_Cluster_1025$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1025._Benchmark.benchmark_Cluster_1025

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 118725.118 ops/s
# Warmup Iteration   2: 130858.320 ops/s
# Warmup Iteration   3: 134403.896 ops/s
# Warmup Iteration   4: 207320.250 ops/s
# Warmup Iteration   5: 206659.993 ops/s
# Warmup Iteration   6: 206349.156 ops/s
# Warmup Iteration   7: 206451.538 ops/s
# Warmup Iteration   8: 207140.673 ops/s
# Warmup Iteration   9: 206923.421 ops/s
# Warmup Iteration  10: 206246.075 ops/s
# Warmup Iteration  11: 206834.210 ops/s
# Warmup Iteration  12: 207110.497 ops/s
# Warmup Iteration  13: 207023.148 ops/s
# Warmup Iteration  14: 198182.374 ops/s
# Warmup Iteration  15: 146624.487 ops/s
# Warmup Iteration  16: 207385.615 ops/s
# Warmup Iteration  17: 212842.630 ops/s
# Warmup Iteration  18: 211458.933 ops/s
# Warmup Iteration  19: 211739.020 ops/s
# Warmup Iteration  20: 213193.776 ops/s
# Warmup Iteration  21: 212849.791 ops/s
# Warmup Iteration  22: 214024.503 ops/s
# Warmup Iteration  23: 212052.837 ops/s
# Warmup Iteration  24: 211768.878 ops/s
# Warmup Iteration  25: 212505.757 ops/s
# Warmup Iteration  26: 211559.665 ops/s
# Warmup Iteration  27: 211745.467 ops/s
# Warmup Iteration  28: 211748.600 ops/s
# Warmup Iteration  29: 211225.170 ops/s
# Warmup Iteration  30: 212035.378 ops/s
Iteration   1: 213096.279 ops/s
Iteration   2: 213506.751 ops/s
Iteration   3: 212187.719 ops/s
Iteration   4: 210787.471 ops/s
Iteration   5: 212862.783 ops/s
Iteration   6: 211964.796 ops/s
Iteration   7: 212707.628 ops/s
Iteration   8: 212908.152 ops/s
Iteration   9: 213052.601 ops/s
Iteration  10: 211956.713 ops/s
Iteration  11: 212292.690 ops/s
Iteration  12: 211685.712 ops/s
Iteration  13: 210997.732 ops/s
Iteration  14: 213148.587 ops/s
Iteration  15: 212312.045 ops/s
Iteration  16: 211038.637 ops/s
Iteration  17: 212266.380 ops/s
Iteration  18: 212529.218 ops/s
Iteration  19: 212345.581 ops/s
Iteration  20: 212514.591 ops/s
Iteration  21: 212537.781 ops/s
Iteration  22: 212391.161 ops/s
Iteration  23: 211724.757 ops/s
Iteration  24: 211264.228 ops/s
Iteration  25: 213522.579 ops/s
Iteration  26: 213847.793 ops/s
Iteration  27: 212300.729 ops/s
Iteration  28: 213387.325 ops/s
Iteration  29: 213890.811 ops/s
Iteration  30: 211675.976 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1025._Benchmark.benchmark_Cluster_1025":
  212423.507 ±(99.9%) 548.281 ops/s [Average]
  (min, avg, max) = (210787.471, 212423.507, 213890.811), stdev = 820.641
  CI (99.9%): [211875.226, 212971.787] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1025._Benchmark.benchmark_Cluster_1025  thrpt   30  212423.507 ± 548.281  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1026._Benchmark.benchmark_Cluster_1026$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1026._Benchmark.benchmark_Cluster_1026

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51172.514 ops/s
# Warmup Iteration   2: 83072.768 ops/s
# Warmup Iteration   3: 161020.718 ops/s
# Warmup Iteration   4: 158621.067 ops/s
# Warmup Iteration   5: 161099.441 ops/s
# Warmup Iteration   6: 158045.006 ops/s
# Warmup Iteration   7: 114514.165 ops/s
# Warmup Iteration   8: 160168.655 ops/s
# Warmup Iteration   9: 160754.310 ops/s
# Warmup Iteration  10: 161480.771 ops/s
# Warmup Iteration  11: 160724.340 ops/s
# Warmup Iteration  12: 161330.934 ops/s
# Warmup Iteration  13: 161299.976 ops/s
# Warmup Iteration  14: 160409.109 ops/s
# Warmup Iteration  15: 159948.643 ops/s
# Warmup Iteration  16: 160440.322 ops/s
# Warmup Iteration  17: 161087.963 ops/s
# Warmup Iteration  18: 160664.876 ops/s
# Warmup Iteration  19: 160188.661 ops/s
# Warmup Iteration  20: 160063.594 ops/s
# Warmup Iteration  21: 160489.109 ops/s
# Warmup Iteration  22: 160201.098 ops/s
# Warmup Iteration  23: 160150.294 ops/s
# Warmup Iteration  24: 159590.600 ops/s
# Warmup Iteration  25: 160044.230 ops/s
# Warmup Iteration  26: 159545.608 ops/s
# Warmup Iteration  27: 160805.355 ops/s
# Warmup Iteration  28: 159299.944 ops/s
# Warmup Iteration  29: 157800.364 ops/s
# Warmup Iteration  30: 158969.885 ops/s
Iteration   1: 159583.118 ops/s
Iteration   2: 158866.179 ops/s
Iteration   3: 158129.799 ops/s
Iteration   4: 158852.577 ops/s
Iteration   5: 158942.556 ops/s
Iteration   6: 158908.585 ops/s
Iteration   7: 159513.021 ops/s
Iteration   8: 159190.817 ops/s
Iteration   9: 160858.380 ops/s
Iteration  10: 161242.627 ops/s
Iteration  11: 160434.621 ops/s
Iteration  12: 160159.376 ops/s
Iteration  13: 158660.737 ops/s
Iteration  14: 159459.606 ops/s
Iteration  15: 158568.026 ops/s
Iteration  16: 159025.007 ops/s
Iteration  17: 160166.671 ops/s
Iteration  18: 160243.235 ops/s
Iteration  19: 159600.613 ops/s
Iteration  20: 161995.427 ops/s
Iteration  21: 159979.145 ops/s
Iteration  22: 158709.562 ops/s
Iteration  23: 160439.355 ops/s
Iteration  24: 159291.307 ops/s
Iteration  25: 161499.343 ops/s
Iteration  26: 162035.916 ops/s
Iteration  27: 160348.473 ops/s
Iteration  28: 158208.376 ops/s
Iteration  29: 159380.308 ops/s
Iteration  30: 158996.314 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1026._Benchmark.benchmark_Cluster_1026":
  159709.636 ±(99.9%) 704.365 ops/s [Average]
  (min, avg, max) = (158129.799, 159709.636, 162035.916), stdev = 1054.260
  CI (99.9%): [159005.271, 160414.000] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1026._Benchmark.benchmark_Cluster_1026  thrpt   30  159709.636 ± 704.365  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1027._Benchmark.benchmark_Cluster_1027$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1027._Benchmark.benchmark_Cluster_1027

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 89225.718 ops/s
# Warmup Iteration   2: 104562.530 ops/s
# Warmup Iteration   3: 104577.297 ops/s
# Warmup Iteration   4: 115084.554 ops/s
# Warmup Iteration   5: 147568.421 ops/s
# Warmup Iteration   6: 146987.830 ops/s
# Warmup Iteration   7: 146151.633 ops/s
# Warmup Iteration   8: 146138.918 ops/s
# Warmup Iteration   9: 145069.180 ops/s
# Warmup Iteration  10: 148149.737 ops/s
# Warmup Iteration  11: 146666.732 ops/s
# Warmup Iteration  12: 146525.232 ops/s
# Warmup Iteration  13: 146050.488 ops/s
# Warmup Iteration  14: 147751.969 ops/s
# Warmup Iteration  15: 146934.150 ops/s
# Warmup Iteration  16: 147774.306 ops/s
# Warmup Iteration  17: 153853.202 ops/s
# Warmup Iteration  18: 152110.518 ops/s
# Warmup Iteration  19: 154114.547 ops/s
# Warmup Iteration  20: 113952.359 ops/s
# Warmup Iteration  21: 143298.280 ops/s
# Warmup Iteration  22: 153836.612 ops/s
# Warmup Iteration  23: 153828.115 ops/s
# Warmup Iteration  24: 155644.940 ops/s
# Warmup Iteration  25: 155497.670 ops/s
# Warmup Iteration  26: 154908.330 ops/s
# Warmup Iteration  27: 155412.336 ops/s
# Warmup Iteration  28: 154375.621 ops/s
# Warmup Iteration  29: 154858.659 ops/s
# Warmup Iteration  30: 153858.131 ops/s
Iteration   1: 154429.147 ops/s
Iteration   2: 154075.483 ops/s
Iteration   3: 153858.951 ops/s
Iteration   4: 153176.145 ops/s
Iteration   5: 153396.850 ops/s
Iteration   6: 154900.283 ops/s
Iteration   7: 154111.165 ops/s
Iteration   8: 153950.146 ops/s
Iteration   9: 155391.777 ops/s
Iteration  10: 154605.534 ops/s
Iteration  11: 156461.918 ops/s
Iteration  12: 155719.705 ops/s
Iteration  13: 154672.793 ops/s
Iteration  14: 154071.165 ops/s
Iteration  15: 154477.073 ops/s
Iteration  16: 154902.264 ops/s
Iteration  17: 154877.603 ops/s
Iteration  18: 155183.705 ops/s
Iteration  19: 155996.269 ops/s
Iteration  20: 155180.530 ops/s
Iteration  21: 154368.032 ops/s
Iteration  22: 155216.408 ops/s
Iteration  23: 155909.721 ops/s
Iteration  24: 155300.234 ops/s
Iteration  25: 154980.904 ops/s
Iteration  26: 155351.684 ops/s
Iteration  27: 155481.543 ops/s
Iteration  28: 156061.414 ops/s
Iteration  29: 155686.935 ops/s
Iteration  30: 155014.443 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1027._Benchmark.benchmark_Cluster_1027":
  154893.661 ±(99.9%) 534.369 ops/s [Average]
  (min, avg, max) = (153176.145, 154893.661, 156461.918), stdev = 799.818
  CI (99.9%): [154359.292, 155428.030] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1027._Benchmark.benchmark_Cluster_1027  thrpt   30  154893.661 ± 534.369  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1028._Benchmark.benchmark_Cluster_1028$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1028._Benchmark.benchmark_Cluster_1028

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68138.199 ops/s
# Warmup Iteration   2: 98221.270 ops/s
# Warmup Iteration   3: 163933.842 ops/s
# Warmup Iteration   4: 195116.549 ops/s
# Warmup Iteration   5: 192189.638 ops/s
# Warmup Iteration   6: 193937.782 ops/s
# Warmup Iteration   7: 193749.085 ops/s
# Warmup Iteration   8: 193683.423 ops/s
# Warmup Iteration   9: 144405.698 ops/s
# Warmup Iteration  10: 181973.783 ops/s
# Warmup Iteration  11: 193596.170 ops/s
# Warmup Iteration  12: 193854.528 ops/s
# Warmup Iteration  13: 193445.015 ops/s
# Warmup Iteration  14: 193353.061 ops/s
# Warmup Iteration  15: 194011.189 ops/s
# Warmup Iteration  16: 193722.320 ops/s
# Warmup Iteration  17: 192540.868 ops/s
# Warmup Iteration  18: 192567.110 ops/s
# Warmup Iteration  19: 192824.620 ops/s
# Warmup Iteration  20: 193616.445 ops/s
# Warmup Iteration  21: 193680.705 ops/s
# Warmup Iteration  22: 192474.060 ops/s
# Warmup Iteration  23: 193115.205 ops/s
# Warmup Iteration  24: 193224.243 ops/s
# Warmup Iteration  25: 191923.776 ops/s
# Warmup Iteration  26: 193476.630 ops/s
# Warmup Iteration  27: 193290.886 ops/s
# Warmup Iteration  28: 193032.384 ops/s
# Warmup Iteration  29: 192760.715 ops/s
# Warmup Iteration  30: 192741.912 ops/s
Iteration   1: 192717.760 ops/s
Iteration   2: 192389.642 ops/s
Iteration   3: 192038.094 ops/s
Iteration   4: 192124.012 ops/s
Iteration   5: 192874.086 ops/s
Iteration   6: 192806.753 ops/s
Iteration   7: 193418.531 ops/s
Iteration   8: 195147.275 ops/s
Iteration   9: 194150.307 ops/s
Iteration  10: 194086.143 ops/s
Iteration  11: 193003.219 ops/s
Iteration  12: 192819.045 ops/s
Iteration  13: 192951.808 ops/s
Iteration  14: 192714.846 ops/s
Iteration  15: 192060.011 ops/s
Iteration  16: 192450.083 ops/s
Iteration  17: 194716.798 ops/s
Iteration  18: 194216.495 ops/s
Iteration  19: 192095.298 ops/s
Iteration  20: 192587.468 ops/s
Iteration  21: 192928.266 ops/s
Iteration  22: 193124.396 ops/s
Iteration  23: 194597.698 ops/s
Iteration  24: 193675.813 ops/s
Iteration  25: 192865.292 ops/s
Iteration  26: 191861.377 ops/s
Iteration  27: 191947.769 ops/s
Iteration  28: 192505.470 ops/s
Iteration  29: 191973.077 ops/s
Iteration  30: 192641.935 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1028._Benchmark.benchmark_Cluster_1028":
  192982.959 ±(99.9%) 595.974 ops/s [Average]
  (min, avg, max) = (191861.377, 192982.959, 195147.275), stdev = 892.026
  CI (99.9%): [192386.985, 193578.933] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1028._Benchmark.benchmark_Cluster_1028  thrpt   30  192982.959 ± 595.974  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1029._Benchmark.benchmark_Cluster_1029$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1029._Benchmark.benchmark_Cluster_1029

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51542.628 ops/s
# Warmup Iteration   2: 77665.172 ops/s
# Warmup Iteration   3: 146723.717 ops/s
# Warmup Iteration   4: 160127.039 ops/s
# Warmup Iteration   5: 163637.469 ops/s
# Warmup Iteration   6: 163035.109 ops/s
# Warmup Iteration   7: 162791.763 ops/s
# Warmup Iteration   8: 126854.765 ops/s
# Warmup Iteration   9: 147249.077 ops/s
# Warmup Iteration  10: 162421.662 ops/s
# Warmup Iteration  11: 162949.537 ops/s
# Warmup Iteration  12: 162330.589 ops/s
# Warmup Iteration  13: 162716.300 ops/s
# Warmup Iteration  14: 162864.400 ops/s
# Warmup Iteration  15: 163577.368 ops/s
# Warmup Iteration  16: 163685.157 ops/s
# Warmup Iteration  17: 164117.111 ops/s
# Warmup Iteration  18: 163967.828 ops/s
# Warmup Iteration  19: 162989.123 ops/s
# Warmup Iteration  20: 162317.973 ops/s
# Warmup Iteration  21: 161995.440 ops/s
# Warmup Iteration  22: 162795.081 ops/s
# Warmup Iteration  23: 164395.153 ops/s
# Warmup Iteration  24: 162571.556 ops/s
# Warmup Iteration  25: 163569.772 ops/s
# Warmup Iteration  26: 163093.703 ops/s
# Warmup Iteration  27: 163976.092 ops/s
# Warmup Iteration  28: 163018.021 ops/s
# Warmup Iteration  29: 163215.621 ops/s
# Warmup Iteration  30: 162707.603 ops/s
Iteration   1: 163475.680 ops/s
Iteration   2: 164574.033 ops/s
Iteration   3: 162846.135 ops/s
Iteration   4: 162892.515 ops/s
Iteration   5: 163494.700 ops/s
Iteration   6: 163629.009 ops/s
Iteration   7: 163231.291 ops/s
Iteration   8: 162656.342 ops/s
Iteration   9: 162698.428 ops/s
Iteration  10: 162115.655 ops/s
Iteration  11: 163750.238 ops/s
Iteration  12: 163117.094 ops/s
Iteration  13: 162914.839 ops/s
Iteration  14: 162960.047 ops/s
Iteration  15: 163914.538 ops/s
Iteration  16: 164529.871 ops/s
Iteration  17: 164137.533 ops/s
Iteration  18: 163794.508 ops/s
Iteration  19: 163709.456 ops/s
Iteration  20: 163510.884 ops/s
Iteration  21: 163347.593 ops/s
Iteration  22: 163363.479 ops/s
Iteration  23: 163210.927 ops/s
Iteration  24: 163380.081 ops/s
Iteration  25: 163867.950 ops/s
Iteration  26: 163459.671 ops/s
Iteration  27: 162976.078 ops/s
Iteration  28: 164357.551 ops/s
Iteration  29: 163107.099 ops/s
Iteration  30: 163254.720 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1029._Benchmark.benchmark_Cluster_1029":
  163409.265 ±(99.9%) 375.846 ops/s [Average]
  (min, avg, max) = (162115.655, 163409.265, 164574.033), stdev = 562.549
  CI (99.9%): [163033.418, 163785.111] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1029._Benchmark.benchmark_Cluster_1029  thrpt   30  163409.265 ± 375.846  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_103._Benchmark.benchmark_Cluster_103$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_103._Benchmark.benchmark_Cluster_103

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46315.463 ops/s
# Warmup Iteration   2: 69133.785 ops/s
# Warmup Iteration   3: 93354.876 ops/s
# Warmup Iteration   4: 125940.790 ops/s
# Warmup Iteration   5: 125581.971 ops/s
# Warmup Iteration   6: 124672.209 ops/s
# Warmup Iteration   7: 124767.777 ops/s
# Warmup Iteration   8: 125522.200 ops/s
# Warmup Iteration   9: 125255.857 ops/s
# Warmup Iteration  10: 124539.087 ops/s
# Warmup Iteration  11: 82994.481 ops/s
# Warmup Iteration  12: 124453.062 ops/s
# Warmup Iteration  13: 124243.715 ops/s
# Warmup Iteration  14: 124125.022 ops/s
# Warmup Iteration  15: 124265.114 ops/s
# Warmup Iteration  16: 123670.157 ops/s
# Warmup Iteration  17: 123826.571 ops/s
# Warmup Iteration  18: 123474.673 ops/s
# Warmup Iteration  19: 123380.584 ops/s
# Warmup Iteration  20: 123197.077 ops/s
# Warmup Iteration  21: 123321.599 ops/s
# Warmup Iteration  22: 123668.763 ops/s
# Warmup Iteration  23: 124119.008 ops/s
# Warmup Iteration  24: 123273.609 ops/s
# Warmup Iteration  25: 123418.244 ops/s
# Warmup Iteration  26: 123274.241 ops/s
# Warmup Iteration  27: 122788.259 ops/s
# Warmup Iteration  28: 123206.143 ops/s
# Warmup Iteration  29: 124456.851 ops/s
# Warmup Iteration  30: 124002.509 ops/s
Iteration   1: 123977.085 ops/s
Iteration   2: 124041.392 ops/s
Iteration   3: 123638.625 ops/s
Iteration   4: 124188.568 ops/s
Iteration   5: 124101.700 ops/s
Iteration   6: 124135.303 ops/s
Iteration   7: 124209.080 ops/s
Iteration   8: 123130.256 ops/s
Iteration   9: 123184.095 ops/s
Iteration  10: 122971.021 ops/s
Iteration  11: 123731.786 ops/s
Iteration  12: 123743.524 ops/s
Iteration  13: 123668.762 ops/s
Iteration  14: 124549.042 ops/s
Iteration  15: 124456.795 ops/s
Iteration  16: 124197.482 ops/s
Iteration  17: 123750.155 ops/s
Iteration  18: 124120.741 ops/s
Iteration  19: 123524.839 ops/s
Iteration  20: 123022.582 ops/s
Iteration  21: 123944.623 ops/s
Iteration  22: 123829.735 ops/s
Iteration  23: 123546.925 ops/s
Iteration  24: 123601.456 ops/s
Iteration  25: 123214.451 ops/s
Iteration  26: 123454.302 ops/s
Iteration  27: 123793.634 ops/s
Iteration  28: 123781.781 ops/s
Iteration  29: 122679.858 ops/s
Iteration  30: 122569.055 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_103._Benchmark.benchmark_Cluster_103":
  123691.955 ±(99.9%) 331.077 ops/s [Average]
  (min, avg, max) = (122569.055, 123691.955, 124549.042), stdev = 495.541
  CI (99.9%): [123360.878, 124023.032] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_103._Benchmark.benchmark_Cluster_103  thrpt   30  123691.955 ± 331.077  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1030._Benchmark.benchmark_Cluster_1030$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1030._Benchmark.benchmark_Cluster_1030

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55359.936 ops/s
# Warmup Iteration   2: 93735.069 ops/s
# Warmup Iteration   3: 150949.491 ops/s
# Warmup Iteration   4: 183431.352 ops/s
# Warmup Iteration   5: 181558.411 ops/s
# Warmup Iteration   6: 182881.714 ops/s
# Warmup Iteration   7: 183745.503 ops/s
# Warmup Iteration   8: 182150.787 ops/s
# Warmup Iteration   9: 136647.673 ops/s
# Warmup Iteration  10: 168255.937 ops/s
# Warmup Iteration  11: 182858.886 ops/s
# Warmup Iteration  12: 183174.458 ops/s
# Warmup Iteration  13: 183096.159 ops/s
# Warmup Iteration  14: 185045.076 ops/s
# Warmup Iteration  15: 183653.539 ops/s
# Warmup Iteration  16: 183608.886 ops/s
# Warmup Iteration  17: 184929.868 ops/s
# Warmup Iteration  18: 183559.681 ops/s
# Warmup Iteration  19: 183601.642 ops/s
# Warmup Iteration  20: 183583.485 ops/s
# Warmup Iteration  21: 184098.257 ops/s
# Warmup Iteration  22: 184480.697 ops/s
# Warmup Iteration  23: 184382.520 ops/s
# Warmup Iteration  24: 184373.552 ops/s
# Warmup Iteration  25: 183458.255 ops/s
# Warmup Iteration  26: 182186.801 ops/s
# Warmup Iteration  27: 183946.888 ops/s
# Warmup Iteration  28: 185646.648 ops/s
# Warmup Iteration  29: 184899.235 ops/s
# Warmup Iteration  30: 184829.700 ops/s
Iteration   1: 184939.558 ops/s
Iteration   2: 185166.413 ops/s
Iteration   3: 185156.120 ops/s
Iteration   4: 184269.903 ops/s
Iteration   5: 185118.063 ops/s
Iteration   6: 185831.198 ops/s
Iteration   7: 185517.350 ops/s
Iteration   8: 184695.532 ops/s
Iteration   9: 184157.359 ops/s
Iteration  10: 184993.489 ops/s
Iteration  11: 185427.645 ops/s
Iteration  12: 184399.224 ops/s
Iteration  13: 185113.914 ops/s
Iteration  14: 183464.340 ops/s
Iteration  15: 183947.280 ops/s
Iteration  16: 184212.746 ops/s
Iteration  17: 184011.320 ops/s
Iteration  18: 184668.409 ops/s
Iteration  19: 182703.412 ops/s
Iteration  20: 183050.775 ops/s
Iteration  21: 182483.595 ops/s
Iteration  22: 184834.323 ops/s
Iteration  23: 182642.764 ops/s
Iteration  24: 182607.263 ops/s
Iteration  25: 182484.886 ops/s
Iteration  26: 183556.209 ops/s
Iteration  27: 185037.759 ops/s
Iteration  28: 182735.235 ops/s
Iteration  29: 185744.698 ops/s
Iteration  30: 185564.971 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1030._Benchmark.benchmark_Cluster_1030":
  184284.525 ±(99.9%) 722.007 ops/s [Average]
  (min, avg, max) = (182483.595, 184284.525, 185831.198), stdev = 1080.666
  CI (99.9%): [183562.518, 185006.532] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1030._Benchmark.benchmark_Cluster_1030  thrpt   30  184284.525 ± 722.007  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1031._Benchmark.benchmark_Cluster_1031$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1031._Benchmark.benchmark_Cluster_1031

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71856.023 ops/s
# Warmup Iteration   2: 83302.170 ops/s
# Warmup Iteration   3: 134058.968 ops/s
# Warmup Iteration   4: 154683.723 ops/s
# Warmup Iteration   5: 153748.455 ops/s
# Warmup Iteration   6: 155616.881 ops/s
# Warmup Iteration   7: 155250.245 ops/s
# Warmup Iteration   8: 155456.366 ops/s
# Warmup Iteration   9: 155125.536 ops/s
# Warmup Iteration  10: 109466.677 ops/s
# Warmup Iteration  11: 151595.870 ops/s
# Warmup Iteration  12: 154993.196 ops/s
# Warmup Iteration  13: 154332.588 ops/s
# Warmup Iteration  14: 154531.155 ops/s
# Warmup Iteration  15: 154677.866 ops/s
# Warmup Iteration  16: 155500.189 ops/s
# Warmup Iteration  17: 158629.971 ops/s
# Warmup Iteration  18: 157814.482 ops/s
# Warmup Iteration  19: 157956.554 ops/s
# Warmup Iteration  20: 157828.202 ops/s
# Warmup Iteration  21: 157975.271 ops/s
# Warmup Iteration  22: 157838.473 ops/s
# Warmup Iteration  23: 157535.678 ops/s
# Warmup Iteration  24: 156607.595 ops/s
# Warmup Iteration  25: 157245.475 ops/s
# Warmup Iteration  26: 156893.919 ops/s
# Warmup Iteration  27: 157303.441 ops/s
# Warmup Iteration  28: 157008.042 ops/s
# Warmup Iteration  29: 157782.001 ops/s
# Warmup Iteration  30: 157559.346 ops/s
Iteration   1: 157904.165 ops/s
Iteration   2: 158000.937 ops/s
Iteration   3: 157904.124 ops/s
Iteration   4: 158152.079 ops/s
Iteration   5: 157678.028 ops/s
Iteration   6: 157858.995 ops/s
Iteration   7: 157608.423 ops/s
Iteration   8: 157116.504 ops/s
Iteration   9: 157432.869 ops/s
Iteration  10: 157157.577 ops/s
Iteration  11: 156714.162 ops/s
Iteration  12: 157406.093 ops/s
Iteration  13: 157454.655 ops/s
Iteration  14: 157392.633 ops/s
Iteration  15: 157501.565 ops/s
Iteration  16: 157364.661 ops/s
Iteration  17: 156578.761 ops/s
Iteration  18: 156660.469 ops/s
Iteration  19: 156894.038 ops/s
Iteration  20: 156939.712 ops/s
Iteration  21: 156323.769 ops/s
Iteration  22: 156391.151 ops/s
Iteration  23: 156086.557 ops/s
Iteration  24: 157261.475 ops/s
Iteration  25: 155616.694 ops/s
Iteration  26: 156847.654 ops/s
Iteration  27: 155434.242 ops/s
Iteration  28: 154818.392 ops/s
Iteration  29: 155612.221 ops/s
Iteration  30: 155348.927 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1031._Benchmark.benchmark_Cluster_1031":
  156915.384 ±(99.9%) 586.830 ops/s [Average]
  (min, avg, max) = (154818.392, 156915.384, 158152.079), stdev = 878.340
  CI (99.9%): [156328.554, 157502.215] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1031._Benchmark.benchmark_Cluster_1031  thrpt   30  156915.384 ± 586.830  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1032._Benchmark.benchmark_Cluster_1032$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1032._Benchmark.benchmark_Cluster_1032

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94080.025 ops/s
# Warmup Iteration   2: 145290.699 ops/s
# Warmup Iteration   3: 262526.271 ops/s
# Warmup Iteration   4: 299126.322 ops/s
# Warmup Iteration   5: 298054.682 ops/s
# Warmup Iteration   6: 298577.300 ops/s
# Warmup Iteration   7: 299542.970 ops/s
# Warmup Iteration   8: 274555.043 ops/s
# Warmup Iteration   9: 224304.262 ops/s
# Warmup Iteration  10: 298832.423 ops/s
# Warmup Iteration  11: 296727.978 ops/s
# Warmup Iteration  12: 295302.251 ops/s
# Warmup Iteration  13: 296887.863 ops/s
# Warmup Iteration  14: 293065.314 ops/s
# Warmup Iteration  15: 299995.818 ops/s
# Warmup Iteration  16: 299958.015 ops/s
# Warmup Iteration  17: 296940.677 ops/s
# Warmup Iteration  18: 292021.658 ops/s
# Warmup Iteration  19: 294756.143 ops/s
# Warmup Iteration  20: 300244.158 ops/s
# Warmup Iteration  21: 297967.419 ops/s
# Warmup Iteration  22: 299467.391 ops/s
# Warmup Iteration  23: 295303.938 ops/s
# Warmup Iteration  24: 297269.225 ops/s
# Warmup Iteration  25: 298325.056 ops/s
# Warmup Iteration  26: 298388.068 ops/s
# Warmup Iteration  27: 297643.961 ops/s
# Warmup Iteration  28: 299714.835 ops/s
# Warmup Iteration  29: 298462.624 ops/s
# Warmup Iteration  30: 299914.032 ops/s
Iteration   1: 298662.675 ops/s
Iteration   2: 299691.180 ops/s
Iteration   3: 299973.298 ops/s
Iteration   4: 300082.801 ops/s
Iteration   5: 300302.297 ops/s
Iteration   6: 301844.764 ops/s
Iteration   7: 297092.427 ops/s
Iteration   8: 291494.360 ops/s
Iteration   9: 294589.419 ops/s
Iteration  10: 300104.995 ops/s
Iteration  11: 301596.369 ops/s
Iteration  12: 291659.031 ops/s
Iteration  13: 297527.182 ops/s
Iteration  14: 301861.527 ops/s
Iteration  15: 300005.999 ops/s
Iteration  16: 299239.847 ops/s
Iteration  17: 297705.915 ops/s
Iteration  18: 295700.025 ops/s
Iteration  19: 301736.354 ops/s
Iteration  20: 294650.705 ops/s
Iteration  21: 298867.766 ops/s
Iteration  22: 300377.255 ops/s
Iteration  23: 298145.862 ops/s
Iteration  24: 296095.471 ops/s
Iteration  25: 298824.614 ops/s
Iteration  26: 297385.124 ops/s
Iteration  27: 297419.858 ops/s
Iteration  28: 288331.220 ops/s
Iteration  29: 301857.113 ops/s
Iteration  30: 300205.048 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1032._Benchmark.benchmark_Cluster_1032":
  298101.017 ±(99.9%) 2217.903 ops/s [Average]
  (min, avg, max) = (288331.220, 298101.017, 301861.527), stdev = 3319.653
  CI (99.9%): [295883.114, 300318.920] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score      Error  Units
Cluster_1032._Benchmark.benchmark_Cluster_1032  thrpt   30  298101.017 ± 2217.903  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1033._Benchmark.benchmark_Cluster_1033$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1033._Benchmark.benchmark_Cluster_1033

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80902.490 ops/s
# Warmup Iteration   2: 108803.847 ops/s
# Warmup Iteration   3: 108285.549 ops/s
# Warmup Iteration   4: 193344.358 ops/s
# Warmup Iteration   5: 196421.811 ops/s
# Warmup Iteration   6: 194600.735 ops/s
# Warmup Iteration   7: 191925.888 ops/s
# Warmup Iteration   8: 192669.398 ops/s
# Warmup Iteration   9: 195314.321 ops/s
# Warmup Iteration  10: 194013.630 ops/s
# Warmup Iteration  11: 195353.368 ops/s
# Warmup Iteration  12: 195678.394 ops/s
# Warmup Iteration  13: 136419.764 ops/s
# Warmup Iteration  14: 173446.847 ops/s
# Warmup Iteration  15: 196060.746 ops/s
# Warmup Iteration  16: 195039.205 ops/s
# Warmup Iteration  17: 195709.065 ops/s
# Warmup Iteration  18: 198081.193 ops/s
# Warmup Iteration  19: 201780.661 ops/s
# Warmup Iteration  20: 199636.967 ops/s
# Warmup Iteration  21: 201303.019 ops/s
# Warmup Iteration  22: 200572.312 ops/s
# Warmup Iteration  23: 201227.454 ops/s
# Warmup Iteration  24: 199841.619 ops/s
# Warmup Iteration  25: 200670.765 ops/s
# Warmup Iteration  26: 200267.057 ops/s
# Warmup Iteration  27: 200135.703 ops/s
# Warmup Iteration  28: 201225.143 ops/s
# Warmup Iteration  29: 200739.257 ops/s
# Warmup Iteration  30: 201289.393 ops/s
Iteration   1: 199684.710 ops/s
Iteration   2: 201304.201 ops/s
Iteration   3: 200974.766 ops/s
Iteration   4: 199085.898 ops/s
Iteration   5: 199712.948 ops/s
Iteration   6: 199629.908 ops/s
Iteration   7: 200754.431 ops/s
Iteration   8: 201133.518 ops/s
Iteration   9: 201393.783 ops/s
Iteration  10: 199453.575 ops/s
Iteration  11: 200916.391 ops/s
Iteration  12: 201121.050 ops/s
Iteration  13: 199290.978 ops/s
Iteration  14: 200929.862 ops/s
Iteration  15: 199983.782 ops/s
Iteration  16: 199489.405 ops/s
Iteration  17: 201405.260 ops/s
Iteration  18: 200768.201 ops/s
Iteration  19: 201133.895 ops/s
Iteration  20: 200163.750 ops/s
Iteration  21: 200185.681 ops/s
Iteration  22: 201155.690 ops/s
Iteration  23: 200625.123 ops/s
Iteration  24: 200856.305 ops/s
Iteration  25: 200764.596 ops/s
Iteration  26: 199846.772 ops/s
Iteration  27: 200101.613 ops/s
Iteration  28: 199094.030 ops/s
Iteration  29: 199872.432 ops/s
Iteration  30: 201421.318 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1033._Benchmark.benchmark_Cluster_1033":
  200408.462 ±(99.9%) 503.459 ops/s [Average]
  (min, avg, max) = (199085.898, 200408.462, 201421.318), stdev = 753.554
  CI (99.9%): [199905.003, 200911.922] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1033._Benchmark.benchmark_Cluster_1033  thrpt   30  200408.462 ± 503.459  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1034._Benchmark.benchmark_Cluster_1034$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1034._Benchmark.benchmark_Cluster_1034

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 136441.145 ops/s
# Warmup Iteration   2: 164506.241 ops/s
# Warmup Iteration   3: 166326.180 ops/s
# Warmup Iteration   4: 236325.895 ops/s
# Warmup Iteration   5: 251350.818 ops/s
# Warmup Iteration   6: 250056.012 ops/s
# Warmup Iteration   7: 249522.362 ops/s
# Warmup Iteration   8: 248842.404 ops/s
# Warmup Iteration   9: 250576.687 ops/s
# Warmup Iteration  10: 249049.568 ops/s
# Warmup Iteration  11: 249820.380 ops/s
# Warmup Iteration  12: 250739.041 ops/s
# Warmup Iteration  13: 253579.258 ops/s
# Warmup Iteration  14: 251399.622 ops/s
# Warmup Iteration  15: 252578.136 ops/s
# Warmup Iteration  16: 174824.348 ops/s
# Warmup Iteration  17: 261232.495 ops/s
# Warmup Iteration  18: 264896.618 ops/s
# Warmup Iteration  19: 264157.324 ops/s
# Warmup Iteration  20: 264111.514 ops/s
# Warmup Iteration  21: 265160.223 ops/s
# Warmup Iteration  22: 265080.019 ops/s
# Warmup Iteration  23: 262594.561 ops/s
# Warmup Iteration  24: 261349.448 ops/s
# Warmup Iteration  25: 260851.029 ops/s
# Warmup Iteration  26: 262721.595 ops/s
# Warmup Iteration  27: 261706.656 ops/s
# Warmup Iteration  28: 262835.031 ops/s
# Warmup Iteration  29: 263700.664 ops/s
# Warmup Iteration  30: 264465.273 ops/s
Iteration   1: 264539.803 ops/s
Iteration   2: 264617.155 ops/s
Iteration   3: 263559.093 ops/s
Iteration   4: 264945.178 ops/s
Iteration   5: 265326.439 ops/s
Iteration   6: 264623.822 ops/s
Iteration   7: 264488.755 ops/s
Iteration   8: 263805.803 ops/s
Iteration   9: 265030.958 ops/s
Iteration  10: 264854.650 ops/s
Iteration  11: 264397.317 ops/s
Iteration  12: 263999.244 ops/s
Iteration  13: 262051.320 ops/s
Iteration  14: 262794.222 ops/s
Iteration  15: 264644.002 ops/s
Iteration  16: 262573.803 ops/s
Iteration  17: 265043.966 ops/s
Iteration  18: 263481.093 ops/s
Iteration  19: 262021.361 ops/s
Iteration  20: 261967.691 ops/s
Iteration  21: 261300.506 ops/s
Iteration  22: 263603.907 ops/s
Iteration  23: 264353.820 ops/s
Iteration  24: 262043.280 ops/s
Iteration  25: 264263.055 ops/s
Iteration  26: 264046.768 ops/s
Iteration  27: 263429.486 ops/s
Iteration  28: 264070.433 ops/s
Iteration  29: 263815.500 ops/s
Iteration  30: 263460.163 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1034._Benchmark.benchmark_Cluster_1034":
  263771.753 ±(99.9%) 721.324 ops/s [Average]
  (min, avg, max) = (261300.506, 263771.753, 265326.439), stdev = 1079.644
  CI (99.9%): [263050.429, 264493.077] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1034._Benchmark.benchmark_Cluster_1034  thrpt   30  263771.753 ± 721.324  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1035._Benchmark.benchmark_Cluster_1035$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1035._Benchmark.benchmark_Cluster_1035

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91177.920 ops/s
# Warmup Iteration   2: 95866.756 ops/s
# Warmup Iteration   3: 100899.883 ops/s
# Warmup Iteration   4: 148344.363 ops/s
# Warmup Iteration   5: 148367.245 ops/s
# Warmup Iteration   6: 147954.260 ops/s
# Warmup Iteration   7: 147027.633 ops/s
# Warmup Iteration   8: 147670.046 ops/s
# Warmup Iteration   9: 147882.691 ops/s
# Warmup Iteration  10: 147376.511 ops/s
# Warmup Iteration  11: 148068.726 ops/s
# Warmup Iteration  12: 147484.221 ops/s
# Warmup Iteration  13: 148673.427 ops/s
# Warmup Iteration  14: 148665.024 ops/s
# Warmup Iteration  15: 104099.486 ops/s
# Warmup Iteration  16: 144569.600 ops/s
# Warmup Iteration  17: 153519.167 ops/s
# Warmup Iteration  18: 154923.124 ops/s
# Warmup Iteration  19: 155554.540 ops/s
# Warmup Iteration  20: 155029.109 ops/s
# Warmup Iteration  21: 154860.318 ops/s
# Warmup Iteration  22: 153588.467 ops/s
# Warmup Iteration  23: 154822.004 ops/s
# Warmup Iteration  24: 155546.126 ops/s
# Warmup Iteration  25: 155161.373 ops/s
# Warmup Iteration  26: 155259.732 ops/s
# Warmup Iteration  27: 155658.498 ops/s
# Warmup Iteration  28: 155886.692 ops/s
# Warmup Iteration  29: 155620.931 ops/s
# Warmup Iteration  30: 155982.358 ops/s
Iteration   1: 155812.816 ops/s
Iteration   2: 154653.964 ops/s
Iteration   3: 154742.828 ops/s
Iteration   4: 154499.453 ops/s
Iteration   5: 155545.755 ops/s
Iteration   6: 156013.794 ops/s
Iteration   7: 156106.827 ops/s
Iteration   8: 155952.931 ops/s
Iteration   9: 155240.460 ops/s
Iteration  10: 155974.348 ops/s
Iteration  11: 155339.848 ops/s
Iteration  12: 155910.819 ops/s
Iteration  13: 155907.996 ops/s
Iteration  14: 155975.917 ops/s
Iteration  15: 155591.542 ops/s
Iteration  16: 155194.333 ops/s
Iteration  17: 153288.665 ops/s
Iteration  18: 153851.310 ops/s
Iteration  19: 153516.142 ops/s
Iteration  20: 153275.544 ops/s
Iteration  21: 155496.094 ops/s
Iteration  22: 154882.130 ops/s
Iteration  23: 155995.589 ops/s
Iteration  24: 154738.444 ops/s
Iteration  25: 155351.825 ops/s
Iteration  26: 154928.473 ops/s
Iteration  27: 154029.401 ops/s
Iteration  28: 155152.000 ops/s
Iteration  29: 152509.771 ops/s
Iteration  30: 155307.273 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1035._Benchmark.benchmark_Cluster_1035":
  155026.210 ±(99.9%) 642.093 ops/s [Average]
  (min, avg, max) = (152509.771, 155026.210, 156106.827), stdev = 961.055
  CI (99.9%): [154384.117, 155668.303] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1035._Benchmark.benchmark_Cluster_1035  thrpt   30  155026.210 ± 642.093  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1036._Benchmark.benchmark_Cluster_1036$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1036._Benchmark.benchmark_Cluster_1036

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56425.892 ops/s
# Warmup Iteration   2: 69174.353 ops/s
# Warmup Iteration   3: 149669.157 ops/s
# Warmup Iteration   4: 148697.660 ops/s
# Warmup Iteration   5: 150096.776 ops/s
# Warmup Iteration   6: 149296.750 ops/s
# Warmup Iteration   7: 137951.859 ops/s
# Warmup Iteration   8: 111861.149 ops/s
# Warmup Iteration   9: 148764.440 ops/s
# Warmup Iteration  10: 150594.924 ops/s
# Warmup Iteration  11: 150045.209 ops/s
# Warmup Iteration  12: 150707.048 ops/s
# Warmup Iteration  13: 150917.376 ops/s
# Warmup Iteration  14: 150373.414 ops/s
# Warmup Iteration  15: 149234.750 ops/s
# Warmup Iteration  16: 149405.093 ops/s
# Warmup Iteration  17: 150226.231 ops/s
# Warmup Iteration  18: 148524.115 ops/s
# Warmup Iteration  19: 148977.080 ops/s
# Warmup Iteration  20: 149470.955 ops/s
# Warmup Iteration  21: 148836.077 ops/s
# Warmup Iteration  22: 150192.798 ops/s
# Warmup Iteration  23: 150053.475 ops/s
# Warmup Iteration  24: 150838.563 ops/s
# Warmup Iteration  25: 151072.373 ops/s
# Warmup Iteration  26: 150432.974 ops/s
# Warmup Iteration  27: 149483.889 ops/s
# Warmup Iteration  28: 149216.750 ops/s
# Warmup Iteration  29: 149759.946 ops/s
# Warmup Iteration  30: 149948.306 ops/s
Iteration   1: 149980.958 ops/s
Iteration   2: 150343.865 ops/s
Iteration   3: 149867.170 ops/s
Iteration   4: 150614.596 ops/s
Iteration   5: 151175.703 ops/s
Iteration   6: 150423.091 ops/s
Iteration   7: 150735.820 ops/s
Iteration   8: 150338.905 ops/s
Iteration   9: 150868.691 ops/s
Iteration  10: 150047.264 ops/s
Iteration  11: 150649.245 ops/s
Iteration  12: 150569.666 ops/s
Iteration  13: 149228.599 ops/s
Iteration  14: 150986.063 ops/s
Iteration  15: 150118.227 ops/s
Iteration  16: 148105.352 ops/s
Iteration  17: 148076.257 ops/s
Iteration  18: 147545.486 ops/s
Iteration  19: 147589.577 ops/s
Iteration  20: 149294.224 ops/s
Iteration  21: 150451.465 ops/s
Iteration  22: 149208.993 ops/s
Iteration  23: 150320.209 ops/s
Iteration  24: 150467.711 ops/s
Iteration  25: 150595.020 ops/s
Iteration  26: 150582.709 ops/s
Iteration  27: 149872.308 ops/s
Iteration  28: 150007.623 ops/s
Iteration  29: 150621.995 ops/s
Iteration  30: 149348.513 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1036._Benchmark.benchmark_Cluster_1036":
  149934.510 ±(99.9%) 656.288 ops/s [Average]
  (min, avg, max) = (147545.486, 149934.510, 151175.703), stdev = 982.302
  CI (99.9%): [149278.222, 150590.799] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1036._Benchmark.benchmark_Cluster_1036  thrpt   30  149934.510 ± 656.288  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1037._Benchmark.benchmark_Cluster_1037$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1037._Benchmark.benchmark_Cluster_1037

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86661.403 ops/s
# Warmup Iteration   2: 106250.688 ops/s
# Warmup Iteration   3: 107771.836 ops/s
# Warmup Iteration   4: 154799.383 ops/s
# Warmup Iteration   5: 165846.477 ops/s
# Warmup Iteration   6: 165803.891 ops/s
# Warmup Iteration   7: 165896.618 ops/s
# Warmup Iteration   8: 166091.659 ops/s
# Warmup Iteration   9: 166385.741 ops/s
# Warmup Iteration  10: 167108.077 ops/s
# Warmup Iteration  11: 166853.433 ops/s
# Warmup Iteration  12: 166748.912 ops/s
# Warmup Iteration  13: 166861.875 ops/s
# Warmup Iteration  14: 165964.365 ops/s
# Warmup Iteration  15: 144131.036 ops/s
# Warmup Iteration  16: 128317.828 ops/s
# Warmup Iteration  17: 172100.025 ops/s
# Warmup Iteration  18: 171117.005 ops/s
# Warmup Iteration  19: 170364.205 ops/s
# Warmup Iteration  20: 169828.655 ops/s
# Warmup Iteration  21: 171481.053 ops/s
# Warmup Iteration  22: 170891.459 ops/s
# Warmup Iteration  23: 170465.051 ops/s
# Warmup Iteration  24: 170518.238 ops/s
# Warmup Iteration  25: 171248.221 ops/s
# Warmup Iteration  26: 171482.165 ops/s
# Warmup Iteration  27: 171105.951 ops/s
# Warmup Iteration  28: 172100.183 ops/s
# Warmup Iteration  29: 171146.056 ops/s
# Warmup Iteration  30: 171902.621 ops/s
Iteration   1: 171769.906 ops/s
Iteration   2: 171407.802 ops/s
Iteration   3: 171615.696 ops/s
Iteration   4: 171345.503 ops/s
Iteration   5: 170381.497 ops/s
Iteration   6: 171090.039 ops/s
Iteration   7: 170363.602 ops/s
Iteration   8: 172105.245 ops/s
Iteration   9: 170477.284 ops/s
Iteration  10: 171807.229 ops/s
Iteration  11: 171891.993 ops/s
Iteration  12: 171601.504 ops/s
Iteration  13: 171379.559 ops/s
Iteration  14: 171455.536 ops/s
Iteration  15: 171491.960 ops/s
Iteration  16: 172084.158 ops/s
Iteration  17: 171030.466 ops/s
Iteration  18: 172567.616 ops/s
Iteration  19: 172558.312 ops/s
Iteration  20: 172399.808 ops/s
Iteration  21: 170593.561 ops/s
Iteration  22: 171558.522 ops/s
Iteration  23: 171872.370 ops/s
Iteration  24: 170469.820 ops/s
Iteration  25: 171322.346 ops/s
Iteration  26: 171553.267 ops/s
Iteration  27: 171564.787 ops/s
Iteration  28: 171360.224 ops/s
Iteration  29: 171257.332 ops/s
Iteration  30: 172095.842 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1037._Benchmark.benchmark_Cluster_1037":
  171482.426 ±(99.9%) 404.599 ops/s [Average]
  (min, avg, max) = (170363.602, 171482.426, 172567.616), stdev = 605.585
  CI (99.9%): [171077.827, 171887.025] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1037._Benchmark.benchmark_Cluster_1037  thrpt   30  171482.426 ± 404.599  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1038._Benchmark.benchmark_Cluster_1038$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1038._Benchmark.benchmark_Cluster_1038

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60919.219 ops/s
# Warmup Iteration   2: 88884.942 ops/s
# Warmup Iteration   3: 174802.003 ops/s
# Warmup Iteration   4: 180597.421 ops/s
# Warmup Iteration   5: 183556.786 ops/s
# Warmup Iteration   6: 184220.080 ops/s
# Warmup Iteration   7: 183317.380 ops/s
# Warmup Iteration   8: 129438.878 ops/s
# Warmup Iteration   9: 182347.021 ops/s
# Warmup Iteration  10: 185487.357 ops/s
# Warmup Iteration  11: 185307.327 ops/s
# Warmup Iteration  12: 185354.777 ops/s
# Warmup Iteration  13: 185664.212 ops/s
# Warmup Iteration  14: 185296.763 ops/s
# Warmup Iteration  15: 185033.140 ops/s
# Warmup Iteration  16: 185923.426 ops/s
# Warmup Iteration  17: 185241.578 ops/s
# Warmup Iteration  18: 184856.395 ops/s
# Warmup Iteration  19: 184802.337 ops/s
# Warmup Iteration  20: 184540.297 ops/s
# Warmup Iteration  21: 183905.382 ops/s
# Warmup Iteration  22: 184596.841 ops/s
# Warmup Iteration  23: 184225.675 ops/s
# Warmup Iteration  24: 184368.952 ops/s
# Warmup Iteration  25: 185471.583 ops/s
# Warmup Iteration  26: 184653.467 ops/s
# Warmup Iteration  27: 184257.320 ops/s
# Warmup Iteration  28: 183181.454 ops/s
# Warmup Iteration  29: 183835.425 ops/s
# Warmup Iteration  30: 185266.856 ops/s
Iteration   1: 185271.908 ops/s
Iteration   2: 185409.313 ops/s
Iteration   3: 184703.474 ops/s
Iteration   4: 184797.294 ops/s
Iteration   5: 185502.600 ops/s
Iteration   6: 185814.888 ops/s
Iteration   7: 185599.807 ops/s
Iteration   8: 185817.637 ops/s
Iteration   9: 184252.526 ops/s
Iteration  10: 184420.129 ops/s
Iteration  11: 184198.840 ops/s
Iteration  12: 185249.677 ops/s
Iteration  13: 183753.207 ops/s
Iteration  14: 183234.674 ops/s
Iteration  15: 184733.855 ops/s
Iteration  16: 183590.427 ops/s
Iteration  17: 185397.869 ops/s
Iteration  18: 183936.600 ops/s
Iteration  19: 184653.088 ops/s
Iteration  20: 184700.362 ops/s
Iteration  21: 182794.163 ops/s
Iteration  22: 184222.542 ops/s
Iteration  23: 183803.074 ops/s
Iteration  24: 184448.015 ops/s
Iteration  25: 184206.771 ops/s
Iteration  26: 183954.977 ops/s
Iteration  27: 184656.824 ops/s
Iteration  28: 184577.697 ops/s
Iteration  29: 184788.527 ops/s
Iteration  30: 184334.714 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1038._Benchmark.benchmark_Cluster_1038":
  184560.849 ±(99.9%) 497.331 ops/s [Average]
  (min, avg, max) = (182794.163, 184560.849, 185817.637), stdev = 744.382
  CI (99.9%): [184063.518, 185058.181] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1038._Benchmark.benchmark_Cluster_1038  thrpt   30  184560.849 ± 497.331  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1039._Benchmark.benchmark_Cluster_1039$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1039._Benchmark.benchmark_Cluster_1039

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74041.162 ops/s
# Warmup Iteration   2: 112228.749 ops/s
# Warmup Iteration   3: 125933.544 ops/s
# Warmup Iteration   4: 192756.670 ops/s
# Warmup Iteration   5: 193117.583 ops/s
# Warmup Iteration   6: 192259.656 ops/s
# Warmup Iteration   7: 194362.238 ops/s
# Warmup Iteration   8: 192667.285 ops/s
# Warmup Iteration   9: 192021.498 ops/s
# Warmup Iteration  10: 193897.902 ops/s
# Warmup Iteration  11: 193749.517 ops/s
# Warmup Iteration  12: 164701.197 ops/s
# Warmup Iteration  13: 154758.327 ops/s
# Warmup Iteration  14: 193485.058 ops/s
# Warmup Iteration  15: 193364.432 ops/s
# Warmup Iteration  16: 192958.347 ops/s
# Warmup Iteration  17: 197585.459 ops/s
# Warmup Iteration  18: 197160.894 ops/s
# Warmup Iteration  19: 196673.691 ops/s
# Warmup Iteration  20: 196884.869 ops/s
# Warmup Iteration  21: 196592.662 ops/s
# Warmup Iteration  22: 197045.906 ops/s
# Warmup Iteration  23: 196682.013 ops/s
# Warmup Iteration  24: 195709.740 ops/s
# Warmup Iteration  25: 195776.189 ops/s
# Warmup Iteration  26: 196749.171 ops/s
# Warmup Iteration  27: 197114.818 ops/s
# Warmup Iteration  28: 196767.208 ops/s
# Warmup Iteration  29: 195715.082 ops/s
# Warmup Iteration  30: 197844.735 ops/s
Iteration   1: 197193.434 ops/s
Iteration   2: 197825.118 ops/s
Iteration   3: 196617.896 ops/s
Iteration   4: 196562.720 ops/s
Iteration   5: 197695.609 ops/s
Iteration   6: 197493.753 ops/s
Iteration   7: 196662.426 ops/s
Iteration   8: 194261.601 ops/s
Iteration   9: 195161.116 ops/s
Iteration  10: 194396.919 ops/s
Iteration  11: 195085.538 ops/s
Iteration  12: 194191.879 ops/s
Iteration  13: 194756.642 ops/s
Iteration  14: 196921.988 ops/s
Iteration  15: 196815.159 ops/s
Iteration  16: 196361.437 ops/s
Iteration  17: 195084.121 ops/s
Iteration  18: 195520.594 ops/s
Iteration  19: 196103.508 ops/s
Iteration  20: 196651.191 ops/s
Iteration  21: 196239.416 ops/s
Iteration  22: 196011.746 ops/s
Iteration  23: 197131.651 ops/s
Iteration  24: 195993.064 ops/s
Iteration  25: 197659.894 ops/s
Iteration  26: 196629.491 ops/s
Iteration  27: 196118.623 ops/s
Iteration  28: 195864.084 ops/s
Iteration  29: 196605.947 ops/s
Iteration  30: 196923.234 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1039._Benchmark.benchmark_Cluster_1039":
  196217.993 ±(99.9%) 684.171 ops/s [Average]
  (min, avg, max) = (194191.879, 196217.993, 197825.118), stdev = 1024.035
  CI (99.9%): [195533.822, 196902.165] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1039._Benchmark.benchmark_Cluster_1039  thrpt   30  196217.993 ± 684.171  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_104._Benchmark.benchmark_Cluster_104$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_104._Benchmark.benchmark_Cluster_104

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72434.637 ops/s
# Warmup Iteration   2: 97143.658 ops/s
# Warmup Iteration   3: 200103.323 ops/s
# Warmup Iteration   4: 198186.034 ops/s
# Warmup Iteration   5: 200181.321 ops/s
# Warmup Iteration   6: 200828.510 ops/s
# Warmup Iteration   7: 174015.687 ops/s
# Warmup Iteration   8: 165138.369 ops/s
# Warmup Iteration   9: 201158.102 ops/s
# Warmup Iteration  10: 201304.130 ops/s
# Warmup Iteration  11: 200954.772 ops/s
# Warmup Iteration  12: 200445.249 ops/s
# Warmup Iteration  13: 201278.183 ops/s
# Warmup Iteration  14: 200855.779 ops/s
# Warmup Iteration  15: 200510.554 ops/s
# Warmup Iteration  16: 200191.905 ops/s
# Warmup Iteration  17: 201472.017 ops/s
# Warmup Iteration  18: 200455.180 ops/s
# Warmup Iteration  19: 200864.594 ops/s
# Warmup Iteration  20: 201151.565 ops/s
# Warmup Iteration  21: 200300.666 ops/s
# Warmup Iteration  22: 200482.769 ops/s
# Warmup Iteration  23: 199589.397 ops/s
# Warmup Iteration  24: 199236.908 ops/s
# Warmup Iteration  25: 199371.292 ops/s
# Warmup Iteration  26: 200266.270 ops/s
# Warmup Iteration  27: 200877.976 ops/s
# Warmup Iteration  28: 201123.239 ops/s
# Warmup Iteration  29: 201380.326 ops/s
# Warmup Iteration  30: 201732.713 ops/s
Iteration   1: 201511.726 ops/s
Iteration   2: 200920.112 ops/s
Iteration   3: 200683.425 ops/s
Iteration   4: 201050.201 ops/s
Iteration   5: 200104.598 ops/s
Iteration   6: 198786.194 ops/s
Iteration   7: 199914.343 ops/s
Iteration   8: 200511.404 ops/s
Iteration   9: 197602.269 ops/s
Iteration  10: 195870.688 ops/s
Iteration  11: 199247.156 ops/s
Iteration  12: 198811.935 ops/s
Iteration  13: 199033.380 ops/s
Iteration  14: 199922.266 ops/s
Iteration  15: 201299.185 ops/s
Iteration  16: 201262.138 ops/s
Iteration  17: 201119.966 ops/s
Iteration  18: 200561.607 ops/s
Iteration  19: 200626.882 ops/s
Iteration  20: 200315.354 ops/s
Iteration  21: 200701.297 ops/s
Iteration  22: 200515.347 ops/s
Iteration  23: 200930.368 ops/s
Iteration  24: 201260.684 ops/s
Iteration  25: 198584.049 ops/s
Iteration  26: 200345.706 ops/s
Iteration  27: 200089.051 ops/s
Iteration  28: 201116.069 ops/s
Iteration  29: 200091.795 ops/s
Iteration  30: 197032.432 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_104._Benchmark.benchmark_Cluster_104":
  199994.054 ±(99.9%) 902.538 ops/s [Average]
  (min, avg, max) = (195870.688, 199994.054, 201511.726), stdev = 1350.877
  CI (99.9%): [199091.516, 200896.592] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_104._Benchmark.benchmark_Cluster_104  thrpt   30  199994.054 ± 902.538  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1040._Benchmark.benchmark_Cluster_1040$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1040._Benchmark.benchmark_Cluster_1040

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50782.898 ops/s
# Warmup Iteration   2: 97081.051 ops/s
# Warmup Iteration   3: 130070.827 ops/s
# Warmup Iteration   4: 175761.612 ops/s
# Warmup Iteration   5: 174297.139 ops/s
# Warmup Iteration   6: 176377.184 ops/s
# Warmup Iteration   7: 175613.456 ops/s
# Warmup Iteration   8: 175941.753 ops/s
# Warmup Iteration   9: 175228.018 ops/s
# Warmup Iteration  10: 145419.968 ops/s
# Warmup Iteration  11: 152551.019 ops/s
# Warmup Iteration  12: 174589.696 ops/s
# Warmup Iteration  13: 175335.738 ops/s
# Warmup Iteration  14: 176112.743 ops/s
# Warmup Iteration  15: 175660.646 ops/s
# Warmup Iteration  16: 176246.258 ops/s
# Warmup Iteration  17: 175532.718 ops/s
# Warmup Iteration  18: 175437.334 ops/s
# Warmup Iteration  19: 176611.393 ops/s
# Warmup Iteration  20: 176453.757 ops/s
# Warmup Iteration  21: 176539.967 ops/s
# Warmup Iteration  22: 175414.070 ops/s
# Warmup Iteration  23: 175543.558 ops/s
# Warmup Iteration  24: 176875.964 ops/s
# Warmup Iteration  25: 175962.379 ops/s
# Warmup Iteration  26: 176065.002 ops/s
# Warmup Iteration  27: 175961.917 ops/s
# Warmup Iteration  28: 175793.251 ops/s
# Warmup Iteration  29: 176112.022 ops/s
# Warmup Iteration  30: 175970.102 ops/s
Iteration   1: 177107.727 ops/s
Iteration   2: 176827.542 ops/s
Iteration   3: 175879.294 ops/s
Iteration   4: 175787.412 ops/s
Iteration   5: 174358.870 ops/s
Iteration   6: 174934.968 ops/s
Iteration   7: 176546.022 ops/s
Iteration   8: 173052.628 ops/s
Iteration   9: 176566.440 ops/s
Iteration  10: 175823.293 ops/s
Iteration  11: 176109.837 ops/s
Iteration  12: 175421.210 ops/s
Iteration  13: 175622.750 ops/s
Iteration  14: 175553.429 ops/s
Iteration  15: 175693.146 ops/s
Iteration  16: 176327.165 ops/s
Iteration  17: 175890.716 ops/s
Iteration  18: 175630.122 ops/s
Iteration  19: 175801.107 ops/s
Iteration  20: 173791.545 ops/s
Iteration  21: 176444.986 ops/s
Iteration  22: 175817.118 ops/s
Iteration  23: 175562.040 ops/s
Iteration  24: 175684.464 ops/s
Iteration  25: 175145.882 ops/s
Iteration  26: 176156.824 ops/s
Iteration  27: 176329.070 ops/s
Iteration  28: 176362.146 ops/s
Iteration  29: 174375.309 ops/s
Iteration  30: 175797.079 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1040._Benchmark.benchmark_Cluster_1040":
  175680.005 ±(99.9%) 584.786 ops/s [Average]
  (min, avg, max) = (173052.628, 175680.005, 177107.727), stdev = 875.280
  CI (99.9%): [175095.219, 176264.790] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1040._Benchmark.benchmark_Cluster_1040  thrpt   30  175680.005 ± 584.786  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1041._Benchmark.benchmark_Cluster_1041$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1041._Benchmark.benchmark_Cluster_1041

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70259.189 ops/s
# Warmup Iteration   2: 86775.540 ops/s
# Warmup Iteration   3: 94816.136 ops/s
# Warmup Iteration   4: 143099.179 ops/s
# Warmup Iteration   5: 143036.800 ops/s
# Warmup Iteration   6: 142940.229 ops/s
# Warmup Iteration   7: 142850.174 ops/s
# Warmup Iteration   8: 143203.239 ops/s
# Warmup Iteration   9: 143675.814 ops/s
# Warmup Iteration  10: 143762.885 ops/s
# Warmup Iteration  11: 144065.390 ops/s
# Warmup Iteration  12: 144420.979 ops/s
# Warmup Iteration  13: 118588.220 ops/s
# Warmup Iteration  14: 120768.359 ops/s
# Warmup Iteration  15: 144604.348 ops/s
# Warmup Iteration  16: 144467.320 ops/s
# Warmup Iteration  17: 147331.598 ops/s
# Warmup Iteration  18: 147390.955 ops/s
# Warmup Iteration  19: 147395.032 ops/s
# Warmup Iteration  20: 147295.025 ops/s
# Warmup Iteration  21: 147608.288 ops/s
# Warmup Iteration  22: 147411.347 ops/s
# Warmup Iteration  23: 147400.252 ops/s
# Warmup Iteration  24: 147480.272 ops/s
# Warmup Iteration  25: 147343.280 ops/s
# Warmup Iteration  26: 147438.457 ops/s
# Warmup Iteration  27: 147018.429 ops/s
# Warmup Iteration  28: 147377.902 ops/s
# Warmup Iteration  29: 146803.024 ops/s
# Warmup Iteration  30: 147025.968 ops/s
Iteration   1: 147141.024 ops/s
Iteration   2: 147225.882 ops/s
Iteration   3: 146863.249 ops/s
Iteration   4: 145627.538 ops/s
Iteration   5: 146836.306 ops/s
Iteration   6: 146354.226 ops/s
Iteration   7: 144828.059 ops/s
Iteration   8: 146737.823 ops/s
Iteration   9: 147008.132 ops/s
Iteration  10: 145301.413 ops/s
Iteration  11: 147027.888 ops/s
Iteration  12: 146178.191 ops/s
Iteration  13: 146324.866 ops/s
Iteration  14: 147295.106 ops/s
Iteration  15: 147089.737 ops/s
Iteration  16: 147584.409 ops/s
Iteration  17: 146890.580 ops/s
Iteration  18: 147416.949 ops/s
Iteration  19: 146997.641 ops/s
Iteration  20: 147070.145 ops/s
Iteration  21: 146574.046 ops/s
Iteration  22: 146244.789 ops/s
Iteration  23: 146538.047 ops/s
Iteration  24: 146922.935 ops/s
Iteration  25: 146773.182 ops/s
Iteration  26: 146552.264 ops/s
Iteration  27: 145722.907 ops/s
Iteration  28: 146722.475 ops/s
Iteration  29: 145967.776 ops/s
Iteration  30: 145407.855 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1041._Benchmark.benchmark_Cluster_1041":
  146574.181 ±(99.9%) 446.283 ops/s [Average]
  (min, avg, max) = (144828.059, 146574.181, 147584.409), stdev = 667.976
  CI (99.9%): [146127.898, 147020.465] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1041._Benchmark.benchmark_Cluster_1041  thrpt   30  146574.181 ± 446.283  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1042._Benchmark.benchmark_Cluster_1042$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1042._Benchmark.benchmark_Cluster_1042

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73807.067 ops/s
# Warmup Iteration   2: 96603.282 ops/s
# Warmup Iteration   3: 151721.794 ops/s
# Warmup Iteration   4: 181967.172 ops/s
# Warmup Iteration   5: 180439.064 ops/s
# Warmup Iteration   6: 182518.978 ops/s
# Warmup Iteration   7: 182613.552 ops/s
# Warmup Iteration   8: 181393.233 ops/s
# Warmup Iteration   9: 182141.193 ops/s
# Warmup Iteration  10: 120871.727 ops/s
# Warmup Iteration  11: 183020.829 ops/s
# Warmup Iteration  12: 183332.870 ops/s
# Warmup Iteration  13: 182612.740 ops/s
# Warmup Iteration  14: 183619.000 ops/s
# Warmup Iteration  15: 182634.726 ops/s
# Warmup Iteration  16: 182428.218 ops/s
# Warmup Iteration  17: 182916.712 ops/s
# Warmup Iteration  18: 181888.516 ops/s
# Warmup Iteration  19: 181237.212 ops/s
# Warmup Iteration  20: 181870.415 ops/s
# Warmup Iteration  21: 182541.552 ops/s
# Warmup Iteration  22: 183749.859 ops/s
# Warmup Iteration  23: 183672.180 ops/s
# Warmup Iteration  24: 183288.772 ops/s
# Warmup Iteration  25: 182575.055 ops/s
# Warmup Iteration  26: 182572.553 ops/s
# Warmup Iteration  27: 183739.869 ops/s
# Warmup Iteration  28: 182466.816 ops/s
# Warmup Iteration  29: 182628.897 ops/s
# Warmup Iteration  30: 181576.969 ops/s
Iteration   1: 182054.736 ops/s
Iteration   2: 183561.071 ops/s
Iteration   3: 182402.070 ops/s
Iteration   4: 182898.424 ops/s
Iteration   5: 182711.840 ops/s
Iteration   6: 182840.475 ops/s
Iteration   7: 183691.671 ops/s
Iteration   8: 183142.416 ops/s
Iteration   9: 181716.005 ops/s
Iteration  10: 183583.964 ops/s
Iteration  11: 182025.117 ops/s
Iteration  12: 183637.452 ops/s
Iteration  13: 183103.781 ops/s
Iteration  14: 183138.863 ops/s
Iteration  15: 182767.690 ops/s
Iteration  16: 182637.844 ops/s
Iteration  17: 183590.313 ops/s
Iteration  18: 182648.264 ops/s
Iteration  19: 183757.234 ops/s
Iteration  20: 182599.618 ops/s
Iteration  21: 183326.491 ops/s
Iteration  22: 183624.614 ops/s
Iteration  23: 183520.005 ops/s
Iteration  24: 183278.863 ops/s
Iteration  25: 183810.907 ops/s
Iteration  26: 183312.083 ops/s
Iteration  27: 183698.430 ops/s
Iteration  28: 183927.407 ops/s
Iteration  29: 183870.082 ops/s
Iteration  30: 183075.449 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1042._Benchmark.benchmark_Cluster_1042":
  183131.773 ±(99.9%) 395.074 ops/s [Average]
  (min, avg, max) = (181716.005, 183131.773, 183927.407), stdev = 591.328
  CI (99.9%): [182736.699, 183526.847] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1042._Benchmark.benchmark_Cluster_1042  thrpt   30  183131.773 ± 395.074  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1043._Benchmark.benchmark_Cluster_1043$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1043._Benchmark.benchmark_Cluster_1043

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64912.559 ops/s
# Warmup Iteration   2: 80309.940 ops/s
# Warmup Iteration   3: 143339.513 ops/s
# Warmup Iteration   4: 161696.181 ops/s
# Warmup Iteration   5: 160769.009 ops/s
# Warmup Iteration   6: 162285.210 ops/s
# Warmup Iteration   7: 162575.698 ops/s
# Warmup Iteration   8: 162339.100 ops/s
# Warmup Iteration   9: 108477.888 ops/s
# Warmup Iteration  10: 162572.553 ops/s
# Warmup Iteration  11: 162332.118 ops/s
# Warmup Iteration  12: 162348.722 ops/s
# Warmup Iteration  13: 162501.161 ops/s
# Warmup Iteration  14: 162354.310 ops/s
# Warmup Iteration  15: 162540.527 ops/s
# Warmup Iteration  16: 162014.563 ops/s
# Warmup Iteration  17: 162388.240 ops/s
# Warmup Iteration  18: 162138.500 ops/s
# Warmup Iteration  19: 162168.130 ops/s
# Warmup Iteration  20: 161272.396 ops/s
# Warmup Iteration  21: 161325.521 ops/s
# Warmup Iteration  22: 162153.435 ops/s
# Warmup Iteration  23: 162174.155 ops/s
# Warmup Iteration  24: 162224.547 ops/s
# Warmup Iteration  25: 162241.032 ops/s
# Warmup Iteration  26: 162197.943 ops/s
# Warmup Iteration  27: 162232.526 ops/s
# Warmup Iteration  28: 161584.376 ops/s
# Warmup Iteration  29: 161862.071 ops/s
# Warmup Iteration  30: 161338.197 ops/s
Iteration   1: 161745.719 ops/s
Iteration   2: 161588.882 ops/s
Iteration   3: 162096.630 ops/s
Iteration   4: 162297.368 ops/s
Iteration   5: 161672.916 ops/s
Iteration   6: 162238.021 ops/s
Iteration   7: 160631.560 ops/s
Iteration   8: 161756.662 ops/s
Iteration   9: 161126.103 ops/s
Iteration  10: 161199.688 ops/s
Iteration  11: 161170.539 ops/s
Iteration  12: 162348.845 ops/s
Iteration  13: 161725.383 ops/s
Iteration  14: 162317.029 ops/s
Iteration  15: 162420.010 ops/s
Iteration  16: 162244.732 ops/s
Iteration  17: 162059.002 ops/s
Iteration  18: 161886.483 ops/s
Iteration  19: 162006.705 ops/s
Iteration  20: 162310.854 ops/s
Iteration  21: 162143.001 ops/s
Iteration  22: 162116.975 ops/s
Iteration  23: 162259.971 ops/s
Iteration  24: 161752.462 ops/s
Iteration  25: 161435.748 ops/s
Iteration  26: 161481.083 ops/s
Iteration  27: 160096.058 ops/s
Iteration  28: 161283.817 ops/s
Iteration  29: 159857.352 ops/s
Iteration  30: 162124.432 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1043._Benchmark.benchmark_Cluster_1043":
  161713.134 ±(99.9%) 433.205 ops/s [Average]
  (min, avg, max) = (159857.352, 161713.134, 162420.010), stdev = 648.402
  CI (99.9%): [161279.929, 162146.340] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1043._Benchmark.benchmark_Cluster_1043  thrpt   30  161713.134 ± 433.205  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1044._Benchmark.benchmark_Cluster_1044$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1044._Benchmark.benchmark_Cluster_1044

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80462.055 ops/s
# Warmup Iteration   2: 105810.145 ops/s
# Warmup Iteration   3: 139847.290 ops/s
# Warmup Iteration   4: 182082.719 ops/s
# Warmup Iteration   5: 182041.395 ops/s
# Warmup Iteration   6: 179841.023 ops/s
# Warmup Iteration   7: 181705.322 ops/s
# Warmup Iteration   8: 182065.358 ops/s
# Warmup Iteration   9: 182697.528 ops/s
# Warmup Iteration  10: 182026.671 ops/s
# Warmup Iteration  11: 158474.398 ops/s
# Warmup Iteration  12: 148106.303 ops/s
# Warmup Iteration  13: 182527.750 ops/s
# Warmup Iteration  14: 182354.889 ops/s
# Warmup Iteration  15: 182645.280 ops/s
# Warmup Iteration  16: 182434.913 ops/s
# Warmup Iteration  17: 182499.664 ops/s
# Warmup Iteration  18: 182747.419 ops/s
# Warmup Iteration  19: 182616.304 ops/s
# Warmup Iteration  20: 182598.700 ops/s
# Warmup Iteration  21: 182379.406 ops/s
# Warmup Iteration  22: 182618.041 ops/s
# Warmup Iteration  23: 182358.632 ops/s
# Warmup Iteration  24: 182515.079 ops/s
# Warmup Iteration  25: 181906.496 ops/s
# Warmup Iteration  26: 182279.476 ops/s
# Warmup Iteration  27: 182458.527 ops/s
# Warmup Iteration  28: 182200.307 ops/s
# Warmup Iteration  29: 182793.335 ops/s
# Warmup Iteration  30: 182586.569 ops/s
Iteration   1: 182816.591 ops/s
Iteration   2: 182467.577 ops/s
Iteration   3: 182541.452 ops/s
Iteration   4: 182393.097 ops/s
Iteration   5: 182767.208 ops/s
Iteration   6: 182215.677 ops/s
Iteration   7: 181844.609 ops/s
Iteration   8: 182076.435 ops/s
Iteration   9: 182229.445 ops/s
Iteration  10: 182451.681 ops/s
Iteration  11: 181532.550 ops/s
Iteration  12: 182159.374 ops/s
Iteration  13: 181525.090 ops/s
Iteration  14: 182057.201 ops/s
Iteration  15: 182436.466 ops/s
Iteration  16: 182135.841 ops/s
Iteration  17: 182454.754 ops/s
Iteration  18: 181800.252 ops/s
Iteration  19: 182584.750 ops/s
Iteration  20: 182136.177 ops/s
Iteration  21: 182143.648 ops/s
Iteration  22: 181706.265 ops/s
Iteration  23: 181827.533 ops/s
Iteration  24: 182212.611 ops/s
Iteration  25: 181784.214 ops/s
Iteration  26: 181817.009 ops/s
Iteration  27: 182165.221 ops/s
Iteration  28: 181944.312 ops/s
Iteration  29: 181794.122 ops/s
Iteration  30: 181815.226 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1044._Benchmark.benchmark_Cluster_1044":
  182127.880 ±(99.9%) 229.505 ops/s [Average]
  (min, avg, max) = (181525.090, 182127.880, 182816.591), stdev = 343.512
  CI (99.9%): [181898.375, 182357.384] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1044._Benchmark.benchmark_Cluster_1044  thrpt   30  182127.880 ± 229.505  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1045._Benchmark.benchmark_Cluster_1045$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1045._Benchmark.benchmark_Cluster_1045

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 39512.402 ops/s
# Warmup Iteration   2: 66639.781 ops/s
# Warmup Iteration   3: 147428.450 ops/s
# Warmup Iteration   4: 154002.279 ops/s
# Warmup Iteration   5: 156009.738 ops/s
# Warmup Iteration   6: 155374.124 ops/s
# Warmup Iteration   7: 106051.167 ops/s
# Warmup Iteration   8: 156134.972 ops/s
# Warmup Iteration   9: 156037.062 ops/s
# Warmup Iteration  10: 155689.539 ops/s
# Warmup Iteration  11: 155815.363 ops/s
# Warmup Iteration  12: 155673.873 ops/s
# Warmup Iteration  13: 155939.310 ops/s
# Warmup Iteration  14: 155392.402 ops/s
# Warmup Iteration  15: 155269.303 ops/s
# Warmup Iteration  16: 155810.283 ops/s
# Warmup Iteration  17: 155829.058 ops/s
# Warmup Iteration  18: 156257.043 ops/s
# Warmup Iteration  19: 155785.672 ops/s
# Warmup Iteration  20: 156033.531 ops/s
# Warmup Iteration  21: 156122.915 ops/s
# Warmup Iteration  22: 155653.697 ops/s
# Warmup Iteration  23: 155419.141 ops/s
# Warmup Iteration  24: 154238.579 ops/s
# Warmup Iteration  25: 155883.446 ops/s
# Warmup Iteration  26: 155527.391 ops/s
# Warmup Iteration  27: 155738.390 ops/s
# Warmup Iteration  28: 155456.728 ops/s
# Warmup Iteration  29: 155665.151 ops/s
# Warmup Iteration  30: 155410.610 ops/s
Iteration   1: 155619.380 ops/s
Iteration   2: 155924.714 ops/s
Iteration   3: 155135.447 ops/s
Iteration   4: 156442.091 ops/s
Iteration   5: 154646.255 ops/s
Iteration   6: 156478.542 ops/s
Iteration   7: 155099.945 ops/s
Iteration   8: 155112.704 ops/s
Iteration   9: 155369.420 ops/s
Iteration  10: 156011.505 ops/s
Iteration  11: 156033.365 ops/s
Iteration  12: 156143.708 ops/s
Iteration  13: 155964.624 ops/s
Iteration  14: 156372.131 ops/s
Iteration  15: 155690.988 ops/s
Iteration  16: 156457.614 ops/s
Iteration  17: 153263.250 ops/s
Iteration  18: 155036.638 ops/s
Iteration  19: 155271.155 ops/s
Iteration  20: 155996.074 ops/s
Iteration  21: 156069.705 ops/s
Iteration  22: 155584.552 ops/s
Iteration  23: 156005.974 ops/s
Iteration  24: 155598.231 ops/s
Iteration  25: 155192.261 ops/s
Iteration  26: 155995.324 ops/s
Iteration  27: 156192.404 ops/s
Iteration  28: 156320.642 ops/s
Iteration  29: 155867.961 ops/s
Iteration  30: 156136.889 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1045._Benchmark.benchmark_Cluster_1045":
  155701.116 ±(99.9%) 448.238 ops/s [Average]
  (min, avg, max) = (153263.250, 155701.116, 156478.542), stdev = 670.901
  CI (99.9%): [155252.879, 156149.354] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1045._Benchmark.benchmark_Cluster_1045  thrpt   30  155701.116 ± 448.238  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1046._Benchmark.benchmark_Cluster_1046$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1046._Benchmark.benchmark_Cluster_1046

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67788.944 ops/s
# Warmup Iteration   2: 92406.304 ops/s
# Warmup Iteration   3: 90230.352 ops/s
# Warmup Iteration   4: 125963.777 ops/s
# Warmup Iteration   5: 141600.334 ops/s
# Warmup Iteration   6: 140034.742 ops/s
# Warmup Iteration   7: 139421.253 ops/s
# Warmup Iteration   8: 139820.817 ops/s
# Warmup Iteration   9: 141596.214 ops/s
# Warmup Iteration  10: 140993.208 ops/s
# Warmup Iteration  11: 141263.752 ops/s
# Warmup Iteration  12: 139587.480 ops/s
# Warmup Iteration  13: 139689.742 ops/s
# Warmup Iteration  14: 140854.970 ops/s
# Warmup Iteration  15: 141506.759 ops/s
# Warmup Iteration  16: 102486.620 ops/s
# Warmup Iteration  17: 134264.698 ops/s
# Warmup Iteration  18: 146034.910 ops/s
# Warmup Iteration  19: 145846.332 ops/s
# Warmup Iteration  20: 146427.712 ops/s
# Warmup Iteration  21: 146202.788 ops/s
# Warmup Iteration  22: 145787.341 ops/s
# Warmup Iteration  23: 145953.294 ops/s
# Warmup Iteration  24: 145557.687 ops/s
# Warmup Iteration  25: 144906.034 ops/s
# Warmup Iteration  26: 145635.784 ops/s
# Warmup Iteration  27: 145715.725 ops/s
# Warmup Iteration  28: 145578.556 ops/s
# Warmup Iteration  29: 145241.645 ops/s
# Warmup Iteration  30: 145062.820 ops/s
Iteration   1: 144952.810 ops/s
Iteration   2: 144554.227 ops/s
Iteration   3: 145846.606 ops/s
Iteration   4: 145580.535 ops/s
Iteration   5: 145857.549 ops/s
Iteration   6: 145678.189 ops/s
Iteration   7: 145523.817 ops/s
Iteration   8: 145676.742 ops/s
Iteration   9: 145820.653 ops/s
Iteration  10: 145677.993 ops/s
Iteration  11: 145100.697 ops/s
Iteration  12: 145350.211 ops/s
Iteration  13: 145864.849 ops/s
Iteration  14: 146075.139 ops/s
Iteration  15: 146231.463 ops/s
Iteration  16: 145574.335 ops/s
Iteration  17: 145743.406 ops/s
Iteration  18: 145622.734 ops/s
Iteration  19: 145657.613 ops/s
Iteration  20: 145343.895 ops/s
Iteration  21: 145765.012 ops/s
Iteration  22: 145778.303 ops/s
Iteration  23: 144450.615 ops/s
Iteration  24: 145313.647 ops/s
Iteration  25: 143963.243 ops/s
Iteration  26: 144578.916 ops/s
Iteration  27: 146342.248 ops/s
Iteration  28: 145951.595 ops/s
Iteration  29: 146235.414 ops/s
Iteration  30: 145571.419 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1046._Benchmark.benchmark_Cluster_1046":
  145522.796 ±(99.9%) 369.989 ops/s [Average]
  (min, avg, max) = (143963.243, 145522.796, 146342.248), stdev = 553.783
  CI (99.9%): [145152.806, 145892.785] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1046._Benchmark.benchmark_Cluster_1046  thrpt   30  145522.796 ± 369.989  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1047._Benchmark.benchmark_Cluster_1047$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1047._Benchmark.benchmark_Cluster_1047

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 37791.484 ops/s
# Warmup Iteration   2: 80165.240 ops/s
# Warmup Iteration   3: 127694.742 ops/s
# Warmup Iteration   4: 163494.371 ops/s
# Warmup Iteration   5: 161818.578 ops/s
# Warmup Iteration   6: 163214.943 ops/s
# Warmup Iteration   7: 163193.974 ops/s
# Warmup Iteration   8: 163089.100 ops/s
# Warmup Iteration   9: 110602.327 ops/s
# Warmup Iteration  10: 163611.314 ops/s
# Warmup Iteration  11: 163588.995 ops/s
# Warmup Iteration  12: 163612.268 ops/s
# Warmup Iteration  13: 163233.575 ops/s
# Warmup Iteration  14: 163490.978 ops/s
# Warmup Iteration  15: 163644.637 ops/s
# Warmup Iteration  16: 163161.301 ops/s
# Warmup Iteration  17: 163420.083 ops/s
# Warmup Iteration  18: 163637.145 ops/s
# Warmup Iteration  19: 163344.095 ops/s
# Warmup Iteration  20: 163367.136 ops/s
# Warmup Iteration  21: 163312.760 ops/s
# Warmup Iteration  22: 163429.061 ops/s
# Warmup Iteration  23: 163855.554 ops/s
# Warmup Iteration  24: 163388.728 ops/s
# Warmup Iteration  25: 163407.120 ops/s
# Warmup Iteration  26: 163939.911 ops/s
# Warmup Iteration  27: 163396.929 ops/s
# Warmup Iteration  28: 163582.600 ops/s
# Warmup Iteration  29: 163522.531 ops/s
# Warmup Iteration  30: 163005.224 ops/s
Iteration   1: 163285.846 ops/s
Iteration   2: 163114.795 ops/s
Iteration   3: 163412.380 ops/s
Iteration   4: 164008.049 ops/s
Iteration   5: 163126.204 ops/s
Iteration   6: 163467.377 ops/s
Iteration   7: 163212.737 ops/s
Iteration   8: 163585.507 ops/s
Iteration   9: 163237.839 ops/s
Iteration  10: 163009.141 ops/s
Iteration  11: 163609.730 ops/s
Iteration  12: 163269.831 ops/s
Iteration  13: 163532.460 ops/s
Iteration  14: 163710.430 ops/s
Iteration  15: 163355.142 ops/s
Iteration  16: 163738.311 ops/s
Iteration  17: 163521.489 ops/s
Iteration  18: 163039.695 ops/s
Iteration  19: 163397.215 ops/s
Iteration  20: 163195.435 ops/s
Iteration  21: 162878.816 ops/s
Iteration  22: 163099.297 ops/s
Iteration  23: 162941.588 ops/s
Iteration  24: 163220.963 ops/s
Iteration  25: 162775.991 ops/s
Iteration  26: 163356.131 ops/s
Iteration  27: 163616.999 ops/s
Iteration  28: 163594.746 ops/s
Iteration  29: 163830.813 ops/s
Iteration  30: 163877.032 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1047._Benchmark.benchmark_Cluster_1047":
  163367.400 ±(99.9%) 205.061 ops/s [Average]
  (min, avg, max) = (162775.991, 163367.400, 164008.049), stdev = 306.926
  CI (99.9%): [163162.339, 163572.461] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1047._Benchmark.benchmark_Cluster_1047  thrpt   30  163367.400 ± 205.061  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1048._Benchmark.benchmark_Cluster_1048$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1048._Benchmark.benchmark_Cluster_1048

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83858.496 ops/s
# Warmup Iteration   2: 111565.095 ops/s
# Warmup Iteration   3: 213910.193 ops/s
# Warmup Iteration   4: 216174.889 ops/s
# Warmup Iteration   5: 218180.005 ops/s
# Warmup Iteration   6: 218305.463 ops/s
# Warmup Iteration   7: 182457.940 ops/s
# Warmup Iteration   8: 183383.788 ops/s
# Warmup Iteration   9: 218593.796 ops/s
# Warmup Iteration  10: 218130.506 ops/s
# Warmup Iteration  11: 218045.325 ops/s
# Warmup Iteration  12: 218563.964 ops/s
# Warmup Iteration  13: 219374.401 ops/s
# Warmup Iteration  14: 218263.219 ops/s
# Warmup Iteration  15: 217278.867 ops/s
# Warmup Iteration  16: 217498.093 ops/s
# Warmup Iteration  17: 218991.851 ops/s
# Warmup Iteration  18: 219424.043 ops/s
# Warmup Iteration  19: 216878.622 ops/s
# Warmup Iteration  20: 218068.938 ops/s
# Warmup Iteration  21: 217569.505 ops/s
# Warmup Iteration  22: 218279.639 ops/s
# Warmup Iteration  23: 218893.906 ops/s
# Warmup Iteration  24: 218487.769 ops/s
# Warmup Iteration  25: 218056.453 ops/s
# Warmup Iteration  26: 218240.783 ops/s
# Warmup Iteration  27: 218265.432 ops/s
# Warmup Iteration  28: 217945.524 ops/s
# Warmup Iteration  29: 218476.911 ops/s
# Warmup Iteration  30: 218398.607 ops/s
Iteration   1: 219424.015 ops/s
Iteration   2: 218254.723 ops/s
Iteration   3: 218822.324 ops/s
Iteration   4: 218919.498 ops/s
Iteration   5: 218144.406 ops/s
Iteration   6: 217560.325 ops/s
Iteration   7: 218924.255 ops/s
Iteration   8: 217812.575 ops/s
Iteration   9: 218066.054 ops/s
Iteration  10: 218847.001 ops/s
Iteration  11: 217774.257 ops/s
Iteration  12: 219213.130 ops/s
Iteration  13: 218135.024 ops/s
Iteration  14: 219080.062 ops/s
Iteration  15: 219518.185 ops/s
Iteration  16: 218805.335 ops/s
Iteration  17: 218507.079 ops/s
Iteration  18: 219492.385 ops/s
Iteration  19: 218771.845 ops/s
Iteration  20: 218584.259 ops/s
Iteration  21: 218503.352 ops/s
Iteration  22: 218295.188 ops/s
Iteration  23: 218474.390 ops/s
Iteration  24: 218723.133 ops/s
Iteration  25: 218314.839 ops/s
Iteration  26: 217908.336 ops/s
Iteration  27: 218741.378 ops/s
Iteration  28: 217038.757 ops/s
Iteration  29: 217759.311 ops/s
Iteration  30: 218694.254 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1048._Benchmark.benchmark_Cluster_1048":
  218503.656 ±(99.9%) 394.705 ops/s [Average]
  (min, avg, max) = (217038.757, 218503.656, 219518.185), stdev = 590.776
  CI (99.9%): [218108.951, 218898.361] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1048._Benchmark.benchmark_Cluster_1048  thrpt   30  218503.656 ± 394.705  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1049._Benchmark.benchmark_Cluster_1049$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1049._Benchmark.benchmark_Cluster_1049

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 99868.684 ops/s
# Warmup Iteration   2: 130988.658 ops/s
# Warmup Iteration   3: 228138.351 ops/s
# Warmup Iteration   4: 250768.001 ops/s
# Warmup Iteration   5: 249185.804 ops/s
# Warmup Iteration   6: 251566.103 ops/s
# Warmup Iteration   7: 251708.622 ops/s
# Warmup Iteration   8: 251153.362 ops/s
# Warmup Iteration   9: 197562.858 ops/s
# Warmup Iteration  10: 225967.214 ops/s
# Warmup Iteration  11: 250763.943 ops/s
# Warmup Iteration  12: 250540.134 ops/s
# Warmup Iteration  13: 250511.686 ops/s
# Warmup Iteration  14: 249807.583 ops/s
# Warmup Iteration  15: 250815.097 ops/s
# Warmup Iteration  16: 251316.297 ops/s
# Warmup Iteration  17: 251521.512 ops/s
# Warmup Iteration  18: 251515.314 ops/s
# Warmup Iteration  19: 250872.781 ops/s
# Warmup Iteration  20: 251036.020 ops/s
# Warmup Iteration  21: 251080.515 ops/s
# Warmup Iteration  22: 251673.371 ops/s
# Warmup Iteration  23: 250143.792 ops/s
# Warmup Iteration  24: 250116.039 ops/s
# Warmup Iteration  25: 250218.092 ops/s
# Warmup Iteration  26: 251163.343 ops/s
# Warmup Iteration  27: 252373.757 ops/s
# Warmup Iteration  28: 252467.861 ops/s
# Warmup Iteration  29: 251527.420 ops/s
# Warmup Iteration  30: 250759.777 ops/s
Iteration   1: 252139.756 ops/s
Iteration   2: 251865.347 ops/s
Iteration   3: 252349.124 ops/s
Iteration   4: 252033.218 ops/s
Iteration   5: 251879.499 ops/s
Iteration   6: 252568.412 ops/s
Iteration   7: 251743.885 ops/s
Iteration   8: 252770.644 ops/s
Iteration   9: 252814.020 ops/s
Iteration  10: 252199.569 ops/s
Iteration  11: 252874.698 ops/s
Iteration  12: 252515.077 ops/s
Iteration  13: 251455.084 ops/s
Iteration  14: 252117.464 ops/s
Iteration  15: 252621.463 ops/s
Iteration  16: 252426.316 ops/s
Iteration  17: 252633.872 ops/s
Iteration  18: 252518.429 ops/s
Iteration  19: 252082.333 ops/s
Iteration  20: 252485.798 ops/s
Iteration  21: 252354.763 ops/s
Iteration  22: 252348.193 ops/s
Iteration  23: 252195.642 ops/s
Iteration  24: 251698.646 ops/s
Iteration  25: 251427.398 ops/s
Iteration  26: 250043.988 ops/s
Iteration  27: 250041.236 ops/s
Iteration  28: 251013.798 ops/s
Iteration  29: 250449.161 ops/s
Iteration  30: 250869.010 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1049._Benchmark.benchmark_Cluster_1049":
  251951.195 ±(99.9%) 520.998 ops/s [Average]
  (min, avg, max) = (250041.236, 251951.195, 252874.698), stdev = 779.806
  CI (99.9%): [251430.196, 252472.193] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1049._Benchmark.benchmark_Cluster_1049  thrpt   30  251951.195 ± 520.998  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_105._Benchmark.benchmark_Cluster_105$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_105._Benchmark.benchmark_Cluster_105

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 125022.009 ops/s
# Warmup Iteration   2: 141483.973 ops/s
# Warmup Iteration   3: 142437.816 ops/s
# Warmup Iteration   4: 142784.374 ops/s
# Warmup Iteration   5: 162781.706 ops/s
# Warmup Iteration   6: 179676.634 ops/s
# Warmup Iteration   7: 179667.903 ops/s
# Warmup Iteration   8: 179484.615 ops/s
# Warmup Iteration   9: 179495.288 ops/s
# Warmup Iteration  10: 179284.545 ops/s
# Warmup Iteration  11: 178729.227 ops/s
# Warmup Iteration  12: 177540.994 ops/s
# Warmup Iteration  13: 179375.482 ops/s
# Warmup Iteration  14: 179264.156 ops/s
# Warmup Iteration  15: 179125.638 ops/s
# Warmup Iteration  16: 180241.829 ops/s
# Warmup Iteration  17: 190456.217 ops/s
# Warmup Iteration  18: 189124.160 ops/s
# Warmup Iteration  19: 191184.258 ops/s
# Warmup Iteration  20: 190654.740 ops/s
# Warmup Iteration  21: 190141.363 ops/s
# Warmup Iteration  22: 190026.751 ops/s
# Warmup Iteration  23: 190716.833 ops/s
# Warmup Iteration  24: 189961.450 ops/s
# Warmup Iteration  25: 167635.980 ops/s
# Warmup Iteration  26: 155523.810 ops/s
# Warmup Iteration  27: 189623.561 ops/s
# Warmup Iteration  28: 189709.387 ops/s
# Warmup Iteration  29: 189346.872 ops/s
# Warmup Iteration  30: 188858.157 ops/s
Iteration   1: 188713.473 ops/s
Iteration   2: 189466.564 ops/s
Iteration   3: 187876.391 ops/s
Iteration   4: 188677.103 ops/s
Iteration   5: 190200.254 ops/s
Iteration   6: 189417.502 ops/s
Iteration   7: 189666.025 ops/s
Iteration   8: 190295.104 ops/s
Iteration   9: 189603.198 ops/s
Iteration  10: 190106.659 ops/s
Iteration  11: 189916.571 ops/s
Iteration  12: 189980.054 ops/s
Iteration  13: 189902.656 ops/s
Iteration  14: 189781.518 ops/s
Iteration  15: 190758.826 ops/s
Iteration  16: 190085.783 ops/s
Iteration  17: 189779.714 ops/s
Iteration  18: 189104.133 ops/s
Iteration  19: 187835.202 ops/s
Iteration  20: 188958.308 ops/s
Iteration  21: 190387.334 ops/s
Iteration  22: 191063.591 ops/s
Iteration  23: 190107.490 ops/s
Iteration  24: 190290.086 ops/s
Iteration  25: 190153.158 ops/s
Iteration  26: 187734.874 ops/s
Iteration  27: 189305.808 ops/s
Iteration  28: 187369.667 ops/s
Iteration  29: 188772.380 ops/s
Iteration  30: 190079.833 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_105._Benchmark.benchmark_Cluster_105":
  189512.975 ±(99.9%) 614.670 ops/s [Average]
  (min, avg, max) = (187369.667, 189512.975, 191063.591), stdev = 920.009
  CI (99.9%): [188898.306, 190127.645] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_105._Benchmark.benchmark_Cluster_105  thrpt   30  189512.975 ± 614.670  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1050._Benchmark.benchmark_Cluster_1050$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1050._Benchmark.benchmark_Cluster_1050

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56747.046 ops/s
# Warmup Iteration   2: 75762.793 ops/s
# Warmup Iteration   3: 145163.177 ops/s
# Warmup Iteration   4: 154302.130 ops/s
# Warmup Iteration   5: 155795.184 ops/s
# Warmup Iteration   6: 155829.524 ops/s
# Warmup Iteration   7: 155913.566 ops/s
# Warmup Iteration   8: 132005.763 ops/s
# Warmup Iteration   9: 130750.564 ops/s
# Warmup Iteration  10: 156416.146 ops/s
# Warmup Iteration  11: 156648.126 ops/s
# Warmup Iteration  12: 156525.867 ops/s
# Warmup Iteration  13: 156453.655 ops/s
# Warmup Iteration  14: 156207.693 ops/s
# Warmup Iteration  15: 156075.479 ops/s
# Warmup Iteration  16: 155671.809 ops/s
# Warmup Iteration  17: 155132.333 ops/s
# Warmup Iteration  18: 155495.726 ops/s
# Warmup Iteration  19: 155166.215 ops/s
# Warmup Iteration  20: 156607.868 ops/s
# Warmup Iteration  21: 156608.781 ops/s
# Warmup Iteration  22: 156360.157 ops/s
# Warmup Iteration  23: 155945.459 ops/s
# Warmup Iteration  24: 155816.827 ops/s
# Warmup Iteration  25: 156056.108 ops/s
# Warmup Iteration  26: 155759.633 ops/s
# Warmup Iteration  27: 156343.249 ops/s
# Warmup Iteration  28: 156356.880 ops/s
# Warmup Iteration  29: 156448.098 ops/s
# Warmup Iteration  30: 156482.146 ops/s
Iteration   1: 156586.365 ops/s
Iteration   2: 155964.151 ops/s
Iteration   3: 156595.566 ops/s
Iteration   4: 156139.005 ops/s
Iteration   5: 156348.289 ops/s
Iteration   6: 156698.520 ops/s
Iteration   7: 155991.565 ops/s
Iteration   8: 157027.525 ops/s
Iteration   9: 155925.245 ops/s
Iteration  10: 156601.753 ops/s
Iteration  11: 156654.228 ops/s
Iteration  12: 156004.879 ops/s
Iteration  13: 156791.627 ops/s
Iteration  14: 156051.362 ops/s
Iteration  15: 155892.631 ops/s
Iteration  16: 156622.888 ops/s
Iteration  17: 155186.720 ops/s
Iteration  18: 156759.525 ops/s
Iteration  19: 156339.670 ops/s
Iteration  20: 156540.974 ops/s
Iteration  21: 156737.780 ops/s
Iteration  22: 156099.843 ops/s
Iteration  23: 156700.927 ops/s
Iteration  24: 155590.496 ops/s
Iteration  25: 156484.903 ops/s
Iteration  26: 156935.448 ops/s
Iteration  27: 156432.621 ops/s
Iteration  28: 155633.430 ops/s
Iteration  29: 155721.312 ops/s
Iteration  30: 156888.593 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1050._Benchmark.benchmark_Cluster_1050":
  156331.595 ±(99.9%) 305.633 ops/s [Average]
  (min, avg, max) = (155186.720, 156331.595, 157027.525), stdev = 457.458
  CI (99.9%): [156025.961, 156637.228] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1050._Benchmark.benchmark_Cluster_1050  thrpt   30  156331.595 ± 305.633  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1051._Benchmark.benchmark_Cluster_1051$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1051._Benchmark.benchmark_Cluster_1051

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69038.842 ops/s
# Warmup Iteration   2: 86939.844 ops/s
# Warmup Iteration   3: 135919.768 ops/s
# Warmup Iteration   4: 163449.227 ops/s
# Warmup Iteration   5: 161714.043 ops/s
# Warmup Iteration   6: 163816.394 ops/s
# Warmup Iteration   7: 163775.711 ops/s
# Warmup Iteration   8: 163420.693 ops/s
# Warmup Iteration   9: 163114.106 ops/s
# Warmup Iteration  10: 110455.743 ops/s
# Warmup Iteration  11: 160906.035 ops/s
# Warmup Iteration  12: 162505.016 ops/s
# Warmup Iteration  13: 162414.202 ops/s
# Warmup Iteration  14: 163122.383 ops/s
# Warmup Iteration  15: 163205.148 ops/s
# Warmup Iteration  16: 162871.881 ops/s
# Warmup Iteration  17: 163919.038 ops/s
# Warmup Iteration  18: 163470.926 ops/s
# Warmup Iteration  19: 163442.993 ops/s
# Warmup Iteration  20: 163684.187 ops/s
# Warmup Iteration  21: 163683.204 ops/s
# Warmup Iteration  22: 163598.575 ops/s
# Warmup Iteration  23: 163882.339 ops/s
# Warmup Iteration  24: 164049.955 ops/s
# Warmup Iteration  25: 163875.382 ops/s
# Warmup Iteration  26: 163761.122 ops/s
# Warmup Iteration  27: 164078.240 ops/s
# Warmup Iteration  28: 163895.690 ops/s
# Warmup Iteration  29: 163548.238 ops/s
# Warmup Iteration  30: 163816.405 ops/s
Iteration   1: 163766.474 ops/s
Iteration   2: 164067.094 ops/s
Iteration   3: 163957.031 ops/s
Iteration   4: 163097.546 ops/s
Iteration   5: 164075.918 ops/s
Iteration   6: 164064.995 ops/s
Iteration   7: 163985.675 ops/s
Iteration   8: 164007.931 ops/s
Iteration   9: 163907.926 ops/s
Iteration  10: 163538.365 ops/s
Iteration  11: 163572.991 ops/s
Iteration  12: 163854.931 ops/s
Iteration  13: 163134.288 ops/s
Iteration  14: 163081.503 ops/s
Iteration  15: 163586.941 ops/s
Iteration  16: 163488.404 ops/s
Iteration  17: 163881.484 ops/s
Iteration  18: 164081.453 ops/s
Iteration  19: 164019.171 ops/s
Iteration  20: 163741.062 ops/s
Iteration  21: 163316.186 ops/s
Iteration  22: 163573.888 ops/s
Iteration  23: 161556.325 ops/s
Iteration  24: 163043.926 ops/s
Iteration  25: 163637.854 ops/s
Iteration  26: 163879.114 ops/s
Iteration  27: 163843.791 ops/s
Iteration  28: 163906.461 ops/s
Iteration  29: 163790.712 ops/s
Iteration  30: 164096.260 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1051._Benchmark.benchmark_Cluster_1051":
  163651.857 ±(99.9%) 341.005 ops/s [Average]
  (min, avg, max) = (161556.325, 163651.857, 164096.260), stdev = 510.400
  CI (99.9%): [163310.852, 163992.861] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1051._Benchmark.benchmark_Cluster_1051  thrpt   30  163651.857 ± 341.005  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1052._Benchmark.benchmark_Cluster_1052$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1052._Benchmark.benchmark_Cluster_1052

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 87442.053 ops/s
# Warmup Iteration   2: 104514.654 ops/s
# Warmup Iteration   3: 186663.436 ops/s
# Warmup Iteration   4: 200057.339 ops/s
# Warmup Iteration   5: 198068.577 ops/s
# Warmup Iteration   6: 200367.798 ops/s
# Warmup Iteration   7: 200623.162 ops/s
# Warmup Iteration   8: 200447.948 ops/s
# Warmup Iteration   9: 139900.773 ops/s
# Warmup Iteration  10: 198769.957 ops/s
# Warmup Iteration  11: 200235.053 ops/s
# Warmup Iteration  12: 200221.176 ops/s
# Warmup Iteration  13: 200531.723 ops/s
# Warmup Iteration  14: 200082.789 ops/s
# Warmup Iteration  15: 199622.236 ops/s
# Warmup Iteration  16: 199828.388 ops/s
# Warmup Iteration  17: 199273.226 ops/s
# Warmup Iteration  18: 199494.939 ops/s
# Warmup Iteration  19: 200150.034 ops/s
# Warmup Iteration  20: 200732.641 ops/s
# Warmup Iteration  21: 200386.529 ops/s
# Warmup Iteration  22: 200383.792 ops/s
# Warmup Iteration  23: 200074.502 ops/s
# Warmup Iteration  24: 200198.864 ops/s
# Warmup Iteration  25: 199360.535 ops/s
# Warmup Iteration  26: 199782.112 ops/s
# Warmup Iteration  27: 198908.735 ops/s
# Warmup Iteration  28: 198790.965 ops/s
# Warmup Iteration  29: 200350.162 ops/s
# Warmup Iteration  30: 199573.995 ops/s
Iteration   1: 200052.644 ops/s
Iteration   2: 198039.886 ops/s
Iteration   3: 197564.073 ops/s
Iteration   4: 200554.781 ops/s
Iteration   5: 199298.351 ops/s
Iteration   6: 200402.312 ops/s
Iteration   7: 200439.372 ops/s
Iteration   8: 200401.431 ops/s
Iteration   9: 200390.507 ops/s
Iteration  10: 200059.381 ops/s
Iteration  11: 200668.544 ops/s
Iteration  12: 199327.711 ops/s
Iteration  13: 199960.210 ops/s
Iteration  14: 200216.519 ops/s
Iteration  15: 200613.579 ops/s
Iteration  16: 200354.187 ops/s
Iteration  17: 199636.150 ops/s
Iteration  18: 200096.642 ops/s
Iteration  19: 200475.597 ops/s
Iteration  20: 200249.604 ops/s
Iteration  21: 199643.815 ops/s
Iteration  22: 199985.804 ops/s
Iteration  23: 199793.466 ops/s
Iteration  24: 200108.524 ops/s
Iteration  25: 200095.723 ops/s
Iteration  26: 200340.545 ops/s
Iteration  27: 200421.393 ops/s
Iteration  28: 200312.899 ops/s
Iteration  29: 199817.856 ops/s
Iteration  30: 200584.166 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1052._Benchmark.benchmark_Cluster_1052":
  199996.856 ±(99.9%) 465.642 ops/s [Average]
  (min, avg, max) = (197564.073, 199996.856, 200668.544), stdev = 696.952
  CI (99.9%): [199531.214, 200462.498] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1052._Benchmark.benchmark_Cluster_1052  thrpt   30  199996.856 ± 465.642  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1053._Benchmark.benchmark_Cluster_1053$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1053._Benchmark.benchmark_Cluster_1053

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66296.982 ops/s
# Warmup Iteration   2: 84841.734 ops/s
# Warmup Iteration   3: 169207.321 ops/s
# Warmup Iteration   4: 166783.307 ops/s
# Warmup Iteration   5: 167890.357 ops/s
# Warmup Iteration   6: 167538.775 ops/s
# Warmup Iteration   7: 135491.410 ops/s
# Warmup Iteration   8: 148783.122 ops/s
# Warmup Iteration   9: 169682.536 ops/s
# Warmup Iteration  10: 169622.153 ops/s
# Warmup Iteration  11: 169374.956 ops/s
# Warmup Iteration  12: 169556.282 ops/s
# Warmup Iteration  13: 169250.025 ops/s
# Warmup Iteration  14: 168833.278 ops/s
# Warmup Iteration  15: 168792.353 ops/s
# Warmup Iteration  16: 169209.159 ops/s
# Warmup Iteration  17: 174690.695 ops/s
# Warmup Iteration  18: 175482.191 ops/s
# Warmup Iteration  19: 175986.029 ops/s
# Warmup Iteration  20: 176200.350 ops/s
# Warmup Iteration  21: 175327.655 ops/s
# Warmup Iteration  22: 175691.615 ops/s
# Warmup Iteration  23: 175884.503 ops/s
# Warmup Iteration  24: 176045.585 ops/s
# Warmup Iteration  25: 175908.197 ops/s
# Warmup Iteration  26: 175531.255 ops/s
# Warmup Iteration  27: 174088.838 ops/s
# Warmup Iteration  28: 175042.746 ops/s
# Warmup Iteration  29: 173808.729 ops/s
# Warmup Iteration  30: 174084.638 ops/s
Iteration   1: 173832.238 ops/s
Iteration   2: 176445.438 ops/s
Iteration   3: 176468.929 ops/s
Iteration   4: 176099.227 ops/s
Iteration   5: 174883.472 ops/s
Iteration   6: 175170.936 ops/s
Iteration   7: 175473.698 ops/s
Iteration   8: 174155.632 ops/s
Iteration   9: 175701.807 ops/s
Iteration  10: 175885.995 ops/s
Iteration  11: 172602.295 ops/s
Iteration  12: 175515.841 ops/s
Iteration  13: 173327.513 ops/s
Iteration  14: 174167.701 ops/s
Iteration  15: 175544.791 ops/s
Iteration  16: 174314.677 ops/s
Iteration  17: 176224.453 ops/s
Iteration  18: 174580.430 ops/s
Iteration  19: 175865.732 ops/s
Iteration  20: 175271.583 ops/s
Iteration  21: 171985.119 ops/s
Iteration  22: 176289.836 ops/s
Iteration  23: 173231.890 ops/s
Iteration  24: 175612.516 ops/s
Iteration  25: 175742.250 ops/s
Iteration  26: 175479.243 ops/s
Iteration  27: 175590.152 ops/s
Iteration  28: 175942.271 ops/s
Iteration  29: 176227.405 ops/s
Iteration  30: 176235.123 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1053._Benchmark.benchmark_Cluster_1053":
  175128.940 ±(99.9%) 791.022 ops/s [Average]
  (min, avg, max) = (171985.119, 175128.940, 176468.929), stdev = 1183.964
  CI (99.9%): [174337.918, 175919.961] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1053._Benchmark.benchmark_Cluster_1053  thrpt   30  175128.940 ± 791.022  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1054._Benchmark.benchmark_Cluster_1054$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1054._Benchmark.benchmark_Cluster_1054

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51145.263 ops/s
# Warmup Iteration   2: 84572.862 ops/s
# Warmup Iteration   3: 145223.844 ops/s
# Warmup Iteration   4: 146851.594 ops/s
# Warmup Iteration   5: 147036.966 ops/s
# Warmup Iteration   6: 102338.571 ops/s
# Warmup Iteration   7: 144079.155 ops/s
# Warmup Iteration   8: 146715.429 ops/s
# Warmup Iteration   9: 146906.075 ops/s
# Warmup Iteration  10: 146605.930 ops/s
# Warmup Iteration  11: 146438.514 ops/s
# Warmup Iteration  12: 146568.117 ops/s
# Warmup Iteration  13: 145430.587 ops/s
# Warmup Iteration  14: 144699.121 ops/s
# Warmup Iteration  15: 145572.225 ops/s
# Warmup Iteration  16: 146580.550 ops/s
# Warmup Iteration  17: 146805.620 ops/s
# Warmup Iteration  18: 146585.280 ops/s
# Warmup Iteration  19: 145405.821 ops/s
# Warmup Iteration  20: 147180.032 ops/s
# Warmup Iteration  21: 146966.141 ops/s
# Warmup Iteration  22: 146660.055 ops/s
# Warmup Iteration  23: 147060.522 ops/s
# Warmup Iteration  24: 146914.421 ops/s
# Warmup Iteration  25: 147009.831 ops/s
# Warmup Iteration  26: 146497.940 ops/s
# Warmup Iteration  27: 145875.009 ops/s
# Warmup Iteration  28: 146087.231 ops/s
# Warmup Iteration  29: 146878.977 ops/s
# Warmup Iteration  30: 146807.363 ops/s
Iteration   1: 147223.282 ops/s
Iteration   2: 147371.726 ops/s
Iteration   3: 147129.675 ops/s
Iteration   4: 146314.030 ops/s
Iteration   5: 147210.529 ops/s
Iteration   6: 147558.648 ops/s
Iteration   7: 146370.475 ops/s
Iteration   8: 146357.446 ops/s
Iteration   9: 144980.382 ops/s
Iteration  10: 145195.602 ops/s
Iteration  11: 147144.399 ops/s
Iteration  12: 146510.487 ops/s
Iteration  13: 146847.374 ops/s
Iteration  14: 146634.483 ops/s
Iteration  15: 145638.569 ops/s
Iteration  16: 146907.496 ops/s
Iteration  17: 146696.589 ops/s
Iteration  18: 146240.908 ops/s
Iteration  19: 145681.943 ops/s
Iteration  20: 145995.694 ops/s
Iteration  21: 146017.124 ops/s
Iteration  22: 143890.196 ops/s
Iteration  23: 147022.771 ops/s
Iteration  24: 146917.771 ops/s
Iteration  25: 146698.800 ops/s
Iteration  26: 146581.479 ops/s
Iteration  27: 146483.952 ops/s
Iteration  28: 146406.932 ops/s
Iteration  29: 145930.546 ops/s
Iteration  30: 146221.341 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1054._Benchmark.benchmark_Cluster_1054":
  146406.022 ±(99.9%) 519.939 ops/s [Average]
  (min, avg, max) = (143890.196, 146406.022, 147558.648), stdev = 778.220
  CI (99.9%): [145886.083, 146925.960] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1054._Benchmark.benchmark_Cluster_1054  thrpt   30  146406.022 ± 519.939  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1055._Benchmark.benchmark_Cluster_1055$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1055._Benchmark.benchmark_Cluster_1055

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68618.943 ops/s
# Warmup Iteration   2: 129958.563 ops/s
# Warmup Iteration   3: 207261.657 ops/s
# Warmup Iteration   4: 209045.537 ops/s
# Warmup Iteration   5: 209603.047 ops/s
# Warmup Iteration   6: 145398.931 ops/s
# Warmup Iteration   7: 211213.734 ops/s
# Warmup Iteration   8: 211129.102 ops/s
# Warmup Iteration   9: 210331.236 ops/s
# Warmup Iteration  10: 209258.533 ops/s
# Warmup Iteration  11: 210053.591 ops/s
# Warmup Iteration  12: 209293.713 ops/s
# Warmup Iteration  13: 210349.037 ops/s
# Warmup Iteration  14: 210493.985 ops/s
# Warmup Iteration  15: 211037.349 ops/s
# Warmup Iteration  16: 210695.567 ops/s
# Warmup Iteration  17: 210584.883 ops/s
# Warmup Iteration  18: 210898.991 ops/s
# Warmup Iteration  19: 211218.320 ops/s
# Warmup Iteration  20: 209795.051 ops/s
# Warmup Iteration  21: 210205.649 ops/s
# Warmup Iteration  22: 210944.773 ops/s
# Warmup Iteration  23: 210596.038 ops/s
# Warmup Iteration  24: 210271.339 ops/s
# Warmup Iteration  25: 209704.852 ops/s
# Warmup Iteration  26: 209839.776 ops/s
# Warmup Iteration  27: 209937.953 ops/s
# Warmup Iteration  28: 209960.843 ops/s
# Warmup Iteration  29: 210808.293 ops/s
# Warmup Iteration  30: 209890.272 ops/s
Iteration   1: 210417.723 ops/s
Iteration   2: 209121.761 ops/s
Iteration   3: 210447.675 ops/s
Iteration   4: 210206.802 ops/s
Iteration   5: 210677.436 ops/s
Iteration   6: 210699.760 ops/s
Iteration   7: 209082.002 ops/s
Iteration   8: 210878.916 ops/s
Iteration   9: 210941.943 ops/s
Iteration  10: 211187.260 ops/s
Iteration  11: 210085.178 ops/s
Iteration  12: 210425.335 ops/s
Iteration  13: 210673.829 ops/s
Iteration  14: 208209.180 ops/s
Iteration  15: 211098.741 ops/s
Iteration  16: 207888.210 ops/s
Iteration  17: 210847.329 ops/s
Iteration  18: 209928.779 ops/s
Iteration  19: 208840.609 ops/s
Iteration  20: 210951.094 ops/s
Iteration  21: 211215.050 ops/s
Iteration  22: 210290.810 ops/s
Iteration  23: 210414.188 ops/s
Iteration  24: 210161.045 ops/s
Iteration  25: 211250.838 ops/s
Iteration  26: 209320.179 ops/s
Iteration  27: 210793.438 ops/s
Iteration  28: 210582.346 ops/s
Iteration  29: 211146.219 ops/s
Iteration  30: 211444.048 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1055._Benchmark.benchmark_Cluster_1055":
  210307.591 ±(99.9%) 605.919 ops/s [Average]
  (min, avg, max) = (207888.210, 210307.591, 211444.048), stdev = 906.911
  CI (99.9%): [209701.672, 210913.509] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1055._Benchmark.benchmark_Cluster_1055  thrpt   30  210307.591 ± 605.919  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1056._Benchmark.benchmark_Cluster_1056$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1056._Benchmark.benchmark_Cluster_1056

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71730.195 ops/s
# Warmup Iteration   2: 91416.205 ops/s
# Warmup Iteration   3: 191603.529 ops/s
# Warmup Iteration   4: 189814.533 ops/s
# Warmup Iteration   5: 191894.572 ops/s
# Warmup Iteration   6: 191133.717 ops/s
# Warmup Iteration   7: 173470.060 ops/s
# Warmup Iteration   8: 150664.336 ops/s
# Warmup Iteration   9: 191985.860 ops/s
# Warmup Iteration  10: 191542.482 ops/s
# Warmup Iteration  11: 191967.417 ops/s
# Warmup Iteration  12: 190870.870 ops/s
# Warmup Iteration  13: 191880.140 ops/s
# Warmup Iteration  14: 191790.446 ops/s
# Warmup Iteration  15: 192115.564 ops/s
# Warmup Iteration  16: 192127.997 ops/s
# Warmup Iteration  17: 191519.536 ops/s
# Warmup Iteration  18: 191889.503 ops/s
# Warmup Iteration  19: 190114.815 ops/s
# Warmup Iteration  20: 191585.872 ops/s
# Warmup Iteration  21: 190617.714 ops/s
# Warmup Iteration  22: 190506.314 ops/s
# Warmup Iteration  23: 190482.372 ops/s
# Warmup Iteration  24: 190901.496 ops/s
# Warmup Iteration  25: 191019.814 ops/s
# Warmup Iteration  26: 192268.924 ops/s
# Warmup Iteration  27: 191586.747 ops/s
# Warmup Iteration  28: 191258.425 ops/s
# Warmup Iteration  29: 191412.172 ops/s
# Warmup Iteration  30: 191836.065 ops/s
Iteration   1: 191449.703 ops/s
Iteration   2: 191763.322 ops/s
Iteration   3: 191202.594 ops/s
Iteration   4: 190242.318 ops/s
Iteration   5: 191473.039 ops/s
Iteration   6: 191856.179 ops/s
Iteration   7: 192040.825 ops/s
Iteration   8: 192061.205 ops/s
Iteration   9: 192297.991 ops/s
Iteration  10: 191602.762 ops/s
Iteration  11: 191710.994 ops/s
Iteration  12: 190829.194 ops/s
Iteration  13: 192107.446 ops/s
Iteration  14: 191960.314 ops/s
Iteration  15: 191994.631 ops/s
Iteration  16: 192348.065 ops/s
Iteration  17: 192066.770 ops/s
Iteration  18: 191971.388 ops/s
Iteration  19: 191750.640 ops/s
Iteration  20: 192076.520 ops/s
Iteration  21: 191810.518 ops/s
Iteration  22: 191577.161 ops/s
Iteration  23: 190019.243 ops/s
Iteration  24: 191141.945 ops/s
Iteration  25: 189054.015 ops/s
Iteration  26: 190303.885 ops/s
Iteration  27: 190871.107 ops/s
Iteration  28: 192419.434 ops/s
Iteration  29: 192226.375 ops/s
Iteration  30: 191951.276 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1056._Benchmark.benchmark_Cluster_1056":
  191539.362 ±(99.9%) 524.384 ops/s [Average]
  (min, avg, max) = (189054.015, 191539.362, 192419.434), stdev = 784.873
  CI (99.9%): [191014.978, 192063.746] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1056._Benchmark.benchmark_Cluster_1056  thrpt   30  191539.362 ± 524.384  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1057._Benchmark.benchmark_Cluster_1057$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1057._Benchmark.benchmark_Cluster_1057

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 99244.952 ops/s
# Warmup Iteration   2: 120225.474 ops/s
# Warmup Iteration   3: 240563.120 ops/s
# Warmup Iteration   4: 239220.252 ops/s
# Warmup Iteration   5: 244806.977 ops/s
# Warmup Iteration   6: 244903.522 ops/s
# Warmup Iteration   7: 244832.681 ops/s
# Warmup Iteration   8: 197669.077 ops/s
# Warmup Iteration   9: 212395.467 ops/s
# Warmup Iteration  10: 245201.066 ops/s
# Warmup Iteration  11: 245531.685 ops/s
# Warmup Iteration  12: 245687.556 ops/s
# Warmup Iteration  13: 245536.743 ops/s
# Warmup Iteration  14: 245447.105 ops/s
# Warmup Iteration  15: 245352.614 ops/s
# Warmup Iteration  16: 243600.347 ops/s
# Warmup Iteration  17: 245192.637 ops/s
# Warmup Iteration  18: 245722.816 ops/s
# Warmup Iteration  19: 245482.615 ops/s
# Warmup Iteration  20: 243500.920 ops/s
# Warmup Iteration  21: 243512.236 ops/s
# Warmup Iteration  22: 243645.547 ops/s
# Warmup Iteration  23: 242943.701 ops/s
# Warmup Iteration  24: 243645.109 ops/s
# Warmup Iteration  25: 245139.542 ops/s
# Warmup Iteration  26: 245236.481 ops/s
# Warmup Iteration  27: 245139.883 ops/s
# Warmup Iteration  28: 245427.523 ops/s
# Warmup Iteration  29: 245201.926 ops/s
# Warmup Iteration  30: 244714.260 ops/s
Iteration   1: 242545.038 ops/s
Iteration   2: 242994.469 ops/s
Iteration   3: 243164.667 ops/s
Iteration   4: 244141.880 ops/s
Iteration   5: 242018.285 ops/s
Iteration   6: 243020.929 ops/s
Iteration   7: 243207.516 ops/s
Iteration   8: 239192.277 ops/s
Iteration   9: 244351.613 ops/s
Iteration  10: 242218.553 ops/s
Iteration  11: 243198.091 ops/s
Iteration  12: 243813.121 ops/s
Iteration  13: 243680.314 ops/s
Iteration  14: 245077.726 ops/s
Iteration  15: 242699.565 ops/s
Iteration  16: 242463.348 ops/s
Iteration  17: 242917.261 ops/s
Iteration  18: 243107.819 ops/s
Iteration  19: 245489.188 ops/s
Iteration  20: 245698.125 ops/s
Iteration  21: 245423.716 ops/s
Iteration  22: 242311.449 ops/s
Iteration  23: 240914.823 ops/s
Iteration  24: 241856.335 ops/s
Iteration  25: 244347.816 ops/s
Iteration  26: 242561.670 ops/s
Iteration  27: 243508.927 ops/s
Iteration  28: 244826.701 ops/s
Iteration  29: 245430.832 ops/s
Iteration  30: 245143.397 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1057._Benchmark.benchmark_Cluster_1057":
  243377.515 ±(99.9%) 982.164 ops/s [Average]
  (min, avg, max) = (239192.277, 243377.515, 245698.125), stdev = 1470.057
  CI (99.9%): [242395.351, 244359.679] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1057._Benchmark.benchmark_Cluster_1057  thrpt   30  243377.515 ± 982.164  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1058._Benchmark.benchmark_Cluster_1058$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1058._Benchmark.benchmark_Cluster_1058

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 85327.942 ops/s
# Warmup Iteration   2: 99513.002 ops/s
# Warmup Iteration   3: 100325.226 ops/s
# Warmup Iteration   4: 132497.514 ops/s
# Warmup Iteration   5: 145482.643 ops/s
# Warmup Iteration   6: 145721.376 ops/s
# Warmup Iteration   7: 146696.936 ops/s
# Warmup Iteration   8: 143945.486 ops/s
# Warmup Iteration   9: 145671.384 ops/s
# Warmup Iteration  10: 146066.874 ops/s
# Warmup Iteration  11: 146361.870 ops/s
# Warmup Iteration  12: 146393.700 ops/s
# Warmup Iteration  13: 146119.718 ops/s
# Warmup Iteration  14: 145893.192 ops/s
# Warmup Iteration  15: 145299.488 ops/s
# Warmup Iteration  16: 145837.751 ops/s
# Warmup Iteration  17: 111670.720 ops/s
# Warmup Iteration  18: 143623.409 ops/s
# Warmup Iteration  19: 152760.500 ops/s
# Warmup Iteration  20: 152882.645 ops/s
# Warmup Iteration  21: 152769.403 ops/s
# Warmup Iteration  22: 152694.242 ops/s
# Warmup Iteration  23: 152968.478 ops/s
# Warmup Iteration  24: 152490.561 ops/s
# Warmup Iteration  25: 153523.238 ops/s
# Warmup Iteration  26: 152605.427 ops/s
# Warmup Iteration  27: 153399.793 ops/s
# Warmup Iteration  28: 152834.000 ops/s
# Warmup Iteration  29: 152160.730 ops/s
# Warmup Iteration  30: 153124.208 ops/s
Iteration   1: 153074.083 ops/s
Iteration   2: 153281.838 ops/s
Iteration   3: 153241.809 ops/s
Iteration   4: 152720.871 ops/s
Iteration   5: 152302.417 ops/s
Iteration   6: 152295.892 ops/s
Iteration   7: 152230.892 ops/s
Iteration   8: 151371.406 ops/s
Iteration   9: 152723.414 ops/s
Iteration  10: 152542.346 ops/s
Iteration  11: 152370.150 ops/s
Iteration  12: 152279.543 ops/s
Iteration  13: 151320.498 ops/s
Iteration  14: 152285.070 ops/s
Iteration  15: 151460.609 ops/s
Iteration  16: 151068.763 ops/s
Iteration  17: 152879.727 ops/s
Iteration  18: 152806.354 ops/s
Iteration  19: 152017.979 ops/s
Iteration  20: 152469.002 ops/s
Iteration  21: 152778.544 ops/s
Iteration  22: 152947.900 ops/s
Iteration  23: 152831.991 ops/s
Iteration  24: 152445.849 ops/s
Iteration  25: 152286.142 ops/s
Iteration  26: 153020.442 ops/s
Iteration  27: 153295.483 ops/s
Iteration  28: 152995.360 ops/s
Iteration  29: 152849.429 ops/s
Iteration  30: 152974.096 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1058._Benchmark.benchmark_Cluster_1058":
  152505.597 ±(99.9%) 393.378 ops/s [Average]
  (min, avg, max) = (151068.763, 152505.597, 153295.483), stdev = 588.789
  CI (99.9%): [152112.219, 152898.974] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1058._Benchmark.benchmark_Cluster_1058  thrpt   30  152505.597 ± 393.378  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1059._Benchmark.benchmark_Cluster_1059$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1059._Benchmark.benchmark_Cluster_1059

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 90935.349 ops/s
# Warmup Iteration   2: 119947.112 ops/s
# Warmup Iteration   3: 120658.091 ops/s
# Warmup Iteration   4: 160278.110 ops/s
# Warmup Iteration   5: 179920.102 ops/s
# Warmup Iteration   6: 179932.581 ops/s
# Warmup Iteration   7: 179938.674 ops/s
# Warmup Iteration   8: 178700.393 ops/s
# Warmup Iteration   9: 180002.574 ops/s
# Warmup Iteration  10: 179730.034 ops/s
# Warmup Iteration  11: 179674.566 ops/s
# Warmup Iteration  12: 179219.958 ops/s
# Warmup Iteration  13: 179924.990 ops/s
# Warmup Iteration  14: 179637.565 ops/s
# Warmup Iteration  15: 179622.421 ops/s
# Warmup Iteration  16: 158310.748 ops/s
# Warmup Iteration  17: 145593.238 ops/s
# Warmup Iteration  18: 186611.845 ops/s
# Warmup Iteration  19: 185887.429 ops/s
# Warmup Iteration  20: 185983.448 ops/s
# Warmup Iteration  21: 186510.752 ops/s
# Warmup Iteration  22: 186202.433 ops/s
# Warmup Iteration  23: 186051.770 ops/s
# Warmup Iteration  24: 186867.236 ops/s
# Warmup Iteration  25: 185905.506 ops/s
# Warmup Iteration  26: 185528.656 ops/s
# Warmup Iteration  27: 186389.485 ops/s
# Warmup Iteration  28: 186102.378 ops/s
# Warmup Iteration  29: 186890.700 ops/s
# Warmup Iteration  30: 186073.073 ops/s
Iteration   1: 186739.388 ops/s
Iteration   2: 186966.163 ops/s
Iteration   3: 185965.719 ops/s
Iteration   4: 186619.280 ops/s
Iteration   5: 187084.718 ops/s
Iteration   6: 186504.368 ops/s
Iteration   7: 185591.513 ops/s
Iteration   8: 187318.817 ops/s
Iteration   9: 187182.742 ops/s
Iteration  10: 186560.683 ops/s
Iteration  11: 186504.007 ops/s
Iteration  12: 186892.867 ops/s
Iteration  13: 187201.757 ops/s
Iteration  14: 186337.175 ops/s
Iteration  15: 185604.896 ops/s
Iteration  16: 186654.532 ops/s
Iteration  17: 186228.080 ops/s
Iteration  18: 186035.938 ops/s
Iteration  19: 186786.451 ops/s
Iteration  20: 186475.269 ops/s
Iteration  21: 186470.218 ops/s
Iteration  22: 185310.301 ops/s
Iteration  23: 187060.816 ops/s
Iteration  24: 186420.936 ops/s
Iteration  25: 186353.393 ops/s
Iteration  26: 186374.824 ops/s
Iteration  27: 186163.563 ops/s
Iteration  28: 186115.970 ops/s
Iteration  29: 186672.864 ops/s
Iteration  30: 187137.928 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1059._Benchmark.benchmark_Cluster_1059":
  186511.172 ±(99.9%) 333.369 ops/s [Average]
  (min, avg, max) = (185310.301, 186511.172, 187318.817), stdev = 498.971
  CI (99.9%): [186177.804, 186844.541] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1059._Benchmark.benchmark_Cluster_1059  thrpt   30  186511.172 ± 333.369  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_106._Benchmark.benchmark_Cluster_106$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_106._Benchmark.benchmark_Cluster_106

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 95163.515 ops/s
# Warmup Iteration   2: 128795.936 ops/s
# Warmup Iteration   3: 156234.846 ops/s
# Warmup Iteration   4: 231973.128 ops/s
# Warmup Iteration   5: 231265.038 ops/s
# Warmup Iteration   6: 228853.776 ops/s
# Warmup Iteration   7: 230990.235 ops/s
# Warmup Iteration   8: 232635.621 ops/s
# Warmup Iteration   9: 230687.038 ops/s
# Warmup Iteration  10: 230087.660 ops/s
# Warmup Iteration  11: 229971.549 ops/s
# Warmup Iteration  12: 149311.117 ops/s
# Warmup Iteration  13: 231058.393 ops/s
# Warmup Iteration  14: 230179.651 ops/s
# Warmup Iteration  15: 230586.092 ops/s
# Warmup Iteration  16: 230627.909 ops/s
# Warmup Iteration  17: 233931.499 ops/s
# Warmup Iteration  18: 234710.429 ops/s
# Warmup Iteration  19: 234892.809 ops/s
# Warmup Iteration  20: 234485.313 ops/s
# Warmup Iteration  21: 234331.022 ops/s
# Warmup Iteration  22: 234969.922 ops/s
# Warmup Iteration  23: 234485.714 ops/s
# Warmup Iteration  24: 234755.175 ops/s
# Warmup Iteration  25: 234105.436 ops/s
# Warmup Iteration  26: 235003.709 ops/s
# Warmup Iteration  27: 234760.224 ops/s
# Warmup Iteration  28: 234413.313 ops/s
# Warmup Iteration  29: 234102.502 ops/s
# Warmup Iteration  30: 234230.186 ops/s
Iteration   1: 234305.213 ops/s
Iteration   2: 233712.026 ops/s
Iteration   3: 234660.342 ops/s
Iteration   4: 234545.001 ops/s
Iteration   5: 234612.038 ops/s
Iteration   6: 234722.989 ops/s
Iteration   7: 233692.598 ops/s
Iteration   8: 234570.866 ops/s
Iteration   9: 233334.220 ops/s
Iteration  10: 233786.856 ops/s
Iteration  11: 234264.459 ops/s
Iteration  12: 233776.784 ops/s
Iteration  13: 234243.562 ops/s
Iteration  14: 234174.690 ops/s
Iteration  15: 233664.910 ops/s
Iteration  16: 232222.242 ops/s
Iteration  17: 233818.295 ops/s
Iteration  18: 234233.407 ops/s
Iteration  19: 234495.602 ops/s
Iteration  20: 233963.649 ops/s
Iteration  21: 234581.430 ops/s
Iteration  22: 233563.724 ops/s
Iteration  23: 233792.732 ops/s
Iteration  24: 234552.903 ops/s
Iteration  25: 233582.433 ops/s
Iteration  26: 234598.051 ops/s
Iteration  27: 234512.489 ops/s
Iteration  28: 233957.284 ops/s
Iteration  29: 234295.309 ops/s
Iteration  30: 234179.967 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_106._Benchmark.benchmark_Cluster_106":
  234080.536 ±(99.9%) 353.769 ops/s [Average]
  (min, avg, max) = (232222.242, 234080.536, 234722.989), stdev = 529.504
  CI (99.9%): [233726.767, 234434.304] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_106._Benchmark.benchmark_Cluster_106  thrpt   30  234080.536 ± 353.769  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1060._Benchmark.benchmark_Cluster_1060$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1060._Benchmark.benchmark_Cluster_1060

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42813.271 ops/s
# Warmup Iteration   2: 61536.138 ops/s
# Warmup Iteration   3: 139730.638 ops/s
# Warmup Iteration   4: 140168.885 ops/s
# Warmup Iteration   5: 141629.791 ops/s
# Warmup Iteration   6: 141629.499 ops/s
# Warmup Iteration   7: 98419.436 ops/s
# Warmup Iteration   8: 138615.012 ops/s
# Warmup Iteration   9: 142223.873 ops/s
# Warmup Iteration  10: 142083.637 ops/s
# Warmup Iteration  11: 142592.911 ops/s
# Warmup Iteration  12: 141760.071 ops/s
# Warmup Iteration  13: 142220.367 ops/s
# Warmup Iteration  14: 142262.062 ops/s
# Warmup Iteration  15: 142159.074 ops/s
# Warmup Iteration  16: 142481.481 ops/s
# Warmup Iteration  17: 143820.845 ops/s
# Warmup Iteration  18: 144352.692 ops/s
# Warmup Iteration  19: 144101.710 ops/s
# Warmup Iteration  20: 144516.955 ops/s
# Warmup Iteration  21: 144219.177 ops/s
# Warmup Iteration  22: 143299.180 ops/s
# Warmup Iteration  23: 144155.047 ops/s
# Warmup Iteration  24: 144336.696 ops/s
# Warmup Iteration  25: 144228.086 ops/s
# Warmup Iteration  26: 144257.508 ops/s
# Warmup Iteration  27: 144436.454 ops/s
# Warmup Iteration  28: 144309.866 ops/s
# Warmup Iteration  29: 144350.127 ops/s
# Warmup Iteration  30: 144009.593 ops/s
Iteration   1: 143765.805 ops/s
Iteration   2: 144341.127 ops/s
Iteration   3: 144234.656 ops/s
Iteration   4: 144335.831 ops/s
Iteration   5: 144558.310 ops/s
Iteration   6: 143944.290 ops/s
Iteration   7: 144058.270 ops/s
Iteration   8: 144123.765 ops/s
Iteration   9: 144249.953 ops/s
Iteration  10: 144170.834 ops/s
Iteration  11: 144724.938 ops/s
Iteration  12: 144914.438 ops/s
Iteration  13: 144465.797 ops/s
Iteration  14: 144209.927 ops/s
Iteration  15: 144472.295 ops/s
Iteration  16: 144613.145 ops/s
Iteration  17: 144773.422 ops/s
Iteration  18: 144393.003 ops/s
Iteration  19: 144437.076 ops/s
Iteration  20: 144314.405 ops/s
Iteration  21: 144486.613 ops/s
Iteration  22: 144510.579 ops/s
Iteration  23: 144740.603 ops/s
Iteration  24: 144412.926 ops/s
Iteration  25: 144330.705 ops/s
Iteration  26: 143654.800 ops/s
Iteration  27: 144596.297 ops/s
Iteration  28: 144878.860 ops/s
Iteration  29: 144797.550 ops/s
Iteration  30: 144590.698 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1060._Benchmark.benchmark_Cluster_1060":
  144403.364 ±(99.9%) 204.066 ops/s [Average]
  (min, avg, max) = (143654.800, 144403.364, 144914.438), stdev = 305.437
  CI (99.9%): [144199.298, 144607.430] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1060._Benchmark.benchmark_Cluster_1060  thrpt   30  144403.364 ± 204.066  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1061._Benchmark.benchmark_Cluster_1061$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1061._Benchmark.benchmark_Cluster_1061

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55091.972 ops/s
# Warmup Iteration   2: 72894.555 ops/s
# Warmup Iteration   3: 147346.742 ops/s
# Warmup Iteration   4: 149921.473 ops/s
# Warmup Iteration   5: 151026.602 ops/s
# Warmup Iteration   6: 150861.190 ops/s
# Warmup Iteration   7: 151290.617 ops/s
# Warmup Iteration   8: 104378.144 ops/s
# Warmup Iteration   9: 150772.207 ops/s
# Warmup Iteration  10: 150687.611 ops/s
# Warmup Iteration  11: 151396.837 ops/s
# Warmup Iteration  12: 151231.864 ops/s
# Warmup Iteration  13: 151247.017 ops/s
# Warmup Iteration  14: 150442.579 ops/s
# Warmup Iteration  15: 149793.747 ops/s
# Warmup Iteration  16: 150660.562 ops/s
# Warmup Iteration  17: 150861.679 ops/s
# Warmup Iteration  18: 150527.940 ops/s
# Warmup Iteration  19: 149895.016 ops/s
# Warmup Iteration  20: 150997.261 ops/s
# Warmup Iteration  21: 151276.845 ops/s
# Warmup Iteration  22: 151522.766 ops/s
# Warmup Iteration  23: 151037.686 ops/s
# Warmup Iteration  24: 150981.094 ops/s
# Warmup Iteration  25: 150786.357 ops/s
# Warmup Iteration  26: 150987.639 ops/s
# Warmup Iteration  27: 151078.355 ops/s
# Warmup Iteration  28: 150927.506 ops/s
# Warmup Iteration  29: 149921.635 ops/s
# Warmup Iteration  30: 149570.166 ops/s
Iteration   1: 151248.622 ops/s
Iteration   2: 151336.253 ops/s
Iteration   3: 151173.474 ops/s
Iteration   4: 150808.029 ops/s
Iteration   5: 150305.389 ops/s
Iteration   6: 151322.196 ops/s
Iteration   7: 150505.838 ops/s
Iteration   8: 151054.461 ops/s
Iteration   9: 151491.543 ops/s
Iteration  10: 150804.147 ops/s
Iteration  11: 151053.994 ops/s
Iteration  12: 151235.458 ops/s
Iteration  13: 150780.552 ops/s
Iteration  14: 151394.290 ops/s
Iteration  15: 150501.284 ops/s
Iteration  16: 151599.812 ops/s
Iteration  17: 150423.026 ops/s
Iteration  18: 149500.243 ops/s
Iteration  19: 149531.923 ops/s
Iteration  20: 150793.572 ops/s
Iteration  21: 150245.258 ops/s
Iteration  22: 151201.123 ops/s
Iteration  23: 151112.252 ops/s
Iteration  24: 151164.895 ops/s
Iteration  25: 151018.414 ops/s
Iteration  26: 152248.722 ops/s
Iteration  27: 151185.421 ops/s
Iteration  28: 150516.938 ops/s
Iteration  29: 150711.633 ops/s
Iteration  30: 151847.739 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1061._Benchmark.benchmark_Cluster_1061":
  150937.217 ±(99.9%) 395.583 ops/s [Average]
  (min, avg, max) = (149500.243, 150937.217, 152248.722), stdev = 592.091
  CI (99.9%): [150541.633, 151332.800] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1061._Benchmark.benchmark_Cluster_1061  thrpt   30  150937.217 ± 395.583  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1062._Benchmark.benchmark_Cluster_1062$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1062._Benchmark.benchmark_Cluster_1062

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54347.009 ops/s
# Warmup Iteration   2: 81507.739 ops/s
# Warmup Iteration   3: 101517.643 ops/s
# Warmup Iteration   4: 147335.879 ops/s
# Warmup Iteration   5: 148882.466 ops/s
# Warmup Iteration   6: 147242.253 ops/s
# Warmup Iteration   7: 148829.105 ops/s
# Warmup Iteration   8: 148997.866 ops/s
# Warmup Iteration   9: 148991.537 ops/s
# Warmup Iteration  10: 148269.841 ops/s
# Warmup Iteration  11: 116624.973 ops/s
# Warmup Iteration  12: 126419.662 ops/s
# Warmup Iteration  13: 148604.455 ops/s
# Warmup Iteration  14: 148015.570 ops/s
# Warmup Iteration  15: 147677.142 ops/s
# Warmup Iteration  16: 147634.930 ops/s
# Warmup Iteration  17: 150869.726 ops/s
# Warmup Iteration  18: 151560.648 ops/s
# Warmup Iteration  19: 151982.800 ops/s
# Warmup Iteration  20: 151729.781 ops/s
# Warmup Iteration  21: 151573.288 ops/s
# Warmup Iteration  22: 151738.270 ops/s
# Warmup Iteration  23: 151730.322 ops/s
# Warmup Iteration  24: 151539.940 ops/s
# Warmup Iteration  25: 151464.051 ops/s
# Warmup Iteration  26: 151689.816 ops/s
# Warmup Iteration  27: 151333.390 ops/s
# Warmup Iteration  28: 151041.163 ops/s
# Warmup Iteration  29: 150806.058 ops/s
# Warmup Iteration  30: 151136.189 ops/s
Iteration   1: 150514.914 ops/s
Iteration   2: 151845.100 ops/s
Iteration   3: 151650.428 ops/s
Iteration   4: 151148.465 ops/s
Iteration   5: 151531.304 ops/s
Iteration   6: 150218.726 ops/s
Iteration   7: 151004.423 ops/s
Iteration   8: 150961.135 ops/s
Iteration   9: 151148.049 ops/s
Iteration  10: 151982.308 ops/s
Iteration  11: 151952.229 ops/s
Iteration  12: 151882.272 ops/s
Iteration  13: 152000.263 ops/s
Iteration  14: 151693.141 ops/s
Iteration  15: 151166.137 ops/s
Iteration  16: 150705.198 ops/s
Iteration  17: 151650.183 ops/s
Iteration  18: 151082.343 ops/s
Iteration  19: 151776.972 ops/s
Iteration  20: 151770.513 ops/s
Iteration  21: 151909.812 ops/s
Iteration  22: 151876.246 ops/s
Iteration  23: 151788.782 ops/s
Iteration  24: 152348.184 ops/s
Iteration  25: 151905.401 ops/s
Iteration  26: 151464.046 ops/s
Iteration  27: 151717.947 ops/s
Iteration  28: 151251.796 ops/s
Iteration  29: 151776.036 ops/s
Iteration  30: 152083.645 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1062._Benchmark.benchmark_Cluster_1062":
  151526.867 ±(99.9%) 334.777 ops/s [Average]
  (min, avg, max) = (150218.726, 151526.867, 152348.184), stdev = 501.079
  CI (99.9%): [151192.090, 151861.644] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1062._Benchmark.benchmark_Cluster_1062  thrpt   30  151526.867 ± 334.777  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1063._Benchmark.benchmark_Cluster_1063$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1063._Benchmark.benchmark_Cluster_1063

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63309.745 ops/s
# Warmup Iteration   2: 97407.907 ops/s
# Warmup Iteration   3: 180082.437 ops/s
# Warmup Iteration   4: 200592.229 ops/s
# Warmup Iteration   5: 202182.828 ops/s
# Warmup Iteration   6: 200700.588 ops/s
# Warmup Iteration   7: 201999.324 ops/s
# Warmup Iteration   8: 165166.108 ops/s
# Warmup Iteration   9: 172268.715 ops/s
# Warmup Iteration  10: 202159.522 ops/s
# Warmup Iteration  11: 200442.231 ops/s
# Warmup Iteration  12: 201707.618 ops/s
# Warmup Iteration  13: 202133.868 ops/s
# Warmup Iteration  14: 201597.610 ops/s
# Warmup Iteration  15: 201379.455 ops/s
# Warmup Iteration  16: 202109.235 ops/s
# Warmup Iteration  17: 201972.480 ops/s
# Warmup Iteration  18: 201364.038 ops/s
# Warmup Iteration  19: 202075.089 ops/s
# Warmup Iteration  20: 202403.864 ops/s
# Warmup Iteration  21: 202125.696 ops/s
# Warmup Iteration  22: 202096.039 ops/s
# Warmup Iteration  23: 201681.337 ops/s
# Warmup Iteration  24: 202765.378 ops/s
# Warmup Iteration  25: 201651.810 ops/s
# Warmup Iteration  26: 201646.620 ops/s
# Warmup Iteration  27: 202619.450 ops/s
# Warmup Iteration  28: 201833.585 ops/s
# Warmup Iteration  29: 201325.246 ops/s
# Warmup Iteration  30: 199894.985 ops/s
Iteration   1: 201192.897 ops/s
Iteration   2: 200757.296 ops/s
Iteration   3: 202055.289 ops/s
Iteration   4: 202182.079 ops/s
Iteration   5: 199613.871 ops/s
Iteration   6: 200922.863 ops/s
Iteration   7: 201759.589 ops/s
Iteration   8: 201818.563 ops/s
Iteration   9: 201294.670 ops/s
Iteration  10: 202699.529 ops/s
Iteration  11: 202120.205 ops/s
Iteration  12: 201799.320 ops/s
Iteration  13: 201695.090 ops/s
Iteration  14: 202101.453 ops/s
Iteration  15: 202725.525 ops/s
Iteration  16: 201718.000 ops/s
Iteration  17: 201205.101 ops/s
Iteration  18: 201208.278 ops/s
Iteration  19: 201830.706 ops/s
Iteration  20: 201249.649 ops/s
Iteration  21: 202564.419 ops/s
Iteration  22: 202696.179 ops/s
Iteration  23: 202354.251 ops/s
Iteration  24: 202596.343 ops/s
Iteration  25: 202530.909 ops/s
Iteration  26: 201482.544 ops/s
Iteration  27: 200615.494 ops/s
Iteration  28: 201822.402 ops/s
Iteration  29: 201966.291 ops/s
Iteration  30: 202430.862 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1063._Benchmark.benchmark_Cluster_1063":
  201766.989 ±(99.9%) 482.388 ops/s [Average]
  (min, avg, max) = (199613.871, 201766.989, 202725.525), stdev = 722.016
  CI (99.9%): [201284.601, 202249.377] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1063._Benchmark.benchmark_Cluster_1063  thrpt   30  201766.989 ± 482.388  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1064._Benchmark.benchmark_Cluster_1064$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1064._Benchmark.benchmark_Cluster_1064

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 84439.427 ops/s
# Warmup Iteration   2: 112753.053 ops/s
# Warmup Iteration   3: 125132.137 ops/s
# Warmup Iteration   4: 184265.831 ops/s
# Warmup Iteration   5: 184343.088 ops/s
# Warmup Iteration   6: 182505.190 ops/s
# Warmup Iteration   7: 183858.346 ops/s
# Warmup Iteration   8: 181329.813 ops/s
# Warmup Iteration   9: 183650.019 ops/s
# Warmup Iteration  10: 181370.370 ops/s
# Warmup Iteration  11: 182470.122 ops/s
# Warmup Iteration  12: 180731.069 ops/s
# Warmup Iteration  13: 142883.185 ops/s
# Warmup Iteration  14: 165585.960 ops/s
# Warmup Iteration  15: 180232.888 ops/s
# Warmup Iteration  16: 182080.748 ops/s
# Warmup Iteration  17: 182677.263 ops/s
# Warmup Iteration  18: 182962.946 ops/s
# Warmup Iteration  19: 183881.758 ops/s
# Warmup Iteration  20: 182580.307 ops/s
# Warmup Iteration  21: 183448.989 ops/s
# Warmup Iteration  22: 182084.444 ops/s
# Warmup Iteration  23: 183314.580 ops/s
# Warmup Iteration  24: 183848.353 ops/s
# Warmup Iteration  25: 183543.136 ops/s
# Warmup Iteration  26: 182929.469 ops/s
# Warmup Iteration  27: 182638.452 ops/s
# Warmup Iteration  28: 182434.997 ops/s
# Warmup Iteration  29: 183251.762 ops/s
# Warmup Iteration  30: 182778.824 ops/s
Iteration   1: 183478.456 ops/s
Iteration   2: 184400.940 ops/s
Iteration   3: 184255.130 ops/s
Iteration   4: 183506.835 ops/s
Iteration   5: 183736.032 ops/s
Iteration   6: 183513.726 ops/s
Iteration   7: 184076.047 ops/s
Iteration   8: 184193.778 ops/s
Iteration   9: 183795.734 ops/s
Iteration  10: 183368.303 ops/s
Iteration  11: 183910.976 ops/s
Iteration  12: 184260.569 ops/s
Iteration  13: 183536.989 ops/s
Iteration  14: 183685.302 ops/s
Iteration  15: 184423.494 ops/s
Iteration  16: 184390.624 ops/s
Iteration  17: 184544.555 ops/s
Iteration  18: 184417.342 ops/s
Iteration  19: 184280.103 ops/s
Iteration  20: 184542.016 ops/s
Iteration  21: 184415.704 ops/s
Iteration  22: 184442.301 ops/s
Iteration  23: 184368.225 ops/s
Iteration  24: 184110.057 ops/s
Iteration  25: 184257.627 ops/s
Iteration  26: 183881.094 ops/s
Iteration  27: 184011.694 ops/s
Iteration  28: 183975.139 ops/s
Iteration  29: 184185.459 ops/s
Iteration  30: 183931.021 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1064._Benchmark.benchmark_Cluster_1064":
  184063.176 ±(99.9%) 235.798 ops/s [Average]
  (min, avg, max) = (183368.303, 184063.176, 184544.555), stdev = 352.931
  CI (99.9%): [183827.378, 184298.974] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1064._Benchmark.benchmark_Cluster_1064  thrpt   30  184063.176 ± 235.798  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1065._Benchmark.benchmark_Cluster_1065$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1065._Benchmark.benchmark_Cluster_1065

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78258.187 ops/s
# Warmup Iteration   2: 106555.516 ops/s
# Warmup Iteration   3: 209179.697 ops/s
# Warmup Iteration   4: 212428.755 ops/s
# Warmup Iteration   5: 213365.688 ops/s
# Warmup Iteration   6: 213544.912 ops/s
# Warmup Iteration   7: 213044.287 ops/s
# Warmup Iteration   8: 168460.408 ops/s
# Warmup Iteration   9: 195802.984 ops/s
# Warmup Iteration  10: 215198.446 ops/s
# Warmup Iteration  11: 215413.186 ops/s
# Warmup Iteration  12: 213464.997 ops/s
# Warmup Iteration  13: 214659.987 ops/s
# Warmup Iteration  14: 215240.079 ops/s
# Warmup Iteration  15: 216093.700 ops/s
# Warmup Iteration  16: 215757.792 ops/s
# Warmup Iteration  17: 215481.386 ops/s
# Warmup Iteration  18: 215436.837 ops/s
# Warmup Iteration  19: 214921.266 ops/s
# Warmup Iteration  20: 215501.990 ops/s
# Warmup Iteration  21: 215356.292 ops/s
# Warmup Iteration  22: 214464.710 ops/s
# Warmup Iteration  23: 214643.566 ops/s
# Warmup Iteration  24: 213921.967 ops/s
# Warmup Iteration  25: 214495.474 ops/s
# Warmup Iteration  26: 213568.447 ops/s
# Warmup Iteration  27: 213544.478 ops/s
# Warmup Iteration  28: 215463.861 ops/s
# Warmup Iteration  29: 215286.364 ops/s
# Warmup Iteration  30: 213961.549 ops/s
Iteration   1: 211126.892 ops/s
Iteration   2: 212456.584 ops/s
Iteration   3: 212812.086 ops/s
Iteration   4: 212160.533 ops/s
Iteration   5: 214705.273 ops/s
Iteration   6: 213662.762 ops/s
Iteration   7: 213666.313 ops/s
Iteration   8: 212476.319 ops/s
Iteration   9: 210693.575 ops/s
Iteration  10: 212065.888 ops/s
Iteration  11: 212780.539 ops/s
Iteration  12: 214012.959 ops/s
Iteration  13: 214695.593 ops/s
Iteration  14: 214400.760 ops/s
Iteration  15: 215761.158 ops/s
Iteration  16: 215478.188 ops/s
Iteration  17: 214847.420 ops/s
Iteration  18: 214685.084 ops/s
Iteration  19: 215421.611 ops/s
Iteration  20: 215525.545 ops/s
Iteration  21: 215154.288 ops/s
Iteration  22: 215175.632 ops/s
Iteration  23: 212151.570 ops/s
Iteration  24: 214028.548 ops/s
Iteration  25: 213736.676 ops/s
Iteration  26: 214686.887 ops/s
Iteration  27: 212943.518 ops/s
Iteration  28: 213880.671 ops/s
Iteration  29: 211991.130 ops/s
Iteration  30: 213112.224 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1065._Benchmark.benchmark_Cluster_1065":
  213676.541 ±(99.9%) 925.029 ops/s [Average]
  (min, avg, max) = (210693.575, 213676.541, 215761.158), stdev = 1384.541
  CI (99.9%): [212751.511, 214601.570] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1065._Benchmark.benchmark_Cluster_1065  thrpt   30  213676.541 ± 925.029  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1066._Benchmark.benchmark_Cluster_1066$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1066._Benchmark.benchmark_Cluster_1066

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 140602.266 ops/s
# Warmup Iteration   2: 152795.712 ops/s
# Warmup Iteration   3: 154359.426 ops/s
# Warmup Iteration   4: 153155.844 ops/s
# Warmup Iteration   5: 189474.831 ops/s
# Warmup Iteration   6: 197276.658 ops/s
# Warmup Iteration   7: 199017.360 ops/s
# Warmup Iteration   8: 200467.711 ops/s
# Warmup Iteration   9: 199689.024 ops/s
# Warmup Iteration  10: 199477.303 ops/s
# Warmup Iteration  11: 197614.109 ops/s
# Warmup Iteration  12: 199664.013 ops/s
# Warmup Iteration  13: 200564.866 ops/s
# Warmup Iteration  14: 200224.015 ops/s
# Warmup Iteration  15: 200307.890 ops/s
# Warmup Iteration  16: 199683.503 ops/s
# Warmup Iteration  17: 208435.923 ops/s
# Warmup Iteration  18: 207147.488 ops/s
# Warmup Iteration  19: 208097.761 ops/s
# Warmup Iteration  20: 207695.959 ops/s
# Warmup Iteration  21: 208911.144 ops/s
# Warmup Iteration  22: 208795.316 ops/s
# Warmup Iteration  23: 204852.511 ops/s
# Warmup Iteration  24: 158692.984 ops/s
# Warmup Iteration  25: 199557.876 ops/s
# Warmup Iteration  26: 208248.918 ops/s
# Warmup Iteration  27: 207781.662 ops/s
# Warmup Iteration  28: 205832.166 ops/s
# Warmup Iteration  29: 207240.037 ops/s
# Warmup Iteration  30: 206398.182 ops/s
Iteration   1: 207240.445 ops/s
Iteration   2: 207461.346 ops/s
Iteration   3: 206022.145 ops/s
Iteration   4: 208992.517 ops/s
Iteration   5: 208790.359 ops/s
Iteration   6: 209353.944 ops/s
Iteration   7: 209452.224 ops/s
Iteration   8: 209162.015 ops/s
Iteration   9: 209317.055 ops/s
Iteration  10: 208324.739 ops/s
Iteration  11: 208580.267 ops/s
Iteration  12: 206934.470 ops/s
Iteration  13: 206389.334 ops/s
Iteration  14: 207247.577 ops/s
Iteration  15: 208917.302 ops/s
Iteration  16: 208281.209 ops/s
Iteration  17: 206999.070 ops/s
Iteration  18: 206897.701 ops/s
Iteration  19: 206665.393 ops/s
Iteration  20: 206125.679 ops/s
Iteration  21: 207573.761 ops/s
Iteration  22: 207345.459 ops/s
Iteration  23: 205770.527 ops/s
Iteration  24: 208327.768 ops/s
Iteration  25: 208717.829 ops/s
Iteration  26: 208012.068 ops/s
Iteration  27: 207986.998 ops/s
Iteration  28: 207905.955 ops/s
Iteration  29: 207251.276 ops/s
Iteration  30: 207268.563 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1066._Benchmark.benchmark_Cluster_1066":
  207777.166 ±(99.9%) 706.235 ops/s [Average]
  (min, avg, max) = (205770.527, 207777.166, 209452.224), stdev = 1057.059
  CI (99.9%): [207070.932, 208483.401] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1066._Benchmark.benchmark_Cluster_1066  thrpt   30  207777.166 ± 706.235  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1067._Benchmark.benchmark_Cluster_1067$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1067._Benchmark.benchmark_Cluster_1067

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72397.041 ops/s
# Warmup Iteration   2: 90749.399 ops/s
# Warmup Iteration   3: 92341.588 ops/s
# Warmup Iteration   4: 140464.341 ops/s
# Warmup Iteration   5: 144522.079 ops/s
# Warmup Iteration   6: 144381.631 ops/s
# Warmup Iteration   7: 143613.891 ops/s
# Warmup Iteration   8: 145219.677 ops/s
# Warmup Iteration   9: 145792.775 ops/s
# Warmup Iteration  10: 144146.249 ops/s
# Warmup Iteration  11: 143261.998 ops/s
# Warmup Iteration  12: 144092.550 ops/s
# Warmup Iteration  13: 143718.060 ops/s
# Warmup Iteration  14: 144751.074 ops/s
# Warmup Iteration  15: 100566.123 ops/s
# Warmup Iteration  16: 139784.773 ops/s
# Warmup Iteration  17: 150207.051 ops/s
# Warmup Iteration  18: 150430.130 ops/s
# Warmup Iteration  19: 150544.800 ops/s
# Warmup Iteration  20: 150883.478 ops/s
# Warmup Iteration  21: 150887.923 ops/s
# Warmup Iteration  22: 150772.927 ops/s
# Warmup Iteration  23: 151057.192 ops/s
# Warmup Iteration  24: 150419.203 ops/s
# Warmup Iteration  25: 150625.887 ops/s
# Warmup Iteration  26: 150972.982 ops/s
# Warmup Iteration  27: 150582.740 ops/s
# Warmup Iteration  28: 150707.409 ops/s
# Warmup Iteration  29: 150763.387 ops/s
# Warmup Iteration  30: 149777.037 ops/s
Iteration   1: 150169.663 ops/s
Iteration   2: 149980.485 ops/s
Iteration   3: 150676.340 ops/s
Iteration   4: 150146.971 ops/s
Iteration   5: 150652.885 ops/s
Iteration   6: 149277.821 ops/s
Iteration   7: 150573.883 ops/s
Iteration   8: 150184.024 ops/s
Iteration   9: 149849.520 ops/s
Iteration  10: 150904.155 ops/s
Iteration  11: 150901.575 ops/s
Iteration  12: 150826.562 ops/s
Iteration  13: 150732.098 ops/s
Iteration  14: 150732.721 ops/s
Iteration  15: 150156.088 ops/s
Iteration  16: 149490.523 ops/s
Iteration  17: 150452.084 ops/s
Iteration  18: 150081.527 ops/s
Iteration  19: 150096.339 ops/s
Iteration  20: 150280.348 ops/s
Iteration  21: 148896.040 ops/s
Iteration  22: 149987.633 ops/s
Iteration  23: 150376.185 ops/s
Iteration  24: 149739.888 ops/s
Iteration  25: 149990.961 ops/s
Iteration  26: 149490.946 ops/s
Iteration  27: 149948.457 ops/s
Iteration  28: 148688.929 ops/s
Iteration  29: 149038.603 ops/s
Iteration  30: 150534.092 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1067._Benchmark.benchmark_Cluster_1067":
  150095.245 ±(99.9%) 395.403 ops/s [Average]
  (min, avg, max) = (148688.929, 150095.245, 150904.155), stdev = 591.821
  CI (99.9%): [149699.842, 150490.648] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1067._Benchmark.benchmark_Cluster_1067  thrpt   30  150095.245 ± 395.403  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1068._Benchmark.benchmark_Cluster_1068$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1068._Benchmark.benchmark_Cluster_1068

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 98673.776 ops/s
# Warmup Iteration   2: 121392.203 ops/s
# Warmup Iteration   3: 128845.911 ops/s
# Warmup Iteration   4: 187708.425 ops/s
# Warmup Iteration   5: 187598.237 ops/s
# Warmup Iteration   6: 187410.926 ops/s
# Warmup Iteration   7: 186358.751 ops/s
# Warmup Iteration   8: 187555.655 ops/s
# Warmup Iteration   9: 187062.912 ops/s
# Warmup Iteration  10: 186701.748 ops/s
# Warmup Iteration  11: 187010.637 ops/s
# Warmup Iteration  12: 186040.343 ops/s
# Warmup Iteration  13: 186120.285 ops/s
# Warmup Iteration  14: 150979.947 ops/s
# Warmup Iteration  15: 162258.445 ops/s
# Warmup Iteration  16: 186255.492 ops/s
# Warmup Iteration  17: 193627.029 ops/s
# Warmup Iteration  18: 193706.737 ops/s
# Warmup Iteration  19: 192851.490 ops/s
# Warmup Iteration  20: 193940.782 ops/s
# Warmup Iteration  21: 195693.093 ops/s
# Warmup Iteration  22: 195650.762 ops/s
# Warmup Iteration  23: 193843.321 ops/s
# Warmup Iteration  24: 194910.227 ops/s
# Warmup Iteration  25: 195796.198 ops/s
# Warmup Iteration  26: 195667.528 ops/s
# Warmup Iteration  27: 193792.074 ops/s
# Warmup Iteration  28: 194653.290 ops/s
# Warmup Iteration  29: 194576.729 ops/s
# Warmup Iteration  30: 195347.093 ops/s
Iteration   1: 194972.570 ops/s
Iteration   2: 194873.900 ops/s
Iteration   3: 195317.431 ops/s
Iteration   4: 194960.425 ops/s
Iteration   5: 192994.118 ops/s
Iteration   6: 192341.713 ops/s
Iteration   7: 191999.670 ops/s
Iteration   8: 193012.460 ops/s
Iteration   9: 194462.141 ops/s
Iteration  10: 192375.363 ops/s
Iteration  11: 194275.805 ops/s
Iteration  12: 195352.546 ops/s
Iteration  13: 192731.227 ops/s
Iteration  14: 193826.582 ops/s
Iteration  15: 192380.557 ops/s
Iteration  16: 195132.310 ops/s
Iteration  17: 193463.356 ops/s
Iteration  18: 193649.451 ops/s
Iteration  19: 194746.415 ops/s
Iteration  20: 192045.490 ops/s
Iteration  21: 194029.395 ops/s
Iteration  22: 193124.236 ops/s
Iteration  23: 192354.704 ops/s
Iteration  24: 191085.632 ops/s
Iteration  25: 191252.938 ops/s
Iteration  26: 192244.940 ops/s
Iteration  27: 191468.441 ops/s
Iteration  28: 194008.360 ops/s
Iteration  29: 192535.764 ops/s
Iteration  30: 191519.153 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1068._Benchmark.benchmark_Cluster_1068":
  193284.570 ±(99.9%) 878.540 ops/s [Average]
  (min, avg, max) = (191085.632, 193284.570, 195352.546), stdev = 1314.957
  CI (99.9%): [192406.030, 194163.110] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1068._Benchmark.benchmark_Cluster_1068  thrpt   30  193284.570 ± 878.540  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1069._Benchmark.benchmark_Cluster_1069$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1069._Benchmark.benchmark_Cluster_1069

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54926.311 ops/s
# Warmup Iteration   2: 76859.753 ops/s
# Warmup Iteration   3: 77412.804 ops/s
# Warmup Iteration   4: 102525.470 ops/s
# Warmup Iteration   5: 114574.486 ops/s
# Warmup Iteration   6: 114523.451 ops/s
# Warmup Iteration   7: 114637.870 ops/s
# Warmup Iteration   8: 112581.216 ops/s
# Warmup Iteration   9: 114171.582 ops/s
# Warmup Iteration  10: 114088.238 ops/s
# Warmup Iteration  11: 114228.670 ops/s
# Warmup Iteration  12: 113827.620 ops/s
# Warmup Iteration  13: 114136.931 ops/s
# Warmup Iteration  14: 113808.583 ops/s
# Warmup Iteration  15: 114945.401 ops/s
# Warmup Iteration  16: 100194.775 ops/s
# Warmup Iteration  17: 93890.199 ops/s
# Warmup Iteration  18: 113527.881 ops/s
# Warmup Iteration  19: 113062.985 ops/s
# Warmup Iteration  20: 114195.084 ops/s
# Warmup Iteration  21: 113787.403 ops/s
# Warmup Iteration  22: 113883.837 ops/s
# Warmup Iteration  23: 114234.850 ops/s
# Warmup Iteration  24: 114757.326 ops/s
# Warmup Iteration  25: 113942.747 ops/s
# Warmup Iteration  26: 114123.946 ops/s
# Warmup Iteration  27: 112825.422 ops/s
# Warmup Iteration  28: 113975.212 ops/s
# Warmup Iteration  29: 113522.213 ops/s
# Warmup Iteration  30: 112864.734 ops/s
Iteration   1: 113718.302 ops/s
Iteration   2: 113532.686 ops/s
Iteration   3: 113146.675 ops/s
Iteration   4: 112918.275 ops/s
Iteration   5: 113535.035 ops/s
Iteration   6: 113908.721 ops/s
Iteration   7: 113220.270 ops/s
Iteration   8: 114270.593 ops/s
Iteration   9: 114869.391 ops/s
Iteration  10: 114806.863 ops/s
Iteration  11: 114991.283 ops/s
Iteration  12: 114878.375 ops/s
Iteration  13: 114649.034 ops/s
Iteration  14: 114804.148 ops/s
Iteration  15: 114200.660 ops/s
Iteration  16: 113898.296 ops/s
Iteration  17: 114536.595 ops/s
Iteration  18: 114764.876 ops/s
Iteration  19: 114534.969 ops/s
Iteration  20: 114553.357 ops/s
Iteration  21: 114433.995 ops/s
Iteration  22: 113483.469 ops/s
Iteration  23: 113639.555 ops/s
Iteration  24: 113797.412 ops/s
Iteration  25: 113792.235 ops/s
Iteration  26: 113766.376 ops/s
Iteration  27: 112574.602 ops/s
Iteration  28: 113496.664 ops/s
Iteration  29: 113819.128 ops/s
Iteration  30: 114157.244 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1069._Benchmark.benchmark_Cluster_1069":
  114023.303 ±(99.9%) 427.923 ops/s [Average]
  (min, avg, max) = (112574.602, 114023.303, 114991.283), stdev = 640.495
  CI (99.9%): [113595.379, 114451.226] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1069._Benchmark.benchmark_Cluster_1069  thrpt   30  114023.303 ± 427.923  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_107._Benchmark.benchmark_Cluster_107$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_107._Benchmark.benchmark_Cluster_107

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 98261.691 ops/s
# Warmup Iteration   2: 137429.021 ops/s
# Warmup Iteration   3: 218143.996 ops/s
# Warmup Iteration   4: 255722.076 ops/s
# Warmup Iteration   5: 253177.834 ops/s
# Warmup Iteration   6: 253352.257 ops/s
# Warmup Iteration   7: 252569.328 ops/s
# Warmup Iteration   8: 251807.274 ops/s
# Warmup Iteration   9: 239626.284 ops/s
# Warmup Iteration  10: 184443.019 ops/s
# Warmup Iteration  11: 251092.730 ops/s
# Warmup Iteration  12: 251164.187 ops/s
# Warmup Iteration  13: 251238.710 ops/s
# Warmup Iteration  14: 251616.550 ops/s
# Warmup Iteration  15: 251793.412 ops/s
# Warmup Iteration  16: 251667.793 ops/s
# Warmup Iteration  17: 255903.931 ops/s
# Warmup Iteration  18: 256393.423 ops/s
# Warmup Iteration  19: 256655.602 ops/s
# Warmup Iteration  20: 257668.188 ops/s
# Warmup Iteration  21: 258475.362 ops/s
# Warmup Iteration  22: 256765.622 ops/s
# Warmup Iteration  23: 253857.033 ops/s
# Warmup Iteration  24: 254887.027 ops/s
# Warmup Iteration  25: 254336.304 ops/s
# Warmup Iteration  26: 255188.166 ops/s
# Warmup Iteration  27: 255308.715 ops/s
# Warmup Iteration  28: 255423.547 ops/s
# Warmup Iteration  29: 254978.640 ops/s
# Warmup Iteration  30: 258572.705 ops/s
Iteration   1: 256621.121 ops/s
Iteration   2: 257568.984 ops/s
Iteration   3: 255710.658 ops/s
Iteration   4: 256582.171 ops/s
Iteration   5: 255281.326 ops/s
Iteration   6: 258555.520 ops/s
Iteration   7: 257199.977 ops/s
Iteration   8: 257958.715 ops/s
Iteration   9: 258586.874 ops/s
Iteration  10: 257271.272 ops/s
Iteration  11: 255970.740 ops/s
Iteration  12: 256735.769 ops/s
Iteration  13: 257641.991 ops/s
Iteration  14: 253567.536 ops/s
Iteration  15: 255397.820 ops/s
Iteration  16: 254320.018 ops/s
Iteration  17: 257130.784 ops/s
Iteration  18: 256203.607 ops/s
Iteration  19: 255522.398 ops/s
Iteration  20: 256391.603 ops/s
Iteration  21: 253472.785 ops/s
Iteration  22: 254298.026 ops/s
Iteration  23: 254251.693 ops/s
Iteration  24: 253890.894 ops/s
Iteration  25: 257405.053 ops/s
Iteration  26: 258127.288 ops/s
Iteration  27: 256468.790 ops/s
Iteration  28: 256877.080 ops/s
Iteration  29: 253584.739 ops/s
Iteration  30: 255038.911 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_107._Benchmark.benchmark_Cluster_107":
  256121.138 ±(99.9%) 1027.106 ops/s [Average]
  (min, avg, max) = (253472.785, 256121.138, 258586.874), stdev = 1537.324
  CI (99.9%): [255094.032, 257148.244] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_107._Benchmark.benchmark_Cluster_107  thrpt   30  256121.138 ± 1027.106  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1070._Benchmark.benchmark_Cluster_1070$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1070._Benchmark.benchmark_Cluster_1070

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64633.112 ops/s
# Warmup Iteration   2: 79550.918 ops/s
# Warmup Iteration   3: 132100.844 ops/s
# Warmup Iteration   4: 152961.130 ops/s
# Warmup Iteration   5: 151308.601 ops/s
# Warmup Iteration   6: 153185.253 ops/s
# Warmup Iteration   7: 152345.927 ops/s
# Warmup Iteration   8: 151513.107 ops/s
# Warmup Iteration   9: 143575.990 ops/s
# Warmup Iteration  10: 113546.133 ops/s
# Warmup Iteration  11: 152257.624 ops/s
# Warmup Iteration  12: 151598.255 ops/s
# Warmup Iteration  13: 153944.732 ops/s
# Warmup Iteration  14: 154052.521 ops/s
# Warmup Iteration  15: 153468.281 ops/s
# Warmup Iteration  16: 152455.783 ops/s
# Warmup Iteration  17: 154504.155 ops/s
# Warmup Iteration  18: 153269.652 ops/s
# Warmup Iteration  19: 154030.482 ops/s
# Warmup Iteration  20: 152007.540 ops/s
# Warmup Iteration  21: 153650.723 ops/s
# Warmup Iteration  22: 153655.484 ops/s
# Warmup Iteration  23: 153991.853 ops/s
# Warmup Iteration  24: 153686.008 ops/s
# Warmup Iteration  25: 152396.199 ops/s
# Warmup Iteration  26: 152904.880 ops/s
# Warmup Iteration  27: 152788.323 ops/s
# Warmup Iteration  28: 152304.140 ops/s
# Warmup Iteration  29: 152245.713 ops/s
# Warmup Iteration  30: 152428.505 ops/s
Iteration   1: 152731.897 ops/s
Iteration   2: 153456.694 ops/s
Iteration   3: 151996.731 ops/s
Iteration   4: 152584.902 ops/s
Iteration   5: 152694.372 ops/s
Iteration   6: 153570.658 ops/s
Iteration   7: 153310.679 ops/s
Iteration   8: 154565.406 ops/s
Iteration   9: 153565.127 ops/s
Iteration  10: 152651.079 ops/s
Iteration  11: 154188.610 ops/s
Iteration  12: 154455.059 ops/s
Iteration  13: 153134.867 ops/s
Iteration  14: 153221.552 ops/s
Iteration  15: 153303.787 ops/s
Iteration  16: 153941.958 ops/s
Iteration  17: 153945.387 ops/s
Iteration  18: 153987.876 ops/s
Iteration  19: 152988.185 ops/s
Iteration  20: 153652.563 ops/s
Iteration  21: 153525.993 ops/s
Iteration  22: 154283.238 ops/s
Iteration  23: 154594.760 ops/s
Iteration  24: 154679.136 ops/s
Iteration  25: 154752.718 ops/s
Iteration  26: 154845.390 ops/s
Iteration  27: 154609.101 ops/s
Iteration  28: 154570.909 ops/s
Iteration  29: 154223.498 ops/s
Iteration  30: 154146.890 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1070._Benchmark.benchmark_Cluster_1070":
  153739.301 ±(99.9%) 511.157 ops/s [Average]
  (min, avg, max) = (151996.731, 153739.301, 154845.390), stdev = 765.075
  CI (99.9%): [153228.144, 154250.458] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1070._Benchmark.benchmark_Cluster_1070  thrpt   30  153739.301 ± 511.157  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1071._Benchmark.benchmark_Cluster_1071$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1071._Benchmark.benchmark_Cluster_1071

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 100834.186 ops/s
# Warmup Iteration   2: 133430.383 ops/s
# Warmup Iteration   3: 227212.687 ops/s
# Warmup Iteration   4: 256941.495 ops/s
# Warmup Iteration   5: 253025.813 ops/s
# Warmup Iteration   6: 254789.129 ops/s
# Warmup Iteration   7: 252777.525 ops/s
# Warmup Iteration   8: 254519.937 ops/s
# Warmup Iteration   9: 206420.729 ops/s
# Warmup Iteration  10: 218406.444 ops/s
# Warmup Iteration  11: 255715.319 ops/s
# Warmup Iteration  12: 254569.516 ops/s
# Warmup Iteration  13: 253736.473 ops/s
# Warmup Iteration  14: 253516.790 ops/s
# Warmup Iteration  15: 253841.085 ops/s
# Warmup Iteration  16: 252603.613 ops/s
# Warmup Iteration  17: 254546.598 ops/s
# Warmup Iteration  18: 256475.889 ops/s
# Warmup Iteration  19: 256617.161 ops/s
# Warmup Iteration  20: 255115.628 ops/s
# Warmup Iteration  21: 256038.309 ops/s
# Warmup Iteration  22: 255711.407 ops/s
# Warmup Iteration  23: 257558.929 ops/s
# Warmup Iteration  24: 257123.035 ops/s
# Warmup Iteration  25: 257817.275 ops/s
# Warmup Iteration  26: 258945.280 ops/s
# Warmup Iteration  27: 258455.290 ops/s
# Warmup Iteration  28: 257586.605 ops/s
# Warmup Iteration  29: 257399.708 ops/s
# Warmup Iteration  30: 256974.836 ops/s
Iteration   1: 257677.927 ops/s
Iteration   2: 254509.307 ops/s
Iteration   3: 256172.111 ops/s
Iteration   4: 255693.588 ops/s
Iteration   5: 257891.607 ops/s
Iteration   6: 257672.943 ops/s
Iteration   7: 257313.959 ops/s
Iteration   8: 255373.816 ops/s
Iteration   9: 255921.344 ops/s
Iteration  10: 255341.803 ops/s
Iteration  11: 254409.510 ops/s
Iteration  12: 255909.456 ops/s
Iteration  13: 257527.919 ops/s
Iteration  14: 258004.584 ops/s
Iteration  15: 257651.541 ops/s
Iteration  16: 255218.911 ops/s
Iteration  17: 253189.867 ops/s
Iteration  18: 254248.042 ops/s
Iteration  19: 254489.778 ops/s
Iteration  20: 254782.143 ops/s
Iteration  21: 256816.270 ops/s
Iteration  22: 255199.646 ops/s
Iteration  23: 254205.135 ops/s
Iteration  24: 252518.425 ops/s
Iteration  25: 251873.574 ops/s
Iteration  26: 256479.649 ops/s
Iteration  27: 252381.277 ops/s
Iteration  28: 253956.297 ops/s
Iteration  29: 253532.204 ops/s
Iteration  30: 252840.158 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1071._Benchmark.benchmark_Cluster_1071":
  255293.426 ±(99.9%) 1198.571 ops/s [Average]
  (min, avg, max) = (251873.574, 255293.426, 258004.584), stdev = 1793.965
  CI (99.9%): [254094.856, 256491.997] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score      Error  Units
Cluster_1071._Benchmark.benchmark_Cluster_1071  thrpt   30  255293.426 ± 1198.571  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1072._Benchmark.benchmark_Cluster_1072$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1072._Benchmark.benchmark_Cluster_1072

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58062.297 ops/s
# Warmup Iteration   2: 87556.318 ops/s
# Warmup Iteration   3: 159493.606 ops/s
# Warmup Iteration   4: 174771.580 ops/s
# Warmup Iteration   5: 172515.433 ops/s
# Warmup Iteration   6: 176751.900 ops/s
# Warmup Iteration   7: 174461.189 ops/s
# Warmup Iteration   8: 174446.931 ops/s
# Warmup Iteration   9: 121039.218 ops/s
# Warmup Iteration  10: 178842.426 ops/s
# Warmup Iteration  11: 176635.631 ops/s
# Warmup Iteration  12: 175319.614 ops/s
# Warmup Iteration  13: 176753.243 ops/s
# Warmup Iteration  14: 175470.680 ops/s
# Warmup Iteration  15: 175740.318 ops/s
# Warmup Iteration  16: 175339.282 ops/s
# Warmup Iteration  17: 174714.846 ops/s
# Warmup Iteration  18: 177147.534 ops/s
# Warmup Iteration  19: 174948.320 ops/s
# Warmup Iteration  20: 175072.655 ops/s
# Warmup Iteration  21: 176880.848 ops/s
# Warmup Iteration  22: 177086.322 ops/s
# Warmup Iteration  23: 176433.314 ops/s
# Warmup Iteration  24: 175075.012 ops/s
# Warmup Iteration  25: 177983.776 ops/s
# Warmup Iteration  26: 177351.776 ops/s
# Warmup Iteration  27: 175397.649 ops/s
# Warmup Iteration  28: 174851.652 ops/s
# Warmup Iteration  29: 175401.003 ops/s
# Warmup Iteration  30: 175193.609 ops/s
Iteration   1: 175192.874 ops/s
Iteration   2: 174871.783 ops/s
Iteration   3: 174331.523 ops/s
Iteration   4: 176170.981 ops/s
Iteration   5: 177005.264 ops/s
Iteration   6: 176077.768 ops/s
Iteration   7: 174983.433 ops/s
Iteration   8: 176928.216 ops/s
Iteration   9: 177887.219 ops/s
Iteration  10: 178379.557 ops/s
Iteration  11: 177120.871 ops/s
Iteration  12: 176800.805 ops/s
Iteration  13: 176648.086 ops/s
Iteration  14: 175615.928 ops/s
Iteration  15: 175108.018 ops/s
Iteration  16: 173799.718 ops/s
Iteration  17: 175206.109 ops/s
Iteration  18: 175765.894 ops/s
Iteration  19: 175537.456 ops/s
Iteration  20: 174903.117 ops/s
Iteration  21: 174946.786 ops/s
Iteration  22: 173239.283 ops/s
Iteration  23: 175327.994 ops/s
Iteration  24: 177272.455 ops/s
Iteration  25: 178244.421 ops/s
Iteration  26: 177934.711 ops/s
Iteration  27: 178168.596 ops/s
Iteration  28: 177094.602 ops/s
Iteration  29: 176894.414 ops/s
Iteration  30: 176657.147 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1072._Benchmark.benchmark_Cluster_1072":
  176137.168 ±(99.9%) 905.146 ops/s [Average]
  (min, avg, max) = (173239.283, 176137.168, 178379.557), stdev = 1354.781
  CI (99.9%): [175232.021, 177042.314] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1072._Benchmark.benchmark_Cluster_1072  thrpt   30  176137.168 ± 905.146  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1073._Benchmark.benchmark_Cluster_1073$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1073._Benchmark.benchmark_Cluster_1073

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58723.115 ops/s
# Warmup Iteration   2: 84132.174 ops/s
# Warmup Iteration   3: 154104.779 ops/s
# Warmup Iteration   4: 167289.726 ops/s
# Warmup Iteration   5: 165269.718 ops/s
# Warmup Iteration   6: 167686.547 ops/s
# Warmup Iteration   7: 167710.473 ops/s
# Warmup Iteration   8: 155900.162 ops/s
# Warmup Iteration   9: 126445.923 ops/s
# Warmup Iteration  10: 167105.647 ops/s
# Warmup Iteration  11: 167232.117 ops/s
# Warmup Iteration  12: 166437.396 ops/s
# Warmup Iteration  13: 166037.121 ops/s
# Warmup Iteration  14: 166429.590 ops/s
# Warmup Iteration  15: 167177.645 ops/s
# Warmup Iteration  16: 166702.733 ops/s
# Warmup Iteration  17: 168912.025 ops/s
# Warmup Iteration  18: 167241.933 ops/s
# Warmup Iteration  19: 168324.203 ops/s
# Warmup Iteration  20: 167767.803 ops/s
# Warmup Iteration  21: 169490.023 ops/s
# Warmup Iteration  22: 168270.713 ops/s
# Warmup Iteration  23: 167525.966 ops/s
# Warmup Iteration  24: 166928.774 ops/s
# Warmup Iteration  25: 168339.082 ops/s
# Warmup Iteration  26: 168396.550 ops/s
# Warmup Iteration  27: 168976.997 ops/s
# Warmup Iteration  28: 168042.988 ops/s
# Warmup Iteration  29: 168340.761 ops/s
# Warmup Iteration  30: 169300.577 ops/s
Iteration   1: 169073.776 ops/s
Iteration   2: 168854.055 ops/s
Iteration   3: 169114.604 ops/s
Iteration   4: 168274.467 ops/s
Iteration   5: 167996.668 ops/s
Iteration   6: 168383.352 ops/s
Iteration   7: 168711.138 ops/s
Iteration   8: 167569.694 ops/s
Iteration   9: 166648.885 ops/s
Iteration  10: 166864.248 ops/s
Iteration  11: 167274.771 ops/s
Iteration  12: 169765.800 ops/s
Iteration  13: 169450.208 ops/s
Iteration  14: 169278.329 ops/s
Iteration  15: 169423.319 ops/s
Iteration  16: 167730.737 ops/s
Iteration  17: 167677.122 ops/s
Iteration  18: 166858.452 ops/s
Iteration  19: 168100.363 ops/s
Iteration  20: 167906.213 ops/s
Iteration  21: 167940.179 ops/s
Iteration  22: 167773.213 ops/s
Iteration  23: 168385.057 ops/s
Iteration  24: 168399.618 ops/s
Iteration  25: 168865.459 ops/s
Iteration  26: 168397.735 ops/s
Iteration  27: 168468.320 ops/s
Iteration  28: 169442.426 ops/s
Iteration  29: 168843.098 ops/s
Iteration  30: 167985.788 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1073._Benchmark.benchmark_Cluster_1073":
  168315.236 ±(99.9%) 545.875 ops/s [Average]
  (min, avg, max) = (166648.885, 168315.236, 169765.800), stdev = 817.040
  CI (99.9%): [167769.361, 168861.112] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1073._Benchmark.benchmark_Cluster_1073  thrpt   30  168315.236 ± 545.875  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1074._Benchmark.benchmark_Cluster_1074$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1074._Benchmark.benchmark_Cluster_1074

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73295.300 ops/s
# Warmup Iteration   2: 98620.285 ops/s
# Warmup Iteration   3: 176501.748 ops/s
# Warmup Iteration   4: 198207.262 ops/s
# Warmup Iteration   5: 196391.844 ops/s
# Warmup Iteration   6: 199990.822 ops/s
# Warmup Iteration   7: 198543.460 ops/s
# Warmup Iteration   8: 196558.686 ops/s
# Warmup Iteration   9: 130866.125 ops/s
# Warmup Iteration  10: 196577.835 ops/s
# Warmup Iteration  11: 198776.165 ops/s
# Warmup Iteration  12: 197362.477 ops/s
# Warmup Iteration  13: 196924.224 ops/s
# Warmup Iteration  14: 196315.918 ops/s
# Warmup Iteration  15: 197108.962 ops/s
# Warmup Iteration  16: 199617.349 ops/s
# Warmup Iteration  17: 199849.889 ops/s
# Warmup Iteration  18: 199802.010 ops/s
# Warmup Iteration  19: 196415.926 ops/s
# Warmup Iteration  20: 197010.852 ops/s
# Warmup Iteration  21: 197490.701 ops/s
# Warmup Iteration  22: 196177.055 ops/s
# Warmup Iteration  23: 196369.795 ops/s
# Warmup Iteration  24: 196671.399 ops/s
# Warmup Iteration  25: 196476.070 ops/s
# Warmup Iteration  26: 197796.400 ops/s
# Warmup Iteration  27: 197311.927 ops/s
# Warmup Iteration  28: 196344.608 ops/s
# Warmup Iteration  29: 195840.255 ops/s
# Warmup Iteration  30: 195889.304 ops/s
Iteration   1: 196827.516 ops/s
Iteration   2: 199611.180 ops/s
Iteration   3: 197705.965 ops/s
Iteration   4: 197859.962 ops/s
Iteration   5: 199858.132 ops/s
Iteration   6: 199025.762 ops/s
Iteration   7: 196685.570 ops/s
Iteration   8: 195271.229 ops/s
Iteration   9: 196091.184 ops/s
Iteration  10: 198183.682 ops/s
Iteration  11: 199403.697 ops/s
Iteration  12: 200198.699 ops/s
Iteration  13: 196571.135 ops/s
Iteration  14: 197761.304 ops/s
Iteration  15: 199433.124 ops/s
Iteration  16: 198982.447 ops/s
Iteration  17: 197371.815 ops/s
Iteration  18: 197056.714 ops/s
Iteration  19: 198244.592 ops/s
Iteration  20: 197173.288 ops/s
Iteration  21: 197948.703 ops/s
Iteration  22: 198825.904 ops/s
Iteration  23: 199689.731 ops/s
Iteration  24: 196784.703 ops/s
Iteration  25: 195675.676 ops/s
Iteration  26: 196443.416 ops/s
Iteration  27: 197384.141 ops/s
Iteration  28: 196815.135 ops/s
Iteration  29: 196878.243 ops/s
Iteration  30: 196565.883 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1074._Benchmark.benchmark_Cluster_1074":
  197744.284 ±(99.9%) 889.140 ops/s [Average]
  (min, avg, max) = (195271.229, 197744.284, 200198.699), stdev = 1330.823
  CI (99.9%): [196855.144, 198633.424] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1074._Benchmark.benchmark_Cluster_1074  thrpt   30  197744.284 ± 889.140  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1075._Benchmark.benchmark_Cluster_1075$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1075._Benchmark.benchmark_Cluster_1075

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50536.599 ops/s
# Warmup Iteration   2: 66448.016 ops/s
# Warmup Iteration   3: 65518.047 ops/s
# Warmup Iteration   4: 98591.078 ops/s
# Warmup Iteration   5: 100344.256 ops/s
# Warmup Iteration   6: 100697.630 ops/s
# Warmup Iteration   7: 99771.559 ops/s
# Warmup Iteration   8: 101064.981 ops/s
# Warmup Iteration   9: 100727.460 ops/s
# Warmup Iteration  10: 100936.358 ops/s
# Warmup Iteration  11: 100730.306 ops/s
# Warmup Iteration  12: 100603.585 ops/s
# Warmup Iteration  13: 100402.236 ops/s
# Warmup Iteration  14: 101448.665 ops/s
# Warmup Iteration  15: 77118.557 ops/s
# Warmup Iteration  16: 92641.050 ops/s
# Warmup Iteration  17: 102220.441 ops/s
# Warmup Iteration  18: 101261.680 ops/s
# Warmup Iteration  19: 100576.651 ops/s
# Warmup Iteration  20: 101341.773 ops/s
# Warmup Iteration  21: 102368.693 ops/s
# Warmup Iteration  22: 101414.107 ops/s
# Warmup Iteration  23: 100944.366 ops/s
# Warmup Iteration  24: 100553.228 ops/s
# Warmup Iteration  25: 101868.071 ops/s
# Warmup Iteration  26: 101458.318 ops/s
# Warmup Iteration  27: 101175.102 ops/s
# Warmup Iteration  28: 100609.340 ops/s
# Warmup Iteration  29: 100656.149 ops/s
# Warmup Iteration  30: 101694.785 ops/s
Iteration   1: 101477.171 ops/s
Iteration   2: 100917.768 ops/s
Iteration   3: 101151.533 ops/s
Iteration   4: 101138.016 ops/s
Iteration   5: 100430.289 ops/s
Iteration   6: 100583.197 ops/s
Iteration   7: 100241.667 ops/s
Iteration   8: 100555.647 ops/s
Iteration   9: 100676.347 ops/s
Iteration  10: 100635.191 ops/s
Iteration  11: 100802.875 ops/s
Iteration  12: 100810.421 ops/s
Iteration  13: 100885.675 ops/s
Iteration  14: 100636.375 ops/s
Iteration  15: 100117.667 ops/s
Iteration  16: 100055.772 ops/s
Iteration  17: 100051.258 ops/s
Iteration  18: 100740.484 ops/s
Iteration  19: 100787.794 ops/s
Iteration  20: 101286.643 ops/s
Iteration  21: 100895.729 ops/s
Iteration  22: 101979.414 ops/s
Iteration  23: 101941.271 ops/s
Iteration  24: 102252.523 ops/s
Iteration  25: 102582.850 ops/s
Iteration  26: 102488.818 ops/s
Iteration  27: 102389.059 ops/s
Iteration  28: 101363.280 ops/s
Iteration  29: 100687.110 ops/s
Iteration  30: 101621.382 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1075._Benchmark.benchmark_Cluster_1075":
  101072.774 ±(99.9%) 485.339 ops/s [Average]
  (min, avg, max) = (100051.258, 101072.774, 102582.850), stdev = 726.433
  CI (99.9%): [100587.435, 101558.114] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1075._Benchmark.benchmark_Cluster_1075  thrpt   30  101072.774 ± 485.339  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1076._Benchmark.benchmark_Cluster_1076$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1076._Benchmark.benchmark_Cluster_1076

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 88163.473 ops/s
# Warmup Iteration   2: 121365.756 ops/s
# Warmup Iteration   3: 121808.799 ops/s
# Warmup Iteration   4: 184855.915 ops/s
# Warmup Iteration   5: 189773.030 ops/s
# Warmup Iteration   6: 189867.992 ops/s
# Warmup Iteration   7: 185313.565 ops/s
# Warmup Iteration   8: 189014.836 ops/s
# Warmup Iteration   9: 190053.067 ops/s
# Warmup Iteration  10: 192209.515 ops/s
# Warmup Iteration  11: 192101.961 ops/s
# Warmup Iteration  12: 190633.479 ops/s
# Warmup Iteration  13: 189106.473 ops/s
# Warmup Iteration  14: 179089.908 ops/s
# Warmup Iteration  15: 139472.463 ops/s
# Warmup Iteration  16: 191238.674 ops/s
# Warmup Iteration  17: 194900.124 ops/s
# Warmup Iteration  18: 193146.243 ops/s
# Warmup Iteration  19: 193518.256 ops/s
# Warmup Iteration  20: 193725.443 ops/s
# Warmup Iteration  21: 194181.156 ops/s
# Warmup Iteration  22: 195372.033 ops/s
# Warmup Iteration  23: 194722.077 ops/s
# Warmup Iteration  24: 194909.107 ops/s
# Warmup Iteration  25: 193369.644 ops/s
# Warmup Iteration  26: 195590.547 ops/s
# Warmup Iteration  27: 194257.032 ops/s
# Warmup Iteration  28: 196374.248 ops/s
# Warmup Iteration  29: 195384.853 ops/s
# Warmup Iteration  30: 196870.235 ops/s
Iteration   1: 195558.084 ops/s
Iteration   2: 194704.344 ops/s
Iteration   3: 194029.959 ops/s
Iteration   4: 195716.724 ops/s
Iteration   5: 194685.015 ops/s
Iteration   6: 195100.477 ops/s
Iteration   7: 195337.485 ops/s
Iteration   8: 195467.981 ops/s
Iteration   9: 194876.658 ops/s
Iteration  10: 195489.178 ops/s
Iteration  11: 197116.502 ops/s
Iteration  12: 197179.939 ops/s
Iteration  13: 196204.888 ops/s
Iteration  14: 195278.722 ops/s
Iteration  15: 192731.749 ops/s
Iteration  16: 194452.014 ops/s
Iteration  17: 196800.295 ops/s
Iteration  18: 197403.638 ops/s
Iteration  19: 196825.939 ops/s
Iteration  20: 197425.656 ops/s
Iteration  21: 195667.927 ops/s
Iteration  22: 194766.126 ops/s
Iteration  23: 194282.946 ops/s
Iteration  24: 197447.400 ops/s
Iteration  25: 197787.713 ops/s
Iteration  26: 197964.500 ops/s
Iteration  27: 195883.319 ops/s
Iteration  28: 197004.141 ops/s
Iteration  29: 195446.112 ops/s
Iteration  30: 194408.674 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1076._Benchmark.benchmark_Cluster_1076":
  195768.137 ±(99.9%) 861.357 ops/s [Average]
  (min, avg, max) = (192731.749, 195768.137, 197964.500), stdev = 1289.238
  CI (99.9%): [194906.780, 196629.493] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1076._Benchmark.benchmark_Cluster_1076  thrpt   30  195768.137 ± 861.357  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1077._Benchmark.benchmark_Cluster_1077$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1077._Benchmark.benchmark_Cluster_1077

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66524.781 ops/s
# Warmup Iteration   2: 89579.267 ops/s
# Warmup Iteration   3: 162570.884 ops/s
# Warmup Iteration   4: 183436.792 ops/s
# Warmup Iteration   5: 182094.970 ops/s
# Warmup Iteration   6: 183192.843 ops/s
# Warmup Iteration   7: 183042.674 ops/s
# Warmup Iteration   8: 182390.796 ops/s
# Warmup Iteration   9: 121141.834 ops/s
# Warmup Iteration  10: 182396.014 ops/s
# Warmup Iteration  11: 181582.085 ops/s
# Warmup Iteration  12: 182101.409 ops/s
# Warmup Iteration  13: 182156.990 ops/s
# Warmup Iteration  14: 183937.202 ops/s
# Warmup Iteration  15: 182486.031 ops/s
# Warmup Iteration  16: 183531.043 ops/s
# Warmup Iteration  17: 181805.334 ops/s
# Warmup Iteration  18: 184164.503 ops/s
# Warmup Iteration  19: 184194.586 ops/s
# Warmup Iteration  20: 184250.408 ops/s
# Warmup Iteration  21: 184253.031 ops/s
# Warmup Iteration  22: 184585.215 ops/s
# Warmup Iteration  23: 184293.700 ops/s
# Warmup Iteration  24: 183956.648 ops/s
# Warmup Iteration  25: 184252.027 ops/s
# Warmup Iteration  26: 184498.360 ops/s
# Warmup Iteration  27: 183521.654 ops/s
# Warmup Iteration  28: 183208.469 ops/s
# Warmup Iteration  29: 184138.392 ops/s
# Warmup Iteration  30: 183977.549 ops/s
Iteration   1: 184148.927 ops/s
Iteration   2: 183691.357 ops/s
Iteration   3: 182761.868 ops/s
Iteration   4: 183237.506 ops/s
Iteration   5: 182389.965 ops/s
Iteration   6: 183565.601 ops/s
Iteration   7: 183694.343 ops/s
Iteration   8: 182973.454 ops/s
Iteration   9: 182997.967 ops/s
Iteration  10: 183162.626 ops/s
Iteration  11: 182477.112 ops/s
Iteration  12: 181547.924 ops/s
Iteration  13: 183035.694 ops/s
Iteration  14: 182453.551 ops/s
Iteration  15: 182687.406 ops/s
Iteration  16: 182232.962 ops/s
Iteration  17: 182304.449 ops/s
Iteration  18: 182034.464 ops/s
Iteration  19: 181931.418 ops/s
Iteration  20: 183182.825 ops/s
Iteration  21: 182594.601 ops/s
Iteration  22: 181263.448 ops/s
Iteration  23: 181226.141 ops/s
Iteration  24: 183744.990 ops/s
Iteration  25: 183943.751 ops/s
Iteration  26: 183478.680 ops/s
Iteration  27: 184336.563 ops/s
Iteration  28: 183089.505 ops/s
Iteration  29: 182832.560 ops/s
Iteration  30: 183748.409 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1077._Benchmark.benchmark_Cluster_1077":
  182892.336 ±(99.9%) 542.321 ops/s [Average]
  (min, avg, max) = (181226.141, 182892.336, 184336.563), stdev = 811.721
  CI (99.9%): [182350.015, 183434.657] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1077._Benchmark.benchmark_Cluster_1077  thrpt   30  182892.336 ± 542.321  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1078._Benchmark.benchmark_Cluster_1078$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1078._Benchmark.benchmark_Cluster_1078

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69221.602 ops/s
# Warmup Iteration   2: 109221.161 ops/s
# Warmup Iteration   3: 126071.274 ops/s
# Warmup Iteration   4: 181499.028 ops/s
# Warmup Iteration   5: 181622.934 ops/s
# Warmup Iteration   6: 178753.680 ops/s
# Warmup Iteration   7: 181668.803 ops/s
# Warmup Iteration   8: 181655.316 ops/s
# Warmup Iteration   9: 180723.552 ops/s
# Warmup Iteration  10: 180360.278 ops/s
# Warmup Iteration  11: 180480.655 ops/s
# Warmup Iteration  12: 164707.291 ops/s
# Warmup Iteration  13: 140901.014 ops/s
# Warmup Iteration  14: 180325.954 ops/s
# Warmup Iteration  15: 180025.306 ops/s
# Warmup Iteration  16: 180754.759 ops/s
# Warmup Iteration  17: 180858.116 ops/s
# Warmup Iteration  18: 180542.740 ops/s
# Warmup Iteration  19: 180787.912 ops/s
# Warmup Iteration  20: 181184.854 ops/s
# Warmup Iteration  21: 180329.246 ops/s
# Warmup Iteration  22: 180748.559 ops/s
# Warmup Iteration  23: 179587.996 ops/s
# Warmup Iteration  24: 180493.877 ops/s
# Warmup Iteration  25: 180161.814 ops/s
# Warmup Iteration  26: 179880.342 ops/s
# Warmup Iteration  27: 180211.994 ops/s
# Warmup Iteration  28: 180840.754 ops/s
# Warmup Iteration  29: 180605.852 ops/s
# Warmup Iteration  30: 180915.608 ops/s
Iteration   1: 181023.963 ops/s
Iteration   2: 180672.108 ops/s
Iteration   3: 181063.103 ops/s
Iteration   4: 181003.890 ops/s
Iteration   5: 181144.800 ops/s
Iteration   6: 180001.902 ops/s
Iteration   7: 180826.677 ops/s
Iteration   8: 180887.291 ops/s
Iteration   9: 181313.846 ops/s
Iteration  10: 181175.228 ops/s
Iteration  11: 181020.111 ops/s
Iteration  12: 180887.303 ops/s
Iteration  13: 180432.294 ops/s
Iteration  14: 180910.014 ops/s
Iteration  15: 181631.890 ops/s
Iteration  16: 181391.505 ops/s
Iteration  17: 181586.202 ops/s
Iteration  18: 180857.991 ops/s
Iteration  19: 180742.119 ops/s
Iteration  20: 180272.021 ops/s
Iteration  21: 180514.471 ops/s
Iteration  22: 180256.444 ops/s
Iteration  23: 180084.913 ops/s
Iteration  24: 181050.063 ops/s
Iteration  25: 180967.544 ops/s
Iteration  26: 180182.533 ops/s
Iteration  27: 180057.303 ops/s
Iteration  28: 180455.244 ops/s
Iteration  29: 180712.262 ops/s
Iteration  30: 180786.063 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1078._Benchmark.benchmark_Cluster_1078":
  180797.037 ±(99.9%) 291.844 ops/s [Average]
  (min, avg, max) = (180001.902, 180797.037, 181631.890), stdev = 436.818
  CI (99.9%): [180505.193, 181088.880] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1078._Benchmark.benchmark_Cluster_1078  thrpt   30  180797.037 ± 291.844  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1079._Benchmark.benchmark_Cluster_1079$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1079._Benchmark.benchmark_Cluster_1079

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55490.253 ops/s
# Warmup Iteration   2: 90789.676 ops/s
# Warmup Iteration   3: 135550.853 ops/s
# Warmup Iteration   4: 172008.406 ops/s
# Warmup Iteration   5: 170969.396 ops/s
# Warmup Iteration   6: 173004.372 ops/s
# Warmup Iteration   7: 172974.345 ops/s
# Warmup Iteration   8: 172843.643 ops/s
# Warmup Iteration   9: 172864.810 ops/s
# Warmup Iteration  10: 117275.010 ops/s
# Warmup Iteration  11: 172399.112 ops/s
# Warmup Iteration  12: 172250.321 ops/s
# Warmup Iteration  13: 172349.167 ops/s
# Warmup Iteration  14: 172292.814 ops/s
# Warmup Iteration  15: 172352.664 ops/s
# Warmup Iteration  16: 171915.570 ops/s
# Warmup Iteration  17: 172807.274 ops/s
# Warmup Iteration  18: 172627.914 ops/s
# Warmup Iteration  19: 172563.146 ops/s
# Warmup Iteration  20: 172383.965 ops/s
# Warmup Iteration  21: 172145.113 ops/s
# Warmup Iteration  22: 172725.628 ops/s
# Warmup Iteration  23: 172643.956 ops/s
# Warmup Iteration  24: 172366.574 ops/s
# Warmup Iteration  25: 172233.864 ops/s
# Warmup Iteration  26: 171043.161 ops/s
# Warmup Iteration  27: 172566.975 ops/s
# Warmup Iteration  28: 170468.323 ops/s
# Warmup Iteration  29: 172690.112 ops/s
# Warmup Iteration  30: 172067.187 ops/s
Iteration   1: 171455.095 ops/s
Iteration   2: 172198.449 ops/s
Iteration   3: 170930.388 ops/s
Iteration   4: 170845.714 ops/s
Iteration   5: 170315.525 ops/s
Iteration   6: 172212.779 ops/s
Iteration   7: 171722.434 ops/s
Iteration   8: 170945.635 ops/s
Iteration   9: 170666.976 ops/s
Iteration  10: 170411.273 ops/s
Iteration  11: 170208.276 ops/s
Iteration  12: 170173.689 ops/s
Iteration  13: 170317.870 ops/s
Iteration  14: 171347.450 ops/s
Iteration  15: 172061.738 ops/s
Iteration  16: 170532.300 ops/s
Iteration  17: 171775.606 ops/s
Iteration  18: 171163.387 ops/s
Iteration  19: 172065.671 ops/s
Iteration  20: 171593.562 ops/s
Iteration  21: 172518.348 ops/s
Iteration  22: 172686.601 ops/s
Iteration  23: 171692.527 ops/s
Iteration  24: 171807.333 ops/s
Iteration  25: 170712.865 ops/s
Iteration  26: 170371.014 ops/s
Iteration  27: 171588.323 ops/s
Iteration  28: 170233.803 ops/s
Iteration  29: 170785.100 ops/s
Iteration  30: 170620.192 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1079._Benchmark.benchmark_Cluster_1079":
  171198.664 ±(99.9%) 506.252 ops/s [Average]
  (min, avg, max) = (170173.689, 171198.664, 172686.601), stdev = 757.735
  CI (99.9%): [170692.412, 171704.917] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1079._Benchmark.benchmark_Cluster_1079  thrpt   30  171198.664 ± 506.252  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_108._Benchmark.benchmark_Cluster_108$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_108._Benchmark.benchmark_Cluster_108

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71320.241 ops/s
# Warmup Iteration   2: 85906.887 ops/s
# Warmup Iteration   3: 87995.628 ops/s
# Warmup Iteration   4: 100697.901 ops/s
# Warmup Iteration   5: 124381.702 ops/s
# Warmup Iteration   6: 124255.676 ops/s
# Warmup Iteration   7: 124525.631 ops/s
# Warmup Iteration   8: 123017.712 ops/s
# Warmup Iteration   9: 121761.370 ops/s
# Warmup Iteration  10: 124000.818 ops/s
# Warmup Iteration  11: 123810.492 ops/s
# Warmup Iteration  12: 123311.901 ops/s
# Warmup Iteration  13: 123561.889 ops/s
# Warmup Iteration  14: 123775.114 ops/s
# Warmup Iteration  15: 122767.367 ops/s
# Warmup Iteration  16: 122474.999 ops/s
# Warmup Iteration  17: 129350.421 ops/s
# Warmup Iteration  18: 129394.905 ops/s
# Warmup Iteration  19: 98132.287 ops/s
# Warmup Iteration  20: 115999.200 ops/s
# Warmup Iteration  21: 128810.905 ops/s
# Warmup Iteration  22: 128730.045 ops/s
# Warmup Iteration  23: 129078.867 ops/s
# Warmup Iteration  24: 129059.202 ops/s
# Warmup Iteration  25: 128486.082 ops/s
# Warmup Iteration  26: 128447.371 ops/s
# Warmup Iteration  27: 128354.924 ops/s
# Warmup Iteration  28: 128464.116 ops/s
# Warmup Iteration  29: 128934.541 ops/s
# Warmup Iteration  30: 129199.978 ops/s
Iteration   1: 127996.769 ops/s
Iteration   2: 128894.745 ops/s
Iteration   3: 128783.441 ops/s
Iteration   4: 127785.418 ops/s
Iteration   5: 129726.258 ops/s
Iteration   6: 127454.054 ops/s
Iteration   7: 128264.072 ops/s
Iteration   8: 127858.854 ops/s
Iteration   9: 127487.878 ops/s
Iteration  10: 129308.834 ops/s
Iteration  11: 128988.805 ops/s
Iteration  12: 129850.913 ops/s
Iteration  13: 129569.758 ops/s
Iteration  14: 129004.422 ops/s
Iteration  15: 128872.219 ops/s
Iteration  16: 128412.317 ops/s
Iteration  17: 128133.677 ops/s
Iteration  18: 128253.899 ops/s
Iteration  19: 128660.969 ops/s
Iteration  20: 127960.429 ops/s
Iteration  21: 129730.692 ops/s
Iteration  22: 129964.353 ops/s
Iteration  23: 129951.760 ops/s
Iteration  24: 129733.412 ops/s
Iteration  25: 130196.035 ops/s
Iteration  26: 128940.836 ops/s
Iteration  27: 128852.029 ops/s
Iteration  28: 129955.161 ops/s
Iteration  29: 129830.747 ops/s
Iteration  30: 128276.466 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_108._Benchmark.benchmark_Cluster_108":
  128889.974 ±(99.9%) 550.974 ops/s [Average]
  (min, avg, max) = (127454.054, 128889.974, 130196.035), stdev = 824.672
  CI (99.9%): [128339.000, 129440.948] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_108._Benchmark.benchmark_Cluster_108  thrpt   30  128889.974 ± 550.974  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1080._Benchmark.benchmark_Cluster_1080$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1080._Benchmark.benchmark_Cluster_1080

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69508.743 ops/s
# Warmup Iteration   2: 90886.468 ops/s
# Warmup Iteration   3: 134621.518 ops/s
# Warmup Iteration   4: 167641.915 ops/s
# Warmup Iteration   5: 164747.782 ops/s
# Warmup Iteration   6: 167223.731 ops/s
# Warmup Iteration   7: 166969.642 ops/s
# Warmup Iteration   8: 167422.116 ops/s
# Warmup Iteration   9: 168237.561 ops/s
# Warmup Iteration  10: 142746.808 ops/s
# Warmup Iteration  11: 137881.300 ops/s
# Warmup Iteration  12: 167814.243 ops/s
# Warmup Iteration  13: 167981.896 ops/s
# Warmup Iteration  14: 166616.183 ops/s
# Warmup Iteration  15: 167192.242 ops/s
# Warmup Iteration  16: 167520.080 ops/s
# Warmup Iteration  17: 168285.997 ops/s
# Warmup Iteration  18: 168386.949 ops/s
# Warmup Iteration  19: 167940.106 ops/s
# Warmup Iteration  20: 169738.462 ops/s
# Warmup Iteration  21: 170080.219 ops/s
# Warmup Iteration  22: 168859.207 ops/s
# Warmup Iteration  23: 168412.210 ops/s
# Warmup Iteration  24: 168083.355 ops/s
# Warmup Iteration  25: 168901.123 ops/s
# Warmup Iteration  26: 170055.281 ops/s
# Warmup Iteration  27: 168516.749 ops/s
# Warmup Iteration  28: 168325.032 ops/s
# Warmup Iteration  29: 168610.120 ops/s
# Warmup Iteration  30: 168361.094 ops/s
Iteration   1: 169265.142 ops/s
Iteration   2: 169791.675 ops/s
Iteration   3: 169620.622 ops/s
Iteration   4: 167788.290 ops/s
Iteration   5: 168294.775 ops/s
Iteration   6: 169223.416 ops/s
Iteration   7: 168977.753 ops/s
Iteration   8: 168761.421 ops/s
Iteration   9: 169384.313 ops/s
Iteration  10: 169309.820 ops/s
Iteration  11: 169959.433 ops/s
Iteration  12: 169903.623 ops/s
Iteration  13: 169205.657 ops/s
Iteration  14: 169041.251 ops/s
Iteration  15: 168589.949 ops/s
Iteration  16: 167629.960 ops/s
Iteration  17: 169081.536 ops/s
Iteration  18: 168816.135 ops/s
Iteration  19: 168903.093 ops/s
Iteration  20: 168439.737 ops/s
Iteration  21: 169683.743 ops/s
Iteration  22: 169723.180 ops/s
Iteration  23: 170224.349 ops/s
Iteration  24: 169934.817 ops/s
Iteration  25: 170002.107 ops/s
Iteration  26: 169805.475 ops/s
Iteration  27: 169862.822 ops/s
Iteration  28: 169356.907 ops/s
Iteration  29: 169061.388 ops/s
Iteration  30: 169252.890 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1080._Benchmark.benchmark_Cluster_1080":
  169229.843 ±(99.9%) 429.057 ops/s [Average]
  (min, avg, max) = (167629.960, 169229.843, 170224.349), stdev = 642.192
  CI (99.9%): [168800.786, 169658.899] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1080._Benchmark.benchmark_Cluster_1080  thrpt   30  169229.843 ± 429.057  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1081._Benchmark.benchmark_Cluster_1081$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1081._Benchmark.benchmark_Cluster_1081

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73750.632 ops/s
# Warmup Iteration   2: 105053.972 ops/s
# Warmup Iteration   3: 140535.645 ops/s
# Warmup Iteration   4: 186384.293 ops/s
# Warmup Iteration   5: 188815.598 ops/s
# Warmup Iteration   6: 186162.540 ops/s
# Warmup Iteration   7: 187033.971 ops/s
# Warmup Iteration   8: 185432.171 ops/s
# Warmup Iteration   9: 186160.192 ops/s
# Warmup Iteration  10: 188796.921 ops/s
# Warmup Iteration  11: 132884.692 ops/s
# Warmup Iteration  12: 183839.613 ops/s
# Warmup Iteration  13: 186867.768 ops/s
# Warmup Iteration  14: 186360.491 ops/s
# Warmup Iteration  15: 186847.001 ops/s
# Warmup Iteration  16: 187229.473 ops/s
# Warmup Iteration  17: 187388.994 ops/s
# Warmup Iteration  18: 187685.258 ops/s
# Warmup Iteration  19: 187729.078 ops/s
# Warmup Iteration  20: 186624.919 ops/s
# Warmup Iteration  21: 187197.866 ops/s
# Warmup Iteration  22: 187132.447 ops/s
# Warmup Iteration  23: 186889.486 ops/s
# Warmup Iteration  24: 186847.552 ops/s
# Warmup Iteration  25: 188115.950 ops/s
# Warmup Iteration  26: 189466.281 ops/s
# Warmup Iteration  27: 189577.180 ops/s
# Warmup Iteration  28: 189045.506 ops/s
# Warmup Iteration  29: 187679.720 ops/s
# Warmup Iteration  30: 188235.433 ops/s
Iteration   1: 187357.669 ops/s
Iteration   2: 189506.170 ops/s
Iteration   3: 189468.819 ops/s
Iteration   4: 188095.517 ops/s
Iteration   5: 187712.511 ops/s
Iteration   6: 187790.191 ops/s
Iteration   7: 187408.782 ops/s
Iteration   8: 187725.439 ops/s
Iteration   9: 189205.079 ops/s
Iteration  10: 189676.702 ops/s
Iteration  11: 189250.462 ops/s
Iteration  12: 189054.988 ops/s
Iteration  13: 189059.169 ops/s
Iteration  14: 189323.436 ops/s
Iteration  15: 189386.338 ops/s
Iteration  16: 189099.998 ops/s
Iteration  17: 186017.297 ops/s
Iteration  18: 186461.464 ops/s
Iteration  19: 188796.633 ops/s
Iteration  20: 188725.850 ops/s
Iteration  21: 186581.343 ops/s
Iteration  22: 187581.011 ops/s
Iteration  23: 188362.368 ops/s
Iteration  24: 189489.848 ops/s
Iteration  25: 188347.196 ops/s
Iteration  26: 187753.058 ops/s
Iteration  27: 188642.175 ops/s
Iteration  28: 189269.542 ops/s
Iteration  29: 187080.768 ops/s
Iteration  30: 187467.368 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1081._Benchmark.benchmark_Cluster_1081":
  188323.240 ±(99.9%) 685.660 ops/s [Average]
  (min, avg, max) = (186017.297, 188323.240, 189676.702), stdev = 1026.264
  CI (99.9%): [187637.579, 189008.900] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1081._Benchmark.benchmark_Cluster_1081  thrpt   30  188323.240 ± 685.660  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1082._Benchmark.benchmark_Cluster_1082$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1082._Benchmark.benchmark_Cluster_1082

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60124.780 ops/s
# Warmup Iteration   2: 95365.350 ops/s
# Warmup Iteration   3: 155141.650 ops/s
# Warmup Iteration   4: 185635.144 ops/s
# Warmup Iteration   5: 182490.446 ops/s
# Warmup Iteration   6: 185242.944 ops/s
# Warmup Iteration   7: 184757.107 ops/s
# Warmup Iteration   8: 185567.676 ops/s
# Warmup Iteration   9: 149858.047 ops/s
# Warmup Iteration  10: 163486.258 ops/s
# Warmup Iteration  11: 187236.601 ops/s
# Warmup Iteration  12: 187275.927 ops/s
# Warmup Iteration  13: 187381.099 ops/s
# Warmup Iteration  14: 187188.343 ops/s
# Warmup Iteration  15: 185523.533 ops/s
# Warmup Iteration  16: 185454.399 ops/s
# Warmup Iteration  17: 186604.750 ops/s
# Warmup Iteration  18: 187152.422 ops/s
# Warmup Iteration  19: 187845.350 ops/s
# Warmup Iteration  20: 188300.323 ops/s
# Warmup Iteration  21: 187916.864 ops/s
# Warmup Iteration  22: 188060.928 ops/s
# Warmup Iteration  23: 187336.424 ops/s
# Warmup Iteration  24: 187287.068 ops/s
# Warmup Iteration  25: 186496.017 ops/s
# Warmup Iteration  26: 186224.578 ops/s
# Warmup Iteration  27: 187796.899 ops/s
# Warmup Iteration  28: 187250.100 ops/s
# Warmup Iteration  29: 186814.500 ops/s
# Warmup Iteration  30: 186172.978 ops/s
Iteration   1: 185893.566 ops/s
Iteration   2: 188003.309 ops/s
Iteration   3: 188074.733 ops/s
Iteration   4: 188025.979 ops/s
Iteration   5: 188051.034 ops/s
Iteration   6: 186953.358 ops/s
Iteration   7: 186916.595 ops/s
Iteration   8: 186612.568 ops/s
Iteration   9: 185803.039 ops/s
Iteration  10: 186418.418 ops/s
Iteration  11: 186829.659 ops/s
Iteration  12: 186796.554 ops/s
Iteration  13: 186288.479 ops/s
Iteration  14: 186495.496 ops/s
Iteration  15: 186706.991 ops/s
Iteration  16: 186587.886 ops/s
Iteration  17: 187750.662 ops/s
Iteration  18: 187765.535 ops/s
Iteration  19: 188290.726 ops/s
Iteration  20: 188031.886 ops/s
Iteration  21: 187944.854 ops/s
Iteration  22: 187982.869 ops/s
Iteration  23: 187233.430 ops/s
Iteration  24: 187149.219 ops/s
Iteration  25: 186625.818 ops/s
Iteration  26: 186384.347 ops/s
Iteration  27: 185983.828 ops/s
Iteration  28: 186982.122 ops/s
Iteration  29: 186753.936 ops/s
Iteration  30: 187060.087 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1082._Benchmark.benchmark_Cluster_1082":
  187079.899 ±(99.9%) 493.161 ops/s [Average]
  (min, avg, max) = (185803.039, 187079.899, 188290.726), stdev = 738.141
  CI (99.9%): [186586.738, 187573.061] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1082._Benchmark.benchmark_Cluster_1082  thrpt   30  187079.899 ± 493.161  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1083._Benchmark.benchmark_Cluster_1083$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1083._Benchmark.benchmark_Cluster_1083

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 133494.893 ops/s
# Warmup Iteration   2: 144885.873 ops/s
# Warmup Iteration   3: 146459.944 ops/s
# Warmup Iteration   4: 146810.945 ops/s
# Warmup Iteration   5: 181359.872 ops/s
# Warmup Iteration   6: 197098.488 ops/s
# Warmup Iteration   7: 197402.774 ops/s
# Warmup Iteration   8: 197122.833 ops/s
# Warmup Iteration   9: 197645.149 ops/s
# Warmup Iteration  10: 196339.686 ops/s
# Warmup Iteration  11: 193593.098 ops/s
# Warmup Iteration  12: 195123.855 ops/s
# Warmup Iteration  13: 195292.332 ops/s
# Warmup Iteration  14: 194638.335 ops/s
# Warmup Iteration  15: 194935.557 ops/s
# Warmup Iteration  16: 195675.916 ops/s
# Warmup Iteration  17: 203505.855 ops/s
# Warmup Iteration  18: 202047.542 ops/s
# Warmup Iteration  19: 202976.179 ops/s
# Warmup Iteration  20: 202477.823 ops/s
# Warmup Iteration  21: 202545.751 ops/s
# Warmup Iteration  22: 203221.159 ops/s
# Warmup Iteration  23: 199966.242 ops/s
# Warmup Iteration  24: 151932.576 ops/s
# Warmup Iteration  25: 191408.905 ops/s
# Warmup Iteration  26: 203565.181 ops/s
# Warmup Iteration  27: 204552.272 ops/s
# Warmup Iteration  28: 201274.012 ops/s
# Warmup Iteration  29: 202865.588 ops/s
# Warmup Iteration  30: 204196.178 ops/s
Iteration   1: 204679.723 ops/s
Iteration   2: 204038.178 ops/s
Iteration   3: 204029.691 ops/s
Iteration   4: 203278.616 ops/s
Iteration   5: 203085.578 ops/s
Iteration   6: 203601.159 ops/s
Iteration   7: 203873.166 ops/s
Iteration   8: 203962.813 ops/s
Iteration   9: 204355.013 ops/s
Iteration  10: 202166.866 ops/s
Iteration  11: 202993.357 ops/s
Iteration  12: 204303.589 ops/s
Iteration  13: 202750.282 ops/s
Iteration  14: 203924.267 ops/s
Iteration  15: 203939.737 ops/s
Iteration  16: 204044.571 ops/s
Iteration  17: 204989.556 ops/s
Iteration  18: 205260.001 ops/s
Iteration  19: 205086.246 ops/s
Iteration  20: 202182.768 ops/s
Iteration  21: 201367.198 ops/s
Iteration  22: 203617.993 ops/s
Iteration  23: 204139.694 ops/s
Iteration  24: 202303.682 ops/s
Iteration  25: 201591.144 ops/s
Iteration  26: 201606.563 ops/s
Iteration  27: 201911.440 ops/s
Iteration  28: 202204.197 ops/s
Iteration  29: 200165.638 ops/s
Iteration  30: 201821.797 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1083._Benchmark.benchmark_Cluster_1083":
  203242.484 ±(99.9%) 846.344 ops/s [Average]
  (min, avg, max) = (200165.638, 203242.484, 205260.001), stdev = 1266.768
  CI (99.9%): [202396.140, 204088.828] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1083._Benchmark.benchmark_Cluster_1083  thrpt   30  203242.484 ± 846.344  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1084._Benchmark.benchmark_Cluster_1084$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1084._Benchmark.benchmark_Cluster_1084

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76929.799 ops/s
# Warmup Iteration   2: 101052.684 ops/s
# Warmup Iteration   3: 119885.606 ops/s
# Warmup Iteration   4: 173514.467 ops/s
# Warmup Iteration   5: 172070.389 ops/s
# Warmup Iteration   6: 169378.101 ops/s
# Warmup Iteration   7: 173324.150 ops/s
# Warmup Iteration   8: 174006.595 ops/s
# Warmup Iteration   9: 173270.040 ops/s
# Warmup Iteration  10: 175059.817 ops/s
# Warmup Iteration  11: 173575.930 ops/s
# Warmup Iteration  12: 146616.200 ops/s
# Warmup Iteration  13: 141033.180 ops/s
# Warmup Iteration  14: 173257.988 ops/s
# Warmup Iteration  15: 172468.213 ops/s
# Warmup Iteration  16: 172019.648 ops/s
# Warmup Iteration  17: 175130.056 ops/s
# Warmup Iteration  18: 176462.411 ops/s
# Warmup Iteration  19: 176028.336 ops/s
# Warmup Iteration  20: 175835.164 ops/s
# Warmup Iteration  21: 175916.697 ops/s
# Warmup Iteration  22: 176139.267 ops/s
# Warmup Iteration  23: 176483.460 ops/s
# Warmup Iteration  24: 175445.271 ops/s
# Warmup Iteration  25: 175510.981 ops/s
# Warmup Iteration  26: 176173.015 ops/s
# Warmup Iteration  27: 175364.834 ops/s
# Warmup Iteration  28: 175189.655 ops/s
# Warmup Iteration  29: 175376.732 ops/s
# Warmup Iteration  30: 174743.001 ops/s
Iteration   1: 174588.213 ops/s
Iteration   2: 176894.286 ops/s
Iteration   3: 176974.298 ops/s
Iteration   4: 176171.007 ops/s
Iteration   5: 175640.109 ops/s
Iteration   6: 176289.913 ops/s
Iteration   7: 176341.198 ops/s
Iteration   8: 176043.441 ops/s
Iteration   9: 174704.080 ops/s
Iteration  10: 176707.084 ops/s
Iteration  11: 176266.629 ops/s
Iteration  12: 176242.121 ops/s
Iteration  13: 175472.316 ops/s
Iteration  14: 175667.384 ops/s
Iteration  15: 176592.716 ops/s
Iteration  16: 176496.280 ops/s
Iteration  17: 175630.850 ops/s
Iteration  18: 176627.184 ops/s
Iteration  19: 176825.996 ops/s
Iteration  20: 176540.403 ops/s
Iteration  21: 176594.215 ops/s
Iteration  22: 177459.495 ops/s
Iteration  23: 177049.067 ops/s
Iteration  24: 176930.769 ops/s
Iteration  25: 176191.394 ops/s
Iteration  26: 175733.168 ops/s
Iteration  27: 175582.704 ops/s
Iteration  28: 176010.206 ops/s
Iteration  29: 176576.656 ops/s
Iteration  30: 176393.583 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1084._Benchmark.benchmark_Cluster_1084":
  176241.225 ±(99.9%) 436.472 ops/s [Average]
  (min, avg, max) = (174588.213, 176241.225, 177459.495), stdev = 653.291
  CI (99.9%): [175804.753, 176677.698] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1084._Benchmark.benchmark_Cluster_1084  thrpt   30  176241.225 ± 436.472  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1085._Benchmark.benchmark_Cluster_1085$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1085._Benchmark.benchmark_Cluster_1085

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54832.510 ops/s
# Warmup Iteration   2: 93607.985 ops/s
# Warmup Iteration   3: 162508.266 ops/s
# Warmup Iteration   4: 191083.177 ops/s
# Warmup Iteration   5: 189022.406 ops/s
# Warmup Iteration   6: 190805.499 ops/s
# Warmup Iteration   7: 190078.780 ops/s
# Warmup Iteration   8: 184967.378 ops/s
# Warmup Iteration   9: 133458.115 ops/s
# Warmup Iteration  10: 189452.409 ops/s
# Warmup Iteration  11: 190466.276 ops/s
# Warmup Iteration  12: 189944.808 ops/s
# Warmup Iteration  13: 189577.310 ops/s
# Warmup Iteration  14: 189677.601 ops/s
# Warmup Iteration  15: 190378.441 ops/s
# Warmup Iteration  16: 190076.703 ops/s
# Warmup Iteration  17: 188484.996 ops/s
# Warmup Iteration  18: 189528.442 ops/s
# Warmup Iteration  19: 189029.429 ops/s
# Warmup Iteration  20: 189193.020 ops/s
# Warmup Iteration  21: 189951.838 ops/s
# Warmup Iteration  22: 190133.282 ops/s
# Warmup Iteration  23: 189052.725 ops/s
# Warmup Iteration  24: 189668.601 ops/s
# Warmup Iteration  25: 189109.319 ops/s
# Warmup Iteration  26: 188419.279 ops/s
# Warmup Iteration  27: 189214.053 ops/s
# Warmup Iteration  28: 188414.355 ops/s
# Warmup Iteration  29: 187906.501 ops/s
# Warmup Iteration  30: 187851.387 ops/s
Iteration   1: 188707.201 ops/s
Iteration   2: 189133.189 ops/s
Iteration   3: 189327.927 ops/s
Iteration   4: 188522.050 ops/s
Iteration   5: 190436.482 ops/s
Iteration   6: 189011.979 ops/s
Iteration   7: 189328.077 ops/s
Iteration   8: 190440.292 ops/s
Iteration   9: 189750.930 ops/s
Iteration  10: 189949.685 ops/s
Iteration  11: 189829.090 ops/s
Iteration  12: 190024.636 ops/s
Iteration  13: 190022.630 ops/s
Iteration  14: 189443.162 ops/s
Iteration  15: 189583.181 ops/s
Iteration  16: 188970.859 ops/s
Iteration  17: 188418.850 ops/s
Iteration  18: 186386.032 ops/s
Iteration  19: 187469.026 ops/s
Iteration  20: 188866.385 ops/s
Iteration  21: 188827.454 ops/s
Iteration  22: 189918.780 ops/s
Iteration  23: 190070.832 ops/s
Iteration  24: 190152.105 ops/s
Iteration  25: 188723.511 ops/s
Iteration  26: 190212.207 ops/s
Iteration  27: 189888.143 ops/s
Iteration  28: 188337.095 ops/s
Iteration  29: 187602.799 ops/s
Iteration  30: 189662.108 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1085._Benchmark.benchmark_Cluster_1085":
  189233.890 ±(99.9%) 631.091 ops/s [Average]
  (min, avg, max) = (186386.032, 189233.890, 190440.292), stdev = 944.588
  CI (99.9%): [188602.799, 189864.981] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1085._Benchmark.benchmark_Cluster_1085  thrpt   30  189233.890 ± 631.091  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1086._Benchmark.benchmark_Cluster_1086$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1086._Benchmark.benchmark_Cluster_1086

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71193.780 ops/s
# Warmup Iteration   2: 106405.318 ops/s
# Warmup Iteration   3: 157812.039 ops/s
# Warmup Iteration   4: 196626.455 ops/s
# Warmup Iteration   5: 197108.070 ops/s
# Warmup Iteration   6: 198093.589 ops/s
# Warmup Iteration   7: 199524.886 ops/s
# Warmup Iteration   8: 199898.740 ops/s
# Warmup Iteration   9: 199029.852 ops/s
# Warmup Iteration  10: 135116.914 ops/s
# Warmup Iteration  11: 197142.277 ops/s
# Warmup Iteration  12: 197296.394 ops/s
# Warmup Iteration  13: 198165.233 ops/s
# Warmup Iteration  14: 198005.957 ops/s
# Warmup Iteration  15: 198194.906 ops/s
# Warmup Iteration  16: 200488.671 ops/s
# Warmup Iteration  17: 200767.414 ops/s
# Warmup Iteration  18: 200149.404 ops/s
# Warmup Iteration  19: 199646.977 ops/s
# Warmup Iteration  20: 199341.344 ops/s
# Warmup Iteration  21: 199677.961 ops/s
# Warmup Iteration  22: 199168.993 ops/s
# Warmup Iteration  23: 199202.388 ops/s
# Warmup Iteration  24: 199318.975 ops/s
# Warmup Iteration  25: 199564.247 ops/s
# Warmup Iteration  26: 199109.056 ops/s
# Warmup Iteration  27: 199965.422 ops/s
# Warmup Iteration  28: 200263.785 ops/s
# Warmup Iteration  29: 198205.362 ops/s
# Warmup Iteration  30: 199306.988 ops/s
Iteration   1: 198772.186 ops/s
Iteration   2: 198548.607 ops/s
Iteration   3: 197203.830 ops/s
Iteration   4: 196919.102 ops/s
Iteration   5: 198905.809 ops/s
Iteration   6: 197860.902 ops/s
Iteration   7: 197647.094 ops/s
Iteration   8: 198663.339 ops/s
Iteration   9: 197532.358 ops/s
Iteration  10: 198119.834 ops/s
Iteration  11: 201192.582 ops/s
Iteration  12: 200727.141 ops/s
Iteration  13: 199409.885 ops/s
Iteration  14: 200106.161 ops/s
Iteration  15: 200340.603 ops/s
Iteration  16: 197810.964 ops/s
Iteration  17: 198594.895 ops/s
Iteration  18: 197840.075 ops/s
Iteration  19: 198342.517 ops/s
Iteration  20: 198653.753 ops/s
Iteration  21: 198529.129 ops/s
Iteration  22: 199125.287 ops/s
Iteration  23: 198073.481 ops/s
Iteration  24: 196607.565 ops/s
Iteration  25: 197939.403 ops/s
Iteration  26: 198222.189 ops/s
Iteration  27: 200127.818 ops/s
Iteration  28: 197786.463 ops/s
Iteration  29: 197403.702 ops/s
Iteration  30: 197659.909 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1086._Benchmark.benchmark_Cluster_1086":
  198488.886 ±(99.9%) 746.937 ops/s [Average]
  (min, avg, max) = (196607.565, 198488.886, 201192.582), stdev = 1117.981
  CI (99.9%): [197741.949, 199235.823] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1086._Benchmark.benchmark_Cluster_1086  thrpt   30  198488.886 ± 746.937  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1087._Benchmark.benchmark_Cluster_1087$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1087._Benchmark.benchmark_Cluster_1087

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66374.356 ops/s
# Warmup Iteration   2: 78248.824 ops/s
# Warmup Iteration   3: 86671.242 ops/s
# Warmup Iteration   4: 127821.782 ops/s
# Warmup Iteration   5: 127616.787 ops/s
# Warmup Iteration   6: 127238.327 ops/s
# Warmup Iteration   7: 125599.082 ops/s
# Warmup Iteration   8: 126136.513 ops/s
# Warmup Iteration   9: 126397.542 ops/s
# Warmup Iteration  10: 126453.461 ops/s
# Warmup Iteration  11: 126769.880 ops/s
# Warmup Iteration  12: 126191.895 ops/s
# Warmup Iteration  13: 127054.777 ops/s
# Warmup Iteration  14: 84038.630 ops/s
# Warmup Iteration  15: 127099.326 ops/s
# Warmup Iteration  16: 126813.779 ops/s
# Warmup Iteration  17: 130316.081 ops/s
# Warmup Iteration  18: 129615.055 ops/s
# Warmup Iteration  19: 129810.250 ops/s
# Warmup Iteration  20: 130305.999 ops/s
# Warmup Iteration  21: 130774.644 ops/s
# Warmup Iteration  22: 130374.453 ops/s
# Warmup Iteration  23: 129948.237 ops/s
# Warmup Iteration  24: 130033.656 ops/s
# Warmup Iteration  25: 130586.801 ops/s
# Warmup Iteration  26: 130372.257 ops/s
# Warmup Iteration  27: 130246.574 ops/s
# Warmup Iteration  28: 130022.934 ops/s
# Warmup Iteration  29: 130742.237 ops/s
# Warmup Iteration  30: 130601.364 ops/s
Iteration   1: 130412.517 ops/s
Iteration   2: 130247.303 ops/s
Iteration   3: 130625.965 ops/s
Iteration   4: 129754.283 ops/s
Iteration   5: 130047.847 ops/s
Iteration   6: 129415.923 ops/s
Iteration   7: 129180.573 ops/s
Iteration   8: 130774.594 ops/s
Iteration   9: 130153.413 ops/s
Iteration  10: 130257.649 ops/s
Iteration  11: 130677.021 ops/s
Iteration  12: 130866.271 ops/s
Iteration  13: 129098.491 ops/s
Iteration  14: 128987.798 ops/s
Iteration  15: 128833.514 ops/s
Iteration  16: 130469.202 ops/s
Iteration  17: 130328.998 ops/s
Iteration  18: 130025.195 ops/s
Iteration  19: 129391.110 ops/s
Iteration  20: 130293.800 ops/s
Iteration  21: 129515.171 ops/s
Iteration  22: 128592.000 ops/s
Iteration  23: 128942.477 ops/s
Iteration  24: 129562.097 ops/s
Iteration  25: 128895.636 ops/s
Iteration  26: 128812.393 ops/s
Iteration  27: 129549.325 ops/s
Iteration  28: 129580.585 ops/s
Iteration  29: 129677.328 ops/s
Iteration  30: 129642.617 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1087._Benchmark.benchmark_Cluster_1087":
  129753.703 ±(99.9%) 439.161 ops/s [Average]
  (min, avg, max) = (128592.000, 129753.703, 130866.271), stdev = 657.316
  CI (99.9%): [129314.542, 130192.864] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1087._Benchmark.benchmark_Cluster_1087  thrpt   30  129753.703 ± 439.161  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1088._Benchmark.benchmark_Cluster_1088$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1088._Benchmark.benchmark_Cluster_1088

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80735.478 ops/s
# Warmup Iteration   2: 109821.500 ops/s
# Warmup Iteration   3: 188725.991 ops/s
# Warmup Iteration   4: 212421.502 ops/s
# Warmup Iteration   5: 210475.753 ops/s
# Warmup Iteration   6: 211293.856 ops/s
# Warmup Iteration   7: 209766.748 ops/s
# Warmup Iteration   8: 210667.611 ops/s
# Warmup Iteration   9: 152347.282 ops/s
# Warmup Iteration  10: 204031.114 ops/s
# Warmup Iteration  11: 210744.143 ops/s
# Warmup Iteration  12: 210156.796 ops/s
# Warmup Iteration  13: 209920.622 ops/s
# Warmup Iteration  14: 211034.049 ops/s
# Warmup Iteration  15: 211583.608 ops/s
# Warmup Iteration  16: 212237.979 ops/s
# Warmup Iteration  17: 213255.733 ops/s
# Warmup Iteration  18: 212793.572 ops/s
# Warmup Iteration  19: 213374.155 ops/s
# Warmup Iteration  20: 213433.315 ops/s
# Warmup Iteration  21: 212560.096 ops/s
# Warmup Iteration  22: 211947.972 ops/s
# Warmup Iteration  23: 212056.894 ops/s
# Warmup Iteration  24: 211322.933 ops/s
# Warmup Iteration  25: 211326.491 ops/s
# Warmup Iteration  26: 210632.869 ops/s
# Warmup Iteration  27: 212643.286 ops/s
# Warmup Iteration  28: 212841.373 ops/s
# Warmup Iteration  29: 212661.612 ops/s
# Warmup Iteration  30: 213109.877 ops/s
Iteration   1: 212489.583 ops/s
Iteration   2: 213028.775 ops/s
Iteration   3: 212968.545 ops/s
Iteration   4: 213341.374 ops/s
Iteration   5: 213693.765 ops/s
Iteration   6: 212345.448 ops/s
Iteration   7: 212877.127 ops/s
Iteration   8: 213559.980 ops/s
Iteration   9: 213186.342 ops/s
Iteration  10: 213569.716 ops/s
Iteration  11: 212748.395 ops/s
Iteration  12: 213510.189 ops/s
Iteration  13: 213553.472 ops/s
Iteration  14: 212404.110 ops/s
Iteration  15: 213480.980 ops/s
Iteration  16: 213280.824 ops/s
Iteration  17: 213358.429 ops/s
Iteration  18: 212959.162 ops/s
Iteration  19: 212320.530 ops/s
Iteration  20: 212474.006 ops/s
Iteration  21: 211292.603 ops/s
Iteration  22: 211606.900 ops/s
Iteration  23: 213154.339 ops/s
Iteration  24: 213894.812 ops/s
Iteration  25: 213928.306 ops/s
Iteration  26: 214027.779 ops/s
Iteration  27: 213895.288 ops/s
Iteration  28: 213872.810 ops/s
Iteration  29: 213620.750 ops/s
Iteration  30: 213862.586 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1088._Benchmark.benchmark_Cluster_1088":
  213143.564 ±(99.9%) 461.104 ops/s [Average]
  (min, avg, max) = (211292.603, 213143.564, 214027.779), stdev = 690.158
  CI (99.9%): [212682.460, 213604.668] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1088._Benchmark.benchmark_Cluster_1088  thrpt   30  213143.564 ± 461.104  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1089._Benchmark.benchmark_Cluster_1089$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1089._Benchmark.benchmark_Cluster_1089

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 98928.413 ops/s
# Warmup Iteration   2: 124832.043 ops/s
# Warmup Iteration   3: 245517.505 ops/s
# Warmup Iteration   4: 244378.993 ops/s
# Warmup Iteration   5: 247749.868 ops/s
# Warmup Iteration   6: 248663.563 ops/s
# Warmup Iteration   7: 249224.062 ops/s
# Warmup Iteration   8: 211174.744 ops/s
# Warmup Iteration   9: 206992.007 ops/s
# Warmup Iteration  10: 247716.064 ops/s
# Warmup Iteration  11: 247692.431 ops/s
# Warmup Iteration  12: 247744.987 ops/s
# Warmup Iteration  13: 248357.572 ops/s
# Warmup Iteration  14: 247684.845 ops/s
# Warmup Iteration  15: 247169.530 ops/s
# Warmup Iteration  16: 245836.906 ops/s
# Warmup Iteration  17: 244824.061 ops/s
# Warmup Iteration  18: 245032.710 ops/s
# Warmup Iteration  19: 247202.090 ops/s
# Warmup Iteration  20: 248828.152 ops/s
# Warmup Iteration  21: 248927.191 ops/s
# Warmup Iteration  22: 249007.518 ops/s
# Warmup Iteration  23: 249247.259 ops/s
# Warmup Iteration  24: 248777.397 ops/s
# Warmup Iteration  25: 248799.835 ops/s
# Warmup Iteration  26: 246425.908 ops/s
# Warmup Iteration  27: 246237.485 ops/s
# Warmup Iteration  28: 246014.623 ops/s
# Warmup Iteration  29: 248767.808 ops/s
# Warmup Iteration  30: 247547.242 ops/s
Iteration   1: 246552.322 ops/s
Iteration   2: 248918.403 ops/s
Iteration   3: 248128.085 ops/s
Iteration   4: 247658.997 ops/s
Iteration   5: 247219.648 ops/s
Iteration   6: 244714.596 ops/s
Iteration   7: 248058.813 ops/s
Iteration   8: 248833.927 ops/s
Iteration   9: 248375.322 ops/s
Iteration  10: 250318.728 ops/s
Iteration  11: 249534.287 ops/s
Iteration  12: 249718.341 ops/s
Iteration  13: 247227.140 ops/s
Iteration  14: 245027.219 ops/s
Iteration  15: 244950.656 ops/s
Iteration  16: 244721.040 ops/s
Iteration  17: 247351.728 ops/s
Iteration  18: 246295.399 ops/s
Iteration  19: 246606.376 ops/s
Iteration  20: 246508.491 ops/s
Iteration  21: 246222.488 ops/s
Iteration  22: 245595.346 ops/s
Iteration  23: 246376.068 ops/s
Iteration  24: 247183.894 ops/s
Iteration  25: 245818.157 ops/s
Iteration  26: 246754.347 ops/s
Iteration  27: 248691.146 ops/s
Iteration  28: 248294.981 ops/s
Iteration  29: 245321.203 ops/s
Iteration  30: 245948.042 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1089._Benchmark.benchmark_Cluster_1089":
  247097.506 ±(99.9%) 1030.929 ops/s [Average]
  (min, avg, max) = (244714.596, 247097.506, 250318.728), stdev = 1543.047
  CI (99.9%): [246066.577, 248128.436] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score      Error  Units
Cluster_1089._Benchmark.benchmark_Cluster_1089  thrpt   30  247097.506 ± 1030.929  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_109._Benchmark.benchmark_Cluster_109$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_109._Benchmark.benchmark_Cluster_109

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76253.814 ops/s
# Warmup Iteration   2: 89936.810 ops/s
# Warmup Iteration   3: 92015.948 ops/s
# Warmup Iteration   4: 113678.487 ops/s
# Warmup Iteration   5: 135634.082 ops/s
# Warmup Iteration   6: 133910.271 ops/s
# Warmup Iteration   7: 134649.017 ops/s
# Warmup Iteration   8: 133900.277 ops/s
# Warmup Iteration   9: 134743.584 ops/s
# Warmup Iteration  10: 135196.411 ops/s
# Warmup Iteration  11: 134069.645 ops/s
# Warmup Iteration  12: 133537.398 ops/s
# Warmup Iteration  13: 135137.601 ops/s
# Warmup Iteration  14: 135295.197 ops/s
# Warmup Iteration  15: 134434.667 ops/s
# Warmup Iteration  16: 135625.635 ops/s
# Warmup Iteration  17: 140263.921 ops/s
# Warmup Iteration  18: 97526.477 ops/s
# Warmup Iteration  19: 136747.509 ops/s
# Warmup Iteration  20: 139557.552 ops/s
# Warmup Iteration  21: 139899.439 ops/s
# Warmup Iteration  22: 138595.836 ops/s
# Warmup Iteration  23: 139910.578 ops/s
# Warmup Iteration  24: 139411.831 ops/s
# Warmup Iteration  25: 140481.296 ops/s
# Warmup Iteration  26: 139709.551 ops/s
# Warmup Iteration  27: 140216.501 ops/s
# Warmup Iteration  28: 140295.794 ops/s
# Warmup Iteration  29: 141098.018 ops/s
# Warmup Iteration  30: 141479.836 ops/s
Iteration   1: 140750.112 ops/s
Iteration   2: 141604.055 ops/s
Iteration   3: 141177.192 ops/s
Iteration   4: 141083.616 ops/s
Iteration   5: 141230.872 ops/s
Iteration   6: 141084.885 ops/s
Iteration   7: 141513.332 ops/s
Iteration   8: 140734.698 ops/s
Iteration   9: 140672.819 ops/s
Iteration  10: 140129.259 ops/s
Iteration  11: 140932.204 ops/s
Iteration  12: 140897.816 ops/s
Iteration  13: 139536.953 ops/s
Iteration  14: 139527.975 ops/s
Iteration  15: 139977.974 ops/s
Iteration  16: 140208.273 ops/s
Iteration  17: 138933.786 ops/s
Iteration  18: 139401.847 ops/s
Iteration  19: 139186.982 ops/s
Iteration  20: 140058.262 ops/s
Iteration  21: 139930.841 ops/s
Iteration  22: 139032.848 ops/s
Iteration  23: 139105.418 ops/s
Iteration  24: 139165.046 ops/s
Iteration  25: 138403.207 ops/s
Iteration  26: 140481.205 ops/s
Iteration  27: 140839.745 ops/s
Iteration  28: 140706.602 ops/s
Iteration  29: 139942.281 ops/s
Iteration  30: 140121.116 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_109._Benchmark.benchmark_Cluster_109":
  140212.374 ±(99.9%) 569.762 ops/s [Average]
  (min, avg, max) = (138403.207, 140212.374, 141604.055), stdev = 852.794
  CI (99.9%): [139642.611, 140782.136] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_109._Benchmark.benchmark_Cluster_109  thrpt   30  140212.374 ± 569.762  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1090._Benchmark.benchmark_Cluster_1090$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1090._Benchmark.benchmark_Cluster_1090

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94093.994 ops/s
# Warmup Iteration   2: 122858.486 ops/s
# Warmup Iteration   3: 230077.207 ops/s
# Warmup Iteration   4: 242575.676 ops/s
# Warmup Iteration   5: 240152.783 ops/s
# Warmup Iteration   6: 243199.755 ops/s
# Warmup Iteration   7: 241826.732 ops/s
# Warmup Iteration   8: 242094.355 ops/s
# Warmup Iteration   9: 165378.077 ops/s
# Warmup Iteration  10: 240453.952 ops/s
# Warmup Iteration  11: 241311.677 ops/s
# Warmup Iteration  12: 239988.747 ops/s
# Warmup Iteration  13: 241281.847 ops/s
# Warmup Iteration  14: 240378.525 ops/s
# Warmup Iteration  15: 241410.694 ops/s
# Warmup Iteration  16: 240407.340 ops/s
# Warmup Iteration  17: 242248.229 ops/s
# Warmup Iteration  18: 243607.216 ops/s
# Warmup Iteration  19: 242384.924 ops/s
# Warmup Iteration  20: 241473.420 ops/s
# Warmup Iteration  21: 240545.553 ops/s
# Warmup Iteration  22: 242673.211 ops/s
# Warmup Iteration  23: 241647.468 ops/s
# Warmup Iteration  24: 241807.227 ops/s
# Warmup Iteration  25: 241336.649 ops/s
# Warmup Iteration  26: 240681.567 ops/s
# Warmup Iteration  27: 241625.739 ops/s
# Warmup Iteration  28: 243105.330 ops/s
# Warmup Iteration  29: 241434.749 ops/s
# Warmup Iteration  30: 242152.996 ops/s
Iteration   1: 245282.103 ops/s
Iteration   2: 243829.183 ops/s
Iteration   3: 240424.550 ops/s
Iteration   4: 241895.475 ops/s
Iteration   5: 244832.682 ops/s
Iteration   6: 242668.138 ops/s
Iteration   7: 243742.206 ops/s
Iteration   8: 245260.458 ops/s
Iteration   9: 243112.973 ops/s
Iteration  10: 243482.924 ops/s
Iteration  11: 241343.902 ops/s
Iteration  12: 244201.016 ops/s
Iteration  13: 245036.386 ops/s
Iteration  14: 242671.056 ops/s
Iteration  15: 243701.062 ops/s
Iteration  16: 242113.417 ops/s
Iteration  17: 241997.692 ops/s
Iteration  18: 241992.694 ops/s
Iteration  19: 241333.276 ops/s
Iteration  20: 239489.278 ops/s
Iteration  21: 240961.454 ops/s
Iteration  22: 241284.996 ops/s
Iteration  23: 241508.724 ops/s
Iteration  24: 242061.799 ops/s
Iteration  25: 243164.675 ops/s
Iteration  26: 243330.034 ops/s
Iteration  27: 239865.217 ops/s
Iteration  28: 241903.687 ops/s
Iteration  29: 241609.063 ops/s
Iteration  30: 244001.002 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1090._Benchmark.benchmark_Cluster_1090":
  242603.371 ±(99.9%) 1034.642 ops/s [Average]
  (min, avg, max) = (239489.278, 242603.371, 245282.103), stdev = 1548.604
  CI (99.9%): [241568.728, 243638.013] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score      Error  Units
Cluster_1090._Benchmark.benchmark_Cluster_1090  thrpt   30  242603.371 ± 1034.642  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1091._Benchmark.benchmark_Cluster_1091$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1091._Benchmark.benchmark_Cluster_1091

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62631.000 ops/s
# Warmup Iteration   2: 104189.308 ops/s
# Warmup Iteration   3: 139087.381 ops/s
# Warmup Iteration   4: 186089.528 ops/s
# Warmup Iteration   5: 183803.058 ops/s
# Warmup Iteration   6: 185232.489 ops/s
# Warmup Iteration   7: 184735.763 ops/s
# Warmup Iteration   8: 185416.228 ops/s
# Warmup Iteration   9: 183284.972 ops/s
# Warmup Iteration  10: 177664.212 ops/s
# Warmup Iteration  11: 131992.602 ops/s
# Warmup Iteration  12: 185286.882 ops/s
# Warmup Iteration  13: 184869.736 ops/s
# Warmup Iteration  14: 183890.270 ops/s
# Warmup Iteration  15: 184887.418 ops/s
# Warmup Iteration  16: 185416.876 ops/s
# Warmup Iteration  17: 186064.524 ops/s
# Warmup Iteration  18: 185533.181 ops/s
# Warmup Iteration  19: 183504.642 ops/s
# Warmup Iteration  20: 183638.482 ops/s
# Warmup Iteration  21: 184792.483 ops/s
# Warmup Iteration  22: 184103.647 ops/s
# Warmup Iteration  23: 183508.369 ops/s
# Warmup Iteration  24: 182924.421 ops/s
# Warmup Iteration  25: 183027.176 ops/s
# Warmup Iteration  26: 183357.245 ops/s
# Warmup Iteration  27: 185117.231 ops/s
# Warmup Iteration  28: 183042.794 ops/s
# Warmup Iteration  29: 184784.301 ops/s
# Warmup Iteration  30: 185181.770 ops/s
Iteration   1: 184608.657 ops/s
Iteration   2: 184254.985 ops/s
Iteration   3: 184268.485 ops/s
Iteration   4: 185619.924 ops/s
Iteration   5: 184955.062 ops/s
Iteration   6: 185463.007 ops/s
Iteration   7: 185981.687 ops/s
Iteration   8: 184557.208 ops/s
Iteration   9: 185540.023 ops/s
Iteration  10: 185317.541 ops/s
Iteration  11: 184343.307 ops/s
Iteration  12: 184126.122 ops/s
Iteration  13: 184951.750 ops/s
Iteration  14: 184342.225 ops/s
Iteration  15: 183119.999 ops/s
Iteration  16: 183935.402 ops/s
Iteration  17: 184040.417 ops/s
Iteration  18: 184579.976 ops/s
Iteration  19: 184340.229 ops/s
Iteration  20: 183731.285 ops/s
Iteration  21: 183619.124 ops/s
Iteration  22: 183492.501 ops/s
Iteration  23: 184920.190 ops/s
Iteration  24: 185569.430 ops/s
Iteration  25: 185407.127 ops/s
Iteration  26: 184399.848 ops/s
Iteration  27: 184922.703 ops/s
Iteration  28: 183879.552 ops/s
Iteration  29: 185061.749 ops/s
Iteration  30: 184181.261 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1091._Benchmark.benchmark_Cluster_1091":
  184584.359 ±(99.9%) 474.456 ops/s [Average]
  (min, avg, max) = (183119.999, 184584.359, 185981.687), stdev = 710.144
  CI (99.9%): [184109.903, 185058.815] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1091._Benchmark.benchmark_Cluster_1091  thrpt   30  184584.359 ± 474.456  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1092._Benchmark.benchmark_Cluster_1092$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1092._Benchmark.benchmark_Cluster_1092

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52224.082 ops/s
# Warmup Iteration   2: 81463.399 ops/s
# Warmup Iteration   3: 94249.525 ops/s
# Warmup Iteration   4: 137913.321 ops/s
# Warmup Iteration   5: 137681.389 ops/s
# Warmup Iteration   6: 136222.527 ops/s
# Warmup Iteration   7: 135708.228 ops/s
# Warmup Iteration   8: 136808.787 ops/s
# Warmup Iteration   9: 137937.266 ops/s
# Warmup Iteration  10: 138510.028 ops/s
# Warmup Iteration  11: 137167.484 ops/s
# Warmup Iteration  12: 111358.998 ops/s
# Warmup Iteration  13: 118583.350 ops/s
# Warmup Iteration  14: 137924.868 ops/s
# Warmup Iteration  15: 137520.073 ops/s
# Warmup Iteration  16: 138282.204 ops/s
# Warmup Iteration  17: 142592.624 ops/s
# Warmup Iteration  18: 142577.385 ops/s
# Warmup Iteration  19: 142757.379 ops/s
# Warmup Iteration  20: 142896.231 ops/s
# Warmup Iteration  21: 143527.384 ops/s
# Warmup Iteration  22: 142625.225 ops/s
# Warmup Iteration  23: 142641.090 ops/s
# Warmup Iteration  24: 142448.574 ops/s
# Warmup Iteration  25: 142682.901 ops/s
# Warmup Iteration  26: 143553.712 ops/s
# Warmup Iteration  27: 143425.258 ops/s
# Warmup Iteration  28: 142369.862 ops/s
# Warmup Iteration  29: 143092.437 ops/s
# Warmup Iteration  30: 142353.435 ops/s
Iteration   1: 143375.929 ops/s
Iteration   2: 143692.427 ops/s
Iteration   3: 142601.750 ops/s
Iteration   4: 141989.403 ops/s
Iteration   5: 143771.194 ops/s
Iteration   6: 142453.961 ops/s
Iteration   7: 142214.714 ops/s
Iteration   8: 142475.445 ops/s
Iteration   9: 142115.928 ops/s
Iteration  10: 141782.885 ops/s
Iteration  11: 142419.069 ops/s
Iteration  12: 142962.077 ops/s
Iteration  13: 142299.321 ops/s
Iteration  14: 142266.379 ops/s
Iteration  15: 141480.616 ops/s
Iteration  16: 143420.269 ops/s
Iteration  17: 141883.618 ops/s
Iteration  18: 141749.704 ops/s
Iteration  19: 141957.095 ops/s
Iteration  20: 142882.923 ops/s
Iteration  21: 142537.483 ops/s
Iteration  22: 142482.585 ops/s
Iteration  23: 142485.440 ops/s
Iteration  24: 142611.802 ops/s
Iteration  25: 142768.742 ops/s
Iteration  26: 142546.063 ops/s
Iteration  27: 142494.876 ops/s
Iteration  28: 142806.442 ops/s
Iteration  29: 142055.263 ops/s
Iteration  30: 143049.631 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1092._Benchmark.benchmark_Cluster_1092":
  142521.101 ±(99.9%) 373.773 ops/s [Average]
  (min, avg, max) = (141480.616, 142521.101, 143771.194), stdev = 559.447
  CI (99.9%): [142147.328, 142894.875] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1092._Benchmark.benchmark_Cluster_1092  thrpt   30  142521.101 ± 373.773  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1093._Benchmark.benchmark_Cluster_1093$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1093._Benchmark.benchmark_Cluster_1093

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93212.563 ops/s
# Warmup Iteration   2: 122068.292 ops/s
# Warmup Iteration   3: 227849.231 ops/s
# Warmup Iteration   4: 242685.112 ops/s
# Warmup Iteration   5: 242592.009 ops/s
# Warmup Iteration   6: 244302.546 ops/s
# Warmup Iteration   7: 244485.091 ops/s
# Warmup Iteration   8: 225300.923 ops/s
# Warmup Iteration   9: 184613.269 ops/s
# Warmup Iteration  10: 243498.124 ops/s
# Warmup Iteration  11: 244213.913 ops/s
# Warmup Iteration  12: 242989.137 ops/s
# Warmup Iteration  13: 242690.644 ops/s
# Warmup Iteration  14: 239833.567 ops/s
# Warmup Iteration  15: 243155.243 ops/s
# Warmup Iteration  16: 243087.837 ops/s
# Warmup Iteration  17: 244135.532 ops/s
# Warmup Iteration  18: 242630.704 ops/s
# Warmup Iteration  19: 241336.814 ops/s
# Warmup Iteration  20: 241365.603 ops/s
# Warmup Iteration  21: 243174.128 ops/s
# Warmup Iteration  22: 241143.487 ops/s
# Warmup Iteration  23: 243623.629 ops/s
# Warmup Iteration  24: 242929.828 ops/s
# Warmup Iteration  25: 243859.537 ops/s
# Warmup Iteration  26: 243234.134 ops/s
# Warmup Iteration  27: 242818.661 ops/s
# Warmup Iteration  28: 242950.189 ops/s
# Warmup Iteration  29: 242486.729 ops/s
# Warmup Iteration  30: 242308.279 ops/s
Iteration   1: 244091.323 ops/s
Iteration   2: 244070.430 ops/s
Iteration   3: 243042.064 ops/s
Iteration   4: 242663.190 ops/s
Iteration   5: 242325.152 ops/s
Iteration   6: 242994.164 ops/s
Iteration   7: 241591.012 ops/s
Iteration   8: 242571.861 ops/s
Iteration   9: 243982.802 ops/s
Iteration  10: 243500.764 ops/s
Iteration  11: 244431.971 ops/s
Iteration  12: 241518.478 ops/s
Iteration  13: 242901.736 ops/s
Iteration  14: 240868.070 ops/s
Iteration  15: 240615.683 ops/s
Iteration  16: 243239.582 ops/s
Iteration  17: 243413.806 ops/s
Iteration  18: 245159.840 ops/s
Iteration  19: 244591.212 ops/s
Iteration  20: 244857.571 ops/s
Iteration  21: 245190.538 ops/s
Iteration  22: 244994.240 ops/s
Iteration  23: 245240.988 ops/s
Iteration  24: 244548.794 ops/s
Iteration  25: 242797.822 ops/s
Iteration  26: 242684.676 ops/s
Iteration  27: 242491.104 ops/s
Iteration  28: 240269.086 ops/s
Iteration  29: 241729.337 ops/s
Iteration  30: 244679.244 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1093._Benchmark.benchmark_Cluster_1093":
  243235.218 ±(99.9%) 948.772 ops/s [Average]
  (min, avg, max) = (240269.086, 243235.218, 245240.988), stdev = 1420.077
  CI (99.9%): [242286.446, 244183.990] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1093._Benchmark.benchmark_Cluster_1093  thrpt   30  243235.218 ± 948.772  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1094._Benchmark.benchmark_Cluster_1094$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1094._Benchmark.benchmark_Cluster_1094

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 44832.695 ops/s
# Warmup Iteration   2: 51472.975 ops/s
# Warmup Iteration   3: 69745.855 ops/s
# Warmup Iteration   4: 87346.018 ops/s
# Warmup Iteration   5: 88077.128 ops/s
# Warmup Iteration   6: 87219.421 ops/s
# Warmup Iteration   7: 88118.013 ops/s
# Warmup Iteration   8: 87809.390 ops/s
# Warmup Iteration   9: 87875.890 ops/s
# Warmup Iteration  10: 87151.055 ops/s
# Warmup Iteration  11: 81345.224 ops/s
# Warmup Iteration  12: 65630.038 ops/s
# Warmup Iteration  13: 88040.524 ops/s
# Warmup Iteration  14: 88481.398 ops/s
# Warmup Iteration  15: 88554.962 ops/s
# Warmup Iteration  16: 87585.051 ops/s
# Warmup Iteration  17: 87692.872 ops/s
# Warmup Iteration  18: 87076.367 ops/s
# Warmup Iteration  19: 87333.943 ops/s
# Warmup Iteration  20: 88273.759 ops/s
# Warmup Iteration  21: 87656.511 ops/s
# Warmup Iteration  22: 87394.668 ops/s
# Warmup Iteration  23: 87419.887 ops/s
# Warmup Iteration  24: 87979.464 ops/s
# Warmup Iteration  25: 88198.939 ops/s
# Warmup Iteration  26: 88395.657 ops/s
# Warmup Iteration  27: 88311.918 ops/s
# Warmup Iteration  28: 88670.100 ops/s
# Warmup Iteration  29: 87896.267 ops/s
# Warmup Iteration  30: 87921.816 ops/s
Iteration   1: 87337.969 ops/s
Iteration   2: 87610.767 ops/s
Iteration   3: 87270.347 ops/s
Iteration   4: 87754.443 ops/s
Iteration   5: 88414.490 ops/s
Iteration   6: 87999.016 ops/s
Iteration   7: 87822.760 ops/s
Iteration   8: 87458.797 ops/s
Iteration   9: 87884.745 ops/s
Iteration  10: 87121.069 ops/s
Iteration  11: 87331.697 ops/s
Iteration  12: 88022.717 ops/s
Iteration  13: 87757.046 ops/s
Iteration  14: 87734.728 ops/s
Iteration  15: 86846.410 ops/s
Iteration  16: 87198.028 ops/s
Iteration  17: 88210.093 ops/s
Iteration  18: 87165.604 ops/s
Iteration  19: 87728.852 ops/s
Iteration  20: 88142.479 ops/s
Iteration  21: 87145.098 ops/s
Iteration  22: 87930.875 ops/s
Iteration  23: 87517.826 ops/s
Iteration  24: 87344.809 ops/s
Iteration  25: 87849.311 ops/s
Iteration  26: 87464.342 ops/s
Iteration  27: 87013.252 ops/s
Iteration  28: 87348.327 ops/s
Iteration  29: 88250.178 ops/s
Iteration  30: 88524.661 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1094._Benchmark.benchmark_Cluster_1094":
  87640.025 ±(99.9%) 288.431 ops/s [Average]
  (min, avg, max) = (86846.410, 87640.025, 88524.661), stdev = 431.710
  CI (99.9%): [87351.594, 87928.455] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt      Score     Error  Units
Cluster_1094._Benchmark.benchmark_Cluster_1094  thrpt   30  87640.025 ± 288.431  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1095._Benchmark.benchmark_Cluster_1095$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1095._Benchmark.benchmark_Cluster_1095

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45730.764 ops/s
# Warmup Iteration   2: 84976.570 ops/s
# Warmup Iteration   3: 118113.682 ops/s
# Warmup Iteration   4: 166899.917 ops/s
# Warmup Iteration   5: 165941.813 ops/s
# Warmup Iteration   6: 166975.857 ops/s
# Warmup Iteration   7: 166649.501 ops/s
# Warmup Iteration   8: 167371.349 ops/s
# Warmup Iteration   9: 168763.926 ops/s
# Warmup Iteration  10: 110387.204 ops/s
# Warmup Iteration  11: 167318.323 ops/s
# Warmup Iteration  12: 166409.507 ops/s
# Warmup Iteration  13: 167110.885 ops/s
# Warmup Iteration  14: 167900.181 ops/s
# Warmup Iteration  15: 166210.853 ops/s
# Warmup Iteration  16: 167070.565 ops/s
# Warmup Iteration  17: 168983.492 ops/s
# Warmup Iteration  18: 167627.527 ops/s
# Warmup Iteration  19: 167273.872 ops/s
# Warmup Iteration  20: 167369.818 ops/s
# Warmup Iteration  21: 168005.305 ops/s
# Warmup Iteration  22: 167148.260 ops/s
# Warmup Iteration  23: 166744.572 ops/s
# Warmup Iteration  24: 166693.961 ops/s
# Warmup Iteration  25: 167349.126 ops/s
# Warmup Iteration  26: 166616.515 ops/s
# Warmup Iteration  27: 168100.809 ops/s
# Warmup Iteration  28: 168242.081 ops/s
# Warmup Iteration  29: 167441.292 ops/s
# Warmup Iteration  30: 167546.042 ops/s
Iteration   1: 166446.638 ops/s
Iteration   2: 167479.184 ops/s
Iteration   3: 167652.492 ops/s
Iteration   4: 168638.830 ops/s
Iteration   5: 168560.569 ops/s
Iteration   6: 167958.463 ops/s
Iteration   7: 167394.565 ops/s
Iteration   8: 167890.631 ops/s
Iteration   9: 167522.124 ops/s
Iteration  10: 166639.670 ops/s
Iteration  11: 167468.216 ops/s
Iteration  12: 166698.873 ops/s
Iteration  13: 166571.931 ops/s
Iteration  14: 166793.290 ops/s
Iteration  15: 168646.100 ops/s
Iteration  16: 167793.298 ops/s
Iteration  17: 167456.845 ops/s
Iteration  18: 168549.910 ops/s
Iteration  19: 168672.989 ops/s
Iteration  20: 168457.784 ops/s
Iteration  21: 167883.385 ops/s
Iteration  22: 168386.274 ops/s
Iteration  23: 168755.019 ops/s
Iteration  24: 167385.360 ops/s
Iteration  25: 166082.836 ops/s
Iteration  26: 166985.877 ops/s
Iteration  27: 168138.882 ops/s
Iteration  28: 167552.067 ops/s
Iteration  29: 166589.841 ops/s
Iteration  30: 167327.435 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1095._Benchmark.benchmark_Cluster_1095":
  167612.646 ±(99.9%) 513.814 ops/s [Average]
  (min, avg, max) = (166082.836, 167612.646, 168755.019), stdev = 769.053
  CI (99.9%): [167098.832, 168126.460] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1095._Benchmark.benchmark_Cluster_1095  thrpt   30  167612.646 ± 513.814  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1096._Benchmark.benchmark_Cluster_1096$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1096._Benchmark.benchmark_Cluster_1096

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79903.514 ops/s
# Warmup Iteration   2: 103893.965 ops/s
# Warmup Iteration   3: 152165.861 ops/s
# Warmup Iteration   4: 182859.941 ops/s
# Warmup Iteration   5: 180854.948 ops/s
# Warmup Iteration   6: 182795.402 ops/s
# Warmup Iteration   7: 181305.128 ops/s
# Warmup Iteration   8: 181968.258 ops/s
# Warmup Iteration   9: 181162.658 ops/s
# Warmup Iteration  10: 167336.636 ops/s
# Warmup Iteration  11: 139449.866 ops/s
# Warmup Iteration  12: 182992.195 ops/s
# Warmup Iteration  13: 182449.786 ops/s
# Warmup Iteration  14: 182474.477 ops/s
# Warmup Iteration  15: 182767.389 ops/s
# Warmup Iteration  16: 181456.199 ops/s
# Warmup Iteration  17: 182656.665 ops/s
# Warmup Iteration  18: 181912.952 ops/s
# Warmup Iteration  19: 182930.634 ops/s
# Warmup Iteration  20: 182457.131 ops/s
# Warmup Iteration  21: 181142.285 ops/s
# Warmup Iteration  22: 181347.668 ops/s
# Warmup Iteration  23: 183439.550 ops/s
# Warmup Iteration  24: 182554.120 ops/s
# Warmup Iteration  25: 181354.147 ops/s
# Warmup Iteration  26: 180560.443 ops/s
# Warmup Iteration  27: 180608.595 ops/s
# Warmup Iteration  28: 182650.495 ops/s
# Warmup Iteration  29: 181432.410 ops/s
# Warmup Iteration  30: 181467.161 ops/s
Iteration   1: 182473.844 ops/s
Iteration   2: 180899.010 ops/s
Iteration   3: 180429.334 ops/s
Iteration   4: 182293.110 ops/s
Iteration   5: 181255.427 ops/s
Iteration   6: 181259.289 ops/s
Iteration   7: 181852.383 ops/s
Iteration   8: 181664.738 ops/s
Iteration   9: 181630.987 ops/s
Iteration  10: 180420.085 ops/s
Iteration  11: 181242.326 ops/s
Iteration  12: 183275.002 ops/s
Iteration  13: 181560.816 ops/s
Iteration  14: 179642.558 ops/s
Iteration  15: 182708.461 ops/s
Iteration  16: 181764.941 ops/s
Iteration  17: 180296.960 ops/s
Iteration  18: 181342.318 ops/s
Iteration  19: 181599.244 ops/s
Iteration  20: 183410.395 ops/s
Iteration  21: 181971.035 ops/s
Iteration  22: 179770.920 ops/s
Iteration  23: 181736.151 ops/s
Iteration  24: 182177.638 ops/s
Iteration  25: 182445.930 ops/s
Iteration  26: 183282.441 ops/s
Iteration  27: 183832.691 ops/s
Iteration  28: 183249.139 ops/s
Iteration  29: 183450.764 ops/s
Iteration  30: 182617.026 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1096._Benchmark.benchmark_Cluster_1096":
  181851.832 ±(99.9%) 739.303 ops/s [Average]
  (min, avg, max) = (179642.558, 181851.832, 183832.691), stdev = 1106.554
  CI (99.9%): [181112.529, 182591.135] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1096._Benchmark.benchmark_Cluster_1096  thrpt   30  181851.832 ± 739.303  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1097._Benchmark.benchmark_Cluster_1097$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1097._Benchmark.benchmark_Cluster_1097

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71748.204 ops/s
# Warmup Iteration   2: 99064.426 ops/s
# Warmup Iteration   3: 137438.060 ops/s
# Warmup Iteration   4: 174927.531 ops/s
# Warmup Iteration   5: 173961.088 ops/s
# Warmup Iteration   6: 172127.235 ops/s
# Warmup Iteration   7: 174405.583 ops/s
# Warmup Iteration   8: 175176.484 ops/s
# Warmup Iteration   9: 174558.647 ops/s
# Warmup Iteration  10: 175312.427 ops/s
# Warmup Iteration  11: 120145.213 ops/s
# Warmup Iteration  12: 175327.994 ops/s
# Warmup Iteration  13: 175321.350 ops/s
# Warmup Iteration  14: 174529.481 ops/s
# Warmup Iteration  15: 174364.145 ops/s
# Warmup Iteration  16: 174430.022 ops/s
# Warmup Iteration  17: 175168.900 ops/s
# Warmup Iteration  18: 173901.094 ops/s
# Warmup Iteration  19: 174945.728 ops/s
# Warmup Iteration  20: 174983.496 ops/s
# Warmup Iteration  21: 175294.079 ops/s
# Warmup Iteration  22: 174247.630 ops/s
# Warmup Iteration  23: 174421.672 ops/s
# Warmup Iteration  24: 173981.932 ops/s
# Warmup Iteration  25: 174625.543 ops/s
# Warmup Iteration  26: 174761.469 ops/s
# Warmup Iteration  27: 175092.352 ops/s
# Warmup Iteration  28: 174964.884 ops/s
# Warmup Iteration  29: 174006.237 ops/s
# Warmup Iteration  30: 174472.868 ops/s
Iteration   1: 174797.423 ops/s
Iteration   2: 174493.783 ops/s
Iteration   3: 174224.655 ops/s
Iteration   4: 174929.014 ops/s
Iteration   5: 174914.111 ops/s
Iteration   6: 175422.788 ops/s
Iteration   7: 175296.287 ops/s
Iteration   8: 175328.037 ops/s
Iteration   9: 175598.301 ops/s
Iteration  10: 175122.462 ops/s
Iteration  11: 172726.372 ops/s
Iteration  12: 174210.559 ops/s
Iteration  13: 174594.951 ops/s
Iteration  14: 175405.414 ops/s
Iteration  15: 175606.681 ops/s
Iteration  16: 175577.125 ops/s
Iteration  17: 175070.241 ops/s
Iteration  18: 175162.565 ops/s
Iteration  19: 175331.740 ops/s
Iteration  20: 175537.811 ops/s
Iteration  21: 175433.531 ops/s
Iteration  22: 175375.118 ops/s
Iteration  23: 175140.448 ops/s
Iteration  24: 175052.578 ops/s
Iteration  25: 174695.461 ops/s
Iteration  26: 175041.663 ops/s
Iteration  27: 175075.415 ops/s
Iteration  28: 174462.517 ops/s
Iteration  29: 173224.426 ops/s
Iteration  30: 174066.399 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1097._Benchmark.benchmark_Cluster_1097":
  174897.263 ±(99.9%) 453.452 ops/s [Average]
  (min, avg, max) = (172726.372, 174897.263, 175606.681), stdev = 678.706
  CI (99.9%): [174443.810, 175350.715] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1097._Benchmark.benchmark_Cluster_1097  thrpt   30  174897.263 ± 453.452  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1098._Benchmark.benchmark_Cluster_1098$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1098._Benchmark.benchmark_Cluster_1098

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94892.398 ops/s
# Warmup Iteration   2: 106123.898 ops/s
# Warmup Iteration   3: 106875.755 ops/s
# Warmup Iteration   4: 117409.644 ops/s
# Warmup Iteration   5: 147936.002 ops/s
# Warmup Iteration   6: 149324.834 ops/s
# Warmup Iteration   7: 147661.194 ops/s
# Warmup Iteration   8: 148398.151 ops/s
# Warmup Iteration   9: 147510.593 ops/s
# Warmup Iteration  10: 148411.411 ops/s
# Warmup Iteration  11: 147569.369 ops/s
# Warmup Iteration  12: 148369.438 ops/s
# Warmup Iteration  13: 148797.320 ops/s
# Warmup Iteration  14: 148092.869 ops/s
# Warmup Iteration  15: 148089.476 ops/s
# Warmup Iteration  16: 148462.949 ops/s
# Warmup Iteration  17: 153774.902 ops/s
# Warmup Iteration  18: 153773.145 ops/s
# Warmup Iteration  19: 153144.873 ops/s
# Warmup Iteration  20: 126393.305 ops/s
# Warmup Iteration  21: 131297.465 ops/s
# Warmup Iteration  22: 154168.501 ops/s
# Warmup Iteration  23: 154167.327 ops/s
# Warmup Iteration  24: 154024.068 ops/s
# Warmup Iteration  25: 152835.093 ops/s
# Warmup Iteration  26: 153050.831 ops/s
# Warmup Iteration  27: 154073.815 ops/s
# Warmup Iteration  28: 154283.637 ops/s
# Warmup Iteration  29: 154072.246 ops/s
# Warmup Iteration  30: 153448.866 ops/s
Iteration   1: 153368.587 ops/s
Iteration   2: 153336.773 ops/s
Iteration   3: 153899.963 ops/s
Iteration   4: 153976.002 ops/s
Iteration   5: 153980.963 ops/s
Iteration   6: 154579.073 ops/s
Iteration   7: 153563.954 ops/s
Iteration   8: 153699.814 ops/s
Iteration   9: 154024.886 ops/s
Iteration  10: 153692.908 ops/s
Iteration  11: 154015.144 ops/s
Iteration  12: 153840.619 ops/s
Iteration  13: 153927.559 ops/s
Iteration  14: 154455.543 ops/s
Iteration  15: 153939.105 ops/s
Iteration  16: 153587.140 ops/s
Iteration  17: 154057.434 ops/s
Iteration  18: 153957.231 ops/s
Iteration  19: 153849.467 ops/s
Iteration  20: 153955.671 ops/s
Iteration  21: 154241.070 ops/s
Iteration  22: 153716.953 ops/s
Iteration  23: 154459.177 ops/s
Iteration  24: 153700.502 ops/s
Iteration  25: 153686.674 ops/s
Iteration  26: 154030.672 ops/s
Iteration  27: 153797.616 ops/s
Iteration  28: 154006.987 ops/s
Iteration  29: 153924.821 ops/s
Iteration  30: 153693.270 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1098._Benchmark.benchmark_Cluster_1098":
  153898.853 ±(99.9%) 191.158 ops/s [Average]
  (min, avg, max) = (153336.773, 153898.853, 154579.073), stdev = 286.116
  CI (99.9%): [153707.695, 154090.011] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1098._Benchmark.benchmark_Cluster_1098  thrpt   30  153898.853 ± 191.158  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1099._Benchmark.benchmark_Cluster_1099$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1099._Benchmark.benchmark_Cluster_1099

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93721.114 ops/s
# Warmup Iteration   2: 140690.521 ops/s
# Warmup Iteration   3: 189474.990 ops/s
# Warmup Iteration   4: 243353.933 ops/s
# Warmup Iteration   5: 243916.290 ops/s
# Warmup Iteration   6: 241241.924 ops/s
# Warmup Iteration   7: 243549.363 ops/s
# Warmup Iteration   8: 243901.000 ops/s
# Warmup Iteration   9: 243517.388 ops/s
# Warmup Iteration  10: 243586.619 ops/s
# Warmup Iteration  11: 169331.424 ops/s
# Warmup Iteration  12: 241076.545 ops/s
# Warmup Iteration  13: 243924.192 ops/s
# Warmup Iteration  14: 242975.163 ops/s
# Warmup Iteration  15: 242281.559 ops/s
# Warmup Iteration  16: 242906.742 ops/s
# Warmup Iteration  17: 242761.128 ops/s
# Warmup Iteration  18: 242821.842 ops/s
# Warmup Iteration  19: 243351.207 ops/s
# Warmup Iteration  20: 243339.924 ops/s
# Warmup Iteration  21: 243748.209 ops/s
# Warmup Iteration  22: 242877.423 ops/s
# Warmup Iteration  23: 243410.388 ops/s
# Warmup Iteration  24: 243013.451 ops/s
# Warmup Iteration  25: 242878.933 ops/s
# Warmup Iteration  26: 243530.291 ops/s
# Warmup Iteration  27: 243011.346 ops/s
# Warmup Iteration  28: 243273.285 ops/s
# Warmup Iteration  29: 243464.313 ops/s
# Warmup Iteration  30: 243712.690 ops/s
Iteration   1: 242724.294 ops/s
Iteration   2: 243366.500 ops/s
Iteration   3: 241394.069 ops/s
Iteration   4: 242844.541 ops/s
Iteration   5: 242241.443 ops/s
Iteration   6: 240281.331 ops/s
Iteration   7: 240509.451 ops/s
Iteration   8: 238783.189 ops/s
Iteration   9: 239361.016 ops/s
Iteration  10: 240297.686 ops/s
Iteration  11: 243283.025 ops/s
Iteration  12: 242461.248 ops/s
Iteration  13: 243109.110 ops/s
Iteration  14: 243899.241 ops/s
Iteration  15: 243437.806 ops/s
Iteration  16: 243696.893 ops/s
Iteration  17: 241260.451 ops/s
Iteration  18: 239342.697 ops/s
Iteration  19: 242191.683 ops/s
Iteration  20: 242612.609 ops/s
Iteration  21: 243352.712 ops/s
Iteration  22: 242197.675 ops/s
Iteration  23: 243218.703 ops/s
Iteration  24: 241940.135 ops/s
Iteration  25: 240202.528 ops/s
Iteration  26: 238389.350 ops/s
Iteration  27: 241394.562 ops/s
Iteration  28: 241565.329 ops/s
Iteration  29: 239729.233 ops/s
Iteration  30: 239234.543 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1099._Benchmark.benchmark_Cluster_1099":
  241610.768 ±(99.9%) 1088.806 ops/s [Average]
  (min, avg, max) = (238389.350, 241610.768, 243899.241), stdev = 1629.674
  CI (99.9%): [240521.962, 242699.575] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score      Error  Units
Cluster_1099._Benchmark.benchmark_Cluster_1099  thrpt   30  241610.768 ± 1088.806  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_11._Benchmark.benchmark_Cluster_11$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_11._Benchmark.benchmark_Cluster_11

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45399.439 ops/s
# Warmup Iteration   2: 75817.274 ops/s
# Warmup Iteration   3: 141340.571 ops/s
# Warmup Iteration   4: 157373.657 ops/s
# Warmup Iteration   5: 159206.131 ops/s
# Warmup Iteration   6: 159594.570 ops/s
# Warmup Iteration   7: 158292.789 ops/s
# Warmup Iteration   8: 118647.366 ops/s
# Warmup Iteration   9: 148895.358 ops/s
# Warmup Iteration  10: 159439.883 ops/s
# Warmup Iteration  11: 158587.581 ops/s
# Warmup Iteration  12: 158565.698 ops/s
# Warmup Iteration  13: 158196.313 ops/s
# Warmup Iteration  14: 158508.816 ops/s
# Warmup Iteration  15: 158803.598 ops/s
# Warmup Iteration  16: 158415.933 ops/s
# Warmup Iteration  17: 158652.562 ops/s
# Warmup Iteration  18: 157598.006 ops/s
# Warmup Iteration  19: 158690.980 ops/s
# Warmup Iteration  20: 159868.210 ops/s
# Warmup Iteration  21: 159573.624 ops/s
# Warmup Iteration  22: 159251.783 ops/s
# Warmup Iteration  23: 159316.897 ops/s
# Warmup Iteration  24: 158797.178 ops/s
# Warmup Iteration  25: 159533.401 ops/s
# Warmup Iteration  26: 159946.182 ops/s
# Warmup Iteration  27: 158361.776 ops/s
# Warmup Iteration  28: 157922.915 ops/s
# Warmup Iteration  29: 157973.717 ops/s
# Warmup Iteration  30: 157208.548 ops/s
Iteration   1: 157767.463 ops/s
Iteration   2: 158454.367 ops/s
Iteration   3: 158532.034 ops/s
Iteration   4: 157044.999 ops/s
Iteration   5: 157673.540 ops/s
Iteration   6: 157873.450 ops/s
Iteration   7: 157263.107 ops/s
Iteration   8: 158802.699 ops/s
Iteration   9: 158900.595 ops/s
Iteration  10: 159625.024 ops/s
Iteration  11: 159800.924 ops/s
Iteration  12: 160185.617 ops/s
Iteration  13: 158753.271 ops/s
Iteration  14: 159441.928 ops/s
Iteration  15: 159660.038 ops/s
Iteration  16: 158339.447 ops/s
Iteration  17: 157851.496 ops/s
Iteration  18: 159148.105 ops/s
Iteration  19: 159760.451 ops/s
Iteration  20: 158931.667 ops/s
Iteration  21: 159183.276 ops/s
Iteration  22: 158537.808 ops/s
Iteration  23: 158818.639 ops/s
Iteration  24: 158053.274 ops/s
Iteration  25: 158154.817 ops/s
Iteration  26: 156999.220 ops/s
Iteration  27: 157675.051 ops/s
Iteration  28: 157834.366 ops/s
Iteration  29: 158296.576 ops/s
Iteration  30: 158580.734 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_11._Benchmark.benchmark_Cluster_11":
  158531.466 ±(99.9%) 562.209 ops/s [Average]
  (min, avg, max) = (156999.220, 158531.466, 160185.617), stdev = 841.488
  CI (99.9%): [157969.257, 159093.675] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_11._Benchmark.benchmark_Cluster_11  thrpt   30  158531.466 ± 562.209  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_110._Benchmark.benchmark_Cluster_110$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_110._Benchmark.benchmark_Cluster_110

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75848.826 ops/s
# Warmup Iteration   2: 87490.322 ops/s
# Warmup Iteration   3: 121514.578 ops/s
# Warmup Iteration   4: 154082.821 ops/s
# Warmup Iteration   5: 154542.308 ops/s
# Warmup Iteration   6: 151081.201 ops/s
# Warmup Iteration   7: 153321.086 ops/s
# Warmup Iteration   8: 153353.703 ops/s
# Warmup Iteration   9: 154313.394 ops/s
# Warmup Iteration  10: 153915.564 ops/s
# Warmup Iteration  11: 118378.453 ops/s
# Warmup Iteration  12: 138689.248 ops/s
# Warmup Iteration  13: 153096.733 ops/s
# Warmup Iteration  14: 154407.265 ops/s
# Warmup Iteration  15: 155056.198 ops/s
# Warmup Iteration  16: 155013.332 ops/s
# Warmup Iteration  17: 159572.896 ops/s
# Warmup Iteration  18: 158234.789 ops/s
# Warmup Iteration  19: 158990.951 ops/s
# Warmup Iteration  20: 159256.248 ops/s
# Warmup Iteration  21: 159529.161 ops/s
# Warmup Iteration  22: 159320.508 ops/s
# Warmup Iteration  23: 159656.102 ops/s
# Warmup Iteration  24: 159696.082 ops/s
# Warmup Iteration  25: 159575.266 ops/s
# Warmup Iteration  26: 159476.937 ops/s
# Warmup Iteration  27: 158476.626 ops/s
# Warmup Iteration  28: 158885.016 ops/s
# Warmup Iteration  29: 159240.181 ops/s
# Warmup Iteration  30: 159729.153 ops/s
Iteration   1: 159878.856 ops/s
Iteration   2: 159227.780 ops/s
Iteration   3: 159027.966 ops/s
Iteration   4: 158837.807 ops/s
Iteration   5: 158065.463 ops/s
Iteration   6: 159937.912 ops/s
Iteration   7: 159777.560 ops/s
Iteration   8: 159956.193 ops/s
Iteration   9: 160038.796 ops/s
Iteration  10: 159743.743 ops/s
Iteration  11: 159829.321 ops/s
Iteration  12: 159423.827 ops/s
Iteration  13: 159983.773 ops/s
Iteration  14: 159565.449 ops/s
Iteration  15: 158425.278 ops/s
Iteration  16: 159409.393 ops/s
Iteration  17: 158920.335 ops/s
Iteration  18: 159080.262 ops/s
Iteration  19: 159907.755 ops/s
Iteration  20: 158454.191 ops/s
Iteration  21: 159124.608 ops/s
Iteration  22: 159136.339 ops/s
Iteration  23: 159308.536 ops/s
Iteration  24: 159357.673 ops/s
Iteration  25: 158616.314 ops/s
Iteration  26: 157982.403 ops/s
Iteration  27: 158904.439 ops/s
Iteration  28: 159421.577 ops/s
Iteration  29: 159620.438 ops/s
Iteration  30: 159878.747 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_110._Benchmark.benchmark_Cluster_110":
  159294.758 ±(99.9%) 386.810 ops/s [Average]
  (min, avg, max) = (157982.403, 159294.758, 160038.796), stdev = 578.959
  CI (99.9%): [158907.948, 159681.568] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_110._Benchmark.benchmark_Cluster_110  thrpt   30  159294.758 ± 386.810  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1100._Benchmark.benchmark_Cluster_1100$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1100._Benchmark.benchmark_Cluster_1100

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 33308.378 ops/s
# Warmup Iteration   2: 47381.646 ops/s
# Warmup Iteration   3: 52222.449 ops/s
# Warmup Iteration   4: 81889.028 ops/s
# Warmup Iteration   5: 81563.684 ops/s
# Warmup Iteration   6: 80279.208 ops/s
# Warmup Iteration   7: 80245.990 ops/s
# Warmup Iteration   8: 80455.488 ops/s
# Warmup Iteration   9: 80524.122 ops/s
# Warmup Iteration  10: 80452.985 ops/s
# Warmup Iteration  11: 80321.117 ops/s
# Warmup Iteration  12: 80264.844 ops/s
# Warmup Iteration  13: 52789.912 ops/s
# Warmup Iteration  14: 80150.218 ops/s
# Warmup Iteration  15: 80674.295 ops/s
# Warmup Iteration  16: 80675.474 ops/s
# Warmup Iteration  17: 79107.021 ops/s
# Warmup Iteration  18: 79911.399 ops/s
# Warmup Iteration  19: 80571.247 ops/s
# Warmup Iteration  20: 80780.514 ops/s
# Warmup Iteration  21: 80713.836 ops/s
# Warmup Iteration  22: 79310.555 ops/s
# Warmup Iteration  23: 79495.316 ops/s
# Warmup Iteration  24: 80045.946 ops/s
# Warmup Iteration  25: 80022.916 ops/s
# Warmup Iteration  26: 80588.123 ops/s
# Warmup Iteration  27: 79981.103 ops/s
# Warmup Iteration  28: 79862.910 ops/s
# Warmup Iteration  29: 79967.043 ops/s
# Warmup Iteration  30: 79452.485 ops/s
Iteration   1: 79577.124 ops/s
Iteration   2: 80654.054 ops/s
Iteration   3: 80827.876 ops/s
Iteration   4: 80903.470 ops/s
Iteration   5: 79973.095 ops/s
Iteration   6: 79487.728 ops/s
Iteration   7: 79611.177 ops/s
Iteration   8: 79038.518 ops/s
Iteration   9: 79291.441 ops/s
Iteration  10: 80009.041 ops/s
Iteration  11: 80006.508 ops/s
Iteration  12: 79953.900 ops/s
Iteration  13: 79086.333 ops/s
Iteration  14: 79910.566 ops/s
Iteration  15: 79778.883 ops/s
Iteration  16: 80293.654 ops/s
Iteration  17: 80312.626 ops/s
Iteration  18: 80462.155 ops/s
Iteration  19: 79598.242 ops/s
Iteration  20: 80429.697 ops/s
Iteration  21: 80013.279 ops/s
Iteration  22: 80009.511 ops/s
Iteration  23: 79612.734 ops/s
Iteration  24: 79430.675 ops/s
Iteration  25: 79387.550 ops/s
Iteration  26: 79791.928 ops/s
Iteration  27: 79822.236 ops/s
Iteration  28: 79779.464 ops/s
Iteration  29: 79592.405 ops/s
Iteration  30: 79651.240 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1100._Benchmark.benchmark_Cluster_1100":
  79876.570 ±(99.9%) 313.626 ops/s [Average]
  (min, avg, max) = (79038.518, 79876.570, 80903.470), stdev = 469.421
  CI (99.9%): [79562.944, 80190.197] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt      Score     Error  Units
Cluster_1100._Benchmark.benchmark_Cluster_1100  thrpt   30  79876.570 ± 313.626  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1101._Benchmark.benchmark_Cluster_1101$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1101._Benchmark.benchmark_Cluster_1101

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86730.047 ops/s
# Warmup Iteration   2: 109933.610 ops/s
# Warmup Iteration   3: 169970.847 ops/s
# Warmup Iteration   4: 200179.934 ops/s
# Warmup Iteration   5: 200359.340 ops/s
# Warmup Iteration   6: 200974.018 ops/s
# Warmup Iteration   7: 202947.748 ops/s
# Warmup Iteration   8: 202994.154 ops/s
# Warmup Iteration   9: 200002.326 ops/s
# Warmup Iteration  10: 139808.455 ops/s
# Warmup Iteration  11: 197246.242 ops/s
# Warmup Iteration  12: 199561.065 ops/s
# Warmup Iteration  13: 200029.068 ops/s
# Warmup Iteration  14: 199779.167 ops/s
# Warmup Iteration  15: 200784.700 ops/s
# Warmup Iteration  16: 201126.253 ops/s
# Warmup Iteration  17: 200258.476 ops/s
# Warmup Iteration  18: 201244.357 ops/s
# Warmup Iteration  19: 200970.079 ops/s
# Warmup Iteration  20: 200901.058 ops/s
# Warmup Iteration  21: 202142.247 ops/s
# Warmup Iteration  22: 201626.323 ops/s
# Warmup Iteration  23: 201813.044 ops/s
# Warmup Iteration  24: 201120.337 ops/s
# Warmup Iteration  25: 199987.547 ops/s
# Warmup Iteration  26: 201733.861 ops/s
# Warmup Iteration  27: 202213.369 ops/s
# Warmup Iteration  28: 203298.287 ops/s
# Warmup Iteration  29: 202486.639 ops/s
# Warmup Iteration  30: 201553.981 ops/s
Iteration   1: 199273.725 ops/s
Iteration   2: 201750.684 ops/s
Iteration   3: 199849.798 ops/s
Iteration   4: 203209.756 ops/s
Iteration   5: 202767.775 ops/s
Iteration   6: 203198.796 ops/s
Iteration   7: 202752.179 ops/s
Iteration   8: 202098.383 ops/s
Iteration   9: 202559.572 ops/s
Iteration  10: 203220.617 ops/s
Iteration  11: 203125.548 ops/s
Iteration  12: 203628.637 ops/s
Iteration  13: 203804.929 ops/s
Iteration  14: 202781.918 ops/s
Iteration  15: 203843.424 ops/s
Iteration  16: 203766.262 ops/s
Iteration  17: 202881.257 ops/s
Iteration  18: 203324.736 ops/s
Iteration  19: 202768.911 ops/s
Iteration  20: 202893.206 ops/s
Iteration  21: 203171.837 ops/s
Iteration  22: 202797.045 ops/s
Iteration  23: 202940.805 ops/s
Iteration  24: 203267.680 ops/s
Iteration  25: 202841.611 ops/s
Iteration  26: 202813.993 ops/s
Iteration  27: 202826.335 ops/s
Iteration  28: 202849.958 ops/s
Iteration  29: 202675.881 ops/s
Iteration  30: 202786.995 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1101._Benchmark.benchmark_Cluster_1101":
  202749.075 ±(99.9%) 653.357 ops/s [Average]
  (min, avg, max) = (199273.725, 202749.075, 203843.424), stdev = 977.914
  CI (99.9%): [202095.718, 203402.432] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1101._Benchmark.benchmark_Cluster_1101  thrpt   30  202749.075 ± 653.357  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1102._Benchmark.benchmark_Cluster_1102$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1102._Benchmark.benchmark_Cluster_1102

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61997.537 ops/s
# Warmup Iteration   2: 91400.647 ops/s
# Warmup Iteration   3: 102349.454 ops/s
# Warmup Iteration   4: 150056.366 ops/s
# Warmup Iteration   5: 149981.536 ops/s
# Warmup Iteration   6: 149530.767 ops/s
# Warmup Iteration   7: 148601.719 ops/s
# Warmup Iteration   8: 148767.553 ops/s
# Warmup Iteration   9: 148892.990 ops/s
# Warmup Iteration  10: 148053.511 ops/s
# Warmup Iteration  11: 147428.609 ops/s
# Warmup Iteration  12: 145247.916 ops/s
# Warmup Iteration  13: 103116.040 ops/s
# Warmup Iteration  14: 149261.738 ops/s
# Warmup Iteration  15: 147728.784 ops/s
# Warmup Iteration  16: 147967.648 ops/s
# Warmup Iteration  17: 149677.208 ops/s
# Warmup Iteration  18: 150156.627 ops/s
# Warmup Iteration  19: 149669.304 ops/s
# Warmup Iteration  20: 149973.575 ops/s
# Warmup Iteration  21: 148939.127 ops/s
# Warmup Iteration  22: 150385.787 ops/s
# Warmup Iteration  23: 149189.328 ops/s
# Warmup Iteration  24: 149844.205 ops/s
# Warmup Iteration  25: 149593.648 ops/s
# Warmup Iteration  26: 150176.438 ops/s
# Warmup Iteration  27: 150328.514 ops/s
# Warmup Iteration  28: 150574.177 ops/s
# Warmup Iteration  29: 150567.665 ops/s
# Warmup Iteration  30: 150452.393 ops/s
Iteration   1: 150644.260 ops/s
Iteration   2: 150649.422 ops/s
Iteration   3: 150451.619 ops/s
Iteration   4: 149543.881 ops/s
Iteration   5: 150243.588 ops/s
Iteration   6: 150375.857 ops/s
Iteration   7: 150043.924 ops/s
Iteration   8: 150150.903 ops/s
Iteration   9: 150439.977 ops/s
Iteration  10: 150355.883 ops/s
Iteration  11: 149751.688 ops/s
Iteration  12: 150667.210 ops/s
Iteration  13: 149524.933 ops/s
Iteration  14: 149809.749 ops/s
Iteration  15: 149386.913 ops/s
Iteration  16: 149314.522 ops/s
Iteration  17: 150399.693 ops/s
Iteration  18: 150305.404 ops/s
Iteration  19: 149598.874 ops/s
Iteration  20: 149268.086 ops/s
Iteration  21: 149648.972 ops/s
Iteration  22: 149677.568 ops/s
Iteration  23: 149368.207 ops/s
Iteration  24: 149079.645 ops/s
Iteration  25: 148785.585 ops/s
Iteration  26: 148891.224 ops/s
Iteration  27: 150372.763 ops/s
Iteration  28: 148690.247 ops/s
Iteration  29: 149387.883 ops/s
Iteration  30: 148154.293 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1102._Benchmark.benchmark_Cluster_1102":
  149766.092 ±(99.9%) 439.170 ops/s [Average]
  (min, avg, max) = (148154.293, 149766.092, 150667.210), stdev = 657.330
  CI (99.9%): [149326.922, 150205.263] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1102._Benchmark.benchmark_Cluster_1102  thrpt   30  149766.092 ± 439.170  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1103._Benchmark.benchmark_Cluster_1103$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1103._Benchmark.benchmark_Cluster_1103

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52579.520 ops/s
# Warmup Iteration   2: 83252.628 ops/s
# Warmup Iteration   3: 81589.854 ops/s
# Warmup Iteration   4: 128524.750 ops/s
# Warmup Iteration   5: 131709.299 ops/s
# Warmup Iteration   6: 132086.555 ops/s
# Warmup Iteration   7: 129947.276 ops/s
# Warmup Iteration   8: 131997.170 ops/s
# Warmup Iteration   9: 132062.218 ops/s
# Warmup Iteration  10: 131269.521 ops/s
# Warmup Iteration  11: 131486.641 ops/s
# Warmup Iteration  12: 130351.574 ops/s
# Warmup Iteration  13: 131560.408 ops/s
# Warmup Iteration  14: 100236.376 ops/s
# Warmup Iteration  15: 120101.472 ops/s
# Warmup Iteration  16: 131421.074 ops/s
# Warmup Iteration  17: 129624.614 ops/s
# Warmup Iteration  18: 131492.917 ops/s
# Warmup Iteration  19: 131417.891 ops/s
# Warmup Iteration  20: 131440.942 ops/s
# Warmup Iteration  21: 132355.226 ops/s
# Warmup Iteration  22: 132188.229 ops/s
# Warmup Iteration  23: 131855.836 ops/s
# Warmup Iteration  24: 131335.574 ops/s
# Warmup Iteration  25: 131537.665 ops/s
# Warmup Iteration  26: 131580.621 ops/s
# Warmup Iteration  27: 130637.869 ops/s
# Warmup Iteration  28: 131378.132 ops/s
# Warmup Iteration  29: 130861.735 ops/s
# Warmup Iteration  30: 131523.055 ops/s
Iteration   1: 132190.440 ops/s
Iteration   2: 131961.782 ops/s
Iteration   3: 132294.249 ops/s
Iteration   4: 131209.080 ops/s
Iteration   5: 130462.064 ops/s
Iteration   6: 130721.291 ops/s
Iteration   7: 130046.058 ops/s
Iteration   8: 130975.004 ops/s
Iteration   9: 131617.126 ops/s
Iteration  10: 132286.660 ops/s
Iteration  11: 132007.717 ops/s
Iteration  12: 132255.442 ops/s
Iteration  13: 132171.833 ops/s
Iteration  14: 131425.418 ops/s
Iteration  15: 130737.374 ops/s
Iteration  16: 130588.409 ops/s
Iteration  17: 130862.392 ops/s
Iteration  18: 131338.594 ops/s
Iteration  19: 131260.404 ops/s
Iteration  20: 129869.449 ops/s
Iteration  21: 130920.573 ops/s
Iteration  22: 130753.653 ops/s
Iteration  23: 130697.251 ops/s
Iteration  24: 130902.017 ops/s
Iteration  25: 130808.317 ops/s
Iteration  26: 131285.694 ops/s
Iteration  27: 131138.486 ops/s
Iteration  28: 131325.355 ops/s
Iteration  29: 130973.174 ops/s
Iteration  30: 130668.527 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1103._Benchmark.benchmark_Cluster_1103":
  131191.795 ±(99.9%) 441.391 ops/s [Average]
  (min, avg, max) = (129869.449, 131191.795, 132294.249), stdev = 660.653
  CI (99.9%): [130750.404, 131633.185] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1103._Benchmark.benchmark_Cluster_1103  thrpt   30  131191.795 ± 441.391  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1104._Benchmark.benchmark_Cluster_1104$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1104._Benchmark.benchmark_Cluster_1104

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 40061.714 ops/s
# Warmup Iteration   2: 65728.224 ops/s
# Warmup Iteration   3: 84856.601 ops/s
# Warmup Iteration   4: 117816.869 ops/s
# Warmup Iteration   5: 119339.523 ops/s
# Warmup Iteration   6: 117736.252 ops/s
# Warmup Iteration   7: 118184.067 ops/s
# Warmup Iteration   8: 117458.207 ops/s
# Warmup Iteration   9: 117418.830 ops/s
# Warmup Iteration  10: 117163.766 ops/s
# Warmup Iteration  11: 79401.436 ops/s
# Warmup Iteration  12: 118802.001 ops/s
# Warmup Iteration  13: 118065.561 ops/s
# Warmup Iteration  14: 118018.877 ops/s
# Warmup Iteration  15: 119083.311 ops/s
# Warmup Iteration  16: 119691.850 ops/s
# Warmup Iteration  17: 119792.624 ops/s
# Warmup Iteration  18: 118958.376 ops/s
# Warmup Iteration  19: 118640.573 ops/s
# Warmup Iteration  20: 119249.810 ops/s
# Warmup Iteration  21: 119110.118 ops/s
# Warmup Iteration  22: 118642.351 ops/s
# Warmup Iteration  23: 118489.600 ops/s
# Warmup Iteration  24: 118543.376 ops/s
# Warmup Iteration  25: 119292.884 ops/s
# Warmup Iteration  26: 118968.101 ops/s
# Warmup Iteration  27: 118944.444 ops/s
# Warmup Iteration  28: 118549.993 ops/s
# Warmup Iteration  29: 118856.235 ops/s
# Warmup Iteration  30: 119263.180 ops/s
Iteration   1: 118595.622 ops/s
Iteration   2: 118667.904 ops/s
Iteration   3: 117960.216 ops/s
Iteration   4: 117825.778 ops/s
Iteration   5: 118371.993 ops/s
Iteration   6: 118348.968 ops/s
Iteration   7: 118553.634 ops/s
Iteration   8: 118436.770 ops/s
Iteration   9: 118271.418 ops/s
Iteration  10: 119185.661 ops/s
Iteration  11: 119175.309 ops/s
Iteration  12: 119431.581 ops/s
Iteration  13: 119395.813 ops/s
Iteration  14: 119015.331 ops/s
Iteration  15: 118777.419 ops/s
Iteration  16: 118913.814 ops/s
Iteration  17: 118480.312 ops/s
Iteration  18: 118047.679 ops/s
Iteration  19: 118761.913 ops/s
Iteration  20: 118845.902 ops/s
Iteration  21: 118620.124 ops/s
Iteration  22: 118290.545 ops/s
Iteration  23: 118398.285 ops/s
Iteration  24: 118072.305 ops/s
Iteration  25: 118217.830 ops/s
Iteration  26: 117588.760 ops/s
Iteration  27: 118268.065 ops/s
Iteration  28: 117825.986 ops/s
Iteration  29: 118730.066 ops/s
Iteration  30: 119017.190 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1104._Benchmark.benchmark_Cluster_1104":
  118536.406 ±(99.9%) 312.275 ops/s [Average]
  (min, avg, max) = (117588.760, 118536.406, 119431.581), stdev = 467.399
  CI (99.9%): [118224.131, 118848.681] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1104._Benchmark.benchmark_Cluster_1104  thrpt   30  118536.406 ± 312.275  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1105._Benchmark.benchmark_Cluster_1105$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1105._Benchmark.benchmark_Cluster_1105

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 39914.277 ops/s
# Warmup Iteration   2: 71684.101 ops/s
# Warmup Iteration   3: 108065.552 ops/s
# Warmup Iteration   4: 140719.887 ops/s
# Warmup Iteration   5: 138097.972 ops/s
# Warmup Iteration   6: 139072.670 ops/s
# Warmup Iteration   7: 140155.796 ops/s
# Warmup Iteration   8: 139949.043 ops/s
# Warmup Iteration   9: 131133.768 ops/s
# Warmup Iteration  10: 101014.973 ops/s
# Warmup Iteration  11: 140039.467 ops/s
# Warmup Iteration  12: 140234.366 ops/s
# Warmup Iteration  13: 140071.808 ops/s
# Warmup Iteration  14: 140953.614 ops/s
# Warmup Iteration  15: 140337.857 ops/s
# Warmup Iteration  16: 139235.359 ops/s
# Warmup Iteration  17: 140939.910 ops/s
# Warmup Iteration  18: 141173.166 ops/s
# Warmup Iteration  19: 141269.669 ops/s
# Warmup Iteration  20: 141180.646 ops/s
# Warmup Iteration  21: 141361.025 ops/s
# Warmup Iteration  22: 141298.467 ops/s
# Warmup Iteration  23: 141439.702 ops/s
# Warmup Iteration  24: 140347.212 ops/s
# Warmup Iteration  25: 139918.289 ops/s
# Warmup Iteration  26: 140453.477 ops/s
# Warmup Iteration  27: 139395.373 ops/s
# Warmup Iteration  28: 140775.423 ops/s
# Warmup Iteration  29: 141505.595 ops/s
# Warmup Iteration  30: 141250.700 ops/s
Iteration   1: 141542.399 ops/s
Iteration   2: 141134.347 ops/s
Iteration   3: 141344.454 ops/s
Iteration   4: 141487.430 ops/s
Iteration   5: 141069.124 ops/s
Iteration   6: 141310.725 ops/s
Iteration   7: 141295.058 ops/s
Iteration   8: 141000.563 ops/s
Iteration   9: 141254.135 ops/s
Iteration  10: 140405.598 ops/s
Iteration  11: 139729.654 ops/s
Iteration  12: 140054.884 ops/s
Iteration  13: 139878.176 ops/s
Iteration  14: 140691.440 ops/s
Iteration  15: 141097.558 ops/s
Iteration  16: 139620.912 ops/s
Iteration  17: 140214.644 ops/s
Iteration  18: 141026.189 ops/s
Iteration  19: 141519.041 ops/s
Iteration  20: 141398.030 ops/s
Iteration  21: 140273.834 ops/s
Iteration  22: 140329.636 ops/s
Iteration  23: 141119.194 ops/s
Iteration  24: 140764.726 ops/s
Iteration  25: 141040.990 ops/s
Iteration  26: 141239.544 ops/s
Iteration  27: 140890.213 ops/s
Iteration  28: 141307.978 ops/s
Iteration  29: 140287.905 ops/s
Iteration  30: 140456.599 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1105._Benchmark.benchmark_Cluster_1105":
  140826.166 ±(99.9%) 376.314 ops/s [Average]
  (min, avg, max) = (139620.912, 140826.166, 141542.399), stdev = 563.249
  CI (99.9%): [140449.852, 141202.480] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1105._Benchmark.benchmark_Cluster_1105  thrpt   30  140826.166 ± 376.314  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1106._Benchmark.benchmark_Cluster_1106$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1106._Benchmark.benchmark_Cluster_1106

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69723.879 ops/s
# Warmup Iteration   2: 102712.815 ops/s
# Warmup Iteration   3: 156486.905 ops/s
# Warmup Iteration   4: 192383.031 ops/s
# Warmup Iteration   5: 189154.636 ops/s
# Warmup Iteration   6: 191824.848 ops/s
# Warmup Iteration   7: 190725.029 ops/s
# Warmup Iteration   8: 189768.224 ops/s
# Warmup Iteration   9: 191273.603 ops/s
# Warmup Iteration  10: 129605.193 ops/s
# Warmup Iteration  11: 190612.679 ops/s
# Warmup Iteration  12: 191876.202 ops/s
# Warmup Iteration  13: 193025.697 ops/s
# Warmup Iteration  14: 193134.374 ops/s
# Warmup Iteration  15: 189791.560 ops/s
# Warmup Iteration  16: 189852.311 ops/s
# Warmup Iteration  17: 189221.150 ops/s
# Warmup Iteration  18: 189860.661 ops/s
# Warmup Iteration  19: 191890.317 ops/s
# Warmup Iteration  20: 189735.883 ops/s
# Warmup Iteration  21: 190091.272 ops/s
# Warmup Iteration  22: 189884.435 ops/s
# Warmup Iteration  23: 190336.112 ops/s
# Warmup Iteration  24: 191210.044 ops/s
# Warmup Iteration  25: 190521.007 ops/s
# Warmup Iteration  26: 190840.850 ops/s
# Warmup Iteration  27: 191626.073 ops/s
# Warmup Iteration  28: 191243.490 ops/s
# Warmup Iteration  29: 190047.059 ops/s
# Warmup Iteration  30: 191246.951 ops/s
Iteration   1: 189938.280 ops/s
Iteration   2: 190152.963 ops/s
Iteration   3: 189717.239 ops/s
Iteration   4: 189756.992 ops/s
Iteration   5: 189910.867 ops/s
Iteration   6: 189933.327 ops/s
Iteration   7: 192140.098 ops/s
Iteration   8: 190385.300 ops/s
Iteration   9: 191538.195 ops/s
Iteration  10: 189288.825 ops/s
Iteration  11: 190477.336 ops/s
Iteration  12: 190998.447 ops/s
Iteration  13: 189675.865 ops/s
Iteration  14: 189356.919 ops/s
Iteration  15: 190142.946 ops/s
Iteration  16: 192352.649 ops/s
Iteration  17: 191587.770 ops/s
Iteration  18: 190603.059 ops/s
Iteration  19: 190396.572 ops/s
Iteration  20: 189844.329 ops/s
Iteration  21: 189764.540 ops/s
Iteration  22: 189667.714 ops/s
Iteration  23: 189751.441 ops/s
Iteration  24: 189506.642 ops/s
Iteration  25: 189685.125 ops/s
Iteration  26: 191320.289 ops/s
Iteration  27: 191892.893 ops/s
Iteration  28: 193196.828 ops/s
Iteration  29: 192278.629 ops/s
Iteration  30: 190284.239 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1106._Benchmark.benchmark_Cluster_1106":
  190518.211 ±(99.9%) 696.057 ops/s [Average]
  (min, avg, max) = (189288.825, 190518.211, 193196.828), stdev = 1041.826
  CI (99.9%): [189822.153, 191214.268] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1106._Benchmark.benchmark_Cluster_1106  thrpt   30  190518.211 ± 696.057  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1107._Benchmark.benchmark_Cluster_1107$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1107._Benchmark.benchmark_Cluster_1107

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68326.184 ops/s
# Warmup Iteration   2: 93780.604 ops/s
# Warmup Iteration   3: 162852.172 ops/s
# Warmup Iteration   4: 182068.762 ops/s
# Warmup Iteration   5: 179976.367 ops/s
# Warmup Iteration   6: 182132.306 ops/s
# Warmup Iteration   7: 181100.665 ops/s
# Warmup Iteration   8: 182076.971 ops/s
# Warmup Iteration   9: 123274.159 ops/s
# Warmup Iteration  10: 182898.316 ops/s
# Warmup Iteration  11: 182626.129 ops/s
# Warmup Iteration  12: 181488.871 ops/s
# Warmup Iteration  13: 181362.949 ops/s
# Warmup Iteration  14: 181248.109 ops/s
# Warmup Iteration  15: 182027.154 ops/s
# Warmup Iteration  16: 181030.942 ops/s
# Warmup Iteration  17: 180794.759 ops/s
# Warmup Iteration  18: 181833.749 ops/s
# Warmup Iteration  19: 181683.003 ops/s
# Warmup Iteration  20: 180944.324 ops/s
# Warmup Iteration  21: 182261.365 ops/s
# Warmup Iteration  22: 181550.606 ops/s
# Warmup Iteration  23: 182090.402 ops/s
# Warmup Iteration  24: 181595.157 ops/s
# Warmup Iteration  25: 181909.751 ops/s
# Warmup Iteration  26: 181383.716 ops/s
# Warmup Iteration  27: 182022.341 ops/s
# Warmup Iteration  28: 183057.565 ops/s
# Warmup Iteration  29: 182449.562 ops/s
# Warmup Iteration  30: 182078.282 ops/s
Iteration   1: 182688.088 ops/s
Iteration   2: 181569.293 ops/s
Iteration   3: 181003.507 ops/s
Iteration   4: 182041.332 ops/s
Iteration   5: 182331.303 ops/s
Iteration   6: 182695.999 ops/s
Iteration   7: 182210.058 ops/s
Iteration   8: 182037.131 ops/s
Iteration   9: 180477.578 ops/s
Iteration  10: 180589.086 ops/s
Iteration  11: 180741.096 ops/s
Iteration  12: 181954.070 ops/s
Iteration  13: 181651.499 ops/s
Iteration  14: 181874.196 ops/s
Iteration  15: 181761.011 ops/s
Iteration  16: 182239.699 ops/s
Iteration  17: 181734.157 ops/s
Iteration  18: 181795.526 ops/s
Iteration  19: 181025.153 ops/s
Iteration  20: 181407.897 ops/s
Iteration  21: 181142.160 ops/s
Iteration  22: 181517.693 ops/s
Iteration  23: 181092.288 ops/s
Iteration  24: 180679.478 ops/s
Iteration  25: 181590.548 ops/s
Iteration  26: 181299.825 ops/s
Iteration  27: 180977.995 ops/s
Iteration  28: 181667.504 ops/s
Iteration  29: 181865.240 ops/s
Iteration  30: 182108.212 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1107._Benchmark.benchmark_Cluster_1107":
  181592.287 ±(99.9%) 397.129 ops/s [Average]
  (min, avg, max) = (180477.578, 181592.287, 182695.999), stdev = 594.404
  CI (99.9%): [181195.159, 181989.416] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1107._Benchmark.benchmark_Cluster_1107  thrpt   30  181592.287 ± 397.129  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1108._Benchmark.benchmark_Cluster_1108$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1108._Benchmark.benchmark_Cluster_1108

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 88598.273 ops/s
# Warmup Iteration   2: 98035.339 ops/s
# Warmup Iteration   3: 99121.032 ops/s
# Warmup Iteration   4: 113232.913 ops/s
# Warmup Iteration   5: 136328.099 ops/s
# Warmup Iteration   6: 136447.810 ops/s
# Warmup Iteration   7: 136289.601 ops/s
# Warmup Iteration   8: 136177.997 ops/s
# Warmup Iteration   9: 134783.069 ops/s
# Warmup Iteration  10: 135639.040 ops/s
# Warmup Iteration  11: 136191.991 ops/s
# Warmup Iteration  12: 137401.455 ops/s
# Warmup Iteration  13: 137298.094 ops/s
# Warmup Iteration  14: 136970.180 ops/s
# Warmup Iteration  15: 137557.638 ops/s
# Warmup Iteration  16: 136788.570 ops/s
# Warmup Iteration  17: 144174.895 ops/s
# Warmup Iteration  18: 143955.856 ops/s
# Warmup Iteration  19: 128418.918 ops/s
# Warmup Iteration  20: 113311.917 ops/s
# Warmup Iteration  21: 142948.570 ops/s
# Warmup Iteration  22: 143372.755 ops/s
# Warmup Iteration  23: 144077.740 ops/s
# Warmup Iteration  24: 144115.469 ops/s
# Warmup Iteration  25: 143793.318 ops/s
# Warmup Iteration  26: 143671.431 ops/s
# Warmup Iteration  27: 143938.968 ops/s
# Warmup Iteration  28: 144460.667 ops/s
# Warmup Iteration  29: 144857.857 ops/s
# Warmup Iteration  30: 143807.717 ops/s
Iteration   1: 142714.146 ops/s
Iteration   2: 142470.941 ops/s
Iteration   3: 142899.729 ops/s
Iteration   4: 143915.021 ops/s
Iteration   5: 142868.858 ops/s
Iteration   6: 143123.973 ops/s
Iteration   7: 142899.824 ops/s
Iteration   8: 144458.189 ops/s
Iteration   9: 143223.575 ops/s
Iteration  10: 143857.355 ops/s
Iteration  11: 144065.168 ops/s
Iteration  12: 145021.535 ops/s
Iteration  13: 143773.342 ops/s
Iteration  14: 144371.306 ops/s
Iteration  15: 143663.326 ops/s
Iteration  16: 143851.266 ops/s
Iteration  17: 143623.569 ops/s
Iteration  18: 144525.285 ops/s
Iteration  19: 144226.197 ops/s
Iteration  20: 144432.766 ops/s
Iteration  21: 144161.244 ops/s
Iteration  22: 143858.446 ops/s
Iteration  23: 144946.388 ops/s
Iteration  24: 144913.609 ops/s
Iteration  25: 144926.821 ops/s
Iteration  26: 145431.391 ops/s
Iteration  27: 145357.049 ops/s
Iteration  28: 144621.582 ops/s
Iteration  29: 144897.922 ops/s
Iteration  30: 145280.002 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1108._Benchmark.benchmark_Cluster_1108":
  144079.327 ±(99.9%) 561.680 ops/s [Average]
  (min, avg, max) = (142470.941, 144079.327, 145431.391), stdev = 840.696
  CI (99.9%): [143517.648, 144641.007] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1108._Benchmark.benchmark_Cluster_1108  thrpt   30  144079.327 ± 561.680  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1109._Benchmark.benchmark_Cluster_1109$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1109._Benchmark.benchmark_Cluster_1109

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46613.738 ops/s
# Warmup Iteration   2: 77126.561 ops/s
# Warmup Iteration   3: 119491.951 ops/s
# Warmup Iteration   4: 154597.949 ops/s
# Warmup Iteration   5: 152641.639 ops/s
# Warmup Iteration   6: 154654.252 ops/s
# Warmup Iteration   7: 154669.384 ops/s
# Warmup Iteration   8: 154581.504 ops/s
# Warmup Iteration   9: 131871.594 ops/s
# Warmup Iteration  10: 122933.548 ops/s
# Warmup Iteration  11: 153866.858 ops/s
# Warmup Iteration  12: 153697.935 ops/s
# Warmup Iteration  13: 153932.017 ops/s
# Warmup Iteration  14: 155029.343 ops/s
# Warmup Iteration  15: 154762.925 ops/s
# Warmup Iteration  16: 155094.918 ops/s
# Warmup Iteration  17: 155465.338 ops/s
# Warmup Iteration  18: 155009.969 ops/s
# Warmup Iteration  19: 155133.021 ops/s
# Warmup Iteration  20: 155030.871 ops/s
# Warmup Iteration  21: 154560.169 ops/s
# Warmup Iteration  22: 154207.298 ops/s
# Warmup Iteration  23: 154541.557 ops/s
# Warmup Iteration  24: 153562.557 ops/s
# Warmup Iteration  25: 154320.662 ops/s
# Warmup Iteration  26: 154973.603 ops/s
# Warmup Iteration  27: 155108.285 ops/s
# Warmup Iteration  28: 153870.358 ops/s
# Warmup Iteration  29: 153270.244 ops/s
# Warmup Iteration  30: 153785.585 ops/s
Iteration   1: 154124.424 ops/s
Iteration   2: 155026.243 ops/s
Iteration   3: 155320.695 ops/s
Iteration   4: 154133.534 ops/s
Iteration   5: 154425.344 ops/s
Iteration   6: 154296.216 ops/s
Iteration   7: 154420.844 ops/s
Iteration   8: 155378.891 ops/s
Iteration   9: 153805.661 ops/s
Iteration  10: 154523.994 ops/s
Iteration  11: 154397.283 ops/s
Iteration  12: 154546.269 ops/s
Iteration  13: 154261.740 ops/s
Iteration  14: 153604.625 ops/s
Iteration  15: 154042.954 ops/s
Iteration  16: 153211.106 ops/s
Iteration  17: 153593.512 ops/s
Iteration  18: 153483.083 ops/s
Iteration  19: 154216.126 ops/s
Iteration  20: 153342.374 ops/s
Iteration  21: 153683.400 ops/s
Iteration  22: 153373.107 ops/s
Iteration  23: 153110.554 ops/s
Iteration  24: 152652.220 ops/s
Iteration  25: 153959.431 ops/s
Iteration  26: 153427.615 ops/s
Iteration  27: 153758.975 ops/s
Iteration  28: 155100.898 ops/s
Iteration  29: 154958.044 ops/s
Iteration  30: 154912.186 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1109._Benchmark.benchmark_Cluster_1109":
  154103.045 ±(99.9%) 461.527 ops/s [Average]
  (min, avg, max) = (152652.220, 154103.045, 155378.891), stdev = 690.793
  CI (99.9%): [153641.517, 154564.572] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1109._Benchmark.benchmark_Cluster_1109  thrpt   30  154103.045 ± 461.527  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_111._Benchmark.benchmark_Cluster_111$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_111._Benchmark.benchmark_Cluster_111

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61696.134 ops/s
# Warmup Iteration   2: 75071.039 ops/s
# Warmup Iteration   3: 166277.661 ops/s
# Warmup Iteration   4: 168327.202 ops/s
# Warmup Iteration   5: 170711.568 ops/s
# Warmup Iteration   6: 171326.742 ops/s
# Warmup Iteration   7: 170155.744 ops/s
# Warmup Iteration   8: 110352.195 ops/s
# Warmup Iteration   9: 169171.480 ops/s
# Warmup Iteration  10: 170192.726 ops/s
# Warmup Iteration  11: 172694.263 ops/s
# Warmup Iteration  12: 172230.679 ops/s
# Warmup Iteration  13: 171260.816 ops/s
# Warmup Iteration  14: 169790.426 ops/s
# Warmup Iteration  15: 170053.350 ops/s
# Warmup Iteration  16: 170866.650 ops/s
# Warmup Iteration  17: 172455.408 ops/s
# Warmup Iteration  18: 171722.326 ops/s
# Warmup Iteration  19: 170578.691 ops/s
# Warmup Iteration  20: 170421.837 ops/s
# Warmup Iteration  21: 171536.735 ops/s
# Warmup Iteration  22: 172274.289 ops/s
# Warmup Iteration  23: 171962.722 ops/s
# Warmup Iteration  24: 170504.530 ops/s
# Warmup Iteration  25: 170690.583 ops/s
# Warmup Iteration  26: 171116.228 ops/s
# Warmup Iteration  27: 170686.564 ops/s
# Warmup Iteration  28: 170734.297 ops/s
# Warmup Iteration  29: 170034.341 ops/s
# Warmup Iteration  30: 172274.111 ops/s
Iteration   1: 172934.979 ops/s
Iteration   2: 172534.450 ops/s
Iteration   3: 171156.068 ops/s
Iteration   4: 171796.612 ops/s
Iteration   5: 170641.530 ops/s
Iteration   6: 170020.609 ops/s
Iteration   7: 170755.159 ops/s
Iteration   8: 170150.488 ops/s
Iteration   9: 169859.501 ops/s
Iteration  10: 170822.111 ops/s
Iteration  11: 173235.682 ops/s
Iteration  12: 171015.670 ops/s
Iteration  13: 170057.794 ops/s
Iteration  14: 170511.005 ops/s
Iteration  15: 170642.675 ops/s
Iteration  16: 169748.242 ops/s
Iteration  17: 169974.418 ops/s
Iteration  18: 169818.031 ops/s
Iteration  19: 169566.667 ops/s
Iteration  20: 171298.167 ops/s
Iteration  21: 171238.435 ops/s
Iteration  22: 173074.430 ops/s
Iteration  23: 171147.269 ops/s
Iteration  24: 169881.575 ops/s
Iteration  25: 171428.402 ops/s
Iteration  26: 172630.657 ops/s
Iteration  27: 172461.246 ops/s
Iteration  28: 171573.969 ops/s
Iteration  29: 171060.005 ops/s
Iteration  30: 170480.500 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_111._Benchmark.benchmark_Cluster_111":
  171050.545 ±(99.9%) 718.169 ops/s [Average]
  (min, avg, max) = (169566.667, 171050.545, 173235.682), stdev = 1074.922
  CI (99.9%): [170332.375, 171768.714] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_111._Benchmark.benchmark_Cluster_111  thrpt   30  171050.545 ± 718.169  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1110._Benchmark.benchmark_Cluster_1110$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1110._Benchmark.benchmark_Cluster_1110

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83015.257 ops/s
# Warmup Iteration   2: 99345.026 ops/s
# Warmup Iteration   3: 99498.982 ops/s
# Warmup Iteration   4: 145370.850 ops/s
# Warmup Iteration   5: 151070.225 ops/s
# Warmup Iteration   6: 150540.664 ops/s
# Warmup Iteration   7: 150028.837 ops/s
# Warmup Iteration   8: 146808.807 ops/s
# Warmup Iteration   9: 148942.091 ops/s
# Warmup Iteration  10: 149767.881 ops/s
# Warmup Iteration  11: 151123.308 ops/s
# Warmup Iteration  12: 149488.650 ops/s
# Warmup Iteration  13: 148297.665 ops/s
# Warmup Iteration  14: 149824.314 ops/s
# Warmup Iteration  15: 150629.166 ops/s
# Warmup Iteration  16: 102465.393 ops/s
# Warmup Iteration  17: 154850.083 ops/s
# Warmup Iteration  18: 156383.860 ops/s
# Warmup Iteration  19: 156571.052 ops/s
# Warmup Iteration  20: 157002.832 ops/s
# Warmup Iteration  21: 157715.568 ops/s
# Warmup Iteration  22: 157099.627 ops/s
# Warmup Iteration  23: 157146.882 ops/s
# Warmup Iteration  24: 156724.773 ops/s
# Warmup Iteration  25: 158259.763 ops/s
# Warmup Iteration  26: 158269.065 ops/s
# Warmup Iteration  27: 158337.226 ops/s
# Warmup Iteration  28: 158540.406 ops/s
# Warmup Iteration  29: 158469.862 ops/s
# Warmup Iteration  30: 158187.607 ops/s
Iteration   1: 158511.474 ops/s
Iteration   2: 157897.414 ops/s
Iteration   3: 157308.950 ops/s
Iteration   4: 157950.762 ops/s
Iteration   5: 158526.395 ops/s
Iteration   6: 158619.924 ops/s
Iteration   7: 156962.052 ops/s
Iteration   8: 157804.414 ops/s
Iteration   9: 158405.089 ops/s
Iteration  10: 157262.530 ops/s
Iteration  11: 156812.710 ops/s
Iteration  12: 157317.963 ops/s
Iteration  13: 155937.088 ops/s
Iteration  14: 155327.687 ops/s
Iteration  15: 155867.906 ops/s
Iteration  16: 155462.427 ops/s
Iteration  17: 157070.712 ops/s
Iteration  18: 156954.593 ops/s
Iteration  19: 156355.256 ops/s
Iteration  20: 155778.790 ops/s
Iteration  21: 154802.401 ops/s
Iteration  22: 156408.555 ops/s
Iteration  23: 157294.108 ops/s
Iteration  24: 157117.818 ops/s
Iteration  25: 156989.800 ops/s
Iteration  26: 156999.192 ops/s
Iteration  27: 158154.570 ops/s
Iteration  28: 158183.460 ops/s
Iteration  29: 157730.475 ops/s
Iteration  30: 158303.771 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1110._Benchmark.benchmark_Cluster_1110":
  157137.276 ±(99.9%) 691.201 ops/s [Average]
  (min, avg, max) = (154802.401, 157137.276, 158619.924), stdev = 1034.557
  CI (99.9%): [156446.075, 157828.477] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1110._Benchmark.benchmark_Cluster_1110  thrpt   30  157137.276 ± 691.201  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1111._Benchmark.benchmark_Cluster_1111$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1111._Benchmark.benchmark_Cluster_1111

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58309.157 ops/s
# Warmup Iteration   2: 85795.974 ops/s
# Warmup Iteration   3: 130199.640 ops/s
# Warmup Iteration   4: 159931.548 ops/s
# Warmup Iteration   5: 158174.706 ops/s
# Warmup Iteration   6: 160677.661 ops/s
# Warmup Iteration   7: 159309.674 ops/s
# Warmup Iteration   8: 160101.609 ops/s
# Warmup Iteration   9: 160310.626 ops/s
# Warmup Iteration  10: 109720.859 ops/s
# Warmup Iteration  11: 159009.140 ops/s
# Warmup Iteration  12: 158656.322 ops/s
# Warmup Iteration  13: 159070.663 ops/s
# Warmup Iteration  14: 160294.270 ops/s
# Warmup Iteration  15: 160606.422 ops/s
# Warmup Iteration  16: 159690.063 ops/s
# Warmup Iteration  17: 158156.481 ops/s
# Warmup Iteration  18: 158896.742 ops/s
# Warmup Iteration  19: 160367.201 ops/s
# Warmup Iteration  20: 160437.268 ops/s
# Warmup Iteration  21: 159971.405 ops/s
# Warmup Iteration  22: 158483.571 ops/s
# Warmup Iteration  23: 158758.931 ops/s
# Warmup Iteration  24: 159505.996 ops/s
# Warmup Iteration  25: 159589.247 ops/s
# Warmup Iteration  26: 159933.633 ops/s
# Warmup Iteration  27: 158829.716 ops/s
# Warmup Iteration  28: 160724.174 ops/s
# Warmup Iteration  29: 159755.601 ops/s
# Warmup Iteration  30: 160884.903 ops/s
Iteration   1: 160475.825 ops/s
Iteration   2: 160936.542 ops/s
Iteration   3: 159550.398 ops/s
Iteration   4: 160579.146 ops/s
Iteration   5: 160359.675 ops/s
Iteration   6: 158306.690 ops/s
Iteration   7: 159121.535 ops/s
Iteration   8: 160268.496 ops/s
Iteration   9: 158486.883 ops/s
Iteration  10: 158959.606 ops/s
Iteration  11: 160594.460 ops/s
Iteration  12: 160029.834 ops/s
Iteration  13: 159178.331 ops/s
Iteration  14: 159160.831 ops/s
Iteration  15: 158664.471 ops/s
Iteration  16: 159357.059 ops/s
Iteration  17: 160472.301 ops/s
Iteration  18: 160505.119 ops/s
Iteration  19: 161313.310 ops/s
Iteration  20: 160805.133 ops/s
Iteration  21: 158582.372 ops/s
Iteration  22: 159388.220 ops/s
Iteration  23: 160759.230 ops/s
Iteration  24: 161205.447 ops/s
Iteration  25: 161191.047 ops/s
Iteration  26: 160980.496 ops/s
Iteration  27: 161461.564 ops/s
Iteration  28: 160852.359 ops/s
Iteration  29: 159297.715 ops/s
Iteration  30: 159028.864 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1111._Benchmark.benchmark_Cluster_1111":
  159995.765 ±(99.9%) 641.398 ops/s [Average]
  (min, avg, max) = (158306.690, 159995.765, 161461.564), stdev = 960.015
  CI (99.9%): [159354.367, 160637.164] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1111._Benchmark.benchmark_Cluster_1111  thrpt   30  159995.765 ± 641.398  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1112._Benchmark.benchmark_Cluster_1112$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1112._Benchmark.benchmark_Cluster_1112

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 112442.545 ops/s
# Warmup Iteration   2: 134726.629 ops/s
# Warmup Iteration   3: 186828.700 ops/s
# Warmup Iteration   4: 230452.627 ops/s
# Warmup Iteration   5: 232025.579 ops/s
# Warmup Iteration   6: 229624.031 ops/s
# Warmup Iteration   7: 232071.170 ops/s
# Warmup Iteration   8: 230997.480 ops/s
# Warmup Iteration   9: 230178.511 ops/s
# Warmup Iteration  10: 230198.293 ops/s
# Warmup Iteration  11: 184041.297 ops/s
# Warmup Iteration  12: 206594.114 ops/s
# Warmup Iteration  13: 231553.736 ops/s
# Warmup Iteration  14: 232965.391 ops/s
# Warmup Iteration  15: 232974.660 ops/s
# Warmup Iteration  16: 232204.481 ops/s
# Warmup Iteration  17: 231691.663 ops/s
# Warmup Iteration  18: 232474.952 ops/s
# Warmup Iteration  19: 231430.954 ops/s
# Warmup Iteration  20: 231002.735 ops/s
# Warmup Iteration  21: 232649.115 ops/s
# Warmup Iteration  22: 232265.266 ops/s
# Warmup Iteration  23: 232583.625 ops/s
# Warmup Iteration  24: 233466.654 ops/s
# Warmup Iteration  25: 233409.066 ops/s
# Warmup Iteration  26: 232514.781 ops/s
# Warmup Iteration  27: 233118.379 ops/s
# Warmup Iteration  28: 232832.782 ops/s
# Warmup Iteration  29: 232973.939 ops/s
# Warmup Iteration  30: 233239.826 ops/s
Iteration   1: 231216.452 ops/s
Iteration   2: 233229.458 ops/s
Iteration   3: 233085.615 ops/s
Iteration   4: 232651.590 ops/s
Iteration   5: 233174.897 ops/s
Iteration   6: 232629.109 ops/s
Iteration   7: 233016.406 ops/s
Iteration   8: 232503.070 ops/s
Iteration   9: 233192.554 ops/s
Iteration  10: 233238.690 ops/s
Iteration  11: 233112.893 ops/s
Iteration  12: 232815.164 ops/s
Iteration  13: 232010.597 ops/s
Iteration  14: 231469.536 ops/s
Iteration  15: 231145.965 ops/s
Iteration  16: 231915.025 ops/s
Iteration  17: 232843.552 ops/s
Iteration  18: 230639.618 ops/s
Iteration  19: 230675.155 ops/s
Iteration  20: 229941.735 ops/s
Iteration  21: 231179.369 ops/s
Iteration  22: 230378.806 ops/s
Iteration  23: 229565.844 ops/s
Iteration  24: 230375.286 ops/s
Iteration  25: 230194.161 ops/s
Iteration  26: 230671.899 ops/s
Iteration  27: 231562.383 ops/s
Iteration  28: 232405.471 ops/s
Iteration  29: 230779.735 ops/s
Iteration  30: 233328.424 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1112._Benchmark.benchmark_Cluster_1112":
  231831.615 ±(99.9%) 793.175 ops/s [Average]
  (min, avg, max) = (229565.844, 231831.615, 233328.424), stdev = 1187.187
  CI (99.9%): [231038.440, 232624.790] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1112._Benchmark.benchmark_Cluster_1112  thrpt   30  231831.615 ± 793.175  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1113._Benchmark.benchmark_Cluster_1113$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1113._Benchmark.benchmark_Cluster_1113

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63387.881 ops/s
# Warmup Iteration   2: 84526.754 ops/s
# Warmup Iteration   3: 115360.365 ops/s
# Warmup Iteration   4: 148499.960 ops/s
# Warmup Iteration   5: 149404.514 ops/s
# Warmup Iteration   6: 147721.676 ops/s
# Warmup Iteration   7: 149319.816 ops/s
# Warmup Iteration   8: 150244.029 ops/s
# Warmup Iteration   9: 150476.389 ops/s
# Warmup Iteration  10: 148955.459 ops/s
# Warmup Iteration  11: 107300.661 ops/s
# Warmup Iteration  12: 141930.226 ops/s
# Warmup Iteration  13: 150251.609 ops/s
# Warmup Iteration  14: 149810.261 ops/s
# Warmup Iteration  15: 149514.313 ops/s
# Warmup Iteration  16: 149319.265 ops/s
# Warmup Iteration  17: 150472.220 ops/s
# Warmup Iteration  18: 150908.302 ops/s
# Warmup Iteration  19: 150089.535 ops/s
# Warmup Iteration  20: 148984.686 ops/s
# Warmup Iteration  21: 149647.907 ops/s
# Warmup Iteration  22: 149613.108 ops/s
# Warmup Iteration  23: 149261.613 ops/s
# Warmup Iteration  24: 148878.463 ops/s
# Warmup Iteration  25: 149141.366 ops/s
# Warmup Iteration  26: 148649.220 ops/s
# Warmup Iteration  27: 149891.250 ops/s
# Warmup Iteration  28: 149620.415 ops/s
# Warmup Iteration  29: 150623.375 ops/s
# Warmup Iteration  30: 148702.564 ops/s
Iteration   1: 149898.586 ops/s
Iteration   2: 148260.779 ops/s
Iteration   3: 148631.828 ops/s
Iteration   4: 148954.610 ops/s
Iteration   5: 149122.719 ops/s
Iteration   6: 148743.133 ops/s
Iteration   7: 149139.847 ops/s
Iteration   8: 148676.152 ops/s
Iteration   9: 148812.626 ops/s
Iteration  10: 148586.285 ops/s
Iteration  11: 149679.115 ops/s
Iteration  12: 149074.548 ops/s
Iteration  13: 148994.440 ops/s
Iteration  14: 150549.371 ops/s
Iteration  15: 150487.221 ops/s
Iteration  16: 150981.453 ops/s
Iteration  17: 150928.803 ops/s
Iteration  18: 150719.862 ops/s
Iteration  19: 150401.699 ops/s
Iteration  20: 150561.023 ops/s
Iteration  21: 150619.930 ops/s
Iteration  22: 150543.311 ops/s
Iteration  23: 150082.836 ops/s
Iteration  24: 150776.585 ops/s
Iteration  25: 150555.682 ops/s
Iteration  26: 150298.097 ops/s
Iteration  27: 150104.537 ops/s
Iteration  28: 151070.316 ops/s
Iteration  29: 150532.327 ops/s
Iteration  30: 150400.856 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1113._Benchmark.benchmark_Cluster_1113":
  149872.953 ±(99.9%) 586.969 ops/s [Average]
  (min, avg, max) = (148260.779, 149872.953, 151070.316), stdev = 878.548
  CI (99.9%): [149285.983, 150459.922] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1113._Benchmark.benchmark_Cluster_1113  thrpt   30  149872.953 ± 586.969  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1114._Benchmark.benchmark_Cluster_1114$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1114._Benchmark.benchmark_Cluster_1114

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63388.385 ops/s
# Warmup Iteration   2: 83549.375 ops/s
# Warmup Iteration   3: 175110.409 ops/s
# Warmup Iteration   4: 176264.161 ops/s
# Warmup Iteration   5: 178443.192 ops/s
# Warmup Iteration   6: 178386.774 ops/s
# Warmup Iteration   7: 173285.971 ops/s
# Warmup Iteration   8: 127121.959 ops/s
# Warmup Iteration   9: 177764.525 ops/s
# Warmup Iteration  10: 178562.639 ops/s
# Warmup Iteration  11: 178452.359 ops/s
# Warmup Iteration  12: 178461.887 ops/s
# Warmup Iteration  13: 178717.700 ops/s
# Warmup Iteration  14: 178454.219 ops/s
# Warmup Iteration  15: 178015.539 ops/s
# Warmup Iteration  16: 178587.512 ops/s
# Warmup Iteration  17: 177930.109 ops/s
# Warmup Iteration  18: 178251.230 ops/s
# Warmup Iteration  19: 178504.730 ops/s
# Warmup Iteration  20: 178320.648 ops/s
# Warmup Iteration  21: 178325.712 ops/s
# Warmup Iteration  22: 178402.969 ops/s
# Warmup Iteration  23: 178642.608 ops/s
# Warmup Iteration  24: 178015.950 ops/s
# Warmup Iteration  25: 178557.371 ops/s
# Warmup Iteration  26: 178314.794 ops/s
# Warmup Iteration  27: 178352.063 ops/s
# Warmup Iteration  28: 178299.198 ops/s
# Warmup Iteration  29: 178041.981 ops/s
# Warmup Iteration  30: 177841.761 ops/s
Iteration   1: 178456.358 ops/s
Iteration   2: 177743.237 ops/s
Iteration   3: 178008.960 ops/s
Iteration   4: 178140.394 ops/s
Iteration   5: 178224.165 ops/s
Iteration   6: 177947.616 ops/s
Iteration   7: 178103.043 ops/s
Iteration   8: 178096.914 ops/s
Iteration   9: 178138.281 ops/s
Iteration  10: 178368.198 ops/s
Iteration  11: 177707.322 ops/s
Iteration  12: 177945.010 ops/s
Iteration  13: 177905.943 ops/s
Iteration  14: 178277.104 ops/s
Iteration  15: 178294.326 ops/s
Iteration  16: 177628.706 ops/s
Iteration  17: 178125.440 ops/s
Iteration  18: 177980.845 ops/s
Iteration  19: 178341.676 ops/s
Iteration  20: 178297.627 ops/s
Iteration  21: 178616.472 ops/s
Iteration  22: 177909.889 ops/s
Iteration  23: 178065.665 ops/s
Iteration  24: 178495.989 ops/s
Iteration  25: 178539.505 ops/s
Iteration  26: 178523.707 ops/s
Iteration  27: 178071.819 ops/s
Iteration  28: 178388.071 ops/s
Iteration  29: 178100.178 ops/s
Iteration  30: 178311.993 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1114._Benchmark.benchmark_Cluster_1114":
  178158.482 ±(99.9%) 168.991 ops/s [Average]
  (min, avg, max) = (177628.706, 178158.482, 178616.472), stdev = 252.938
  CI (99.9%): [177989.490, 178327.473] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1114._Benchmark.benchmark_Cluster_1114  thrpt   30  178158.482 ± 168.991  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1115._Benchmark.benchmark_Cluster_1115$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1115._Benchmark.benchmark_Cluster_1115

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 38277.976 ops/s
# Warmup Iteration   2: 58817.652 ops/s
# Warmup Iteration   3: 60745.460 ops/s
# Warmup Iteration   4: 93758.160 ops/s
# Warmup Iteration   5: 92879.049 ops/s
# Warmup Iteration   6: 94187.194 ops/s
# Warmup Iteration   7: 93212.401 ops/s
# Warmup Iteration   8: 93744.790 ops/s
# Warmup Iteration   9: 94073.607 ops/s
# Warmup Iteration  10: 93936.837 ops/s
# Warmup Iteration  11: 94114.640 ops/s
# Warmup Iteration  12: 93479.210 ops/s
# Warmup Iteration  13: 94473.192 ops/s
# Warmup Iteration  14: 63943.066 ops/s
# Warmup Iteration  15: 93945.376 ops/s
# Warmup Iteration  16: 93275.860 ops/s
# Warmup Iteration  17: 93203.772 ops/s
# Warmup Iteration  18: 92001.689 ops/s
# Warmup Iteration  19: 93520.269 ops/s
# Warmup Iteration  20: 93064.551 ops/s
# Warmup Iteration  21: 92839.214 ops/s
# Warmup Iteration  22: 92167.035 ops/s
# Warmup Iteration  23: 92146.032 ops/s
# Warmup Iteration  24: 93484.870 ops/s
# Warmup Iteration  25: 92543.094 ops/s
# Warmup Iteration  26: 92557.578 ops/s
# Warmup Iteration  27: 92766.396 ops/s
# Warmup Iteration  28: 93633.329 ops/s
# Warmup Iteration  29: 93242.716 ops/s
# Warmup Iteration  30: 93261.205 ops/s
Iteration   1: 93313.842 ops/s
Iteration   2: 93669.137 ops/s
Iteration   3: 91820.833 ops/s
Iteration   4: 91476.196 ops/s
Iteration   5: 93214.981 ops/s
Iteration   6: 92894.136 ops/s
Iteration   7: 92957.654 ops/s
Iteration   8: 93186.894 ops/s
Iteration   9: 93060.292 ops/s
Iteration  10: 93043.999 ops/s
Iteration  11: 93941.490 ops/s
Iteration  12: 93922.087 ops/s
Iteration  13: 93442.116 ops/s
Iteration  14: 93536.696 ops/s
Iteration  15: 93500.627 ops/s
Iteration  16: 92902.359 ops/s
Iteration  17: 92941.875 ops/s
Iteration  18: 92599.359 ops/s
Iteration  19: 93053.456 ops/s
Iteration  20: 91863.196 ops/s
Iteration  21: 93357.459 ops/s
Iteration  22: 93592.892 ops/s
Iteration  23: 93274.728 ops/s
Iteration  24: 93522.462 ops/s
Iteration  25: 91824.530 ops/s
Iteration  26: 93537.244 ops/s
Iteration  27: 92691.796 ops/s
Iteration  28: 93138.044 ops/s
Iteration  29: 92275.505 ops/s
Iteration  30: 92016.705 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1115._Benchmark.benchmark_Cluster_1115":
  92985.753 ±(99.9%) 436.802 ops/s [Average]
  (min, avg, max) = (91476.196, 92985.753, 93941.490), stdev = 653.784
  CI (99.9%): [92548.951, 93422.555] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt      Score     Error  Units
Cluster_1115._Benchmark.benchmark_Cluster_1115  thrpt   30  92985.753 ± 436.802  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1116._Benchmark.benchmark_Cluster_1116$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1116._Benchmark.benchmark_Cluster_1116

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57815.113 ops/s
# Warmup Iteration   2: 82793.027 ops/s
# Warmup Iteration   3: 120093.181 ops/s
# Warmup Iteration   4: 154966.398 ops/s
# Warmup Iteration   5: 153872.943 ops/s
# Warmup Iteration   6: 153640.113 ops/s
# Warmup Iteration   7: 154249.448 ops/s
# Warmup Iteration   8: 154987.311 ops/s
# Warmup Iteration   9: 155329.174 ops/s
# Warmup Iteration  10: 126076.130 ops/s
# Warmup Iteration  11: 134983.635 ops/s
# Warmup Iteration  12: 153873.953 ops/s
# Warmup Iteration  13: 155066.921 ops/s
# Warmup Iteration  14: 154372.785 ops/s
# Warmup Iteration  15: 153718.779 ops/s
# Warmup Iteration  16: 153786.778 ops/s
# Warmup Iteration  17: 154218.098 ops/s
# Warmup Iteration  18: 154862.728 ops/s
# Warmup Iteration  19: 154787.590 ops/s
# Warmup Iteration  20: 154671.227 ops/s
# Warmup Iteration  21: 155706.791 ops/s
# Warmup Iteration  22: 153263.184 ops/s
# Warmup Iteration  23: 154670.373 ops/s
# Warmup Iteration  24: 155153.875 ops/s
# Warmup Iteration  25: 155473.237 ops/s
# Warmup Iteration  26: 154152.908 ops/s
# Warmup Iteration  27: 153975.868 ops/s
# Warmup Iteration  28: 153060.164 ops/s
# Warmup Iteration  29: 154406.191 ops/s
# Warmup Iteration  30: 152836.980 ops/s
Iteration   1: 154314.455 ops/s
Iteration   2: 155850.448 ops/s
Iteration   3: 153651.018 ops/s
Iteration   4: 152640.036 ops/s
Iteration   5: 154551.812 ops/s
Iteration   6: 152246.816 ops/s
Iteration   7: 152989.038 ops/s
Iteration   8: 153495.771 ops/s
Iteration   9: 153953.053 ops/s
Iteration  10: 153470.915 ops/s
Iteration  11: 152257.898 ops/s
Iteration  12: 153019.700 ops/s
Iteration  13: 155796.164 ops/s
Iteration  14: 155409.434 ops/s
Iteration  15: 154751.429 ops/s
Iteration  16: 154230.826 ops/s
Iteration  17: 154078.348 ops/s
Iteration  18: 154633.434 ops/s
Iteration  19: 152522.367 ops/s
Iteration  20: 155067.909 ops/s
Iteration  21: 154676.864 ops/s
Iteration  22: 153870.095 ops/s
Iteration  23: 152827.244 ops/s
Iteration  24: 152657.648 ops/s
Iteration  25: 155038.532 ops/s
Iteration  26: 155902.059 ops/s
Iteration  27: 153296.593 ops/s
Iteration  28: 153390.624 ops/s
Iteration  29: 155136.301 ops/s
Iteration  30: 154514.204 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1116._Benchmark.benchmark_Cluster_1116":
  154008.035 ±(99.9%) 731.430 ops/s [Average]
  (min, avg, max) = (152246.816, 154008.035, 155902.059), stdev = 1094.770
  CI (99.9%): [153276.605, 154739.464] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1116._Benchmark.benchmark_Cluster_1116  thrpt   30  154008.035 ± 731.430  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1117._Benchmark.benchmark_Cluster_1117$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1117._Benchmark.benchmark_Cluster_1117

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79143.477 ops/s
# Warmup Iteration   2: 86887.887 ops/s
# Warmup Iteration   3: 189548.634 ops/s
# Warmup Iteration   4: 189715.213 ops/s
# Warmup Iteration   5: 193130.824 ops/s
# Warmup Iteration   6: 193254.288 ops/s
# Warmup Iteration   7: 193041.005 ops/s
# Warmup Iteration   8: 127091.553 ops/s
# Warmup Iteration   9: 193172.911 ops/s
# Warmup Iteration  10: 193092.322 ops/s
# Warmup Iteration  11: 191547.213 ops/s
# Warmup Iteration  12: 191911.558 ops/s
# Warmup Iteration  13: 191282.428 ops/s
# Warmup Iteration  14: 192173.013 ops/s
# Warmup Iteration  15: 192202.884 ops/s
# Warmup Iteration  16: 192353.240 ops/s
# Warmup Iteration  17: 193941.124 ops/s
# Warmup Iteration  18: 189441.726 ops/s
# Warmup Iteration  19: 191382.615 ops/s
# Warmup Iteration  20: 190379.960 ops/s
# Warmup Iteration  21: 191301.663 ops/s
# Warmup Iteration  22: 190857.336 ops/s
# Warmup Iteration  23: 191042.348 ops/s
# Warmup Iteration  24: 191897.064 ops/s
# Warmup Iteration  25: 192219.043 ops/s
# Warmup Iteration  26: 191375.088 ops/s
# Warmup Iteration  27: 190926.014 ops/s
# Warmup Iteration  28: 193786.173 ops/s
# Warmup Iteration  29: 191576.661 ops/s
# Warmup Iteration  30: 190832.597 ops/s
Iteration   1: 189080.617 ops/s
Iteration   2: 191324.585 ops/s
Iteration   3: 189361.026 ops/s
Iteration   4: 192607.310 ops/s
Iteration   5: 193339.040 ops/s
Iteration   6: 193868.408 ops/s
Iteration   7: 193739.958 ops/s
Iteration   8: 193359.628 ops/s
Iteration   9: 193367.340 ops/s
Iteration  10: 193317.963 ops/s
Iteration  11: 193778.265 ops/s
Iteration  12: 193100.526 ops/s
Iteration  13: 192737.504 ops/s
Iteration  14: 192147.876 ops/s
Iteration  15: 190180.347 ops/s
Iteration  16: 192992.233 ops/s
Iteration  17: 193529.554 ops/s
Iteration  18: 193557.747 ops/s
Iteration  19: 193520.801 ops/s
Iteration  20: 194037.376 ops/s
Iteration  21: 191741.712 ops/s
Iteration  22: 192149.947 ops/s
Iteration  23: 192168.504 ops/s
Iteration  24: 191162.101 ops/s
Iteration  25: 191838.128 ops/s
Iteration  26: 191041.124 ops/s
Iteration  27: 192671.325 ops/s
Iteration  28: 192728.121 ops/s
Iteration  29: 192601.200 ops/s
Iteration  30: 191926.459 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1117._Benchmark.benchmark_Cluster_1117":
  192432.558 ±(99.9%) 859.937 ops/s [Average]
  (min, avg, max) = (189080.617, 192432.558, 194037.376), stdev = 1287.113
  CI (99.9%): [191572.621, 193292.494] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1117._Benchmark.benchmark_Cluster_1117  thrpt   30  192432.558 ± 859.937  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1118._Benchmark.benchmark_Cluster_1118$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1118._Benchmark.benchmark_Cluster_1118

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71561.655 ops/s
# Warmup Iteration   2: 84021.502 ops/s
# Warmup Iteration   3: 151075.954 ops/s
# Warmup Iteration   4: 162579.633 ops/s
# Warmup Iteration   5: 162911.352 ops/s
# Warmup Iteration   6: 162636.725 ops/s
# Warmup Iteration   7: 163373.378 ops/s
# Warmup Iteration   8: 163612.532 ops/s
# Warmup Iteration   9: 111002.758 ops/s
# Warmup Iteration  10: 163035.729 ops/s
# Warmup Iteration  11: 162704.733 ops/s
# Warmup Iteration  12: 163106.415 ops/s
# Warmup Iteration  13: 163190.109 ops/s
# Warmup Iteration  14: 163103.097 ops/s
# Warmup Iteration  15: 163082.231 ops/s
# Warmup Iteration  16: 162860.454 ops/s
# Warmup Iteration  17: 163523.990 ops/s
# Warmup Iteration  18: 163467.144 ops/s
# Warmup Iteration  19: 163349.353 ops/s
# Warmup Iteration  20: 163451.201 ops/s
# Warmup Iteration  21: 162991.053 ops/s
# Warmup Iteration  22: 162496.304 ops/s
# Warmup Iteration  23: 162462.525 ops/s
# Warmup Iteration  24: 163107.414 ops/s
# Warmup Iteration  25: 163459.080 ops/s
# Warmup Iteration  26: 163573.730 ops/s
# Warmup Iteration  27: 163405.307 ops/s
# Warmup Iteration  28: 162551.937 ops/s
# Warmup Iteration  29: 162854.623 ops/s
# Warmup Iteration  30: 163549.764 ops/s
Iteration   1: 163628.763 ops/s
Iteration   2: 163212.214 ops/s
Iteration   3: 162344.789 ops/s
Iteration   4: 162775.403 ops/s
Iteration   5: 162138.056 ops/s
Iteration   6: 162593.752 ops/s
Iteration   7: 163355.833 ops/s
Iteration   8: 163454.045 ops/s
Iteration   9: 162684.509 ops/s
Iteration  10: 163520.148 ops/s
Iteration  11: 163335.338 ops/s
Iteration  12: 163148.110 ops/s
Iteration  13: 162975.259 ops/s
Iteration  14: 163135.340 ops/s
Iteration  15: 162204.777 ops/s
Iteration  16: 162147.888 ops/s
Iteration  17: 163363.949 ops/s
Iteration  18: 163268.842 ops/s
Iteration  19: 162279.487 ops/s
Iteration  20: 162594.512 ops/s
Iteration  21: 162820.817 ops/s
Iteration  22: 162760.383 ops/s
Iteration  23: 163237.067 ops/s
Iteration  24: 163155.201 ops/s
Iteration  25: 162963.499 ops/s
Iteration  26: 163495.468 ops/s
Iteration  27: 163197.115 ops/s
Iteration  28: 162676.007 ops/s
Iteration  29: 163296.433 ops/s
Iteration  30: 163486.317 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1118._Benchmark.benchmark_Cluster_1118":
  162974.977 ±(99.9%) 298.715 ops/s [Average]
  (min, avg, max) = (162138.056, 162974.977, 163628.763), stdev = 447.102
  CI (99.9%): [162676.263, 163273.692] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1118._Benchmark.benchmark_Cluster_1118  thrpt   30  162974.977 ± 298.715  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1119._Benchmark.benchmark_Cluster_1119$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1119._Benchmark.benchmark_Cluster_1119

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 102064.142 ops/s
# Warmup Iteration   2: 112427.458 ops/s
# Warmup Iteration   3: 182685.325 ops/s
# Warmup Iteration   4: 208054.039 ops/s
# Warmup Iteration   5: 207843.136 ops/s
# Warmup Iteration   6: 207873.229 ops/s
# Warmup Iteration   7: 208541.655 ops/s
# Warmup Iteration   8: 208211.131 ops/s
# Warmup Iteration   9: 207379.003 ops/s
# Warmup Iteration  10: 143257.324 ops/s
# Warmup Iteration  11: 205536.875 ops/s
# Warmup Iteration  12: 207153.638 ops/s
# Warmup Iteration  13: 207459.603 ops/s
# Warmup Iteration  14: 208453.365 ops/s
# Warmup Iteration  15: 208960.218 ops/s
# Warmup Iteration  16: 208648.417 ops/s
# Warmup Iteration  17: 208661.092 ops/s
# Warmup Iteration  18: 206306.947 ops/s
# Warmup Iteration  19: 206024.960 ops/s
# Warmup Iteration  20: 206360.510 ops/s
# Warmup Iteration  21: 207056.811 ops/s
# Warmup Iteration  22: 207093.424 ops/s
# Warmup Iteration  23: 208463.641 ops/s
# Warmup Iteration  24: 207043.192 ops/s
# Warmup Iteration  25: 206207.037 ops/s
# Warmup Iteration  26: 206552.629 ops/s
# Warmup Iteration  27: 207291.606 ops/s
# Warmup Iteration  28: 207717.234 ops/s
# Warmup Iteration  29: 206506.504 ops/s
# Warmup Iteration  30: 207429.455 ops/s
Iteration   1: 206542.315 ops/s
Iteration   2: 207464.817 ops/s
Iteration   3: 206161.646 ops/s
Iteration   4: 208011.806 ops/s
Iteration   5: 208427.573 ops/s
Iteration   6: 208071.454 ops/s
Iteration   7: 208122.199 ops/s
Iteration   8: 207679.004 ops/s
Iteration   9: 207477.018 ops/s
Iteration  10: 206530.181 ops/s
Iteration  11: 207848.741 ops/s
Iteration  12: 206691.000 ops/s
Iteration  13: 206366.082 ops/s
Iteration  14: 206988.319 ops/s
Iteration  15: 207207.839 ops/s
Iteration  16: 208804.235 ops/s
Iteration  17: 207621.470 ops/s
Iteration  18: 205892.016 ops/s
Iteration  19: 206015.783 ops/s
Iteration  20: 206180.738 ops/s
Iteration  21: 205809.873 ops/s
Iteration  22: 206220.828 ops/s
Iteration  23: 206686.268 ops/s
Iteration  24: 204871.347 ops/s
Iteration  25: 205838.135 ops/s
Iteration  26: 207102.940 ops/s
Iteration  27: 204679.580 ops/s
Iteration  28: 205227.367 ops/s
Iteration  29: 205699.343 ops/s
Iteration  30: 205330.801 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1119._Benchmark.benchmark_Cluster_1119":
  206719.024 ±(99.9%) 722.637 ops/s [Average]
  (min, avg, max) = (204679.580, 206719.024, 208804.235), stdev = 1081.609
  CI (99.9%): [205996.387, 207441.661] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1119._Benchmark.benchmark_Cluster_1119  thrpt   30  206719.024 ± 722.637  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_112._Benchmark.benchmark_Cluster_112$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_112._Benchmark.benchmark_Cluster_112

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48146.071 ops/s
# Warmup Iteration   2: 67660.784 ops/s
# Warmup Iteration   3: 111816.248 ops/s
# Warmup Iteration   4: 133898.109 ops/s
# Warmup Iteration   5: 132482.613 ops/s
# Warmup Iteration   6: 133960.832 ops/s
# Warmup Iteration   7: 134560.768 ops/s
# Warmup Iteration   8: 133779.646 ops/s
# Warmup Iteration   9: 107583.744 ops/s
# Warmup Iteration  10: 118846.663 ops/s
# Warmup Iteration  11: 134271.148 ops/s
# Warmup Iteration  12: 134633.624 ops/s
# Warmup Iteration  13: 133821.546 ops/s
# Warmup Iteration  14: 134481.008 ops/s
# Warmup Iteration  15: 134096.931 ops/s
# Warmup Iteration  16: 133777.628 ops/s
# Warmup Iteration  17: 135468.679 ops/s
# Warmup Iteration  18: 135475.117 ops/s
# Warmup Iteration  19: 135135.933 ops/s
# Warmup Iteration  20: 135141.437 ops/s
# Warmup Iteration  21: 135692.319 ops/s
# Warmup Iteration  22: 135811.590 ops/s
# Warmup Iteration  23: 135708.715 ops/s
# Warmup Iteration  24: 134699.625 ops/s
# Warmup Iteration  25: 133855.516 ops/s
# Warmup Iteration  26: 135488.469 ops/s
# Warmup Iteration  27: 134484.352 ops/s
# Warmup Iteration  28: 134009.583 ops/s
# Warmup Iteration  29: 134269.845 ops/s
# Warmup Iteration  30: 133643.014 ops/s
Iteration   1: 133669.491 ops/s
Iteration   2: 134466.456 ops/s
Iteration   3: 134360.184 ops/s
Iteration   4: 134745.639 ops/s
Iteration   5: 133202.530 ops/s
Iteration   6: 134023.405 ops/s
Iteration   7: 133880.733 ops/s
Iteration   8: 133222.373 ops/s
Iteration   9: 132987.279 ops/s
Iteration  10: 133432.833 ops/s
Iteration  11: 133979.682 ops/s
Iteration  12: 133543.190 ops/s
Iteration  13: 133906.378 ops/s
Iteration  14: 134973.237 ops/s
Iteration  15: 135096.053 ops/s
Iteration  16: 135518.626 ops/s
Iteration  17: 134512.385 ops/s
Iteration  18: 133805.930 ops/s
Iteration  19: 135114.260 ops/s
Iteration  20: 134472.752 ops/s
Iteration  21: 133776.472 ops/s
Iteration  22: 134312.505 ops/s
Iteration  23: 134893.802 ops/s
Iteration  24: 135112.543 ops/s
Iteration  25: 135493.786 ops/s
Iteration  26: 132621.256 ops/s
Iteration  27: 134063.490 ops/s
Iteration  28: 134037.780 ops/s
Iteration  29: 133048.853 ops/s
Iteration  30: 133686.602 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_112._Benchmark.benchmark_Cluster_112":
  134132.017 ±(99.9%) 509.352 ops/s [Average]
  (min, avg, max) = (132621.256, 134132.017, 135518.626), stdev = 762.374
  CI (99.9%): [133622.665, 134641.369] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_112._Benchmark.benchmark_Cluster_112  thrpt   30  134132.017 ± 509.352  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1120._Benchmark.benchmark_Cluster_1120$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1120._Benchmark.benchmark_Cluster_1120

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 36257.936 ops/s
# Warmup Iteration   2: 78334.206 ops/s
# Warmup Iteration   3: 83359.149 ops/s
# Warmup Iteration   4: 140659.306 ops/s
# Warmup Iteration   5: 140334.302 ops/s
# Warmup Iteration   6: 139840.828 ops/s
# Warmup Iteration   7: 142146.247 ops/s
# Warmup Iteration   8: 138971.545 ops/s
# Warmup Iteration   9: 140597.837 ops/s
# Warmup Iteration  10: 139442.931 ops/s
# Warmup Iteration  11: 137610.526 ops/s
# Warmup Iteration  12: 101692.911 ops/s
# Warmup Iteration  13: 124833.607 ops/s
# Warmup Iteration  14: 139341.249 ops/s
# Warmup Iteration  15: 140829.678 ops/s
# Warmup Iteration  16: 140003.303 ops/s
# Warmup Iteration  17: 144056.563 ops/s
# Warmup Iteration  18: 142977.131 ops/s
# Warmup Iteration  19: 141890.802 ops/s
# Warmup Iteration  20: 141843.054 ops/s
# Warmup Iteration  21: 143581.609 ops/s
# Warmup Iteration  22: 142939.883 ops/s
# Warmup Iteration  23: 143135.083 ops/s
# Warmup Iteration  24: 141559.800 ops/s
# Warmup Iteration  25: 143354.197 ops/s
# Warmup Iteration  26: 142540.740 ops/s
# Warmup Iteration  27: 142782.978 ops/s
# Warmup Iteration  28: 142573.310 ops/s
# Warmup Iteration  29: 143186.109 ops/s
# Warmup Iteration  30: 140525.780 ops/s
Iteration   1: 142403.014 ops/s
Iteration   2: 142887.764 ops/s
Iteration   3: 142345.468 ops/s
Iteration   4: 141731.802 ops/s
Iteration   5: 140221.047 ops/s
Iteration   6: 140249.030 ops/s
Iteration   7: 142533.240 ops/s
Iteration   8: 142192.887 ops/s
Iteration   9: 141892.863 ops/s
Iteration  10: 142555.197 ops/s
Iteration  11: 144060.615 ops/s
Iteration  12: 143576.359 ops/s
Iteration  13: 143695.688 ops/s
Iteration  14: 140705.569 ops/s
Iteration  15: 142186.258 ops/s
Iteration  16: 141445.176 ops/s
Iteration  17: 140618.432 ops/s
Iteration  18: 141828.085 ops/s
Iteration  19: 142176.743 ops/s
Iteration  20: 141877.717 ops/s
Iteration  21: 142680.957 ops/s
Iteration  22: 144498.393 ops/s
Iteration  23: 141391.787 ops/s
Iteration  24: 139351.038 ops/s
Iteration  25: 141263.012 ops/s
Iteration  26: 141558.141 ops/s
Iteration  27: 142463.579 ops/s
Iteration  28: 141206.950 ops/s
Iteration  29: 142137.257 ops/s
Iteration  30: 141236.623 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1120._Benchmark.benchmark_Cluster_1120":
  141965.690 ±(99.9%) 763.418 ops/s [Average]
  (min, avg, max) = (139351.038, 141965.690, 144498.393), stdev = 1142.648
  CI (99.9%): [141202.272, 142729.108] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1120._Benchmark.benchmark_Cluster_1120  thrpt   30  141965.690 ± 763.418  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1121._Benchmark.benchmark_Cluster_1121$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1121._Benchmark.benchmark_Cluster_1121

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59107.854 ops/s
# Warmup Iteration   2: 81974.263 ops/s
# Warmup Iteration   3: 94334.717 ops/s
# Warmup Iteration   4: 141584.544 ops/s
# Warmup Iteration   5: 140466.995 ops/s
# Warmup Iteration   6: 140228.320 ops/s
# Warmup Iteration   7: 140642.330 ops/s
# Warmup Iteration   8: 141774.320 ops/s
# Warmup Iteration   9: 142080.436 ops/s
# Warmup Iteration  10: 141763.153 ops/s
# Warmup Iteration  11: 140799.535 ops/s
# Warmup Iteration  12: 131949.411 ops/s
# Warmup Iteration  13: 104106.120 ops/s
# Warmup Iteration  14: 140867.665 ops/s
# Warmup Iteration  15: 141331.079 ops/s
# Warmup Iteration  16: 142025.917 ops/s
# Warmup Iteration  17: 145619.478 ops/s
# Warmup Iteration  18: 144932.108 ops/s
# Warmup Iteration  19: 145359.684 ops/s
# Warmup Iteration  20: 145127.463 ops/s
# Warmup Iteration  21: 146125.931 ops/s
# Warmup Iteration  22: 144734.759 ops/s
# Warmup Iteration  23: 144210.943 ops/s
# Warmup Iteration  24: 144927.831 ops/s
# Warmup Iteration  25: 144408.401 ops/s
# Warmup Iteration  26: 144915.031 ops/s
# Warmup Iteration  27: 144452.327 ops/s
# Warmup Iteration  28: 144665.736 ops/s
# Warmup Iteration  29: 144653.122 ops/s
# Warmup Iteration  30: 145493.104 ops/s
Iteration   1: 143836.288 ops/s
Iteration   2: 143791.000 ops/s
Iteration   3: 144719.734 ops/s
Iteration   4: 144602.680 ops/s
Iteration   5: 144353.246 ops/s
Iteration   6: 143383.974 ops/s
Iteration   7: 143891.530 ops/s
Iteration   8: 144133.200 ops/s
Iteration   9: 144393.938 ops/s
Iteration  10: 145194.741 ops/s
Iteration  11: 145792.186 ops/s
Iteration  12: 145336.778 ops/s
Iteration  13: 144197.702 ops/s
Iteration  14: 144377.197 ops/s
Iteration  15: 146231.381 ops/s
Iteration  16: 145604.245 ops/s
Iteration  17: 145956.690 ops/s
Iteration  18: 145031.800 ops/s
Iteration  19: 144747.755 ops/s
Iteration  20: 144497.720 ops/s
Iteration  21: 145433.648 ops/s
Iteration  22: 145107.307 ops/s
Iteration  23: 145701.538 ops/s
Iteration  24: 145724.512 ops/s
Iteration  25: 144717.764 ops/s
Iteration  26: 144759.959 ops/s
Iteration  27: 144549.636 ops/s
Iteration  28: 144220.870 ops/s
Iteration  29: 143908.931 ops/s
Iteration  30: 145159.339 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1121._Benchmark.benchmark_Cluster_1121":
  144778.576 ±(99.9%) 484.687 ops/s [Average]
  (min, avg, max) = (143383.974, 144778.576, 146231.381), stdev = 725.456
  CI (99.9%): [144293.890, 145263.263] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1121._Benchmark.benchmark_Cluster_1121  thrpt   30  144778.576 ± 484.687  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1122._Benchmark.benchmark_Cluster_1122$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1122._Benchmark.benchmark_Cluster_1122

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46124.850 ops/s
# Warmup Iteration   2: 85710.625 ops/s
# Warmup Iteration   3: 85945.142 ops/s
# Warmup Iteration   4: 137354.390 ops/s
# Warmup Iteration   5: 141802.985 ops/s
# Warmup Iteration   6: 140694.022 ops/s
# Warmup Iteration   7: 137094.304 ops/s
# Warmup Iteration   8: 139937.604 ops/s
# Warmup Iteration   9: 139818.715 ops/s
# Warmup Iteration  10: 140888.266 ops/s
# Warmup Iteration  11: 141601.907 ops/s
# Warmup Iteration  12: 140420.730 ops/s
# Warmup Iteration  13: 132553.814 ops/s
# Warmup Iteration  14: 102709.098 ops/s
# Warmup Iteration  15: 140142.944 ops/s
# Warmup Iteration  16: 140084.867 ops/s
# Warmup Iteration  17: 141448.375 ops/s
# Warmup Iteration  18: 141339.387 ops/s
# Warmup Iteration  19: 140611.490 ops/s
# Warmup Iteration  20: 142730.190 ops/s
# Warmup Iteration  21: 142782.122 ops/s
# Warmup Iteration  22: 143054.235 ops/s
# Warmup Iteration  23: 142895.702 ops/s
# Warmup Iteration  24: 141577.225 ops/s
# Warmup Iteration  25: 141652.747 ops/s
# Warmup Iteration  26: 142248.581 ops/s
# Warmup Iteration  27: 142020.295 ops/s
# Warmup Iteration  28: 141609.528 ops/s
# Warmup Iteration  29: 141689.942 ops/s
# Warmup Iteration  30: 143071.917 ops/s
Iteration   1: 143229.128 ops/s
Iteration   2: 141106.307 ops/s
Iteration   3: 140810.763 ops/s
Iteration   4: 140644.017 ops/s
Iteration   5: 141820.365 ops/s
Iteration   6: 142362.855 ops/s
Iteration   7: 141993.284 ops/s
Iteration   8: 142504.810 ops/s
Iteration   9: 143041.809 ops/s
Iteration  10: 142966.338 ops/s
Iteration  11: 143127.019 ops/s
Iteration  12: 141170.915 ops/s
Iteration  13: 140856.318 ops/s
Iteration  14: 141066.466 ops/s
Iteration  15: 141032.879 ops/s
Iteration  16: 142218.805 ops/s
Iteration  17: 142356.170 ops/s
Iteration  18: 143290.376 ops/s
Iteration  19: 143297.695 ops/s
Iteration  20: 141859.000 ops/s
Iteration  21: 142772.319 ops/s
Iteration  22: 140846.201 ops/s
Iteration  23: 140895.598 ops/s
Iteration  24: 141098.529 ops/s
Iteration  25: 140355.149 ops/s
Iteration  26: 140851.760 ops/s
Iteration  27: 141196.360 ops/s
Iteration  28: 141554.461 ops/s
Iteration  29: 142512.758 ops/s
Iteration  30: 142186.446 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1122._Benchmark.benchmark_Cluster_1122":
  141834.163 ±(99.9%) 619.303 ops/s [Average]
  (min, avg, max) = (140355.149, 141834.163, 143297.695), stdev = 926.944
  CI (99.9%): [141214.860, 142453.466] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1122._Benchmark.benchmark_Cluster_1122  thrpt   30  141834.163 ± 619.303  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1123._Benchmark.benchmark_Cluster_1123$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1123._Benchmark.benchmark_Cluster_1123

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55157.847 ops/s
# Warmup Iteration   2: 81301.526 ops/s
# Warmup Iteration   3: 109445.248 ops/s
# Warmup Iteration   4: 148706.241 ops/s
# Warmup Iteration   5: 148332.660 ops/s
# Warmup Iteration   6: 146283.943 ops/s
# Warmup Iteration   7: 148029.433 ops/s
# Warmup Iteration   8: 148056.625 ops/s
# Warmup Iteration   9: 147765.892 ops/s
# Warmup Iteration  10: 148912.131 ops/s
# Warmup Iteration  11: 99198.609 ops/s
# Warmup Iteration  12: 148355.663 ops/s
# Warmup Iteration  13: 147921.075 ops/s
# Warmup Iteration  14: 149143.993 ops/s
# Warmup Iteration  15: 149360.074 ops/s
# Warmup Iteration  16: 148020.964 ops/s
# Warmup Iteration  17: 148351.190 ops/s
# Warmup Iteration  18: 148535.775 ops/s
# Warmup Iteration  19: 148662.102 ops/s
# Warmup Iteration  20: 149126.013 ops/s
# Warmup Iteration  21: 148387.448 ops/s
# Warmup Iteration  22: 147820.118 ops/s
# Warmup Iteration  23: 148378.185 ops/s
# Warmup Iteration  24: 148982.474 ops/s
# Warmup Iteration  25: 148090.849 ops/s
# Warmup Iteration  26: 148738.209 ops/s
# Warmup Iteration  27: 147559.981 ops/s
# Warmup Iteration  28: 148651.921 ops/s
# Warmup Iteration  29: 148287.116 ops/s
# Warmup Iteration  30: 148030.778 ops/s
Iteration   1: 147575.604 ops/s
Iteration   2: 148224.919 ops/s
Iteration   3: 148620.227 ops/s
Iteration   4: 147168.630 ops/s
Iteration   5: 147051.721 ops/s
Iteration   6: 147093.911 ops/s
Iteration   7: 148300.572 ops/s
Iteration   8: 149185.808 ops/s
Iteration   9: 148967.998 ops/s
Iteration  10: 148770.592 ops/s
Iteration  11: 148717.644 ops/s
Iteration  12: 148303.694 ops/s
Iteration  13: 147922.792 ops/s
Iteration  14: 148462.151 ops/s
Iteration  15: 148466.431 ops/s
Iteration  16: 148679.962 ops/s
Iteration  17: 148547.596 ops/s
Iteration  18: 148266.321 ops/s
Iteration  19: 148507.630 ops/s
Iteration  20: 148106.496 ops/s
Iteration  21: 148381.212 ops/s
Iteration  22: 147602.693 ops/s
Iteration  23: 148764.158 ops/s
Iteration  24: 146519.382 ops/s
Iteration  25: 147904.364 ops/s
Iteration  26: 148978.159 ops/s
Iteration  27: 149166.114 ops/s
Iteration  28: 149129.552 ops/s
Iteration  29: 149067.290 ops/s
Iteration  30: 148271.092 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1123._Benchmark.benchmark_Cluster_1123":
  148290.824 ±(99.9%) 456.804 ops/s [Average]
  (min, avg, max) = (146519.382, 148290.824, 149185.808), stdev = 683.723
  CI (99.9%): [147834.019, 148747.628] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1123._Benchmark.benchmark_Cluster_1123  thrpt   30  148290.824 ± 456.804  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1124._Benchmark.benchmark_Cluster_1124$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1124._Benchmark.benchmark_Cluster_1124

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 84334.804 ops/s
# Warmup Iteration   2: 99284.938 ops/s
# Warmup Iteration   3: 161400.192 ops/s
# Warmup Iteration   4: 184801.079 ops/s
# Warmup Iteration   5: 184502.075 ops/s
# Warmup Iteration   6: 186437.734 ops/s
# Warmup Iteration   7: 186421.576 ops/s
# Warmup Iteration   8: 186415.404 ops/s
# Warmup Iteration   9: 185413.999 ops/s
# Warmup Iteration  10: 123949.222 ops/s
# Warmup Iteration  11: 185318.141 ops/s
# Warmup Iteration  12: 185707.426 ops/s
# Warmup Iteration  13: 184957.622 ops/s
# Warmup Iteration  14: 184845.057 ops/s
# Warmup Iteration  15: 185857.030 ops/s
# Warmup Iteration  16: 185244.454 ops/s
# Warmup Iteration  17: 184683.674 ops/s
# Warmup Iteration  18: 185863.969 ops/s
# Warmup Iteration  19: 185795.385 ops/s
# Warmup Iteration  20: 184946.861 ops/s
# Warmup Iteration  21: 184617.176 ops/s
# Warmup Iteration  22: 185430.891 ops/s
# Warmup Iteration  23: 185501.191 ops/s
# Warmup Iteration  24: 186002.510 ops/s
# Warmup Iteration  25: 187051.651 ops/s
# Warmup Iteration  26: 186034.916 ops/s
# Warmup Iteration  27: 184894.531 ops/s
# Warmup Iteration  28: 186891.998 ops/s
# Warmup Iteration  29: 186392.782 ops/s
# Warmup Iteration  30: 185931.131 ops/s
Iteration   1: 185259.729 ops/s
Iteration   2: 186679.444 ops/s
Iteration   3: 186777.818 ops/s
Iteration   4: 186351.561 ops/s
Iteration   5: 186687.069 ops/s
Iteration   6: 187112.721 ops/s
Iteration   7: 185398.833 ops/s
Iteration   8: 185998.883 ops/s
Iteration   9: 186750.418 ops/s
Iteration  10: 184419.468 ops/s
Iteration  11: 186914.678 ops/s
Iteration  12: 186873.704 ops/s
Iteration  13: 184803.974 ops/s
Iteration  14: 183481.911 ops/s
Iteration  15: 185636.072 ops/s
Iteration  16: 185607.186 ops/s
Iteration  17: 186465.805 ops/s
Iteration  18: 187369.434 ops/s
Iteration  19: 185617.888 ops/s
Iteration  20: 185809.559 ops/s
Iteration  21: 186513.438 ops/s
Iteration  22: 185886.012 ops/s
Iteration  23: 187377.992 ops/s
Iteration  24: 186166.813 ops/s
Iteration  25: 186086.180 ops/s
Iteration  26: 186369.722 ops/s
Iteration  27: 185435.101 ops/s
Iteration  28: 185057.934 ops/s
Iteration  29: 184992.208 ops/s
Iteration  30: 185061.518 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1124._Benchmark.benchmark_Cluster_1124":
  185965.436 ±(99.9%) 610.551 ops/s [Average]
  (min, avg, max) = (183481.911, 185965.436, 187377.992), stdev = 913.844
  CI (99.9%): [185354.885, 186575.987] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1124._Benchmark.benchmark_Cluster_1124  thrpt   30  185965.436 ± 610.551  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1125._Benchmark.benchmark_Cluster_1125$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1125._Benchmark.benchmark_Cluster_1125

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58125.828 ops/s
# Warmup Iteration   2: 92737.187 ops/s
# Warmup Iteration   3: 173604.046 ops/s
# Warmup Iteration   4: 196307.092 ops/s
# Warmup Iteration   5: 198369.564 ops/s
# Warmup Iteration   6: 200145.099 ops/s
# Warmup Iteration   7: 199867.091 ops/s
# Warmup Iteration   8: 143529.756 ops/s
# Warmup Iteration   9: 189310.869 ops/s
# Warmup Iteration  10: 197382.177 ops/s
# Warmup Iteration  11: 200209.814 ops/s
# Warmup Iteration  12: 199610.180 ops/s
# Warmup Iteration  13: 200260.056 ops/s
# Warmup Iteration  14: 200568.460 ops/s
# Warmup Iteration  15: 198440.406 ops/s
# Warmup Iteration  16: 198243.724 ops/s
# Warmup Iteration  17: 198963.232 ops/s
# Warmup Iteration  18: 199337.144 ops/s
# Warmup Iteration  19: 199352.270 ops/s
# Warmup Iteration  20: 199608.397 ops/s
# Warmup Iteration  21: 200147.950 ops/s
# Warmup Iteration  22: 199697.931 ops/s
# Warmup Iteration  23: 197992.513 ops/s
# Warmup Iteration  24: 198278.548 ops/s
# Warmup Iteration  25: 198989.609 ops/s
# Warmup Iteration  26: 199579.352 ops/s
# Warmup Iteration  27: 200134.865 ops/s
# Warmup Iteration  28: 200581.521 ops/s
# Warmup Iteration  29: 200072.531 ops/s
# Warmup Iteration  30: 198893.106 ops/s
Iteration   1: 199321.162 ops/s
Iteration   2: 198832.509 ops/s
Iteration   3: 200513.400 ops/s
Iteration   4: 200004.818 ops/s
Iteration   5: 201327.298 ops/s
Iteration   6: 201346.524 ops/s
Iteration   7: 201043.259 ops/s
Iteration   8: 200936.215 ops/s
Iteration   9: 201332.312 ops/s
Iteration  10: 200928.929 ops/s
Iteration  11: 200937.483 ops/s
Iteration  12: 201305.669 ops/s
Iteration  13: 201306.380 ops/s
Iteration  14: 200868.145 ops/s
Iteration  15: 201430.643 ops/s
Iteration  16: 201310.187 ops/s
Iteration  17: 200773.975 ops/s
Iteration  18: 200766.006 ops/s
Iteration  19: 200815.778 ops/s
Iteration  20: 200925.605 ops/s
Iteration  21: 201374.593 ops/s
Iteration  22: 201319.607 ops/s
Iteration  23: 201895.934 ops/s
Iteration  24: 201353.849 ops/s
Iteration  25: 200569.256 ops/s
Iteration  26: 201013.098 ops/s
Iteration  27: 201088.478 ops/s
Iteration  28: 200856.015 ops/s
Iteration  29: 200377.521 ops/s
Iteration  30: 200905.999 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1125._Benchmark.benchmark_Cluster_1125":
  200892.688 ±(99.9%) 414.523 ops/s [Average]
  (min, avg, max) = (198832.509, 200892.688, 201895.934), stdev = 620.438
  CI (99.9%): [200478.165, 201307.211] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1125._Benchmark.benchmark_Cluster_1125  thrpt   30  200892.688 ± 414.523  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1126._Benchmark.benchmark_Cluster_1126$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1126._Benchmark.benchmark_Cluster_1126

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61277.757 ops/s
# Warmup Iteration   2: 101709.559 ops/s
# Warmup Iteration   3: 149332.214 ops/s
# Warmup Iteration   4: 189563.748 ops/s
# Warmup Iteration   5: 187657.187 ops/s
# Warmup Iteration   6: 189568.745 ops/s
# Warmup Iteration   7: 189260.365 ops/s
# Warmup Iteration   8: 188592.855 ops/s
# Warmup Iteration   9: 187732.234 ops/s
# Warmup Iteration  10: 152021.241 ops/s
# Warmup Iteration  11: 166447.239 ops/s
# Warmup Iteration  12: 189878.288 ops/s
# Warmup Iteration  13: 189526.043 ops/s
# Warmup Iteration  14: 188206.581 ops/s
# Warmup Iteration  15: 187264.157 ops/s
# Warmup Iteration  16: 188392.041 ops/s
# Warmup Iteration  17: 188405.092 ops/s
# Warmup Iteration  18: 188080.234 ops/s
# Warmup Iteration  19: 186678.651 ops/s
# Warmup Iteration  20: 187481.179 ops/s
# Warmup Iteration  21: 188734.180 ops/s
# Warmup Iteration  22: 189474.612 ops/s
# Warmup Iteration  23: 188412.802 ops/s
# Warmup Iteration  24: 187729.706 ops/s
# Warmup Iteration  25: 188305.699 ops/s
# Warmup Iteration  26: 188789.233 ops/s
# Warmup Iteration  27: 189277.214 ops/s
# Warmup Iteration  28: 187826.548 ops/s
# Warmup Iteration  29: 187270.694 ops/s
# Warmup Iteration  30: 189872.924 ops/s
Iteration   1: 189900.210 ops/s
Iteration   2: 190108.188 ops/s
Iteration   3: 189665.055 ops/s
Iteration   4: 189563.512 ops/s
Iteration   5: 189320.805 ops/s
Iteration   6: 189224.682 ops/s
Iteration   7: 188927.839 ops/s
Iteration   8: 187958.341 ops/s
Iteration   9: 187902.788 ops/s
Iteration  10: 188307.973 ops/s
Iteration  11: 189930.331 ops/s
Iteration  12: 188986.754 ops/s
Iteration  13: 187849.219 ops/s
Iteration  14: 187921.924 ops/s
Iteration  15: 188945.593 ops/s
Iteration  16: 186571.882 ops/s
Iteration  17: 187808.492 ops/s
Iteration  18: 187818.097 ops/s
Iteration  19: 186032.905 ops/s
Iteration  20: 186463.163 ops/s
Iteration  21: 188401.577 ops/s
Iteration  22: 187611.357 ops/s
Iteration  23: 189033.687 ops/s
Iteration  24: 188088.040 ops/s
Iteration  25: 188464.689 ops/s
Iteration  26: 188857.032 ops/s
Iteration  27: 189105.029 ops/s
Iteration  28: 188784.972 ops/s
Iteration  29: 187738.442 ops/s
Iteration  30: 187922.621 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1126._Benchmark.benchmark_Cluster_1126":
  188440.507 ±(99.9%) 678.132 ops/s [Average]
  (min, avg, max) = (186032.905, 188440.507, 190108.188), stdev = 1014.996
  CI (99.9%): [187762.375, 189118.638] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1126._Benchmark.benchmark_Cluster_1126  thrpt   30  188440.507 ± 678.132  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1127._Benchmark.benchmark_Cluster_1127$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1127._Benchmark.benchmark_Cluster_1127

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78386.254 ops/s
# Warmup Iteration   2: 101844.376 ops/s
# Warmup Iteration   3: 120839.358 ops/s
# Warmup Iteration   4: 162997.267 ops/s
# Warmup Iteration   5: 163027.347 ops/s
# Warmup Iteration   6: 161595.376 ops/s
# Warmup Iteration   7: 162358.182 ops/s
# Warmup Iteration   8: 162374.061 ops/s
# Warmup Iteration   9: 162554.736 ops/s
# Warmup Iteration  10: 162754.279 ops/s
# Warmup Iteration  11: 164215.307 ops/s
# Warmup Iteration  12: 161392.697 ops/s
# Warmup Iteration  13: 115221.756 ops/s
# Warmup Iteration  14: 163637.982 ops/s
# Warmup Iteration  15: 163844.529 ops/s
# Warmup Iteration  16: 163609.571 ops/s
# Warmup Iteration  17: 164255.174 ops/s
# Warmup Iteration  18: 165211.546 ops/s
# Warmup Iteration  19: 165601.167 ops/s
# Warmup Iteration  20: 165445.217 ops/s
# Warmup Iteration  21: 165462.123 ops/s
# Warmup Iteration  22: 164343.611 ops/s
# Warmup Iteration  23: 163982.557 ops/s
# Warmup Iteration  24: 164012.973 ops/s
# Warmup Iteration  25: 164228.866 ops/s
# Warmup Iteration  26: 163589.643 ops/s
# Warmup Iteration  27: 163481.351 ops/s
# Warmup Iteration  28: 163682.956 ops/s
# Warmup Iteration  29: 164335.080 ops/s
# Warmup Iteration  30: 163870.094 ops/s
Iteration   1: 163897.761 ops/s
Iteration   2: 165158.471 ops/s
Iteration   3: 164361.501 ops/s
Iteration   4: 163594.116 ops/s
Iteration   5: 163264.048 ops/s
Iteration   6: 164202.907 ops/s
Iteration   7: 164019.655 ops/s
Iteration   8: 163428.888 ops/s
Iteration   9: 162942.988 ops/s
Iteration  10: 164666.085 ops/s
Iteration  11: 164243.822 ops/s
Iteration  12: 163984.235 ops/s
Iteration  13: 163511.218 ops/s
Iteration  14: 163423.573 ops/s
Iteration  15: 164131.635 ops/s
Iteration  16: 163860.650 ops/s
Iteration  17: 163810.812 ops/s
Iteration  18: 162673.713 ops/s
Iteration  19: 163067.723 ops/s
Iteration  20: 164483.467 ops/s
Iteration  21: 165615.659 ops/s
Iteration  22: 165874.405 ops/s
Iteration  23: 165813.290 ops/s
Iteration  24: 165032.383 ops/s
Iteration  25: 164915.408 ops/s
Iteration  26: 165019.157 ops/s
Iteration  27: 165629.147 ops/s
Iteration  28: 164068.412 ops/s
Iteration  29: 163222.141 ops/s
Iteration  30: 164502.937 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1127._Benchmark.benchmark_Cluster_1127":
  164214.007 ±(99.9%) 584.303 ops/s [Average]
  (min, avg, max) = (162673.713, 164214.007, 165874.405), stdev = 874.557
  CI (99.9%): [163629.704, 164798.309] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1127._Benchmark.benchmark_Cluster_1127  thrpt   30  164214.007 ± 584.303  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1128._Benchmark.benchmark_Cluster_1128$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1128._Benchmark.benchmark_Cluster_1128

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67195.515 ops/s
# Warmup Iteration   2: 96200.569 ops/s
# Warmup Iteration   3: 126865.778 ops/s
# Warmup Iteration   4: 171098.197 ops/s
# Warmup Iteration   5: 171467.580 ops/s
# Warmup Iteration   6: 169958.458 ops/s
# Warmup Iteration   7: 169995.964 ops/s
# Warmup Iteration   8: 170764.239 ops/s
# Warmup Iteration   9: 170257.406 ops/s
# Warmup Iteration  10: 169682.118 ops/s
# Warmup Iteration  11: 128657.634 ops/s
# Warmup Iteration  12: 158453.566 ops/s
# Warmup Iteration  13: 171438.620 ops/s
# Warmup Iteration  14: 171071.629 ops/s
# Warmup Iteration  15: 171184.193 ops/s
# Warmup Iteration  16: 171421.146 ops/s
# Warmup Iteration  17: 172333.469 ops/s
# Warmup Iteration  18: 172661.326 ops/s
# Warmup Iteration  19: 172205.116 ops/s
# Warmup Iteration  20: 172583.396 ops/s
# Warmup Iteration  21: 171638.329 ops/s
# Warmup Iteration  22: 172695.517 ops/s
# Warmup Iteration  23: 172833.229 ops/s
# Warmup Iteration  24: 171896.471 ops/s
# Warmup Iteration  25: 173702.892 ops/s
# Warmup Iteration  26: 173640.530 ops/s
# Warmup Iteration  27: 172485.617 ops/s
# Warmup Iteration  28: 172664.904 ops/s
# Warmup Iteration  29: 172562.074 ops/s
# Warmup Iteration  30: 172972.868 ops/s
Iteration   1: 173274.441 ops/s
Iteration   2: 172733.588 ops/s
Iteration   3: 172708.289 ops/s
Iteration   4: 172957.990 ops/s
Iteration   5: 172433.690 ops/s
Iteration   6: 171920.825 ops/s
Iteration   7: 172388.439 ops/s
Iteration   8: 173004.704 ops/s
Iteration   9: 173345.387 ops/s
Iteration  10: 172811.500 ops/s
Iteration  11: 173548.696 ops/s
Iteration  12: 173292.279 ops/s
Iteration  13: 172652.679 ops/s
Iteration  14: 173385.722 ops/s
Iteration  15: 172523.742 ops/s
Iteration  16: 172065.586 ops/s
Iteration  17: 172907.344 ops/s
Iteration  18: 172983.006 ops/s
Iteration  19: 172760.716 ops/s
Iteration  20: 173042.363 ops/s
Iteration  21: 172516.122 ops/s
Iteration  22: 172445.589 ops/s
Iteration  23: 173170.650 ops/s
Iteration  24: 172563.133 ops/s
Iteration  25: 171676.850 ops/s
Iteration  26: 172114.744 ops/s
Iteration  27: 171281.580 ops/s
Iteration  28: 172995.826 ops/s
Iteration  29: 173760.701 ops/s
Iteration  30: 173511.816 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1128._Benchmark.benchmark_Cluster_1128":
  172759.266 ±(99.9%) 380.823 ops/s [Average]
  (min, avg, max) = (171281.580, 172759.266, 173760.701), stdev = 569.998
  CI (99.9%): [172378.443, 173140.089] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1128._Benchmark.benchmark_Cluster_1128  thrpt   30  172759.266 ± 380.823  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1129._Benchmark.benchmark_Cluster_1129$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1129._Benchmark.benchmark_Cluster_1129

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54208.719 ops/s
# Warmup Iteration   2: 73169.565 ops/s
# Warmup Iteration   3: 120955.813 ops/s
# Warmup Iteration   4: 140324.138 ops/s
# Warmup Iteration   5: 138732.670 ops/s
# Warmup Iteration   6: 140227.302 ops/s
# Warmup Iteration   7: 140224.520 ops/s
# Warmup Iteration   8: 140236.785 ops/s
# Warmup Iteration   9: 123288.912 ops/s
# Warmup Iteration  10: 113553.452 ops/s
# Warmup Iteration  11: 141433.917 ops/s
# Warmup Iteration  12: 141132.458 ops/s
# Warmup Iteration  13: 141350.630 ops/s
# Warmup Iteration  14: 141171.604 ops/s
# Warmup Iteration  15: 140552.402 ops/s
# Warmup Iteration  16: 140072.565 ops/s
# Warmup Iteration  17: 141196.525 ops/s
# Warmup Iteration  18: 140899.576 ops/s
# Warmup Iteration  19: 140883.718 ops/s
# Warmup Iteration  20: 140543.924 ops/s
# Warmup Iteration  21: 140886.104 ops/s
# Warmup Iteration  22: 140247.467 ops/s
# Warmup Iteration  23: 139572.720 ops/s
# Warmup Iteration  24: 140167.756 ops/s
# Warmup Iteration  25: 139976.143 ops/s
# Warmup Iteration  26: 140110.808 ops/s
# Warmup Iteration  27: 141207.034 ops/s
# Warmup Iteration  28: 139828.332 ops/s
# Warmup Iteration  29: 140784.608 ops/s
# Warmup Iteration  30: 141314.779 ops/s
Iteration   1: 141071.049 ops/s
Iteration   2: 139749.506 ops/s
Iteration   3: 139952.365 ops/s
Iteration   4: 140430.187 ops/s
Iteration   5: 140406.943 ops/s
Iteration   6: 139584.543 ops/s
Iteration   7: 140749.742 ops/s
Iteration   8: 141042.219 ops/s
Iteration   9: 140387.367 ops/s
Iteration  10: 139618.939 ops/s
Iteration  11: 139785.415 ops/s
Iteration  12: 139664.992 ops/s
Iteration  13: 141220.788 ops/s
Iteration  14: 140921.632 ops/s
Iteration  15: 140397.143 ops/s
Iteration  16: 140455.192 ops/s
Iteration  17: 140088.784 ops/s
Iteration  18: 140732.746 ops/s
Iteration  19: 140337.994 ops/s
Iteration  20: 140984.591 ops/s
Iteration  21: 141337.271 ops/s
Iteration  22: 139886.201 ops/s
Iteration  23: 140260.710 ops/s
Iteration  24: 141104.930 ops/s
Iteration  25: 141316.471 ops/s
Iteration  26: 141410.334 ops/s
Iteration  27: 141049.711 ops/s
Iteration  28: 140991.659 ops/s
Iteration  29: 140549.082 ops/s
Iteration  30: 140011.652 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1129._Benchmark.benchmark_Cluster_1129":
  140516.672 ±(99.9%) 379.588 ops/s [Average]
  (min, avg, max) = (139584.543, 140516.672, 141410.334), stdev = 568.150
  CI (99.9%): [140137.084, 140896.260] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1129._Benchmark.benchmark_Cluster_1129  thrpt   30  140516.672 ± 379.588  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_113._Benchmark.benchmark_Cluster_113$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_113._Benchmark.benchmark_Cluster_113

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78017.675 ops/s
# Warmup Iteration   2: 103285.145 ops/s
# Warmup Iteration   3: 220244.256 ops/s
# Warmup Iteration   4: 218414.527 ops/s
# Warmup Iteration   5: 220730.105 ops/s
# Warmup Iteration   6: 219587.805 ops/s
# Warmup Iteration   7: 160719.997 ops/s
# Warmup Iteration   8: 210158.644 ops/s
# Warmup Iteration   9: 222715.543 ops/s
# Warmup Iteration  10: 222964.195 ops/s
# Warmup Iteration  11: 222619.384 ops/s
# Warmup Iteration  12: 223139.413 ops/s
# Warmup Iteration  13: 222684.317 ops/s
# Warmup Iteration  14: 222765.988 ops/s
# Warmup Iteration  15: 221488.580 ops/s
# Warmup Iteration  16: 221535.783 ops/s
# Warmup Iteration  17: 222022.586 ops/s
# Warmup Iteration  18: 221647.694 ops/s
# Warmup Iteration  19: 221807.310 ops/s
# Warmup Iteration  20: 221444.556 ops/s
# Warmup Iteration  21: 221339.666 ops/s
# Warmup Iteration  22: 221169.758 ops/s
# Warmup Iteration  23: 220907.698 ops/s
# Warmup Iteration  24: 222025.170 ops/s
# Warmup Iteration  25: 222805.111 ops/s
# Warmup Iteration  26: 222979.381 ops/s
# Warmup Iteration  27: 222381.180 ops/s
# Warmup Iteration  28: 223202.594 ops/s
# Warmup Iteration  29: 223053.749 ops/s
# Warmup Iteration  30: 220885.566 ops/s
Iteration   1: 219492.718 ops/s
Iteration   2: 221999.987 ops/s
Iteration   3: 220204.021 ops/s
Iteration   4: 220322.209 ops/s
Iteration   5: 220003.375 ops/s
Iteration   6: 219695.978 ops/s
Iteration   7: 220160.781 ops/s
Iteration   8: 219870.560 ops/s
Iteration   9: 220002.856 ops/s
Iteration  10: 219958.421 ops/s
Iteration  11: 222995.284 ops/s
Iteration  12: 219790.044 ops/s
Iteration  13: 221870.988 ops/s
Iteration  14: 222420.754 ops/s
Iteration  15: 220847.359 ops/s
Iteration  16: 221925.723 ops/s
Iteration  17: 221900.464 ops/s
Iteration  18: 220028.374 ops/s
Iteration  19: 220537.798 ops/s
Iteration  20: 221703.991 ops/s
Iteration  21: 221484.230 ops/s
Iteration  22: 220867.574 ops/s
Iteration  23: 221165.889 ops/s
Iteration  24: 219401.141 ops/s
Iteration  25: 220347.118 ops/s
Iteration  26: 220477.008 ops/s
Iteration  27: 222292.824 ops/s
Iteration  28: 222747.360 ops/s
Iteration  29: 222151.752 ops/s
Iteration  30: 220557.134 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_113._Benchmark.benchmark_Cluster_113":
  220907.457 ±(99.9%) 704.124 ops/s [Average]
  (min, avg, max) = (219401.141, 220907.457, 222995.284), stdev = 1053.900
  CI (99.9%): [220203.333, 221611.581] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_113._Benchmark.benchmark_Cluster_113  thrpt   30  220907.457 ± 704.124  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1130._Benchmark.benchmark_Cluster_1130$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1130._Benchmark.benchmark_Cluster_1130

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52665.216 ops/s
# Warmup Iteration   2: 79308.679 ops/s
# Warmup Iteration   3: 119142.666 ops/s
# Warmup Iteration   4: 149327.744 ops/s
# Warmup Iteration   5: 148374.004 ops/s
# Warmup Iteration   6: 150778.325 ops/s
# Warmup Iteration   7: 151052.516 ops/s
# Warmup Iteration   8: 151610.201 ops/s
# Warmup Iteration   9: 151660.204 ops/s
# Warmup Iteration  10: 100880.576 ops/s
# Warmup Iteration  11: 150180.307 ops/s
# Warmup Iteration  12: 149915.569 ops/s
# Warmup Iteration  13: 151658.356 ops/s
# Warmup Iteration  14: 152091.827 ops/s
# Warmup Iteration  15: 151462.869 ops/s
# Warmup Iteration  16: 152058.948 ops/s
# Warmup Iteration  17: 155178.476 ops/s
# Warmup Iteration  18: 154995.124 ops/s
# Warmup Iteration  19: 154751.598 ops/s
# Warmup Iteration  20: 154317.551 ops/s
# Warmup Iteration  21: 152616.330 ops/s
# Warmup Iteration  22: 152976.732 ops/s
# Warmup Iteration  23: 154429.800 ops/s
# Warmup Iteration  24: 154521.388 ops/s
# Warmup Iteration  25: 154936.978 ops/s
# Warmup Iteration  26: 154049.615 ops/s
# Warmup Iteration  27: 154888.537 ops/s
# Warmup Iteration  28: 152806.791 ops/s
# Warmup Iteration  29: 151720.963 ops/s
# Warmup Iteration  30: 151080.170 ops/s
Iteration   1: 150126.305 ops/s
Iteration   2: 152844.541 ops/s
Iteration   3: 153357.952 ops/s
Iteration   4: 153209.961 ops/s
Iteration   5: 154184.270 ops/s
Iteration   6: 151430.574 ops/s
Iteration   7: 151680.846 ops/s
Iteration   8: 152705.163 ops/s
Iteration   9: 153897.751 ops/s
Iteration  10: 154930.891 ops/s
Iteration  11: 153653.841 ops/s
Iteration  12: 155099.715 ops/s
Iteration  13: 155424.404 ops/s
Iteration  14: 154797.584 ops/s
Iteration  15: 154196.002 ops/s
Iteration  16: 155164.647 ops/s
Iteration  17: 154911.476 ops/s
Iteration  18: 154864.316 ops/s
Iteration  19: 155242.016 ops/s
Iteration  20: 154482.590 ops/s
Iteration  21: 152570.313 ops/s
Iteration  22: 153323.905 ops/s
Iteration  23: 153285.634 ops/s
Iteration  24: 153718.142 ops/s
Iteration  25: 154082.420 ops/s
Iteration  26: 154152.810 ops/s
Iteration  27: 154850.868 ops/s
Iteration  28: 154383.947 ops/s
Iteration  29: 154572.984 ops/s
Iteration  30: 154260.622 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1130._Benchmark.benchmark_Cluster_1130":
  153846.883 ±(99.9%) 826.435 ops/s [Average]
  (min, avg, max) = (150126.305, 153846.883, 155424.404), stdev = 1236.969
  CI (99.9%): [153020.448, 154673.318] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1130._Benchmark.benchmark_Cluster_1130  thrpt   30  153846.883 ± 826.435  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1131._Benchmark.benchmark_Cluster_1131$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1131._Benchmark.benchmark_Cluster_1131

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56548.716 ops/s
# Warmup Iteration   2: 82157.727 ops/s
# Warmup Iteration   3: 157965.382 ops/s
# Warmup Iteration   4: 169652.923 ops/s
# Warmup Iteration   5: 173148.972 ops/s
# Warmup Iteration   6: 171298.152 ops/s
# Warmup Iteration   7: 171410.908 ops/s
# Warmup Iteration   8: 132621.188 ops/s
# Warmup Iteration   9: 158360.553 ops/s
# Warmup Iteration  10: 173018.923 ops/s
# Warmup Iteration  11: 172600.129 ops/s
# Warmup Iteration  12: 173411.702 ops/s
# Warmup Iteration  13: 173558.711 ops/s
# Warmup Iteration  14: 174099.825 ops/s
# Warmup Iteration  15: 172990.861 ops/s
# Warmup Iteration  16: 173165.126 ops/s
# Warmup Iteration  17: 173606.983 ops/s
# Warmup Iteration  18: 172823.860 ops/s
# Warmup Iteration  19: 173206.609 ops/s
# Warmup Iteration  20: 174433.064 ops/s
# Warmup Iteration  21: 174102.550 ops/s
# Warmup Iteration  22: 173836.300 ops/s
# Warmup Iteration  23: 174175.994 ops/s
# Warmup Iteration  24: 173772.410 ops/s
# Warmup Iteration  25: 173894.012 ops/s
# Warmup Iteration  26: 173752.804 ops/s
# Warmup Iteration  27: 174371.124 ops/s
# Warmup Iteration  28: 172636.966 ops/s
# Warmup Iteration  29: 173806.947 ops/s
# Warmup Iteration  30: 174089.015 ops/s
Iteration   1: 173797.845 ops/s
Iteration   2: 173583.015 ops/s
Iteration   3: 173285.266 ops/s
Iteration   4: 172694.961 ops/s
Iteration   5: 171326.001 ops/s
Iteration   6: 173335.193 ops/s
Iteration   7: 173241.914 ops/s
Iteration   8: 173269.134 ops/s
Iteration   9: 172296.143 ops/s
Iteration  10: 172297.822 ops/s
Iteration  11: 174095.147 ops/s
Iteration  12: 173588.112 ops/s
Iteration  13: 174099.600 ops/s
Iteration  14: 173998.194 ops/s
Iteration  15: 173325.640 ops/s
Iteration  16: 173028.562 ops/s
Iteration  17: 173072.085 ops/s
Iteration  18: 173805.305 ops/s
Iteration  19: 173259.532 ops/s
Iteration  20: 173249.052 ops/s
Iteration  21: 173272.033 ops/s
Iteration  22: 173906.879 ops/s
Iteration  23: 174022.383 ops/s
Iteration  24: 173598.379 ops/s
Iteration  25: 173860.862 ops/s
Iteration  26: 173406.054 ops/s
Iteration  27: 174082.946 ops/s
Iteration  28: 173754.426 ops/s
Iteration  29: 173155.141 ops/s
Iteration  30: 173662.281 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1131._Benchmark.benchmark_Cluster_1131":
  173378.997 ±(99.9%) 410.107 ops/s [Average]
  (min, avg, max) = (171326.001, 173378.997, 174099.600), stdev = 613.829
  CI (99.9%): [172968.890, 173789.104] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1131._Benchmark.benchmark_Cluster_1131  thrpt   30  173378.997 ± 410.107  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_1132._Benchmark.benchmark_Cluster_1132$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_1132._Benchmark.benchmark_Cluster_1132

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75553.116 ops/s
# Warmup Iteration   2: 95730.146 ops/s
# Warmup Iteration   3: 188296.101 ops/s
# Warmup Iteration   4: 200269.454 ops/s
# Warmup Iteration   5: 202368.687 ops/s
# Warmup Iteration   6: 201835.422 ops/s
# Warmup Iteration   7: 202359.872 ops/s
# Warmup Iteration   8: 159688.824 ops/s
# Warmup Iteration   9: 178721.066 ops/s
# Warmup Iteration  10: 203372.779 ops/s
# Warmup Iteration  11: 203038.026 ops/s
# Warmup Iteration  12: 203221.186 ops/s
# Warmup Iteration  13: 203451.599 ops/s
# Warmup Iteration  14: 203050.199 ops/s
# Warmup Iteration  15: 202941.657 ops/s
# Warmup Iteration  16: 202761.402 ops/s
# Warmup Iteration  17: 202539.997 ops/s
# Warmup Iteration  18: 202342.827 ops/s
# Warmup Iteration  19: 201671.854 ops/s
# Warmup Iteration  20: 202430.560 ops/s
# Warmup Iteration  21: 202822.643 ops/s
# Warmup Iteration  22: 202644.837 ops/s
# Warmup Iteration  23: 203075.469 ops/s
# Warmup Iteration  24: 202908.436 ops/s
# Warmup Iteration  25: 201376.863 ops/s
# Warmup Iteration  26: 202424.791 ops/s
# Warmup Iteration  27: 202727.543 ops/s
# Warmup Iteration  28: 202110.898 ops/s
# Warmup Iteration  29: 202695.775 ops/s
# Warmup Iteration  30: 202157.568 ops/s
Iteration   1: 201817.462 ops/s
Iteration   2: 203091.639 ops/s
Iteration   3: 203236.462 ops/s
Iteration   4: 203016.335 ops/s
Iteration   5: 202896.484 ops/s
Iteration   6: 202907.511 ops/s
Iteration   7: 202869.579 ops/s
Iteration   8: 203519.918 ops/s
Iteration   9: 202798.283 ops/s
Iteration  10: 202687.283 ops/s
Iteration  11: 202877.976 ops/s
Iteration  12: 202965.288 ops/s
Iteration  13: 203159.874 ops/s
Iteration  14: 203996.597 ops/s
Iteration  15: 203019.678 ops/s
Iteration  16: 203541.074 ops/s
Iteration  17: 204057.574 ops/s
Iteration  18: 203575.722 ops/s
Iteration  19: 203168.193 ops/s
Iteration  20: 202691.153 ops/s
Iteration  21: 202928.303 ops/s
Iteration  22: 203036.430 ops/s
Iteration  23: 202842.668 ops/s
Iteration  24: 203145.806 ops/s
Iteration  25: 203288.155 ops/s
Iteration  26: 202622.402 ops/s
Iteration  27: 202413.419 ops/s
Iteration  28: 202639.640 ops/s
Iteration  29: 203041.539 ops/s
Iteration  30: 202527.569 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_1132._Benchmark.benchmark_Cluster_1132":
  203012.667 ±(99.9%) 298.320 ops/s [Average]
  (min, avg, max) = (201817.462, 203012.667, 204057.574), stdev = 446.511
  CI (99.9%): [202714.347, 203310.987] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        Mode  Cnt       Score     Error  Units
Cluster_1132._Benchmark.benchmark_Cluster_1132  thrpt   30  203012.667 ± 298.320  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_114._Benchmark.benchmark_Cluster_114$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_114._Benchmark.benchmark_Cluster_114

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47325.651 ops/s
# Warmup Iteration   2: 74595.471 ops/s
# Warmup Iteration   3: 75133.793 ops/s
# Warmup Iteration   4: 106762.272 ops/s
# Warmup Iteration   5: 121858.688 ops/s
# Warmup Iteration   6: 119443.452 ops/s
# Warmup Iteration   7: 117708.846 ops/s
# Warmup Iteration   8: 122304.510 ops/s
# Warmup Iteration   9: 122230.365 ops/s
# Warmup Iteration  10: 121721.540 ops/s
# Warmup Iteration  11: 121018.294 ops/s
# Warmup Iteration  12: 120461.444 ops/s
# Warmup Iteration  13: 121197.218 ops/s
# Warmup Iteration  14: 121953.938 ops/s
# Warmup Iteration  15: 92505.366 ops/s
# Warmup Iteration  16: 106219.214 ops/s
# Warmup Iteration  17: 125410.420 ops/s
# Warmup Iteration  18: 125204.807 ops/s
# Warmup Iteration  19: 125137.876 ops/s
# Warmup Iteration  20: 125311.152 ops/s
# Warmup Iteration  21: 124853.076 ops/s
# Warmup Iteration  22: 124781.893 ops/s
# Warmup Iteration  23: 124975.005 ops/s
# Warmup Iteration  24: 124594.984 ops/s
# Warmup Iteration  25: 125384.342 ops/s
# Warmup Iteration  26: 124806.475 ops/s
# Warmup Iteration  27: 125376.497 ops/s
# Warmup Iteration  28: 125032.674 ops/s
# Warmup Iteration  29: 124967.615 ops/s
# Warmup Iteration  30: 125000.788 ops/s
Iteration   1: 124875.814 ops/s
Iteration   2: 124912.072 ops/s
Iteration   3: 124970.836 ops/s
Iteration   4: 125093.785 ops/s
Iteration   5: 124731.658 ops/s
Iteration   6: 124749.180 ops/s
Iteration   7: 124738.826 ops/s
Iteration   8: 124890.855 ops/s
Iteration   9: 125518.014 ops/s
Iteration  10: 125474.222 ops/s
Iteration  11: 125363.662 ops/s
Iteration  12: 125280.641 ops/s
Iteration  13: 125320.659 ops/s
Iteration  14: 125415.329 ops/s
Iteration  15: 125250.701 ops/s
Iteration  16: 125044.592 ops/s
Iteration  17: 124616.077 ops/s
Iteration  18: 124444.644 ops/s
Iteration  19: 124714.828 ops/s
Iteration  20: 124530.218 ops/s
Iteration  21: 125167.085 ops/s
Iteration  22: 124529.317 ops/s
Iteration  23: 125391.854 ops/s
Iteration  24: 124963.178 ops/s
Iteration  25: 125566.179 ops/s
Iteration  26: 124811.904 ops/s
Iteration  27: 125225.993 ops/s
Iteration  28: 125385.512 ops/s
Iteration  29: 125040.726 ops/s
Iteration  30: 124888.466 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_114._Benchmark.benchmark_Cluster_114":
  125030.228 ±(99.9%) 214.771 ops/s [Average]
  (min, avg, max) = (124444.644, 125030.228, 125566.179), stdev = 321.460
  CI (99.9%): [124815.456, 125244.999] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_114._Benchmark.benchmark_Cluster_114  thrpt   30  125030.228 ± 214.771  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_115._Benchmark.benchmark_Cluster_115$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_115._Benchmark.benchmark_Cluster_115

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96128.576 ops/s
# Warmup Iteration   2: 116423.805 ops/s
# Warmup Iteration   3: 126790.550 ops/s
# Warmup Iteration   4: 180741.030 ops/s
# Warmup Iteration   5: 180129.012 ops/s
# Warmup Iteration   6: 179991.558 ops/s
# Warmup Iteration   7: 176877.341 ops/s
# Warmup Iteration   8: 178895.292 ops/s
# Warmup Iteration   9: 179332.772 ops/s
# Warmup Iteration  10: 180790.560 ops/s
# Warmup Iteration  11: 179870.451 ops/s
# Warmup Iteration  12: 179426.606 ops/s
# Warmup Iteration  13: 180022.045 ops/s
# Warmup Iteration  14: 137665.222 ops/s
# Warmup Iteration  15: 164277.730 ops/s
# Warmup Iteration  16: 180034.551 ops/s
# Warmup Iteration  17: 179984.575 ops/s
# Warmup Iteration  18: 178625.992 ops/s
# Warmup Iteration  19: 179319.113 ops/s
# Warmup Iteration  20: 179522.285 ops/s
# Warmup Iteration  21: 179888.680 ops/s
# Warmup Iteration  22: 179773.839 ops/s
# Warmup Iteration  23: 177916.960 ops/s
# Warmup Iteration  24: 178859.532 ops/s
# Warmup Iteration  25: 179184.845 ops/s
# Warmup Iteration  26: 179900.032 ops/s
# Warmup Iteration  27: 177913.991 ops/s
# Warmup Iteration  28: 178457.492 ops/s
# Warmup Iteration  29: 178624.891 ops/s
# Warmup Iteration  30: 179093.363 ops/s
Iteration   1: 178126.145 ops/s
Iteration   2: 179187.124 ops/s
Iteration   3: 178462.155 ops/s
Iteration   4: 178270.839 ops/s
Iteration   5: 177712.157 ops/s
Iteration   6: 178428.027 ops/s
Iteration   7: 177962.398 ops/s
Iteration   8: 179219.805 ops/s
Iteration   9: 180029.513 ops/s
Iteration  10: 180877.968 ops/s
Iteration  11: 180841.675 ops/s
Iteration  12: 180785.225 ops/s
Iteration  13: 180470.236 ops/s
Iteration  14: 180470.728 ops/s
Iteration  15: 180481.785 ops/s
Iteration  16: 180937.421 ops/s
Iteration  17: 180911.669 ops/s
Iteration  18: 180782.446 ops/s
Iteration  19: 180463.424 ops/s
Iteration  20: 180768.605 ops/s
Iteration  21: 179376.582 ops/s
Iteration  22: 180109.579 ops/s
Iteration  23: 179230.940 ops/s
Iteration  24: 178803.055 ops/s
Iteration  25: 179524.701 ops/s
Iteration  26: 178529.625 ops/s
Iteration  27: 179644.282 ops/s
Iteration  28: 179057.096 ops/s
Iteration  29: 178735.491 ops/s
Iteration  30: 179709.313 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_115._Benchmark.benchmark_Cluster_115":
  179597.000 ±(99.9%) 685.529 ops/s [Average]
  (min, avg, max) = (177712.157, 179597.000, 180937.421), stdev = 1026.067
  CI (99.9%): [178911.472, 180282.529] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_115._Benchmark.benchmark_Cluster_115  thrpt   30  179597.000 ± 685.529  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_116._Benchmark.benchmark_Cluster_116$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_116._Benchmark.benchmark_Cluster_116

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55628.223 ops/s
# Warmup Iteration   2: 89324.130 ops/s
# Warmup Iteration   3: 140566.522 ops/s
# Warmup Iteration   4: 176658.751 ops/s
# Warmup Iteration   5: 174427.010 ops/s
# Warmup Iteration   6: 175635.657 ops/s
# Warmup Iteration   7: 174494.746 ops/s
# Warmup Iteration   8: 174865.609 ops/s
# Warmup Iteration   9: 150161.095 ops/s
# Warmup Iteration  10: 145835.486 ops/s
# Warmup Iteration  11: 175830.463 ops/s
# Warmup Iteration  12: 174516.223 ops/s
# Warmup Iteration  13: 173673.540 ops/s
# Warmup Iteration  14: 174459.947 ops/s
# Warmup Iteration  15: 175309.404 ops/s
# Warmup Iteration  16: 174596.328 ops/s
# Warmup Iteration  17: 175514.772 ops/s
# Warmup Iteration  18: 174935.771 ops/s
# Warmup Iteration  19: 175809.908 ops/s
# Warmup Iteration  20: 175692.797 ops/s
# Warmup Iteration  21: 174202.078 ops/s
# Warmup Iteration  22: 175371.317 ops/s
# Warmup Iteration  23: 174527.506 ops/s
# Warmup Iteration  24: 175006.319 ops/s
# Warmup Iteration  25: 175227.338 ops/s
# Warmup Iteration  26: 175310.311 ops/s
# Warmup Iteration  27: 174666.875 ops/s
# Warmup Iteration  28: 175469.516 ops/s
# Warmup Iteration  29: 175995.774 ops/s
# Warmup Iteration  30: 176054.819 ops/s
Iteration   1: 175475.148 ops/s
Iteration   2: 174552.941 ops/s
Iteration   3: 174999.215 ops/s
Iteration   4: 175934.839 ops/s
Iteration   5: 175741.009 ops/s
Iteration   6: 176099.387 ops/s
Iteration   7: 175825.865 ops/s
Iteration   8: 175687.017 ops/s
Iteration   9: 175489.427 ops/s
Iteration  10: 174913.178 ops/s
Iteration  11: 176035.925 ops/s
Iteration  12: 175847.410 ops/s
Iteration  13: 175301.354 ops/s
Iteration  14: 174920.449 ops/s
Iteration  15: 174793.066 ops/s
Iteration  16: 175476.340 ops/s
Iteration  17: 175720.100 ops/s
Iteration  18: 176053.236 ops/s
Iteration  19: 175530.831 ops/s
Iteration  20: 175050.623 ops/s
Iteration  21: 173721.802 ops/s
Iteration  22: 173000.928 ops/s
Iteration  23: 175048.086 ops/s
Iteration  24: 175071.711 ops/s
Iteration  25: 175321.076 ops/s
Iteration  26: 174645.724 ops/s
Iteration  27: 174932.191 ops/s
Iteration  28: 175672.932 ops/s
Iteration  29: 176365.348 ops/s
Iteration  30: 175696.891 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_116._Benchmark.benchmark_Cluster_116":
  175297.468 ±(99.9%) 473.200 ops/s [Average]
  (min, avg, max) = (173000.928, 175297.468, 176365.348), stdev = 708.264
  CI (99.9%): [174824.268, 175770.669] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_116._Benchmark.benchmark_Cluster_116  thrpt   30  175297.468 ± 473.200  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_117._Benchmark.benchmark_Cluster_117$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_117._Benchmark.benchmark_Cluster_117

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80384.841 ops/s
# Warmup Iteration   2: 88728.156 ops/s
# Warmup Iteration   3: 89507.781 ops/s
# Warmup Iteration   4: 126637.045 ops/s
# Warmup Iteration   5: 133979.457 ops/s
# Warmup Iteration   6: 133624.882 ops/s
# Warmup Iteration   7: 133391.928 ops/s
# Warmup Iteration   8: 132286.538 ops/s
# Warmup Iteration   9: 134524.665 ops/s
# Warmup Iteration  10: 133539.063 ops/s
# Warmup Iteration  11: 132888.818 ops/s
# Warmup Iteration  12: 132501.283 ops/s
# Warmup Iteration  13: 133042.990 ops/s
# Warmup Iteration  14: 132805.979 ops/s
# Warmup Iteration  15: 133047.660 ops/s
# Warmup Iteration  16: 112714.022 ops/s
# Warmup Iteration  17: 113395.446 ops/s
# Warmup Iteration  18: 138289.140 ops/s
# Warmup Iteration  19: 137429.808 ops/s
# Warmup Iteration  20: 137533.241 ops/s
# Warmup Iteration  21: 138036.028 ops/s
# Warmup Iteration  22: 138090.250 ops/s
# Warmup Iteration  23: 138462.177 ops/s
# Warmup Iteration  24: 138715.012 ops/s
# Warmup Iteration  25: 138304.310 ops/s
# Warmup Iteration  26: 138264.713 ops/s
# Warmup Iteration  27: 138477.052 ops/s
# Warmup Iteration  28: 138142.337 ops/s
# Warmup Iteration  29: 139051.767 ops/s
# Warmup Iteration  30: 138072.595 ops/s
Iteration   1: 138114.392 ops/s
Iteration   2: 137560.442 ops/s
Iteration   3: 137283.427 ops/s
Iteration   4: 137613.153 ops/s
Iteration   5: 138367.998 ops/s
Iteration   6: 138289.624 ops/s
Iteration   7: 138889.559 ops/s
Iteration   8: 138779.639 ops/s
Iteration   9: 139322.816 ops/s
Iteration  10: 139082.758 ops/s
Iteration  11: 138544.893 ops/s
Iteration  12: 138765.490 ops/s
Iteration  13: 138644.872 ops/s
Iteration  14: 137904.438 ops/s
Iteration  15: 137273.007 ops/s
Iteration  16: 138142.987 ops/s
Iteration  17: 138350.789 ops/s
Iteration  18: 137741.017 ops/s
Iteration  19: 137653.205 ops/s
Iteration  20: 138225.370 ops/s
Iteration  21: 137763.176 ops/s
Iteration  22: 137794.678 ops/s
Iteration  23: 138418.242 ops/s
Iteration  24: 138251.112 ops/s
Iteration  25: 138472.989 ops/s
Iteration  26: 138268.579 ops/s
Iteration  27: 137370.939 ops/s
Iteration  28: 137204.470 ops/s
Iteration  29: 137134.807 ops/s
Iteration  30: 138360.300 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_117._Benchmark.benchmark_Cluster_117":
  138119.639 ±(99.9%) 387.151 ops/s [Average]
  (min, avg, max) = (137134.807, 138119.639, 139322.816), stdev = 579.469
  CI (99.9%): [137732.488, 138506.790] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_117._Benchmark.benchmark_Cluster_117  thrpt   30  138119.639 ± 387.151  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_118._Benchmark.benchmark_Cluster_118$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_118._Benchmark.benchmark_Cluster_118

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68577.744 ops/s
# Warmup Iteration   2: 97156.060 ops/s
# Warmup Iteration   3: 97919.735 ops/s
# Warmup Iteration   4: 129321.721 ops/s
# Warmup Iteration   5: 144712.189 ops/s
# Warmup Iteration   6: 143740.419 ops/s
# Warmup Iteration   7: 144321.761 ops/s
# Warmup Iteration   8: 144278.483 ops/s
# Warmup Iteration   9: 146108.686 ops/s
# Warmup Iteration  10: 144936.997 ops/s
# Warmup Iteration  11: 144868.686 ops/s
# Warmup Iteration  12: 144351.863 ops/s
# Warmup Iteration  13: 145712.825 ops/s
# Warmup Iteration  14: 145390.676 ops/s
# Warmup Iteration  15: 145807.220 ops/s
# Warmup Iteration  16: 123878.787 ops/s
# Warmup Iteration  17: 126345.834 ops/s
# Warmup Iteration  18: 153047.120 ops/s
# Warmup Iteration  19: 152027.093 ops/s
# Warmup Iteration  20: 151696.645 ops/s
# Warmup Iteration  21: 151575.317 ops/s
# Warmup Iteration  22: 151363.693 ops/s
# Warmup Iteration  23: 152398.070 ops/s
# Warmup Iteration  24: 151744.378 ops/s
# Warmup Iteration  25: 151112.629 ops/s
# Warmup Iteration  26: 151050.157 ops/s
# Warmup Iteration  27: 151214.504 ops/s
# Warmup Iteration  28: 151930.900 ops/s
# Warmup Iteration  29: 152695.419 ops/s
# Warmup Iteration  30: 152266.138 ops/s
Iteration   1: 151255.243 ops/s
Iteration   2: 151601.207 ops/s
Iteration   3: 151262.015 ops/s
Iteration   4: 151730.284 ops/s
Iteration   5: 150953.313 ops/s
Iteration   6: 150925.084 ops/s
Iteration   7: 151093.729 ops/s
Iteration   8: 151427.458 ops/s
Iteration   9: 151544.151 ops/s
Iteration  10: 150694.552 ops/s
Iteration  11: 151064.519 ops/s
Iteration  12: 151275.832 ops/s
Iteration  13: 150907.205 ops/s
Iteration  14: 151919.696 ops/s
Iteration  15: 151356.043 ops/s
Iteration  16: 151792.356 ops/s
Iteration  17: 151117.103 ops/s
Iteration  18: 151361.412 ops/s
Iteration  19: 150323.013 ops/s
Iteration  20: 149711.266 ops/s
Iteration  21: 150844.726 ops/s
Iteration  22: 151380.074 ops/s
Iteration  23: 151528.946 ops/s
Iteration  24: 151631.922 ops/s
Iteration  25: 152240.441 ops/s
Iteration  26: 150714.989 ops/s
Iteration  27: 151007.522 ops/s
Iteration  28: 152716.120 ops/s
Iteration  29: 151738.082 ops/s
Iteration  30: 152345.804 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_118._Benchmark.benchmark_Cluster_118":
  151315.470 ±(99.9%) 399.195 ops/s [Average]
  (min, avg, max) = (149711.266, 151315.470, 152716.120), stdev = 597.497
  CI (99.9%): [150916.275, 151714.665] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_118._Benchmark.benchmark_Cluster_118  thrpt   30  151315.470 ± 399.195  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_119._Benchmark.benchmark_Cluster_119$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_119._Benchmark.benchmark_Cluster_119

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45354.989 ops/s
# Warmup Iteration   2: 82240.690 ops/s
# Warmup Iteration   3: 145534.249 ops/s
# Warmup Iteration   4: 172956.480 ops/s
# Warmup Iteration   5: 171661.378 ops/s
# Warmup Iteration   6: 173984.065 ops/s
# Warmup Iteration   7: 174022.674 ops/s
# Warmup Iteration   8: 140984.352 ops/s
# Warmup Iteration   9: 151979.275 ops/s
# Warmup Iteration  10: 173574.115 ops/s
# Warmup Iteration  11: 173283.438 ops/s
# Warmup Iteration  12: 172845.513 ops/s
# Warmup Iteration  13: 173061.607 ops/s
# Warmup Iteration  14: 173801.966 ops/s
# Warmup Iteration  15: 173127.584 ops/s
# Warmup Iteration  16: 174014.786 ops/s
# Warmup Iteration  17: 173876.173 ops/s
# Warmup Iteration  18: 172846.313 ops/s
# Warmup Iteration  19: 172799.956 ops/s
# Warmup Iteration  20: 172774.099 ops/s
# Warmup Iteration  21: 173349.735 ops/s
# Warmup Iteration  22: 173907.451 ops/s
# Warmup Iteration  23: 173464.967 ops/s
# Warmup Iteration  24: 173927.128 ops/s
# Warmup Iteration  25: 173151.637 ops/s
# Warmup Iteration  26: 173518.602 ops/s
# Warmup Iteration  27: 173761.715 ops/s
# Warmup Iteration  28: 173458.459 ops/s
# Warmup Iteration  29: 173305.720 ops/s
# Warmup Iteration  30: 173858.734 ops/s
Iteration   1: 174257.176 ops/s
Iteration   2: 173934.125 ops/s
Iteration   3: 173330.266 ops/s
Iteration   4: 173942.277 ops/s
Iteration   5: 173544.170 ops/s
Iteration   6: 173728.505 ops/s
Iteration   7: 173380.942 ops/s
Iteration   8: 173429.537 ops/s
Iteration   9: 173499.502 ops/s
Iteration  10: 173139.854 ops/s
Iteration  11: 173197.523 ops/s
Iteration  12: 173365.956 ops/s
Iteration  13: 173535.384 ops/s
Iteration  14: 173193.829 ops/s
Iteration  15: 173970.149 ops/s
Iteration  16: 174263.210 ops/s
Iteration  17: 172733.977 ops/s
Iteration  18: 174118.652 ops/s
Iteration  19: 171183.266 ops/s
Iteration  20: 169792.227 ops/s
Iteration  21: 172624.355 ops/s
Iteration  22: 170650.396 ops/s
Iteration  23: 172228.562 ops/s
Iteration  24: 172464.864 ops/s
Iteration  25: 173027.946 ops/s
Iteration  26: 173270.333 ops/s
Iteration  27: 173311.596 ops/s
Iteration  28: 173340.270 ops/s
Iteration  29: 173337.641 ops/s
Iteration  30: 173979.898 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_119._Benchmark.benchmark_Cluster_119":
  173125.880 ±(99.9%) 682.370 ops/s [Average]
  (min, avg, max) = (169792.227, 173125.880, 174263.210), stdev = 1021.339
  CI (99.9%): [172443.510, 173808.250] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_119._Benchmark.benchmark_Cluster_119  thrpt   30  173125.880 ± 682.370  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_12._Benchmark.benchmark_Cluster_12$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_12._Benchmark.benchmark_Cluster_12

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77506.747 ops/s
# Warmup Iteration   2: 101622.109 ops/s
# Warmup Iteration   3: 184506.162 ops/s
# Warmup Iteration   4: 204154.324 ops/s
# Warmup Iteration   5: 201984.458 ops/s
# Warmup Iteration   6: 205619.236 ops/s
# Warmup Iteration   7: 205185.670 ops/s
# Warmup Iteration   8: 205421.928 ops/s
# Warmup Iteration   9: 137192.166 ops/s
# Warmup Iteration  10: 205627.504 ops/s
# Warmup Iteration  11: 205371.713 ops/s
# Warmup Iteration  12: 205151.195 ops/s
# Warmup Iteration  13: 205198.046 ops/s
# Warmup Iteration  14: 205377.288 ops/s
# Warmup Iteration  15: 205507.160 ops/s
# Warmup Iteration  16: 205679.285 ops/s
# Warmup Iteration  17: 205654.522 ops/s
# Warmup Iteration  18: 204850.268 ops/s
# Warmup Iteration  19: 204256.228 ops/s
# Warmup Iteration  20: 205174.374 ops/s
# Warmup Iteration  21: 205484.877 ops/s
# Warmup Iteration  22: 204493.601 ops/s
# Warmup Iteration  23: 204894.043 ops/s
# Warmup Iteration  24: 205091.966 ops/s
# Warmup Iteration  25: 204115.937 ops/s
# Warmup Iteration  26: 204637.635 ops/s
# Warmup Iteration  27: 202988.079 ops/s
# Warmup Iteration  28: 202913.063 ops/s
# Warmup Iteration  29: 204423.014 ops/s
# Warmup Iteration  30: 204793.039 ops/s
Iteration   1: 203820.868 ops/s
Iteration   2: 203244.847 ops/s
Iteration   3: 203622.541 ops/s
Iteration   4: 203834.213 ops/s
Iteration   5: 202599.682 ops/s
Iteration   6: 202556.475 ops/s
Iteration   7: 203435.271 ops/s
Iteration   8: 205900.700 ops/s
Iteration   9: 205937.743 ops/s
Iteration  10: 206590.974 ops/s
Iteration  11: 206159.048 ops/s
Iteration  12: 206051.396 ops/s
Iteration  13: 204767.514 ops/s
Iteration  14: 204630.063 ops/s
Iteration  15: 205776.264 ops/s
Iteration  16: 205024.071 ops/s
Iteration  17: 205473.323 ops/s
Iteration  18: 206076.405 ops/s
Iteration  19: 204907.212 ops/s
Iteration  20: 204575.205 ops/s
Iteration  21: 204805.516 ops/s
Iteration  22: 204302.513 ops/s
Iteration  23: 202642.440 ops/s
Iteration  24: 204472.022 ops/s
Iteration  25: 201954.724 ops/s
Iteration  26: 202781.611 ops/s
Iteration  27: 205031.183 ops/s
Iteration  28: 204081.152 ops/s
Iteration  29: 202539.624 ops/s
Iteration  30: 204098.965 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_12._Benchmark.benchmark_Cluster_12":
  204389.785 ±(99.9%) 859.912 ops/s [Average]
  (min, avg, max) = (201954.724, 204389.785, 206590.974), stdev = 1287.076
  CI (99.9%): [203529.873, 205249.697] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_12._Benchmark.benchmark_Cluster_12  thrpt   30  204389.785 ± 859.912  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_120._Benchmark.benchmark_Cluster_120$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_120._Benchmark.benchmark_Cluster_120

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86151.265 ops/s
# Warmup Iteration   2: 117996.824 ops/s
# Warmup Iteration   3: 210157.627 ops/s
# Warmup Iteration   4: 238331.078 ops/s
# Warmup Iteration   5: 235499.964 ops/s
# Warmup Iteration   6: 239129.674 ops/s
# Warmup Iteration   7: 238237.986 ops/s
# Warmup Iteration   8: 238767.134 ops/s
# Warmup Iteration   9: 160396.352 ops/s
# Warmup Iteration  10: 239003.753 ops/s
# Warmup Iteration  11: 239038.296 ops/s
# Warmup Iteration  12: 238462.452 ops/s
# Warmup Iteration  13: 237983.677 ops/s
# Warmup Iteration  14: 237871.758 ops/s
# Warmup Iteration  15: 237408.693 ops/s
# Warmup Iteration  16: 236613.248 ops/s
# Warmup Iteration  17: 236956.232 ops/s
# Warmup Iteration  18: 236420.072 ops/s
# Warmup Iteration  19: 236617.472 ops/s
# Warmup Iteration  20: 237186.966 ops/s
# Warmup Iteration  21: 238277.085 ops/s
# Warmup Iteration  22: 237731.405 ops/s
# Warmup Iteration  23: 237293.477 ops/s
# Warmup Iteration  24: 236555.120 ops/s
# Warmup Iteration  25: 238393.734 ops/s
# Warmup Iteration  26: 236679.210 ops/s
# Warmup Iteration  27: 237868.024 ops/s
# Warmup Iteration  28: 237765.726 ops/s
# Warmup Iteration  29: 238918.774 ops/s
# Warmup Iteration  30: 238891.320 ops/s
Iteration   1: 238569.805 ops/s
Iteration   2: 239676.768 ops/s
Iteration   3: 238095.497 ops/s
Iteration   4: 238232.134 ops/s
Iteration   5: 238964.296 ops/s
Iteration   6: 237006.354 ops/s
Iteration   7: 237287.596 ops/s
Iteration   8: 239778.173 ops/s
Iteration   9: 237857.631 ops/s
Iteration  10: 239042.379 ops/s
Iteration  11: 239628.998 ops/s
Iteration  12: 237325.594 ops/s
Iteration  13: 238248.422 ops/s
Iteration  14: 237897.833 ops/s
Iteration  15: 239189.136 ops/s
Iteration  16: 239507.336 ops/s
Iteration  17: 238757.080 ops/s
Iteration  18: 238982.157 ops/s
Iteration  19: 238294.053 ops/s
Iteration  20: 238786.648 ops/s
Iteration  21: 238838.493 ops/s
Iteration  22: 237008.256 ops/s
Iteration  23: 238144.773 ops/s
Iteration  24: 236979.933 ops/s
Iteration  25: 236636.523 ops/s
Iteration  26: 235922.605 ops/s
Iteration  27: 235521.269 ops/s
Iteration  28: 237377.572 ops/s
Iteration  29: 239126.935 ops/s
Iteration  30: 238199.596 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_120._Benchmark.benchmark_Cluster_120":
  238162.795 ±(99.9%) 733.682 ops/s [Average]
  (min, avg, max) = (235521.269, 238162.795, 239778.173), stdev = 1098.141
  CI (99.9%): [237429.112, 238896.477] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_120._Benchmark.benchmark_Cluster_120  thrpt   30  238162.795 ± 733.682  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_121._Benchmark.benchmark_Cluster_121$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_121._Benchmark.benchmark_Cluster_121

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77098.547 ops/s
# Warmup Iteration   2: 107627.088 ops/s
# Warmup Iteration   3: 138978.345 ops/s
# Warmup Iteration   4: 184816.133 ops/s
# Warmup Iteration   5: 185782.928 ops/s
# Warmup Iteration   6: 183382.119 ops/s
# Warmup Iteration   7: 183825.551 ops/s
# Warmup Iteration   8: 184460.016 ops/s
# Warmup Iteration   9: 184253.688 ops/s
# Warmup Iteration  10: 185575.669 ops/s
# Warmup Iteration  11: 163207.235 ops/s
# Warmup Iteration  12: 147393.464 ops/s
# Warmup Iteration  13: 183377.653 ops/s
# Warmup Iteration  14: 183150.718 ops/s
# Warmup Iteration  15: 185069.272 ops/s
# Warmup Iteration  16: 184626.893 ops/s
# Warmup Iteration  17: 186009.255 ops/s
# Warmup Iteration  18: 186094.700 ops/s
# Warmup Iteration  19: 184946.354 ops/s
# Warmup Iteration  20: 186739.852 ops/s
# Warmup Iteration  21: 186838.975 ops/s
# Warmup Iteration  22: 186740.076 ops/s
# Warmup Iteration  23: 186246.516 ops/s
# Warmup Iteration  24: 185311.856 ops/s
# Warmup Iteration  25: 185389.676 ops/s
# Warmup Iteration  26: 183431.387 ops/s
# Warmup Iteration  27: 184159.481 ops/s
# Warmup Iteration  28: 186060.091 ops/s
# Warmup Iteration  29: 184696.636 ops/s
# Warmup Iteration  30: 185032.657 ops/s
Iteration   1: 185075.203 ops/s
Iteration   2: 184957.501 ops/s
Iteration   3: 185543.777 ops/s
Iteration   4: 184972.465 ops/s
Iteration   5: 183595.557 ops/s
Iteration   6: 184366.882 ops/s
Iteration   7: 182495.181 ops/s
Iteration   8: 184227.769 ops/s
Iteration   9: 185764.422 ops/s
Iteration  10: 186020.639 ops/s
Iteration  11: 186114.332 ops/s
Iteration  12: 186203.247 ops/s
Iteration  13: 185663.872 ops/s
Iteration  14: 185253.084 ops/s
Iteration  15: 184747.333 ops/s
Iteration  16: 185585.287 ops/s
Iteration  17: 186012.117 ops/s
Iteration  18: 184199.139 ops/s
Iteration  19: 185807.871 ops/s
Iteration  20: 186246.402 ops/s
Iteration  21: 184568.531 ops/s
Iteration  22: 184119.562 ops/s
Iteration  23: 185605.161 ops/s
Iteration  24: 183414.985 ops/s
Iteration  25: 184136.010 ops/s
Iteration  26: 184794.071 ops/s
Iteration  27: 185150.735 ops/s
Iteration  28: 186178.604 ops/s
Iteration  29: 185330.737 ops/s
Iteration  30: 185694.870 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_121._Benchmark.benchmark_Cluster_121":
  185061.511 ±(99.9%) 622.379 ops/s [Average]
  (min, avg, max) = (182495.181, 185061.511, 186246.402), stdev = 931.547
  CI (99.9%): [184439.133, 185683.890] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_121._Benchmark.benchmark_Cluster_121  thrpt   30  185061.511 ± 622.379  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_122._Benchmark.benchmark_Cluster_122$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_122._Benchmark.benchmark_Cluster_122

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63760.309 ops/s
# Warmup Iteration   2: 101639.772 ops/s
# Warmup Iteration   3: 103255.997 ops/s
# Warmup Iteration   4: 103434.021 ops/s
# Warmup Iteration   5: 141035.604 ops/s
# Warmup Iteration   6: 142504.947 ops/s
# Warmup Iteration   7: 142750.159 ops/s
# Warmup Iteration   8: 143202.071 ops/s
# Warmup Iteration   9: 142473.208 ops/s
# Warmup Iteration  10: 140996.379 ops/s
# Warmup Iteration  11: 143090.595 ops/s
# Warmup Iteration  12: 142219.798 ops/s
# Warmup Iteration  13: 143602.979 ops/s
# Warmup Iteration  14: 142820.876 ops/s
# Warmup Iteration  15: 142175.139 ops/s
# Warmup Iteration  16: 142849.025 ops/s
# Warmup Iteration  17: 150612.254 ops/s
# Warmup Iteration  18: 148892.196 ops/s
# Warmup Iteration  19: 150551.646 ops/s
# Warmup Iteration  20: 148463.390 ops/s
# Warmup Iteration  21: 109826.621 ops/s
# Warmup Iteration  22: 145074.476 ops/s
# Warmup Iteration  23: 150358.014 ops/s
# Warmup Iteration  24: 149962.411 ops/s
# Warmup Iteration  25: 150071.276 ops/s
# Warmup Iteration  26: 151723.776 ops/s
# Warmup Iteration  27: 151313.342 ops/s
# Warmup Iteration  28: 151057.089 ops/s
# Warmup Iteration  29: 151639.113 ops/s
# Warmup Iteration  30: 151573.485 ops/s
Iteration   1: 151262.462 ops/s
Iteration   2: 151712.223 ops/s
Iteration   3: 151187.435 ops/s
Iteration   4: 150625.017 ops/s
Iteration   5: 151447.245 ops/s
Iteration   6: 150746.608 ops/s
Iteration   7: 150810.679 ops/s
Iteration   8: 151201.240 ops/s
Iteration   9: 150881.489 ops/s
Iteration  10: 150825.755 ops/s
Iteration  11: 151415.055 ops/s
Iteration  12: 151875.918 ops/s
Iteration  13: 151891.324 ops/s
Iteration  14: 151113.199 ops/s
Iteration  15: 151308.181 ops/s
Iteration  16: 150462.856 ops/s
Iteration  17: 150629.804 ops/s
Iteration  18: 150160.417 ops/s
Iteration  19: 151095.393 ops/s
Iteration  20: 150844.714 ops/s
Iteration  21: 149945.426 ops/s
Iteration  22: 150432.279 ops/s
Iteration  23: 150920.898 ops/s
Iteration  24: 150825.921 ops/s
Iteration  25: 151266.226 ops/s
Iteration  26: 151173.928 ops/s
Iteration  27: 150842.162 ops/s
Iteration  28: 150511.161 ops/s
Iteration  29: 150716.220 ops/s
Iteration  30: 150750.225 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_122._Benchmark.benchmark_Cluster_122":
  150962.715 ±(99.9%) 305.904 ops/s [Average]
  (min, avg, max) = (149945.426, 150962.715, 151891.324), stdev = 457.863
  CI (99.9%): [150656.811, 151268.620] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_122._Benchmark.benchmark_Cluster_122  thrpt   30  150962.715 ± 305.904  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_123._Benchmark.benchmark_Cluster_123$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_123._Benchmark.benchmark_Cluster_123

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 87784.580 ops/s
# Warmup Iteration   2: 107651.194 ops/s
# Warmup Iteration   3: 109304.123 ops/s
# Warmup Iteration   4: 137089.895 ops/s
# Warmup Iteration   5: 157362.317 ops/s
# Warmup Iteration   6: 154953.277 ops/s
# Warmup Iteration   7: 155804.005 ops/s
# Warmup Iteration   8: 152826.062 ops/s
# Warmup Iteration   9: 153503.556 ops/s
# Warmup Iteration  10: 155492.487 ops/s
# Warmup Iteration  11: 155141.866 ops/s
# Warmup Iteration  12: 154261.376 ops/s
# Warmup Iteration  13: 155585.807 ops/s
# Warmup Iteration  14: 156687.557 ops/s
# Warmup Iteration  15: 155915.988 ops/s
# Warmup Iteration  16: 156297.713 ops/s
# Warmup Iteration  17: 156321.846 ops/s
# Warmup Iteration  18: 120167.780 ops/s
# Warmup Iteration  19: 162177.319 ops/s
# Warmup Iteration  20: 162609.834 ops/s
# Warmup Iteration  21: 161121.800 ops/s
# Warmup Iteration  22: 163033.814 ops/s
# Warmup Iteration  23: 163051.028 ops/s
# Warmup Iteration  24: 162548.528 ops/s
# Warmup Iteration  25: 163127.578 ops/s
# Warmup Iteration  26: 162836.810 ops/s
# Warmup Iteration  27: 162369.575 ops/s
# Warmup Iteration  28: 163145.295 ops/s
# Warmup Iteration  29: 162744.462 ops/s
# Warmup Iteration  30: 161960.514 ops/s
Iteration   1: 162699.059 ops/s
Iteration   2: 160885.578 ops/s
Iteration   3: 162895.297 ops/s
Iteration   4: 161210.693 ops/s
Iteration   5: 161706.089 ops/s
Iteration   6: 162762.740 ops/s
Iteration   7: 162797.626 ops/s
Iteration   8: 162958.644 ops/s
Iteration   9: 162114.295 ops/s
Iteration  10: 162972.064 ops/s
Iteration  11: 162961.317 ops/s
Iteration  12: 162727.546 ops/s
Iteration  13: 162574.177 ops/s
Iteration  14: 162723.942 ops/s
Iteration  15: 162752.187 ops/s
Iteration  16: 162820.911 ops/s
Iteration  17: 162721.600 ops/s
Iteration  18: 162851.740 ops/s
Iteration  19: 162527.830 ops/s
Iteration  20: 162882.933 ops/s
Iteration  21: 162794.235 ops/s
Iteration  22: 162298.944 ops/s
Iteration  23: 162269.770 ops/s
Iteration  24: 161960.142 ops/s
Iteration  25: 162472.527 ops/s
Iteration  26: 162531.074 ops/s
Iteration  27: 163052.137 ops/s
Iteration  28: 163456.740 ops/s
Iteration  29: 163058.669 ops/s
Iteration  30: 162871.156 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_123._Benchmark.benchmark_Cluster_123":
  162577.055 ±(99.9%) 363.971 ops/s [Average]
  (min, avg, max) = (160885.578, 162577.055, 163456.740), stdev = 544.775
  CI (99.9%): [162213.084, 162941.027] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_123._Benchmark.benchmark_Cluster_123  thrpt   30  162577.055 ± 363.971  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_124._Benchmark.benchmark_Cluster_124$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_124._Benchmark.benchmark_Cluster_124

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 113239.510 ops/s
# Warmup Iteration   2: 145357.677 ops/s
# Warmup Iteration   3: 231306.084 ops/s
# Warmup Iteration   4: 270395.376 ops/s
# Warmup Iteration   5: 268477.643 ops/s
# Warmup Iteration   6: 271610.956 ops/s
# Warmup Iteration   7: 270909.637 ops/s
# Warmup Iteration   8: 270461.856 ops/s
# Warmup Iteration   9: 271209.023 ops/s
# Warmup Iteration  10: 183208.720 ops/s
# Warmup Iteration  11: 270450.323 ops/s
# Warmup Iteration  12: 271311.647 ops/s
# Warmup Iteration  13: 271733.848 ops/s
# Warmup Iteration  14: 271743.552 ops/s
# Warmup Iteration  15: 271517.331 ops/s
# Warmup Iteration  16: 269054.133 ops/s
# Warmup Iteration  17: 271361.219 ops/s
# Warmup Iteration  18: 271099.654 ops/s
# Warmup Iteration  19: 269255.773 ops/s
# Warmup Iteration  20: 270707.550 ops/s
# Warmup Iteration  21: 270689.322 ops/s
# Warmup Iteration  22: 270628.511 ops/s
# Warmup Iteration  23: 270405.491 ops/s
# Warmup Iteration  24: 270207.852 ops/s
# Warmup Iteration  25: 270930.804 ops/s
# Warmup Iteration  26: 269116.331 ops/s
# Warmup Iteration  27: 268025.430 ops/s
# Warmup Iteration  28: 271200.729 ops/s
# Warmup Iteration  29: 269874.518 ops/s
# Warmup Iteration  30: 269578.730 ops/s
Iteration   1: 270742.490 ops/s
Iteration   2: 269818.335 ops/s
Iteration   3: 268478.488 ops/s
Iteration   4: 270681.558 ops/s
Iteration   5: 271444.624 ops/s
Iteration   6: 268793.625 ops/s
Iteration   7: 272208.662 ops/s
Iteration   8: 272139.281 ops/s
Iteration   9: 270977.561 ops/s
Iteration  10: 270737.213 ops/s
Iteration  11: 270330.225 ops/s
Iteration  12: 270411.186 ops/s
Iteration  13: 270826.705 ops/s
Iteration  14: 270200.991 ops/s
Iteration  15: 270597.762 ops/s
Iteration  16: 271647.109 ops/s
Iteration  17: 268795.884 ops/s
Iteration  18: 270852.605 ops/s
Iteration  19: 270675.394 ops/s
Iteration  20: 269438.531 ops/s
Iteration  21: 271051.944 ops/s
Iteration  22: 271118.779 ops/s
Iteration  23: 270846.443 ops/s
Iteration  24: 270662.623 ops/s
Iteration  25: 270390.438 ops/s
Iteration  26: 270391.425 ops/s
Iteration  27: 270951.304 ops/s
Iteration  28: 270862.525 ops/s
Iteration  29: 269304.260 ops/s
Iteration  30: 271367.056 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_124._Benchmark.benchmark_Cluster_124":
  270558.168 ±(99.9%) 599.573 ops/s [Average]
  (min, avg, max) = (268478.488, 270558.168, 272208.662), stdev = 897.413
  CI (99.9%): [269958.595, 271157.740] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_124._Benchmark.benchmark_Cluster_124  thrpt   30  270558.168 ± 599.573  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_125._Benchmark.benchmark_Cluster_125$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_125._Benchmark.benchmark_Cluster_125

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73942.199 ops/s
# Warmup Iteration   2: 87677.961 ops/s
# Warmup Iteration   3: 89516.337 ops/s
# Warmup Iteration   4: 133415.789 ops/s
# Warmup Iteration   5: 133384.503 ops/s
# Warmup Iteration   6: 134679.051 ops/s
# Warmup Iteration   7: 132954.119 ops/s
# Warmup Iteration   8: 134258.441 ops/s
# Warmup Iteration   9: 134472.054 ops/s
# Warmup Iteration  10: 134357.710 ops/s
# Warmup Iteration  11: 133742.482 ops/s
# Warmup Iteration  12: 135083.670 ops/s
# Warmup Iteration  13: 134753.938 ops/s
# Warmup Iteration  14: 134819.559 ops/s
# Warmup Iteration  15: 104706.072 ops/s
# Warmup Iteration  16: 120447.379 ops/s
# Warmup Iteration  17: 139961.602 ops/s
# Warmup Iteration  18: 139470.129 ops/s
# Warmup Iteration  19: 137673.759 ops/s
# Warmup Iteration  20: 137679.914 ops/s
# Warmup Iteration  21: 138532.595 ops/s
# Warmup Iteration  22: 139284.432 ops/s
# Warmup Iteration  23: 140354.129 ops/s
# Warmup Iteration  24: 136527.051 ops/s
# Warmup Iteration  25: 137097.165 ops/s
# Warmup Iteration  26: 138948.619 ops/s
# Warmup Iteration  27: 138712.123 ops/s
# Warmup Iteration  28: 137983.978 ops/s
# Warmup Iteration  29: 139086.926 ops/s
# Warmup Iteration  30: 137633.774 ops/s
Iteration   1: 138043.662 ops/s
Iteration   2: 139622.173 ops/s
Iteration   3: 140346.440 ops/s
Iteration   4: 139086.786 ops/s
Iteration   5: 138760.891 ops/s
Iteration   6: 139470.273 ops/s
Iteration   7: 139856.639 ops/s
Iteration   8: 138097.008 ops/s
Iteration   9: 138007.456 ops/s
Iteration  10: 138587.153 ops/s
Iteration  11: 139859.198 ops/s
Iteration  12: 140455.372 ops/s
Iteration  13: 140063.409 ops/s
Iteration  14: 139674.720 ops/s
Iteration  15: 139796.565 ops/s
Iteration  16: 139247.852 ops/s
Iteration  17: 140007.066 ops/s
Iteration  18: 139855.818 ops/s
Iteration  19: 138642.962 ops/s
Iteration  20: 140197.690 ops/s
Iteration  21: 139833.870 ops/s
Iteration  22: 140305.194 ops/s
Iteration  23: 140395.702 ops/s
Iteration  24: 140390.408 ops/s
Iteration  25: 139971.516 ops/s
Iteration  26: 140040.173 ops/s
Iteration  27: 139515.101 ops/s
Iteration  28: 138615.445 ops/s
Iteration  29: 139953.695 ops/s
Iteration  30: 139725.076 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_125._Benchmark.benchmark_Cluster_125":
  139547.510 ±(99.9%) 491.799 ops/s [Average]
  (min, avg, max) = (138007.456, 139547.510, 140455.372), stdev = 736.101
  CI (99.9%): [139055.712, 140039.309] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_125._Benchmark.benchmark_Cluster_125  thrpt   30  139547.510 ± 491.799  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_126._Benchmark.benchmark_Cluster_126$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_126._Benchmark.benchmark_Cluster_126

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75394.714 ops/s
# Warmup Iteration   2: 91449.523 ops/s
# Warmup Iteration   3: 117195.240 ops/s
# Warmup Iteration   4: 154159.303 ops/s
# Warmup Iteration   5: 154344.770 ops/s
# Warmup Iteration   6: 152917.889 ops/s
# Warmup Iteration   7: 154495.070 ops/s
# Warmup Iteration   8: 153781.675 ops/s
# Warmup Iteration   9: 154060.747 ops/s
# Warmup Iteration  10: 154228.750 ops/s
# Warmup Iteration  11: 154266.391 ops/s
# Warmup Iteration  12: 106814.059 ops/s
# Warmup Iteration  13: 150667.625 ops/s
# Warmup Iteration  14: 153253.498 ops/s
# Warmup Iteration  15: 154555.095 ops/s
# Warmup Iteration  16: 154478.901 ops/s
# Warmup Iteration  17: 159557.087 ops/s
# Warmup Iteration  18: 158618.337 ops/s
# Warmup Iteration  19: 158949.356 ops/s
# Warmup Iteration  20: 158722.383 ops/s
# Warmup Iteration  21: 158990.469 ops/s
# Warmup Iteration  22: 159391.918 ops/s
# Warmup Iteration  23: 159798.708 ops/s
# Warmup Iteration  24: 159362.855 ops/s
# Warmup Iteration  25: 159463.582 ops/s
# Warmup Iteration  26: 158383.871 ops/s
# Warmup Iteration  27: 158498.837 ops/s
# Warmup Iteration  28: 158382.664 ops/s
# Warmup Iteration  29: 159001.956 ops/s
# Warmup Iteration  30: 156968.289 ops/s
Iteration   1: 158556.398 ops/s
Iteration   2: 158714.496 ops/s
Iteration   3: 158248.952 ops/s
Iteration   4: 155733.070 ops/s
Iteration   5: 157695.011 ops/s
Iteration   6: 156744.601 ops/s
Iteration   7: 156585.855 ops/s
Iteration   8: 156680.999 ops/s
Iteration   9: 157912.026 ops/s
Iteration  10: 159163.499 ops/s
Iteration  11: 159759.264 ops/s
Iteration  12: 158718.221 ops/s
Iteration  13: 156523.148 ops/s
Iteration  14: 157995.540 ops/s
Iteration  15: 158745.884 ops/s
Iteration  16: 157312.584 ops/s
Iteration  17: 157884.763 ops/s
Iteration  18: 158522.870 ops/s
Iteration  19: 157464.659 ops/s
Iteration  20: 158814.540 ops/s
Iteration  21: 158406.821 ops/s
Iteration  22: 157344.278 ops/s
Iteration  23: 158723.513 ops/s
Iteration  24: 157600.296 ops/s
Iteration  25: 157639.095 ops/s
Iteration  26: 158203.944 ops/s
Iteration  27: 158838.050 ops/s
Iteration  28: 158695.737 ops/s
Iteration  29: 158512.281 ops/s
Iteration  30: 158736.562 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_126._Benchmark.benchmark_Cluster_126":
  158015.899 ±(99.9%) 611.367 ops/s [Average]
  (min, avg, max) = (155733.070, 158015.899, 159759.264), stdev = 915.066
  CI (99.9%): [157404.531, 158627.266] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_126._Benchmark.benchmark_Cluster_126  thrpt   30  158015.899 ± 611.367  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_127._Benchmark.benchmark_Cluster_127$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_127._Benchmark.benchmark_Cluster_127

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80367.959 ops/s
# Warmup Iteration   2: 102923.170 ops/s
# Warmup Iteration   3: 150453.145 ops/s
# Warmup Iteration   4: 190082.233 ops/s
# Warmup Iteration   5: 191055.862 ops/s
# Warmup Iteration   6: 193675.973 ops/s
# Warmup Iteration   7: 191949.438 ops/s
# Warmup Iteration   8: 190166.099 ops/s
# Warmup Iteration   9: 189359.931 ops/s
# Warmup Iteration  10: 168758.112 ops/s
# Warmup Iteration  11: 152786.794 ops/s
# Warmup Iteration  12: 192271.764 ops/s
# Warmup Iteration  13: 193252.226 ops/s
# Warmup Iteration  14: 190794.658 ops/s
# Warmup Iteration  15: 192909.377 ops/s
# Warmup Iteration  16: 193331.681 ops/s
# Warmup Iteration  17: 196585.931 ops/s
# Warmup Iteration  18: 195034.815 ops/s
# Warmup Iteration  19: 195467.317 ops/s
# Warmup Iteration  20: 195261.802 ops/s
# Warmup Iteration  21: 194910.740 ops/s
# Warmup Iteration  22: 196909.553 ops/s
# Warmup Iteration  23: 195450.559 ops/s
# Warmup Iteration  24: 195439.850 ops/s
# Warmup Iteration  25: 196110.438 ops/s
# Warmup Iteration  26: 195714.660 ops/s
# Warmup Iteration  27: 195619.873 ops/s
# Warmup Iteration  28: 194432.133 ops/s
# Warmup Iteration  29: 195570.338 ops/s
# Warmup Iteration  30: 195605.244 ops/s
Iteration   1: 196956.150 ops/s
Iteration   2: 196158.505 ops/s
Iteration   3: 197337.030 ops/s
Iteration   4: 198294.823 ops/s
Iteration   5: 198074.196 ops/s
Iteration   6: 197729.191 ops/s
Iteration   7: 197282.104 ops/s
Iteration   8: 196605.037 ops/s
Iteration   9: 197294.200 ops/s
Iteration  10: 197986.289 ops/s
Iteration  11: 197995.615 ops/s
Iteration  12: 197635.432 ops/s
Iteration  13: 197812.836 ops/s
Iteration  14: 196738.640 ops/s
Iteration  15: 196571.359 ops/s
Iteration  16: 196711.177 ops/s
Iteration  17: 198279.032 ops/s
Iteration  18: 196402.624 ops/s
Iteration  19: 197043.785 ops/s
Iteration  20: 197048.109 ops/s
Iteration  21: 197616.299 ops/s
Iteration  22: 197471.550 ops/s
Iteration  23: 196957.881 ops/s
Iteration  24: 196201.158 ops/s
Iteration  25: 195336.393 ops/s
Iteration  26: 197611.254 ops/s
Iteration  27: 197476.418 ops/s
Iteration  28: 198308.776 ops/s
Iteration  29: 198149.138 ops/s
Iteration  30: 197798.555 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_127._Benchmark.benchmark_Cluster_127":
  197296.118 ±(99.9%) 488.757 ops/s [Average]
  (min, avg, max) = (195336.393, 197296.118, 198308.776), stdev = 731.548
  CI (99.9%): [196807.362, 197784.875] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_127._Benchmark.benchmark_Cluster_127  thrpt   30  197296.118 ± 488.757  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_128._Benchmark.benchmark_Cluster_128$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_128._Benchmark.benchmark_Cluster_128

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57001.627 ops/s
# Warmup Iteration   2: 84664.410 ops/s
# Warmup Iteration   3: 132277.677 ops/s
# Warmup Iteration   4: 165943.863 ops/s
# Warmup Iteration   5: 163244.676 ops/s
# Warmup Iteration   6: 166944.440 ops/s
# Warmup Iteration   7: 165830.940 ops/s
# Warmup Iteration   8: 165885.697 ops/s
# Warmup Iteration   9: 152220.040 ops/s
# Warmup Iteration  10: 125826.277 ops/s
# Warmup Iteration  11: 165889.424 ops/s
# Warmup Iteration  12: 165720.675 ops/s
# Warmup Iteration  13: 166062.298 ops/s
# Warmup Iteration  14: 167165.798 ops/s
# Warmup Iteration  15: 167622.807 ops/s
# Warmup Iteration  16: 166271.571 ops/s
# Warmup Iteration  17: 167013.171 ops/s
# Warmup Iteration  18: 167202.625 ops/s
# Warmup Iteration  19: 167521.082 ops/s
# Warmup Iteration  20: 167641.563 ops/s
# Warmup Iteration  21: 167757.740 ops/s
# Warmup Iteration  22: 165662.326 ops/s
# Warmup Iteration  23: 165938.042 ops/s
# Warmup Iteration  24: 167571.130 ops/s
# Warmup Iteration  25: 167677.331 ops/s
# Warmup Iteration  26: 167673.979 ops/s
# Warmup Iteration  27: 167760.527 ops/s
# Warmup Iteration  28: 167751.496 ops/s
# Warmup Iteration  29: 167250.676 ops/s
# Warmup Iteration  30: 167623.148 ops/s
Iteration   1: 167931.436 ops/s
Iteration   2: 167916.884 ops/s
Iteration   3: 167783.960 ops/s
Iteration   4: 168075.069 ops/s
Iteration   5: 167622.048 ops/s
Iteration   6: 168088.733 ops/s
Iteration   7: 166634.967 ops/s
Iteration   8: 167243.152 ops/s
Iteration   9: 167394.826 ops/s
Iteration  10: 167702.486 ops/s
Iteration  11: 167727.813 ops/s
Iteration  12: 167587.533 ops/s
Iteration  13: 167586.863 ops/s
Iteration  14: 167662.383 ops/s
Iteration  15: 167868.589 ops/s
Iteration  16: 167636.137 ops/s
Iteration  17: 167274.353 ops/s
Iteration  18: 167016.350 ops/s
Iteration  19: 166754.406 ops/s
Iteration  20: 166526.198 ops/s
Iteration  21: 166793.669 ops/s
Iteration  22: 166671.803 ops/s
Iteration  23: 165765.370 ops/s
Iteration  24: 167414.493 ops/s
Iteration  25: 166883.364 ops/s
Iteration  26: 166208.995 ops/s
Iteration  27: 166424.546 ops/s
Iteration  28: 166705.152 ops/s
Iteration  29: 167154.398 ops/s
Iteration  30: 167111.640 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_128._Benchmark.benchmark_Cluster_128":
  167238.921 ±(99.9%) 398.127 ops/s [Average]
  (min, avg, max) = (165765.370, 167238.921, 168088.733), stdev = 595.899
  CI (99.9%): [166840.793, 167637.048] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_128._Benchmark.benchmark_Cluster_128  thrpt   30  167238.921 ± 398.127  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_129._Benchmark.benchmark_Cluster_129$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_129._Benchmark.benchmark_Cluster_129

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69250.815 ops/s
# Warmup Iteration   2: 103921.357 ops/s
# Warmup Iteration   3: 209930.392 ops/s
# Warmup Iteration   4: 207873.672 ops/s
# Warmup Iteration   5: 209643.804 ops/s
# Warmup Iteration   6: 209839.796 ops/s
# Warmup Iteration   7: 144730.188 ops/s
# Warmup Iteration   8: 210055.990 ops/s
# Warmup Iteration   9: 209791.885 ops/s
# Warmup Iteration  10: 210162.142 ops/s
# Warmup Iteration  11: 209165.641 ops/s
# Warmup Iteration  12: 209791.837 ops/s
# Warmup Iteration  13: 210083.263 ops/s
# Warmup Iteration  14: 209850.429 ops/s
# Warmup Iteration  15: 209870.491 ops/s
# Warmup Iteration  16: 209807.344 ops/s
# Warmup Iteration  17: 208933.651 ops/s
# Warmup Iteration  18: 209700.187 ops/s
# Warmup Iteration  19: 209792.901 ops/s
# Warmup Iteration  20: 210286.143 ops/s
# Warmup Iteration  21: 208458.065 ops/s
# Warmup Iteration  22: 209901.715 ops/s
# Warmup Iteration  23: 209389.286 ops/s
# Warmup Iteration  24: 208187.421 ops/s
# Warmup Iteration  25: 209270.574 ops/s
# Warmup Iteration  26: 210591.301 ops/s
# Warmup Iteration  27: 210150.414 ops/s
# Warmup Iteration  28: 208471.462 ops/s
# Warmup Iteration  29: 208798.876 ops/s
# Warmup Iteration  30: 208529.192 ops/s
Iteration   1: 208104.283 ops/s
Iteration   2: 209070.243 ops/s
Iteration   3: 209630.021 ops/s
Iteration   4: 210473.950 ops/s
Iteration   5: 209634.472 ops/s
Iteration   6: 209629.133 ops/s
Iteration   7: 209832.993 ops/s
Iteration   8: 209268.007 ops/s
Iteration   9: 209309.530 ops/s
Iteration  10: 209236.669 ops/s
Iteration  11: 209038.229 ops/s
Iteration  12: 209266.317 ops/s
Iteration  13: 209907.657 ops/s
Iteration  14: 208686.792 ops/s
Iteration  15: 208821.973 ops/s
Iteration  16: 209509.992 ops/s
Iteration  17: 210293.811 ops/s
Iteration  18: 209757.670 ops/s
Iteration  19: 210092.511 ops/s
Iteration  20: 208472.149 ops/s
Iteration  21: 209395.907 ops/s
Iteration  22: 209286.888 ops/s
Iteration  23: 210034.160 ops/s
Iteration  24: 209203.072 ops/s
Iteration  25: 209520.897 ops/s
Iteration  26: 209583.949 ops/s
Iteration  27: 209534.179 ops/s
Iteration  28: 209105.614 ops/s
Iteration  29: 209513.003 ops/s
Iteration  30: 209891.567 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_129._Benchmark.benchmark_Cluster_129":
  209436.855 ±(99.9%) 344.051 ops/s [Average]
  (min, avg, max) = (208104.283, 209436.855, 210473.950), stdev = 514.960
  CI (99.9%): [209092.803, 209780.906] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_129._Benchmark.benchmark_Cluster_129  thrpt   30  209436.855 ± 344.051  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_13._Benchmark.benchmark_Cluster_13$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_13._Benchmark.benchmark_Cluster_13

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 89269.128 ops/s
# Warmup Iteration   2: 97827.699 ops/s
# Warmup Iteration   3: 98517.860 ops/s
# Warmup Iteration   4: 111435.337 ops/s
# Warmup Iteration   5: 138138.103 ops/s
# Warmup Iteration   6: 138676.634 ops/s
# Warmup Iteration   7: 138488.180 ops/s
# Warmup Iteration   8: 138731.667 ops/s
# Warmup Iteration   9: 137416.060 ops/s
# Warmup Iteration  10: 138664.416 ops/s
# Warmup Iteration  11: 138405.830 ops/s
# Warmup Iteration  12: 138441.665 ops/s
# Warmup Iteration  13: 138642.621 ops/s
# Warmup Iteration  14: 138456.170 ops/s
# Warmup Iteration  15: 138212.295 ops/s
# Warmup Iteration  16: 138236.569 ops/s
# Warmup Iteration  17: 144682.521 ops/s
# Warmup Iteration  18: 145030.355 ops/s
# Warmup Iteration  19: 137378.966 ops/s
# Warmup Iteration  20: 102724.809 ops/s
# Warmup Iteration  21: 144514.311 ops/s
# Warmup Iteration  22: 144913.659 ops/s
# Warmup Iteration  23: 144302.660 ops/s
# Warmup Iteration  24: 144213.769 ops/s
# Warmup Iteration  25: 144901.683 ops/s
# Warmup Iteration  26: 144577.467 ops/s
# Warmup Iteration  27: 144605.110 ops/s
# Warmup Iteration  28: 144326.937 ops/s
# Warmup Iteration  29: 144634.677 ops/s
# Warmup Iteration  30: 144654.444 ops/s
Iteration   1: 144370.675 ops/s
Iteration   2: 144589.703 ops/s
Iteration   3: 144495.965 ops/s
Iteration   4: 144602.425 ops/s
Iteration   5: 144673.936 ops/s
Iteration   6: 144963.063 ops/s
Iteration   7: 144819.142 ops/s
Iteration   8: 144562.006 ops/s
Iteration   9: 144813.016 ops/s
Iteration  10: 144628.750 ops/s
Iteration  11: 144328.963 ops/s
Iteration  12: 144564.211 ops/s
Iteration  13: 144514.922 ops/s
Iteration  14: 144988.541 ops/s
Iteration  15: 145029.670 ops/s
Iteration  16: 144576.054 ops/s
Iteration  17: 144252.352 ops/s
Iteration  18: 144738.064 ops/s
Iteration  19: 144569.221 ops/s
Iteration  20: 144112.976 ops/s
Iteration  21: 144581.061 ops/s
Iteration  22: 144425.146 ops/s
Iteration  23: 144623.750 ops/s
Iteration  24: 144474.450 ops/s
Iteration  25: 144842.604 ops/s
Iteration  26: 144204.620 ops/s
Iteration  27: 144505.270 ops/s
Iteration  28: 143440.197 ops/s
Iteration  29: 132285.567 ops/s
Iteration  30: 139552.785 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_13._Benchmark.benchmark_Cluster_13":
  143970.970 ±(99.9%) 1607.873 ops/s [Average]
  (min, avg, max) = (132285.567, 143970.970, 145029.670), stdev = 2406.589
  CI (99.9%): [142363.097, 145578.844] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_13._Benchmark.benchmark_Cluster_13  thrpt   30  143970.970 ± 1607.873  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_130._Benchmark.benchmark_Cluster_130$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_130._Benchmark.benchmark_Cluster_130

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42691.999 ops/s
# Warmup Iteration   2: 77806.302 ops/s
# Warmup Iteration   3: 124152.733 ops/s
# Warmup Iteration   4: 155943.435 ops/s
# Warmup Iteration   5: 154520.934 ops/s
# Warmup Iteration   6: 155077.970 ops/s
# Warmup Iteration   7: 156149.346 ops/s
# Warmup Iteration   8: 155659.666 ops/s
# Warmup Iteration   9: 111366.545 ops/s
# Warmup Iteration  10: 149470.395 ops/s
# Warmup Iteration  11: 155278.466 ops/s
# Warmup Iteration  12: 156786.902 ops/s
# Warmup Iteration  13: 156527.520 ops/s
# Warmup Iteration  14: 155865.901 ops/s
# Warmup Iteration  15: 155974.862 ops/s
# Warmup Iteration  16: 156586.264 ops/s
# Warmup Iteration  17: 161966.332 ops/s
# Warmup Iteration  18: 161335.996 ops/s
# Warmup Iteration  19: 161364.765 ops/s
# Warmup Iteration  20: 160680.836 ops/s
# Warmup Iteration  21: 161426.543 ops/s
# Warmup Iteration  22: 161478.286 ops/s
# Warmup Iteration  23: 161816.681 ops/s
# Warmup Iteration  24: 161353.820 ops/s
# Warmup Iteration  25: 161200.838 ops/s
# Warmup Iteration  26: 161452.544 ops/s
# Warmup Iteration  27: 161641.347 ops/s
# Warmup Iteration  28: 161297.934 ops/s
# Warmup Iteration  29: 159936.453 ops/s
# Warmup Iteration  30: 159347.338 ops/s
Iteration   1: 160047.739 ops/s
Iteration   2: 160277.030 ops/s
Iteration   3: 160588.625 ops/s
Iteration   4: 161682.247 ops/s
Iteration   5: 161749.792 ops/s
Iteration   6: 162295.701 ops/s
Iteration   7: 162267.962 ops/s
Iteration   8: 162634.537 ops/s
Iteration   9: 161503.392 ops/s
Iteration  10: 161248.764 ops/s
Iteration  11: 161464.799 ops/s
Iteration  12: 160724.362 ops/s
Iteration  13: 161459.796 ops/s
Iteration  14: 161294.161 ops/s
Iteration  15: 160691.739 ops/s
Iteration  16: 161084.539 ops/s
Iteration  17: 161363.122 ops/s
Iteration  18: 161223.914 ops/s
Iteration  19: 160919.466 ops/s
Iteration  20: 160716.039 ops/s
Iteration  21: 160613.272 ops/s
Iteration  22: 160761.001 ops/s
Iteration  23: 161964.927 ops/s
Iteration  24: 161983.733 ops/s
Iteration  25: 161737.173 ops/s
Iteration  26: 162239.278 ops/s
Iteration  27: 161662.304 ops/s
Iteration  28: 162091.386 ops/s
Iteration  29: 161931.844 ops/s
Iteration  30: 162032.058 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_130._Benchmark.benchmark_Cluster_130":
  161408.490 ±(99.9%) 440.445 ops/s [Average]
  (min, avg, max) = (160047.739, 161408.490, 162634.537), stdev = 659.238
  CI (99.9%): [160968.045, 161848.935] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_130._Benchmark.benchmark_Cluster_130  thrpt   30  161408.490 ± 440.445  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_131._Benchmark.benchmark_Cluster_131$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_131._Benchmark.benchmark_Cluster_131

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63834.359 ops/s
# Warmup Iteration   2: 83064.594 ops/s
# Warmup Iteration   3: 83015.739 ops/s
# Warmup Iteration   4: 101824.414 ops/s
# Warmup Iteration   5: 121439.476 ops/s
# Warmup Iteration   6: 120852.012 ops/s
# Warmup Iteration   7: 120785.104 ops/s
# Warmup Iteration   8: 119305.602 ops/s
# Warmup Iteration   9: 121077.781 ops/s
# Warmup Iteration  10: 120570.778 ops/s
# Warmup Iteration  11: 120458.373 ops/s
# Warmup Iteration  12: 121575.679 ops/s
# Warmup Iteration  13: 121678.467 ops/s
# Warmup Iteration  14: 121715.280 ops/s
# Warmup Iteration  15: 121713.862 ops/s
# Warmup Iteration  16: 121773.381 ops/s
# Warmup Iteration  17: 123270.592 ops/s
# Warmup Iteration  18: 84502.713 ops/s
# Warmup Iteration  19: 120518.486 ops/s
# Warmup Iteration  20: 121985.848 ops/s
# Warmup Iteration  21: 123433.448 ops/s
# Warmup Iteration  22: 123451.879 ops/s
# Warmup Iteration  23: 123105.236 ops/s
# Warmup Iteration  24: 122379.409 ops/s
# Warmup Iteration  25: 122466.174 ops/s
# Warmup Iteration  26: 123293.405 ops/s
# Warmup Iteration  27: 122744.208 ops/s
# Warmup Iteration  28: 122327.777 ops/s
# Warmup Iteration  29: 122347.967 ops/s
# Warmup Iteration  30: 122666.805 ops/s
Iteration   1: 122491.344 ops/s
Iteration   2: 123050.982 ops/s
Iteration   3: 123236.341 ops/s
Iteration   4: 123235.518 ops/s
Iteration   5: 123843.137 ops/s
Iteration   6: 123594.098 ops/s
Iteration   7: 122893.103 ops/s
Iteration   8: 124112.720 ops/s
Iteration   9: 124031.627 ops/s
Iteration  10: 123467.919 ops/s
Iteration  11: 122701.326 ops/s
Iteration  12: 123485.195 ops/s
Iteration  13: 123905.789 ops/s
Iteration  14: 123837.153 ops/s
Iteration  15: 124127.089 ops/s
Iteration  16: 123262.861 ops/s
Iteration  17: 123172.356 ops/s
Iteration  18: 123052.997 ops/s
Iteration  19: 123571.101 ops/s
Iteration  20: 123775.443 ops/s
Iteration  21: 123331.630 ops/s
Iteration  22: 123033.247 ops/s
Iteration  23: 124044.099 ops/s
Iteration  24: 123752.810 ops/s
Iteration  25: 123521.193 ops/s
Iteration  26: 124075.567 ops/s
Iteration  27: 122958.491 ops/s
Iteration  28: 123108.725 ops/s
Iteration  29: 123220.747 ops/s
Iteration  30: 122599.348 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_131._Benchmark.benchmark_Cluster_131":
  123416.465 ±(99.9%) 312.155 ops/s [Average]
  (min, avg, max) = (122491.344, 123416.465, 124127.089), stdev = 467.219
  CI (99.9%): [123104.310, 123728.620] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_131._Benchmark.benchmark_Cluster_131  thrpt   30  123416.465 ± 312.155  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_132._Benchmark.benchmark_Cluster_132$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_132._Benchmark.benchmark_Cluster_132

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 84130.532 ops/s
# Warmup Iteration   2: 114719.399 ops/s
# Warmup Iteration   3: 194857.413 ops/s
# Warmup Iteration   4: 219761.282 ops/s
# Warmup Iteration   5: 220102.866 ops/s
# Warmup Iteration   6: 223466.858 ops/s
# Warmup Iteration   7: 221999.277 ops/s
# Warmup Iteration   8: 221771.982 ops/s
# Warmup Iteration   9: 164941.962 ops/s
# Warmup Iteration  10: 207571.382 ops/s
# Warmup Iteration  11: 223071.210 ops/s
# Warmup Iteration  12: 221833.660 ops/s
# Warmup Iteration  13: 221853.678 ops/s
# Warmup Iteration  14: 222973.708 ops/s
# Warmup Iteration  15: 221163.516 ops/s
# Warmup Iteration  16: 221160.218 ops/s
# Warmup Iteration  17: 221611.516 ops/s
# Warmup Iteration  18: 221051.500 ops/s
# Warmup Iteration  19: 222152.420 ops/s
# Warmup Iteration  20: 222011.151 ops/s
# Warmup Iteration  21: 221653.078 ops/s
# Warmup Iteration  22: 222686.994 ops/s
# Warmup Iteration  23: 221566.513 ops/s
# Warmup Iteration  24: 221649.068 ops/s
# Warmup Iteration  25: 221937.216 ops/s
# Warmup Iteration  26: 222656.317 ops/s
# Warmup Iteration  27: 223315.440 ops/s
# Warmup Iteration  28: 223179.997 ops/s
# Warmup Iteration  29: 223488.017 ops/s
# Warmup Iteration  30: 222934.286 ops/s
Iteration   1: 223364.248 ops/s
Iteration   2: 222048.308 ops/s
Iteration   3: 219404.650 ops/s
Iteration   4: 222576.628 ops/s
Iteration   5: 222361.912 ops/s
Iteration   6: 221438.805 ops/s
Iteration   7: 220639.786 ops/s
Iteration   8: 221434.708 ops/s
Iteration   9: 222216.541 ops/s
Iteration  10: 223797.237 ops/s
Iteration  11: 223780.887 ops/s
Iteration  12: 223665.061 ops/s
Iteration  13: 222535.609 ops/s
Iteration  14: 221121.012 ops/s
Iteration  15: 221061.854 ops/s
Iteration  16: 221524.647 ops/s
Iteration  17: 221259.072 ops/s
Iteration  18: 221163.253 ops/s
Iteration  19: 220139.318 ops/s
Iteration  20: 222123.374 ops/s
Iteration  21: 223309.523 ops/s
Iteration  22: 223947.938 ops/s
Iteration  23: 222469.664 ops/s
Iteration  24: 223573.227 ops/s
Iteration  25: 223755.451 ops/s
Iteration  26: 222497.678 ops/s
Iteration  27: 220858.232 ops/s
Iteration  28: 222473.985 ops/s
Iteration  29: 219427.468 ops/s
Iteration  30: 220409.915 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_132._Benchmark.benchmark_Cluster_132":
  222012.666 ±(99.9%) 876.086 ops/s [Average]
  (min, avg, max) = (219404.650, 222012.666, 223947.938), stdev = 1311.284
  CI (99.9%): [221136.581, 222888.752] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_132._Benchmark.benchmark_Cluster_132  thrpt   30  222012.666 ± 876.086  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_133._Benchmark.benchmark_Cluster_133$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_133._Benchmark.benchmark_Cluster_133

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60189.226 ops/s
# Warmup Iteration   2: 74119.966 ops/s
# Warmup Iteration   3: 75787.057 ops/s
# Warmup Iteration   4: 112162.423 ops/s
# Warmup Iteration   5: 127314.847 ops/s
# Warmup Iteration   6: 126140.552 ops/s
# Warmup Iteration   7: 124807.118 ops/s
# Warmup Iteration   8: 125953.772 ops/s
# Warmup Iteration   9: 126080.515 ops/s
# Warmup Iteration  10: 127142.262 ops/s
# Warmup Iteration  11: 126957.027 ops/s
# Warmup Iteration  12: 126232.122 ops/s
# Warmup Iteration  13: 127303.522 ops/s
# Warmup Iteration  14: 128217.689 ops/s
# Warmup Iteration  15: 91359.716 ops/s
# Warmup Iteration  16: 110791.403 ops/s
# Warmup Iteration  17: 129008.970 ops/s
# Warmup Iteration  18: 129612.009 ops/s
# Warmup Iteration  19: 129573.112 ops/s
# Warmup Iteration  20: 129875.145 ops/s
# Warmup Iteration  21: 129776.578 ops/s
# Warmup Iteration  22: 130064.760 ops/s
# Warmup Iteration  23: 128998.743 ops/s
# Warmup Iteration  24: 129873.910 ops/s
# Warmup Iteration  25: 129207.826 ops/s
# Warmup Iteration  26: 128755.802 ops/s
# Warmup Iteration  27: 130222.548 ops/s
# Warmup Iteration  28: 129004.519 ops/s
# Warmup Iteration  29: 127972.078 ops/s
# Warmup Iteration  30: 128092.251 ops/s
Iteration   1: 127409.526 ops/s
Iteration   2: 129469.714 ops/s
Iteration   3: 128100.265 ops/s
Iteration   4: 127916.114 ops/s
Iteration   5: 127145.257 ops/s
Iteration   6: 128316.377 ops/s
Iteration   7: 127471.271 ops/s
Iteration   8: 128471.993 ops/s
Iteration   9: 129007.647 ops/s
Iteration  10: 128492.234 ops/s
Iteration  11: 128649.889 ops/s
Iteration  12: 128784.729 ops/s
Iteration  13: 129457.125 ops/s
Iteration  14: 128200.421 ops/s
Iteration  15: 128769.098 ops/s
Iteration  16: 129812.752 ops/s
Iteration  17: 128730.541 ops/s
Iteration  18: 129511.892 ops/s
Iteration  19: 129453.193 ops/s
Iteration  20: 129665.094 ops/s
Iteration  21: 129739.174 ops/s
Iteration  22: 129005.915 ops/s
Iteration  23: 129231.294 ops/s
Iteration  24: 128791.172 ops/s
Iteration  25: 129572.960 ops/s
Iteration  26: 129878.704 ops/s
Iteration  27: 128719.172 ops/s
Iteration  28: 129715.772 ops/s
Iteration  29: 129135.594 ops/s
Iteration  30: 129060.370 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_133._Benchmark.benchmark_Cluster_133":
  128856.175 ±(99.9%) 495.730 ops/s [Average]
  (min, avg, max) = (127145.257, 128856.175, 129878.704), stdev = 741.985
  CI (99.9%): [128360.445, 129351.905] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_133._Benchmark.benchmark_Cluster_133  thrpt   30  128856.175 ± 495.730  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_134._Benchmark.benchmark_Cluster_134$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_134._Benchmark.benchmark_Cluster_134

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 109176.895 ops/s
# Warmup Iteration   2: 116739.957 ops/s
# Warmup Iteration   3: 117595.356 ops/s
# Warmup Iteration   4: 139149.015 ops/s
# Warmup Iteration   5: 164407.396 ops/s
# Warmup Iteration   6: 162592.981 ops/s
# Warmup Iteration   7: 162147.680 ops/s
# Warmup Iteration   8: 163513.066 ops/s
# Warmup Iteration   9: 162285.832 ops/s
# Warmup Iteration  10: 163347.810 ops/s
# Warmup Iteration  11: 162871.419 ops/s
# Warmup Iteration  12: 161787.243 ops/s
# Warmup Iteration  13: 162168.696 ops/s
# Warmup Iteration  14: 162535.707 ops/s
# Warmup Iteration  15: 163452.772 ops/s
# Warmup Iteration  16: 163801.862 ops/s
# Warmup Iteration  17: 170186.475 ops/s
# Warmup Iteration  18: 170235.936 ops/s
# Warmup Iteration  19: 145410.470 ops/s
# Warmup Iteration  20: 142814.668 ops/s
# Warmup Iteration  21: 172221.639 ops/s
# Warmup Iteration  22: 171489.812 ops/s
# Warmup Iteration  23: 170877.795 ops/s
# Warmup Iteration  24: 171240.930 ops/s
# Warmup Iteration  25: 171960.401 ops/s
# Warmup Iteration  26: 171777.198 ops/s
# Warmup Iteration  27: 172512.354 ops/s
# Warmup Iteration  28: 171613.081 ops/s
# Warmup Iteration  29: 171294.161 ops/s
# Warmup Iteration  30: 171518.608 ops/s
Iteration   1: 171947.549 ops/s
Iteration   2: 172571.504 ops/s
Iteration   3: 172269.802 ops/s
Iteration   4: 171618.183 ops/s
Iteration   5: 171635.842 ops/s
Iteration   6: 171701.805 ops/s
Iteration   7: 171719.318 ops/s
Iteration   8: 171864.440 ops/s
Iteration   9: 172226.441 ops/s
Iteration  10: 172265.075 ops/s
Iteration  11: 172469.206 ops/s
Iteration  12: 172515.678 ops/s
Iteration  13: 173124.746 ops/s
Iteration  14: 171254.973 ops/s
Iteration  15: 171337.153 ops/s
Iteration  16: 171317.708 ops/s
Iteration  17: 171362.688 ops/s
Iteration  18: 171946.843 ops/s
Iteration  19: 171355.693 ops/s
Iteration  20: 172352.024 ops/s
Iteration  21: 172159.700 ops/s
Iteration  22: 171627.181 ops/s
Iteration  23: 171611.436 ops/s
Iteration  24: 170423.657 ops/s
Iteration  25: 170247.373 ops/s
Iteration  26: 171072.877 ops/s
Iteration  27: 171188.081 ops/s
Iteration  28: 171813.364 ops/s
Iteration  29: 170645.200 ops/s
Iteration  30: 171097.490 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_134._Benchmark.benchmark_Cluster_134":
  171691.434 ±(99.9%) 436.290 ops/s [Average]
  (min, avg, max) = (170247.373, 171691.434, 173124.746), stdev = 653.019
  CI (99.9%): [171255.144, 172127.725] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_134._Benchmark.benchmark_Cluster_134  thrpt   30  171691.434 ± 436.290  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_135._Benchmark.benchmark_Cluster_135$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_135._Benchmark.benchmark_Cluster_135

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 44405.519 ops/s
# Warmup Iteration   2: 58615.377 ops/s
# Warmup Iteration   3: 58727.556 ops/s
# Warmup Iteration   4: 66067.987 ops/s
# Warmup Iteration   5: 83483.274 ops/s
# Warmup Iteration   6: 83508.284 ops/s
# Warmup Iteration   7: 82726.716 ops/s
# Warmup Iteration   8: 83023.364 ops/s
# Warmup Iteration   9: 82584.169 ops/s
# Warmup Iteration  10: 82866.192 ops/s
# Warmup Iteration  11: 82630.345 ops/s
# Warmup Iteration  12: 82769.833 ops/s
# Warmup Iteration  13: 82931.036 ops/s
# Warmup Iteration  14: 82859.741 ops/s
# Warmup Iteration  15: 83161.674 ops/s
# Warmup Iteration  16: 83465.315 ops/s
# Warmup Iteration  17: 82743.192 ops/s
# Warmup Iteration  18: 83139.705 ops/s
# Warmup Iteration  19: 66544.552 ops/s
# Warmup Iteration  20: 71857.815 ops/s
# Warmup Iteration  21: 83000.377 ops/s
# Warmup Iteration  22: 83217.061 ops/s
# Warmup Iteration  23: 82923.893 ops/s
# Warmup Iteration  24: 83537.626 ops/s
# Warmup Iteration  25: 83363.896 ops/s
# Warmup Iteration  26: 83092.202 ops/s
# Warmup Iteration  27: 83210.866 ops/s
# Warmup Iteration  28: 80369.924 ops/s
# Warmup Iteration  29: 81850.858 ops/s
# Warmup Iteration  30: 83692.361 ops/s
Iteration   1: 83189.986 ops/s
Iteration   2: 83563.689 ops/s
Iteration   3: 83024.488 ops/s
Iteration   4: 83480.131 ops/s
Iteration   5: 83276.696 ops/s
Iteration   6: 82265.911 ops/s
Iteration   7: 82728.703 ops/s
Iteration   8: 82645.701 ops/s
Iteration   9: 83197.489 ops/s
Iteration  10: 82790.811 ops/s
Iteration  11: 82745.858 ops/s
Iteration  12: 83322.975 ops/s
Iteration  13: 82474.940 ops/s
Iteration  14: 82763.379 ops/s
Iteration  15: 82725.987 ops/s
Iteration  16: 83021.977 ops/s
Iteration  17: 83067.367 ops/s
Iteration  18: 83512.779 ops/s
Iteration  19: 82765.795 ops/s
Iteration  20: 83677.406 ops/s
Iteration  21: 83207.248 ops/s
Iteration  22: 83336.096 ops/s
Iteration  23: 83184.846 ops/s
Iteration  24: 83522.259 ops/s
Iteration  25: 83250.168 ops/s
Iteration  26: 83383.488 ops/s
Iteration  27: 83565.970 ops/s
Iteration  28: 82992.217 ops/s
Iteration  29: 83178.090 ops/s
Iteration  30: 83419.616 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_135._Benchmark.benchmark_Cluster_135":
  83109.402 ±(99.9%) 238.039 ops/s [Average]
  (min, avg, max) = (82265.911, 83109.402, 83677.406), stdev = 356.286
  CI (99.9%): [82871.363, 83347.442] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_135._Benchmark.benchmark_Cluster_135  thrpt   30  83109.402 ± 238.039  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_136._Benchmark.benchmark_Cluster_136$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_136._Benchmark.benchmark_Cluster_136

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55421.349 ops/s
# Warmup Iteration   2: 83603.500 ops/s
# Warmup Iteration   3: 87597.791 ops/s
# Warmup Iteration   4: 139331.103 ops/s
# Warmup Iteration   5: 138872.343 ops/s
# Warmup Iteration   6: 137557.679 ops/s
# Warmup Iteration   7: 139268.247 ops/s
# Warmup Iteration   8: 138936.784 ops/s
# Warmup Iteration   9: 139654.100 ops/s
# Warmup Iteration  10: 139382.427 ops/s
# Warmup Iteration  11: 138930.308 ops/s
# Warmup Iteration  12: 139195.800 ops/s
# Warmup Iteration  13: 95470.189 ops/s
# Warmup Iteration  14: 135154.382 ops/s
# Warmup Iteration  15: 138948.808 ops/s
# Warmup Iteration  16: 139141.842 ops/s
# Warmup Iteration  17: 139054.507 ops/s
# Warmup Iteration  18: 139560.065 ops/s
# Warmup Iteration  19: 139481.823 ops/s
# Warmup Iteration  20: 139416.621 ops/s
# Warmup Iteration  21: 139082.801 ops/s
# Warmup Iteration  22: 138578.025 ops/s
# Warmup Iteration  23: 138938.852 ops/s
# Warmup Iteration  24: 138604.719 ops/s
# Warmup Iteration  25: 138416.216 ops/s
# Warmup Iteration  26: 138504.383 ops/s
# Warmup Iteration  27: 139435.324 ops/s
# Warmup Iteration  28: 139061.976 ops/s
# Warmup Iteration  29: 139438.694 ops/s
# Warmup Iteration  30: 139284.877 ops/s
Iteration   1: 138945.317 ops/s
Iteration   2: 139149.393 ops/s
Iteration   3: 138826.736 ops/s
Iteration   4: 139425.294 ops/s
Iteration   5: 139268.019 ops/s
Iteration   6: 139243.623 ops/s
Iteration   7: 139086.960 ops/s
Iteration   8: 139168.796 ops/s
Iteration   9: 139089.392 ops/s
Iteration  10: 138564.801 ops/s
Iteration  11: 138638.820 ops/s
Iteration  12: 139191.105 ops/s
Iteration  13: 139271.010 ops/s
Iteration  14: 138407.922 ops/s
Iteration  15: 139454.679 ops/s
Iteration  16: 139339.106 ops/s
Iteration  17: 137514.515 ops/s
Iteration  18: 138174.554 ops/s
Iteration  19: 138992.663 ops/s
Iteration  20: 139417.976 ops/s
Iteration  21: 139019.351 ops/s
Iteration  22: 139098.622 ops/s
Iteration  23: 139173.255 ops/s
Iteration  24: 139057.200 ops/s
Iteration  25: 137990.677 ops/s
Iteration  26: 139149.188 ops/s
Iteration  27: 138632.946 ops/s
Iteration  28: 138887.878 ops/s
Iteration  29: 138826.522 ops/s
Iteration  30: 139378.878 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_136._Benchmark.benchmark_Cluster_136":
  138946.173 ±(99.9%) 301.219 ops/s [Average]
  (min, avg, max) = (137514.515, 138946.173, 139454.679), stdev = 450.851
  CI (99.9%): [138644.954, 139247.392] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_136._Benchmark.benchmark_Cluster_136  thrpt   30  138946.173 ± 301.219  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_137._Benchmark.benchmark_Cluster_137$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_137._Benchmark.benchmark_Cluster_137

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 89654.581 ops/s
# Warmup Iteration   2: 103697.539 ops/s
# Warmup Iteration   3: 103410.250 ops/s
# Warmup Iteration   4: 126595.808 ops/s
# Warmup Iteration   5: 147583.160 ops/s
# Warmup Iteration   6: 147378.992 ops/s
# Warmup Iteration   7: 147293.147 ops/s
# Warmup Iteration   8: 147344.163 ops/s
# Warmup Iteration   9: 145384.086 ops/s
# Warmup Iteration  10: 147153.023 ops/s
# Warmup Iteration  11: 146536.590 ops/s
# Warmup Iteration  12: 147136.335 ops/s
# Warmup Iteration  13: 147351.500 ops/s
# Warmup Iteration  14: 147321.614 ops/s
# Warmup Iteration  15: 146843.345 ops/s
# Warmup Iteration  16: 145825.228 ops/s
# Warmup Iteration  17: 152533.507 ops/s
# Warmup Iteration  18: 129520.995 ops/s
# Warmup Iteration  19: 121426.374 ops/s
# Warmup Iteration  20: 153101.389 ops/s
# Warmup Iteration  21: 152847.011 ops/s
# Warmup Iteration  22: 152542.887 ops/s
# Warmup Iteration  23: 152718.660 ops/s
# Warmup Iteration  24: 152093.568 ops/s
# Warmup Iteration  25: 151300.854 ops/s
# Warmup Iteration  26: 152031.091 ops/s
# Warmup Iteration  27: 152415.594 ops/s
# Warmup Iteration  28: 152522.546 ops/s
# Warmup Iteration  29: 152094.489 ops/s
# Warmup Iteration  30: 152268.184 ops/s
Iteration   1: 152283.013 ops/s
Iteration   2: 152537.758 ops/s
Iteration   3: 152646.413 ops/s
Iteration   4: 152176.493 ops/s
Iteration   5: 151519.610 ops/s
Iteration   6: 151865.211 ops/s
Iteration   7: 152042.498 ops/s
Iteration   8: 152245.370 ops/s
Iteration   9: 152552.474 ops/s
Iteration  10: 152316.511 ops/s
Iteration  11: 152910.391 ops/s
Iteration  12: 152513.917 ops/s
Iteration  13: 152481.246 ops/s
Iteration  14: 153249.765 ops/s
Iteration  15: 152685.903 ops/s
Iteration  16: 152798.411 ops/s
Iteration  17: 153013.813 ops/s
Iteration  18: 152130.833 ops/s
Iteration  19: 151906.710 ops/s
Iteration  20: 152220.496 ops/s
Iteration  21: 151804.631 ops/s
Iteration  22: 151441.429 ops/s
Iteration  23: 152296.570 ops/s
Iteration  24: 151972.105 ops/s
Iteration  25: 152432.057 ops/s
Iteration  26: 152287.102 ops/s
Iteration  27: 152068.301 ops/s
Iteration  28: 153396.161 ops/s
Iteration  29: 153200.943 ops/s
Iteration  30: 152469.276 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_137._Benchmark.benchmark_Cluster_137":
  152382.180 ±(99.9%) 318.097 ops/s [Average]
  (min, avg, max) = (151441.429, 152382.180, 153396.161), stdev = 476.113
  CI (99.9%): [152064.083, 152700.277] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_137._Benchmark.benchmark_Cluster_137  thrpt   30  152382.180 ± 318.097  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_138._Benchmark.benchmark_Cluster_138$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_138._Benchmark.benchmark_Cluster_138

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 130573.442 ops/s
# Warmup Iteration   2: 146043.844 ops/s
# Warmup Iteration   3: 146590.485 ops/s
# Warmup Iteration   4: 175994.205 ops/s
# Warmup Iteration   5: 210375.769 ops/s
# Warmup Iteration   6: 209349.770 ops/s
# Warmup Iteration   7: 209218.458 ops/s
# Warmup Iteration   8: 207397.220 ops/s
# Warmup Iteration   9: 206057.902 ops/s
# Warmup Iteration  10: 208844.291 ops/s
# Warmup Iteration  11: 209075.748 ops/s
# Warmup Iteration  12: 209091.334 ops/s
# Warmup Iteration  13: 209112.313 ops/s
# Warmup Iteration  14: 208796.108 ops/s
# Warmup Iteration  15: 209809.555 ops/s
# Warmup Iteration  16: 207591.425 ops/s
# Warmup Iteration  17: 216183.814 ops/s
# Warmup Iteration  18: 212310.549 ops/s
# Warmup Iteration  19: 153099.371 ops/s
# Warmup Iteration  20: 214986.510 ops/s
# Warmup Iteration  21: 216545.311 ops/s
# Warmup Iteration  22: 216665.499 ops/s
# Warmup Iteration  23: 216839.894 ops/s
# Warmup Iteration  24: 215076.230 ops/s
# Warmup Iteration  25: 217387.039 ops/s
# Warmup Iteration  26: 216514.531 ops/s
# Warmup Iteration  27: 214586.450 ops/s
# Warmup Iteration  28: 216136.403 ops/s
# Warmup Iteration  29: 214116.822 ops/s
# Warmup Iteration  30: 215274.862 ops/s
Iteration   1: 216627.875 ops/s
Iteration   2: 214672.205 ops/s
Iteration   3: 216326.729 ops/s
Iteration   4: 216539.488 ops/s
Iteration   5: 215364.399 ops/s
Iteration   6: 214956.300 ops/s
Iteration   7: 214526.085 ops/s
Iteration   8: 216707.670 ops/s
Iteration   9: 216222.471 ops/s
Iteration  10: 215519.197 ops/s
Iteration  11: 216895.040 ops/s
Iteration  12: 217168.312 ops/s
Iteration  13: 217460.920 ops/s
Iteration  14: 216103.211 ops/s
Iteration  15: 216811.613 ops/s
Iteration  16: 213785.709 ops/s
Iteration  17: 214349.130 ops/s
Iteration  18: 216317.587 ops/s
Iteration  19: 215779.827 ops/s
Iteration  20: 215745.420 ops/s
Iteration  21: 215474.947 ops/s
Iteration  22: 216686.496 ops/s
Iteration  23: 216229.142 ops/s
Iteration  24: 216580.955 ops/s
Iteration  25: 217026.831 ops/s
Iteration  26: 217219.168 ops/s
Iteration  27: 216438.945 ops/s
Iteration  28: 216859.134 ops/s
Iteration  29: 216544.756 ops/s
Iteration  30: 217846.751 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_138._Benchmark.benchmark_Cluster_138":
  216159.544 ±(99.9%) 649.026 ops/s [Average]
  (min, avg, max) = (213785.709, 216159.544, 217846.751), stdev = 971.432
  CI (99.9%): [215510.518, 216808.570] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_138._Benchmark.benchmark_Cluster_138  thrpt   30  216159.544 ± 649.026  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_139._Benchmark.benchmark_Cluster_139$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_139._Benchmark.benchmark_Cluster_139

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 117216.528 ops/s
# Warmup Iteration   2: 126230.484 ops/s
# Warmup Iteration   3: 125919.327 ops/s
# Warmup Iteration   4: 127036.102 ops/s
# Warmup Iteration   5: 152728.874 ops/s
# Warmup Iteration   6: 167454.750 ops/s
# Warmup Iteration   7: 166653.305 ops/s
# Warmup Iteration   8: 166622.678 ops/s
# Warmup Iteration   9: 166991.323 ops/s
# Warmup Iteration  10: 167584.937 ops/s
# Warmup Iteration  11: 167172.864 ops/s
# Warmup Iteration  12: 167129.161 ops/s
# Warmup Iteration  13: 166892.508 ops/s
# Warmup Iteration  14: 166047.819 ops/s
# Warmup Iteration  15: 167567.231 ops/s
# Warmup Iteration  16: 167702.314 ops/s
# Warmup Iteration  17: 175628.190 ops/s
# Warmup Iteration  18: 175294.973 ops/s
# Warmup Iteration  19: 175824.481 ops/s
# Warmup Iteration  20: 175560.380 ops/s
# Warmup Iteration  21: 174752.641 ops/s
# Warmup Iteration  22: 175884.270 ops/s
# Warmup Iteration  23: 175828.408 ops/s
# Warmup Iteration  24: 141384.286 ops/s
# Warmup Iteration  25: 153080.626 ops/s
# Warmup Iteration  26: 176313.877 ops/s
# Warmup Iteration  27: 175814.396 ops/s
# Warmup Iteration  28: 175397.343 ops/s
# Warmup Iteration  29: 176110.194 ops/s
# Warmup Iteration  30: 176193.206 ops/s
Iteration   1: 175376.937 ops/s
Iteration   2: 174001.949 ops/s
Iteration   3: 174586.396 ops/s
Iteration   4: 174709.525 ops/s
Iteration   5: 172466.030 ops/s
Iteration   6: 174623.666 ops/s
Iteration   7: 174668.221 ops/s
Iteration   8: 174634.438 ops/s
Iteration   9: 175704.632 ops/s
Iteration  10: 175955.764 ops/s
Iteration  11: 176188.951 ops/s
Iteration  12: 176071.148 ops/s
Iteration  13: 174472.769 ops/s
Iteration  14: 174827.914 ops/s
Iteration  15: 174792.261 ops/s
Iteration  16: 175046.335 ops/s
Iteration  17: 175669.594 ops/s
Iteration  18: 175294.458 ops/s
Iteration  19: 174813.110 ops/s
Iteration  20: 175612.901 ops/s
Iteration  21: 174255.883 ops/s
Iteration  22: 175442.168 ops/s
Iteration  23: 173772.703 ops/s
Iteration  24: 174902.603 ops/s
Iteration  25: 174674.213 ops/s
Iteration  26: 174984.053 ops/s
Iteration  27: 176085.768 ops/s
Iteration  28: 176021.691 ops/s
Iteration  29: 176020.481 ops/s
Iteration  30: 175955.405 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_139._Benchmark.benchmark_Cluster_139":
  175054.399 ±(99.9%) 553.851 ops/s [Average]
  (min, avg, max) = (172466.030, 175054.399, 176188.951), stdev = 828.979
  CI (99.9%): [174500.547, 175608.250] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_139._Benchmark.benchmark_Cluster_139  thrpt   30  175054.399 ± 553.851  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_14._Benchmark.benchmark_Cluster_14$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_14._Benchmark.benchmark_Cluster_14

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 103786.934 ops/s
# Warmup Iteration   2: 108279.168 ops/s
# Warmup Iteration   3: 110751.521 ops/s
# Warmup Iteration   4: 110454.094 ops/s
# Warmup Iteration   5: 110515.718 ops/s
# Warmup Iteration   6: 132656.506 ops/s
# Warmup Iteration   7: 133805.188 ops/s
# Warmup Iteration   8: 134014.042 ops/s
# Warmup Iteration   9: 134408.608 ops/s
# Warmup Iteration  10: 133692.349 ops/s
# Warmup Iteration  11: 134906.109 ops/s
# Warmup Iteration  12: 135370.310 ops/s
# Warmup Iteration  13: 134974.770 ops/s
# Warmup Iteration  14: 133540.960 ops/s
# Warmup Iteration  15: 135477.453 ops/s
# Warmup Iteration  16: 135470.005 ops/s
# Warmup Iteration  17: 142220.040 ops/s
# Warmup Iteration  18: 142014.160 ops/s
# Warmup Iteration  19: 141199.314 ops/s
# Warmup Iteration  20: 141798.933 ops/s
# Warmup Iteration  21: 141582.785 ops/s
# Warmup Iteration  22: 141863.484 ops/s
# Warmup Iteration  23: 141384.673 ops/s
# Warmup Iteration  24: 141627.376 ops/s
# Warmup Iteration  25: 140982.772 ops/s
# Warmup Iteration  26: 141599.690 ops/s
# Warmup Iteration  27: 141598.643 ops/s
# Warmup Iteration  28: 141384.459 ops/s
# Warmup Iteration  29: 142326.452 ops/s
# Warmup Iteration  30: 115784.267 ops/s
Iteration   1: 114639.233 ops/s
Iteration   2: 133759.765 ops/s
Iteration   3: 140800.491 ops/s
Iteration   4: 142167.478 ops/s
Iteration   5: 140843.139 ops/s
Iteration   6: 140946.179 ops/s
Iteration   7: 141372.131 ops/s
Iteration   8: 141461.413 ops/s
Iteration   9: 142306.744 ops/s
Iteration  10: 141769.727 ops/s
Iteration  11: 141244.783 ops/s
Iteration  12: 141992.226 ops/s
Iteration  13: 141536.900 ops/s
Iteration  14: 141247.754 ops/s
Iteration  15: 140392.393 ops/s
Iteration  16: 140233.017 ops/s
Iteration  17: 141497.579 ops/s
Iteration  18: 142094.981 ops/s
Iteration  19: 142392.148 ops/s
Iteration  20: 142442.157 ops/s
Iteration  21: 142463.856 ops/s
Iteration  22: 142254.962 ops/s
Iteration  23: 141433.449 ops/s
Iteration  24: 140497.712 ops/s
Iteration  25: 140762.193 ops/s
Iteration  26: 140180.314 ops/s
Iteration  27: 140305.420 ops/s
Iteration  28: 140342.980 ops/s
Iteration  29: 140462.046 ops/s
Iteration  30: 140849.681 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_14._Benchmark.benchmark_Cluster_14":
  140156.428 ±(99.9%) 3383.993 ops/s [Average]
  (min, avg, max) = (114639.233, 140156.428, 142463.856), stdev = 5065.001
  CI (99.9%): [136772.436, 143540.421] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_14._Benchmark.benchmark_Cluster_14  thrpt   30  140156.428 ± 3383.993  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_140._Benchmark.benchmark_Cluster_140$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_140._Benchmark.benchmark_Cluster_140

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86105.518 ops/s
# Warmup Iteration   2: 121053.979 ops/s
# Warmup Iteration   3: 164912.020 ops/s
# Warmup Iteration   4: 210231.471 ops/s
# Warmup Iteration   5: 210535.066 ops/s
# Warmup Iteration   6: 209152.535 ops/s
# Warmup Iteration   7: 208024.061 ops/s
# Warmup Iteration   8: 209082.480 ops/s
# Warmup Iteration   9: 209437.175 ops/s
# Warmup Iteration  10: 210623.092 ops/s
# Warmup Iteration  11: 141645.128 ops/s
# Warmup Iteration  12: 208055.751 ops/s
# Warmup Iteration  13: 208303.646 ops/s
# Warmup Iteration  14: 210894.809 ops/s
# Warmup Iteration  15: 209869.561 ops/s
# Warmup Iteration  16: 208987.802 ops/s
# Warmup Iteration  17: 209947.882 ops/s
# Warmup Iteration  18: 209576.566 ops/s
# Warmup Iteration  19: 211156.684 ops/s
# Warmup Iteration  20: 209056.556 ops/s
# Warmup Iteration  21: 209927.621 ops/s
# Warmup Iteration  22: 209641.836 ops/s
# Warmup Iteration  23: 209976.059 ops/s
# Warmup Iteration  24: 210475.937 ops/s
# Warmup Iteration  25: 209774.554 ops/s
# Warmup Iteration  26: 209739.471 ops/s
# Warmup Iteration  27: 209885.070 ops/s
# Warmup Iteration  28: 209068.496 ops/s
# Warmup Iteration  29: 208996.590 ops/s
# Warmup Iteration  30: 209860.221 ops/s
Iteration   1: 210639.192 ops/s
Iteration   2: 210556.674 ops/s
Iteration   3: 210961.219 ops/s
Iteration   4: 210769.567 ops/s
Iteration   5: 210901.901 ops/s
Iteration   6: 211156.635 ops/s
Iteration   7: 211165.204 ops/s
Iteration   8: 210968.747 ops/s
Iteration   9: 211453.991 ops/s
Iteration  10: 211376.427 ops/s
Iteration  11: 211032.437 ops/s
Iteration  12: 210721.562 ops/s
Iteration  13: 211265.822 ops/s
Iteration  14: 211243.712 ops/s
Iteration  15: 211567.730 ops/s
Iteration  16: 210996.978 ops/s
Iteration  17: 211168.969 ops/s
Iteration  18: 210503.722 ops/s
Iteration  19: 209507.273 ops/s
Iteration  20: 210879.077 ops/s
Iteration  21: 211234.782 ops/s
Iteration  22: 210352.031 ops/s
Iteration  23: 210677.171 ops/s
Iteration  24: 210537.651 ops/s
Iteration  25: 210699.297 ops/s
Iteration  26: 210899.176 ops/s
Iteration  27: 211128.575 ops/s
Iteration  28: 211428.547 ops/s
Iteration  29: 211177.219 ops/s
Iteration  30: 210557.980 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_140._Benchmark.benchmark_Cluster_140":
  210917.642 ±(99.9%) 276.231 ops/s [Average]
  (min, avg, max) = (209507.273, 210917.642, 211567.730), stdev = 413.449
  CI (99.9%): [210641.412, 211193.873] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_140._Benchmark.benchmark_Cluster_140  thrpt   30  210917.642 ± 276.231  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_141._Benchmark.benchmark_Cluster_141$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_141._Benchmark.benchmark_Cluster_141

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74329.387 ops/s
# Warmup Iteration   2: 109718.446 ops/s
# Warmup Iteration   3: 155116.279 ops/s
# Warmup Iteration   4: 195078.608 ops/s
# Warmup Iteration   5: 193172.347 ops/s
# Warmup Iteration   6: 196312.393 ops/s
# Warmup Iteration   7: 196554.538 ops/s
# Warmup Iteration   8: 196729.306 ops/s
# Warmup Iteration   9: 196481.032 ops/s
# Warmup Iteration  10: 182371.511 ops/s
# Warmup Iteration  11: 148672.103 ops/s
# Warmup Iteration  12: 195891.335 ops/s
# Warmup Iteration  13: 196884.154 ops/s
# Warmup Iteration  14: 196652.289 ops/s
# Warmup Iteration  15: 197377.468 ops/s
# Warmup Iteration  16: 197033.091 ops/s
# Warmup Iteration  17: 196380.555 ops/s
# Warmup Iteration  18: 197760.116 ops/s
# Warmup Iteration  19: 197177.072 ops/s
# Warmup Iteration  20: 196956.315 ops/s
# Warmup Iteration  21: 196660.722 ops/s
# Warmup Iteration  22: 197015.143 ops/s
# Warmup Iteration  23: 196449.376 ops/s
# Warmup Iteration  24: 195035.182 ops/s
# Warmup Iteration  25: 195172.109 ops/s
# Warmup Iteration  26: 197047.242 ops/s
# Warmup Iteration  27: 194533.398 ops/s
# Warmup Iteration  28: 196851.067 ops/s
# Warmup Iteration  29: 197400.376 ops/s
# Warmup Iteration  30: 196519.963 ops/s
Iteration   1: 194629.774 ops/s
Iteration   2: 194794.238 ops/s
Iteration   3: 196809.497 ops/s
Iteration   4: 194794.358 ops/s
Iteration   5: 196119.554 ops/s
Iteration   6: 197280.832 ops/s
Iteration   7: 196894.661 ops/s
Iteration   8: 195696.027 ops/s
Iteration   9: 194282.686 ops/s
Iteration  10: 194550.570 ops/s
Iteration  11: 195639.598 ops/s
Iteration  12: 196137.668 ops/s
Iteration  13: 193827.852 ops/s
Iteration  14: 194498.214 ops/s
Iteration  15: 193592.581 ops/s
Iteration  16: 195502.334 ops/s
Iteration  17: 196787.909 ops/s
Iteration  18: 195735.482 ops/s
Iteration  19: 194465.767 ops/s
Iteration  20: 195183.247 ops/s
Iteration  21: 195748.603 ops/s
Iteration  22: 195682.643 ops/s
Iteration  23: 196334.804 ops/s
Iteration  24: 195486.469 ops/s
Iteration  25: 193176.835 ops/s
Iteration  26: 194276.277 ops/s
Iteration  27: 194309.697 ops/s
Iteration  28: 194599.847 ops/s
Iteration  29: 195897.744 ops/s
Iteration  30: 195314.659 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_141._Benchmark.benchmark_Cluster_141":
  195268.348 ±(99.9%) 686.687 ops/s [Average]
  (min, avg, max) = (193176.835, 195268.348, 197280.832), stdev = 1027.800
  CI (99.9%): [194581.661, 195955.034] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_141._Benchmark.benchmark_Cluster_141  thrpt   30  195268.348 ± 686.687  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_142._Benchmark.benchmark_Cluster_142$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_142._Benchmark.benchmark_Cluster_142

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73009.996 ops/s
# Warmup Iteration   2: 101975.150 ops/s
# Warmup Iteration   3: 167423.951 ops/s
# Warmup Iteration   4: 195364.576 ops/s
# Warmup Iteration   5: 193924.445 ops/s
# Warmup Iteration   6: 195502.418 ops/s
# Warmup Iteration   7: 195547.565 ops/s
# Warmup Iteration   8: 194711.059 ops/s
# Warmup Iteration   9: 166890.215 ops/s
# Warmup Iteration  10: 162144.493 ops/s
# Warmup Iteration  11: 195709.619 ops/s
# Warmup Iteration  12: 196482.428 ops/s
# Warmup Iteration  13: 196589.569 ops/s
# Warmup Iteration  14: 196672.817 ops/s
# Warmup Iteration  15: 195119.699 ops/s
# Warmup Iteration  16: 196035.411 ops/s
# Warmup Iteration  17: 195925.675 ops/s
# Warmup Iteration  18: 196330.527 ops/s
# Warmup Iteration  19: 197209.976 ops/s
# Warmup Iteration  20: 196710.091 ops/s
# Warmup Iteration  21: 196637.457 ops/s
# Warmup Iteration  22: 196087.748 ops/s
# Warmup Iteration  23: 195859.005 ops/s
# Warmup Iteration  24: 195778.019 ops/s
# Warmup Iteration  25: 196211.705 ops/s
# Warmup Iteration  26: 195360.600 ops/s
# Warmup Iteration  27: 195553.772 ops/s
# Warmup Iteration  28: 194182.415 ops/s
# Warmup Iteration  29: 194891.527 ops/s
# Warmup Iteration  30: 195826.805 ops/s
Iteration   1: 195672.041 ops/s
Iteration   2: 195588.170 ops/s
Iteration   3: 196161.360 ops/s
Iteration   4: 196211.463 ops/s
Iteration   5: 196360.594 ops/s
Iteration   6: 196579.662 ops/s
Iteration   7: 196289.846 ops/s
Iteration   8: 196746.422 ops/s
Iteration   9: 195355.812 ops/s
Iteration  10: 197610.267 ops/s
Iteration  11: 196803.731 ops/s
Iteration  12: 197127.027 ops/s
Iteration  13: 197687.709 ops/s
Iteration  14: 197220.642 ops/s
Iteration  15: 197455.547 ops/s
Iteration  16: 197279.336 ops/s
Iteration  17: 196130.015 ops/s
Iteration  18: 195965.517 ops/s
Iteration  19: 195771.875 ops/s
Iteration  20: 195000.757 ops/s
Iteration  21: 195558.564 ops/s
Iteration  22: 194553.170 ops/s
Iteration  23: 195855.084 ops/s
Iteration  24: 196933.691 ops/s
Iteration  25: 196392.131 ops/s
Iteration  26: 196693.594 ops/s
Iteration  27: 196727.209 ops/s
Iteration  28: 196851.624 ops/s
Iteration  29: 195553.713 ops/s
Iteration  30: 196381.055 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_142._Benchmark.benchmark_Cluster_142":
  196350.588 ±(99.9%) 515.557 ops/s [Average]
  (min, avg, max) = (194553.170, 196350.588, 197687.709), stdev = 771.662
  CI (99.9%): [195835.030, 196866.145] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_142._Benchmark.benchmark_Cluster_142  thrpt   30  196350.588 ± 515.557  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_143._Benchmark.benchmark_Cluster_143$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_143._Benchmark.benchmark_Cluster_143

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 108349.730 ops/s
# Warmup Iteration   2: 128876.955 ops/s
# Warmup Iteration   3: 129098.868 ops/s
# Warmup Iteration   4: 154776.572 ops/s
# Warmup Iteration   5: 183320.088 ops/s
# Warmup Iteration   6: 183899.888 ops/s
# Warmup Iteration   7: 181882.248 ops/s
# Warmup Iteration   8: 183111.292 ops/s
# Warmup Iteration   9: 180709.214 ops/s
# Warmup Iteration  10: 183215.436 ops/s
# Warmup Iteration  11: 183640.903 ops/s
# Warmup Iteration  12: 183599.670 ops/s
# Warmup Iteration  13: 183407.418 ops/s
# Warmup Iteration  14: 183335.938 ops/s
# Warmup Iteration  15: 183260.414 ops/s
# Warmup Iteration  16: 182220.428 ops/s
# Warmup Iteration  17: 189057.816 ops/s
# Warmup Iteration  18: 167910.653 ops/s
# Warmup Iteration  19: 149005.692 ops/s
# Warmup Iteration  20: 190661.411 ops/s
# Warmup Iteration  21: 190578.745 ops/s
# Warmup Iteration  22: 190590.343 ops/s
# Warmup Iteration  23: 190810.278 ops/s
# Warmup Iteration  24: 190131.153 ops/s
# Warmup Iteration  25: 190207.140 ops/s
# Warmup Iteration  26: 190319.908 ops/s
# Warmup Iteration  27: 190958.834 ops/s
# Warmup Iteration  28: 190102.306 ops/s
# Warmup Iteration  29: 190000.722 ops/s
# Warmup Iteration  30: 190656.874 ops/s
Iteration   1: 191436.836 ops/s
Iteration   2: 189564.195 ops/s
Iteration   3: 191166.084 ops/s
Iteration   4: 190978.557 ops/s
Iteration   5: 190213.368 ops/s
Iteration   6: 190725.500 ops/s
Iteration   7: 189899.250 ops/s
Iteration   8: 190538.975 ops/s
Iteration   9: 191329.083 ops/s
Iteration  10: 189262.097 ops/s
Iteration  11: 190257.503 ops/s
Iteration  12: 191082.351 ops/s
Iteration  13: 189833.245 ops/s
Iteration  14: 188031.914 ops/s
Iteration  15: 188136.100 ops/s
Iteration  16: 188876.512 ops/s
Iteration  17: 188497.112 ops/s
Iteration  18: 188564.246 ops/s
Iteration  19: 190223.003 ops/s
Iteration  20: 191587.844 ops/s
Iteration  21: 189694.088 ops/s
Iteration  22: 188650.971 ops/s
Iteration  23: 187811.948 ops/s
Iteration  24: 188558.621 ops/s
Iteration  25: 190071.730 ops/s
Iteration  26: 189363.776 ops/s
Iteration  27: 189752.434 ops/s
Iteration  28: 190654.189 ops/s
Iteration  29: 190438.599 ops/s
Iteration  30: 190046.506 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_143._Benchmark.benchmark_Cluster_143":
  189841.555 ±(99.9%) 719.588 ops/s [Average]
  (min, avg, max) = (187811.948, 189841.555, 191587.844), stdev = 1077.045
  CI (99.9%): [189121.967, 190561.142] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_143._Benchmark.benchmark_Cluster_143  thrpt   30  189841.555 ± 719.588  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_144._Benchmark.benchmark_Cluster_144$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_144._Benchmark.benchmark_Cluster_144

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48302.054 ops/s
# Warmup Iteration   2: 67837.784 ops/s
# Warmup Iteration   3: 150128.221 ops/s
# Warmup Iteration   4: 149781.697 ops/s
# Warmup Iteration   5: 151247.059 ops/s
# Warmup Iteration   6: 151128.161 ops/s
# Warmup Iteration   7: 117155.510 ops/s
# Warmup Iteration   8: 138091.196 ops/s
# Warmup Iteration   9: 151318.569 ops/s
# Warmup Iteration  10: 151837.892 ops/s
# Warmup Iteration  11: 152193.381 ops/s
# Warmup Iteration  12: 152032.799 ops/s
# Warmup Iteration  13: 150927.602 ops/s
# Warmup Iteration  14: 150602.994 ops/s
# Warmup Iteration  15: 150722.584 ops/s
# Warmup Iteration  16: 151879.032 ops/s
# Warmup Iteration  17: 152422.977 ops/s
# Warmup Iteration  18: 151450.137 ops/s
# Warmup Iteration  19: 151824.976 ops/s
# Warmup Iteration  20: 152454.620 ops/s
# Warmup Iteration  21: 153330.799 ops/s
# Warmup Iteration  22: 152864.791 ops/s
# Warmup Iteration  23: 154198.284 ops/s
# Warmup Iteration  24: 153935.878 ops/s
# Warmup Iteration  25: 153612.598 ops/s
# Warmup Iteration  26: 153630.188 ops/s
# Warmup Iteration  27: 153755.216 ops/s
# Warmup Iteration  28: 153482.072 ops/s
# Warmup Iteration  29: 152451.062 ops/s
# Warmup Iteration  30: 154101.820 ops/s
Iteration   1: 153743.519 ops/s
Iteration   2: 153822.027 ops/s
Iteration   3: 154311.059 ops/s
Iteration   4: 152166.277 ops/s
Iteration   5: 152402.936 ops/s
Iteration   6: 152992.329 ops/s
Iteration   7: 152319.542 ops/s
Iteration   8: 152980.074 ops/s
Iteration   9: 152213.453 ops/s
Iteration  10: 151758.321 ops/s
Iteration  11: 153291.717 ops/s
Iteration  12: 152233.070 ops/s
Iteration  13: 151582.052 ops/s
Iteration  14: 151834.447 ops/s
Iteration  15: 151641.928 ops/s
Iteration  16: 153200.158 ops/s
Iteration  17: 153537.286 ops/s
Iteration  18: 151815.930 ops/s
Iteration  19: 152777.634 ops/s
Iteration  20: 152960.788 ops/s
Iteration  21: 153574.413 ops/s
Iteration  22: 153549.815 ops/s
Iteration  23: 153207.142 ops/s
Iteration  24: 153697.095 ops/s
Iteration  25: 151720.314 ops/s
Iteration  26: 151845.804 ops/s
Iteration  27: 152345.239 ops/s
Iteration  28: 153038.767 ops/s
Iteration  29: 153147.455 ops/s
Iteration  30: 151739.983 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_144._Benchmark.benchmark_Cluster_144":
  152715.019 ±(99.9%) 526.737 ops/s [Average]
  (min, avg, max) = (151582.052, 152715.019, 154311.059), stdev = 788.395
  CI (99.9%): [152188.282, 153241.756] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_144._Benchmark.benchmark_Cluster_144  thrpt   30  152715.019 ± 526.737  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_145._Benchmark.benchmark_Cluster_145$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_145._Benchmark.benchmark_Cluster_145

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48974.136 ops/s
# Warmup Iteration   2: 68837.480 ops/s
# Warmup Iteration   3: 101649.570 ops/s
# Warmup Iteration   4: 128245.439 ops/s
# Warmup Iteration   5: 126565.777 ops/s
# Warmup Iteration   6: 127913.300 ops/s
# Warmup Iteration   7: 128718.322 ops/s
# Warmup Iteration   8: 127800.420 ops/s
# Warmup Iteration   9: 128290.577 ops/s
# Warmup Iteration  10: 93704.672 ops/s
# Warmup Iteration  11: 118614.049 ops/s
# Warmup Iteration  12: 128431.736 ops/s
# Warmup Iteration  13: 127741.352 ops/s
# Warmup Iteration  14: 128023.822 ops/s
# Warmup Iteration  15: 128450.787 ops/s
# Warmup Iteration  16: 128286.537 ops/s
# Warmup Iteration  17: 130058.467 ops/s
# Warmup Iteration  18: 130843.240 ops/s
# Warmup Iteration  19: 131641.527 ops/s
# Warmup Iteration  20: 130839.500 ops/s
# Warmup Iteration  21: 130259.296 ops/s
# Warmup Iteration  22: 130003.336 ops/s
# Warmup Iteration  23: 130160.973 ops/s
# Warmup Iteration  24: 131159.331 ops/s
# Warmup Iteration  25: 130919.542 ops/s
# Warmup Iteration  26: 129618.766 ops/s
# Warmup Iteration  27: 130811.055 ops/s
# Warmup Iteration  28: 129192.260 ops/s
# Warmup Iteration  29: 129974.951 ops/s
# Warmup Iteration  30: 130772.329 ops/s
Iteration   1: 130425.172 ops/s
Iteration   2: 130186.115 ops/s
Iteration   3: 130483.081 ops/s
Iteration   4: 130062.505 ops/s
Iteration   5: 130086.846 ops/s
Iteration   6: 130650.778 ops/s
Iteration   7: 129607.730 ops/s
Iteration   8: 130607.206 ops/s
Iteration   9: 129840.004 ops/s
Iteration  10: 129053.599 ops/s
Iteration  11: 129825.370 ops/s
Iteration  12: 130722.738 ops/s
Iteration  13: 130509.564 ops/s
Iteration  14: 129600.178 ops/s
Iteration  15: 129449.690 ops/s
Iteration  16: 129766.368 ops/s
Iteration  17: 130054.046 ops/s
Iteration  18: 130368.862 ops/s
Iteration  19: 130261.533 ops/s
Iteration  20: 130188.285 ops/s
Iteration  21: 129006.511 ops/s
Iteration  22: 130010.836 ops/s
Iteration  23: 130376.687 ops/s
Iteration  24: 129919.187 ops/s
Iteration  25: 129350.021 ops/s
Iteration  26: 129515.371 ops/s
Iteration  27: 130645.144 ops/s
Iteration  28: 129746.026 ops/s
Iteration  29: 128997.589 ops/s
Iteration  30: 130167.942 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_145._Benchmark.benchmark_Cluster_145":
  129982.833 ±(99.9%) 332.856 ops/s [Average]
  (min, avg, max) = (128997.589, 129982.833, 130722.738), stdev = 498.204
  CI (99.9%): [129649.976, 130315.689] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_145._Benchmark.benchmark_Cluster_145  thrpt   30  129982.833 ± 332.856  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_146._Benchmark.benchmark_Cluster_146$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_146._Benchmark.benchmark_Cluster_146

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71896.903 ops/s
# Warmup Iteration   2: 98168.460 ops/s
# Warmup Iteration   3: 129776.186 ops/s
# Warmup Iteration   4: 174191.558 ops/s
# Warmup Iteration   5: 174528.691 ops/s
# Warmup Iteration   6: 174177.418 ops/s
# Warmup Iteration   7: 174481.534 ops/s
# Warmup Iteration   8: 174455.186 ops/s
# Warmup Iteration   9: 174360.371 ops/s
# Warmup Iteration  10: 175468.446 ops/s
# Warmup Iteration  11: 123965.956 ops/s
# Warmup Iteration  12: 166597.990 ops/s
# Warmup Iteration  13: 173896.054 ops/s
# Warmup Iteration  14: 173262.336 ops/s
# Warmup Iteration  15: 175133.693 ops/s
# Warmup Iteration  16: 176208.604 ops/s
# Warmup Iteration  17: 178236.398 ops/s
# Warmup Iteration  18: 177297.293 ops/s
# Warmup Iteration  19: 177972.269 ops/s
# Warmup Iteration  20: 176514.270 ops/s
# Warmup Iteration  21: 177783.229 ops/s
# Warmup Iteration  22: 177311.841 ops/s
# Warmup Iteration  23: 177088.827 ops/s
# Warmup Iteration  24: 177044.863 ops/s
# Warmup Iteration  25: 177520.611 ops/s
# Warmup Iteration  26: 176795.810 ops/s
# Warmup Iteration  27: 177881.231 ops/s
# Warmup Iteration  28: 177260.684 ops/s
# Warmup Iteration  29: 176472.625 ops/s
# Warmup Iteration  30: 177138.122 ops/s
Iteration   1: 177165.141 ops/s
Iteration   2: 175670.635 ops/s
Iteration   3: 178529.847 ops/s
Iteration   4: 175028.322 ops/s
Iteration   5: 178084.099 ops/s
Iteration   6: 177380.113 ops/s
Iteration   7: 177470.326 ops/s
Iteration   8: 178354.061 ops/s
Iteration   9: 177484.271 ops/s
Iteration  10: 176821.069 ops/s
Iteration  11: 177159.815 ops/s
Iteration  12: 177286.635 ops/s
Iteration  13: 176932.208 ops/s
Iteration  14: 177370.208 ops/s
Iteration  15: 176375.598 ops/s
Iteration  16: 177711.204 ops/s
Iteration  17: 177231.421 ops/s
Iteration  18: 177245.495 ops/s
Iteration  19: 177901.133 ops/s
Iteration  20: 178761.405 ops/s
Iteration  21: 176153.616 ops/s
Iteration  22: 175706.052 ops/s
Iteration  23: 177894.069 ops/s
Iteration  24: 176827.981 ops/s
Iteration  25: 176218.704 ops/s
Iteration  26: 176400.005 ops/s
Iteration  27: 175441.384 ops/s
Iteration  28: 176816.238 ops/s
Iteration  29: 178265.363 ops/s
Iteration  30: 177490.298 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_146._Benchmark.benchmark_Cluster_146":
  177105.890 ±(99.9%) 620.266 ops/s [Average]
  (min, avg, max) = (175028.322, 177105.890, 178761.405), stdev = 928.386
  CI (99.9%): [176485.624, 177726.157] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_146._Benchmark.benchmark_Cluster_146  thrpt   30  177105.890 ± 620.266  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_147._Benchmark.benchmark_Cluster_147$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_147._Benchmark.benchmark_Cluster_147

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69537.026 ops/s
# Warmup Iteration   2: 90857.922 ops/s
# Warmup Iteration   3: 137242.477 ops/s
# Warmup Iteration   4: 165136.363 ops/s
# Warmup Iteration   5: 163440.047 ops/s
# Warmup Iteration   6: 166085.185 ops/s
# Warmup Iteration   7: 166161.779 ops/s
# Warmup Iteration   8: 165740.044 ops/s
# Warmup Iteration   9: 165525.472 ops/s
# Warmup Iteration  10: 119663.063 ops/s
# Warmup Iteration  11: 158989.321 ops/s
# Warmup Iteration  12: 166276.741 ops/s
# Warmup Iteration  13: 165342.287 ops/s
# Warmup Iteration  14: 165231.382 ops/s
# Warmup Iteration  15: 165006.212 ops/s
# Warmup Iteration  16: 165057.144 ops/s
# Warmup Iteration  17: 165996.100 ops/s
# Warmup Iteration  18: 166231.199 ops/s
# Warmup Iteration  19: 167112.864 ops/s
# Warmup Iteration  20: 166901.696 ops/s
# Warmup Iteration  21: 166694.574 ops/s
# Warmup Iteration  22: 165895.762 ops/s
# Warmup Iteration  23: 167188.729 ops/s
# Warmup Iteration  24: 167058.224 ops/s
# Warmup Iteration  25: 166567.504 ops/s
# Warmup Iteration  26: 167033.943 ops/s
# Warmup Iteration  27: 167166.103 ops/s
# Warmup Iteration  28: 166853.940 ops/s
# Warmup Iteration  29: 166902.974 ops/s
# Warmup Iteration  30: 166602.690 ops/s
Iteration   1: 166576.633 ops/s
Iteration   2: 166854.308 ops/s
Iteration   3: 166920.040 ops/s
Iteration   4: 167051.714 ops/s
Iteration   5: 166820.257 ops/s
Iteration   6: 167007.212 ops/s
Iteration   7: 166619.470 ops/s
Iteration   8: 166944.963 ops/s
Iteration   9: 166926.395 ops/s
Iteration  10: 166690.087 ops/s
Iteration  11: 166165.023 ops/s
Iteration  12: 167041.036 ops/s
Iteration  13: 167222.467 ops/s
Iteration  14: 166792.372 ops/s
Iteration  15: 167152.563 ops/s
Iteration  16: 166795.146 ops/s
Iteration  17: 166802.774 ops/s
Iteration  18: 166971.465 ops/s
Iteration  19: 166957.883 ops/s
Iteration  20: 165779.103 ops/s
Iteration  21: 166356.909 ops/s
Iteration  22: 165880.124 ops/s
Iteration  23: 164977.683 ops/s
Iteration  24: 164960.976 ops/s
Iteration  25: 166181.024 ops/s
Iteration  26: 166705.942 ops/s
Iteration  27: 167113.491 ops/s
Iteration  28: 167390.466 ops/s
Iteration  29: 166750.334 ops/s
Iteration  30: 165461.817 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_147._Benchmark.benchmark_Cluster_147":
  166595.656 ±(99.9%) 415.964 ops/s [Average]
  (min, avg, max) = (164960.976, 166595.656, 167390.466), stdev = 622.595
  CI (99.9%): [166179.692, 167011.619] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_147._Benchmark.benchmark_Cluster_147  thrpt   30  166595.656 ± 415.964  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_148._Benchmark.benchmark_Cluster_148$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_148._Benchmark.benchmark_Cluster_148

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58625.933 ops/s
# Warmup Iteration   2: 75513.938 ops/s
# Warmup Iteration   3: 130512.860 ops/s
# Warmup Iteration   4: 146324.026 ops/s
# Warmup Iteration   5: 145574.187 ops/s
# Warmup Iteration   6: 147037.305 ops/s
# Warmup Iteration   7: 146524.771 ops/s
# Warmup Iteration   8: 146695.313 ops/s
# Warmup Iteration   9: 110882.027 ops/s
# Warmup Iteration  10: 135757.589 ops/s
# Warmup Iteration  11: 146839.499 ops/s
# Warmup Iteration  12: 146366.163 ops/s
# Warmup Iteration  13: 146776.419 ops/s
# Warmup Iteration  14: 146174.453 ops/s
# Warmup Iteration  15: 146593.187 ops/s
# Warmup Iteration  16: 146342.847 ops/s
# Warmup Iteration  17: 146329.193 ops/s
# Warmup Iteration  18: 146666.070 ops/s
# Warmup Iteration  19: 146049.371 ops/s
# Warmup Iteration  20: 145835.602 ops/s
# Warmup Iteration  21: 146766.007 ops/s
# Warmup Iteration  22: 146735.965 ops/s
# Warmup Iteration  23: 146947.312 ops/s
# Warmup Iteration  24: 146545.118 ops/s
# Warmup Iteration  25: 146191.403 ops/s
# Warmup Iteration  26: 146761.857 ops/s
# Warmup Iteration  27: 146208.214 ops/s
# Warmup Iteration  28: 146085.989 ops/s
# Warmup Iteration  29: 146186.153 ops/s
# Warmup Iteration  30: 146884.211 ops/s
Iteration   1: 146778.127 ops/s
Iteration   2: 146704.499 ops/s
Iteration   3: 146681.562 ops/s
Iteration   4: 146462.716 ops/s
Iteration   5: 147024.455 ops/s
Iteration   6: 146361.232 ops/s
Iteration   7: 146788.436 ops/s
Iteration   8: 147089.881 ops/s
Iteration   9: 146844.623 ops/s
Iteration  10: 146991.366 ops/s
Iteration  11: 146914.614 ops/s
Iteration  12: 145909.036 ops/s
Iteration  13: 146047.055 ops/s
Iteration  14: 146476.691 ops/s
Iteration  15: 146969.461 ops/s
Iteration  16: 147247.530 ops/s
Iteration  17: 146702.971 ops/s
Iteration  18: 146583.626 ops/s
Iteration  19: 147319.868 ops/s
Iteration  20: 147311.382 ops/s
Iteration  21: 147073.900 ops/s
Iteration  22: 147340.822 ops/s
Iteration  23: 147736.022 ops/s
Iteration  24: 146982.965 ops/s
Iteration  25: 147014.272 ops/s
Iteration  26: 146384.761 ops/s
Iteration  27: 146855.440 ops/s
Iteration  28: 147176.350 ops/s
Iteration  29: 146829.558 ops/s
Iteration  30: 147166.017 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_148._Benchmark.benchmark_Cluster_148":
  146858.975 ±(99.9%) 262.279 ops/s [Average]
  (min, avg, max) = (145909.036, 146858.975, 147736.022), stdev = 392.567
  CI (99.9%): [146596.696, 147121.253] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_148._Benchmark.benchmark_Cluster_148  thrpt   30  146858.975 ± 262.279  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_149._Benchmark.benchmark_Cluster_149$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_149._Benchmark.benchmark_Cluster_149

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77279.110 ops/s
# Warmup Iteration   2: 96969.773 ops/s
# Warmup Iteration   3: 160840.096 ops/s
# Warmup Iteration   4: 183710.138 ops/s
# Warmup Iteration   5: 182103.920 ops/s
# Warmup Iteration   6: 183738.387 ops/s
# Warmup Iteration   7: 183560.973 ops/s
# Warmup Iteration   8: 183480.877 ops/s
# Warmup Iteration   9: 166692.472 ops/s
# Warmup Iteration  10: 141729.801 ops/s
# Warmup Iteration  11: 183690.025 ops/s
# Warmup Iteration  12: 184177.514 ops/s
# Warmup Iteration  13: 183357.288 ops/s
# Warmup Iteration  14: 183367.530 ops/s
# Warmup Iteration  15: 183387.264 ops/s
# Warmup Iteration  16: 183492.741 ops/s
# Warmup Iteration  17: 183485.900 ops/s
# Warmup Iteration  18: 183621.088 ops/s
# Warmup Iteration  19: 183526.293 ops/s
# Warmup Iteration  20: 183540.268 ops/s
# Warmup Iteration  21: 183766.510 ops/s
# Warmup Iteration  22: 183908.862 ops/s
# Warmup Iteration  23: 183947.056 ops/s
# Warmup Iteration  24: 184158.471 ops/s
# Warmup Iteration  25: 183737.724 ops/s
# Warmup Iteration  26: 183817.036 ops/s
# Warmup Iteration  27: 184007.542 ops/s
# Warmup Iteration  28: 183646.791 ops/s
# Warmup Iteration  29: 183572.747 ops/s
# Warmup Iteration  30: 183215.320 ops/s
Iteration   1: 183495.861 ops/s
Iteration   2: 183837.963 ops/s
Iteration   3: 183617.597 ops/s
Iteration   4: 183541.377 ops/s
Iteration   5: 183340.311 ops/s
Iteration   6: 183085.515 ops/s
Iteration   7: 183488.921 ops/s
Iteration   8: 183102.442 ops/s
Iteration   9: 183619.714 ops/s
Iteration  10: 183425.471 ops/s
Iteration  11: 183561.501 ops/s
Iteration  12: 183613.524 ops/s
Iteration  13: 183201.090 ops/s
Iteration  14: 183741.651 ops/s
Iteration  15: 183593.926 ops/s
Iteration  16: 183646.774 ops/s
Iteration  17: 183978.137 ops/s
Iteration  18: 183309.334 ops/s
Iteration  19: 183448.153 ops/s
Iteration  20: 183321.808 ops/s
Iteration  21: 183057.154 ops/s
Iteration  22: 183342.327 ops/s
Iteration  23: 182918.430 ops/s
Iteration  24: 183431.332 ops/s
Iteration  25: 183457.648 ops/s
Iteration  26: 183286.443 ops/s
Iteration  27: 183391.440 ops/s
Iteration  28: 183502.903 ops/s
Iteration  29: 183303.622 ops/s
Iteration  30: 183061.166 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_149._Benchmark.benchmark_Cluster_149":
  183424.118 ±(99.9%) 160.847 ops/s [Average]
  (min, avg, max) = (182918.430, 183424.118, 183978.137), stdev = 240.748
  CI (99.9%): [183263.271, 183584.965] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_149._Benchmark.benchmark_Cluster_149  thrpt   30  183424.118 ± 160.847  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_15._Benchmark.benchmark_Cluster_15$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_15._Benchmark.benchmark_Cluster_15

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52518.776 ops/s
# Warmup Iteration   2: 67942.523 ops/s
# Warmup Iteration   3: 73357.475 ops/s
# Warmup Iteration   4: 108077.979 ops/s
# Warmup Iteration   5: 108215.926 ops/s
# Warmup Iteration   6: 108885.580 ops/s
# Warmup Iteration   7: 106611.215 ops/s
# Warmup Iteration   8: 107893.228 ops/s
# Warmup Iteration   9: 107355.841 ops/s
# Warmup Iteration  10: 108503.277 ops/s
# Warmup Iteration  11: 108565.375 ops/s
# Warmup Iteration  12: 107455.986 ops/s
# Warmup Iteration  13: 96813.437 ops/s
# Warmup Iteration  14: 79503.440 ops/s
# Warmup Iteration  15: 107208.272 ops/s
# Warmup Iteration  16: 106759.491 ops/s
# Warmup Iteration  17: 111454.406 ops/s
# Warmup Iteration  18: 111696.791 ops/s
# Warmup Iteration  19: 110940.999 ops/s
# Warmup Iteration  20: 111625.807 ops/s
# Warmup Iteration  21: 111791.537 ops/s
# Warmup Iteration  22: 111825.216 ops/s
# Warmup Iteration  23: 111557.125 ops/s
# Warmup Iteration  24: 111754.399 ops/s
# Warmup Iteration  25: 110973.500 ops/s
# Warmup Iteration  26: 111142.929 ops/s
# Warmup Iteration  27: 111590.654 ops/s
# Warmup Iteration  28: 111326.776 ops/s
# Warmup Iteration  29: 110270.904 ops/s
# Warmup Iteration  30: 112473.553 ops/s
Iteration   1: 111192.504 ops/s
Iteration   2: 111463.062 ops/s
Iteration   3: 111971.070 ops/s
Iteration   4: 111718.058 ops/s
Iteration   5: 111778.472 ops/s
Iteration   6: 111504.532 ops/s
Iteration   7: 111209.702 ops/s
Iteration   8: 111965.313 ops/s
Iteration   9: 110675.598 ops/s
Iteration  10: 111782.590 ops/s
Iteration  11: 112058.026 ops/s
Iteration  12: 112150.849 ops/s
Iteration  13: 111290.167 ops/s
Iteration  14: 111833.303 ops/s
Iteration  15: 110132.991 ops/s
Iteration  16: 110227.968 ops/s
Iteration  17: 110397.982 ops/s
Iteration  18: 110671.008 ops/s
Iteration  19: 110834.324 ops/s
Iteration  20: 110353.814 ops/s
Iteration  21: 110858.265 ops/s
Iteration  22: 111610.961 ops/s
Iteration  23: 112116.090 ops/s
Iteration  24: 110933.753 ops/s
Iteration  25: 110544.891 ops/s
Iteration  26: 110713.188 ops/s
Iteration  27: 111418.810 ops/s
Iteration  28: 111939.970 ops/s
Iteration  29: 111765.882 ops/s
Iteration  30: 112354.000 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_15._Benchmark.benchmark_Cluster_15":
  111315.571 ±(99.9%) 432.881 ops/s [Average]
  (min, avg, max) = (110132.991, 111315.571, 112354.000), stdev = 647.916
  CI (99.9%): [110882.690, 111748.453] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_15._Benchmark.benchmark_Cluster_15  thrpt   30  111315.571 ± 432.881  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_150._Benchmark.benchmark_Cluster_150$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_150._Benchmark.benchmark_Cluster_150

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 105739.984 ops/s
# Warmup Iteration   2: 131061.263 ops/s
# Warmup Iteration   3: 226717.077 ops/s
# Warmup Iteration   4: 252738.051 ops/s
# Warmup Iteration   5: 249850.169 ops/s
# Warmup Iteration   6: 255274.744 ops/s
# Warmup Iteration   7: 254568.341 ops/s
# Warmup Iteration   8: 253850.030 ops/s
# Warmup Iteration   9: 189502.620 ops/s
# Warmup Iteration  10: 239026.121 ops/s
# Warmup Iteration  11: 254840.055 ops/s
# Warmup Iteration  12: 253444.320 ops/s
# Warmup Iteration  13: 251962.087 ops/s
# Warmup Iteration  14: 253661.943 ops/s
# Warmup Iteration  15: 252806.836 ops/s
# Warmup Iteration  16: 253920.755 ops/s
# Warmup Iteration  17: 252437.361 ops/s
# Warmup Iteration  18: 253876.642 ops/s
# Warmup Iteration  19: 255098.323 ops/s
# Warmup Iteration  20: 254344.754 ops/s
# Warmup Iteration  21: 255868.703 ops/s
# Warmup Iteration  22: 254714.028 ops/s
# Warmup Iteration  23: 252524.384 ops/s
# Warmup Iteration  24: 253087.559 ops/s
# Warmup Iteration  25: 252714.307 ops/s
# Warmup Iteration  26: 255304.379 ops/s
# Warmup Iteration  27: 253651.102 ops/s
# Warmup Iteration  28: 254328.113 ops/s
# Warmup Iteration  29: 252781.167 ops/s
# Warmup Iteration  30: 252760.930 ops/s
Iteration   1: 252339.267 ops/s
Iteration   2: 254610.521 ops/s
Iteration   3: 253068.012 ops/s
Iteration   4: 252230.403 ops/s
Iteration   5: 252972.780 ops/s
Iteration   6: 251278.490 ops/s
Iteration   7: 251346.548 ops/s
Iteration   8: 252217.028 ops/s
Iteration   9: 254902.258 ops/s
Iteration  10: 254656.058 ops/s
Iteration  11: 253189.166 ops/s
Iteration  12: 255394.294 ops/s
Iteration  13: 254612.094 ops/s
Iteration  14: 253861.017 ops/s
Iteration  15: 252682.873 ops/s
Iteration  16: 252870.173 ops/s
Iteration  17: 252081.737 ops/s
Iteration  18: 252495.675 ops/s
Iteration  19: 252258.073 ops/s
Iteration  20: 252132.058 ops/s
Iteration  21: 253607.355 ops/s
Iteration  22: 255030.082 ops/s
Iteration  23: 253500.535 ops/s
Iteration  24: 253689.734 ops/s
Iteration  25: 253486.817 ops/s
Iteration  26: 252741.111 ops/s
Iteration  27: 251642.028 ops/s
Iteration  28: 255512.116 ops/s
Iteration  29: 254742.255 ops/s
Iteration  30: 254010.487 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_150._Benchmark.benchmark_Cluster_150":
  253305.368 ±(99.9%) 812.238 ops/s [Average]
  (min, avg, max) = (251278.490, 253305.368, 255512.116), stdev = 1215.720
  CI (99.9%): [252493.130, 254117.606] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_150._Benchmark.benchmark_Cluster_150  thrpt   30  253305.368 ± 812.238  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_151._Benchmark.benchmark_Cluster_151$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_151._Benchmark.benchmark_Cluster_151

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 81028.715 ops/s
# Warmup Iteration   2: 91334.084 ops/s
# Warmup Iteration   3: 92160.226 ops/s
# Warmup Iteration   4: 136263.202 ops/s
# Warmup Iteration   5: 137227.881 ops/s
# Warmup Iteration   6: 137230.970 ops/s
# Warmup Iteration   7: 134027.343 ops/s
# Warmup Iteration   8: 137251.207 ops/s
# Warmup Iteration   9: 137461.305 ops/s
# Warmup Iteration  10: 137643.736 ops/s
# Warmup Iteration  11: 137602.684 ops/s
# Warmup Iteration  12: 136940.900 ops/s
# Warmup Iteration  13: 136332.822 ops/s
# Warmup Iteration  14: 136698.861 ops/s
# Warmup Iteration  15: 131000.693 ops/s
# Warmup Iteration  16: 97175.268 ops/s
# Warmup Iteration  17: 142990.581 ops/s
# Warmup Iteration  18: 142621.972 ops/s
# Warmup Iteration  19: 142756.833 ops/s
# Warmup Iteration  20: 142413.343 ops/s
# Warmup Iteration  21: 142373.153 ops/s
# Warmup Iteration  22: 142315.898 ops/s
# Warmup Iteration  23: 142209.591 ops/s
# Warmup Iteration  24: 142590.143 ops/s
# Warmup Iteration  25: 142717.715 ops/s
# Warmup Iteration  26: 142718.328 ops/s
# Warmup Iteration  27: 142219.187 ops/s
# Warmup Iteration  28: 143091.443 ops/s
# Warmup Iteration  29: 142971.388 ops/s
# Warmup Iteration  30: 142854.671 ops/s
Iteration   1: 141985.844 ops/s
Iteration   2: 142552.440 ops/s
Iteration   3: 141095.643 ops/s
Iteration   4: 141408.750 ops/s
Iteration   5: 141700.294 ops/s
Iteration   6: 142287.011 ops/s
Iteration   7: 142640.451 ops/s
Iteration   8: 143151.637 ops/s
Iteration   9: 143470.239 ops/s
Iteration  10: 143391.608 ops/s
Iteration  11: 142757.738 ops/s
Iteration  12: 142355.689 ops/s
Iteration  13: 141818.571 ops/s
Iteration  14: 141968.757 ops/s
Iteration  15: 142336.376 ops/s
Iteration  16: 141220.862 ops/s
Iteration  17: 141685.513 ops/s
Iteration  18: 142289.872 ops/s
Iteration  19: 142683.445 ops/s
Iteration  20: 142845.148 ops/s
Iteration  21: 142457.968 ops/s
Iteration  22: 142524.604 ops/s
Iteration  23: 142892.243 ops/s
Iteration  24: 142143.061 ops/s
Iteration  25: 142932.715 ops/s
Iteration  26: 142486.757 ops/s
Iteration  27: 141599.811 ops/s
Iteration  28: 141531.143 ops/s
Iteration  29: 142378.762 ops/s
Iteration  30: 142220.230 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_151._Benchmark.benchmark_Cluster_151":
  142293.773 ±(99.9%) 405.639 ops/s [Average]
  (min, avg, max) = (141095.643, 142293.773, 143470.239), stdev = 607.141
  CI (99.9%): [141888.134, 142699.412] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_151._Benchmark.benchmark_Cluster_151  thrpt   30  142293.773 ± 405.639  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_152._Benchmark.benchmark_Cluster_152$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_152._Benchmark.benchmark_Cluster_152

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80348.781 ops/s
# Warmup Iteration   2: 108271.984 ops/s
# Warmup Iteration   3: 105128.897 ops/s
# Warmup Iteration   4: 103932.723 ops/s
# Warmup Iteration   5: 132931.031 ops/s
# Warmup Iteration   6: 142400.908 ops/s
# Warmup Iteration   7: 141691.046 ops/s
# Warmup Iteration   8: 142197.654 ops/s
# Warmup Iteration   9: 142495.625 ops/s
# Warmup Iteration  10: 143038.706 ops/s
# Warmup Iteration  11: 141689.921 ops/s
# Warmup Iteration  12: 142475.128 ops/s
# Warmup Iteration  13: 142301.004 ops/s
# Warmup Iteration  14: 142625.732 ops/s
# Warmup Iteration  15: 143141.720 ops/s
# Warmup Iteration  16: 143023.812 ops/s
# Warmup Iteration  17: 144820.757 ops/s
# Warmup Iteration  18: 144953.046 ops/s
# Warmup Iteration  19: 144626.507 ops/s
# Warmup Iteration  20: 145072.788 ops/s
# Warmup Iteration  21: 145403.888 ops/s
# Warmup Iteration  22: 143768.375 ops/s
# Warmup Iteration  23: 104813.789 ops/s
# Warmup Iteration  24: 131936.345 ops/s
# Warmup Iteration  25: 144919.858 ops/s
# Warmup Iteration  26: 145352.977 ops/s
# Warmup Iteration  27: 145408.345 ops/s
# Warmup Iteration  28: 143776.161 ops/s
# Warmup Iteration  29: 145095.513 ops/s
# Warmup Iteration  30: 145005.345 ops/s
Iteration   1: 144759.362 ops/s
Iteration   2: 144743.624 ops/s
Iteration   3: 145165.775 ops/s
Iteration   4: 145387.502 ops/s
Iteration   5: 145156.083 ops/s
Iteration   6: 145430.382 ops/s
Iteration   7: 145223.683 ops/s
Iteration   8: 144803.295 ops/s
Iteration   9: 145027.018 ops/s
Iteration  10: 145068.494 ops/s
Iteration  11: 145114.118 ops/s
Iteration  12: 145539.742 ops/s
Iteration  13: 145437.757 ops/s
Iteration  14: 145479.382 ops/s
Iteration  15: 145461.429 ops/s
Iteration  16: 145790.732 ops/s
Iteration  17: 145817.458 ops/s
Iteration  18: 145581.846 ops/s
Iteration  19: 145517.363 ops/s
Iteration  20: 145563.277 ops/s
Iteration  21: 144967.621 ops/s
Iteration  22: 144851.393 ops/s
Iteration  23: 144460.313 ops/s
Iteration  24: 144510.297 ops/s
Iteration  25: 144405.617 ops/s
Iteration  26: 145332.321 ops/s
Iteration  27: 144866.854 ops/s
Iteration  28: 145145.749 ops/s
Iteration  29: 145101.385 ops/s
Iteration  30: 145331.959 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_152._Benchmark.benchmark_Cluster_152":
  145168.061 ±(99.9%) 250.930 ops/s [Average]
  (min, avg, max) = (144405.617, 145168.061, 145817.458), stdev = 375.580
  CI (99.9%): [144917.131, 145418.991] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_152._Benchmark.benchmark_Cluster_152  thrpt   30  145168.061 ± 250.930  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_153._Benchmark.benchmark_Cluster_153$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_153._Benchmark.benchmark_Cluster_153

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57353.201 ops/s
# Warmup Iteration   2: 87627.525 ops/s
# Warmup Iteration   3: 119619.375 ops/s
# Warmup Iteration   4: 152465.228 ops/s
# Warmup Iteration   5: 151074.683 ops/s
# Warmup Iteration   6: 152710.262 ops/s
# Warmup Iteration   7: 152357.073 ops/s
# Warmup Iteration   8: 152241.535 ops/s
# Warmup Iteration   9: 152082.318 ops/s
# Warmup Iteration  10: 152139.507 ops/s
# Warmup Iteration  11: 103803.077 ops/s
# Warmup Iteration  12: 152151.477 ops/s
# Warmup Iteration  13: 151962.761 ops/s
# Warmup Iteration  14: 151885.307 ops/s
# Warmup Iteration  15: 151233.348 ops/s
# Warmup Iteration  16: 151482.454 ops/s
# Warmup Iteration  17: 151928.632 ops/s
# Warmup Iteration  18: 152703.097 ops/s
# Warmup Iteration  19: 151398.567 ops/s
# Warmup Iteration  20: 151287.617 ops/s
# Warmup Iteration  21: 152676.266 ops/s
# Warmup Iteration  22: 153263.166 ops/s
# Warmup Iteration  23: 152871.492 ops/s
# Warmup Iteration  24: 153282.379 ops/s
# Warmup Iteration  25: 152995.585 ops/s
# Warmup Iteration  26: 152907.812 ops/s
# Warmup Iteration  27: 152601.867 ops/s
# Warmup Iteration  28: 152728.786 ops/s
# Warmup Iteration  29: 152807.348 ops/s
# Warmup Iteration  30: 152783.083 ops/s
Iteration   1: 152335.198 ops/s
Iteration   2: 153504.519 ops/s
Iteration   3: 153122.502 ops/s
Iteration   4: 153277.797 ops/s
Iteration   5: 153477.397 ops/s
Iteration   6: 152568.532 ops/s
Iteration   7: 153156.992 ops/s
Iteration   8: 153167.018 ops/s
Iteration   9: 152924.924 ops/s
Iteration  10: 152674.153 ops/s
Iteration  11: 153213.132 ops/s
Iteration  12: 153056.112 ops/s
Iteration  13: 152884.326 ops/s
Iteration  14: 152977.742 ops/s
Iteration  15: 153247.017 ops/s
Iteration  16: 152287.696 ops/s
Iteration  17: 152899.095 ops/s
Iteration  18: 153074.224 ops/s
Iteration  19: 153162.629 ops/s
Iteration  20: 152179.974 ops/s
Iteration  21: 152086.749 ops/s
Iteration  22: 152795.506 ops/s
Iteration  23: 152083.124 ops/s
Iteration  24: 152569.006 ops/s
Iteration  25: 153067.646 ops/s
Iteration  26: 153291.926 ops/s
Iteration  27: 153462.830 ops/s
Iteration  28: 153177.208 ops/s
Iteration  29: 151936.617 ops/s
Iteration  30: 151546.195 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_153._Benchmark.benchmark_Cluster_153":
  152840.260 ±(99.9%) 338.156 ops/s [Average]
  (min, avg, max) = (151546.195, 152840.260, 153504.519), stdev = 506.136
  CI (99.9%): [152502.104, 153178.415] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_153._Benchmark.benchmark_Cluster_153  thrpt   30  152840.260 ± 338.156  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_154._Benchmark.benchmark_Cluster_154$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_154._Benchmark.benchmark_Cluster_154

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64180.134 ops/s
# Warmup Iteration   2: 113877.024 ops/s
# Warmup Iteration   3: 206791.811 ops/s
# Warmup Iteration   4: 209932.389 ops/s
# Warmup Iteration   5: 209931.616 ops/s
# Warmup Iteration   6: 146295.884 ops/s
# Warmup Iteration   7: 209954.303 ops/s
# Warmup Iteration   8: 210450.075 ops/s
# Warmup Iteration   9: 210811.695 ops/s
# Warmup Iteration  10: 210365.225 ops/s
# Warmup Iteration  11: 210121.395 ops/s
# Warmup Iteration  12: 208771.217 ops/s
# Warmup Iteration  13: 210301.518 ops/s
# Warmup Iteration  14: 210377.972 ops/s
# Warmup Iteration  15: 208808.407 ops/s
# Warmup Iteration  16: 209238.159 ops/s
# Warmup Iteration  17: 210497.477 ops/s
# Warmup Iteration  18: 210926.170 ops/s
# Warmup Iteration  19: 211345.689 ops/s
# Warmup Iteration  20: 211100.672 ops/s
# Warmup Iteration  21: 211065.276 ops/s
# Warmup Iteration  22: 211463.957 ops/s
# Warmup Iteration  23: 211523.363 ops/s
# Warmup Iteration  24: 211583.687 ops/s
# Warmup Iteration  25: 211030.884 ops/s
# Warmup Iteration  26: 210919.613 ops/s
# Warmup Iteration  27: 211350.368 ops/s
# Warmup Iteration  28: 211710.242 ops/s
# Warmup Iteration  29: 211948.748 ops/s
# Warmup Iteration  30: 211746.134 ops/s
Iteration   1: 210508.366 ops/s
Iteration   2: 211155.316 ops/s
Iteration   3: 211377.282 ops/s
Iteration   4: 211169.758 ops/s
Iteration   5: 211548.544 ops/s
Iteration   6: 210788.170 ops/s
Iteration   7: 211960.212 ops/s
Iteration   8: 211438.232 ops/s
Iteration   9: 211166.565 ops/s
Iteration  10: 211648.216 ops/s
Iteration  11: 210690.276 ops/s
Iteration  12: 211187.096 ops/s
Iteration  13: 211756.837 ops/s
Iteration  14: 211608.645 ops/s
Iteration  15: 211242.585 ops/s
Iteration  16: 212072.821 ops/s
Iteration  17: 211239.270 ops/s
Iteration  18: 211701.359 ops/s
Iteration  19: 211132.121 ops/s
Iteration  20: 209874.955 ops/s
Iteration  21: 209625.784 ops/s
Iteration  22: 209943.150 ops/s
Iteration  23: 211593.250 ops/s
Iteration  24: 210880.800 ops/s
Iteration  25: 211195.769 ops/s
Iteration  26: 211927.019 ops/s
Iteration  27: 210315.902 ops/s
Iteration  28: 210958.655 ops/s
Iteration  29: 210804.705 ops/s
Iteration  30: 211913.528 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_154._Benchmark.benchmark_Cluster_154":
  211147.506 ±(99.9%) 419.259 ops/s [Average]
  (min, avg, max) = (209625.784, 211147.506, 212072.821), stdev = 627.528
  CI (99.9%): [210728.247, 211566.765] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_154._Benchmark.benchmark_Cluster_154  thrpt   30  211147.506 ± 419.259  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_155._Benchmark.benchmark_Cluster_155$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_155._Benchmark.benchmark_Cluster_155

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77600.776 ops/s
# Warmup Iteration   2: 106406.491 ops/s
# Warmup Iteration   3: 165476.802 ops/s
# Warmup Iteration   4: 206191.167 ops/s
# Warmup Iteration   5: 204546.254 ops/s
# Warmup Iteration   6: 206788.058 ops/s
# Warmup Iteration   7: 205708.206 ops/s
# Warmup Iteration   8: 206034.626 ops/s
# Warmup Iteration   9: 204043.329 ops/s
# Warmup Iteration  10: 134462.091 ops/s
# Warmup Iteration  11: 205522.103 ops/s
# Warmup Iteration  12: 204908.932 ops/s
# Warmup Iteration  13: 203982.306 ops/s
# Warmup Iteration  14: 205248.522 ops/s
# Warmup Iteration  15: 205096.987 ops/s
# Warmup Iteration  16: 204428.159 ops/s
# Warmup Iteration  17: 204866.090 ops/s
# Warmup Iteration  18: 205122.026 ops/s
# Warmup Iteration  19: 204199.432 ops/s
# Warmup Iteration  20: 203521.083 ops/s
# Warmup Iteration  21: 206121.834 ops/s
# Warmup Iteration  22: 205247.426 ops/s
# Warmup Iteration  23: 205156.256 ops/s
# Warmup Iteration  24: 205427.560 ops/s
# Warmup Iteration  25: 205403.685 ops/s
# Warmup Iteration  26: 205848.615 ops/s
# Warmup Iteration  27: 203779.901 ops/s
# Warmup Iteration  28: 203120.456 ops/s
# Warmup Iteration  29: 203299.362 ops/s
# Warmup Iteration  30: 205052.718 ops/s
Iteration   1: 205070.556 ops/s
Iteration   2: 204869.369 ops/s
Iteration   3: 206059.223 ops/s
Iteration   4: 205851.200 ops/s
Iteration   5: 204865.276 ops/s
Iteration   6: 204033.790 ops/s
Iteration   7: 202666.175 ops/s
Iteration   8: 203424.234 ops/s
Iteration   9: 204604.975 ops/s
Iteration  10: 202490.386 ops/s
Iteration  11: 203995.234 ops/s
Iteration  12: 203121.853 ops/s
Iteration  13: 204254.023 ops/s
Iteration  14: 205920.894 ops/s
Iteration  15: 202470.303 ops/s
Iteration  16: 203218.657 ops/s
Iteration  17: 203692.712 ops/s
Iteration  18: 204917.447 ops/s
Iteration  19: 205129.983 ops/s
Iteration  20: 204003.568 ops/s
Iteration  21: 205750.922 ops/s
Iteration  22: 205619.780 ops/s
Iteration  23: 204176.372 ops/s
Iteration  24: 203325.398 ops/s
Iteration  25: 203549.636 ops/s
Iteration  26: 204743.943 ops/s
Iteration  27: 205096.871 ops/s
Iteration  28: 205759.503 ops/s
Iteration  29: 206646.517 ops/s
Iteration  30: 206313.074 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_155._Benchmark.benchmark_Cluster_155":
  204521.396 ±(99.9%) 786.552 ops/s [Average]
  (min, avg, max) = (202470.303, 204521.396, 206646.517), stdev = 1177.274
  CI (99.9%): [203734.844, 205307.948] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_155._Benchmark.benchmark_Cluster_155  thrpt   30  204521.396 ± 786.552  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_156._Benchmark.benchmark_Cluster_156$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_156._Benchmark.benchmark_Cluster_156

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71917.017 ops/s
# Warmup Iteration   2: 86377.256 ops/s
# Warmup Iteration   3: 87934.646 ops/s
# Warmup Iteration   4: 115343.108 ops/s
# Warmup Iteration   5: 127764.181 ops/s
# Warmup Iteration   6: 128596.012 ops/s
# Warmup Iteration   7: 128514.705 ops/s
# Warmup Iteration   8: 125802.111 ops/s
# Warmup Iteration   9: 128489.387 ops/s
# Warmup Iteration  10: 128398.109 ops/s
# Warmup Iteration  11: 128163.769 ops/s
# Warmup Iteration  12: 127364.277 ops/s
# Warmup Iteration  13: 127450.145 ops/s
# Warmup Iteration  14: 126693.916 ops/s
# Warmup Iteration  15: 127572.530 ops/s
# Warmup Iteration  16: 128681.209 ops/s
# Warmup Iteration  17: 99236.468 ops/s
# Warmup Iteration  18: 123965.007 ops/s
# Warmup Iteration  19: 132942.641 ops/s
# Warmup Iteration  20: 133050.036 ops/s
# Warmup Iteration  21: 133619.745 ops/s
# Warmup Iteration  22: 133821.482 ops/s
# Warmup Iteration  23: 133026.105 ops/s
# Warmup Iteration  24: 133009.768 ops/s
# Warmup Iteration  25: 133484.048 ops/s
# Warmup Iteration  26: 133155.947 ops/s
# Warmup Iteration  27: 133848.464 ops/s
# Warmup Iteration  28: 133953.114 ops/s
# Warmup Iteration  29: 133177.975 ops/s
# Warmup Iteration  30: 132639.748 ops/s
Iteration   1: 134300.411 ops/s
Iteration   2: 132702.791 ops/s
Iteration   3: 132216.291 ops/s
Iteration   4: 131999.612 ops/s
Iteration   5: 132744.699 ops/s
Iteration   6: 133379.301 ops/s
Iteration   7: 134147.971 ops/s
Iteration   8: 133248.607 ops/s
Iteration   9: 131904.658 ops/s
Iteration  10: 132438.485 ops/s
Iteration  11: 132995.969 ops/s
Iteration  12: 133831.429 ops/s
Iteration  13: 133005.678 ops/s
Iteration  14: 133478.998 ops/s
Iteration  15: 133247.960 ops/s
Iteration  16: 132480.152 ops/s
Iteration  17: 132615.041 ops/s
Iteration  18: 133132.446 ops/s
Iteration  19: 131566.345 ops/s
Iteration  20: 132157.708 ops/s
Iteration  21: 133300.117 ops/s
Iteration  22: 133012.560 ops/s
Iteration  23: 132466.109 ops/s
Iteration  24: 132707.622 ops/s
Iteration  25: 131787.930 ops/s
Iteration  26: 133957.253 ops/s
Iteration  27: 133752.867 ops/s
Iteration  28: 133320.162 ops/s
Iteration  29: 134155.659 ops/s
Iteration  30: 134665.394 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_156._Benchmark.benchmark_Cluster_156":
  133024.008 ±(99.9%) 530.566 ops/s [Average]
  (min, avg, max) = (131566.345, 133024.008, 134665.394), stdev = 794.127
  CI (99.9%): [132493.441, 133554.574] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_156._Benchmark.benchmark_Cluster_156  thrpt   30  133024.008 ± 530.566  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_157._Benchmark.benchmark_Cluster_157$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_157._Benchmark.benchmark_Cluster_157

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61233.208 ops/s
# Warmup Iteration   2: 70126.301 ops/s
# Warmup Iteration   3: 141648.485 ops/s
# Warmup Iteration   4: 140494.776 ops/s
# Warmup Iteration   5: 143667.937 ops/s
# Warmup Iteration   6: 143575.519 ops/s
# Warmup Iteration   7: 142799.843 ops/s
# Warmup Iteration   8: 124388.750 ops/s
# Warmup Iteration   9: 114760.207 ops/s
# Warmup Iteration  10: 143045.188 ops/s
# Warmup Iteration  11: 143230.238 ops/s
# Warmup Iteration  12: 143438.425 ops/s
# Warmup Iteration  13: 143480.850 ops/s
# Warmup Iteration  14: 142968.402 ops/s
# Warmup Iteration  15: 143720.658 ops/s
# Warmup Iteration  16: 143543.825 ops/s
# Warmup Iteration  17: 146229.034 ops/s
# Warmup Iteration  18: 146383.334 ops/s
# Warmup Iteration  19: 145259.256 ops/s
# Warmup Iteration  20: 146541.912 ops/s
# Warmup Iteration  21: 147174.469 ops/s
# Warmup Iteration  22: 147156.065 ops/s
# Warmup Iteration  23: 146888.502 ops/s
# Warmup Iteration  24: 146619.472 ops/s
# Warmup Iteration  25: 146953.729 ops/s
# Warmup Iteration  26: 146178.844 ops/s
# Warmup Iteration  27: 145286.884 ops/s
# Warmup Iteration  28: 146125.611 ops/s
# Warmup Iteration  29: 145828.172 ops/s
# Warmup Iteration  30: 146373.441 ops/s
Iteration   1: 146600.981 ops/s
Iteration   2: 147206.703 ops/s
Iteration   3: 146397.305 ops/s
Iteration   4: 147351.720 ops/s
Iteration   5: 146890.419 ops/s
Iteration   6: 147141.622 ops/s
Iteration   7: 146085.951 ops/s
Iteration   8: 145558.430 ops/s
Iteration   9: 145774.802 ops/s
Iteration  10: 145701.842 ops/s
Iteration  11: 146765.810 ops/s
Iteration  12: 145998.869 ops/s
Iteration  13: 145699.498 ops/s
Iteration  14: 146215.318 ops/s
Iteration  15: 146200.620 ops/s
Iteration  16: 146180.668 ops/s
Iteration  17: 145160.838 ops/s
Iteration  18: 145788.792 ops/s
Iteration  19: 146478.443 ops/s
Iteration  20: 145673.913 ops/s
Iteration  21: 145069.490 ops/s
Iteration  22: 145399.631 ops/s
Iteration  23: 145629.874 ops/s
Iteration  24: 146340.443 ops/s
Iteration  25: 146467.044 ops/s
Iteration  26: 146573.623 ops/s
Iteration  27: 146593.944 ops/s
Iteration  28: 146711.816 ops/s
Iteration  29: 146244.180 ops/s
Iteration  30: 146599.050 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_157._Benchmark.benchmark_Cluster_157":
  146216.721 ±(99.9%) 392.638 ops/s [Average]
  (min, avg, max) = (145069.490, 146216.721, 147351.720), stdev = 587.683
  CI (99.9%): [145824.083, 146609.360] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_157._Benchmark.benchmark_Cluster_157  thrpt   30  146216.721 ± 392.638  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_158._Benchmark.benchmark_Cluster_158$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_158._Benchmark.benchmark_Cluster_158

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63449.319 ops/s
# Warmup Iteration   2: 104955.865 ops/s
# Warmup Iteration   3: 185381.710 ops/s
# Warmup Iteration   4: 184827.232 ops/s
# Warmup Iteration   5: 187131.612 ops/s
# Warmup Iteration   6: 140158.649 ops/s
# Warmup Iteration   7: 177158.545 ops/s
# Warmup Iteration   8: 187342.456 ops/s
# Warmup Iteration   9: 187582.748 ops/s
# Warmup Iteration  10: 186992.928 ops/s
# Warmup Iteration  11: 187474.708 ops/s
# Warmup Iteration  12: 188000.147 ops/s
# Warmup Iteration  13: 188642.788 ops/s
# Warmup Iteration  14: 187678.592 ops/s
# Warmup Iteration  15: 186879.114 ops/s
# Warmup Iteration  16: 184526.281 ops/s
# Warmup Iteration  17: 187808.801 ops/s
# Warmup Iteration  18: 188078.358 ops/s
# Warmup Iteration  19: 187960.686 ops/s
# Warmup Iteration  20: 187510.352 ops/s
# Warmup Iteration  21: 188349.465 ops/s
# Warmup Iteration  22: 187848.584 ops/s
# Warmup Iteration  23: 187180.578 ops/s
# Warmup Iteration  24: 186484.192 ops/s
# Warmup Iteration  25: 187744.304 ops/s
# Warmup Iteration  26: 187701.926 ops/s
# Warmup Iteration  27: 187756.356 ops/s
# Warmup Iteration  28: 188181.243 ops/s
# Warmup Iteration  29: 187860.454 ops/s
# Warmup Iteration  30: 188054.798 ops/s
Iteration   1: 187460.398 ops/s
Iteration   2: 187302.648 ops/s
Iteration   3: 186501.074 ops/s
Iteration   4: 184587.399 ops/s
Iteration   5: 186749.348 ops/s
Iteration   6: 185984.341 ops/s
Iteration   7: 186400.780 ops/s
Iteration   8: 185350.074 ops/s
Iteration   9: 188234.268 ops/s
Iteration  10: 187817.863 ops/s
Iteration  11: 186613.107 ops/s
Iteration  12: 188845.625 ops/s
Iteration  13: 187489.876 ops/s
Iteration  14: 186641.250 ops/s
Iteration  15: 187776.926 ops/s
Iteration  16: 186662.928 ops/s
Iteration  17: 188015.092 ops/s
Iteration  18: 187536.363 ops/s
Iteration  19: 188512.712 ops/s
Iteration  20: 187067.955 ops/s
Iteration  21: 186956.311 ops/s
Iteration  22: 188101.941 ops/s
Iteration  23: 188426.739 ops/s
Iteration  24: 187616.603 ops/s
Iteration  25: 185955.358 ops/s
Iteration  26: 186705.065 ops/s
Iteration  27: 186738.585 ops/s
Iteration  28: 187370.479 ops/s
Iteration  29: 187124.577 ops/s
Iteration  30: 187668.424 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_158._Benchmark.benchmark_Cluster_158":
  187140.470 ±(99.9%) 631.154 ops/s [Average]
  (min, avg, max) = (184587.399, 187140.470, 188845.625), stdev = 944.682
  CI (99.9%): [186509.316, 187771.624] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_158._Benchmark.benchmark_Cluster_158  thrpt   30  187140.470 ± 631.154  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_159._Benchmark.benchmark_Cluster_159$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_159._Benchmark.benchmark_Cluster_159

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56135.377 ops/s
# Warmup Iteration   2: 79779.711 ops/s
# Warmup Iteration   3: 164399.820 ops/s
# Warmup Iteration   4: 166523.852 ops/s
# Warmup Iteration   5: 166841.751 ops/s
# Warmup Iteration   6: 166543.292 ops/s
# Warmup Iteration   7: 113115.064 ops/s
# Warmup Iteration   8: 166359.538 ops/s
# Warmup Iteration   9: 165838.229 ops/s
# Warmup Iteration  10: 166713.988 ops/s
# Warmup Iteration  11: 166671.294 ops/s
# Warmup Iteration  12: 165929.904 ops/s
# Warmup Iteration  13: 165885.241 ops/s
# Warmup Iteration  14: 165830.806 ops/s
# Warmup Iteration  15: 165087.620 ops/s
# Warmup Iteration  16: 165750.299 ops/s
# Warmup Iteration  17: 166218.850 ops/s
# Warmup Iteration  18: 166630.335 ops/s
# Warmup Iteration  19: 165955.784 ops/s
# Warmup Iteration  20: 166425.377 ops/s
# Warmup Iteration  21: 166294.971 ops/s
# Warmup Iteration  22: 166594.989 ops/s
# Warmup Iteration  23: 167262.313 ops/s
# Warmup Iteration  24: 167227.141 ops/s
# Warmup Iteration  25: 166982.675 ops/s
# Warmup Iteration  26: 166528.735 ops/s
# Warmup Iteration  27: 165173.059 ops/s
# Warmup Iteration  28: 166211.910 ops/s
# Warmup Iteration  29: 167168.046 ops/s
# Warmup Iteration  30: 167079.458 ops/s
Iteration   1: 165794.990 ops/s
Iteration   2: 164454.003 ops/s
Iteration   3: 166373.821 ops/s
Iteration   4: 165612.466 ops/s
Iteration   5: 166827.554 ops/s
Iteration   6: 166310.230 ops/s
Iteration   7: 165304.989 ops/s
Iteration   8: 167192.441 ops/s
Iteration   9: 165514.646 ops/s
Iteration  10: 165273.770 ops/s
Iteration  11: 165736.064 ops/s
Iteration  12: 164577.336 ops/s
Iteration  13: 165223.822 ops/s
Iteration  14: 165987.498 ops/s
Iteration  15: 164743.965 ops/s
Iteration  16: 165464.686 ops/s
Iteration  17: 164328.176 ops/s
Iteration  18: 164861.060 ops/s
Iteration  19: 166174.263 ops/s
Iteration  20: 166299.617 ops/s
Iteration  21: 165896.095 ops/s
Iteration  22: 166624.701 ops/s
Iteration  23: 165411.615 ops/s
Iteration  24: 165261.195 ops/s
Iteration  25: 166103.046 ops/s
Iteration  26: 166578.333 ops/s
Iteration  27: 166813.288 ops/s
Iteration  28: 166596.360 ops/s
Iteration  29: 165945.973 ops/s
Iteration  30: 167060.056 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_159._Benchmark.benchmark_Cluster_159":
  165811.535 ±(99.9%) 521.372 ops/s [Average]
  (min, avg, max) = (164328.176, 165811.535, 167192.441), stdev = 780.366
  CI (99.9%): [165290.163, 166332.908] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_159._Benchmark.benchmark_Cluster_159  thrpt   30  165811.535 ± 521.372  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_16._Benchmark.benchmark_Cluster_16$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_16._Benchmark.benchmark_Cluster_16

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 14851.685 ops/s
# Warmup Iteration   2: 55215.244 ops/s
# Warmup Iteration   3: 64421.854 ops/s
# Warmup Iteration   4: 96520.471 ops/s
# Warmup Iteration   5: 112357.303 ops/s
# Warmup Iteration   6: 113073.545 ops/s
# Warmup Iteration   7: 112378.286 ops/s
# Warmup Iteration   8: 112455.530 ops/s
# Warmup Iteration   9: 112100.214 ops/s
# Warmup Iteration  10: 111821.183 ops/s
# Warmup Iteration  11: 85463.616 ops/s
# Warmup Iteration  12: 102522.876 ops/s
# Warmup Iteration  13: 112735.156 ops/s
# Warmup Iteration  14: 113000.045 ops/s
# Warmup Iteration  15: 112648.209 ops/s
# Warmup Iteration  16: 113130.898 ops/s
# Warmup Iteration  17: 112746.667 ops/s
# Warmup Iteration  18: 112560.771 ops/s
# Warmup Iteration  19: 112318.765 ops/s
# Warmup Iteration  20: 112575.993 ops/s
# Warmup Iteration  21: 111968.451 ops/s
# Warmup Iteration  22: 111826.307 ops/s
# Warmup Iteration  23: 112055.429 ops/s
# Warmup Iteration  24: 111221.983 ops/s
# Warmup Iteration  25: 111759.527 ops/s
# Warmup Iteration  26: 111899.532 ops/s
# Warmup Iteration  27: 112110.101 ops/s
# Warmup Iteration  28: 111360.692 ops/s
# Warmup Iteration  29: 111485.061 ops/s
# Warmup Iteration  30: 111519.918 ops/s
Iteration   1: 111290.846 ops/s
Iteration   2: 112188.024 ops/s
Iteration   3: 111803.073 ops/s
Iteration   4: 111742.987 ops/s
Iteration   5: 111506.841 ops/s
Iteration   6: 113195.152 ops/s
Iteration   7: 111672.119 ops/s
Iteration   8: 111999.153 ops/s
Iteration   9: 112126.709 ops/s
Iteration  10: 110906.316 ops/s
Iteration  11: 110788.206 ops/s
Iteration  12: 112683.769 ops/s
Iteration  13: 110326.730 ops/s
Iteration  14: 111025.116 ops/s
Iteration  15: 111796.676 ops/s
Iteration  16: 112383.680 ops/s
Iteration  17: 112303.040 ops/s
Iteration  18: 112399.815 ops/s
Iteration  19: 112680.660 ops/s
Iteration  20: 112147.171 ops/s
Iteration  21: 112554.661 ops/s
Iteration  22: 112046.921 ops/s
Iteration  23: 113025.115 ops/s
Iteration  24: 112551.479 ops/s
Iteration  25: 112572.640 ops/s
Iteration  26: 112631.994 ops/s
Iteration  27: 111832.863 ops/s
Iteration  28: 112358.169 ops/s
Iteration  29: 112537.662 ops/s
Iteration  30: 112493.500 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_16._Benchmark.benchmark_Cluster_16":
  112052.370 ±(99.9%) 451.512 ops/s [Average]
  (min, avg, max) = (110326.730, 112052.370, 113195.152), stdev = 675.802
  CI (99.9%): [111600.858, 112503.881] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_16._Benchmark.benchmark_Cluster_16  thrpt   30  112052.370 ± 451.512  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_160._Benchmark.benchmark_Cluster_160$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_160._Benchmark.benchmark_Cluster_160

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77365.386 ops/s
# Warmup Iteration   2: 96991.319 ops/s
# Warmup Iteration   3: 189054.780 ops/s
# Warmup Iteration   4: 186511.289 ops/s
# Warmup Iteration   5: 188228.638 ops/s
# Warmup Iteration   6: 188378.672 ops/s
# Warmup Iteration   7: 189666.124 ops/s
# Warmup Iteration   8: 130369.760 ops/s
# Warmup Iteration   9: 189639.019 ops/s
# Warmup Iteration  10: 188714.264 ops/s
# Warmup Iteration  11: 188760.593 ops/s
# Warmup Iteration  12: 189480.957 ops/s
# Warmup Iteration  13: 188790.581 ops/s
# Warmup Iteration  14: 189199.999 ops/s
# Warmup Iteration  15: 189299.181 ops/s
# Warmup Iteration  16: 188569.066 ops/s
# Warmup Iteration  17: 188553.881 ops/s
# Warmup Iteration  18: 189641.782 ops/s
# Warmup Iteration  19: 189618.414 ops/s
# Warmup Iteration  20: 189494.089 ops/s
# Warmup Iteration  21: 189382.020 ops/s
# Warmup Iteration  22: 189349.408 ops/s
# Warmup Iteration  23: 189280.714 ops/s
# Warmup Iteration  24: 189367.485 ops/s
# Warmup Iteration  25: 189447.145 ops/s
# Warmup Iteration  26: 189391.663 ops/s
# Warmup Iteration  27: 189263.582 ops/s
# Warmup Iteration  28: 189525.908 ops/s
# Warmup Iteration  29: 189439.667 ops/s
# Warmup Iteration  30: 189482.727 ops/s
Iteration   1: 189901.247 ops/s
Iteration   2: 190118.924 ops/s
Iteration   3: 190198.497 ops/s
Iteration   4: 189673.175 ops/s
Iteration   5: 189781.460 ops/s
Iteration   6: 189425.400 ops/s
Iteration   7: 189560.331 ops/s
Iteration   8: 189679.788 ops/s
Iteration   9: 189252.711 ops/s
Iteration  10: 189279.482 ops/s
Iteration  11: 189381.898 ops/s
Iteration  12: 189288.973 ops/s
Iteration  13: 189001.615 ops/s
Iteration  14: 189274.926 ops/s
Iteration  15: 189064.627 ops/s
Iteration  16: 189031.886 ops/s
Iteration  17: 189659.358 ops/s
Iteration  18: 188992.846 ops/s
Iteration  19: 189802.402 ops/s
Iteration  20: 190037.536 ops/s
Iteration  21: 189901.434 ops/s
Iteration  22: 189528.529 ops/s
Iteration  23: 190122.923 ops/s
Iteration  24: 189584.138 ops/s
Iteration  25: 189429.192 ops/s
Iteration  26: 189297.147 ops/s
Iteration  27: 189312.596 ops/s
Iteration  28: 190276.390 ops/s
Iteration  29: 189953.334 ops/s
Iteration  30: 189659.341 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_160._Benchmark.benchmark_Cluster_160":
  189582.404 ±(99.9%) 247.821 ops/s [Average]
  (min, avg, max) = (188992.846, 189582.404, 190276.390), stdev = 370.927
  CI (99.9%): [189334.583, 189830.224] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_160._Benchmark.benchmark_Cluster_160  thrpt   30  189582.404 ± 247.821  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_161._Benchmark.benchmark_Cluster_161$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_161._Benchmark.benchmark_Cluster_161

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70674.194 ops/s
# Warmup Iteration   2: 96004.439 ops/s
# Warmup Iteration   3: 96632.492 ops/s
# Warmup Iteration   4: 116427.401 ops/s
# Warmup Iteration   5: 138493.322 ops/s
# Warmup Iteration   6: 137862.221 ops/s
# Warmup Iteration   7: 138096.734 ops/s
# Warmup Iteration   8: 136824.576 ops/s
# Warmup Iteration   9: 137897.950 ops/s
# Warmup Iteration  10: 138047.254 ops/s
# Warmup Iteration  11: 137989.629 ops/s
# Warmup Iteration  12: 137877.650 ops/s
# Warmup Iteration  13: 137594.991 ops/s
# Warmup Iteration  14: 137645.312 ops/s
# Warmup Iteration  15: 137548.249 ops/s
# Warmup Iteration  16: 137690.061 ops/s
# Warmup Iteration  17: 143778.054 ops/s
# Warmup Iteration  18: 106604.845 ops/s
# Warmup Iteration  19: 134402.305 ops/s
# Warmup Iteration  20: 144402.555 ops/s
# Warmup Iteration  21: 144118.255 ops/s
# Warmup Iteration  22: 144164.220 ops/s
# Warmup Iteration  23: 143858.014 ops/s
# Warmup Iteration  24: 144139.154 ops/s
# Warmup Iteration  25: 144332.882 ops/s
# Warmup Iteration  26: 143984.545 ops/s
# Warmup Iteration  27: 143514.647 ops/s
# Warmup Iteration  28: 143739.794 ops/s
# Warmup Iteration  29: 144251.684 ops/s
# Warmup Iteration  30: 143934.676 ops/s
Iteration   1: 143804.050 ops/s
Iteration   2: 143978.102 ops/s
Iteration   3: 143808.970 ops/s
Iteration   4: 143579.108 ops/s
Iteration   5: 143546.910 ops/s
Iteration   6: 143174.963 ops/s
Iteration   7: 143428.108 ops/s
Iteration   8: 143826.202 ops/s
Iteration   9: 143987.780 ops/s
Iteration  10: 143921.231 ops/s
Iteration  11: 144141.616 ops/s
Iteration  12: 144281.115 ops/s
Iteration  13: 144321.370 ops/s
Iteration  14: 144239.959 ops/s
Iteration  15: 143819.086 ops/s
Iteration  16: 144021.066 ops/s
Iteration  17: 143722.697 ops/s
Iteration  18: 143320.829 ops/s
Iteration  19: 143364.614 ops/s
Iteration  20: 144065.869 ops/s
Iteration  21: 142756.552 ops/s
Iteration  22: 143881.397 ops/s
Iteration  23: 144130.215 ops/s
Iteration  24: 143927.155 ops/s
Iteration  25: 144208.539 ops/s
Iteration  26: 144577.761 ops/s
Iteration  27: 144123.760 ops/s
Iteration  28: 144093.433 ops/s
Iteration  29: 144154.554 ops/s
Iteration  30: 144151.509 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_161._Benchmark.benchmark_Cluster_161":
  143878.617 ±(99.9%) 258.167 ops/s [Average]
  (min, avg, max) = (142756.552, 143878.617, 144577.761), stdev = 386.412
  CI (99.9%): [143620.450, 144136.784] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_161._Benchmark.benchmark_Cluster_161  thrpt   30  143878.617 ± 258.167  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_162._Benchmark.benchmark_Cluster_162$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_162._Benchmark.benchmark_Cluster_162

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 115488.407 ops/s
# Warmup Iteration   2: 153206.066 ops/s
# Warmup Iteration   3: 186526.477 ops/s
# Warmup Iteration   4: 259623.910 ops/s
# Warmup Iteration   5: 258600.741 ops/s
# Warmup Iteration   6: 256651.295 ops/s
# Warmup Iteration   7: 259129.204 ops/s
# Warmup Iteration   8: 259649.842 ops/s
# Warmup Iteration   9: 259059.435 ops/s
# Warmup Iteration  10: 258645.633 ops/s
# Warmup Iteration  11: 259749.770 ops/s
# Warmup Iteration  12: 202774.446 ops/s
# Warmup Iteration  13: 229821.685 ops/s
# Warmup Iteration  14: 258416.100 ops/s
# Warmup Iteration  15: 258746.655 ops/s
# Warmup Iteration  16: 258168.345 ops/s
# Warmup Iteration  17: 264410.974 ops/s
# Warmup Iteration  18: 264884.679 ops/s
# Warmup Iteration  19: 265186.974 ops/s
# Warmup Iteration  20: 264756.424 ops/s
# Warmup Iteration  21: 264820.366 ops/s
# Warmup Iteration  22: 265712.285 ops/s
# Warmup Iteration  23: 265468.439 ops/s
# Warmup Iteration  24: 265141.276 ops/s
# Warmup Iteration  25: 265487.269 ops/s
# Warmup Iteration  26: 265331.764 ops/s
# Warmup Iteration  27: 265329.965 ops/s
# Warmup Iteration  28: 265179.720 ops/s
# Warmup Iteration  29: 265199.843 ops/s
# Warmup Iteration  30: 264861.591 ops/s
Iteration   1: 265573.108 ops/s
Iteration   2: 264744.621 ops/s
Iteration   3: 263435.367 ops/s
Iteration   4: 263894.958 ops/s
Iteration   5: 265569.946 ops/s
Iteration   6: 264970.584 ops/s
Iteration   7: 265002.644 ops/s
Iteration   8: 265290.329 ops/s
Iteration   9: 265322.952 ops/s
Iteration  10: 265600.361 ops/s
Iteration  11: 265704.749 ops/s
Iteration  12: 265047.292 ops/s
Iteration  13: 265258.735 ops/s
Iteration  14: 265154.057 ops/s
Iteration  15: 264639.940 ops/s
Iteration  16: 264749.073 ops/s
Iteration  17: 263609.506 ops/s
Iteration  18: 264055.368 ops/s
Iteration  19: 264495.974 ops/s
Iteration  20: 264943.829 ops/s
Iteration  21: 264003.000 ops/s
Iteration  22: 264373.367 ops/s
Iteration  23: 264268.588 ops/s
Iteration  24: 264295.740 ops/s
Iteration  25: 264333.101 ops/s
Iteration  26: 264488.895 ops/s
Iteration  27: 263728.234 ops/s
Iteration  28: 264355.537 ops/s
Iteration  29: 265239.010 ops/s
Iteration  30: 265343.333 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_162._Benchmark.benchmark_Cluster_162":
  264716.407 ±(99.9%) 424.756 ops/s [Average]
  (min, avg, max) = (263435.367, 264716.407, 265704.749), stdev = 635.755
  CI (99.9%): [264291.650, 265141.163] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_162._Benchmark.benchmark_Cluster_162  thrpt   30  264716.407 ± 424.756  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_163._Benchmark.benchmark_Cluster_163$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_163._Benchmark.benchmark_Cluster_163

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91750.027 ops/s
# Warmup Iteration   2: 109106.827 ops/s
# Warmup Iteration   3: 157466.489 ops/s
# Warmup Iteration   4: 191152.814 ops/s
# Warmup Iteration   5: 189276.244 ops/s
# Warmup Iteration   6: 191147.572 ops/s
# Warmup Iteration   7: 190039.132 ops/s
# Warmup Iteration   8: 190310.040 ops/s
# Warmup Iteration   9: 191201.535 ops/s
# Warmup Iteration  10: 191484.282 ops/s
# Warmup Iteration  11: 129560.203 ops/s
# Warmup Iteration  12: 191727.435 ops/s
# Warmup Iteration  13: 191553.118 ops/s
# Warmup Iteration  14: 191585.111 ops/s
# Warmup Iteration  15: 191217.780 ops/s
# Warmup Iteration  16: 191696.590 ops/s
# Warmup Iteration  17: 190988.504 ops/s
# Warmup Iteration  18: 190952.911 ops/s
# Warmup Iteration  19: 191425.545 ops/s
# Warmup Iteration  20: 191865.978 ops/s
# Warmup Iteration  21: 190978.139 ops/s
# Warmup Iteration  22: 190655.655 ops/s
# Warmup Iteration  23: 191339.728 ops/s
# Warmup Iteration  24: 191291.888 ops/s
# Warmup Iteration  25: 191129.555 ops/s
# Warmup Iteration  26: 190687.227 ops/s
# Warmup Iteration  27: 191303.007 ops/s
# Warmup Iteration  28: 191691.693 ops/s
# Warmup Iteration  29: 191403.464 ops/s
# Warmup Iteration  30: 191116.936 ops/s
Iteration   1: 191187.052 ops/s
Iteration   2: 190936.062 ops/s
Iteration   3: 190419.515 ops/s
Iteration   4: 190223.869 ops/s
Iteration   5: 191265.398 ops/s
Iteration   6: 190007.701 ops/s
Iteration   7: 189866.301 ops/s
Iteration   8: 190511.498 ops/s
Iteration   9: 189768.724 ops/s
Iteration  10: 190397.460 ops/s
Iteration  11: 190597.770 ops/s
Iteration  12: 191962.626 ops/s
Iteration  13: 191453.678 ops/s
Iteration  14: 190875.597 ops/s
Iteration  15: 191049.283 ops/s
Iteration  16: 190780.310 ops/s
Iteration  17: 191866.015 ops/s
Iteration  18: 191526.591 ops/s
Iteration  19: 191926.108 ops/s
Iteration  20: 191933.197 ops/s
Iteration  21: 191716.765 ops/s
Iteration  22: 191219.333 ops/s
Iteration  23: 191065.185 ops/s
Iteration  24: 190756.384 ops/s
Iteration  25: 190892.459 ops/s
Iteration  26: 191369.063 ops/s
Iteration  27: 191725.143 ops/s
Iteration  28: 191670.931 ops/s
Iteration  29: 191705.811 ops/s
Iteration  30: 191324.241 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_163._Benchmark.benchmark_Cluster_163":
  191066.669 ±(99.9%) 425.672 ops/s [Average]
  (min, avg, max) = (189768.724, 191066.669, 191962.626), stdev = 637.125
  CI (99.9%): [190640.997, 191492.341] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_163._Benchmark.benchmark_Cluster_163  thrpt   30  191066.669 ± 425.672  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_164._Benchmark.benchmark_Cluster_164$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_164._Benchmark.benchmark_Cluster_164

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 87810.409 ops/s
# Warmup Iteration   2: 103676.581 ops/s
# Warmup Iteration   3: 104288.368 ops/s
# Warmup Iteration   4: 119767.166 ops/s
# Warmup Iteration   5: 145445.566 ops/s
# Warmup Iteration   6: 145307.206 ops/s
# Warmup Iteration   7: 145585.200 ops/s
# Warmup Iteration   8: 145192.929 ops/s
# Warmup Iteration   9: 143644.445 ops/s
# Warmup Iteration  10: 145703.101 ops/s
# Warmup Iteration  11: 145636.057 ops/s
# Warmup Iteration  12: 145172.745 ops/s
# Warmup Iteration  13: 145292.966 ops/s
# Warmup Iteration  14: 145319.723 ops/s
# Warmup Iteration  15: 145925.633 ops/s
# Warmup Iteration  16: 145816.820 ops/s
# Warmup Iteration  17: 150499.296 ops/s
# Warmup Iteration  18: 150470.603 ops/s
# Warmup Iteration  19: 127578.200 ops/s
# Warmup Iteration  20: 125526.792 ops/s
# Warmup Iteration  21: 151397.449 ops/s
# Warmup Iteration  22: 151432.554 ops/s
# Warmup Iteration  23: 150524.904 ops/s
# Warmup Iteration  24: 151224.028 ops/s
# Warmup Iteration  25: 151731.092 ops/s
# Warmup Iteration  26: 151464.404 ops/s
# Warmup Iteration  27: 151359.669 ops/s
# Warmup Iteration  28: 150671.930 ops/s
# Warmup Iteration  29: 151998.222 ops/s
# Warmup Iteration  30: 151673.932 ops/s
Iteration   1: 151922.413 ops/s
Iteration   2: 151489.089 ops/s
Iteration   3: 151686.119 ops/s
Iteration   4: 151384.866 ops/s
Iteration   5: 151086.641 ops/s
Iteration   6: 149775.455 ops/s
Iteration   7: 151549.816 ops/s
Iteration   8: 151414.653 ops/s
Iteration   9: 151248.294 ops/s
Iteration  10: 151010.485 ops/s
Iteration  11: 151241.491 ops/s
Iteration  12: 150106.152 ops/s
Iteration  13: 151469.326 ops/s
Iteration  14: 151003.807 ops/s
Iteration  15: 151378.414 ops/s
Iteration  16: 151176.333 ops/s
Iteration  17: 151070.742 ops/s
Iteration  18: 150728.391 ops/s
Iteration  19: 149826.141 ops/s
Iteration  20: 150201.969 ops/s
Iteration  21: 150070.152 ops/s
Iteration  22: 150068.440 ops/s
Iteration  23: 151547.646 ops/s
Iteration  24: 151874.112 ops/s
Iteration  25: 151223.846 ops/s
Iteration  26: 151461.434 ops/s
Iteration  27: 151316.798 ops/s
Iteration  28: 151672.044 ops/s
Iteration  29: 151715.419 ops/s
Iteration  30: 151219.096 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_164._Benchmark.benchmark_Cluster_164":
  151097.986 ±(99.9%) 411.116 ops/s [Average]
  (min, avg, max) = (149775.455, 151097.986, 151922.413), stdev = 615.338
  CI (99.9%): [150686.871, 151509.102] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_164._Benchmark.benchmark_Cluster_164  thrpt   30  151097.986 ± 411.116  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_165._Benchmark.benchmark_Cluster_165$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_165._Benchmark.benchmark_Cluster_165

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74494.307 ops/s
# Warmup Iteration   2: 80603.574 ops/s
# Warmup Iteration   3: 82180.000 ops/s
# Warmup Iteration   4: 96356.078 ops/s
# Warmup Iteration   5: 113776.889 ops/s
# Warmup Iteration   6: 113927.781 ops/s
# Warmup Iteration   7: 113733.167 ops/s
# Warmup Iteration   8: 113736.747 ops/s
# Warmup Iteration   9: 112695.703 ops/s
# Warmup Iteration  10: 114027.893 ops/s
# Warmup Iteration  11: 113272.412 ops/s
# Warmup Iteration  12: 112997.858 ops/s
# Warmup Iteration  13: 112830.539 ops/s
# Warmup Iteration  14: 113358.882 ops/s
# Warmup Iteration  15: 113314.105 ops/s
# Warmup Iteration  16: 113383.208 ops/s
# Warmup Iteration  17: 118942.893 ops/s
# Warmup Iteration  18: 118852.875 ops/s
# Warmup Iteration  19: 98364.254 ops/s
# Warmup Iteration  20: 101615.850 ops/s
# Warmup Iteration  21: 118927.271 ops/s
# Warmup Iteration  22: 118839.893 ops/s
# Warmup Iteration  23: 119252.162 ops/s
# Warmup Iteration  24: 119037.869 ops/s
# Warmup Iteration  25: 119139.216 ops/s
# Warmup Iteration  26: 119021.720 ops/s
# Warmup Iteration  27: 119822.469 ops/s
# Warmup Iteration  28: 118989.638 ops/s
# Warmup Iteration  29: 119411.044 ops/s
# Warmup Iteration  30: 119577.516 ops/s
Iteration   1: 119326.866 ops/s
Iteration   2: 119863.268 ops/s
Iteration   3: 118654.340 ops/s
Iteration   4: 118783.068 ops/s
Iteration   5: 119112.941 ops/s
Iteration   6: 119409.324 ops/s
Iteration   7: 119543.433 ops/s
Iteration   8: 119200.440 ops/s
Iteration   9: 118423.734 ops/s
Iteration  10: 119693.810 ops/s
Iteration  11: 119099.408 ops/s
Iteration  12: 119062.972 ops/s
Iteration  13: 119322.267 ops/s
Iteration  14: 119347.636 ops/s
Iteration  15: 118821.744 ops/s
Iteration  16: 119706.906 ops/s
Iteration  17: 119734.014 ops/s
Iteration  18: 119289.795 ops/s
Iteration  19: 119582.477 ops/s
Iteration  20: 119417.686 ops/s
Iteration  21: 119512.106 ops/s
Iteration  22: 119503.724 ops/s
Iteration  23: 119437.784 ops/s
Iteration  24: 119362.274 ops/s
Iteration  25: 119265.094 ops/s
Iteration  26: 118928.909 ops/s
Iteration  27: 119373.044 ops/s
Iteration  28: 119206.987 ops/s
Iteration  29: 119397.844 ops/s
Iteration  30: 119599.964 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_165._Benchmark.benchmark_Cluster_165":
  119299.462 ±(99.9%) 221.190 ops/s [Average]
  (min, avg, max) = (118423.734, 119299.462, 119863.268), stdev = 331.066
  CI (99.9%): [119078.272, 119520.652] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_165._Benchmark.benchmark_Cluster_165  thrpt   30  119299.462 ± 221.190  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_166._Benchmark.benchmark_Cluster_166$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_166._Benchmark.benchmark_Cluster_166

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 14931.328 ops/s
# Warmup Iteration   2: 17699.561 ops/s
# Warmup Iteration   3: 17629.037 ops/s
# Warmup Iteration   4: 17692.223 ops/s
# Warmup Iteration   5: 17636.755 ops/s
# Warmup Iteration   6: 18947.426 ops/s
# Warmup Iteration   7: 21394.591 ops/s
# Warmup Iteration   8: 21332.332 ops/s
# Warmup Iteration   9: 21324.662 ops/s
# Warmup Iteration  10: 21330.550 ops/s
# Warmup Iteration  11: 21321.064 ops/s
# Warmup Iteration  12: 21339.003 ops/s
# Warmup Iteration  13: 21362.822 ops/s
# Warmup Iteration  14: 21360.177 ops/s
# Warmup Iteration  15: 21145.382 ops/s
# Warmup Iteration  16: 21335.539 ops/s
# Warmup Iteration  17: 21432.477 ops/s
# Warmup Iteration  18: 21329.160 ops/s
# Warmup Iteration  19: 21310.876 ops/s
# Warmup Iteration  20: 21356.562 ops/s
# Warmup Iteration  21: 21416.245 ops/s
# Warmup Iteration  22: 21404.441 ops/s
# Warmup Iteration  23: 21403.050 ops/s
# Warmup Iteration  24: 21364.816 ops/s
# Warmup Iteration  25: 21335.056 ops/s
# Warmup Iteration  26: 21329.287 ops/s
# Warmup Iteration  27: 21333.745 ops/s
# Warmup Iteration  28: 21364.734 ops/s
# Warmup Iteration  29: 21319.651 ops/s
# Warmup Iteration  30: 21414.126 ops/s
Iteration   1: 21374.375 ops/s
Iteration   2: 21405.502 ops/s
Iteration   3: 21417.989 ops/s
Iteration   4: 21364.024 ops/s
Iteration   5: 21392.329 ops/s
Iteration   6: 20901.003 ops/s
Iteration   7: 17638.920 ops/s
Iteration   8: 17640.057 ops/s
Iteration   9: 17601.766 ops/s
Iteration  10: 19272.122 ops/s
Iteration  11: 21411.981 ops/s
Iteration  12: 21388.962 ops/s
Iteration  13: 21382.491 ops/s
Iteration  14: 21433.270 ops/s
Iteration  15: 21365.343 ops/s
Iteration  16: 21389.906 ops/s
Iteration  17: 21368.088 ops/s
Iteration  18: 21380.974 ops/s
Iteration  19: 21350.106 ops/s
Iteration  20: 21271.594 ops/s
Iteration  21: 21327.075 ops/s
Iteration  22: 21320.625 ops/s
Iteration  23: 21348.085 ops/s
Iteration  24: 21411.286 ops/s
Iteration  25: 21387.785 ops/s
Iteration  26: 21361.408 ops/s
Iteration  27: 21359.703 ops/s
Iteration  28: 21400.974 ops/s
Iteration  29: 21417.009 ops/s
Iteration  30: 21374.644 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_166._Benchmark.benchmark_Cluster_166":
  20915.313 ±(99.9%) 789.382 ops/s [Average]
  (min, avg, max) = (17601.766, 20915.313, 21433.270), stdev = 1181.510
  CI (99.9%): [20125.931, 21704.695] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_166._Benchmark.benchmark_Cluster_166  thrpt   30  20915.313 ± 789.382  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_167._Benchmark.benchmark_Cluster_167$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_167._Benchmark.benchmark_Cluster_167

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 28902.921 ops/s
# Warmup Iteration   2: 64515.379 ops/s
# Warmup Iteration   3: 146626.814 ops/s
# Warmup Iteration   4: 159295.094 ops/s
# Warmup Iteration   5: 161472.121 ops/s
# Warmup Iteration   6: 161651.888 ops/s
# Warmup Iteration   7: 110572.676 ops/s
# Warmup Iteration   8: 161922.445 ops/s
# Warmup Iteration   9: 161419.074 ops/s
# Warmup Iteration  10: 161665.494 ops/s
# Warmup Iteration  11: 161441.657 ops/s
# Warmup Iteration  12: 161528.927 ops/s
# Warmup Iteration  13: 161808.084 ops/s
# Warmup Iteration  14: 161512.064 ops/s
# Warmup Iteration  15: 162091.873 ops/s
# Warmup Iteration  16: 161213.213 ops/s
# Warmup Iteration  17: 161168.515 ops/s
# Warmup Iteration  18: 161226.307 ops/s
# Warmup Iteration  19: 160966.823 ops/s
# Warmup Iteration  20: 161158.163 ops/s
# Warmup Iteration  21: 160931.068 ops/s
# Warmup Iteration  22: 160839.632 ops/s
# Warmup Iteration  23: 160596.790 ops/s
# Warmup Iteration  24: 160668.302 ops/s
# Warmup Iteration  25: 160162.171 ops/s
# Warmup Iteration  26: 159807.089 ops/s
# Warmup Iteration  27: 160885.388 ops/s
# Warmup Iteration  28: 160937.874 ops/s
# Warmup Iteration  29: 160890.824 ops/s
# Warmup Iteration  30: 160498.996 ops/s
Iteration   1: 160637.756 ops/s
Iteration   2: 160973.992 ops/s
Iteration   3: 160265.524 ops/s
Iteration   4: 160441.037 ops/s
Iteration   5: 160850.861 ops/s
Iteration   6: 160607.939 ops/s
Iteration   7: 160285.688 ops/s
Iteration   8: 161124.071 ops/s
Iteration   9: 160655.326 ops/s
Iteration  10: 160849.643 ops/s
Iteration  11: 160817.040 ops/s
Iteration  12: 160167.699 ops/s
Iteration  13: 161364.870 ops/s
Iteration  14: 159333.839 ops/s
Iteration  15: 161428.232 ops/s
Iteration  16: 161246.487 ops/s
Iteration  17: 161328.542 ops/s
Iteration  18: 160640.038 ops/s
Iteration  19: 160953.602 ops/s
Iteration  20: 160815.540 ops/s
Iteration  21: 160729.714 ops/s
Iteration  22: 160757.337 ops/s
Iteration  23: 160202.470 ops/s
Iteration  24: 160331.293 ops/s
Iteration  25: 159881.481 ops/s
Iteration  26: 159822.815 ops/s
Iteration  27: 160452.815 ops/s
Iteration  28: 160754.335 ops/s
Iteration  29: 160976.672 ops/s
Iteration  30: 160443.723 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_167._Benchmark.benchmark_Cluster_167":
  160638.013 ±(99.9%) 318.023 ops/s [Average]
  (min, avg, max) = (159333.839, 160638.013, 161428.232), stdev = 476.002
  CI (99.9%): [160319.990, 160956.036] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_167._Benchmark.benchmark_Cluster_167  thrpt   30  160638.013 ± 318.023  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_168._Benchmark.benchmark_Cluster_168$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_168._Benchmark.benchmark_Cluster_168

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54484.230 ops/s
# Warmup Iteration   2: 83248.020 ops/s
# Warmup Iteration   3: 98935.862 ops/s
# Warmup Iteration   4: 139739.838 ops/s
# Warmup Iteration   5: 139210.794 ops/s
# Warmup Iteration   6: 137898.611 ops/s
# Warmup Iteration   7: 138898.926 ops/s
# Warmup Iteration   8: 139387.189 ops/s
# Warmup Iteration   9: 139199.100 ops/s
# Warmup Iteration  10: 139087.575 ops/s
# Warmup Iteration  11: 139662.350 ops/s
# Warmup Iteration  12: 105541.045 ops/s
# Warmup Iteration  13: 129241.438 ops/s
# Warmup Iteration  14: 139707.268 ops/s
# Warmup Iteration  15: 139617.701 ops/s
# Warmup Iteration  16: 139714.039 ops/s
# Warmup Iteration  17: 139252.796 ops/s
# Warmup Iteration  18: 139690.243 ops/s
# Warmup Iteration  19: 139560.464 ops/s
# Warmup Iteration  20: 139742.102 ops/s
# Warmup Iteration  21: 139774.485 ops/s
# Warmup Iteration  22: 140024.705 ops/s
# Warmup Iteration  23: 139760.242 ops/s
# Warmup Iteration  24: 139463.520 ops/s
# Warmup Iteration  25: 139821.911 ops/s
# Warmup Iteration  26: 139524.336 ops/s
# Warmup Iteration  27: 139480.234 ops/s
# Warmup Iteration  28: 139515.824 ops/s
# Warmup Iteration  29: 140078.605 ops/s
# Warmup Iteration  30: 139716.616 ops/s
Iteration   1: 139578.068 ops/s
Iteration   2: 139521.160 ops/s
Iteration   3: 138782.766 ops/s
Iteration   4: 138644.308 ops/s
Iteration   5: 139721.211 ops/s
Iteration   6: 139724.914 ops/s
Iteration   7: 138761.316 ops/s
Iteration   8: 139346.690 ops/s
Iteration   9: 138134.779 ops/s
Iteration  10: 138106.745 ops/s
Iteration  11: 138520.236 ops/s
Iteration  12: 138915.133 ops/s
Iteration  13: 139254.854 ops/s
Iteration  14: 138342.718 ops/s
Iteration  15: 138628.322 ops/s
Iteration  16: 138814.601 ops/s
Iteration  17: 139292.465 ops/s
Iteration  18: 138671.975 ops/s
Iteration  19: 138619.448 ops/s
Iteration  20: 139844.890 ops/s
Iteration  21: 139961.366 ops/s
Iteration  22: 139967.021 ops/s
Iteration  23: 139787.520 ops/s
Iteration  24: 139837.168 ops/s
Iteration  25: 139528.677 ops/s
Iteration  26: 138745.781 ops/s
Iteration  27: 137968.648 ops/s
Iteration  28: 137738.459 ops/s
Iteration  29: 138223.562 ops/s
Iteration  30: 139036.979 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_168._Benchmark.benchmark_Cluster_168":
  139000.726 ±(99.9%) 434.961 ops/s [Average]
  (min, avg, max) = (137738.459, 139000.726, 139967.021), stdev = 651.030
  CI (99.9%): [138565.765, 139435.687] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_168._Benchmark.benchmark_Cluster_168  thrpt   30  139000.726 ± 434.961  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_169._Benchmark.benchmark_Cluster_169$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_169._Benchmark.benchmark_Cluster_169

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69427.883 ops/s
# Warmup Iteration   2: 105395.425 ops/s
# Warmup Iteration   3: 151189.164 ops/s
# Warmup Iteration   4: 193398.278 ops/s
# Warmup Iteration   5: 192329.818 ops/s
# Warmup Iteration   6: 194436.940 ops/s
# Warmup Iteration   7: 192442.918 ops/s
# Warmup Iteration   8: 191624.145 ops/s
# Warmup Iteration   9: 191176.245 ops/s
# Warmup Iteration  10: 159149.012 ops/s
# Warmup Iteration  11: 162941.296 ops/s
# Warmup Iteration  12: 192082.643 ops/s
# Warmup Iteration  13: 192036.398 ops/s
# Warmup Iteration  14: 193670.116 ops/s
# Warmup Iteration  15: 193060.096 ops/s
# Warmup Iteration  16: 191847.409 ops/s
# Warmup Iteration  17: 192876.075 ops/s
# Warmup Iteration  18: 191924.495 ops/s
# Warmup Iteration  19: 191393.028 ops/s
# Warmup Iteration  20: 191999.828 ops/s
# Warmup Iteration  21: 192888.540 ops/s
# Warmup Iteration  22: 192709.089 ops/s
# Warmup Iteration  23: 192078.224 ops/s
# Warmup Iteration  24: 193329.337 ops/s
# Warmup Iteration  25: 192773.418 ops/s
# Warmup Iteration  26: 194625.874 ops/s
# Warmup Iteration  27: 193663.591 ops/s
# Warmup Iteration  28: 193296.425 ops/s
# Warmup Iteration  29: 192692.310 ops/s
# Warmup Iteration  30: 192221.044 ops/s
Iteration   1: 192805.481 ops/s
Iteration   2: 194117.769 ops/s
Iteration   3: 193978.039 ops/s
Iteration   4: 194290.654 ops/s
Iteration   5: 193116.426 ops/s
Iteration   6: 193527.872 ops/s
Iteration   7: 194095.414 ops/s
Iteration   8: 194093.662 ops/s
Iteration   9: 193761.619 ops/s
Iteration  10: 195034.626 ops/s
Iteration  11: 195041.665 ops/s
Iteration  12: 195433.359 ops/s
Iteration  13: 194801.759 ops/s
Iteration  14: 194368.863 ops/s
Iteration  15: 194060.801 ops/s
Iteration  16: 194275.267 ops/s
Iteration  17: 194253.432 ops/s
Iteration  18: 194066.958 ops/s
Iteration  19: 193873.593 ops/s
Iteration  20: 194616.503 ops/s
Iteration  21: 194760.041 ops/s
Iteration  22: 193575.319 ops/s
Iteration  23: 193891.077 ops/s
Iteration  24: 193720.568 ops/s
Iteration  25: 192684.270 ops/s
Iteration  26: 192655.681 ops/s
Iteration  27: 193985.724 ops/s
Iteration  28: 193898.847 ops/s
Iteration  29: 194648.914 ops/s
Iteration  30: 193386.989 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_169._Benchmark.benchmark_Cluster_169":
  194027.373 ±(99.9%) 452.597 ops/s [Average]
  (min, avg, max) = (192655.681, 194027.373, 195433.359), stdev = 677.427
  CI (99.9%): [193574.776, 194479.970] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_169._Benchmark.benchmark_Cluster_169  thrpt   30  194027.373 ± 452.597  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_17._Benchmark.benchmark_Cluster_17$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_17._Benchmark.benchmark_Cluster_17

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52045.885 ops/s
# Warmup Iteration   2: 67510.380 ops/s
# Warmup Iteration   3: 145164.801 ops/s
# Warmup Iteration   4: 146811.964 ops/s
# Warmup Iteration   5: 148474.760 ops/s
# Warmup Iteration   6: 147832.910 ops/s
# Warmup Iteration   7: 147564.036 ops/s
# Warmup Iteration   8: 101365.689 ops/s
# Warmup Iteration   9: 147053.435 ops/s
# Warmup Iteration  10: 148121.094 ops/s
# Warmup Iteration  11: 148957.588 ops/s
# Warmup Iteration  12: 148782.202 ops/s
# Warmup Iteration  13: 149401.472 ops/s
# Warmup Iteration  14: 148447.815 ops/s
# Warmup Iteration  15: 148912.737 ops/s
# Warmup Iteration  16: 148514.132 ops/s
# Warmup Iteration  17: 151525.970 ops/s
# Warmup Iteration  18: 152078.410 ops/s
# Warmup Iteration  19: 152127.135 ops/s
# Warmup Iteration  20: 152481.042 ops/s
# Warmup Iteration  21: 152547.396 ops/s
# Warmup Iteration  22: 151903.750 ops/s
# Warmup Iteration  23: 151304.482 ops/s
# Warmup Iteration  24: 150190.724 ops/s
# Warmup Iteration  25: 151977.108 ops/s
# Warmup Iteration  26: 151558.630 ops/s
# Warmup Iteration  27: 152107.672 ops/s
# Warmup Iteration  28: 151528.864 ops/s
# Warmup Iteration  29: 152560.880 ops/s
# Warmup Iteration  30: 151532.348 ops/s
Iteration   1: 151773.268 ops/s
Iteration   2: 151939.435 ops/s
Iteration   3: 150270.463 ops/s
Iteration   4: 151894.338 ops/s
Iteration   5: 151702.083 ops/s
Iteration   6: 150832.481 ops/s
Iteration   7: 151881.242 ops/s
Iteration   8: 151080.174 ops/s
Iteration   9: 151884.804 ops/s
Iteration  10: 151456.380 ops/s
Iteration  11: 151633.170 ops/s
Iteration  12: 151323.247 ops/s
Iteration  13: 151473.618 ops/s
Iteration  14: 151571.524 ops/s
Iteration  15: 151276.053 ops/s
Iteration  16: 151314.731 ops/s
Iteration  17: 151481.845 ops/s
Iteration  18: 151136.969 ops/s
Iteration  19: 152500.545 ops/s
Iteration  20: 152515.253 ops/s
Iteration  21: 152536.330 ops/s
Iteration  22: 152142.821 ops/s
Iteration  23: 152082.825 ops/s
Iteration  24: 151688.795 ops/s
Iteration  25: 152464.050 ops/s
Iteration  26: 152544.896 ops/s
Iteration  27: 151818.918 ops/s
Iteration  28: 151083.499 ops/s
Iteration  29: 151920.494 ops/s
Iteration  30: 151804.734 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_17._Benchmark.benchmark_Cluster_17":
  151700.966 ±(99.9%) 359.859 ops/s [Average]
  (min, avg, max) = (150270.463, 151700.966, 152544.896), stdev = 538.620
  CI (99.9%): [151341.107, 152060.825] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_17._Benchmark.benchmark_Cluster_17  thrpt   30  151700.966 ± 359.859  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_170._Benchmark.benchmark_Cluster_170$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_170._Benchmark.benchmark_Cluster_170

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 90408.400 ops/s
# Warmup Iteration   2: 102189.711 ops/s
# Warmup Iteration   3: 105570.207 ops/s
# Warmup Iteration   4: 107147.603 ops/s
# Warmup Iteration   5: 143817.009 ops/s
# Warmup Iteration   6: 144270.447 ops/s
# Warmup Iteration   7: 142842.050 ops/s
# Warmup Iteration   8: 144371.061 ops/s
# Warmup Iteration   9: 144783.550 ops/s
# Warmup Iteration  10: 143007.672 ops/s
# Warmup Iteration  11: 143730.053 ops/s
# Warmup Iteration  12: 144034.722 ops/s
# Warmup Iteration  13: 144350.214 ops/s
# Warmup Iteration  14: 144411.713 ops/s
# Warmup Iteration  15: 143182.773 ops/s
# Warmup Iteration  16: 143387.236 ops/s
# Warmup Iteration  17: 151169.573 ops/s
# Warmup Iteration  18: 150933.061 ops/s
# Warmup Iteration  19: 149968.330 ops/s
# Warmup Iteration  20: 149972.889 ops/s
# Warmup Iteration  21: 144241.287 ops/s
# Warmup Iteration  22: 107767.085 ops/s
# Warmup Iteration  23: 144970.907 ops/s
# Warmup Iteration  24: 151179.767 ops/s
# Warmup Iteration  25: 152081.397 ops/s
# Warmup Iteration  26: 151052.686 ops/s
# Warmup Iteration  27: 151281.929 ops/s
# Warmup Iteration  28: 151127.841 ops/s
# Warmup Iteration  29: 150490.467 ops/s
# Warmup Iteration  30: 150502.245 ops/s
Iteration   1: 149913.181 ops/s
Iteration   2: 151546.237 ops/s
Iteration   3: 151421.335 ops/s
Iteration   4: 151540.191 ops/s
Iteration   5: 151572.180 ops/s
Iteration   6: 151246.548 ops/s
Iteration   7: 152081.698 ops/s
Iteration   8: 151426.062 ops/s
Iteration   9: 151741.306 ops/s
Iteration  10: 150683.152 ops/s
Iteration  11: 150853.330 ops/s
Iteration  12: 151675.945 ops/s
Iteration  13: 150563.159 ops/s
Iteration  14: 151574.576 ops/s
Iteration  15: 149898.856 ops/s
Iteration  16: 150547.211 ops/s
Iteration  17: 151227.357 ops/s
Iteration  18: 151368.827 ops/s
Iteration  19: 151052.601 ops/s
Iteration  20: 150375.376 ops/s
Iteration  21: 149361.991 ops/s
Iteration  22: 150061.113 ops/s
Iteration  23: 150241.110 ops/s
Iteration  24: 150140.295 ops/s
Iteration  25: 149161.566 ops/s
Iteration  26: 150378.237 ops/s
Iteration  27: 149911.413 ops/s
Iteration  28: 151035.968 ops/s
Iteration  29: 151414.426 ops/s
Iteration  30: 150109.662 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_170._Benchmark.benchmark_Cluster_170":
  150804.164 ±(99.9%) 511.270 ops/s [Average]
  (min, avg, max) = (149161.566, 150804.164, 152081.698), stdev = 765.245
  CI (99.9%): [150292.894, 151315.433] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_170._Benchmark.benchmark_Cluster_170  thrpt   30  150804.164 ± 511.270  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_171._Benchmark.benchmark_Cluster_171$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_171._Benchmark.benchmark_Cluster_171

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43794.219 ops/s
# Warmup Iteration   2: 62330.578 ops/s
# Warmup Iteration   3: 63231.256 ops/s
# Warmup Iteration   4: 79977.840 ops/s
# Warmup Iteration   5: 94541.809 ops/s
# Warmup Iteration   6: 93188.251 ops/s
# Warmup Iteration   7: 93984.511 ops/s
# Warmup Iteration   8: 92661.392 ops/s
# Warmup Iteration   9: 93458.232 ops/s
# Warmup Iteration  10: 93466.857 ops/s
# Warmup Iteration  11: 93601.403 ops/s
# Warmup Iteration  12: 93674.975 ops/s
# Warmup Iteration  13: 94336.874 ops/s
# Warmup Iteration  14: 93749.503 ops/s
# Warmup Iteration  15: 93768.694 ops/s
# Warmup Iteration  16: 93993.696 ops/s
# Warmup Iteration  17: 75404.354 ops/s
# Warmup Iteration  18: 84251.911 ops/s
# Warmup Iteration  19: 95495.358 ops/s
# Warmup Iteration  20: 95531.410 ops/s
# Warmup Iteration  21: 95893.064 ops/s
# Warmup Iteration  22: 94577.360 ops/s
# Warmup Iteration  23: 95847.867 ops/s
# Warmup Iteration  24: 96337.472 ops/s
# Warmup Iteration  25: 95278.381 ops/s
# Warmup Iteration  26: 95921.700 ops/s
# Warmup Iteration  27: 95820.000 ops/s
# Warmup Iteration  28: 96229.591 ops/s
# Warmup Iteration  29: 95667.512 ops/s
# Warmup Iteration  30: 94946.146 ops/s
Iteration   1: 94788.168 ops/s
Iteration   2: 94729.637 ops/s
Iteration   3: 94398.349 ops/s
Iteration   4: 94288.805 ops/s
Iteration   5: 93663.151 ops/s
Iteration   6: 95071.990 ops/s
Iteration   7: 94661.391 ops/s
Iteration   8: 93674.179 ops/s
Iteration   9: 94724.024 ops/s
Iteration  10: 94682.460 ops/s
Iteration  11: 94638.059 ops/s
Iteration  12: 94888.505 ops/s
Iteration  13: 95663.705 ops/s
Iteration  14: 95571.809 ops/s
Iteration  15: 95184.625 ops/s
Iteration  16: 96172.806 ops/s
Iteration  17: 95563.711 ops/s
Iteration  18: 94833.020 ops/s
Iteration  19: 94447.199 ops/s
Iteration  20: 94010.024 ops/s
Iteration  21: 94112.624 ops/s
Iteration  22: 95068.085 ops/s
Iteration  23: 95182.773 ops/s
Iteration  24: 94903.986 ops/s
Iteration  25: 95320.915 ops/s
Iteration  26: 95472.144 ops/s
Iteration  27: 94655.346 ops/s
Iteration  28: 93746.116 ops/s
Iteration  29: 94558.656 ops/s
Iteration  30: 94475.105 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_171._Benchmark.benchmark_Cluster_171":
  94771.712 ±(99.9%) 402.740 ops/s [Average]
  (min, avg, max) = (93663.151, 94771.712, 96172.806), stdev = 602.803
  CI (99.9%): [94368.972, 95174.453] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_171._Benchmark.benchmark_Cluster_171  thrpt   30  94771.712 ± 402.740  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_172._Benchmark.benchmark_Cluster_172$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_172._Benchmark.benchmark_Cluster_172

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 19969.238 ops/s
# Warmup Iteration   2: 27470.015 ops/s
# Warmup Iteration   3: 27537.486 ops/s
# Warmup Iteration   4: 27910.309 ops/s
# Warmup Iteration   5: 27730.093 ops/s
# Warmup Iteration   6: 29709.079 ops/s
# Warmup Iteration   7: 34323.618 ops/s
# Warmup Iteration   8: 34295.588 ops/s
# Warmup Iteration   9: 34206.568 ops/s
# Warmup Iteration  10: 34273.136 ops/s
# Warmup Iteration  11: 34179.667 ops/s
# Warmup Iteration  12: 34030.819 ops/s
# Warmup Iteration  13: 33829.845 ops/s
# Warmup Iteration  14: 33980.442 ops/s
# Warmup Iteration  15: 33378.196 ops/s
# Warmup Iteration  16: 33802.153 ops/s
# Warmup Iteration  17: 34043.996 ops/s
# Warmup Iteration  18: 33768.457 ops/s
# Warmup Iteration  19: 33786.315 ops/s
# Warmup Iteration  20: 33980.922 ops/s
# Warmup Iteration  21: 34032.226 ops/s
# Warmup Iteration  22: 34421.524 ops/s
# Warmup Iteration  23: 34420.934 ops/s
# Warmup Iteration  24: 33960.267 ops/s
# Warmup Iteration  25: 34192.633 ops/s
# Warmup Iteration  26: 34313.434 ops/s
# Warmup Iteration  27: 34400.243 ops/s
# Warmup Iteration  28: 33832.171 ops/s
# Warmup Iteration  29: 33859.224 ops/s
# Warmup Iteration  30: 33847.090 ops/s
Iteration   1: 33773.199 ops/s
Iteration   2: 33899.141 ops/s
Iteration   3: 34175.033 ops/s
Iteration   4: 34215.433 ops/s
Iteration   5: 33328.436 ops/s
Iteration   6: 27975.936 ops/s
Iteration   7: 27712.624 ops/s
Iteration   8: 27938.077 ops/s
Iteration   9: 31258.444 ops/s
Iteration  10: 34422.245 ops/s
Iteration  11: 34391.661 ops/s
Iteration  12: 34390.060 ops/s
Iteration  13: 34326.939 ops/s
Iteration  14: 34237.123 ops/s
Iteration  15: 34364.889 ops/s
Iteration  16: 34355.648 ops/s
Iteration  17: 34302.755 ops/s
Iteration  18: 34327.660 ops/s
Iteration  19: 34070.364 ops/s
Iteration  20: 34127.696 ops/s
Iteration  21: 34059.926 ops/s
Iteration  22: 34353.883 ops/s
Iteration  23: 34151.618 ops/s
Iteration  24: 33754.481 ops/s
Iteration  25: 34135.302 ops/s
Iteration  26: 34237.680 ops/s
Iteration  27: 34288.361 ops/s
Iteration  28: 34281.397 ops/s
Iteration  29: 34238.043 ops/s
Iteration  30: 34233.105 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_172._Benchmark.benchmark_Cluster_172":
  33444.239 ±(99.9%) 1319.383 ops/s [Average]
  (min, avg, max) = (27712.624, 33444.239, 34422.245), stdev = 1974.790
  CI (99.9%): [32124.856, 34763.622] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
Cluster_172._Benchmark.benchmark_Cluster_172  thrpt   30  33444.239 ± 1319.383  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_173._Benchmark.benchmark_Cluster_173$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_173._Benchmark.benchmark_Cluster_173

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 20790.620 ops/s
# Warmup Iteration   2: 37364.147 ops/s
# Warmup Iteration   3: 38027.710 ops/s
# Warmup Iteration   4: 50180.804 ops/s
# Warmup Iteration   5: 57886.098 ops/s
# Warmup Iteration   6: 57834.938 ops/s
# Warmup Iteration   7: 58481.410 ops/s
# Warmup Iteration   8: 57919.821 ops/s
# Warmup Iteration   9: 58148.377 ops/s
# Warmup Iteration  10: 58055.104 ops/s
# Warmup Iteration  11: 58840.548 ops/s
# Warmup Iteration  12: 58162.012 ops/s
# Warmup Iteration  13: 58125.490 ops/s
# Warmup Iteration  14: 58463.211 ops/s
# Warmup Iteration  15: 58668.312 ops/s
# Warmup Iteration  16: 41022.311 ops/s
# Warmup Iteration  17: 57647.354 ops/s
# Warmup Iteration  18: 58286.419 ops/s
# Warmup Iteration  19: 58867.896 ops/s
# Warmup Iteration  20: 58969.247 ops/s
# Warmup Iteration  21: 59105.236 ops/s
# Warmup Iteration  22: 59220.149 ops/s
# Warmup Iteration  23: 59001.621 ops/s
# Warmup Iteration  24: 58095.881 ops/s
# Warmup Iteration  25: 58418.501 ops/s
# Warmup Iteration  26: 58866.639 ops/s
# Warmup Iteration  27: 58466.487 ops/s
# Warmup Iteration  28: 58487.497 ops/s
# Warmup Iteration  29: 58618.665 ops/s
# Warmup Iteration  30: 58659.532 ops/s
Iteration   1: 58779.467 ops/s
Iteration   2: 58328.302 ops/s
Iteration   3: 58706.298 ops/s
Iteration   4: 58840.050 ops/s
Iteration   5: 58321.814 ops/s
Iteration   6: 58850.189 ops/s
Iteration   7: 58289.966 ops/s
Iteration   8: 57954.937 ops/s
Iteration   9: 58514.387 ops/s
Iteration  10: 58380.431 ops/s
Iteration  11: 57932.306 ops/s
Iteration  12: 58501.865 ops/s
Iteration  13: 59011.714 ops/s
Iteration  14: 59037.720 ops/s
Iteration  15: 58985.581 ops/s
Iteration  16: 59095.479 ops/s
Iteration  17: 58409.942 ops/s
Iteration  18: 58300.149 ops/s
Iteration  19: 57688.699 ops/s
Iteration  20: 58589.109 ops/s
Iteration  21: 58659.915 ops/s
Iteration  22: 58835.922 ops/s
Iteration  23: 59048.833 ops/s
Iteration  24: 58191.970 ops/s
Iteration  25: 57949.240 ops/s
Iteration  26: 58586.436 ops/s
Iteration  27: 59143.987 ops/s
Iteration  28: 58617.091 ops/s
Iteration  29: 59141.621 ops/s
Iteration  30: 58505.765 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_173._Benchmark.benchmark_Cluster_173":
  58573.306 ±(99.9%) 262.538 ops/s [Average]
  (min, avg, max) = (57688.699, 58573.306, 59143.987), stdev = 392.954
  CI (99.9%): [58310.768, 58835.844] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_173._Benchmark.benchmark_Cluster_173  thrpt   30  58573.306 ± 262.538  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_174._Benchmark.benchmark_Cluster_174$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_174._Benchmark.benchmark_Cluster_174

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 19807.553 ops/s
# Warmup Iteration   2: 55784.489 ops/s
# Warmup Iteration   3: 98707.287 ops/s
# Warmup Iteration   4: 120874.237 ops/s
# Warmup Iteration   5: 125087.652 ops/s
# Warmup Iteration   6: 123850.418 ops/s
# Warmup Iteration   7: 121937.301 ops/s
# Warmup Iteration   8: 83417.979 ops/s
# Warmup Iteration   9: 122973.391 ops/s
# Warmup Iteration  10: 122671.900 ops/s
# Warmup Iteration  11: 122818.449 ops/s
# Warmup Iteration  12: 123400.431 ops/s
# Warmup Iteration  13: 123349.713 ops/s
# Warmup Iteration  14: 123241.238 ops/s
# Warmup Iteration  15: 123404.395 ops/s
# Warmup Iteration  16: 122217.940 ops/s
# Warmup Iteration  17: 122250.462 ops/s
# Warmup Iteration  18: 123149.697 ops/s
# Warmup Iteration  19: 123285.327 ops/s
# Warmup Iteration  20: 123029.616 ops/s
# Warmup Iteration  21: 123455.455 ops/s
# Warmup Iteration  22: 123433.545 ops/s
# Warmup Iteration  23: 123590.761 ops/s
# Warmup Iteration  24: 122010.039 ops/s
# Warmup Iteration  25: 123950.384 ops/s
# Warmup Iteration  26: 123217.469 ops/s
# Warmup Iteration  27: 122628.902 ops/s
# Warmup Iteration  28: 122800.476 ops/s
# Warmup Iteration  29: 123405.074 ops/s
# Warmup Iteration  30: 123625.012 ops/s
Iteration   1: 124088.941 ops/s
Iteration   2: 124612.453 ops/s
Iteration   3: 124273.827 ops/s
Iteration   4: 124006.896 ops/s
Iteration   5: 124289.141 ops/s
Iteration   6: 123061.854 ops/s
Iteration   7: 123250.109 ops/s
Iteration   8: 122927.778 ops/s
Iteration   9: 123129.796 ops/s
Iteration  10: 123271.830 ops/s
Iteration  11: 123838.559 ops/s
Iteration  12: 123494.712 ops/s
Iteration  13: 122657.452 ops/s
Iteration  14: 123964.270 ops/s
Iteration  15: 123596.969 ops/s
Iteration  16: 123343.757 ops/s
Iteration  17: 122897.696 ops/s
Iteration  18: 122494.289 ops/s
Iteration  19: 123180.886 ops/s
Iteration  20: 123025.859 ops/s
Iteration  21: 123642.399 ops/s
Iteration  22: 123693.221 ops/s
Iteration  23: 123120.893 ops/s
Iteration  24: 123086.789 ops/s
Iteration  25: 123216.286 ops/s
Iteration  26: 123289.622 ops/s
Iteration  27: 121716.667 ops/s
Iteration  28: 123058.414 ops/s
Iteration  29: 123267.138 ops/s
Iteration  30: 122818.855 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_174._Benchmark.benchmark_Cluster_174":
  123343.912 ±(99.9%) 397.552 ops/s [Average]
  (min, avg, max) = (121716.667, 123343.912, 124612.453), stdev = 595.037
  CI (99.9%): [122946.360, 123741.464] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_174._Benchmark.benchmark_Cluster_174  thrpt   30  123343.912 ± 397.552  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_175._Benchmark.benchmark_Cluster_175$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_175._Benchmark.benchmark_Cluster_175

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93567.516 ops/s
# Warmup Iteration   2: 99975.573 ops/s
# Warmup Iteration   3: 100198.065 ops/s
# Warmup Iteration   4: 120135.743 ops/s
# Warmup Iteration   5: 140315.731 ops/s
# Warmup Iteration   6: 138997.408 ops/s
# Warmup Iteration   7: 138725.426 ops/s
# Warmup Iteration   8: 138908.171 ops/s
# Warmup Iteration   9: 136695.409 ops/s
# Warmup Iteration  10: 138244.702 ops/s
# Warmup Iteration  11: 137891.629 ops/s
# Warmup Iteration  12: 137499.435 ops/s
# Warmup Iteration  13: 138025.531 ops/s
# Warmup Iteration  14: 139468.535 ops/s
# Warmup Iteration  15: 139751.578 ops/s
# Warmup Iteration  16: 139051.824 ops/s
# Warmup Iteration  17: 146521.400 ops/s
# Warmup Iteration  18: 146360.365 ops/s
# Warmup Iteration  19: 112447.865 ops/s
# Warmup Iteration  20: 134751.524 ops/s
# Warmup Iteration  21: 146308.942 ops/s
# Warmup Iteration  22: 146945.372 ops/s
# Warmup Iteration  23: 146334.498 ops/s
# Warmup Iteration  24: 146504.908 ops/s
# Warmup Iteration  25: 146696.695 ops/s
# Warmup Iteration  26: 145769.212 ops/s
# Warmup Iteration  27: 145602.004 ops/s
# Warmup Iteration  28: 147016.227 ops/s
# Warmup Iteration  29: 146823.894 ops/s
# Warmup Iteration  30: 146845.924 ops/s
Iteration   1: 145914.976 ops/s
Iteration   2: 146658.442 ops/s
Iteration   3: 146424.001 ops/s
Iteration   4: 146267.618 ops/s
Iteration   5: 147476.141 ops/s
Iteration   6: 147046.384 ops/s
Iteration   7: 147182.087 ops/s
Iteration   8: 147024.438 ops/s
Iteration   9: 147401.294 ops/s
Iteration  10: 147664.271 ops/s
Iteration  11: 147134.928 ops/s
Iteration  12: 146765.411 ops/s
Iteration  13: 148006.909 ops/s
Iteration  14: 147479.188 ops/s
Iteration  15: 147557.363 ops/s
Iteration  16: 147939.286 ops/s
Iteration  17: 147434.036 ops/s
Iteration  18: 147868.894 ops/s
Iteration  19: 147850.530 ops/s
Iteration  20: 147431.526 ops/s
Iteration  21: 147598.522 ops/s
Iteration  22: 147336.559 ops/s
Iteration  23: 147336.503 ops/s
Iteration  24: 147064.434 ops/s
Iteration  25: 147256.288 ops/s
Iteration  26: 146763.058 ops/s
Iteration  27: 145225.449 ops/s
Iteration  28: 146088.702 ops/s
Iteration  29: 146754.907 ops/s
Iteration  30: 147264.155 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_175._Benchmark.benchmark_Cluster_175":
  147107.210 ±(99.9%) 427.348 ops/s [Average]
  (min, avg, max) = (145225.449, 147107.210, 148006.909), stdev = 639.635
  CI (99.9%): [146679.862, 147534.558] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_175._Benchmark.benchmark_Cluster_175  thrpt   30  147107.210 ± 427.348  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_176._Benchmark.benchmark_Cluster_176$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_176._Benchmark.benchmark_Cluster_176

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96426.616 ops/s
# Warmup Iteration   2: 104488.126 ops/s
# Warmup Iteration   3: 105099.241 ops/s
# Warmup Iteration   4: 119672.948 ops/s
# Warmup Iteration   5: 143674.462 ops/s
# Warmup Iteration   6: 142173.211 ops/s
# Warmup Iteration   7: 142632.819 ops/s
# Warmup Iteration   8: 140938.724 ops/s
# Warmup Iteration   9: 140387.589 ops/s
# Warmup Iteration  10: 142628.837 ops/s
# Warmup Iteration  11: 142185.031 ops/s
# Warmup Iteration  12: 141377.553 ops/s
# Warmup Iteration  13: 142882.139 ops/s
# Warmup Iteration  14: 141821.322 ops/s
# Warmup Iteration  15: 142470.334 ops/s
# Warmup Iteration  16: 141584.266 ops/s
# Warmup Iteration  17: 150117.868 ops/s
# Warmup Iteration  18: 149573.354 ops/s
# Warmup Iteration  19: 149601.253 ops/s
# Warmup Iteration  20: 113604.142 ops/s
# Warmup Iteration  21: 139058.908 ops/s
# Warmup Iteration  22: 149943.609 ops/s
# Warmup Iteration  23: 148500.016 ops/s
# Warmup Iteration  24: 150407.344 ops/s
# Warmup Iteration  25: 149290.483 ops/s
# Warmup Iteration  26: 149261.023 ops/s
# Warmup Iteration  27: 149640.218 ops/s
# Warmup Iteration  28: 148963.599 ops/s
# Warmup Iteration  29: 150621.569 ops/s
# Warmup Iteration  30: 150860.125 ops/s
Iteration   1: 150129.984 ops/s
Iteration   2: 149998.565 ops/s
Iteration   3: 149632.602 ops/s
Iteration   4: 149914.893 ops/s
Iteration   5: 149563.142 ops/s
Iteration   6: 149817.494 ops/s
Iteration   7: 150103.964 ops/s
Iteration   8: 150858.570 ops/s
Iteration   9: 149856.997 ops/s
Iteration  10: 148760.103 ops/s
Iteration  11: 151529.755 ops/s
Iteration  12: 150687.153 ops/s
Iteration  13: 151377.022 ops/s
Iteration  14: 151135.469 ops/s
Iteration  15: 151422.191 ops/s
Iteration  16: 151206.267 ops/s
Iteration  17: 150519.032 ops/s
Iteration  18: 148140.916 ops/s
Iteration  19: 148849.542 ops/s
Iteration  20: 150860.635 ops/s
Iteration  21: 151530.707 ops/s
Iteration  22: 151869.178 ops/s
Iteration  23: 152215.593 ops/s
Iteration  24: 152060.724 ops/s
Iteration  25: 152143.513 ops/s
Iteration  26: 151827.388 ops/s
Iteration  27: 151952.763 ops/s
Iteration  28: 149257.610 ops/s
Iteration  29: 150526.823 ops/s
Iteration  30: 149421.625 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_176._Benchmark.benchmark_Cluster_176":
  150572.341 ±(99.9%) 744.702 ops/s [Average]
  (min, avg, max) = (148140.916, 150572.341, 152215.593), stdev = 1114.636
  CI (99.9%): [149827.638, 151317.043] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_176._Benchmark.benchmark_Cluster_176  thrpt   30  150572.341 ± 744.702  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_177._Benchmark.benchmark_Cluster_177$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_177._Benchmark.benchmark_Cluster_177

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 101471.442 ops/s
# Warmup Iteration   2: 108993.000 ops/s
# Warmup Iteration   3: 109099.069 ops/s
# Warmup Iteration   4: 109065.696 ops/s
# Warmup Iteration   5: 124153.188 ops/s
# Warmup Iteration   6: 137755.284 ops/s
# Warmup Iteration   7: 137439.292 ops/s
# Warmup Iteration   8: 137684.096 ops/s
# Warmup Iteration   9: 138845.395 ops/s
# Warmup Iteration  10: 138575.965 ops/s
# Warmup Iteration  11: 137495.078 ops/s
# Warmup Iteration  12: 138665.641 ops/s
# Warmup Iteration  13: 138239.660 ops/s
# Warmup Iteration  14: 139034.455 ops/s
# Warmup Iteration  15: 138566.425 ops/s
# Warmup Iteration  16: 138196.282 ops/s
# Warmup Iteration  17: 146066.235 ops/s
# Warmup Iteration  18: 145719.800 ops/s
# Warmup Iteration  19: 146691.108 ops/s
# Warmup Iteration  20: 146540.571 ops/s
# Warmup Iteration  21: 147257.557 ops/s
# Warmup Iteration  22: 146414.918 ops/s
# Warmup Iteration  23: 146001.337 ops/s
# Warmup Iteration  24: 146085.806 ops/s
# Warmup Iteration  25: 132371.847 ops/s
# Warmup Iteration  26: 114074.899 ops/s
# Warmup Iteration  27: 144914.911 ops/s
# Warmup Iteration  28: 146387.683 ops/s
# Warmup Iteration  29: 145466.209 ops/s
# Warmup Iteration  30: 145342.220 ops/s
Iteration   1: 146058.669 ops/s
Iteration   2: 147051.765 ops/s
Iteration   3: 146579.976 ops/s
Iteration   4: 145494.864 ops/s
Iteration   5: 145117.140 ops/s
Iteration   6: 145605.560 ops/s
Iteration   7: 146373.242 ops/s
Iteration   8: 145338.204 ops/s
Iteration   9: 145392.690 ops/s
Iteration  10: 144839.648 ops/s
Iteration  11: 144307.634 ops/s
Iteration  12: 145967.420 ops/s
Iteration  13: 145479.545 ops/s
Iteration  14: 145816.097 ops/s
Iteration  15: 146182.409 ops/s
Iteration  16: 145472.486 ops/s
Iteration  17: 145530.184 ops/s
Iteration  18: 145603.513 ops/s
Iteration  19: 145187.854 ops/s
Iteration  20: 144522.663 ops/s
Iteration  21: 144103.763 ops/s
Iteration  22: 145030.302 ops/s
Iteration  23: 145120.026 ops/s
Iteration  24: 144766.675 ops/s
Iteration  25: 145141.170 ops/s
Iteration  26: 147470.832 ops/s
Iteration  27: 146662.133 ops/s
Iteration  28: 146576.643 ops/s
Iteration  29: 146945.791 ops/s
Iteration  30: 147105.302 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_177._Benchmark.benchmark_Cluster_177":
  145694.807 ±(99.9%) 574.671 ops/s [Average]
  (min, avg, max) = (144103.763, 145694.807, 147470.832), stdev = 860.141
  CI (99.9%): [145120.135, 146269.478] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_177._Benchmark.benchmark_Cluster_177  thrpt   30  145694.807 ± 574.671  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_178._Benchmark.benchmark_Cluster_178$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_178._Benchmark.benchmark_Cluster_178

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 115063.539 ops/s
# Warmup Iteration   2: 124455.110 ops/s
# Warmup Iteration   3: 125833.007 ops/s
# Warmup Iteration   4: 125480.090 ops/s
# Warmup Iteration   5: 150649.647 ops/s
# Warmup Iteration   6: 160739.951 ops/s
# Warmup Iteration   7: 162554.006 ops/s
# Warmup Iteration   8: 162635.451 ops/s
# Warmup Iteration   9: 160824.740 ops/s
# Warmup Iteration  10: 160687.617 ops/s
# Warmup Iteration  11: 159953.204 ops/s
# Warmup Iteration  12: 161095.398 ops/s
# Warmup Iteration  13: 162405.570 ops/s
# Warmup Iteration  14: 160932.922 ops/s
# Warmup Iteration  15: 161689.754 ops/s
# Warmup Iteration  16: 160953.333 ops/s
# Warmup Iteration  17: 170048.400 ops/s
# Warmup Iteration  18: 170588.374 ops/s
# Warmup Iteration  19: 170567.321 ops/s
# Warmup Iteration  20: 169536.800 ops/s
# Warmup Iteration  21: 170337.425 ops/s
# Warmup Iteration  22: 169913.732 ops/s
# Warmup Iteration  23: 170462.515 ops/s
# Warmup Iteration  24: 148865.322 ops/s
# Warmup Iteration  25: 136282.004 ops/s
# Warmup Iteration  26: 170469.138 ops/s
# Warmup Iteration  27: 170636.942 ops/s
# Warmup Iteration  28: 171293.232 ops/s
# Warmup Iteration  29: 170846.990 ops/s
# Warmup Iteration  30: 170476.377 ops/s
Iteration   1: 170178.211 ops/s
Iteration   2: 170765.789 ops/s
Iteration   3: 170946.739 ops/s
Iteration   4: 170759.690 ops/s
Iteration   5: 171076.377 ops/s
Iteration   6: 171246.746 ops/s
Iteration   7: 170943.867 ops/s
Iteration   8: 171415.350 ops/s
Iteration   9: 171017.973 ops/s
Iteration  10: 170715.732 ops/s
Iteration  11: 171115.008 ops/s
Iteration  12: 170551.665 ops/s
Iteration  13: 170972.038 ops/s
Iteration  14: 170340.640 ops/s
Iteration  15: 171386.023 ops/s
Iteration  16: 170616.710 ops/s
Iteration  17: 169178.252 ops/s
Iteration  18: 170179.144 ops/s
Iteration  19: 170250.579 ops/s
Iteration  20: 170593.342 ops/s
Iteration  21: 171392.643 ops/s
Iteration  22: 171525.330 ops/s
Iteration  23: 171539.680 ops/s
Iteration  24: 170579.226 ops/s
Iteration  25: 171477.600 ops/s
Iteration  26: 170902.721 ops/s
Iteration  27: 170645.488 ops/s
Iteration  28: 170462.321 ops/s
Iteration  29: 169880.999 ops/s
Iteration  30: 170639.383 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_178._Benchmark.benchmark_Cluster_178":
  170776.509 ±(99.9%) 355.575 ops/s [Average]
  (min, avg, max) = (169178.252, 170776.509, 171539.680), stdev = 532.208
  CI (99.9%): [170420.934, 171132.084] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_178._Benchmark.benchmark_Cluster_178  thrpt   30  170776.509 ± 355.575  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_179._Benchmark.benchmark_Cluster_179$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_179._Benchmark.benchmark_Cluster_179

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 102142.417 ops/s
# Warmup Iteration   2: 115735.482 ops/s
# Warmup Iteration   3: 114643.818 ops/s
# Warmup Iteration   4: 114159.647 ops/s
# Warmup Iteration   5: 133863.774 ops/s
# Warmup Iteration   6: 146608.200 ops/s
# Warmup Iteration   7: 146480.277 ops/s
# Warmup Iteration   8: 147711.851 ops/s
# Warmup Iteration   9: 147666.251 ops/s
# Warmup Iteration  10: 147477.431 ops/s
# Warmup Iteration  11: 146637.353 ops/s
# Warmup Iteration  12: 146014.280 ops/s
# Warmup Iteration  13: 147246.506 ops/s
# Warmup Iteration  14: 148080.533 ops/s
# Warmup Iteration  15: 147332.023 ops/s
# Warmup Iteration  16: 147790.041 ops/s
# Warmup Iteration  17: 154987.548 ops/s
# Warmup Iteration  18: 154954.014 ops/s
# Warmup Iteration  19: 154945.192 ops/s
# Warmup Iteration  20: 154781.424 ops/s
# Warmup Iteration  21: 154007.720 ops/s
# Warmup Iteration  22: 154939.512 ops/s
# Warmup Iteration  23: 155121.334 ops/s
# Warmup Iteration  24: 154787.405 ops/s
# Warmup Iteration  25: 122204.325 ops/s
# Warmup Iteration  26: 139429.839 ops/s
# Warmup Iteration  27: 154894.892 ops/s
# Warmup Iteration  28: 154881.142 ops/s
# Warmup Iteration  29: 154992.059 ops/s
# Warmup Iteration  30: 155526.559 ops/s
Iteration   1: 154913.613 ops/s
Iteration   2: 155275.399 ops/s
Iteration   3: 155260.790 ops/s
Iteration   4: 154603.242 ops/s
Iteration   5: 155408.401 ops/s
Iteration   6: 155767.461 ops/s
Iteration   7: 155695.834 ops/s
Iteration   8: 155218.509 ops/s
Iteration   9: 155501.062 ops/s
Iteration  10: 155462.222 ops/s
Iteration  11: 155007.626 ops/s
Iteration  12: 155499.405 ops/s
Iteration  13: 155855.218 ops/s
Iteration  14: 155798.530 ops/s
Iteration  15: 155500.153 ops/s
Iteration  16: 155052.375 ops/s
Iteration  17: 154534.665 ops/s
Iteration  18: 154969.718 ops/s
Iteration  19: 154697.029 ops/s
Iteration  20: 155513.573 ops/s
Iteration  21: 155289.407 ops/s
Iteration  22: 155532.518 ops/s
Iteration  23: 155057.321 ops/s
Iteration  24: 155281.469 ops/s
Iteration  25: 155126.100 ops/s
Iteration  26: 154561.425 ops/s
Iteration  27: 154376.466 ops/s
Iteration  28: 154245.482 ops/s
Iteration  29: 155396.069 ops/s
Iteration  30: 155469.590 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_179._Benchmark.benchmark_Cluster_179":
  155195.689 ±(99.9%) 286.973 ops/s [Average]
  (min, avg, max) = (154245.482, 155195.689, 155855.218), stdev = 429.527
  CI (99.9%): [154908.716, 155482.662] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_179._Benchmark.benchmark_Cluster_179  thrpt   30  155195.689 ± 286.973  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_18._Benchmark.benchmark_Cluster_18$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_18._Benchmark.benchmark_Cluster_18

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46465.861 ops/s
# Warmup Iteration   2: 82079.271 ops/s
# Warmup Iteration   3: 177112.612 ops/s
# Warmup Iteration   4: 180380.993 ops/s
# Warmup Iteration   5: 179844.665 ops/s
# Warmup Iteration   6: 125344.933 ops/s
# Warmup Iteration   7: 179309.407 ops/s
# Warmup Iteration   8: 180268.017 ops/s
# Warmup Iteration   9: 180646.305 ops/s
# Warmup Iteration  10: 180835.311 ops/s
# Warmup Iteration  11: 180011.188 ops/s
# Warmup Iteration  12: 180170.017 ops/s
# Warmup Iteration  13: 179223.809 ops/s
# Warmup Iteration  14: 180186.401 ops/s
# Warmup Iteration  15: 179604.360 ops/s
# Warmup Iteration  16: 179907.749 ops/s
# Warmup Iteration  17: 179796.181 ops/s
# Warmup Iteration  18: 179756.344 ops/s
# Warmup Iteration  19: 180689.538 ops/s
# Warmup Iteration  20: 180318.644 ops/s
# Warmup Iteration  21: 179420.448 ops/s
# Warmup Iteration  22: 180166.084 ops/s
# Warmup Iteration  23: 180327.293 ops/s
# Warmup Iteration  24: 180533.212 ops/s
# Warmup Iteration  25: 179787.557 ops/s
# Warmup Iteration  26: 180529.273 ops/s
# Warmup Iteration  27: 180687.633 ops/s
# Warmup Iteration  28: 180113.492 ops/s
# Warmup Iteration  29: 178902.709 ops/s
# Warmup Iteration  30: 180550.726 ops/s
Iteration   1: 179945.723 ops/s
Iteration   2: 180364.254 ops/s
Iteration   3: 178460.006 ops/s
Iteration   4: 180517.696 ops/s
Iteration   5: 181216.746 ops/s
Iteration   6: 180455.252 ops/s
Iteration   7: 180431.914 ops/s
Iteration   8: 178973.778 ops/s
Iteration   9: 178752.213 ops/s
Iteration  10: 178950.366 ops/s
Iteration  11: 180864.290 ops/s
Iteration  12: 179698.878 ops/s
Iteration  13: 179709.435 ops/s
Iteration  14: 178998.454 ops/s
Iteration  15: 177443.469 ops/s
Iteration  16: 179421.352 ops/s
Iteration  17: 179491.629 ops/s
Iteration  18: 178243.461 ops/s
Iteration  19: 178809.494 ops/s
Iteration  20: 180037.541 ops/s
Iteration  21: 179085.561 ops/s
Iteration  22: 178471.236 ops/s
Iteration  23: 179376.306 ops/s
Iteration  24: 180359.138 ops/s
Iteration  25: 180613.315 ops/s
Iteration  26: 179449.075 ops/s
Iteration  27: 179873.306 ops/s
Iteration  28: 180581.106 ops/s
Iteration  29: 180975.483 ops/s
Iteration  30: 179868.662 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_18._Benchmark.benchmark_Cluster_18":
  179647.971 ±(99.9%) 606.470 ops/s [Average]
  (min, avg, max) = (177443.469, 179647.971, 181216.746), stdev = 907.736
  CI (99.9%): [179041.501, 180254.442] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_18._Benchmark.benchmark_Cluster_18  thrpt   30  179647.971 ± 606.470  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_180._Benchmark.benchmark_Cluster_180$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_180._Benchmark.benchmark_Cluster_180

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73710.911 ops/s
# Warmup Iteration   2: 88632.304 ops/s
# Warmup Iteration   3: 163530.032 ops/s
# Warmup Iteration   4: 174095.890 ops/s
# Warmup Iteration   5: 171133.915 ops/s
# Warmup Iteration   6: 173085.713 ops/s
# Warmup Iteration   7: 172557.629 ops/s
# Warmup Iteration   8: 173198.787 ops/s
# Warmup Iteration   9: 119144.169 ops/s
# Warmup Iteration  10: 172995.788 ops/s
# Warmup Iteration  11: 173771.776 ops/s
# Warmup Iteration  12: 173128.510 ops/s
# Warmup Iteration  13: 172875.130 ops/s
# Warmup Iteration  14: 172457.039 ops/s
# Warmup Iteration  15: 172601.274 ops/s
# Warmup Iteration  16: 172866.975 ops/s
# Warmup Iteration  17: 171536.431 ops/s
# Warmup Iteration  18: 171186.097 ops/s
# Warmup Iteration  19: 172377.995 ops/s
# Warmup Iteration  20: 172047.770 ops/s
# Warmup Iteration  21: 171295.652 ops/s
# Warmup Iteration  22: 171333.362 ops/s
# Warmup Iteration  23: 172152.778 ops/s
# Warmup Iteration  24: 172516.553 ops/s
# Warmup Iteration  25: 174038.567 ops/s
# Warmup Iteration  26: 173318.154 ops/s
# Warmup Iteration  27: 172825.217 ops/s
# Warmup Iteration  28: 172058.831 ops/s
# Warmup Iteration  29: 172033.512 ops/s
# Warmup Iteration  30: 172567.525 ops/s
Iteration   1: 172595.769 ops/s
Iteration   2: 172380.157 ops/s
Iteration   3: 173246.904 ops/s
Iteration   4: 171183.128 ops/s
Iteration   5: 170494.935 ops/s
Iteration   6: 171233.871 ops/s
Iteration   7: 172003.145 ops/s
Iteration   8: 173237.875 ops/s
Iteration   9: 172068.937 ops/s
Iteration  10: 172114.130 ops/s
Iteration  11: 172273.813 ops/s
Iteration  12: 171449.050 ops/s
Iteration  13: 171319.012 ops/s
Iteration  14: 171700.864 ops/s
Iteration  15: 172980.216 ops/s
Iteration  16: 172073.527 ops/s
Iteration  17: 172779.602 ops/s
Iteration  18: 173232.757 ops/s
Iteration  19: 173481.596 ops/s
Iteration  20: 173155.777 ops/s
Iteration  21: 174115.402 ops/s
Iteration  22: 174384.308 ops/s
Iteration  23: 173556.981 ops/s
Iteration  24: 173208.882 ops/s
Iteration  25: 173059.345 ops/s
Iteration  26: 173831.366 ops/s
Iteration  27: 174239.454 ops/s
Iteration  28: 173585.741 ops/s
Iteration  29: 174092.077 ops/s
Iteration  30: 173591.734 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_180._Benchmark.benchmark_Cluster_180":
  172755.679 ±(99.9%) 685.290 ops/s [Average]
  (min, avg, max) = (170494.935, 172755.679, 174384.308), stdev = 1025.711
  CI (99.9%): [172070.388, 173440.969] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_180._Benchmark.benchmark_Cluster_180  thrpt   30  172755.679 ± 685.290  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_181._Benchmark.benchmark_Cluster_181$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_181._Benchmark.benchmark_Cluster_181

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 84054.631 ops/s
# Warmup Iteration   2: 110913.934 ops/s
# Warmup Iteration   3: 152655.745 ops/s
# Warmup Iteration   4: 194629.383 ops/s
# Warmup Iteration   5: 194520.405 ops/s
# Warmup Iteration   6: 192168.061 ops/s
# Warmup Iteration   7: 194465.516 ops/s
# Warmup Iteration   8: 194349.712 ops/s
# Warmup Iteration   9: 194949.434 ops/s
# Warmup Iteration  10: 195057.371 ops/s
# Warmup Iteration  11: 138080.973 ops/s
# Warmup Iteration  12: 186746.794 ops/s
# Warmup Iteration  13: 193520.279 ops/s
# Warmup Iteration  14: 194597.086 ops/s
# Warmup Iteration  15: 194462.148 ops/s
# Warmup Iteration  16: 193926.086 ops/s
# Warmup Iteration  17: 192180.598 ops/s
# Warmup Iteration  18: 190206.654 ops/s
# Warmup Iteration  19: 191971.191 ops/s
# Warmup Iteration  20: 192836.860 ops/s
# Warmup Iteration  21: 191628.050 ops/s
# Warmup Iteration  22: 192491.114 ops/s
# Warmup Iteration  23: 193344.333 ops/s
# Warmup Iteration  24: 192672.189 ops/s
# Warmup Iteration  25: 192873.863 ops/s
# Warmup Iteration  26: 193632.057 ops/s
# Warmup Iteration  27: 193854.799 ops/s
# Warmup Iteration  28: 193941.472 ops/s
# Warmup Iteration  29: 193427.372 ops/s
# Warmup Iteration  30: 192961.661 ops/s
Iteration   1: 191843.718 ops/s
Iteration   2: 192179.286 ops/s
Iteration   3: 191856.208 ops/s
Iteration   4: 193060.168 ops/s
Iteration   5: 192956.213 ops/s
Iteration   6: 192982.810 ops/s
Iteration   7: 192264.876 ops/s
Iteration   8: 192284.211 ops/s
Iteration   9: 190986.556 ops/s
Iteration  10: 191222.536 ops/s
Iteration  11: 193170.706 ops/s
Iteration  12: 191621.432 ops/s
Iteration  13: 191575.124 ops/s
Iteration  14: 191275.370 ops/s
Iteration  15: 193447.733 ops/s
Iteration  16: 191312.614 ops/s
Iteration  17: 192590.461 ops/s
Iteration  18: 193053.450 ops/s
Iteration  19: 191569.976 ops/s
Iteration  20: 192397.782 ops/s
Iteration  21: 193197.365 ops/s
Iteration  22: 192980.294 ops/s
Iteration  23: 192318.151 ops/s
Iteration  24: 193023.597 ops/s
Iteration  25: 192701.094 ops/s
Iteration  26: 193398.136 ops/s
Iteration  27: 192674.806 ops/s
Iteration  28: 193302.084 ops/s
Iteration  29: 192995.761 ops/s
Iteration  30: 192096.362 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_181._Benchmark.benchmark_Cluster_181":
  192411.296 ±(99.9%) 488.761 ops/s [Average]
  (min, avg, max) = (190986.556, 192411.296, 193447.733), stdev = 731.555
  CI (99.9%): [191922.535, 192900.057] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_181._Benchmark.benchmark_Cluster_181  thrpt   30  192411.296 ± 488.761  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_182._Benchmark.benchmark_Cluster_182$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_182._Benchmark.benchmark_Cluster_182

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59316.221 ops/s
# Warmup Iteration   2: 97419.961 ops/s
# Warmup Iteration   3: 124575.773 ops/s
# Warmup Iteration   4: 172575.018 ops/s
# Warmup Iteration   5: 174051.073 ops/s
# Warmup Iteration   6: 172341.468 ops/s
# Warmup Iteration   7: 174171.364 ops/s
# Warmup Iteration   8: 173842.727 ops/s
# Warmup Iteration   9: 175416.048 ops/s
# Warmup Iteration  10: 175610.880 ops/s
# Warmup Iteration  11: 118929.678 ops/s
# Warmup Iteration  12: 171794.804 ops/s
# Warmup Iteration  13: 173374.025 ops/s
# Warmup Iteration  14: 175105.575 ops/s
# Warmup Iteration  15: 173691.722 ops/s
# Warmup Iteration  16: 175302.637 ops/s
# Warmup Iteration  17: 175370.145 ops/s
# Warmup Iteration  18: 174559.174 ops/s
# Warmup Iteration  19: 174438.345 ops/s
# Warmup Iteration  20: 174711.709 ops/s
# Warmup Iteration  21: 174208.649 ops/s
# Warmup Iteration  22: 173853.364 ops/s
# Warmup Iteration  23: 174770.244 ops/s
# Warmup Iteration  24: 174583.480 ops/s
# Warmup Iteration  25: 174410.093 ops/s
# Warmup Iteration  26: 173676.641 ops/s
# Warmup Iteration  27: 174789.824 ops/s
# Warmup Iteration  28: 175029.954 ops/s
# Warmup Iteration  29: 175103.529 ops/s
# Warmup Iteration  30: 174721.329 ops/s
Iteration   1: 175342.601 ops/s
Iteration   2: 174632.792 ops/s
Iteration   3: 174244.416 ops/s
Iteration   4: 174796.623 ops/s
Iteration   5: 174489.813 ops/s
Iteration   6: 175225.826 ops/s
Iteration   7: 174477.128 ops/s
Iteration   8: 174359.044 ops/s
Iteration   9: 174078.562 ops/s
Iteration  10: 174197.421 ops/s
Iteration  11: 174481.220 ops/s
Iteration  12: 175533.633 ops/s
Iteration  13: 174971.711 ops/s
Iteration  14: 174707.479 ops/s
Iteration  15: 175682.509 ops/s
Iteration  16: 175406.400 ops/s
Iteration  17: 175240.150 ops/s
Iteration  18: 175572.698 ops/s
Iteration  19: 175524.429 ops/s
Iteration  20: 175065.990 ops/s
Iteration  21: 175080.205 ops/s
Iteration  22: 174710.290 ops/s
Iteration  23: 175475.647 ops/s
Iteration  24: 174636.386 ops/s
Iteration  25: 174619.846 ops/s
Iteration  26: 175292.053 ops/s
Iteration  27: 174705.600 ops/s
Iteration  28: 173455.962 ops/s
Iteration  29: 174041.970 ops/s
Iteration  30: 174944.618 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_182._Benchmark.benchmark_Cluster_182":
  174833.101 ±(99.9%) 362.221 ops/s [Average]
  (min, avg, max) = (173455.962, 174833.101, 175682.509), stdev = 542.155
  CI (99.9%): [174470.880, 175195.322] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_182._Benchmark.benchmark_Cluster_182  thrpt   30  174833.101 ± 362.221  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_183._Benchmark.benchmark_Cluster_183$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_183._Benchmark.benchmark_Cluster_183

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 35613.663 ops/s
# Warmup Iteration   2: 61776.812 ops/s
# Warmup Iteration   3: 81094.801 ops/s
# Warmup Iteration   4: 112957.346 ops/s
# Warmup Iteration   5: 114448.710 ops/s
# Warmup Iteration   6: 110424.534 ops/s
# Warmup Iteration   7: 114105.070 ops/s
# Warmup Iteration   8: 114460.903 ops/s
# Warmup Iteration   9: 113782.110 ops/s
# Warmup Iteration  10: 112850.108 ops/s
# Warmup Iteration  11: 76190.881 ops/s
# Warmup Iteration  12: 115265.286 ops/s
# Warmup Iteration  13: 115210.607 ops/s
# Warmup Iteration  14: 114713.093 ops/s
# Warmup Iteration  15: 115413.109 ops/s
# Warmup Iteration  16: 115148.536 ops/s
# Warmup Iteration  17: 114598.597 ops/s
# Warmup Iteration  18: 115497.122 ops/s
# Warmup Iteration  19: 116727.455 ops/s
# Warmup Iteration  20: 115954.394 ops/s
# Warmup Iteration  21: 116441.954 ops/s
# Warmup Iteration  22: 116788.075 ops/s
# Warmup Iteration  23: 116522.682 ops/s
# Warmup Iteration  24: 115865.575 ops/s
# Warmup Iteration  25: 115216.257 ops/s
# Warmup Iteration  26: 116369.006 ops/s
# Warmup Iteration  27: 115558.073 ops/s
# Warmup Iteration  28: 116463.248 ops/s
# Warmup Iteration  29: 115186.168 ops/s
# Warmup Iteration  30: 115303.156 ops/s
Iteration   1: 115751.362 ops/s
Iteration   2: 115099.189 ops/s
Iteration   3: 116674.892 ops/s
Iteration   4: 116650.535 ops/s
Iteration   5: 115863.631 ops/s
Iteration   6: 116246.294 ops/s
Iteration   7: 116478.760 ops/s
Iteration   8: 116188.799 ops/s
Iteration   9: 116057.315 ops/s
Iteration  10: 116070.254 ops/s
Iteration  11: 116841.084 ops/s
Iteration  12: 116449.236 ops/s
Iteration  13: 114457.244 ops/s
Iteration  14: 116861.128 ops/s
Iteration  15: 116337.617 ops/s
Iteration  16: 116140.882 ops/s
Iteration  17: 116174.835 ops/s
Iteration  18: 114573.748 ops/s
Iteration  19: 116306.961 ops/s
Iteration  20: 117096.237 ops/s
Iteration  21: 116959.331 ops/s
Iteration  22: 115736.977 ops/s
Iteration  23: 116895.159 ops/s
Iteration  24: 115655.816 ops/s
Iteration  25: 116641.654 ops/s
Iteration  26: 117618.141 ops/s
Iteration  27: 115834.571 ops/s
Iteration  28: 116285.446 ops/s
Iteration  29: 115710.566 ops/s
Iteration  30: 115067.683 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_183._Benchmark.benchmark_Cluster_183":
  116157.512 ±(99.9%) 478.684 ops/s [Average]
  (min, avg, max) = (114457.244, 116157.512, 117618.141), stdev = 716.472
  CI (99.9%): [115678.827, 116636.196] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_183._Benchmark.benchmark_Cluster_183  thrpt   30  116157.512 ± 478.684  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_184._Benchmark.benchmark_Cluster_184$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_184._Benchmark.benchmark_Cluster_184

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 143542.608 ops/s
# Warmup Iteration   2: 177842.308 ops/s
# Warmup Iteration   3: 225074.767 ops/s
# Warmup Iteration   4: 288920.517 ops/s
# Warmup Iteration   5: 289297.110 ops/s
# Warmup Iteration   6: 286341.123 ops/s
# Warmup Iteration   7: 289203.612 ops/s
# Warmup Iteration   8: 290347.840 ops/s
# Warmup Iteration   9: 289485.763 ops/s
# Warmup Iteration  10: 290067.754 ops/s
# Warmup Iteration  11: 289919.947 ops/s
# Warmup Iteration  12: 224811.918 ops/s
# Warmup Iteration  13: 265680.785 ops/s
# Warmup Iteration  14: 289777.488 ops/s
# Warmup Iteration  15: 289676.091 ops/s
# Warmup Iteration  16: 290204.782 ops/s
# Warmup Iteration  17: 289675.939 ops/s
# Warmup Iteration  18: 289866.908 ops/s
# Warmup Iteration  19: 289456.220 ops/s
# Warmup Iteration  20: 289730.129 ops/s
# Warmup Iteration  21: 290160.339 ops/s
# Warmup Iteration  22: 290367.112 ops/s
# Warmup Iteration  23: 289921.804 ops/s
# Warmup Iteration  24: 289714.038 ops/s
# Warmup Iteration  25: 288964.886 ops/s
# Warmup Iteration  26: 289959.130 ops/s
# Warmup Iteration  27: 290152.040 ops/s
# Warmup Iteration  28: 290483.170 ops/s
# Warmup Iteration  29: 290327.589 ops/s
# Warmup Iteration  30: 290291.631 ops/s
Iteration   1: 289714.229 ops/s
Iteration   2: 289961.594 ops/s
Iteration   3: 289683.123 ops/s
Iteration   4: 290093.998 ops/s
Iteration   5: 290002.850 ops/s
Iteration   6: 290125.432 ops/s
Iteration   7: 290044.417 ops/s
Iteration   8: 290259.739 ops/s
Iteration   9: 289945.552 ops/s
Iteration  10: 290095.640 ops/s
Iteration  11: 290182.285 ops/s
Iteration  12: 289939.539 ops/s
Iteration  13: 289656.724 ops/s
Iteration  14: 290135.943 ops/s
Iteration  15: 290536.687 ops/s
Iteration  16: 290492.827 ops/s
Iteration  17: 289282.202 ops/s
Iteration  18: 289490.502 ops/s
Iteration  19: 290326.549 ops/s
Iteration  20: 290231.635 ops/s
Iteration  21: 289344.074 ops/s
Iteration  22: 290630.456 ops/s
Iteration  23: 290968.713 ops/s
Iteration  24: 290784.684 ops/s
Iteration  25: 290147.243 ops/s
Iteration  26: 290893.738 ops/s
Iteration  27: 289930.065 ops/s
Iteration  28: 289581.198 ops/s
Iteration  29: 288903.122 ops/s
Iteration  30: 289279.084 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_184._Benchmark.benchmark_Cluster_184":
  290022.128 ±(99.9%) 328.707 ops/s [Average]
  (min, avg, max) = (288903.122, 290022.128, 290968.713), stdev = 491.993
  CI (99.9%): [289693.421, 290350.835] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_184._Benchmark.benchmark_Cluster_184  thrpt   30  290022.128 ± 328.707  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_185._Benchmark.benchmark_Cluster_185$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_185._Benchmark.benchmark_Cluster_185

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79107.001 ops/s
# Warmup Iteration   2: 111118.687 ops/s
# Warmup Iteration   3: 131501.984 ops/s
# Warmup Iteration   4: 181006.350 ops/s
# Warmup Iteration   5: 180295.830 ops/s
# Warmup Iteration   6: 178403.361 ops/s
# Warmup Iteration   7: 180726.420 ops/s
# Warmup Iteration   8: 180438.863 ops/s
# Warmup Iteration   9: 180436.765 ops/s
# Warmup Iteration  10: 181606.513 ops/s
# Warmup Iteration  11: 181782.372 ops/s
# Warmup Iteration  12: 155338.459 ops/s
# Warmup Iteration  13: 151530.391 ops/s
# Warmup Iteration  14: 180149.028 ops/s
# Warmup Iteration  15: 180625.697 ops/s
# Warmup Iteration  16: 181004.160 ops/s
# Warmup Iteration  17: 180552.190 ops/s
# Warmup Iteration  18: 180169.910 ops/s
# Warmup Iteration  19: 180335.478 ops/s
# Warmup Iteration  20: 180406.468 ops/s
# Warmup Iteration  21: 180195.057 ops/s
# Warmup Iteration  22: 180720.944 ops/s
# Warmup Iteration  23: 180333.999 ops/s
# Warmup Iteration  24: 179990.872 ops/s
# Warmup Iteration  25: 179628.292 ops/s
# Warmup Iteration  26: 179681.237 ops/s
# Warmup Iteration  27: 180726.447 ops/s
# Warmup Iteration  28: 180865.807 ops/s
# Warmup Iteration  29: 180742.453 ops/s
# Warmup Iteration  30: 180480.900 ops/s
Iteration   1: 181008.334 ops/s
Iteration   2: 179855.316 ops/s
Iteration   3: 179138.599 ops/s
Iteration   4: 180232.663 ops/s
Iteration   5: 179562.564 ops/s
Iteration   6: 179699.212 ops/s
Iteration   7: 181160.324 ops/s
Iteration   8: 180368.122 ops/s
Iteration   9: 181449.545 ops/s
Iteration  10: 181372.692 ops/s
Iteration  11: 181668.839 ops/s
Iteration  12: 180262.618 ops/s
Iteration  13: 180312.572 ops/s
Iteration  14: 181018.187 ops/s
Iteration  15: 181871.026 ops/s
Iteration  16: 181275.020 ops/s
Iteration  17: 181336.700 ops/s
Iteration  18: 181241.141 ops/s
Iteration  19: 181518.756 ops/s
Iteration  20: 181667.685 ops/s
Iteration  21: 180973.995 ops/s
Iteration  22: 181378.350 ops/s
Iteration  23: 180857.439 ops/s
Iteration  24: 181267.706 ops/s
Iteration  25: 181343.425 ops/s
Iteration  26: 181116.314 ops/s
Iteration  27: 180970.089 ops/s
Iteration  28: 181083.122 ops/s
Iteration  29: 181720.548 ops/s
Iteration  30: 180290.623 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_185._Benchmark.benchmark_Cluster_185":
  180900.717 ±(99.9%) 467.098 ops/s [Average]
  (min, avg, max) = (179138.599, 180900.717, 181871.026), stdev = 699.131
  CI (99.9%): [180433.619, 181367.816] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_185._Benchmark.benchmark_Cluster_185  thrpt   30  180900.717 ± 467.098  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_186._Benchmark.benchmark_Cluster_186$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_186._Benchmark.benchmark_Cluster_186

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77537.535 ops/s
# Warmup Iteration   2: 93126.023 ops/s
# Warmup Iteration   3: 93961.911 ops/s
# Warmup Iteration   4: 136297.479 ops/s
# Warmup Iteration   5: 141147.834 ops/s
# Warmup Iteration   6: 141656.972 ops/s
# Warmup Iteration   7: 140139.930 ops/s
# Warmup Iteration   8: 141202.792 ops/s
# Warmup Iteration   9: 140449.339 ops/s
# Warmup Iteration  10: 139570.074 ops/s
# Warmup Iteration  11: 140676.278 ops/s
# Warmup Iteration  12: 140337.441 ops/s
# Warmup Iteration  13: 140294.184 ops/s
# Warmup Iteration  14: 140861.485 ops/s
# Warmup Iteration  15: 136335.419 ops/s
# Warmup Iteration  16: 97737.515 ops/s
# Warmup Iteration  17: 144719.631 ops/s
# Warmup Iteration  18: 145078.675 ops/s
# Warmup Iteration  19: 144644.796 ops/s
# Warmup Iteration  20: 145712.782 ops/s
# Warmup Iteration  21: 144991.677 ops/s
# Warmup Iteration  22: 145018.436 ops/s
# Warmup Iteration  23: 145742.079 ops/s
# Warmup Iteration  24: 145638.958 ops/s
# Warmup Iteration  25: 145561.065 ops/s
# Warmup Iteration  26: 146104.777 ops/s
# Warmup Iteration  27: 145334.487 ops/s
# Warmup Iteration  28: 144725.405 ops/s
# Warmup Iteration  29: 144536.522 ops/s
# Warmup Iteration  30: 144681.309 ops/s
Iteration   1: 145311.183 ops/s
Iteration   2: 145692.277 ops/s
Iteration   3: 145118.005 ops/s
Iteration   4: 144835.865 ops/s
Iteration   5: 144557.906 ops/s
Iteration   6: 144096.068 ops/s
Iteration   7: 145586.010 ops/s
Iteration   8: 144966.541 ops/s
Iteration   9: 145383.884 ops/s
Iteration  10: 145696.302 ops/s
Iteration  11: 145929.427 ops/s
Iteration  12: 146241.368 ops/s
Iteration  13: 145441.552 ops/s
Iteration  14: 145325.786 ops/s
Iteration  15: 145501.874 ops/s
Iteration  16: 145318.473 ops/s
Iteration  17: 144672.452 ops/s
Iteration  18: 143986.754 ops/s
Iteration  19: 144286.323 ops/s
Iteration  20: 143927.093 ops/s
Iteration  21: 146324.949 ops/s
Iteration  22: 145772.663 ops/s
Iteration  23: 144980.867 ops/s
Iteration  24: 145536.000 ops/s
Iteration  25: 144594.466 ops/s
Iteration  26: 144593.921 ops/s
Iteration  27: 144785.733 ops/s
Iteration  28: 145667.661 ops/s
Iteration  29: 144631.157 ops/s
Iteration  30: 145351.336 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_186._Benchmark.benchmark_Cluster_186":
  145137.130 ±(99.9%) 422.851 ops/s [Average]
  (min, avg, max) = (143927.093, 145137.130, 146324.949), stdev = 632.903
  CI (99.9%): [144714.279, 145559.980] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_186._Benchmark.benchmark_Cluster_186  thrpt   30  145137.130 ± 422.851  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_187._Benchmark.benchmark_Cluster_187$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_187._Benchmark.benchmark_Cluster_187

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56357.616 ops/s
# Warmup Iteration   2: 74325.879 ops/s
# Warmup Iteration   3: 115837.407 ops/s
# Warmup Iteration   4: 137087.755 ops/s
# Warmup Iteration   5: 135803.985 ops/s
# Warmup Iteration   6: 135901.964 ops/s
# Warmup Iteration   7: 135888.935 ops/s
# Warmup Iteration   8: 136673.703 ops/s
# Warmup Iteration   9: 136550.264 ops/s
# Warmup Iteration  10: 93897.551 ops/s
# Warmup Iteration  11: 136876.301 ops/s
# Warmup Iteration  12: 137269.385 ops/s
# Warmup Iteration  13: 136332.906 ops/s
# Warmup Iteration  14: 136005.986 ops/s
# Warmup Iteration  15: 136538.002 ops/s
# Warmup Iteration  16: 136739.263 ops/s
# Warmup Iteration  17: 136702.127 ops/s
# Warmup Iteration  18: 136184.666 ops/s
# Warmup Iteration  19: 137392.890 ops/s
# Warmup Iteration  20: 137937.946 ops/s
# Warmup Iteration  21: 138163.087 ops/s
# Warmup Iteration  22: 137670.824 ops/s
# Warmup Iteration  23: 137983.349 ops/s
# Warmup Iteration  24: 138043.043 ops/s
# Warmup Iteration  25: 138125.282 ops/s
# Warmup Iteration  26: 136200.387 ops/s
# Warmup Iteration  27: 136716.084 ops/s
# Warmup Iteration  28: 135917.851 ops/s
# Warmup Iteration  29: 136293.524 ops/s
# Warmup Iteration  30: 136561.049 ops/s
Iteration   1: 135827.418 ops/s
Iteration   2: 135627.383 ops/s
Iteration   3: 135691.027 ops/s
Iteration   4: 136143.383 ops/s
Iteration   5: 136806.075 ops/s
Iteration   6: 136346.446 ops/s
Iteration   7: 136385.917 ops/s
Iteration   8: 136035.442 ops/s
Iteration   9: 136766.789 ops/s
Iteration  10: 136357.930 ops/s
Iteration  11: 137925.537 ops/s
Iteration  12: 135762.054 ops/s
Iteration  13: 135668.462 ops/s
Iteration  14: 135893.229 ops/s
Iteration  15: 135645.400 ops/s
Iteration  16: 135907.415 ops/s
Iteration  17: 135995.365 ops/s
Iteration  18: 135679.883 ops/s
Iteration  19: 136335.184 ops/s
Iteration  20: 136951.377 ops/s
Iteration  21: 137171.630 ops/s
Iteration  22: 137133.073 ops/s
Iteration  23: 137735.322 ops/s
Iteration  24: 137810.957 ops/s
Iteration  25: 136119.091 ops/s
Iteration  26: 137299.742 ops/s
Iteration  27: 136306.123 ops/s
Iteration  28: 136258.415 ops/s
Iteration  29: 137010.729 ops/s
Iteration  30: 137130.288 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_187._Benchmark.benchmark_Cluster_187":
  136457.570 ±(99.9%) 462.385 ops/s [Average]
  (min, avg, max) = (135627.383, 136457.570, 137925.537), stdev = 692.076
  CI (99.9%): [135995.185, 136919.955] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_187._Benchmark.benchmark_Cluster_187  thrpt   30  136457.570 ± 462.385  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_188._Benchmark.benchmark_Cluster_188$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_188._Benchmark.benchmark_Cluster_188

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58236.326 ops/s
# Warmup Iteration   2: 83231.316 ops/s
# Warmup Iteration   3: 88738.788 ops/s
# Warmup Iteration   4: 147123.523 ops/s
# Warmup Iteration   5: 145950.821 ops/s
# Warmup Iteration   6: 142810.796 ops/s
# Warmup Iteration   7: 145004.194 ops/s
# Warmup Iteration   8: 144803.342 ops/s
# Warmup Iteration   9: 146455.195 ops/s
# Warmup Iteration  10: 145667.549 ops/s
# Warmup Iteration  11: 145936.990 ops/s
# Warmup Iteration  12: 145869.074 ops/s
# Warmup Iteration  13: 99488.047 ops/s
# Warmup Iteration  14: 140085.533 ops/s
# Warmup Iteration  15: 145218.130 ops/s
# Warmup Iteration  16: 147021.026 ops/s
# Warmup Iteration  17: 150616.691 ops/s
# Warmup Iteration  18: 149147.053 ops/s
# Warmup Iteration  19: 149478.250 ops/s
# Warmup Iteration  20: 150338.252 ops/s
# Warmup Iteration  21: 151139.475 ops/s
# Warmup Iteration  22: 150703.368 ops/s
# Warmup Iteration  23: 149086.997 ops/s
# Warmup Iteration  24: 149543.827 ops/s
# Warmup Iteration  25: 149988.668 ops/s
# Warmup Iteration  26: 149905.655 ops/s
# Warmup Iteration  27: 148454.780 ops/s
# Warmup Iteration  28: 149273.386 ops/s
# Warmup Iteration  29: 149427.201 ops/s
# Warmup Iteration  30: 149561.958 ops/s
Iteration   1: 149968.725 ops/s
Iteration   2: 149345.722 ops/s
Iteration   3: 149135.974 ops/s
Iteration   4: 149350.019 ops/s
Iteration   5: 149886.942 ops/s
Iteration   6: 150148.654 ops/s
Iteration   7: 150518.185 ops/s
Iteration   8: 151015.950 ops/s
Iteration   9: 150725.170 ops/s
Iteration  10: 151011.243 ops/s
Iteration  11: 150753.772 ops/s
Iteration  12: 151484.825 ops/s
Iteration  13: 151081.609 ops/s
Iteration  14: 151287.885 ops/s
Iteration  15: 150699.304 ops/s
Iteration  16: 149699.698 ops/s
Iteration  17: 150496.272 ops/s
Iteration  18: 151232.671 ops/s
Iteration  19: 150318.017 ops/s
Iteration  20: 150076.797 ops/s
Iteration  21: 150898.658 ops/s
Iteration  22: 150286.071 ops/s
Iteration  23: 149689.464 ops/s
Iteration  24: 148485.094 ops/s
Iteration  25: 148862.001 ops/s
Iteration  26: 148482.682 ops/s
Iteration  27: 149011.224 ops/s
Iteration  28: 148972.148 ops/s
Iteration  29: 149107.724 ops/s
Iteration  30: 148270.862 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_188._Benchmark.benchmark_Cluster_188":
  150010.112 ±(99.9%) 623.184 ops/s [Average]
  (min, avg, max) = (148270.862, 150010.112, 151484.825), stdev = 932.752
  CI (99.9%): [149386.928, 150633.296] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_188._Benchmark.benchmark_Cluster_188  thrpt   30  150010.112 ± 623.184  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_189._Benchmark.benchmark_Cluster_189$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_189._Benchmark.benchmark_Cluster_189

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 25279.238 ops/s
# Warmup Iteration   2: 39731.644 ops/s
# Warmup Iteration   3: 67995.355 ops/s
# Warmup Iteration   4: 80803.565 ops/s
# Warmup Iteration   5: 80602.391 ops/s
# Warmup Iteration   6: 81826.445 ops/s
# Warmup Iteration   7: 81872.196 ops/s
# Warmup Iteration   8: 81189.865 ops/s
# Warmup Iteration   9: 55789.898 ops/s
# Warmup Iteration  10: 82082.056 ops/s
# Warmup Iteration  11: 80999.764 ops/s
# Warmup Iteration  12: 81635.537 ops/s
# Warmup Iteration  13: 81504.575 ops/s
# Warmup Iteration  14: 81976.746 ops/s
# Warmup Iteration  15: 80923.199 ops/s
# Warmup Iteration  16: 81778.472 ops/s
# Warmup Iteration  17: 81817.446 ops/s
# Warmup Iteration  18: 82328.923 ops/s
# Warmup Iteration  19: 82334.169 ops/s
# Warmup Iteration  20: 81958.174 ops/s
# Warmup Iteration  21: 82338.379 ops/s
# Warmup Iteration  22: 82469.487 ops/s
# Warmup Iteration  23: 82353.456 ops/s
# Warmup Iteration  24: 81978.853 ops/s
# Warmup Iteration  25: 81876.599 ops/s
# Warmup Iteration  26: 82331.840 ops/s
# Warmup Iteration  27: 81657.089 ops/s
# Warmup Iteration  28: 82073.047 ops/s
# Warmup Iteration  29: 82207.269 ops/s
# Warmup Iteration  30: 81865.773 ops/s
Iteration   1: 82143.329 ops/s
Iteration   2: 81355.460 ops/s
Iteration   3: 81490.759 ops/s
Iteration   4: 81963.583 ops/s
Iteration   5: 82359.959 ops/s
Iteration   6: 82234.268 ops/s
Iteration   7: 82231.097 ops/s
Iteration   8: 82460.149 ops/s
Iteration   9: 82369.910 ops/s
Iteration  10: 81836.662 ops/s
Iteration  11: 82217.539 ops/s
Iteration  12: 81798.268 ops/s
Iteration  13: 81980.184 ops/s
Iteration  14: 82137.765 ops/s
Iteration  15: 81860.214 ops/s
Iteration  16: 81987.946 ops/s
Iteration  17: 81637.821 ops/s
Iteration  18: 82729.835 ops/s
Iteration  19: 81983.442 ops/s
Iteration  20: 82346.919 ops/s
Iteration  21: 82506.971 ops/s
Iteration  22: 82220.393 ops/s
Iteration  23: 81538.272 ops/s
Iteration  24: 81984.747 ops/s
Iteration  25: 82483.139 ops/s
Iteration  26: 82335.719 ops/s
Iteration  27: 82429.467 ops/s
Iteration  28: 82148.839 ops/s
Iteration  29: 81766.519 ops/s
Iteration  30: 82109.781 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_189._Benchmark.benchmark_Cluster_189":
  82088.299 ±(99.9%) 219.343 ops/s [Average]
  (min, avg, max) = (81355.460, 82088.299, 82729.835), stdev = 328.302
  CI (99.9%): [81868.956, 82307.641] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_189._Benchmark.benchmark_Cluster_189  thrpt   30  82088.299 ± 219.343  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_19._Benchmark.benchmark_Cluster_19$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_19._Benchmark.benchmark_Cluster_19

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76083.695 ops/s
# Warmup Iteration   2: 96151.705 ops/s
# Warmup Iteration   3: 95506.081 ops/s
# Warmup Iteration   4: 94777.897 ops/s
# Warmup Iteration   5: 95779.722 ops/s
# Warmup Iteration   6: 121145.574 ops/s
# Warmup Iteration   7: 120806.172 ops/s
# Warmup Iteration   8: 121124.929 ops/s
# Warmup Iteration   9: 120897.361 ops/s
# Warmup Iteration  10: 120257.242 ops/s
# Warmup Iteration  11: 120138.568 ops/s
# Warmup Iteration  12: 120459.048 ops/s
# Warmup Iteration  13: 119019.707 ops/s
# Warmup Iteration  14: 120057.669 ops/s
# Warmup Iteration  15: 120357.280 ops/s
# Warmup Iteration  16: 119926.565 ops/s
# Warmup Iteration  17: 125620.875 ops/s
# Warmup Iteration  18: 126027.560 ops/s
# Warmup Iteration  19: 125168.756 ops/s
# Warmup Iteration  20: 125625.386 ops/s
# Warmup Iteration  21: 125861.480 ops/s
# Warmup Iteration  22: 125517.672 ops/s
# Warmup Iteration  23: 125922.565 ops/s
# Warmup Iteration  24: 125607.759 ops/s
# Warmup Iteration  25: 125558.102 ops/s
# Warmup Iteration  26: 125508.895 ops/s
# Warmup Iteration  27: 125679.923 ops/s
# Warmup Iteration  28: 109320.231 ops/s
# Warmup Iteration  29: 102666.647 ops/s
# Warmup Iteration  30: 125622.260 ops/s
Iteration   1: 125693.989 ops/s
Iteration   2: 125925.572 ops/s
Iteration   3: 125700.519 ops/s
Iteration   4: 126219.584 ops/s
Iteration   5: 126379.255 ops/s
Iteration   6: 126492.258 ops/s
Iteration   7: 126449.650 ops/s
Iteration   8: 126218.452 ops/s
Iteration   9: 126054.232 ops/s
Iteration  10: 126102.949 ops/s
Iteration  11: 126395.726 ops/s
Iteration  12: 126255.208 ops/s
Iteration  13: 126494.180 ops/s
Iteration  14: 126013.335 ops/s
Iteration  15: 126237.932 ops/s
Iteration  16: 126205.647 ops/s
Iteration  17: 126256.957 ops/s
Iteration  18: 125846.528 ops/s
Iteration  19: 125802.898 ops/s
Iteration  20: 126205.824 ops/s
Iteration  21: 125870.031 ops/s
Iteration  22: 125665.018 ops/s
Iteration  23: 125820.056 ops/s
Iteration  24: 126343.360 ops/s
Iteration  25: 126111.623 ops/s
Iteration  26: 126326.601 ops/s
Iteration  27: 125584.682 ops/s
Iteration  28: 126121.707 ops/s
Iteration  29: 126018.959 ops/s
Iteration  30: 125299.624 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_19._Benchmark.benchmark_Cluster_19":
  126070.412 ±(99.9%) 198.135 ops/s [Average]
  (min, avg, max) = (125299.624, 126070.412, 126494.180), stdev = 296.559
  CI (99.9%): [125872.277, 126268.547] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_19._Benchmark.benchmark_Cluster_19  thrpt   30  126070.412 ± 198.135  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_190._Benchmark.benchmark_Cluster_190$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_190._Benchmark.benchmark_Cluster_190

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 49006.395 ops/s
# Warmup Iteration   2: 90809.821 ops/s
# Warmup Iteration   3: 112911.573 ops/s
# Warmup Iteration   4: 158869.448 ops/s
# Warmup Iteration   5: 159771.210 ops/s
# Warmup Iteration   6: 157602.140 ops/s
# Warmup Iteration   7: 159911.527 ops/s
# Warmup Iteration   8: 159236.418 ops/s
# Warmup Iteration   9: 159382.370 ops/s
# Warmup Iteration  10: 159729.730 ops/s
# Warmup Iteration  11: 128462.439 ops/s
# Warmup Iteration  12: 140808.609 ops/s
# Warmup Iteration  13: 159129.003 ops/s
# Warmup Iteration  14: 159509.205 ops/s
# Warmup Iteration  15: 159540.002 ops/s
# Warmup Iteration  16: 159656.760 ops/s
# Warmup Iteration  17: 160558.331 ops/s
# Warmup Iteration  18: 161064.714 ops/s
# Warmup Iteration  19: 160437.879 ops/s
# Warmup Iteration  20: 160224.510 ops/s
# Warmup Iteration  21: 160826.690 ops/s
# Warmup Iteration  22: 160696.609 ops/s
# Warmup Iteration  23: 160659.770 ops/s
# Warmup Iteration  24: 160420.034 ops/s
# Warmup Iteration  25: 161037.724 ops/s
# Warmup Iteration  26: 160447.559 ops/s
# Warmup Iteration  27: 160348.005 ops/s
# Warmup Iteration  28: 160428.535 ops/s
# Warmup Iteration  29: 160136.281 ops/s
# Warmup Iteration  30: 160470.043 ops/s
Iteration   1: 161273.036 ops/s
Iteration   2: 161044.001 ops/s
Iteration   3: 160510.385 ops/s
Iteration   4: 161124.158 ops/s
Iteration   5: 159639.623 ops/s
Iteration   6: 160395.788 ops/s
Iteration   7: 160157.811 ops/s
Iteration   8: 160233.512 ops/s
Iteration   9: 160471.719 ops/s
Iteration  10: 160535.320 ops/s
Iteration  11: 160916.548 ops/s
Iteration  12: 159884.865 ops/s
Iteration  13: 160815.255 ops/s
Iteration  14: 160334.723 ops/s
Iteration  15: 159935.887 ops/s
Iteration  16: 160351.434 ops/s
Iteration  17: 159980.003 ops/s
Iteration  18: 160138.456 ops/s
Iteration  19: 160334.193 ops/s
Iteration  20: 160410.683 ops/s
Iteration  21: 160613.755 ops/s
Iteration  22: 160356.588 ops/s
Iteration  23: 160400.803 ops/s
Iteration  24: 160405.558 ops/s
Iteration  25: 160277.317 ops/s
Iteration  26: 160108.231 ops/s
Iteration  27: 159933.478 ops/s
Iteration  28: 160294.190 ops/s
Iteration  29: 160046.683 ops/s
Iteration  30: 160100.006 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_190._Benchmark.benchmark_Cluster_190":
  160367.467 ±(99.9%) 252.348 ops/s [Average]
  (min, avg, max) = (159639.623, 160367.467, 161273.036), stdev = 377.703
  CI (99.9%): [160115.119, 160619.815] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_190._Benchmark.benchmark_Cluster_190  thrpt   30  160367.467 ± 252.348  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_191._Benchmark.benchmark_Cluster_191$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_191._Benchmark.benchmark_Cluster_191

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46544.240 ops/s
# Warmup Iteration   2: 69078.829 ops/s
# Warmup Iteration   3: 112827.840 ops/s
# Warmup Iteration   4: 134782.814 ops/s
# Warmup Iteration   5: 134146.078 ops/s
# Warmup Iteration   6: 135776.527 ops/s
# Warmup Iteration   7: 135551.709 ops/s
# Warmup Iteration   8: 135832.392 ops/s
# Warmup Iteration   9: 108894.666 ops/s
# Warmup Iteration  10: 119040.948 ops/s
# Warmup Iteration  11: 134098.231 ops/s
# Warmup Iteration  12: 133651.696 ops/s
# Warmup Iteration  13: 133964.056 ops/s
# Warmup Iteration  14: 134411.766 ops/s
# Warmup Iteration  15: 134503.458 ops/s
# Warmup Iteration  16: 134672.723 ops/s
# Warmup Iteration  17: 136977.951 ops/s
# Warmup Iteration  18: 137436.091 ops/s
# Warmup Iteration  19: 136870.622 ops/s
# Warmup Iteration  20: 137225.323 ops/s
# Warmup Iteration  21: 137567.184 ops/s
# Warmup Iteration  22: 137605.076 ops/s
# Warmup Iteration  23: 136911.224 ops/s
# Warmup Iteration  24: 137230.064 ops/s
# Warmup Iteration  25: 137394.231 ops/s
# Warmup Iteration  26: 137474.563 ops/s
# Warmup Iteration  27: 137217.787 ops/s
# Warmup Iteration  28: 137240.780 ops/s
# Warmup Iteration  29: 137528.534 ops/s
# Warmup Iteration  30: 136896.737 ops/s
Iteration   1: 136477.841 ops/s
Iteration   2: 136875.429 ops/s
Iteration   3: 137361.096 ops/s
Iteration   4: 137427.201 ops/s
Iteration   5: 136878.576 ops/s
Iteration   6: 136822.937 ops/s
Iteration   7: 137588.748 ops/s
Iteration   8: 137099.184 ops/s
Iteration   9: 137056.363 ops/s
Iteration  10: 137584.390 ops/s
Iteration  11: 137638.580 ops/s
Iteration  12: 137385.408 ops/s
Iteration  13: 136583.321 ops/s
Iteration  14: 137626.952 ops/s
Iteration  15: 136315.247 ops/s
Iteration  16: 137526.311 ops/s
Iteration  17: 136655.552 ops/s
Iteration  18: 136517.248 ops/s
Iteration  19: 136592.570 ops/s
Iteration  20: 136826.228 ops/s
Iteration  21: 137548.782 ops/s
Iteration  22: 137768.117 ops/s
Iteration  23: 137407.865 ops/s
Iteration  24: 137375.505 ops/s
Iteration  25: 136949.083 ops/s
Iteration  26: 137199.437 ops/s
Iteration  27: 137142.485 ops/s
Iteration  28: 137638.119 ops/s
Iteration  29: 137175.640 ops/s
Iteration  30: 136978.240 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_191._Benchmark.benchmark_Cluster_191":
  137134.082 ±(99.9%) 275.343 ops/s [Average]
  (min, avg, max) = (136315.247, 137134.082, 137768.117), stdev = 412.121
  CI (99.9%): [136858.738, 137409.425] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_191._Benchmark.benchmark_Cluster_191  thrpt   30  137134.082 ± 275.343  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_192._Benchmark.benchmark_Cluster_192$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_192._Benchmark.benchmark_Cluster_192

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62321.102 ops/s
# Warmup Iteration   2: 83724.525 ops/s
# Warmup Iteration   3: 112454.969 ops/s
# Warmup Iteration   4: 145986.963 ops/s
# Warmup Iteration   5: 146305.026 ops/s
# Warmup Iteration   6: 144539.058 ops/s
# Warmup Iteration   7: 145790.844 ops/s
# Warmup Iteration   8: 146175.644 ops/s
# Warmup Iteration   9: 146651.128 ops/s
# Warmup Iteration  10: 146273.455 ops/s
# Warmup Iteration  11: 112449.680 ops/s
# Warmup Iteration  12: 132748.883 ops/s
# Warmup Iteration  13: 146015.098 ops/s
# Warmup Iteration  14: 146352.730 ops/s
# Warmup Iteration  15: 146218.104 ops/s
# Warmup Iteration  16: 145867.873 ops/s
# Warmup Iteration  17: 145876.925 ops/s
# Warmup Iteration  18: 146353.164 ops/s
# Warmup Iteration  19: 146241.333 ops/s
# Warmup Iteration  20: 146092.359 ops/s
# Warmup Iteration  21: 146032.540 ops/s
# Warmup Iteration  22: 146256.288 ops/s
# Warmup Iteration  23: 146140.509 ops/s
# Warmup Iteration  24: 146483.638 ops/s
# Warmup Iteration  25: 146295.283 ops/s
# Warmup Iteration  26: 146193.753 ops/s
# Warmup Iteration  27: 146530.172 ops/s
# Warmup Iteration  28: 146201.528 ops/s
# Warmup Iteration  29: 146464.367 ops/s
# Warmup Iteration  30: 145963.944 ops/s
Iteration   1: 146144.182 ops/s
Iteration   2: 146419.769 ops/s
Iteration   3: 146581.582 ops/s
Iteration   4: 146515.621 ops/s
Iteration   5: 146773.761 ops/s
Iteration   6: 146343.784 ops/s
Iteration   7: 146641.400 ops/s
Iteration   8: 146420.002 ops/s
Iteration   9: 146274.224 ops/s
Iteration  10: 146616.110 ops/s
Iteration  11: 146253.797 ops/s
Iteration  12: 146427.087 ops/s
Iteration  13: 146397.362 ops/s
Iteration  14: 146597.063 ops/s
Iteration  15: 146717.442 ops/s
Iteration  16: 146670.534 ops/s
Iteration  17: 146383.173 ops/s
Iteration  18: 146512.834 ops/s
Iteration  19: 146469.704 ops/s
Iteration  20: 146060.242 ops/s
Iteration  21: 146119.392 ops/s
Iteration  22: 146539.596 ops/s
Iteration  23: 146201.200 ops/s
Iteration  24: 146578.244 ops/s
Iteration  25: 146001.851 ops/s
Iteration  26: 146510.600 ops/s
Iteration  27: 146171.288 ops/s
Iteration  28: 146668.039 ops/s
Iteration  29: 146269.620 ops/s
Iteration  30: 146645.367 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_192._Benchmark.benchmark_Cluster_192":
  146430.829 ±(99.9%) 139.129 ops/s [Average]
  (min, avg, max) = (146001.851, 146430.829, 146773.761), stdev = 208.241
  CI (99.9%): [146291.700, 146569.958] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_192._Benchmark.benchmark_Cluster_192  thrpt   30  146430.829 ± 139.129  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_193._Benchmark.benchmark_Cluster_193$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_193._Benchmark.benchmark_Cluster_193

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61987.137 ops/s
# Warmup Iteration   2: 86412.409 ops/s
# Warmup Iteration   3: 180665.096 ops/s
# Warmup Iteration   4: 182044.201 ops/s
# Warmup Iteration   5: 185833.212 ops/s
# Warmup Iteration   6: 185084.775 ops/s
# Warmup Iteration   7: 185315.614 ops/s
# Warmup Iteration   8: 126799.850 ops/s
# Warmup Iteration   9: 185323.947 ops/s
# Warmup Iteration  10: 185727.667 ops/s
# Warmup Iteration  11: 185599.671 ops/s
# Warmup Iteration  12: 184986.545 ops/s
# Warmup Iteration  13: 185401.829 ops/s
# Warmup Iteration  14: 185862.837 ops/s
# Warmup Iteration  15: 185682.432 ops/s
# Warmup Iteration  16: 184981.916 ops/s
# Warmup Iteration  17: 185574.033 ops/s
# Warmup Iteration  18: 185934.896 ops/s
# Warmup Iteration  19: 186194.125 ops/s
# Warmup Iteration  20: 185351.144 ops/s
# Warmup Iteration  21: 185779.884 ops/s
# Warmup Iteration  22: 185734.284 ops/s
# Warmup Iteration  23: 185557.695 ops/s
# Warmup Iteration  24: 185427.576 ops/s
# Warmup Iteration  25: 185926.433 ops/s
# Warmup Iteration  26: 185860.058 ops/s
# Warmup Iteration  27: 185681.683 ops/s
# Warmup Iteration  28: 185920.494 ops/s
# Warmup Iteration  29: 185534.805 ops/s
# Warmup Iteration  30: 186169.248 ops/s
Iteration   1: 186176.203 ops/s
Iteration   2: 185400.077 ops/s
Iteration   3: 185711.636 ops/s
Iteration   4: 185999.704 ops/s
Iteration   5: 186221.459 ops/s
Iteration   6: 185622.531 ops/s
Iteration   7: 185727.593 ops/s
Iteration   8: 185795.426 ops/s
Iteration   9: 186194.241 ops/s
Iteration  10: 186000.854 ops/s
Iteration  11: 185385.540 ops/s
Iteration  12: 186033.289 ops/s
Iteration  13: 185567.403 ops/s
Iteration  14: 186099.287 ops/s
Iteration  15: 186206.237 ops/s
Iteration  16: 185748.044 ops/s
Iteration  17: 185903.597 ops/s
Iteration  18: 186088.345 ops/s
Iteration  19: 186428.062 ops/s
Iteration  20: 185484.100 ops/s
Iteration  21: 186231.362 ops/s
Iteration  22: 185939.763 ops/s
Iteration  23: 185761.192 ops/s
Iteration  24: 185046.670 ops/s
Iteration  25: 185444.942 ops/s
Iteration  26: 186154.045 ops/s
Iteration  27: 185749.154 ops/s
Iteration  28: 185478.686 ops/s
Iteration  29: 185185.932 ops/s
Iteration  30: 185611.956 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_193._Benchmark.benchmark_Cluster_193":
  185813.244 ±(99.9%) 229.574 ops/s [Average]
  (min, avg, max) = (185046.670, 185813.244, 186428.062), stdev = 343.616
  CI (99.9%): [185583.670, 186042.819] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_193._Benchmark.benchmark_Cluster_193  thrpt   30  185813.244 ± 229.574  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_194._Benchmark.benchmark_Cluster_194$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_194._Benchmark.benchmark_Cluster_194

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 97280.304 ops/s
# Warmup Iteration   2: 107661.363 ops/s
# Warmup Iteration   3: 108279.084 ops/s
# Warmup Iteration   4: 117338.528 ops/s
# Warmup Iteration   5: 144828.620 ops/s
# Warmup Iteration   6: 144299.064 ops/s
# Warmup Iteration   7: 144574.388 ops/s
# Warmup Iteration   8: 144762.646 ops/s
# Warmup Iteration   9: 144728.625 ops/s
# Warmup Iteration  10: 141980.572 ops/s
# Warmup Iteration  11: 143804.892 ops/s
# Warmup Iteration  12: 143910.151 ops/s
# Warmup Iteration  13: 144889.947 ops/s
# Warmup Iteration  14: 144860.322 ops/s
# Warmup Iteration  15: 144336.439 ops/s
# Warmup Iteration  16: 144447.406 ops/s
# Warmup Iteration  17: 152849.952 ops/s
# Warmup Iteration  18: 152104.062 ops/s
# Warmup Iteration  19: 152307.792 ops/s
# Warmup Iteration  20: 152848.457 ops/s
# Warmup Iteration  21: 114306.002 ops/s
# Warmup Iteration  22: 143329.132 ops/s
# Warmup Iteration  23: 151598.263 ops/s
# Warmup Iteration  24: 152104.338 ops/s
# Warmup Iteration  25: 151439.549 ops/s
# Warmup Iteration  26: 151869.645 ops/s
# Warmup Iteration  27: 152114.864 ops/s
# Warmup Iteration  28: 152430.073 ops/s
# Warmup Iteration  29: 151847.033 ops/s
# Warmup Iteration  30: 151325.247 ops/s
Iteration   1: 151919.495 ops/s
Iteration   2: 151773.142 ops/s
Iteration   3: 151184.768 ops/s
Iteration   4: 151542.996 ops/s
Iteration   5: 151641.497 ops/s
Iteration   6: 151834.774 ops/s
Iteration   7: 151853.507 ops/s
Iteration   8: 152246.647 ops/s
Iteration   9: 152562.821 ops/s
Iteration  10: 152355.046 ops/s
Iteration  11: 152309.580 ops/s
Iteration  12: 152572.949 ops/s
Iteration  13: 152155.470 ops/s
Iteration  14: 151550.392 ops/s
Iteration  15: 152077.249 ops/s
Iteration  16: 152421.265 ops/s
Iteration  17: 152388.981 ops/s
Iteration  18: 151977.632 ops/s
Iteration  19: 152398.216 ops/s
Iteration  20: 152256.842 ops/s
Iteration  21: 152308.288 ops/s
Iteration  22: 152145.909 ops/s
Iteration  23: 152320.480 ops/s
Iteration  24: 152632.152 ops/s
Iteration  25: 152401.993 ops/s
Iteration  26: 152522.893 ops/s
Iteration  27: 152178.246 ops/s
Iteration  28: 152182.991 ops/s
Iteration  29: 152292.390 ops/s
Iteration  30: 151499.649 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_194._Benchmark.benchmark_Cluster_194":
  152116.942 ±(99.9%) 243.973 ops/s [Average]
  (min, avg, max) = (151184.768, 152116.942, 152632.152), stdev = 365.167
  CI (99.9%): [151872.969, 152360.915] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_194._Benchmark.benchmark_Cluster_194  thrpt   30  152116.942 ± 243.973  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_195._Benchmark.benchmark_Cluster_195$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_195._Benchmark.benchmark_Cluster_195

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53576.019 ops/s
# Warmup Iteration   2: 84500.191 ops/s
# Warmup Iteration   3: 175629.593 ops/s
# Warmup Iteration   4: 174299.325 ops/s
# Warmup Iteration   5: 176110.749 ops/s
# Warmup Iteration   6: 155457.042 ops/s
# Warmup Iteration   7: 140570.512 ops/s
# Warmup Iteration   8: 175757.811 ops/s
# Warmup Iteration   9: 176027.600 ops/s
# Warmup Iteration  10: 176142.355 ops/s
# Warmup Iteration  11: 176200.229 ops/s
# Warmup Iteration  12: 176164.181 ops/s
# Warmup Iteration  13: 176072.162 ops/s
# Warmup Iteration  14: 176457.892 ops/s
# Warmup Iteration  15: 176355.934 ops/s
# Warmup Iteration  16: 175851.806 ops/s
# Warmup Iteration  17: 175898.631 ops/s
# Warmup Iteration  18: 175965.558 ops/s
# Warmup Iteration  19: 175821.978 ops/s
# Warmup Iteration  20: 176237.377 ops/s
# Warmup Iteration  21: 176024.563 ops/s
# Warmup Iteration  22: 176147.118 ops/s
# Warmup Iteration  23: 175926.196 ops/s
# Warmup Iteration  24: 176108.101 ops/s
# Warmup Iteration  25: 175491.522 ops/s
# Warmup Iteration  26: 176274.042 ops/s
# Warmup Iteration  27: 175967.229 ops/s
# Warmup Iteration  28: 176093.356 ops/s
# Warmup Iteration  29: 176055.090 ops/s
# Warmup Iteration  30: 175872.721 ops/s
Iteration   1: 175589.134 ops/s
Iteration   2: 175798.334 ops/s
Iteration   3: 175711.825 ops/s
Iteration   4: 176226.279 ops/s
Iteration   5: 176274.399 ops/s
Iteration   6: 176087.887 ops/s
Iteration   7: 176281.751 ops/s
Iteration   8: 176342.501 ops/s
Iteration   9: 176483.247 ops/s
Iteration  10: 175831.822 ops/s
Iteration  11: 175953.724 ops/s
Iteration  12: 175632.950 ops/s
Iteration  13: 175187.666 ops/s
Iteration  14: 176187.682 ops/s
Iteration  15: 175807.570 ops/s
Iteration  16: 176026.889 ops/s
Iteration  17: 175381.463 ops/s
Iteration  18: 175741.883 ops/s
Iteration  19: 175717.526 ops/s
Iteration  20: 176068.382 ops/s
Iteration  21: 176155.706 ops/s
Iteration  22: 176554.989 ops/s
Iteration  23: 176658.997 ops/s
Iteration  24: 176385.547 ops/s
Iteration  25: 175537.696 ops/s
Iteration  26: 175550.470 ops/s
Iteration  27: 176228.358 ops/s
Iteration  28: 176207.157 ops/s
Iteration  29: 175617.052 ops/s
Iteration  30: 176073.967 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_195._Benchmark.benchmark_Cluster_195":
  175976.762 ±(99.9%) 243.454 ops/s [Average]
  (min, avg, max) = (175187.666, 175976.762, 176658.997), stdev = 364.390
  CI (99.9%): [175733.308, 176220.216] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_195._Benchmark.benchmark_Cluster_195  thrpt   30  175976.762 ± 243.454  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_196._Benchmark.benchmark_Cluster_196$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_196._Benchmark.benchmark_Cluster_196

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 95149.605 ops/s
# Warmup Iteration   2: 102563.202 ops/s
# Warmup Iteration   3: 103559.243 ops/s
# Warmup Iteration   4: 104194.642 ops/s
# Warmup Iteration   5: 127637.483 ops/s
# Warmup Iteration   6: 133732.510 ops/s
# Warmup Iteration   7: 133748.978 ops/s
# Warmup Iteration   8: 133440.842 ops/s
# Warmup Iteration   9: 132847.308 ops/s
# Warmup Iteration  10: 133252.285 ops/s
# Warmup Iteration  11: 132874.096 ops/s
# Warmup Iteration  12: 133185.673 ops/s
# Warmup Iteration  13: 133089.198 ops/s
# Warmup Iteration  14: 133376.578 ops/s
# Warmup Iteration  15: 133854.929 ops/s
# Warmup Iteration  16: 133651.509 ops/s
# Warmup Iteration  17: 140011.247 ops/s
# Warmup Iteration  18: 140720.805 ops/s
# Warmup Iteration  19: 140464.260 ops/s
# Warmup Iteration  20: 139752.186 ops/s
# Warmup Iteration  21: 140430.236 ops/s
# Warmup Iteration  22: 141027.480 ops/s
# Warmup Iteration  23: 136592.049 ops/s
# Warmup Iteration  24: 108595.458 ops/s
# Warmup Iteration  25: 136694.347 ops/s
# Warmup Iteration  26: 140068.277 ops/s
# Warmup Iteration  27: 140442.597 ops/s
# Warmup Iteration  28: 138732.194 ops/s
# Warmup Iteration  29: 140519.282 ops/s
# Warmup Iteration  30: 140522.026 ops/s
Iteration   1: 140180.565 ops/s
Iteration   2: 140246.502 ops/s
Iteration   3: 139923.406 ops/s
Iteration   4: 140489.678 ops/s
Iteration   5: 139396.498 ops/s
Iteration   6: 139626.532 ops/s
Iteration   7: 140663.070 ops/s
Iteration   8: 140757.844 ops/s
Iteration   9: 139615.266 ops/s
Iteration  10: 140408.577 ops/s
Iteration  11: 140467.029 ops/s
Iteration  12: 140729.361 ops/s
Iteration  13: 140361.552 ops/s
Iteration  14: 139884.629 ops/s
Iteration  15: 140600.923 ops/s
Iteration  16: 140783.716 ops/s
Iteration  17: 140441.340 ops/s
Iteration  18: 140709.951 ops/s
Iteration  19: 140446.387 ops/s
Iteration  20: 140218.104 ops/s
Iteration  21: 140662.228 ops/s
Iteration  22: 140753.168 ops/s
Iteration  23: 140806.139 ops/s
Iteration  24: 140127.735 ops/s
Iteration  25: 140460.175 ops/s
Iteration  26: 140398.356 ops/s
Iteration  27: 140306.982 ops/s
Iteration  28: 139890.391 ops/s
Iteration  29: 139861.028 ops/s
Iteration  30: 140750.101 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_196._Benchmark.benchmark_Cluster_196":
  140332.241 ±(99.9%) 260.415 ops/s [Average]
  (min, avg, max) = (139396.498, 140332.241, 140806.139), stdev = 389.777
  CI (99.9%): [140071.826, 140592.656] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_196._Benchmark.benchmark_Cluster_196  thrpt   30  140332.241 ± 260.415  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_197._Benchmark.benchmark_Cluster_197$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_197._Benchmark.benchmark_Cluster_197

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66068.284 ops/s
# Warmup Iteration   2: 92408.393 ops/s
# Warmup Iteration   3: 94993.366 ops/s
# Warmup Iteration   4: 147236.667 ops/s
# Warmup Iteration   5: 148058.516 ops/s
# Warmup Iteration   6: 148819.299 ops/s
# Warmup Iteration   7: 146405.403 ops/s
# Warmup Iteration   8: 147598.247 ops/s
# Warmup Iteration   9: 147956.697 ops/s
# Warmup Iteration  10: 147653.812 ops/s
# Warmup Iteration  11: 148662.388 ops/s
# Warmup Iteration  12: 148197.486 ops/s
# Warmup Iteration  13: 148341.716 ops/s
# Warmup Iteration  14: 106251.579 ops/s
# Warmup Iteration  15: 140539.817 ops/s
# Warmup Iteration  16: 147083.145 ops/s
# Warmup Iteration  17: 150355.259 ops/s
# Warmup Iteration  18: 150286.203 ops/s
# Warmup Iteration  19: 150486.478 ops/s
# Warmup Iteration  20: 150196.679 ops/s
# Warmup Iteration  21: 150707.298 ops/s
# Warmup Iteration  22: 150641.091 ops/s
# Warmup Iteration  23: 149468.224 ops/s
# Warmup Iteration  24: 149960.366 ops/s
# Warmup Iteration  25: 150784.671 ops/s
# Warmup Iteration  26: 150172.272 ops/s
# Warmup Iteration  27: 150558.216 ops/s
# Warmup Iteration  28: 149552.529 ops/s
# Warmup Iteration  29: 150154.953 ops/s
# Warmup Iteration  30: 149162.089 ops/s
Iteration   1: 149182.308 ops/s
Iteration   2: 148973.145 ops/s
Iteration   3: 148948.345 ops/s
Iteration   4: 149531.562 ops/s
Iteration   5: 150474.491 ops/s
Iteration   6: 150040.331 ops/s
Iteration   7: 150406.802 ops/s
Iteration   8: 150626.494 ops/s
Iteration   9: 150514.169 ops/s
Iteration  10: 150515.188 ops/s
Iteration  11: 150507.860 ops/s
Iteration  12: 149353.021 ops/s
Iteration  13: 149439.527 ops/s
Iteration  14: 150110.028 ops/s
Iteration  15: 149522.953 ops/s
Iteration  16: 150400.026 ops/s
Iteration  17: 150528.508 ops/s
Iteration  18: 150786.943 ops/s
Iteration  19: 150305.270 ops/s
Iteration  20: 150762.327 ops/s
Iteration  21: 150384.947 ops/s
Iteration  22: 149600.822 ops/s
Iteration  23: 150253.131 ops/s
Iteration  24: 149343.910 ops/s
Iteration  25: 149400.301 ops/s
Iteration  26: 149541.111 ops/s
Iteration  27: 150083.961 ops/s
Iteration  28: 149744.880 ops/s
Iteration  29: 149829.206 ops/s
Iteration  30: 149427.059 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_197._Benchmark.benchmark_Cluster_197":
  149951.287 ±(99.9%) 373.372 ops/s [Average]
  (min, avg, max) = (148948.345, 149951.287, 150786.943), stdev = 558.845
  CI (99.9%): [149577.916, 150324.659] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_197._Benchmark.benchmark_Cluster_197  thrpt   30  149951.287 ± 373.372  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_198._Benchmark.benchmark_Cluster_198$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_198._Benchmark.benchmark_Cluster_198

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77910.479 ops/s
# Warmup Iteration   2: 88475.825 ops/s
# Warmup Iteration   3: 89030.944 ops/s
# Warmup Iteration   4: 120495.889 ops/s
# Warmup Iteration   5: 129820.619 ops/s
# Warmup Iteration   6: 129784.881 ops/s
# Warmup Iteration   7: 129845.568 ops/s
# Warmup Iteration   8: 128271.231 ops/s
# Warmup Iteration   9: 129530.242 ops/s
# Warmup Iteration  10: 129240.189 ops/s
# Warmup Iteration  11: 129769.024 ops/s
# Warmup Iteration  12: 129611.783 ops/s
# Warmup Iteration  13: 129592.844 ops/s
# Warmup Iteration  14: 129618.212 ops/s
# Warmup Iteration  15: 129609.163 ops/s
# Warmup Iteration  16: 129669.040 ops/s
# Warmup Iteration  17: 92189.098 ops/s
# Warmup Iteration  18: 135041.162 ops/s
# Warmup Iteration  19: 135829.603 ops/s
# Warmup Iteration  20: 135271.745 ops/s
# Warmup Iteration  21: 135363.481 ops/s
# Warmup Iteration  22: 135573.142 ops/s
# Warmup Iteration  23: 135798.213 ops/s
# Warmup Iteration  24: 135274.423 ops/s
# Warmup Iteration  25: 135422.486 ops/s
# Warmup Iteration  26: 135636.971 ops/s
# Warmup Iteration  27: 135455.530 ops/s
# Warmup Iteration  28: 135291.253 ops/s
# Warmup Iteration  29: 135339.092 ops/s
# Warmup Iteration  30: 135376.219 ops/s
Iteration   1: 135621.188 ops/s
Iteration   2: 135466.367 ops/s
Iteration   3: 135327.330 ops/s
Iteration   4: 136080.292 ops/s
Iteration   5: 135748.866 ops/s
Iteration   6: 135660.120 ops/s
Iteration   7: 135681.560 ops/s
Iteration   8: 135742.311 ops/s
Iteration   9: 135826.567 ops/s
Iteration  10: 135549.081 ops/s
Iteration  11: 135606.618 ops/s
Iteration  12: 135886.153 ops/s
Iteration  13: 135712.315 ops/s
Iteration  14: 135727.948 ops/s
Iteration  15: 135750.421 ops/s
Iteration  16: 135745.393 ops/s
Iteration  17: 135349.157 ops/s
Iteration  18: 135578.659 ops/s
Iteration  19: 135602.942 ops/s
Iteration  20: 135931.921 ops/s
Iteration  21: 135701.482 ops/s
Iteration  22: 135600.664 ops/s
Iteration  23: 135713.402 ops/s
Iteration  24: 135324.715 ops/s
Iteration  25: 135627.271 ops/s
Iteration  26: 135229.455 ops/s
Iteration  27: 135388.908 ops/s
Iteration  28: 135404.389 ops/s
Iteration  29: 135466.946 ops/s
Iteration  30: 135113.424 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_198._Benchmark.benchmark_Cluster_198":
  135605.529 ±(99.9%) 143.162 ops/s [Average]
  (min, avg, max) = (135113.424, 135605.529, 136080.292), stdev = 214.278
  CI (99.9%): [135462.367, 135748.690] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_198._Benchmark.benchmark_Cluster_198  thrpt   30  135605.529 ± 143.162  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_199._Benchmark.benchmark_Cluster_199$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_199._Benchmark.benchmark_Cluster_199

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65624.489 ops/s
# Warmup Iteration   2: 86111.832 ops/s
# Warmup Iteration   3: 153731.606 ops/s
# Warmup Iteration   4: 170164.323 ops/s
# Warmup Iteration   5: 170096.533 ops/s
# Warmup Iteration   6: 170108.499 ops/s
# Warmup Iteration   7: 170341.963 ops/s
# Warmup Iteration   8: 170204.881 ops/s
# Warmup Iteration   9: 116155.890 ops/s
# Warmup Iteration  10: 169714.810 ops/s
# Warmup Iteration  11: 169537.738 ops/s
# Warmup Iteration  12: 169105.667 ops/s
# Warmup Iteration  13: 169621.539 ops/s
# Warmup Iteration  14: 169599.537 ops/s
# Warmup Iteration  15: 169521.230 ops/s
# Warmup Iteration  16: 169997.634 ops/s
# Warmup Iteration  17: 170503.558 ops/s
# Warmup Iteration  18: 170643.717 ops/s
# Warmup Iteration  19: 170214.475 ops/s
# Warmup Iteration  20: 170606.389 ops/s
# Warmup Iteration  21: 170272.793 ops/s
# Warmup Iteration  22: 170334.259 ops/s
# Warmup Iteration  23: 170289.720 ops/s
# Warmup Iteration  24: 170410.425 ops/s
# Warmup Iteration  25: 170326.098 ops/s
# Warmup Iteration  26: 170395.594 ops/s
# Warmup Iteration  27: 170734.212 ops/s
# Warmup Iteration  28: 169842.534 ops/s
# Warmup Iteration  29: 170241.846 ops/s
# Warmup Iteration  30: 170100.798 ops/s
Iteration   1: 169774.097 ops/s
Iteration   2: 170462.459 ops/s
Iteration   3: 169671.536 ops/s
Iteration   4: 169488.055 ops/s
Iteration   5: 170151.441 ops/s
Iteration   6: 169665.628 ops/s
Iteration   7: 170047.468 ops/s
Iteration   8: 169956.009 ops/s
Iteration   9: 169393.921 ops/s
Iteration  10: 169966.014 ops/s
Iteration  11: 169601.084 ops/s
Iteration  12: 169542.503 ops/s
Iteration  13: 169307.271 ops/s
Iteration  14: 169207.084 ops/s
Iteration  15: 169661.858 ops/s
Iteration  16: 170577.938 ops/s
Iteration  17: 170348.378 ops/s
Iteration  18: 170478.897 ops/s
Iteration  19: 170140.587 ops/s
Iteration  20: 170118.059 ops/s
Iteration  21: 170293.586 ops/s
Iteration  22: 170212.488 ops/s
Iteration  23: 170794.630 ops/s
Iteration  24: 170551.908 ops/s
Iteration  25: 170054.140 ops/s
Iteration  26: 170291.223 ops/s
Iteration  27: 170416.833 ops/s
Iteration  28: 170389.985 ops/s
Iteration  29: 170573.353 ops/s
Iteration  30: 170538.285 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_199._Benchmark.benchmark_Cluster_199":
  170055.891 ±(99.9%) 289.841 ops/s [Average]
  (min, avg, max) = (169207.084, 170055.891, 170794.630), stdev = 433.821
  CI (99.9%): [169766.049, 170345.732] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_199._Benchmark.benchmark_Cluster_199  thrpt   30  170055.891 ± 289.841  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_2._Benchmark.benchmark_Cluster_2$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_2._Benchmark.benchmark_Cluster_2

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 81402.543 ops/s
# Warmup Iteration   2: 90666.137 ops/s
# Warmup Iteration   3: 90523.996 ops/s
# Warmup Iteration   4: 109168.817 ops/s
# Warmup Iteration   5: 126767.261 ops/s
# Warmup Iteration   6: 126058.220 ops/s
# Warmup Iteration   7: 126219.354 ops/s
# Warmup Iteration   8: 126616.985 ops/s
# Warmup Iteration   9: 125947.398 ops/s
# Warmup Iteration  10: 126140.289 ops/s
# Warmup Iteration  11: 126181.324 ops/s
# Warmup Iteration  12: 126181.889 ops/s
# Warmup Iteration  13: 125853.482 ops/s
# Warmup Iteration  14: 125805.057 ops/s
# Warmup Iteration  15: 125692.470 ops/s
# Warmup Iteration  16: 126224.733 ops/s
# Warmup Iteration  17: 128528.302 ops/s
# Warmup Iteration  18: 128302.946 ops/s
# Warmup Iteration  19: 92676.461 ops/s
# Warmup Iteration  20: 124626.370 ops/s
# Warmup Iteration  21: 128044.719 ops/s
# Warmup Iteration  22: 128603.398 ops/s
# Warmup Iteration  23: 128659.763 ops/s
# Warmup Iteration  24: 128381.280 ops/s
# Warmup Iteration  25: 128293.215 ops/s
# Warmup Iteration  26: 128370.990 ops/s
# Warmup Iteration  27: 128628.843 ops/s
# Warmup Iteration  28: 128317.199 ops/s
# Warmup Iteration  29: 127971.452 ops/s
# Warmup Iteration  30: 128217.428 ops/s
Iteration   1: 128273.827 ops/s
Iteration   2: 128800.224 ops/s
Iteration   3: 128554.525 ops/s
Iteration   4: 128694.087 ops/s
Iteration   5: 128804.584 ops/s
Iteration   6: 128781.867 ops/s
Iteration   7: 128710.832 ops/s
Iteration   8: 128639.189 ops/s
Iteration   9: 128701.464 ops/s
Iteration  10: 128252.212 ops/s
Iteration  11: 128138.304 ops/s
Iteration  12: 129009.178 ops/s
Iteration  13: 129065.449 ops/s
Iteration  14: 128888.098 ops/s
Iteration  15: 128062.529 ops/s
Iteration  16: 128274.821 ops/s
Iteration  17: 128230.697 ops/s
Iteration  18: 128614.717 ops/s
Iteration  19: 128457.570 ops/s
Iteration  20: 128015.313 ops/s
Iteration  21: 128372.523 ops/s
Iteration  22: 128231.289 ops/s
Iteration  23: 128628.547 ops/s
Iteration  24: 128360.894 ops/s
Iteration  25: 128600.837 ops/s
Iteration  26: 128512.870 ops/s
Iteration  27: 128629.487 ops/s
Iteration  28: 128428.488 ops/s
Iteration  29: 128215.355 ops/s
Iteration  30: 127962.552 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_2._Benchmark.benchmark_Cluster_2":
  128497.078 ±(99.9%) 195.026 ops/s [Average]
  (min, avg, max) = (127962.552, 128497.078, 129065.449), stdev = 291.905
  CI (99.9%): [128302.052, 128692.103] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score     Error  Units
Cluster_2._Benchmark.benchmark_Cluster_2  thrpt   30  128497.078 ± 195.026  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_20._Benchmark.benchmark_Cluster_20$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_20._Benchmark.benchmark_Cluster_20

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 37867.499 ops/s
# Warmup Iteration   2: 63282.087 ops/s
# Warmup Iteration   3: 74361.621 ops/s
# Warmup Iteration   4: 109520.512 ops/s
# Warmup Iteration   5: 108602.884 ops/s
# Warmup Iteration   6: 107509.527 ops/s
# Warmup Iteration   7: 108518.452 ops/s
# Warmup Iteration   8: 108870.666 ops/s
# Warmup Iteration   9: 108499.398 ops/s
# Warmup Iteration  10: 108801.358 ops/s
# Warmup Iteration  11: 109280.983 ops/s
# Warmup Iteration  12: 73651.261 ops/s
# Warmup Iteration  13: 109301.294 ops/s
# Warmup Iteration  14: 108941.214 ops/s
# Warmup Iteration  15: 108774.187 ops/s
# Warmup Iteration  16: 108748.206 ops/s
# Warmup Iteration  17: 109771.980 ops/s
# Warmup Iteration  18: 109430.202 ops/s
# Warmup Iteration  19: 110047.357 ops/s
# Warmup Iteration  20: 109935.839 ops/s
# Warmup Iteration  21: 109747.286 ops/s
# Warmup Iteration  22: 109950.219 ops/s
# Warmup Iteration  23: 109999.015 ops/s
# Warmup Iteration  24: 109406.081 ops/s
# Warmup Iteration  25: 109947.876 ops/s
# Warmup Iteration  26: 109841.066 ops/s
# Warmup Iteration  27: 109772.567 ops/s
# Warmup Iteration  28: 110003.551 ops/s
# Warmup Iteration  29: 109478.578 ops/s
# Warmup Iteration  30: 109682.569 ops/s
Iteration   1: 109659.797 ops/s
Iteration   2: 109690.411 ops/s
Iteration   3: 109879.345 ops/s
Iteration   4: 109827.930 ops/s
Iteration   5: 109824.032 ops/s
Iteration   6: 109599.511 ops/s
Iteration   7: 109849.327 ops/s
Iteration   8: 109865.970 ops/s
Iteration   9: 109737.784 ops/s
Iteration  10: 109900.154 ops/s
Iteration  11: 109888.263 ops/s
Iteration  12: 109861.963 ops/s
Iteration  13: 109037.901 ops/s
Iteration  14: 109306.886 ops/s
Iteration  15: 109702.743 ops/s
Iteration  16: 109804.631 ops/s
Iteration  17: 109475.400 ops/s
Iteration  18: 109509.219 ops/s
Iteration  19: 109667.983 ops/s
Iteration  20: 109490.655 ops/s
Iteration  21: 109549.580 ops/s
Iteration  22: 109515.004 ops/s
Iteration  23: 109361.653 ops/s
Iteration  24: 109457.104 ops/s
Iteration  25: 109716.600 ops/s
Iteration  26: 109363.873 ops/s
Iteration  27: 109708.305 ops/s
Iteration  28: 109536.449 ops/s
Iteration  29: 109275.908 ops/s
Iteration  30: 109408.107 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_20._Benchmark.benchmark_Cluster_20":
  109615.750 ±(99.9%) 146.103 ops/s [Average]
  (min, avg, max) = (109037.901, 109615.750, 109900.154), stdev = 218.680
  CI (99.9%): [109469.647, 109761.852] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_20._Benchmark.benchmark_Cluster_20  thrpt   30  109615.750 ± 146.103  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_200._Benchmark.benchmark_Cluster_200$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_200._Benchmark.benchmark_Cluster_200

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 156293.715 ops/s
# Warmup Iteration   2: 176436.467 ops/s
# Warmup Iteration   3: 180027.352 ops/s
# Warmup Iteration   4: 263570.009 ops/s
# Warmup Iteration   5: 263058.746 ops/s
# Warmup Iteration   6: 263142.395 ops/s
# Warmup Iteration   7: 260684.139 ops/s
# Warmup Iteration   8: 263591.059 ops/s
# Warmup Iteration   9: 262987.935 ops/s
# Warmup Iteration  10: 262926.930 ops/s
# Warmup Iteration  11: 263210.834 ops/s
# Warmup Iteration  12: 262906.539 ops/s
# Warmup Iteration  13: 262512.374 ops/s
# Warmup Iteration  14: 262981.982 ops/s
# Warmup Iteration  15: 203877.386 ops/s
# Warmup Iteration  16: 240717.337 ops/s
# Warmup Iteration  17: 261725.468 ops/s
# Warmup Iteration  18: 261629.588 ops/s
# Warmup Iteration  19: 261578.838 ops/s
# Warmup Iteration  20: 261665.954 ops/s
# Warmup Iteration  21: 261558.981 ops/s
# Warmup Iteration  22: 261789.215 ops/s
# Warmup Iteration  23: 261310.855 ops/s
# Warmup Iteration  24: 261839.308 ops/s
# Warmup Iteration  25: 261542.620 ops/s
# Warmup Iteration  26: 261460.187 ops/s
# Warmup Iteration  27: 261409.638 ops/s
# Warmup Iteration  28: 261612.826 ops/s
# Warmup Iteration  29: 261646.309 ops/s
# Warmup Iteration  30: 261810.863 ops/s
Iteration   1: 261880.006 ops/s
Iteration   2: 261443.216 ops/s
Iteration   3: 261862.476 ops/s
Iteration   4: 261804.596 ops/s
Iteration   5: 261737.285 ops/s
Iteration   6: 261640.673 ops/s
Iteration   7: 261504.045 ops/s
Iteration   8: 261449.100 ops/s
Iteration   9: 261597.095 ops/s
Iteration  10: 261533.047 ops/s
Iteration  11: 261333.204 ops/s
Iteration  12: 261107.658 ops/s
Iteration  13: 261636.444 ops/s
Iteration  14: 261809.986 ops/s
Iteration  15: 261714.890 ops/s
Iteration  16: 261763.632 ops/s
Iteration  17: 261601.445 ops/s
Iteration  18: 261577.326 ops/s
Iteration  19: 261833.453 ops/s
Iteration  20: 261794.793 ops/s
Iteration  21: 261661.948 ops/s
Iteration  22: 261618.005 ops/s
Iteration  23: 261306.332 ops/s
Iteration  24: 261545.460 ops/s
Iteration  25: 261299.685 ops/s
Iteration  26: 261535.558 ops/s
Iteration  27: 261595.259 ops/s
Iteration  28: 261522.077 ops/s
Iteration  29: 261941.644 ops/s
Iteration  30: 261931.857 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_200._Benchmark.benchmark_Cluster_200":
  261619.406 ±(99.9%) 134.313 ops/s [Average]
  (min, avg, max) = (261107.658, 261619.406, 261941.644), stdev = 201.033
  CI (99.9%): [261485.094, 261753.719] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_200._Benchmark.benchmark_Cluster_200  thrpt   30  261619.406 ± 134.313  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_201._Benchmark.benchmark_Cluster_201$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_201._Benchmark.benchmark_Cluster_201

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69905.374 ops/s
# Warmup Iteration   2: 113254.208 ops/s
# Warmup Iteration   3: 150777.717 ops/s
# Warmup Iteration   4: 200866.470 ops/s
# Warmup Iteration   5: 201583.992 ops/s
# Warmup Iteration   6: 198832.032 ops/s
# Warmup Iteration   7: 200533.082 ops/s
# Warmup Iteration   8: 200474.413 ops/s
# Warmup Iteration   9: 200921.886 ops/s
# Warmup Iteration  10: 200258.593 ops/s
# Warmup Iteration  11: 137966.389 ops/s
# Warmup Iteration  12: 201197.342 ops/s
# Warmup Iteration  13: 200545.001 ops/s
# Warmup Iteration  14: 200923.067 ops/s
# Warmup Iteration  15: 200993.338 ops/s
# Warmup Iteration  16: 200800.295 ops/s
# Warmup Iteration  17: 200955.856 ops/s
# Warmup Iteration  18: 201354.992 ops/s
# Warmup Iteration  19: 201139.405 ops/s
# Warmup Iteration  20: 201267.336 ops/s
# Warmup Iteration  21: 201411.653 ops/s
# Warmup Iteration  22: 201055.799 ops/s
# Warmup Iteration  23: 200896.650 ops/s
# Warmup Iteration  24: 201380.685 ops/s
# Warmup Iteration  25: 201473.747 ops/s
# Warmup Iteration  26: 201253.883 ops/s
# Warmup Iteration  27: 201608.122 ops/s
# Warmup Iteration  28: 201179.889 ops/s
# Warmup Iteration  29: 201481.905 ops/s
# Warmup Iteration  30: 201003.177 ops/s
Iteration   1: 201096.303 ops/s
Iteration   2: 201002.867 ops/s
Iteration   3: 200577.187 ops/s
Iteration   4: 201256.391 ops/s
Iteration   5: 201713.631 ops/s
Iteration   6: 201131.211 ops/s
Iteration   7: 200732.458 ops/s
Iteration   8: 201265.130 ops/s
Iteration   9: 201796.191 ops/s
Iteration  10: 201290.137 ops/s
Iteration  11: 201442.860 ops/s
Iteration  12: 200990.658 ops/s
Iteration  13: 200953.504 ops/s
Iteration  14: 201338.397 ops/s
Iteration  15: 201162.279 ops/s
Iteration  16: 200658.352 ops/s
Iteration  17: 200897.729 ops/s
Iteration  18: 200230.516 ops/s
Iteration  19: 200439.870 ops/s
Iteration  20: 200897.722 ops/s
Iteration  21: 201550.205 ops/s
Iteration  22: 200804.169 ops/s
Iteration  23: 200579.771 ops/s
Iteration  24: 201472.542 ops/s
Iteration  25: 201352.677 ops/s
Iteration  26: 200934.947 ops/s
Iteration  27: 200541.140 ops/s
Iteration  28: 200835.503 ops/s
Iteration  29: 201111.870 ops/s
Iteration  30: 200927.861 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_201._Benchmark.benchmark_Cluster_201":
  201032.803 ±(99.9%) 251.691 ops/s [Average]
  (min, avg, max) = (200230.516, 201032.803, 201796.191), stdev = 376.719
  CI (99.9%): [200781.112, 201284.493] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_201._Benchmark.benchmark_Cluster_201  thrpt   30  201032.803 ± 251.691  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_202._Benchmark.benchmark_Cluster_202$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_202._Benchmark.benchmark_Cluster_202

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61699.767 ops/s
# Warmup Iteration   2: 91870.836 ops/s
# Warmup Iteration   3: 128305.506 ops/s
# Warmup Iteration   4: 164251.007 ops/s
# Warmup Iteration   5: 164433.055 ops/s
# Warmup Iteration   6: 164533.346 ops/s
# Warmup Iteration   7: 164411.951 ops/s
# Warmup Iteration   8: 164054.106 ops/s
# Warmup Iteration   9: 163633.444 ops/s
# Warmup Iteration  10: 146496.945 ops/s
# Warmup Iteration  11: 130355.479 ops/s
# Warmup Iteration  12: 164007.842 ops/s
# Warmup Iteration  13: 163980.344 ops/s
# Warmup Iteration  14: 163994.726 ops/s
# Warmup Iteration  15: 163667.630 ops/s
# Warmup Iteration  16: 163816.154 ops/s
# Warmup Iteration  17: 164031.420 ops/s
# Warmup Iteration  18: 163971.100 ops/s
# Warmup Iteration  19: 163849.974 ops/s
# Warmup Iteration  20: 163725.330 ops/s
# Warmup Iteration  21: 163920.410 ops/s
# Warmup Iteration  22: 163764.061 ops/s
# Warmup Iteration  23: 164008.954 ops/s
# Warmup Iteration  24: 163652.117 ops/s
# Warmup Iteration  25: 163658.463 ops/s
# Warmup Iteration  26: 163359.478 ops/s
# Warmup Iteration  27: 163653.413 ops/s
# Warmup Iteration  28: 164022.169 ops/s
# Warmup Iteration  29: 163607.258 ops/s
# Warmup Iteration  30: 163820.158 ops/s
Iteration   1: 163224.137 ops/s
Iteration   2: 162835.683 ops/s
Iteration   3: 163201.094 ops/s
Iteration   4: 162912.073 ops/s
Iteration   5: 163063.798 ops/s
Iteration   6: 163358.472 ops/s
Iteration   7: 163330.320 ops/s
Iteration   8: 163664.661 ops/s
Iteration   9: 163559.528 ops/s
Iteration  10: 163517.337 ops/s
Iteration  11: 163539.898 ops/s
Iteration  12: 163474.939 ops/s
Iteration  13: 164066.622 ops/s
Iteration  14: 163954.708 ops/s
Iteration  15: 163494.537 ops/s
Iteration  16: 163721.038 ops/s
Iteration  17: 163448.579 ops/s
Iteration  18: 163426.757 ops/s
Iteration  19: 163289.724 ops/s
Iteration  20: 163720.031 ops/s
Iteration  21: 163265.956 ops/s
Iteration  22: 163377.098 ops/s
Iteration  23: 163028.377 ops/s
Iteration  24: 163513.083 ops/s
Iteration  25: 164043.088 ops/s
Iteration  26: 163864.383 ops/s
Iteration  27: 163955.017 ops/s
Iteration  28: 164120.470 ops/s
Iteration  29: 163967.607 ops/s
Iteration  30: 164120.962 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_202._Benchmark.benchmark_Cluster_202":
  163535.332 ±(99.9%) 241.245 ops/s [Average]
  (min, avg, max) = (162835.683, 163535.332, 164120.962), stdev = 361.084
  CI (99.9%): [163294.088, 163776.577] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_202._Benchmark.benchmark_Cluster_202  thrpt   30  163535.332 ± 241.245  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_203._Benchmark.benchmark_Cluster_203$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_203._Benchmark.benchmark_Cluster_203

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70590.935 ops/s
# Warmup Iteration   2: 93883.885 ops/s
# Warmup Iteration   3: 146047.999 ops/s
# Warmup Iteration   4: 174351.065 ops/s
# Warmup Iteration   5: 172243.516 ops/s
# Warmup Iteration   6: 173794.674 ops/s
# Warmup Iteration   7: 174255.234 ops/s
# Warmup Iteration   8: 174376.929 ops/s
# Warmup Iteration   9: 173909.573 ops/s
# Warmup Iteration  10: 117813.243 ops/s
# Warmup Iteration  11: 174475.363 ops/s
# Warmup Iteration  12: 173851.730 ops/s
# Warmup Iteration  13: 174447.060 ops/s
# Warmup Iteration  14: 174425.110 ops/s
# Warmup Iteration  15: 174048.270 ops/s
# Warmup Iteration  16: 174172.398 ops/s
# Warmup Iteration  17: 173755.223 ops/s
# Warmup Iteration  18: 173798.301 ops/s
# Warmup Iteration  19: 173805.910 ops/s
# Warmup Iteration  20: 173834.649 ops/s
# Warmup Iteration  21: 174437.311 ops/s
# Warmup Iteration  22: 174119.768 ops/s
# Warmup Iteration  23: 174414.876 ops/s
# Warmup Iteration  24: 174236.335 ops/s
# Warmup Iteration  25: 174246.486 ops/s
# Warmup Iteration  26: 174210.466 ops/s
# Warmup Iteration  27: 174174.152 ops/s
# Warmup Iteration  28: 173915.904 ops/s
# Warmup Iteration  29: 173462.090 ops/s
# Warmup Iteration  30: 173790.180 ops/s
Iteration   1: 173940.555 ops/s
Iteration   2: 173351.763 ops/s
Iteration   3: 173112.106 ops/s
Iteration   4: 173648.911 ops/s
Iteration   5: 173961.701 ops/s
Iteration   6: 174069.521 ops/s
Iteration   7: 174250.535 ops/s
Iteration   8: 173950.113 ops/s
Iteration   9: 173953.716 ops/s
Iteration  10: 174317.180 ops/s
Iteration  11: 173763.660 ops/s
Iteration  12: 173927.409 ops/s
Iteration  13: 173588.391 ops/s
Iteration  14: 173564.355 ops/s
Iteration  15: 174245.216 ops/s
Iteration  16: 173916.410 ops/s
Iteration  17: 174249.581 ops/s
Iteration  18: 174435.600 ops/s
Iteration  19: 173726.474 ops/s
Iteration  20: 174111.769 ops/s
Iteration  21: 174513.672 ops/s
Iteration  22: 174207.454 ops/s
Iteration  23: 174461.301 ops/s
Iteration  24: 174388.093 ops/s
Iteration  25: 173983.714 ops/s
Iteration  26: 174401.187 ops/s
Iteration  27: 174099.906 ops/s
Iteration  28: 174083.349 ops/s
Iteration  29: 173785.192 ops/s
Iteration  30: 173753.864 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_203._Benchmark.benchmark_Cluster_203":
  173992.090 ±(99.9%) 225.026 ops/s [Average]
  (min, avg, max) = (173112.106, 173992.090, 174513.672), stdev = 336.809
  CI (99.9%): [173767.063, 174217.116] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_203._Benchmark.benchmark_Cluster_203  thrpt   30  173992.090 ± 225.026  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_204._Benchmark.benchmark_Cluster_204$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_204._Benchmark.benchmark_Cluster_204

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 108794.176 ops/s
# Warmup Iteration   2: 115568.757 ops/s
# Warmup Iteration   3: 117187.005 ops/s
# Warmup Iteration   4: 117615.254 ops/s
# Warmup Iteration   5: 127387.813 ops/s
# Warmup Iteration   6: 148075.543 ops/s
# Warmup Iteration   7: 148231.348 ops/s
# Warmup Iteration   8: 147685.109 ops/s
# Warmup Iteration   9: 147598.537 ops/s
# Warmup Iteration  10: 147760.407 ops/s
# Warmup Iteration  11: 147761.406 ops/s
# Warmup Iteration  12: 146364.326 ops/s
# Warmup Iteration  13: 147764.206 ops/s
# Warmup Iteration  14: 147791.472 ops/s
# Warmup Iteration  15: 147483.025 ops/s
# Warmup Iteration  16: 147033.021 ops/s
# Warmup Iteration  17: 153958.129 ops/s
# Warmup Iteration  18: 153862.505 ops/s
# Warmup Iteration  19: 153804.594 ops/s
# Warmup Iteration  20: 153963.453 ops/s
# Warmup Iteration  21: 153856.213 ops/s
# Warmup Iteration  22: 154516.747 ops/s
# Warmup Iteration  23: 154190.120 ops/s
# Warmup Iteration  24: 154058.653 ops/s
# Warmup Iteration  25: 154073.869 ops/s
# Warmup Iteration  26: 154131.527 ops/s
# Warmup Iteration  27: 122134.611 ops/s
# Warmup Iteration  28: 139608.941 ops/s
# Warmup Iteration  29: 154146.412 ops/s
# Warmup Iteration  30: 154303.763 ops/s
Iteration   1: 154222.541 ops/s
Iteration   2: 154366.785 ops/s
Iteration   3: 154173.000 ops/s
Iteration   4: 154275.564 ops/s
Iteration   5: 154409.573 ops/s
Iteration   6: 154834.800 ops/s
Iteration   7: 154599.086 ops/s
Iteration   8: 154374.950 ops/s
Iteration   9: 154300.430 ops/s
Iteration  10: 154080.893 ops/s
Iteration  11: 154157.993 ops/s
Iteration  12: 154087.711 ops/s
Iteration  13: 154344.836 ops/s
Iteration  14: 154168.360 ops/s
Iteration  15: 154269.652 ops/s
Iteration  16: 154895.065 ops/s
Iteration  17: 154409.039 ops/s
Iteration  18: 154420.632 ops/s
Iteration  19: 154306.725 ops/s
Iteration  20: 154485.667 ops/s
Iteration  21: 154674.352 ops/s
Iteration  22: 153886.541 ops/s
Iteration  23: 154354.213 ops/s
Iteration  24: 154150.684 ops/s
Iteration  25: 153916.930 ops/s
Iteration  26: 153648.648 ops/s
Iteration  27: 154875.579 ops/s
Iteration  28: 154290.725 ops/s
Iteration  29: 154814.601 ops/s
Iteration  30: 154691.538 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_204._Benchmark.benchmark_Cluster_204":
  154349.570 ±(99.9%) 198.192 ops/s [Average]
  (min, avg, max) = (153648.648, 154349.570, 154895.065), stdev = 296.644
  CI (99.9%): [154151.379, 154547.762] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_204._Benchmark.benchmark_Cluster_204  thrpt   30  154349.570 ± 198.192  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_205._Benchmark.benchmark_Cluster_205$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_205._Benchmark.benchmark_Cluster_205

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 101957.053 ops/s
# Warmup Iteration   2: 115717.732 ops/s
# Warmup Iteration   3: 117703.894 ops/s
# Warmup Iteration   4: 130657.274 ops/s
# Warmup Iteration   5: 160576.386 ops/s
# Warmup Iteration   6: 159862.508 ops/s
# Warmup Iteration   7: 159078.916 ops/s
# Warmup Iteration   8: 159809.585 ops/s
# Warmup Iteration   9: 157687.020 ops/s
# Warmup Iteration  10: 160950.456 ops/s
# Warmup Iteration  11: 160649.699 ops/s
# Warmup Iteration  12: 160454.350 ops/s
# Warmup Iteration  13: 160344.038 ops/s
# Warmup Iteration  14: 160128.961 ops/s
# Warmup Iteration  15: 160825.161 ops/s
# Warmup Iteration  16: 160520.951 ops/s
# Warmup Iteration  17: 168759.785 ops/s
# Warmup Iteration  18: 168545.211 ops/s
# Warmup Iteration  19: 168581.822 ops/s
# Warmup Iteration  20: 133404.847 ops/s
# Warmup Iteration  21: 151188.739 ops/s
# Warmup Iteration  22: 168583.286 ops/s
# Warmup Iteration  23: 169624.663 ops/s
# Warmup Iteration  24: 169291.670 ops/s
# Warmup Iteration  25: 169226.876 ops/s
# Warmup Iteration  26: 169004.500 ops/s
# Warmup Iteration  27: 168559.183 ops/s
# Warmup Iteration  28: 168256.515 ops/s
# Warmup Iteration  29: 168567.965 ops/s
# Warmup Iteration  30: 167732.989 ops/s
Iteration   1: 167712.072 ops/s
Iteration   2: 167940.028 ops/s
Iteration   3: 168531.079 ops/s
Iteration   4: 168642.018 ops/s
Iteration   5: 168761.981 ops/s
Iteration   6: 168794.548 ops/s
Iteration   7: 168585.726 ops/s
Iteration   8: 168507.197 ops/s
Iteration   9: 168377.021 ops/s
Iteration  10: 168941.192 ops/s
Iteration  11: 167880.298 ops/s
Iteration  12: 167833.943 ops/s
Iteration  13: 168053.551 ops/s
Iteration  14: 168603.577 ops/s
Iteration  15: 168326.209 ops/s
Iteration  16: 168548.458 ops/s
Iteration  17: 169110.797 ops/s
Iteration  18: 169380.167 ops/s
Iteration  19: 169064.385 ops/s
Iteration  20: 168751.761 ops/s
Iteration  21: 169430.376 ops/s
Iteration  22: 169283.269 ops/s
Iteration  23: 167832.313 ops/s
Iteration  24: 168209.939 ops/s
Iteration  25: 168029.555 ops/s
Iteration  26: 168104.762 ops/s
Iteration  27: 168142.054 ops/s
Iteration  28: 168845.178 ops/s
Iteration  29: 168694.604 ops/s
Iteration  30: 168590.524 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_205._Benchmark.benchmark_Cluster_205":
  168516.953 ±(99.9%) 318.714 ops/s [Average]
  (min, avg, max) = (167712.072, 168516.953, 169430.376), stdev = 477.036
  CI (99.9%): [168198.239, 168835.667] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_205._Benchmark.benchmark_Cluster_205  thrpt   30  168516.953 ± 318.714  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_206._Benchmark.benchmark_Cluster_206$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_206._Benchmark.benchmark_Cluster_206

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47603.593 ops/s
# Warmup Iteration   2: 75248.827 ops/s
# Warmup Iteration   3: 116972.266 ops/s
# Warmup Iteration   4: 142072.514 ops/s
# Warmup Iteration   5: 142090.408 ops/s
# Warmup Iteration   6: 141750.389 ops/s
# Warmup Iteration   7: 141438.966 ops/s
# Warmup Iteration   8: 141788.751 ops/s
# Warmup Iteration   9: 126329.586 ops/s
# Warmup Iteration  10: 112842.741 ops/s
# Warmup Iteration  11: 141794.780 ops/s
# Warmup Iteration  12: 142149.022 ops/s
# Warmup Iteration  13: 141553.641 ops/s
# Warmup Iteration  14: 141930.055 ops/s
# Warmup Iteration  15: 142178.770 ops/s
# Warmup Iteration  16: 141870.945 ops/s
# Warmup Iteration  17: 141700.444 ops/s
# Warmup Iteration  18: 142388.895 ops/s
# Warmup Iteration  19: 141636.652 ops/s
# Warmup Iteration  20: 142198.254 ops/s
# Warmup Iteration  21: 141720.342 ops/s
# Warmup Iteration  22: 141744.371 ops/s
# Warmup Iteration  23: 141248.339 ops/s
# Warmup Iteration  24: 141291.362 ops/s
# Warmup Iteration  25: 141421.406 ops/s
# Warmup Iteration  26: 141744.417 ops/s
# Warmup Iteration  27: 141350.144 ops/s
# Warmup Iteration  28: 142346.719 ops/s
# Warmup Iteration  29: 142228.622 ops/s
# Warmup Iteration  30: 141775.986 ops/s
Iteration   1: 142826.635 ops/s
Iteration   2: 141821.625 ops/s
Iteration   3: 142012.470 ops/s
Iteration   4: 141767.915 ops/s
Iteration   5: 141828.464 ops/s
Iteration   6: 142319.472 ops/s
Iteration   7: 142283.530 ops/s
Iteration   8: 142483.747 ops/s
Iteration   9: 142787.022 ops/s
Iteration  10: 142315.495 ops/s
Iteration  11: 141628.657 ops/s
Iteration  12: 141858.235 ops/s
Iteration  13: 142292.861 ops/s
Iteration  14: 142278.875 ops/s
Iteration  15: 142320.352 ops/s
Iteration  16: 142245.286 ops/s
Iteration  17: 141777.445 ops/s
Iteration  18: 142061.277 ops/s
Iteration  19: 142747.312 ops/s
Iteration  20: 142729.786 ops/s
Iteration  21: 142466.637 ops/s
Iteration  22: 142568.736 ops/s
Iteration  23: 142058.931 ops/s
Iteration  24: 141981.324 ops/s
Iteration  25: 142166.889 ops/s
Iteration  26: 142714.991 ops/s
Iteration  27: 142416.297 ops/s
Iteration  28: 142289.860 ops/s
Iteration  29: 142080.593 ops/s
Iteration  30: 142065.550 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_206._Benchmark.benchmark_Cluster_206":
  142239.876 ±(99.9%) 221.541 ops/s [Average]
  (min, avg, max) = (141628.657, 142239.876, 142826.635), stdev = 331.593
  CI (99.9%): [142018.334, 142461.417] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_206._Benchmark.benchmark_Cluster_206  thrpt   30  142239.876 ± 221.541  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_207._Benchmark.benchmark_Cluster_207$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_207._Benchmark.benchmark_Cluster_207

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66791.310 ops/s
# Warmup Iteration   2: 120729.384 ops/s
# Warmup Iteration   3: 146252.619 ops/s
# Warmup Iteration   4: 232455.745 ops/s
# Warmup Iteration   5: 230798.008 ops/s
# Warmup Iteration   6: 229167.509 ops/s
# Warmup Iteration   7: 231423.998 ops/s
# Warmup Iteration   8: 232026.960 ops/s
# Warmup Iteration   9: 232827.775 ops/s
# Warmup Iteration  10: 231369.949 ops/s
# Warmup Iteration  11: 163610.747 ops/s
# Warmup Iteration  12: 216875.461 ops/s
# Warmup Iteration  13: 231702.500 ops/s
# Warmup Iteration  14: 232092.918 ops/s
# Warmup Iteration  15: 231982.888 ops/s
# Warmup Iteration  16: 231474.913 ops/s
# Warmup Iteration  17: 232504.319 ops/s
# Warmup Iteration  18: 232258.612 ops/s
# Warmup Iteration  19: 232495.451 ops/s
# Warmup Iteration  20: 232476.663 ops/s
# Warmup Iteration  21: 232908.386 ops/s
# Warmup Iteration  22: 232688.952 ops/s
# Warmup Iteration  23: 232610.274 ops/s
# Warmup Iteration  24: 232255.254 ops/s
# Warmup Iteration  25: 232063.361 ops/s
# Warmup Iteration  26: 232164.817 ops/s
# Warmup Iteration  27: 231958.871 ops/s
# Warmup Iteration  28: 232037.300 ops/s
# Warmup Iteration  29: 232443.091 ops/s
# Warmup Iteration  30: 232255.302 ops/s
Iteration   1: 232147.896 ops/s
Iteration   2: 232789.695 ops/s
Iteration   3: 232183.071 ops/s
Iteration   4: 232518.676 ops/s
Iteration   5: 232346.293 ops/s
Iteration   6: 232676.878 ops/s
Iteration   7: 231916.123 ops/s
Iteration   8: 231251.547 ops/s
Iteration   9: 231786.153 ops/s
Iteration  10: 231250.230 ops/s
Iteration  11: 231813.085 ops/s
Iteration  12: 232276.310 ops/s
Iteration  13: 232032.300 ops/s
Iteration  14: 232042.718 ops/s
Iteration  15: 232183.900 ops/s
Iteration  16: 232364.637 ops/s
Iteration  17: 232032.032 ops/s
Iteration  18: 232213.956 ops/s
Iteration  19: 232051.128 ops/s
Iteration  20: 232307.758 ops/s
Iteration  21: 231553.262 ops/s
Iteration  22: 232379.730 ops/s
Iteration  23: 231987.538 ops/s
Iteration  24: 232289.736 ops/s
Iteration  25: 232694.821 ops/s
Iteration  26: 231962.561 ops/s
Iteration  27: 232329.941 ops/s
Iteration  28: 232407.461 ops/s
Iteration  29: 232308.817 ops/s
Iteration  30: 232482.837 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_207._Benchmark.benchmark_Cluster_207":
  232152.703 ±(99.9%) 246.331 ops/s [Average]
  (min, avg, max) = (231250.230, 232152.703, 232789.695), stdev = 368.696
  CI (99.9%): [231906.372, 232399.034] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_207._Benchmark.benchmark_Cluster_207  thrpt   30  232152.703 ± 246.331  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_208._Benchmark.benchmark_Cluster_208$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_208._Benchmark.benchmark_Cluster_208

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77557.503 ops/s
# Warmup Iteration   2: 102786.579 ops/s
# Warmup Iteration   3: 103225.223 ops/s
# Warmup Iteration   4: 119160.953 ops/s
# Warmup Iteration   5: 145614.203 ops/s
# Warmup Iteration   6: 145330.191 ops/s
# Warmup Iteration   7: 145707.890 ops/s
# Warmup Iteration   8: 145920.053 ops/s
# Warmup Iteration   9: 143972.573 ops/s
# Warmup Iteration  10: 146185.947 ops/s
# Warmup Iteration  11: 146045.550 ops/s
# Warmup Iteration  12: 145608.774 ops/s
# Warmup Iteration  13: 146053.517 ops/s
# Warmup Iteration  14: 145747.741 ops/s
# Warmup Iteration  15: 145541.454 ops/s
# Warmup Iteration  16: 145670.962 ops/s
# Warmup Iteration  17: 152778.310 ops/s
# Warmup Iteration  18: 147779.698 ops/s
# Warmup Iteration  19: 107327.692 ops/s
# Warmup Iteration  20: 152056.790 ops/s
# Warmup Iteration  21: 152048.787 ops/s
# Warmup Iteration  22: 152011.202 ops/s
# Warmup Iteration  23: 151965.791 ops/s
# Warmup Iteration  24: 152372.957 ops/s
# Warmup Iteration  25: 151691.587 ops/s
# Warmup Iteration  26: 151185.282 ops/s
# Warmup Iteration  27: 152145.493 ops/s
# Warmup Iteration  28: 151530.822 ops/s
# Warmup Iteration  29: 151573.260 ops/s
# Warmup Iteration  30: 151389.409 ops/s
Iteration   1: 150641.159 ops/s
Iteration   2: 151792.684 ops/s
Iteration   3: 151558.458 ops/s
Iteration   4: 151968.712 ops/s
Iteration   5: 151967.327 ops/s
Iteration   6: 151503.010 ops/s
Iteration   7: 151437.328 ops/s
Iteration   8: 151263.270 ops/s
Iteration   9: 151482.331 ops/s
Iteration  10: 152384.148 ops/s
Iteration  11: 152110.289 ops/s
Iteration  12: 151547.320 ops/s
Iteration  13: 152500.139 ops/s
Iteration  14: 152543.102 ops/s
Iteration  15: 151789.946 ops/s
Iteration  16: 151080.665 ops/s
Iteration  17: 150704.049 ops/s
Iteration  18: 151404.598 ops/s
Iteration  19: 151634.222 ops/s
Iteration  20: 151993.807 ops/s
Iteration  21: 151846.787 ops/s
Iteration  22: 151296.896 ops/s
Iteration  23: 151252.383 ops/s
Iteration  24: 151703.243 ops/s
Iteration  25: 152185.693 ops/s
Iteration  26: 151379.670 ops/s
Iteration  27: 151588.131 ops/s
Iteration  28: 151253.206 ops/s
Iteration  29: 150848.139 ops/s
Iteration  30: 151397.495 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_208._Benchmark.benchmark_Cluster_208":
  151601.940 ±(99.9%) 320.545 ops/s [Average]
  (min, avg, max) = (150641.159, 151601.940, 152543.102), stdev = 479.776
  CI (99.9%): [151281.396, 151922.485] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_208._Benchmark.benchmark_Cluster_208  thrpt   30  151601.940 ± 320.545  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_209._Benchmark.benchmark_Cluster_209$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_209._Benchmark.benchmark_Cluster_209

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 35722.828 ops/s
# Warmup Iteration   2: 61910.957 ops/s
# Warmup Iteration   3: 97603.347 ops/s
# Warmup Iteration   4: 124961.044 ops/s
# Warmup Iteration   5: 122829.287 ops/s
# Warmup Iteration   6: 124179.353 ops/s
# Warmup Iteration   7: 124794.740 ops/s
# Warmup Iteration   8: 125331.125 ops/s
# Warmup Iteration   9: 97107.964 ops/s
# Warmup Iteration  10: 112091.815 ops/s
# Warmup Iteration  11: 124356.051 ops/s
# Warmup Iteration  12: 124267.355 ops/s
# Warmup Iteration  13: 125383.254 ops/s
# Warmup Iteration  14: 125233.532 ops/s
# Warmup Iteration  15: 124240.642 ops/s
# Warmup Iteration  16: 125503.688 ops/s
# Warmup Iteration  17: 128172.342 ops/s
# Warmup Iteration  18: 127947.562 ops/s
# Warmup Iteration  19: 127590.485 ops/s
# Warmup Iteration  20: 127759.049 ops/s
# Warmup Iteration  21: 127983.898 ops/s
# Warmup Iteration  22: 127568.872 ops/s
# Warmup Iteration  23: 128220.060 ops/s
# Warmup Iteration  24: 128050.732 ops/s
# Warmup Iteration  25: 127412.421 ops/s
# Warmup Iteration  26: 127176.401 ops/s
# Warmup Iteration  27: 127799.297 ops/s
# Warmup Iteration  28: 127656.575 ops/s
# Warmup Iteration  29: 126666.212 ops/s
# Warmup Iteration  30: 127735.333 ops/s
Iteration   1: 127511.041 ops/s
Iteration   2: 127816.172 ops/s
Iteration   3: 127833.712 ops/s
Iteration   4: 128348.559 ops/s
Iteration   5: 127557.559 ops/s
Iteration   6: 127544.596 ops/s
Iteration   7: 127818.035 ops/s
Iteration   8: 127345.417 ops/s
Iteration   9: 127823.108 ops/s
Iteration  10: 127625.243 ops/s
Iteration  11: 127576.569 ops/s
Iteration  12: 127937.923 ops/s
Iteration  13: 127890.241 ops/s
Iteration  14: 127354.077 ops/s
Iteration  15: 127975.194 ops/s
Iteration  16: 127988.646 ops/s
Iteration  17: 127856.894 ops/s
Iteration  18: 127873.096 ops/s
Iteration  19: 126796.259 ops/s
Iteration  20: 127340.751 ops/s
Iteration  21: 127570.884 ops/s
Iteration  22: 127626.647 ops/s
Iteration  23: 126946.897 ops/s
Iteration  24: 127630.398 ops/s
Iteration  25: 127546.766 ops/s
Iteration  26: 127560.165 ops/s
Iteration  27: 127575.539 ops/s
Iteration  28: 127822.497 ops/s
Iteration  29: 127982.615 ops/s
Iteration  30: 128139.827 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_209._Benchmark.benchmark_Cluster_209":
  127673.844 ±(99.9%) 214.890 ops/s [Average]
  (min, avg, max) = (126796.259, 127673.844, 128348.559), stdev = 321.638
  CI (99.9%): [127458.954, 127888.734] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_209._Benchmark.benchmark_Cluster_209  thrpt   30  127673.844 ± 214.890  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_21._Benchmark.benchmark_Cluster_21$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_21._Benchmark.benchmark_Cluster_21

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66573.404 ops/s
# Warmup Iteration   2: 88898.655 ops/s
# Warmup Iteration   3: 105409.498 ops/s
# Warmup Iteration   4: 146613.827 ops/s
# Warmup Iteration   5: 146410.084 ops/s
# Warmup Iteration   6: 144863.227 ops/s
# Warmup Iteration   7: 146963.373 ops/s
# Warmup Iteration   8: 145874.195 ops/s
# Warmup Iteration   9: 146212.617 ops/s
# Warmup Iteration  10: 146757.328 ops/s
# Warmup Iteration  11: 147055.516 ops/s
# Warmup Iteration  12: 135922.666 ops/s
# Warmup Iteration  13: 110667.923 ops/s
# Warmup Iteration  14: 146724.221 ops/s
# Warmup Iteration  15: 146801.013 ops/s
# Warmup Iteration  16: 146905.962 ops/s
# Warmup Iteration  17: 146899.073 ops/s
# Warmup Iteration  18: 146782.167 ops/s
# Warmup Iteration  19: 146466.439 ops/s
# Warmup Iteration  20: 146992.067 ops/s
# Warmup Iteration  21: 146924.674 ops/s
# Warmup Iteration  22: 146812.296 ops/s
# Warmup Iteration  23: 146657.557 ops/s
# Warmup Iteration  24: 146776.505 ops/s
# Warmup Iteration  25: 146648.425 ops/s
# Warmup Iteration  26: 146917.755 ops/s
# Warmup Iteration  27: 146704.384 ops/s
# Warmup Iteration  28: 146124.688 ops/s
# Warmup Iteration  29: 146320.802 ops/s
# Warmup Iteration  30: 146712.363 ops/s
Iteration   1: 147131.826 ops/s
Iteration   2: 147150.614 ops/s
Iteration   3: 146963.866 ops/s
Iteration   4: 147009.824 ops/s
Iteration   5: 147040.120 ops/s
Iteration   6: 146389.324 ops/s
Iteration   7: 146009.360 ops/s
Iteration   8: 146744.862 ops/s
Iteration   9: 146846.978 ops/s
Iteration  10: 146564.027 ops/s
Iteration  11: 146306.868 ops/s
Iteration  12: 146322.338 ops/s
Iteration  13: 146861.408 ops/s
Iteration  14: 146596.039 ops/s
Iteration  15: 146068.415 ops/s
Iteration  16: 145430.167 ops/s
Iteration  17: 146670.427 ops/s
Iteration  18: 146161.868 ops/s
Iteration  19: 146024.751 ops/s
Iteration  20: 146154.341 ops/s
Iteration  21: 145952.035 ops/s
Iteration  22: 145875.449 ops/s
Iteration  23: 146485.464 ops/s
Iteration  24: 146225.288 ops/s
Iteration  25: 146837.771 ops/s
Iteration  26: 146314.902 ops/s
Iteration  27: 145632.188 ops/s
Iteration  28: 147019.386 ops/s
Iteration  29: 146343.844 ops/s
Iteration  30: 146253.838 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_21._Benchmark.benchmark_Cluster_21":
  146446.253 ±(99.9%) 303.657 ops/s [Average]
  (min, avg, max) = (145430.167, 146446.253, 147150.614), stdev = 454.499
  CI (99.9%): [146142.596, 146749.910] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_21._Benchmark.benchmark_Cluster_21  thrpt   30  146446.253 ± 303.657  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_210._Benchmark.benchmark_Cluster_210$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_210._Benchmark.benchmark_Cluster_210

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62036.349 ops/s
# Warmup Iteration   2: 85141.748 ops/s
# Warmup Iteration   3: 124788.102 ops/s
# Warmup Iteration   4: 164982.069 ops/s
# Warmup Iteration   5: 163163.894 ops/s
# Warmup Iteration   6: 164899.839 ops/s
# Warmup Iteration   7: 164318.293 ops/s
# Warmup Iteration   8: 164685.709 ops/s
# Warmup Iteration   9: 164851.155 ops/s
# Warmup Iteration  10: 136092.675 ops/s
# Warmup Iteration  11: 133989.062 ops/s
# Warmup Iteration  12: 164956.375 ops/s
# Warmup Iteration  13: 164975.435 ops/s
# Warmup Iteration  14: 164837.013 ops/s
# Warmup Iteration  15: 164827.309 ops/s
# Warmup Iteration  16: 165274.762 ops/s
# Warmup Iteration  17: 169533.888 ops/s
# Warmup Iteration  18: 169580.747 ops/s
# Warmup Iteration  19: 169642.601 ops/s
# Warmup Iteration  20: 169617.844 ops/s
# Warmup Iteration  21: 169650.748 ops/s
# Warmup Iteration  22: 169634.643 ops/s
# Warmup Iteration  23: 170140.005 ops/s
# Warmup Iteration  24: 170191.873 ops/s
# Warmup Iteration  25: 169617.296 ops/s
# Warmup Iteration  26: 168836.070 ops/s
# Warmup Iteration  27: 170012.543 ops/s
# Warmup Iteration  28: 169151.170 ops/s
# Warmup Iteration  29: 169342.014 ops/s
# Warmup Iteration  30: 169733.925 ops/s
Iteration   1: 169002.811 ops/s
Iteration   2: 168973.774 ops/s
Iteration   3: 169462.272 ops/s
Iteration   4: 168925.775 ops/s
Iteration   5: 168296.800 ops/s
Iteration   6: 169230.277 ops/s
Iteration   7: 168992.860 ops/s
Iteration   8: 169980.991 ops/s
Iteration   9: 169861.198 ops/s
Iteration  10: 169553.308 ops/s
Iteration  11: 168867.339 ops/s
Iteration  12: 169131.398 ops/s
Iteration  13: 169006.039 ops/s
Iteration  14: 168851.242 ops/s
Iteration  15: 170815.899 ops/s
Iteration  16: 168934.107 ops/s
Iteration  17: 169631.148 ops/s
Iteration  18: 169103.840 ops/s
Iteration  19: 170187.280 ops/s
Iteration  20: 169545.346 ops/s
Iteration  21: 169581.394 ops/s
Iteration  22: 169934.513 ops/s
Iteration  23: 169872.317 ops/s
Iteration  24: 169345.353 ops/s
Iteration  25: 169904.858 ops/s
Iteration  26: 169927.737 ops/s
Iteration  27: 168449.002 ops/s
Iteration  28: 169605.555 ops/s
Iteration  29: 170225.832 ops/s
Iteration  30: 169458.848 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_210._Benchmark.benchmark_Cluster_210":
  169421.970 ±(99.9%) 373.546 ops/s [Average]
  (min, avg, max) = (168296.800, 169421.970, 170815.899), stdev = 559.106
  CI (99.9%): [169048.424, 169795.516] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_210._Benchmark.benchmark_Cluster_210  thrpt   30  169421.970 ± 373.546  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_211._Benchmark.benchmark_Cluster_211$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_211._Benchmark.benchmark_Cluster_211

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86446.221 ops/s
# Warmup Iteration   2: 100996.020 ops/s
# Warmup Iteration   3: 102374.150 ops/s
# Warmup Iteration   4: 161260.456 ops/s
# Warmup Iteration   5: 165255.382 ops/s
# Warmup Iteration   6: 165373.978 ops/s
# Warmup Iteration   7: 162477.240 ops/s
# Warmup Iteration   8: 163923.712 ops/s
# Warmup Iteration   9: 163516.974 ops/s
# Warmup Iteration  10: 164251.404 ops/s
# Warmup Iteration  11: 164713.612 ops/s
# Warmup Iteration  12: 164703.655 ops/s
# Warmup Iteration  13: 163742.194 ops/s
# Warmup Iteration  14: 152784.429 ops/s
# Warmup Iteration  15: 115092.630 ops/s
# Warmup Iteration  16: 164697.172 ops/s
# Warmup Iteration  17: 168524.408 ops/s
# Warmup Iteration  18: 168749.809 ops/s
# Warmup Iteration  19: 168789.084 ops/s
# Warmup Iteration  20: 168771.881 ops/s
# Warmup Iteration  21: 168598.684 ops/s
# Warmup Iteration  22: 168531.460 ops/s
# Warmup Iteration  23: 168604.085 ops/s
# Warmup Iteration  24: 168580.405 ops/s
# Warmup Iteration  25: 168584.383 ops/s
# Warmup Iteration  26: 168470.397 ops/s
# Warmup Iteration  27: 168372.477 ops/s
# Warmup Iteration  28: 168715.465 ops/s
# Warmup Iteration  29: 168629.338 ops/s
# Warmup Iteration  30: 168322.379 ops/s
Iteration   1: 168564.485 ops/s
Iteration   2: 168649.213 ops/s
Iteration   3: 168242.129 ops/s
Iteration   4: 167995.987 ops/s
Iteration   5: 167858.653 ops/s
Iteration   6: 168523.639 ops/s
Iteration   7: 168348.921 ops/s
Iteration   8: 168037.161 ops/s
Iteration   9: 168040.324 ops/s
Iteration  10: 168312.608 ops/s
Iteration  11: 168868.137 ops/s
Iteration  12: 168522.555 ops/s
Iteration  13: 168461.377 ops/s
Iteration  14: 169088.074 ops/s
Iteration  15: 168480.701 ops/s
Iteration  16: 168490.477 ops/s
Iteration  17: 169032.431 ops/s
Iteration  18: 168802.339 ops/s
Iteration  19: 168536.283 ops/s
Iteration  20: 167944.458 ops/s
Iteration  21: 169230.874 ops/s
Iteration  22: 168307.585 ops/s
Iteration  23: 168692.723 ops/s
Iteration  24: 168760.531 ops/s
Iteration  25: 168261.858 ops/s
Iteration  26: 167917.834 ops/s
Iteration  27: 168030.070 ops/s
Iteration  28: 167890.696 ops/s
Iteration  29: 168416.510 ops/s
Iteration  30: 168700.121 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_211._Benchmark.benchmark_Cluster_211":
  168433.625 ±(99.9%) 247.812 ops/s [Average]
  (min, avg, max) = (167858.653, 168433.625, 169230.874), stdev = 370.914
  CI (99.9%): [168185.813, 168681.437] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_211._Benchmark.benchmark_Cluster_211  thrpt   30  168433.625 ± 247.812  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_212._Benchmark.benchmark_Cluster_212$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_212._Benchmark.benchmark_Cluster_212

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91839.554 ops/s
# Warmup Iteration   2: 108267.550 ops/s
# Warmup Iteration   3: 108880.867 ops/s
# Warmup Iteration   4: 116182.007 ops/s
# Warmup Iteration   5: 148350.407 ops/s
# Warmup Iteration   6: 148647.589 ops/s
# Warmup Iteration   7: 147701.108 ops/s
# Warmup Iteration   8: 148354.817 ops/s
# Warmup Iteration   9: 148137.695 ops/s
# Warmup Iteration  10: 147911.702 ops/s
# Warmup Iteration  11: 147892.411 ops/s
# Warmup Iteration  12: 147843.465 ops/s
# Warmup Iteration  13: 148429.902 ops/s
# Warmup Iteration  14: 148496.055 ops/s
# Warmup Iteration  15: 148202.273 ops/s
# Warmup Iteration  16: 148482.119 ops/s
# Warmup Iteration  17: 152703.443 ops/s
# Warmup Iteration  18: 152333.592 ops/s
# Warmup Iteration  19: 152723.983 ops/s
# Warmup Iteration  20: 138372.532 ops/s
# Warmup Iteration  21: 118454.590 ops/s
# Warmup Iteration  22: 152819.382 ops/s
# Warmup Iteration  23: 152032.906 ops/s
# Warmup Iteration  24: 152194.004 ops/s
# Warmup Iteration  25: 152233.117 ops/s
# Warmup Iteration  26: 152077.438 ops/s
# Warmup Iteration  27: 151617.526 ops/s
# Warmup Iteration  28: 152028.192 ops/s
# Warmup Iteration  29: 151891.148 ops/s
# Warmup Iteration  30: 152299.902 ops/s
Iteration   1: 152101.044 ops/s
Iteration   2: 152191.269 ops/s
Iteration   3: 152288.133 ops/s
Iteration   4: 152261.626 ops/s
Iteration   5: 152267.408 ops/s
Iteration   6: 152101.698 ops/s
Iteration   7: 152121.094 ops/s
Iteration   8: 152076.524 ops/s
Iteration   9: 152048.498 ops/s
Iteration  10: 152254.843 ops/s
Iteration  11: 152617.263 ops/s
Iteration  12: 152397.342 ops/s
Iteration  13: 152625.656 ops/s
Iteration  14: 152785.321 ops/s
Iteration  15: 152507.983 ops/s
Iteration  16: 152727.563 ops/s
Iteration  17: 152475.206 ops/s
Iteration  18: 151724.673 ops/s
Iteration  19: 152095.028 ops/s
Iteration  20: 151883.756 ops/s
Iteration  21: 152312.348 ops/s
Iteration  22: 152706.260 ops/s
Iteration  23: 151591.378 ops/s
Iteration  24: 152431.726 ops/s
Iteration  25: 152830.456 ops/s
Iteration  26: 152348.872 ops/s
Iteration  27: 152415.864 ops/s
Iteration  28: 152639.111 ops/s
Iteration  29: 152554.199 ops/s
Iteration  30: 152909.018 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_212._Benchmark.benchmark_Cluster_212":
  152343.039 ±(99.9%) 213.891 ops/s [Average]
  (min, avg, max) = (151591.378, 152343.039, 152909.018), stdev = 320.142
  CI (99.9%): [152129.147, 152556.930] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_212._Benchmark.benchmark_Cluster_212  thrpt   30  152343.039 ± 213.891  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_213._Benchmark.benchmark_Cluster_213$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_213._Benchmark.benchmark_Cluster_213

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 97264.545 ops/s
# Warmup Iteration   2: 116230.535 ops/s
# Warmup Iteration   3: 157635.555 ops/s
# Warmup Iteration   4: 197988.277 ops/s
# Warmup Iteration   5: 197734.547 ops/s
# Warmup Iteration   6: 196099.422 ops/s
# Warmup Iteration   7: 197448.391 ops/s
# Warmup Iteration   8: 197803.497 ops/s
# Warmup Iteration   9: 198382.144 ops/s
# Warmup Iteration  10: 197768.415 ops/s
# Warmup Iteration  11: 175242.709 ops/s
# Warmup Iteration  12: 156916.779 ops/s
# Warmup Iteration  13: 198452.256 ops/s
# Warmup Iteration  14: 198586.825 ops/s
# Warmup Iteration  15: 198706.908 ops/s
# Warmup Iteration  16: 198645.689 ops/s
# Warmup Iteration  17: 198685.821 ops/s
# Warmup Iteration  18: 198461.977 ops/s
# Warmup Iteration  19: 198219.224 ops/s
# Warmup Iteration  20: 198198.095 ops/s
# Warmup Iteration  21: 198043.001 ops/s
# Warmup Iteration  22: 198307.870 ops/s
# Warmup Iteration  23: 197806.243 ops/s
# Warmup Iteration  24: 197869.511 ops/s
# Warmup Iteration  25: 198236.522 ops/s
# Warmup Iteration  26: 197849.688 ops/s
# Warmup Iteration  27: 198561.726 ops/s
# Warmup Iteration  28: 198581.151 ops/s
# Warmup Iteration  29: 198309.758 ops/s
# Warmup Iteration  30: 198521.189 ops/s
Iteration   1: 198665.106 ops/s
Iteration   2: 198733.684 ops/s
Iteration   3: 198569.112 ops/s
Iteration   4: 197260.153 ops/s
Iteration   5: 197945.922 ops/s
Iteration   6: 197447.577 ops/s
Iteration   7: 198385.981 ops/s
Iteration   8: 197953.919 ops/s
Iteration   9: 197517.035 ops/s
Iteration  10: 198661.810 ops/s
Iteration  11: 198176.889 ops/s
Iteration  12: 197912.403 ops/s
Iteration  13: 198353.511 ops/s
Iteration  14: 198186.284 ops/s
Iteration  15: 197230.316 ops/s
Iteration  16: 197991.506 ops/s
Iteration  17: 198805.645 ops/s
Iteration  18: 198547.449 ops/s
Iteration  19: 197599.218 ops/s
Iteration  20: 198338.443 ops/s
Iteration  21: 198295.263 ops/s
Iteration  22: 198588.765 ops/s
Iteration  23: 198535.215 ops/s
Iteration  24: 198651.084 ops/s
Iteration  25: 198592.515 ops/s
Iteration  26: 198156.232 ops/s
Iteration  27: 198422.689 ops/s
Iteration  28: 198368.348 ops/s
Iteration  29: 198247.845 ops/s
Iteration  30: 197914.494 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_213._Benchmark.benchmark_Cluster_213":
  198201.814 ±(99.9%) 295.638 ops/s [Average]
  (min, avg, max) = (197230.316, 198201.814, 198805.645), stdev = 442.497
  CI (99.9%): [197906.175, 198497.452] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_213._Benchmark.benchmark_Cluster_213  thrpt   30  198201.814 ± 295.638  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_214._Benchmark.benchmark_Cluster_214$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_214._Benchmark.benchmark_Cluster_214

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73108.440 ops/s
# Warmup Iteration   2: 96281.694 ops/s
# Warmup Iteration   3: 157557.271 ops/s
# Warmup Iteration   4: 186436.224 ops/s
# Warmup Iteration   5: 185014.833 ops/s
# Warmup Iteration   6: 186774.250 ops/s
# Warmup Iteration   7: 187114.843 ops/s
# Warmup Iteration   8: 187109.281 ops/s
# Warmup Iteration   9: 171282.323 ops/s
# Warmup Iteration  10: 140845.972 ops/s
# Warmup Iteration  11: 187256.950 ops/s
# Warmup Iteration  12: 187437.367 ops/s
# Warmup Iteration  13: 187220.105 ops/s
# Warmup Iteration  14: 186648.762 ops/s
# Warmup Iteration  15: 186980.018 ops/s
# Warmup Iteration  16: 187042.265 ops/s
# Warmup Iteration  17: 186483.011 ops/s
# Warmup Iteration  18: 186614.577 ops/s
# Warmup Iteration  19: 186394.145 ops/s
# Warmup Iteration  20: 186458.684 ops/s
# Warmup Iteration  21: 186416.678 ops/s
# Warmup Iteration  22: 186343.320 ops/s
# Warmup Iteration  23: 186538.987 ops/s
# Warmup Iteration  24: 186525.182 ops/s
# Warmup Iteration  25: 186611.956 ops/s
# Warmup Iteration  26: 186309.851 ops/s
# Warmup Iteration  27: 186331.621 ops/s
# Warmup Iteration  28: 185854.586 ops/s
# Warmup Iteration  29: 186060.213 ops/s
# Warmup Iteration  30: 186460.377 ops/s
Iteration   1: 186323.509 ops/s
Iteration   2: 186456.950 ops/s
Iteration   3: 186280.483 ops/s
Iteration   4: 186656.111 ops/s
Iteration   5: 186317.552 ops/s
Iteration   6: 185604.996 ops/s
Iteration   7: 186403.135 ops/s
Iteration   8: 185832.821 ops/s
Iteration   9: 185644.677 ops/s
Iteration  10: 186598.870 ops/s
Iteration  11: 186892.400 ops/s
Iteration  12: 186576.674 ops/s
Iteration  13: 186496.554 ops/s
Iteration  14: 186202.547 ops/s
Iteration  15: 185979.518 ops/s
Iteration  16: 185465.978 ops/s
Iteration  17: 186631.503 ops/s
Iteration  18: 186413.451 ops/s
Iteration  19: 186210.136 ops/s
Iteration  20: 185792.697 ops/s
Iteration  21: 185513.610 ops/s
Iteration  22: 186651.294 ops/s
Iteration  23: 186925.544 ops/s
Iteration  24: 186805.221 ops/s
Iteration  25: 186500.157 ops/s
Iteration  26: 186345.444 ops/s
Iteration  27: 186473.324 ops/s
Iteration  28: 186659.208 ops/s
Iteration  29: 186650.457 ops/s
Iteration  30: 186335.518 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_214._Benchmark.benchmark_Cluster_214":
  186321.345 ±(99.9%) 270.266 ops/s [Average]
  (min, avg, max) = (185465.978, 186321.345, 186925.544), stdev = 404.521
  CI (99.9%): [186051.079, 186591.610] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_214._Benchmark.benchmark_Cluster_214  thrpt   30  186321.345 ± 270.266  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_215._Benchmark.benchmark_Cluster_215$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_215._Benchmark.benchmark_Cluster_215

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65829.110 ops/s
# Warmup Iteration   2: 94935.271 ops/s
# Warmup Iteration   3: 146679.905 ops/s
# Warmup Iteration   4: 179429.990 ops/s
# Warmup Iteration   5: 177770.127 ops/s
# Warmup Iteration   6: 179036.885 ops/s
# Warmup Iteration   7: 178688.525 ops/s
# Warmup Iteration   8: 179306.842 ops/s
# Warmup Iteration   9: 179583.857 ops/s
# Warmup Iteration  10: 121689.046 ops/s
# Warmup Iteration  11: 179887.644 ops/s
# Warmup Iteration  12: 179568.584 ops/s
# Warmup Iteration  13: 179620.689 ops/s
# Warmup Iteration  14: 179792.292 ops/s
# Warmup Iteration  15: 179685.880 ops/s
# Warmup Iteration  16: 179663.396 ops/s
# Warmup Iteration  17: 180165.717 ops/s
# Warmup Iteration  18: 180290.509 ops/s
# Warmup Iteration  19: 180091.062 ops/s
# Warmup Iteration  20: 179757.201 ops/s
# Warmup Iteration  21: 179866.767 ops/s
# Warmup Iteration  22: 179370.464 ops/s
# Warmup Iteration  23: 179765.846 ops/s
# Warmup Iteration  24: 178921.701 ops/s
# Warmup Iteration  25: 179588.113 ops/s
# Warmup Iteration  26: 180201.087 ops/s
# Warmup Iteration  27: 180201.214 ops/s
# Warmup Iteration  28: 179320.331 ops/s
# Warmup Iteration  29: 179949.337 ops/s
# Warmup Iteration  30: 179216.170 ops/s
Iteration   1: 179303.854 ops/s
Iteration   2: 179389.775 ops/s
Iteration   3: 179936.083 ops/s
Iteration   4: 180160.948 ops/s
Iteration   5: 179573.258 ops/s
Iteration   6: 179952.681 ops/s
Iteration   7: 179845.601 ops/s
Iteration   8: 179522.292 ops/s
Iteration   9: 180396.145 ops/s
Iteration  10: 180348.640 ops/s
Iteration  11: 179841.061 ops/s
Iteration  12: 179964.989 ops/s
Iteration  13: 179489.587 ops/s
Iteration  14: 179528.237 ops/s
Iteration  15: 179809.848 ops/s
Iteration  16: 179940.548 ops/s
Iteration  17: 179269.458 ops/s
Iteration  18: 180125.595 ops/s
Iteration  19: 180241.909 ops/s
Iteration  20: 180126.231 ops/s
Iteration  21: 180372.360 ops/s
Iteration  22: 180593.017 ops/s
Iteration  23: 180255.396 ops/s
Iteration  24: 180539.620 ops/s
Iteration  25: 180400.458 ops/s
Iteration  26: 180426.302 ops/s
Iteration  27: 180620.687 ops/s
Iteration  28: 180495.057 ops/s
Iteration  29: 180455.710 ops/s
Iteration  30: 179844.028 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_215._Benchmark.benchmark_Cluster_215":
  180025.646 ±(99.9%) 271.997 ops/s [Average]
  (min, avg, max) = (179269.458, 180025.646, 180620.687), stdev = 407.113
  CI (99.9%): [179753.649, 180297.643] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_215._Benchmark.benchmark_Cluster_215  thrpt   30  180025.646 ± 271.997  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_216._Benchmark.benchmark_Cluster_216$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_216._Benchmark.benchmark_Cluster_216

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73483.892 ops/s
# Warmup Iteration   2: 90484.163 ops/s
# Warmup Iteration   3: 91855.136 ops/s
# Warmup Iteration   4: 114184.436 ops/s
# Warmup Iteration   5: 133048.967 ops/s
# Warmup Iteration   6: 132791.617 ops/s
# Warmup Iteration   7: 132573.911 ops/s
# Warmup Iteration   8: 131380.516 ops/s
# Warmup Iteration   9: 132794.979 ops/s
# Warmup Iteration  10: 132923.645 ops/s
# Warmup Iteration  11: 132774.175 ops/s
# Warmup Iteration  12: 133232.195 ops/s
# Warmup Iteration  13: 132669.637 ops/s
# Warmup Iteration  14: 133108.743 ops/s
# Warmup Iteration  15: 133006.862 ops/s
# Warmup Iteration  16: 132403.735 ops/s
# Warmup Iteration  17: 135259.972 ops/s
# Warmup Iteration  18: 93921.430 ops/s
# Warmup Iteration  19: 137216.936 ops/s
# Warmup Iteration  20: 137179.431 ops/s
# Warmup Iteration  21: 137134.775 ops/s
# Warmup Iteration  22: 137423.723 ops/s
# Warmup Iteration  23: 137163.193 ops/s
# Warmup Iteration  24: 137401.288 ops/s
# Warmup Iteration  25: 137229.606 ops/s
# Warmup Iteration  26: 137624.645 ops/s
# Warmup Iteration  27: 137886.929 ops/s
# Warmup Iteration  28: 137880.713 ops/s
# Warmup Iteration  29: 137706.088 ops/s
# Warmup Iteration  30: 136973.404 ops/s
Iteration   1: 136912.990 ops/s
Iteration   2: 137350.170 ops/s
Iteration   3: 136509.694 ops/s
Iteration   4: 137166.314 ops/s
Iteration   5: 137406.610 ops/s
Iteration   6: 136717.549 ops/s
Iteration   7: 137569.027 ops/s
Iteration   8: 137511.390 ops/s
Iteration   9: 137326.576 ops/s
Iteration  10: 137289.271 ops/s
Iteration  11: 137125.469 ops/s
Iteration  12: 137640.909 ops/s
Iteration  13: 137151.695 ops/s
Iteration  14: 137802.224 ops/s
Iteration  15: 137755.550 ops/s
Iteration  16: 138176.169 ops/s
Iteration  17: 137924.605 ops/s
Iteration  18: 137466.486 ops/s
Iteration  19: 137533.399 ops/s
Iteration  20: 137811.814 ops/s
Iteration  21: 137532.669 ops/s
Iteration  22: 137867.576 ops/s
Iteration  23: 137431.485 ops/s
Iteration  24: 137104.670 ops/s
Iteration  25: 137245.431 ops/s
Iteration  26: 137302.820 ops/s
Iteration  27: 137277.715 ops/s
Iteration  28: 137012.341 ops/s
Iteration  29: 137204.993 ops/s
Iteration  30: 137081.960 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_216._Benchmark.benchmark_Cluster_216":
  137373.652 ±(99.9%) 242.020 ops/s [Average]
  (min, avg, max) = (136509.694, 137373.652, 138176.169), stdev = 362.244
  CI (99.9%): [137131.632, 137615.672] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_216._Benchmark.benchmark_Cluster_216  thrpt   30  137373.652 ± 242.020  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_217._Benchmark.benchmark_Cluster_217$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_217._Benchmark.benchmark_Cluster_217

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79010.121 ops/s
# Warmup Iteration   2: 99437.255 ops/s
# Warmup Iteration   3: 101059.595 ops/s
# Warmup Iteration   4: 153851.165 ops/s
# Warmup Iteration   5: 157564.331 ops/s
# Warmup Iteration   6: 158079.725 ops/s
# Warmup Iteration   7: 154193.373 ops/s
# Warmup Iteration   8: 157519.456 ops/s
# Warmup Iteration   9: 157781.623 ops/s
# Warmup Iteration  10: 157877.602 ops/s
# Warmup Iteration  11: 157851.480 ops/s
# Warmup Iteration  12: 157606.438 ops/s
# Warmup Iteration  13: 157731.657 ops/s
# Warmup Iteration  14: 157747.302 ops/s
# Warmup Iteration  15: 110172.174 ops/s
# Warmup Iteration  16: 151851.239 ops/s
# Warmup Iteration  17: 160410.650 ops/s
# Warmup Iteration  18: 159906.559 ops/s
# Warmup Iteration  19: 160152.851 ops/s
# Warmup Iteration  20: 159928.891 ops/s
# Warmup Iteration  21: 159491.272 ops/s
# Warmup Iteration  22: 159631.994 ops/s
# Warmup Iteration  23: 160288.206 ops/s
# Warmup Iteration  24: 159885.109 ops/s
# Warmup Iteration  25: 160337.408 ops/s
# Warmup Iteration  26: 160159.905 ops/s
# Warmup Iteration  27: 160045.131 ops/s
# Warmup Iteration  28: 160186.841 ops/s
# Warmup Iteration  29: 159636.189 ops/s
# Warmup Iteration  30: 160070.531 ops/s
Iteration   1: 160205.976 ops/s
Iteration   2: 159313.870 ops/s
Iteration   3: 159802.634 ops/s
Iteration   4: 160099.488 ops/s
Iteration   5: 159838.405 ops/s
Iteration   6: 159608.810 ops/s
Iteration   7: 159779.375 ops/s
Iteration   8: 160067.992 ops/s
Iteration   9: 159742.494 ops/s
Iteration  10: 159645.117 ops/s
Iteration  11: 159874.925 ops/s
Iteration  12: 159463.033 ops/s
Iteration  13: 159371.607 ops/s
Iteration  14: 159806.799 ops/s
Iteration  15: 160149.212 ops/s
Iteration  16: 159371.448 ops/s
Iteration  17: 159693.052 ops/s
Iteration  18: 159616.743 ops/s
Iteration  19: 159636.321 ops/s
Iteration  20: 159541.033 ops/s
Iteration  21: 159694.399 ops/s
Iteration  22: 159947.041 ops/s
Iteration  23: 159434.322 ops/s
Iteration  24: 159298.418 ops/s
Iteration  25: 159645.160 ops/s
Iteration  26: 159772.024 ops/s
Iteration  27: 159299.924 ops/s
Iteration  28: 159341.442 ops/s
Iteration  29: 160176.718 ops/s
Iteration  30: 159547.041 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_217._Benchmark.benchmark_Cluster_217":
  159692.827 ±(99.9%) 181.498 ops/s [Average]
  (min, avg, max) = (159298.418, 159692.827, 160205.976), stdev = 271.657
  CI (99.9%): [159511.330, 159874.325] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_217._Benchmark.benchmark_Cluster_217  thrpt   30  159692.827 ± 181.498  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_218._Benchmark.benchmark_Cluster_218$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_218._Benchmark.benchmark_Cluster_218

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42711.053 ops/s
# Warmup Iteration   2: 63874.596 ops/s
# Warmup Iteration   3: 85273.650 ops/s
# Warmup Iteration   4: 116904.143 ops/s
# Warmup Iteration   5: 118155.816 ops/s
# Warmup Iteration   6: 115982.692 ops/s
# Warmup Iteration   7: 117699.801 ops/s
# Warmup Iteration   8: 117414.632 ops/s
# Warmup Iteration   9: 117981.501 ops/s
# Warmup Iteration  10: 117440.292 ops/s
# Warmup Iteration  11: 76419.684 ops/s
# Warmup Iteration  12: 117234.706 ops/s
# Warmup Iteration  13: 116895.868 ops/s
# Warmup Iteration  14: 117277.848 ops/s
# Warmup Iteration  15: 117059.621 ops/s
# Warmup Iteration  16: 116570.497 ops/s
# Warmup Iteration  17: 119819.227 ops/s
# Warmup Iteration  18: 119243.414 ops/s
# Warmup Iteration  19: 120039.043 ops/s
# Warmup Iteration  20: 119591.908 ops/s
# Warmup Iteration  21: 119699.600 ops/s
# Warmup Iteration  22: 120019.547 ops/s
# Warmup Iteration  23: 119457.203 ops/s
# Warmup Iteration  24: 119993.365 ops/s
# Warmup Iteration  25: 119475.264 ops/s
# Warmup Iteration  26: 119706.177 ops/s
# Warmup Iteration  27: 119918.061 ops/s
# Warmup Iteration  28: 119565.433 ops/s
# Warmup Iteration  29: 119704.720 ops/s
# Warmup Iteration  30: 119661.888 ops/s
Iteration   1: 119449.919 ops/s
Iteration   2: 119705.301 ops/s
Iteration   3: 119804.184 ops/s
Iteration   4: 119099.927 ops/s
Iteration   5: 118634.288 ops/s
Iteration   6: 119654.325 ops/s
Iteration   7: 119572.645 ops/s
Iteration   8: 120065.056 ops/s
Iteration   9: 119669.323 ops/s
Iteration  10: 119610.765 ops/s
Iteration  11: 119237.059 ops/s
Iteration  12: 119205.432 ops/s
Iteration  13: 120224.120 ops/s
Iteration  14: 120282.927 ops/s
Iteration  15: 120045.005 ops/s
Iteration  16: 119355.531 ops/s
Iteration  17: 120446.495 ops/s
Iteration  18: 120008.380 ops/s
Iteration  19: 119807.704 ops/s
Iteration  20: 118447.803 ops/s
Iteration  21: 119369.875 ops/s
Iteration  22: 119528.686 ops/s
Iteration  23: 119615.096 ops/s
Iteration  24: 120218.495 ops/s
Iteration  25: 119712.516 ops/s
Iteration  26: 119589.581 ops/s
Iteration  27: 119949.337 ops/s
Iteration  28: 120001.072 ops/s
Iteration  29: 119735.199 ops/s
Iteration  30: 120367.384 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_218._Benchmark.benchmark_Cluster_218":
  119680.448 ±(99.9%) 311.093 ops/s [Average]
  (min, avg, max) = (118447.803, 119680.448, 120446.495), stdev = 465.629
  CI (99.9%): [119369.355, 119991.540] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_218._Benchmark.benchmark_Cluster_218  thrpt   30  119680.448 ± 311.093  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_219._Benchmark.benchmark_Cluster_219$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_219._Benchmark.benchmark_Cluster_219

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43529.168 ops/s
# Warmup Iteration   2: 62364.934 ops/s
# Warmup Iteration   3: 100346.862 ops/s
# Warmup Iteration   4: 119380.660 ops/s
# Warmup Iteration   5: 117849.785 ops/s
# Warmup Iteration   6: 119266.183 ops/s
# Warmup Iteration   7: 118852.968 ops/s
# Warmup Iteration   8: 118721.308 ops/s
# Warmup Iteration   9: 111518.174 ops/s
# Warmup Iteration  10: 88497.149 ops/s
# Warmup Iteration  11: 119431.704 ops/s
# Warmup Iteration  12: 119284.849 ops/s
# Warmup Iteration  13: 118907.393 ops/s
# Warmup Iteration  14: 118856.549 ops/s
# Warmup Iteration  15: 119766.074 ops/s
# Warmup Iteration  16: 119522.029 ops/s
# Warmup Iteration  17: 119022.636 ops/s
# Warmup Iteration  18: 119233.044 ops/s
# Warmup Iteration  19: 118965.499 ops/s
# Warmup Iteration  20: 118796.524 ops/s
# Warmup Iteration  21: 119355.506 ops/s
# Warmup Iteration  22: 119139.526 ops/s
# Warmup Iteration  23: 119223.914 ops/s
# Warmup Iteration  24: 119152.104 ops/s
# Warmup Iteration  25: 119177.450 ops/s
# Warmup Iteration  26: 119093.696 ops/s
# Warmup Iteration  27: 119078.426 ops/s
# Warmup Iteration  28: 119222.630 ops/s
# Warmup Iteration  29: 119626.440 ops/s
# Warmup Iteration  30: 119304.048 ops/s
Iteration   1: 118811.068 ops/s
Iteration   2: 119347.519 ops/s
Iteration   3: 119393.995 ops/s
Iteration   4: 118496.672 ops/s
Iteration   5: 118730.042 ops/s
Iteration   6: 119608.626 ops/s
Iteration   7: 119381.198 ops/s
Iteration   8: 119337.015 ops/s
Iteration   9: 119175.666 ops/s
Iteration  10: 119213.647 ops/s
Iteration  11: 119455.230 ops/s
Iteration  12: 119486.805 ops/s
Iteration  13: 118590.980 ops/s
Iteration  14: 119158.021 ops/s
Iteration  15: 118765.509 ops/s
Iteration  16: 119117.818 ops/s
Iteration  17: 119339.715 ops/s
Iteration  18: 118982.386 ops/s
Iteration  19: 118679.643 ops/s
Iteration  20: 118550.047 ops/s
Iteration  21: 118856.800 ops/s
Iteration  22: 119716.070 ops/s
Iteration  23: 119332.457 ops/s
Iteration  24: 119290.502 ops/s
Iteration  25: 118222.026 ops/s
Iteration  26: 118747.021 ops/s
Iteration  27: 118935.434 ops/s
Iteration  28: 119707.709 ops/s
Iteration  29: 119168.199 ops/s
Iteration  30: 118924.642 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_219._Benchmark.benchmark_Cluster_219":
  119084.082 ±(99.9%) 254.083 ops/s [Average]
  (min, avg, max) = (118222.026, 119084.082, 119716.070), stdev = 380.300
  CI (99.9%): [118829.999, 119338.165] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_219._Benchmark.benchmark_Cluster_219  thrpt   30  119084.082 ± 254.083  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_22._Benchmark.benchmark_Cluster_22$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_22._Benchmark.benchmark_Cluster_22

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70456.632 ops/s
# Warmup Iteration   2: 85442.675 ops/s
# Warmup Iteration   3: 86010.618 ops/s
# Warmup Iteration   4: 119579.475 ops/s
# Warmup Iteration   5: 127765.513 ops/s
# Warmup Iteration   6: 127548.928 ops/s
# Warmup Iteration   7: 127986.061 ops/s
# Warmup Iteration   8: 126178.514 ops/s
# Warmup Iteration   9: 127108.476 ops/s
# Warmup Iteration  10: 127273.387 ops/s
# Warmup Iteration  11: 127171.955 ops/s
# Warmup Iteration  12: 127325.518 ops/s
# Warmup Iteration  13: 127606.798 ops/s
# Warmup Iteration  14: 127248.168 ops/s
# Warmup Iteration  15: 127585.431 ops/s
# Warmup Iteration  16: 104075.870 ops/s
# Warmup Iteration  17: 114496.924 ops/s
# Warmup Iteration  18: 133953.952 ops/s
# Warmup Iteration  19: 133928.080 ops/s
# Warmup Iteration  20: 133940.181 ops/s
# Warmup Iteration  21: 133425.802 ops/s
# Warmup Iteration  22: 133298.316 ops/s
# Warmup Iteration  23: 133510.798 ops/s
# Warmup Iteration  24: 133365.980 ops/s
# Warmup Iteration  25: 133722.946 ops/s
# Warmup Iteration  26: 133503.138 ops/s
# Warmup Iteration  27: 133249.224 ops/s
# Warmup Iteration  28: 133497.538 ops/s
# Warmup Iteration  29: 133761.117 ops/s
# Warmup Iteration  30: 133646.843 ops/s
Iteration   1: 132994.512 ops/s
Iteration   2: 133444.241 ops/s
Iteration   3: 133433.983 ops/s
Iteration   4: 133994.097 ops/s
Iteration   5: 133508.910 ops/s
Iteration   6: 133518.946 ops/s
Iteration   7: 133360.228 ops/s
Iteration   8: 133184.131 ops/s
Iteration   9: 133245.506 ops/s
Iteration  10: 132501.116 ops/s
Iteration  11: 133820.087 ops/s
Iteration  12: 133778.075 ops/s
Iteration  13: 133595.015 ops/s
Iteration  14: 134050.917 ops/s
Iteration  15: 133781.729 ops/s
Iteration  16: 133539.078 ops/s
Iteration  17: 133553.761 ops/s
Iteration  18: 132763.384 ops/s
Iteration  19: 133944.110 ops/s
Iteration  20: 133593.116 ops/s
Iteration  21: 133527.553 ops/s
Iteration  22: 133848.992 ops/s
Iteration  23: 133818.672 ops/s
Iteration  24: 133525.428 ops/s
Iteration  25: 133746.709 ops/s
Iteration  26: 133520.238 ops/s
Iteration  27: 133559.841 ops/s
Iteration  28: 133626.755 ops/s
Iteration  29: 133899.434 ops/s
Iteration  30: 134000.077 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_22._Benchmark.benchmark_Cluster_22":
  133555.955 ±(99.9%) 236.552 ops/s [Average]
  (min, avg, max) = (132501.116, 133555.955, 134050.917), stdev = 354.060
  CI (99.9%): [133319.403, 133792.507] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_22._Benchmark.benchmark_Cluster_22  thrpt   30  133555.955 ± 236.552  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_220._Benchmark.benchmark_Cluster_220$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_220._Benchmark.benchmark_Cluster_220

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71334.718 ops/s
# Warmup Iteration   2: 107168.377 ops/s
# Warmup Iteration   3: 126658.730 ops/s
# Warmup Iteration   4: 184539.709 ops/s
# Warmup Iteration   5: 183659.677 ops/s
# Warmup Iteration   6: 182408.047 ops/s
# Warmup Iteration   7: 184295.239 ops/s
# Warmup Iteration   8: 184123.360 ops/s
# Warmup Iteration   9: 184058.337 ops/s
# Warmup Iteration  10: 183059.776 ops/s
# Warmup Iteration  11: 180928.905 ops/s
# Warmup Iteration  12: 132022.128 ops/s
# Warmup Iteration  13: 172634.220 ops/s
# Warmup Iteration  14: 183188.267 ops/s
# Warmup Iteration  15: 183473.500 ops/s
# Warmup Iteration  16: 183755.762 ops/s
# Warmup Iteration  17: 186405.743 ops/s
# Warmup Iteration  18: 186168.409 ops/s
# Warmup Iteration  19: 186176.611 ops/s
# Warmup Iteration  20: 186137.037 ops/s
# Warmup Iteration  21: 186205.714 ops/s
# Warmup Iteration  22: 187400.897 ops/s
# Warmup Iteration  23: 186801.382 ops/s
# Warmup Iteration  24: 185623.203 ops/s
# Warmup Iteration  25: 186790.037 ops/s
# Warmup Iteration  26: 186843.108 ops/s
# Warmup Iteration  27: 187264.200 ops/s
# Warmup Iteration  28: 186872.432 ops/s
# Warmup Iteration  29: 186306.408 ops/s
# Warmup Iteration  30: 185954.300 ops/s
Iteration   1: 186663.130 ops/s
Iteration   2: 185858.420 ops/s
Iteration   3: 185594.353 ops/s
Iteration   4: 186548.801 ops/s
Iteration   5: 186481.639 ops/s
Iteration   6: 186246.470 ops/s
Iteration   7: 186567.229 ops/s
Iteration   8: 186768.768 ops/s
Iteration   9: 187018.527 ops/s
Iteration  10: 186231.632 ops/s
Iteration  11: 187179.849 ops/s
Iteration  12: 186777.115 ops/s
Iteration  13: 186195.462 ops/s
Iteration  14: 186476.282 ops/s
Iteration  15: 186306.291 ops/s
Iteration  16: 187227.279 ops/s
Iteration  17: 187452.166 ops/s
Iteration  18: 187094.133 ops/s
Iteration  19: 187545.850 ops/s
Iteration  20: 185823.319 ops/s
Iteration  21: 186594.683 ops/s
Iteration  22: 186040.157 ops/s
Iteration  23: 186903.753 ops/s
Iteration  24: 186873.305 ops/s
Iteration  25: 187297.745 ops/s
Iteration  26: 186524.191 ops/s
Iteration  27: 186383.893 ops/s
Iteration  28: 186207.524 ops/s
Iteration  29: 186238.735 ops/s
Iteration  30: 187095.927 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_220._Benchmark.benchmark_Cluster_220":
  186607.221 ±(99.9%) 330.360 ops/s [Average]
  (min, avg, max) = (185594.353, 186607.221, 187545.850), stdev = 494.467
  CI (99.9%): [186276.861, 186937.581] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_220._Benchmark.benchmark_Cluster_220  thrpt   30  186607.221 ± 330.360  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_221._Benchmark.benchmark_Cluster_221$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_221._Benchmark.benchmark_Cluster_221

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69561.458 ops/s
# Warmup Iteration   2: 86415.009 ops/s
# Warmup Iteration   3: 89410.527 ops/s
# Warmup Iteration   4: 138192.316 ops/s
# Warmup Iteration   5: 137685.189 ops/s
# Warmup Iteration   6: 138476.222 ops/s
# Warmup Iteration   7: 136714.334 ops/s
# Warmup Iteration   8: 138163.720 ops/s
# Warmup Iteration   9: 138487.815 ops/s
# Warmup Iteration  10: 138229.448 ops/s
# Warmup Iteration  11: 138243.537 ops/s
# Warmup Iteration  12: 137922.601 ops/s
# Warmup Iteration  13: 138195.649 ops/s
# Warmup Iteration  14: 101011.655 ops/s
# Warmup Iteration  15: 127711.958 ops/s
# Warmup Iteration  16: 137879.133 ops/s
# Warmup Iteration  17: 142666.178 ops/s
# Warmup Iteration  18: 143729.933 ops/s
# Warmup Iteration  19: 143874.850 ops/s
# Warmup Iteration  20: 143725.317 ops/s
# Warmup Iteration  21: 143606.064 ops/s
# Warmup Iteration  22: 144226.683 ops/s
# Warmup Iteration  23: 143823.932 ops/s
# Warmup Iteration  24: 143639.689 ops/s
# Warmup Iteration  25: 144028.482 ops/s
# Warmup Iteration  26: 143367.787 ops/s
# Warmup Iteration  27: 143792.541 ops/s
# Warmup Iteration  28: 143583.218 ops/s
# Warmup Iteration  29: 143498.632 ops/s
# Warmup Iteration  30: 143512.475 ops/s
Iteration   1: 143195.198 ops/s
Iteration   2: 143271.247 ops/s
Iteration   3: 143294.734 ops/s
Iteration   4: 143610.442 ops/s
Iteration   5: 143380.425 ops/s
Iteration   6: 143780.129 ops/s
Iteration   7: 143790.680 ops/s
Iteration   8: 143895.120 ops/s
Iteration   9: 143476.621 ops/s
Iteration  10: 143910.682 ops/s
Iteration  11: 144012.142 ops/s
Iteration  12: 144287.361 ops/s
Iteration  13: 143841.499 ops/s
Iteration  14: 143152.725 ops/s
Iteration  15: 143392.467 ops/s
Iteration  16: 142702.901 ops/s
Iteration  17: 143672.862 ops/s
Iteration  18: 143676.306 ops/s
Iteration  19: 144079.095 ops/s
Iteration  20: 143243.483 ops/s
Iteration  21: 143443.363 ops/s
Iteration  22: 143190.214 ops/s
Iteration  23: 143241.565 ops/s
Iteration  24: 143853.927 ops/s
Iteration  25: 143393.196 ops/s
Iteration  26: 143248.278 ops/s
Iteration  27: 143024.044 ops/s
Iteration  28: 143877.924 ops/s
Iteration  29: 143608.341 ops/s
Iteration  30: 143672.026 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_221._Benchmark.benchmark_Cluster_221":
  143540.633 ±(99.9%) 237.280 ops/s [Average]
  (min, avg, max) = (142702.901, 143540.633, 144287.361), stdev = 355.150
  CI (99.9%): [143303.353, 143777.913] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_221._Benchmark.benchmark_Cluster_221  thrpt   30  143540.633 ± 237.280  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_222._Benchmark.benchmark_Cluster_222$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_222._Benchmark.benchmark_Cluster_222

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 49242.493 ops/s
# Warmup Iteration   2: 83512.955 ops/s
# Warmup Iteration   3: 164954.431 ops/s
# Warmup Iteration   4: 168462.369 ops/s
# Warmup Iteration   5: 168616.048 ops/s
# Warmup Iteration   6: 116017.937 ops/s
# Warmup Iteration   7: 168800.206 ops/s
# Warmup Iteration   8: 169148.369 ops/s
# Warmup Iteration   9: 168903.192 ops/s
# Warmup Iteration  10: 169159.867 ops/s
# Warmup Iteration  11: 168279.072 ops/s
# Warmup Iteration  12: 168152.485 ops/s
# Warmup Iteration  13: 168458.137 ops/s
# Warmup Iteration  14: 168863.687 ops/s
# Warmup Iteration  15: 168923.387 ops/s
# Warmup Iteration  16: 168980.609 ops/s
# Warmup Iteration  17: 169415.863 ops/s
# Warmup Iteration  18: 168787.269 ops/s
# Warmup Iteration  19: 169384.430 ops/s
# Warmup Iteration  20: 169307.382 ops/s
# Warmup Iteration  21: 168805.424 ops/s
# Warmup Iteration  22: 169033.992 ops/s
# Warmup Iteration  23: 169004.579 ops/s
# Warmup Iteration  24: 169464.504 ops/s
# Warmup Iteration  25: 168248.024 ops/s
# Warmup Iteration  26: 169336.592 ops/s
# Warmup Iteration  27: 169319.200 ops/s
# Warmup Iteration  28: 169554.521 ops/s
# Warmup Iteration  29: 169741.275 ops/s
# Warmup Iteration  30: 169298.049 ops/s
Iteration   1: 169339.928 ops/s
Iteration   2: 169564.310 ops/s
Iteration   3: 169393.649 ops/s
Iteration   4: 169567.514 ops/s
Iteration   5: 169509.448 ops/s
Iteration   6: 169579.517 ops/s
Iteration   7: 169103.843 ops/s
Iteration   8: 168783.065 ops/s
Iteration   9: 168717.869 ops/s
Iteration  10: 169180.561 ops/s
Iteration  11: 169339.541 ops/s
Iteration  12: 169502.455 ops/s
Iteration  13: 169379.318 ops/s
Iteration  14: 169290.315 ops/s
Iteration  15: 169140.984 ops/s
Iteration  16: 169924.131 ops/s
Iteration  17: 169601.171 ops/s
Iteration  18: 168680.721 ops/s
Iteration  19: 169634.940 ops/s
Iteration  20: 169560.764 ops/s
Iteration  21: 169811.388 ops/s
Iteration  22: 169388.580 ops/s
Iteration  23: 169322.076 ops/s
Iteration  24: 168981.174 ops/s
Iteration  25: 169508.744 ops/s
Iteration  26: 169668.002 ops/s
Iteration  27: 168475.734 ops/s
Iteration  28: 169412.818 ops/s
Iteration  29: 169559.356 ops/s
Iteration  30: 169214.138 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_222._Benchmark.benchmark_Cluster_222":
  169337.869 ±(99.9%) 226.230 ops/s [Average]
  (min, avg, max) = (168475.734, 169337.869, 169924.131), stdev = 338.610
  CI (99.9%): [169111.639, 169564.098] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_222._Benchmark.benchmark_Cluster_222  thrpt   30  169337.869 ± 226.230  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_223._Benchmark.benchmark_Cluster_223$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_223._Benchmark.benchmark_Cluster_223

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48319.121 ops/s
# Warmup Iteration   2: 74187.418 ops/s
# Warmup Iteration   3: 170678.141 ops/s
# Warmup Iteration   4: 168297.139 ops/s
# Warmup Iteration   5: 170321.204 ops/s
# Warmup Iteration   6: 170587.215 ops/s
# Warmup Iteration   7: 115800.237 ops/s
# Warmup Iteration   8: 171056.743 ops/s
# Warmup Iteration   9: 170722.236 ops/s
# Warmup Iteration  10: 171132.124 ops/s
# Warmup Iteration  11: 166704.606 ops/s
# Warmup Iteration  12: 170863.416 ops/s
# Warmup Iteration  13: 170920.045 ops/s
# Warmup Iteration  14: 170616.619 ops/s
# Warmup Iteration  15: 170960.770 ops/s
# Warmup Iteration  16: 170912.904 ops/s
# Warmup Iteration  17: 171033.903 ops/s
# Warmup Iteration  18: 170030.388 ops/s
# Warmup Iteration  19: 170716.200 ops/s
# Warmup Iteration  20: 170785.548 ops/s
# Warmup Iteration  21: 170207.666 ops/s
# Warmup Iteration  22: 169965.472 ops/s
# Warmup Iteration  23: 169695.212 ops/s
# Warmup Iteration  24: 169571.786 ops/s
# Warmup Iteration  25: 168780.910 ops/s
# Warmup Iteration  26: 170463.841 ops/s
# Warmup Iteration  27: 170103.268 ops/s
# Warmup Iteration  28: 169883.828 ops/s
# Warmup Iteration  29: 169943.902 ops/s
# Warmup Iteration  30: 170770.549 ops/s
Iteration   1: 169516.519 ops/s
Iteration   2: 170519.656 ops/s
Iteration   3: 170638.362 ops/s
Iteration   4: 170988.330 ops/s
Iteration   5: 170782.983 ops/s
Iteration   6: 169893.772 ops/s
Iteration   7: 170155.263 ops/s
Iteration   8: 170736.789 ops/s
Iteration   9: 171163.293 ops/s
Iteration  10: 170120.781 ops/s
Iteration  11: 170043.485 ops/s
Iteration  12: 170285.211 ops/s
Iteration  13: 169241.282 ops/s
Iteration  14: 170935.437 ops/s
Iteration  15: 170919.680 ops/s
Iteration  16: 170507.742 ops/s
Iteration  17: 170447.553 ops/s
Iteration  18: 170587.627 ops/s
Iteration  19: 170564.822 ops/s
Iteration  20: 171199.298 ops/s
Iteration  21: 170909.840 ops/s
Iteration  22: 171095.747 ops/s
Iteration  23: 170112.840 ops/s
Iteration  24: 169900.512 ops/s
Iteration  25: 170937.840 ops/s
Iteration  26: 170684.826 ops/s
Iteration  27: 170687.047 ops/s
Iteration  28: 170120.790 ops/s
Iteration  29: 170635.114 ops/s
Iteration  30: 170640.978 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_223._Benchmark.benchmark_Cluster_223":
  170499.114 ±(99.9%) 319.087 ops/s [Average]
  (min, avg, max) = (169241.282, 170499.114, 171199.298), stdev = 477.594
  CI (99.9%): [170180.027, 170818.200] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_223._Benchmark.benchmark_Cluster_223  thrpt   30  170499.114 ± 319.087  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_224._Benchmark.benchmark_Cluster_224$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_224._Benchmark.benchmark_Cluster_224

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60009.509 ops/s
# Warmup Iteration   2: 90351.449 ops/s
# Warmup Iteration   3: 187175.442 ops/s
# Warmup Iteration   4: 184906.147 ops/s
# Warmup Iteration   5: 187644.322 ops/s
# Warmup Iteration   6: 187042.367 ops/s
# Warmup Iteration   7: 128769.110 ops/s
# Warmup Iteration   8: 186664.562 ops/s
# Warmup Iteration   9: 187920.855 ops/s
# Warmup Iteration  10: 187933.776 ops/s
# Warmup Iteration  11: 187518.393 ops/s
# Warmup Iteration  12: 187631.960 ops/s
# Warmup Iteration  13: 187045.111 ops/s
# Warmup Iteration  14: 186925.819 ops/s
# Warmup Iteration  15: 186769.386 ops/s
# Warmup Iteration  16: 187213.426 ops/s
# Warmup Iteration  17: 187429.430 ops/s
# Warmup Iteration  18: 188004.740 ops/s
# Warmup Iteration  19: 188372.762 ops/s
# Warmup Iteration  20: 187438.423 ops/s
# Warmup Iteration  21: 187968.041 ops/s
# Warmup Iteration  22: 187556.157 ops/s
# Warmup Iteration  23: 187325.078 ops/s
# Warmup Iteration  24: 187435.845 ops/s
# Warmup Iteration  25: 187675.022 ops/s
# Warmup Iteration  26: 187197.542 ops/s
# Warmup Iteration  27: 187363.704 ops/s
# Warmup Iteration  28: 186723.054 ops/s
# Warmup Iteration  29: 186889.649 ops/s
# Warmup Iteration  30: 187191.820 ops/s
Iteration   1: 187653.226 ops/s
Iteration   2: 186834.048 ops/s
Iteration   3: 188445.086 ops/s
Iteration   4: 187770.786 ops/s
Iteration   5: 186981.749 ops/s
Iteration   6: 187076.591 ops/s
Iteration   7: 187525.259 ops/s
Iteration   8: 188547.657 ops/s
Iteration   9: 188213.759 ops/s
Iteration  10: 187850.069 ops/s
Iteration  11: 187352.476 ops/s
Iteration  12: 187915.633 ops/s
Iteration  13: 187997.171 ops/s
Iteration  14: 187578.399 ops/s
Iteration  15: 187140.589 ops/s
Iteration  16: 186759.511 ops/s
Iteration  17: 187841.345 ops/s
Iteration  18: 187217.692 ops/s
Iteration  19: 186951.628 ops/s
Iteration  20: 186977.015 ops/s
Iteration  21: 187303.118 ops/s
Iteration  22: 187786.215 ops/s
Iteration  23: 187748.065 ops/s
Iteration  24: 187730.028 ops/s
Iteration  25: 188112.437 ops/s
Iteration  26: 187439.406 ops/s
Iteration  27: 187019.438 ops/s
Iteration  28: 186673.901 ops/s
Iteration  29: 186771.115 ops/s
Iteration  30: 186218.725 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_224._Benchmark.benchmark_Cluster_224":
  187447.738 ±(99.9%) 374.785 ops/s [Average]
  (min, avg, max) = (186218.725, 187447.738, 188547.657), stdev = 560.960
  CI (99.9%): [187072.953, 187822.522] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_224._Benchmark.benchmark_Cluster_224  thrpt   30  187447.738 ± 374.785  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_225._Benchmark.benchmark_Cluster_225$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_225._Benchmark.benchmark_Cluster_225

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56326.022 ops/s
# Warmup Iteration   2: 79682.444 ops/s
# Warmup Iteration   3: 156187.398 ops/s
# Warmup Iteration   4: 167500.731 ops/s
# Warmup Iteration   5: 169109.892 ops/s
# Warmup Iteration   6: 168793.293 ops/s
# Warmup Iteration   7: 168842.936 ops/s
# Warmup Iteration   8: 117864.920 ops/s
# Warmup Iteration   9: 163824.959 ops/s
# Warmup Iteration  10: 168722.177 ops/s
# Warmup Iteration  11: 169160.602 ops/s
# Warmup Iteration  12: 169108.997 ops/s
# Warmup Iteration  13: 168281.310 ops/s
# Warmup Iteration  14: 169031.672 ops/s
# Warmup Iteration  15: 168807.918 ops/s
# Warmup Iteration  16: 168588.216 ops/s
# Warmup Iteration  17: 169872.051 ops/s
# Warmup Iteration  18: 171159.702 ops/s
# Warmup Iteration  19: 170725.431 ops/s
# Warmup Iteration  20: 170692.681 ops/s
# Warmup Iteration  21: 169874.878 ops/s
# Warmup Iteration  22: 169749.636 ops/s
# Warmup Iteration  23: 169939.652 ops/s
# Warmup Iteration  24: 170177.871 ops/s
# Warmup Iteration  25: 170862.390 ops/s
# Warmup Iteration  26: 171266.111 ops/s
# Warmup Iteration  27: 170622.138 ops/s
# Warmup Iteration  28: 171010.929 ops/s
# Warmup Iteration  29: 171105.884 ops/s
# Warmup Iteration  30: 170688.903 ops/s
Iteration   1: 170780.322 ops/s
Iteration   2: 170827.506 ops/s
Iteration   3: 170659.225 ops/s
Iteration   4: 170340.006 ops/s
Iteration   5: 169930.765 ops/s
Iteration   6: 169942.330 ops/s
Iteration   7: 169713.878 ops/s
Iteration   8: 171202.595 ops/s
Iteration   9: 171222.878 ops/s
Iteration  10: 170966.770 ops/s
Iteration  11: 170404.897 ops/s
Iteration  12: 170507.161 ops/s
Iteration  13: 169831.864 ops/s
Iteration  14: 170498.282 ops/s
Iteration  15: 171063.967 ops/s
Iteration  16: 171021.714 ops/s
Iteration  17: 170791.842 ops/s
Iteration  18: 170496.570 ops/s
Iteration  19: 170900.009 ops/s
Iteration  20: 170478.306 ops/s
Iteration  21: 170695.865 ops/s
Iteration  22: 170196.980 ops/s
Iteration  23: 171023.796 ops/s
Iteration  24: 171531.546 ops/s
Iteration  25: 170712.538 ops/s
Iteration  26: 170073.210 ops/s
Iteration  27: 170279.760 ops/s
Iteration  28: 169866.326 ops/s
Iteration  29: 171175.171 ops/s
Iteration  30: 171085.376 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_225._Benchmark.benchmark_Cluster_225":
  170607.382 ±(99.9%) 319.065 ops/s [Average]
  (min, avg, max) = (169713.878, 170607.382, 171531.546), stdev = 477.561
  CI (99.9%): [170288.317, 170926.447] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_225._Benchmark.benchmark_Cluster_225  thrpt   30  170607.382 ± 319.065  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_226._Benchmark.benchmark_Cluster_226$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_226._Benchmark.benchmark_Cluster_226

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 31586.199 ops/s
# Warmup Iteration   2: 57847.043 ops/s
# Warmup Iteration   3: 57728.862 ops/s
# Warmup Iteration   4: 86422.250 ops/s
# Warmup Iteration   5: 90212.150 ops/s
# Warmup Iteration   6: 90604.715 ops/s
# Warmup Iteration   7: 90391.706 ops/s
# Warmup Iteration   8: 90125.603 ops/s
# Warmup Iteration   9: 90294.180 ops/s
# Warmup Iteration  10: 90901.242 ops/s
# Warmup Iteration  11: 90641.294 ops/s
# Warmup Iteration  12: 77405.129 ops/s
# Warmup Iteration  13: 74641.344 ops/s
# Warmup Iteration  14: 90633.265 ops/s
# Warmup Iteration  15: 89863.059 ops/s
# Warmup Iteration  16: 90445.598 ops/s
# Warmup Iteration  17: 90564.657 ops/s
# Warmup Iteration  18: 90389.719 ops/s
# Warmup Iteration  19: 90293.324 ops/s
# Warmup Iteration  20: 90903.984 ops/s
# Warmup Iteration  21: 90765.993 ops/s
# Warmup Iteration  22: 90410.693 ops/s
# Warmup Iteration  23: 90964.682 ops/s
# Warmup Iteration  24: 90918.381 ops/s
# Warmup Iteration  25: 90460.619 ops/s
# Warmup Iteration  26: 90604.697 ops/s
# Warmup Iteration  27: 90383.260 ops/s
# Warmup Iteration  28: 90762.214 ops/s
# Warmup Iteration  29: 90091.673 ops/s
# Warmup Iteration  30: 90121.339 ops/s
Iteration   1: 90714.247 ops/s
Iteration   2: 90769.320 ops/s
Iteration   3: 90798.726 ops/s
Iteration   4: 90942.884 ops/s
Iteration   5: 90683.365 ops/s
Iteration   6: 90759.655 ops/s
Iteration   7: 90946.410 ops/s
Iteration   8: 90743.510 ops/s
Iteration   9: 90826.296 ops/s
Iteration  10: 90575.103 ops/s
Iteration  11: 90511.006 ops/s
Iteration  12: 90944.400 ops/s
Iteration  13: 90442.345 ops/s
Iteration  14: 90341.590 ops/s
Iteration  15: 90245.449 ops/s
Iteration  16: 90243.249 ops/s
Iteration  17: 90219.580 ops/s
Iteration  18: 89954.456 ops/s
Iteration  19: 90487.970 ops/s
Iteration  20: 90060.649 ops/s
Iteration  21: 90703.641 ops/s
Iteration  22: 90824.935 ops/s
Iteration  23: 90395.009 ops/s
Iteration  24: 90765.130 ops/s
Iteration  25: 90675.158 ops/s
Iteration  26: 90920.016 ops/s
Iteration  27: 91248.198 ops/s
Iteration  28: 90837.913 ops/s
Iteration  29: 90071.999 ops/s
Iteration  30: 90249.251 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_226._Benchmark.benchmark_Cluster_226":
  90596.715 ±(99.9%) 210.422 ops/s [Average]
  (min, avg, max) = (89954.456, 90596.715, 91248.198), stdev = 314.950
  CI (99.9%): [90386.293, 90807.138] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_226._Benchmark.benchmark_Cluster_226  thrpt   30  90596.715 ± 210.422  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_227._Benchmark.benchmark_Cluster_227$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_227._Benchmark.benchmark_Cluster_227

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 101825.520 ops/s
# Warmup Iteration   2: 117307.672 ops/s
# Warmup Iteration   3: 117267.719 ops/s
# Warmup Iteration   4: 152004.669 ops/s
# Warmup Iteration   5: 169809.618 ops/s
# Warmup Iteration   6: 168956.886 ops/s
# Warmup Iteration   7: 169606.825 ops/s
# Warmup Iteration   8: 167180.756 ops/s
# Warmup Iteration   9: 169607.436 ops/s
# Warmup Iteration  10: 169138.690 ops/s
# Warmup Iteration  11: 169766.142 ops/s
# Warmup Iteration  12: 170255.840 ops/s
# Warmup Iteration  13: 169787.115 ops/s
# Warmup Iteration  14: 169477.160 ops/s
# Warmup Iteration  15: 169366.402 ops/s
# Warmup Iteration  16: 169188.208 ops/s
# Warmup Iteration  17: 157207.585 ops/s
# Warmup Iteration  18: 132987.233 ops/s
# Warmup Iteration  19: 173307.076 ops/s
# Warmup Iteration  20: 173663.230 ops/s
# Warmup Iteration  21: 173803.663 ops/s
# Warmup Iteration  22: 174276.178 ops/s
# Warmup Iteration  23: 173868.332 ops/s
# Warmup Iteration  24: 173874.018 ops/s
# Warmup Iteration  25: 173800.004 ops/s
# Warmup Iteration  26: 173997.456 ops/s
# Warmup Iteration  27: 173855.635 ops/s
# Warmup Iteration  28: 173806.393 ops/s
# Warmup Iteration  29: 174213.429 ops/s
# Warmup Iteration  30: 174094.228 ops/s
Iteration   1: 174380.400 ops/s
Iteration   2: 174710.675 ops/s
Iteration   3: 174212.657 ops/s
Iteration   4: 174411.049 ops/s
Iteration   5: 173677.537 ops/s
Iteration   6: 174163.669 ops/s
Iteration   7: 174094.619 ops/s
Iteration   8: 173972.149 ops/s
Iteration   9: 173401.290 ops/s
Iteration  10: 174011.850 ops/s
Iteration  11: 173643.506 ops/s
Iteration  12: 174369.976 ops/s
Iteration  13: 174049.540 ops/s
Iteration  14: 174194.144 ops/s
Iteration  15: 174236.412 ops/s
Iteration  16: 174411.161 ops/s
Iteration  17: 173675.206 ops/s
Iteration  18: 173968.402 ops/s
Iteration  19: 173824.146 ops/s
Iteration  20: 173503.353 ops/s
Iteration  21: 173945.790 ops/s
Iteration  22: 173974.256 ops/s
Iteration  23: 173500.906 ops/s
Iteration  24: 174047.996 ops/s
Iteration  25: 173513.400 ops/s
Iteration  26: 173813.359 ops/s
Iteration  27: 174157.971 ops/s
Iteration  28: 173589.392 ops/s
Iteration  29: 174056.211 ops/s
Iteration  30: 173824.994 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_227._Benchmark.benchmark_Cluster_227":
  173977.867 ±(99.9%) 215.440 ops/s [Average]
  (min, avg, max) = (173401.290, 173977.867, 174710.675), stdev = 322.460
  CI (99.9%): [173762.428, 174193.307] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_227._Benchmark.benchmark_Cluster_227  thrpt   30  173977.867 ± 215.440  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_228._Benchmark.benchmark_Cluster_228$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_228._Benchmark.benchmark_Cluster_228

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70471.330 ops/s
# Warmup Iteration   2: 93011.884 ops/s
# Warmup Iteration   3: 125604.771 ops/s
# Warmup Iteration   4: 160810.907 ops/s
# Warmup Iteration   5: 160404.714 ops/s
# Warmup Iteration   6: 158998.545 ops/s
# Warmup Iteration   7: 160350.316 ops/s
# Warmup Iteration   8: 160405.761 ops/s
# Warmup Iteration   9: 161170.511 ops/s
# Warmup Iteration  10: 160540.388 ops/s
# Warmup Iteration  11: 126041.671 ops/s
# Warmup Iteration  12: 145047.708 ops/s
# Warmup Iteration  13: 160482.585 ops/s
# Warmup Iteration  14: 160929.688 ops/s
# Warmup Iteration  15: 161762.870 ops/s
# Warmup Iteration  16: 160913.595 ops/s
# Warmup Iteration  17: 160703.658 ops/s
# Warmup Iteration  18: 160677.756 ops/s
# Warmup Iteration  19: 160649.867 ops/s
# Warmup Iteration  20: 160746.297 ops/s
# Warmup Iteration  21: 160695.591 ops/s
# Warmup Iteration  22: 160229.888 ops/s
# Warmup Iteration  23: 160799.526 ops/s
# Warmup Iteration  24: 160731.974 ops/s
# Warmup Iteration  25: 161453.576 ops/s
# Warmup Iteration  26: 160414.906 ops/s
# Warmup Iteration  27: 161497.180 ops/s
# Warmup Iteration  28: 160587.956 ops/s
# Warmup Iteration  29: 160916.096 ops/s
# Warmup Iteration  30: 160411.905 ops/s
Iteration   1: 160770.403 ops/s
Iteration   2: 161003.183 ops/s
Iteration   3: 161374.198 ops/s
Iteration   4: 160940.005 ops/s
Iteration   5: 161187.857 ops/s
Iteration   6: 160942.049 ops/s
Iteration   7: 160863.170 ops/s
Iteration   8: 160596.878 ops/s
Iteration   9: 160995.582 ops/s
Iteration  10: 160790.227 ops/s
Iteration  11: 160952.665 ops/s
Iteration  12: 161376.383 ops/s
Iteration  13: 160560.202 ops/s
Iteration  14: 160710.352 ops/s
Iteration  15: 161075.665 ops/s
Iteration  16: 160522.974 ops/s
Iteration  17: 160711.292 ops/s
Iteration  18: 161265.053 ops/s
Iteration  19: 161519.717 ops/s
Iteration  20: 160863.485 ops/s
Iteration  21: 161106.974 ops/s
Iteration  22: 160784.986 ops/s
Iteration  23: 160719.063 ops/s
Iteration  24: 159948.387 ops/s
Iteration  25: 160371.878 ops/s
Iteration  26: 160094.841 ops/s
Iteration  27: 160511.623 ops/s
Iteration  28: 161211.473 ops/s
Iteration  29: 162126.976 ops/s
Iteration  30: 160821.304 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_228._Benchmark.benchmark_Cluster_228":
  160890.628 ±(99.9%) 283.994 ops/s [Average]
  (min, avg, max) = (159948.387, 160890.628, 162126.976), stdev = 425.069
  CI (99.9%): [160606.634, 161174.622] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_228._Benchmark.benchmark_Cluster_228  thrpt   30  160890.628 ± 283.994  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_229._Benchmark.benchmark_Cluster_229$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_229._Benchmark.benchmark_Cluster_229

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56778.573 ops/s
# Warmup Iteration   2: 86645.954 ops/s
# Warmup Iteration   3: 157689.565 ops/s
# Warmup Iteration   4: 179101.693 ops/s
# Warmup Iteration   5: 176564.997 ops/s
# Warmup Iteration   6: 178006.065 ops/s
# Warmup Iteration   7: 178002.952 ops/s
# Warmup Iteration   8: 160190.845 ops/s
# Warmup Iteration   9: 138534.132 ops/s
# Warmup Iteration  10: 178727.475 ops/s
# Warmup Iteration  11: 178777.181 ops/s
# Warmup Iteration  12: 178719.904 ops/s
# Warmup Iteration  13: 178907.593 ops/s
# Warmup Iteration  14: 178802.559 ops/s
# Warmup Iteration  15: 178644.793 ops/s
# Warmup Iteration  16: 178621.266 ops/s
# Warmup Iteration  17: 179005.074 ops/s
# Warmup Iteration  18: 178591.650 ops/s
# Warmup Iteration  19: 178537.775 ops/s
# Warmup Iteration  20: 179400.622 ops/s
# Warmup Iteration  21: 178606.754 ops/s
# Warmup Iteration  22: 178655.253 ops/s
# Warmup Iteration  23: 178434.198 ops/s
# Warmup Iteration  24: 179172.408 ops/s
# Warmup Iteration  25: 178966.539 ops/s
# Warmup Iteration  26: 179507.714 ops/s
# Warmup Iteration  27: 179342.213 ops/s
# Warmup Iteration  28: 179507.421 ops/s
# Warmup Iteration  29: 178825.741 ops/s
# Warmup Iteration  30: 179108.697 ops/s
Iteration   1: 177790.036 ops/s
Iteration   2: 178469.617 ops/s
Iteration   3: 179895.956 ops/s
Iteration   4: 179053.260 ops/s
Iteration   5: 178977.045 ops/s
Iteration   6: 178813.528 ops/s
Iteration   7: 178345.102 ops/s
Iteration   8: 179306.577 ops/s
Iteration   9: 179287.363 ops/s
Iteration  10: 179606.565 ops/s
Iteration  11: 179039.154 ops/s
Iteration  12: 179247.897 ops/s
Iteration  13: 179114.567 ops/s
Iteration  14: 179856.613 ops/s
Iteration  15: 179137.070 ops/s
Iteration  16: 178912.070 ops/s
Iteration  17: 179197.589 ops/s
Iteration  18: 179334.673 ops/s
Iteration  19: 178775.212 ops/s
Iteration  20: 178979.407 ops/s
Iteration  21: 179111.705 ops/s
Iteration  22: 178809.628 ops/s
Iteration  23: 178843.514 ops/s
Iteration  24: 178494.023 ops/s
Iteration  25: 177479.160 ops/s
Iteration  26: 179281.582 ops/s
Iteration  27: 178989.223 ops/s
Iteration  28: 179466.872 ops/s
Iteration  29: 179015.456 ops/s
Iteration  30: 179014.531 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_229._Benchmark.benchmark_Cluster_229":
  178988.166 ±(99.9%) 340.532 ops/s [Average]
  (min, avg, max) = (177479.160, 178988.166, 179895.956), stdev = 509.692
  CI (99.9%): [178647.635, 179328.698] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_229._Benchmark.benchmark_Cluster_229  thrpt   30  178988.166 ± 340.532  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_23._Benchmark.benchmark_Cluster_23$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_23._Benchmark.benchmark_Cluster_23

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 97008.197 ops/s
# Warmup Iteration   2: 125538.388 ops/s
# Warmup Iteration   3: 162820.874 ops/s
# Warmup Iteration   4: 210957.109 ops/s
# Warmup Iteration   5: 211006.471 ops/s
# Warmup Iteration   6: 208801.626 ops/s
# Warmup Iteration   7: 211334.859 ops/s
# Warmup Iteration   8: 211172.408 ops/s
# Warmup Iteration   9: 211198.357 ops/s
# Warmup Iteration  10: 210732.229 ops/s
# Warmup Iteration  11: 210317.783 ops/s
# Warmup Iteration  12: 145141.673 ops/s
# Warmup Iteration  13: 211593.003 ops/s
# Warmup Iteration  14: 211414.057 ops/s
# Warmup Iteration  15: 211646.057 ops/s
# Warmup Iteration  16: 210886.990 ops/s
# Warmup Iteration  17: 211445.370 ops/s
# Warmup Iteration  18: 210922.835 ops/s
# Warmup Iteration  19: 211190.661 ops/s
# Warmup Iteration  20: 211359.098 ops/s
# Warmup Iteration  21: 210527.876 ops/s
# Warmup Iteration  22: 210586.137 ops/s
# Warmup Iteration  23: 210520.919 ops/s
# Warmup Iteration  24: 210855.350 ops/s
# Warmup Iteration  25: 211816.789 ops/s
# Warmup Iteration  26: 211600.283 ops/s
# Warmup Iteration  27: 211502.464 ops/s
# Warmup Iteration  28: 210908.910 ops/s
# Warmup Iteration  29: 211311.194 ops/s
# Warmup Iteration  30: 211365.420 ops/s
Iteration   1: 211869.312 ops/s
Iteration   2: 211081.714 ops/s
Iteration   3: 211755.985 ops/s
Iteration   4: 211735.289 ops/s
Iteration   5: 211319.905 ops/s
Iteration   6: 210008.522 ops/s
Iteration   7: 211765.700 ops/s
Iteration   8: 212115.699 ops/s
Iteration   9: 212014.355 ops/s
Iteration  10: 211332.919 ops/s
Iteration  11: 211315.377 ops/s
Iteration  12: 211732.758 ops/s
Iteration  13: 211398.462 ops/s
Iteration  14: 211558.513 ops/s
Iteration  15: 212006.017 ops/s
Iteration  16: 211702.078 ops/s
Iteration  17: 210806.935 ops/s
Iteration  18: 211622.988 ops/s
Iteration  19: 211841.528 ops/s
Iteration  20: 211624.012 ops/s
Iteration  21: 211251.654 ops/s
Iteration  22: 211883.481 ops/s
Iteration  23: 211964.658 ops/s
Iteration  24: 211895.201 ops/s
Iteration  25: 211212.544 ops/s
Iteration  26: 211142.511 ops/s
Iteration  27: 211939.334 ops/s
Iteration  28: 211508.949 ops/s
Iteration  29: 211886.799 ops/s
Iteration  30: 211894.828 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_23._Benchmark.benchmark_Cluster_23":
  211572.934 ±(99.9%) 293.277 ops/s [Average]
  (min, avg, max) = (210008.522, 211572.934, 212115.699), stdev = 438.964
  CI (99.9%): [211279.657, 211866.211] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_23._Benchmark.benchmark_Cluster_23  thrpt   30  211572.934 ± 293.277  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_230._Benchmark.benchmark_Cluster_230$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_230._Benchmark.benchmark_Cluster_230

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70681.407 ops/s
# Warmup Iteration   2: 97625.490 ops/s
# Warmup Iteration   3: 149638.716 ops/s
# Warmup Iteration   4: 182688.778 ops/s
# Warmup Iteration   5: 180558.704 ops/s
# Warmup Iteration   6: 182796.057 ops/s
# Warmup Iteration   7: 182743.921 ops/s
# Warmup Iteration   8: 183066.149 ops/s
# Warmup Iteration   9: 182599.485 ops/s
# Warmup Iteration  10: 124612.825 ops/s
# Warmup Iteration  11: 182289.027 ops/s
# Warmup Iteration  12: 182561.357 ops/s
# Warmup Iteration  13: 182806.403 ops/s
# Warmup Iteration  14: 182892.998 ops/s
# Warmup Iteration  15: 182854.969 ops/s
# Warmup Iteration  16: 182555.751 ops/s
# Warmup Iteration  17: 181956.073 ops/s
# Warmup Iteration  18: 181745.216 ops/s
# Warmup Iteration  19: 181772.073 ops/s
# Warmup Iteration  20: 181647.122 ops/s
# Warmup Iteration  21: 181612.774 ops/s
# Warmup Iteration  22: 181657.298 ops/s
# Warmup Iteration  23: 181297.196 ops/s
# Warmup Iteration  24: 181603.513 ops/s
# Warmup Iteration  25: 181328.401 ops/s
# Warmup Iteration  26: 181310.940 ops/s
# Warmup Iteration  27: 181703.536 ops/s
# Warmup Iteration  28: 182115.301 ops/s
# Warmup Iteration  29: 181510.765 ops/s
# Warmup Iteration  30: 181539.761 ops/s
Iteration   1: 181876.907 ops/s
Iteration   2: 181977.557 ops/s
Iteration   3: 181872.953 ops/s
Iteration   4: 181583.361 ops/s
Iteration   5: 181702.944 ops/s
Iteration   6: 181891.734 ops/s
Iteration   7: 181719.529 ops/s
Iteration   8: 182121.786 ops/s
Iteration   9: 181920.248 ops/s
Iteration  10: 181001.150 ops/s
Iteration  11: 181492.479 ops/s
Iteration  12: 181826.093 ops/s
Iteration  13: 181710.203 ops/s
Iteration  14: 181851.495 ops/s
Iteration  15: 182194.618 ops/s
Iteration  16: 181680.691 ops/s
Iteration  17: 182083.800 ops/s
Iteration  18: 181786.666 ops/s
Iteration  19: 181538.852 ops/s
Iteration  20: 181634.151 ops/s
Iteration  21: 181997.636 ops/s
Iteration  22: 181742.906 ops/s
Iteration  23: 181287.765 ops/s
Iteration  24: 181541.839 ops/s
Iteration  25: 181204.603 ops/s
Iteration  26: 180899.744 ops/s
Iteration  27: 181438.493 ops/s
Iteration  28: 180478.183 ops/s
Iteration  29: 181625.741 ops/s
Iteration  30: 182025.840 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_230._Benchmark.benchmark_Cluster_230":
  181656.999 ±(99.9%) 254.398 ops/s [Average]
  (min, avg, max) = (180478.183, 181656.999, 182194.618), stdev = 380.771
  CI (99.9%): [181402.601, 181911.397] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_230._Benchmark.benchmark_Cluster_230  thrpt   30  181656.999 ± 254.398  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_231._Benchmark.benchmark_Cluster_231$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_231._Benchmark.benchmark_Cluster_231

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86868.038 ops/s
# Warmup Iteration   2: 105601.198 ops/s
# Warmup Iteration   3: 100522.037 ops/s
# Warmup Iteration   4: 130930.402 ops/s
# Warmup Iteration   5: 145227.376 ops/s
# Warmup Iteration   6: 144413.109 ops/s
# Warmup Iteration   7: 144769.457 ops/s
# Warmup Iteration   8: 143219.068 ops/s
# Warmup Iteration   9: 143696.741 ops/s
# Warmup Iteration  10: 143483.700 ops/s
# Warmup Iteration  11: 145964.502 ops/s
# Warmup Iteration  12: 145315.664 ops/s
# Warmup Iteration  13: 144682.423 ops/s
# Warmup Iteration  14: 144596.507 ops/s
# Warmup Iteration  15: 144138.201 ops/s
# Warmup Iteration  16: 145355.830 ops/s
# Warmup Iteration  17: 133043.208 ops/s
# Warmup Iteration  18: 117447.665 ops/s
# Warmup Iteration  19: 150299.826 ops/s
# Warmup Iteration  20: 149994.386 ops/s
# Warmup Iteration  21: 150103.248 ops/s
# Warmup Iteration  22: 150766.269 ops/s
# Warmup Iteration  23: 150065.706 ops/s
# Warmup Iteration  24: 150551.393 ops/s
# Warmup Iteration  25: 150191.919 ops/s
# Warmup Iteration  26: 150173.273 ops/s
# Warmup Iteration  27: 150456.307 ops/s
# Warmup Iteration  28: 150671.270 ops/s
# Warmup Iteration  29: 150406.291 ops/s
# Warmup Iteration  30: 150113.014 ops/s
Iteration   1: 149592.220 ops/s
Iteration   2: 149946.991 ops/s
Iteration   3: 150197.696 ops/s
Iteration   4: 150665.822 ops/s
Iteration   5: 149641.610 ops/s
Iteration   6: 150104.078 ops/s
Iteration   7: 150447.231 ops/s
Iteration   8: 149797.968 ops/s
Iteration   9: 150114.809 ops/s
Iteration  10: 151023.519 ops/s
Iteration  11: 149584.118 ops/s
Iteration  12: 150226.742 ops/s
Iteration  13: 151025.629 ops/s
Iteration  14: 150973.657 ops/s
Iteration  15: 150494.397 ops/s
Iteration  16: 150838.508 ops/s
Iteration  17: 149574.978 ops/s
Iteration  18: 149377.140 ops/s
Iteration  19: 150729.383 ops/s
Iteration  20: 150873.527 ops/s
Iteration  21: 150161.969 ops/s
Iteration  22: 150593.489 ops/s
Iteration  23: 150231.607 ops/s
Iteration  24: 150500.452 ops/s
Iteration  25: 150508.516 ops/s
Iteration  26: 150452.488 ops/s
Iteration  27: 150367.208 ops/s
Iteration  28: 150241.226 ops/s
Iteration  29: 149178.776 ops/s
Iteration  30: 150443.820 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_231._Benchmark.benchmark_Cluster_231":
  150263.653 ±(99.9%) 334.120 ops/s [Average]
  (min, avg, max) = (149178.776, 150263.653, 151025.629), stdev = 500.095
  CI (99.9%): [149929.532, 150597.773] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_231._Benchmark.benchmark_Cluster_231  thrpt   30  150263.653 ± 334.120  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_232._Benchmark.benchmark_Cluster_232$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_232._Benchmark.benchmark_Cluster_232

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79189.449 ops/s
# Warmup Iteration   2: 106916.435 ops/s
# Warmup Iteration   3: 114146.544 ops/s
# Warmup Iteration   4: 169435.923 ops/s
# Warmup Iteration   5: 169079.187 ops/s
# Warmup Iteration   6: 169401.633 ops/s
# Warmup Iteration   7: 166941.734 ops/s
# Warmup Iteration   8: 169444.210 ops/s
# Warmup Iteration   9: 169560.242 ops/s
# Warmup Iteration  10: 169435.853 ops/s
# Warmup Iteration  11: 169677.279 ops/s
# Warmup Iteration  12: 169285.386 ops/s
# Warmup Iteration  13: 169393.268 ops/s
# Warmup Iteration  14: 116604.844 ops/s
# Warmup Iteration  15: 169202.712 ops/s
# Warmup Iteration  16: 169400.055 ops/s
# Warmup Iteration  17: 169262.647 ops/s
# Warmup Iteration  18: 169570.365 ops/s
# Warmup Iteration  19: 169361.177 ops/s
# Warmup Iteration  20: 169152.778 ops/s
# Warmup Iteration  21: 168963.939 ops/s
# Warmup Iteration  22: 169685.701 ops/s
# Warmup Iteration  23: 169431.709 ops/s
# Warmup Iteration  24: 169719.287 ops/s
# Warmup Iteration  25: 169537.375 ops/s
# Warmup Iteration  26: 169456.396 ops/s
# Warmup Iteration  27: 169536.865 ops/s
# Warmup Iteration  28: 169267.738 ops/s
# Warmup Iteration  29: 168882.865 ops/s
# Warmup Iteration  30: 168901.883 ops/s
Iteration   1: 169449.624 ops/s
Iteration   2: 169399.181 ops/s
Iteration   3: 168448.921 ops/s
Iteration   4: 169760.389 ops/s
Iteration   5: 168680.777 ops/s
Iteration   6: 169432.587 ops/s
Iteration   7: 169178.041 ops/s
Iteration   8: 169450.577 ops/s
Iteration   9: 168722.957 ops/s
Iteration  10: 169128.963 ops/s
Iteration  11: 169706.693 ops/s
Iteration  12: 169719.814 ops/s
Iteration  13: 169077.829 ops/s
Iteration  14: 168695.061 ops/s
Iteration  15: 169892.067 ops/s
Iteration  16: 169631.098 ops/s
Iteration  17: 169440.507 ops/s
Iteration  18: 169091.458 ops/s
Iteration  19: 168961.732 ops/s
Iteration  20: 168917.208 ops/s
Iteration  21: 168998.545 ops/s
Iteration  22: 169308.318 ops/s
Iteration  23: 168713.121 ops/s
Iteration  24: 169500.475 ops/s
Iteration  25: 168833.755 ops/s
Iteration  26: 169611.488 ops/s
Iteration  27: 169837.214 ops/s
Iteration  28: 168309.963 ops/s
Iteration  29: 169498.283 ops/s
Iteration  30: 169518.984 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_232._Benchmark.benchmark_Cluster_232":
  169230.521 ±(99.9%) 285.938 ops/s [Average]
  (min, avg, max) = (168309.963, 169230.521, 169892.067), stdev = 427.979
  CI (99.9%): [168944.583, 169516.459] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_232._Benchmark.benchmark_Cluster_232  thrpt   30  169230.521 ± 285.938  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_233._Benchmark.benchmark_Cluster_233$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_233._Benchmark.benchmark_Cluster_233

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 11563.765 ops/s
# Warmup Iteration   2: 40689.123 ops/s
# Warmup Iteration   3: 42691.829 ops/s
# Warmup Iteration   4: 47260.097 ops/s
# Warmup Iteration   5: 65911.211 ops/s
# Warmup Iteration   6: 65115.868 ops/s
# Warmup Iteration   7: 66383.479 ops/s
# Warmup Iteration   8: 65479.883 ops/s
# Warmup Iteration   9: 65962.702 ops/s
# Warmup Iteration  10: 66463.006 ops/s
# Warmup Iteration  11: 66303.058 ops/s
# Warmup Iteration  12: 65633.506 ops/s
# Warmup Iteration  13: 65426.485 ops/s
# Warmup Iteration  14: 50233.154 ops/s
# Warmup Iteration  15: 57546.537 ops/s
# Warmup Iteration  16: 66265.335 ops/s
# Warmup Iteration  17: 67193.593 ops/s
# Warmup Iteration  18: 66512.165 ops/s
# Warmup Iteration  19: 66615.573 ops/s
# Warmup Iteration  20: 65468.011 ops/s
# Warmup Iteration  21: 65146.163 ops/s
# Warmup Iteration  22: 66399.547 ops/s
# Warmup Iteration  23: 66600.434 ops/s
# Warmup Iteration  24: 66088.458 ops/s
# Warmup Iteration  25: 64516.310 ops/s
# Warmup Iteration  26: 65058.567 ops/s
# Warmup Iteration  27: 66417.748 ops/s
# Warmup Iteration  28: 65988.413 ops/s
# Warmup Iteration  29: 66654.064 ops/s
# Warmup Iteration  30: 65576.908 ops/s
Iteration   1: 66528.608 ops/s
Iteration   2: 66717.598 ops/s
Iteration   3: 66318.497 ops/s
Iteration   4: 66797.361 ops/s
Iteration   5: 66517.756 ops/s
Iteration   6: 65522.245 ops/s
Iteration   7: 65796.017 ops/s
Iteration   8: 66028.044 ops/s
Iteration   9: 65298.522 ops/s
Iteration  10: 64697.155 ops/s
Iteration  11: 64622.977 ops/s
Iteration  12: 66000.003 ops/s
Iteration  13: 66392.718 ops/s
Iteration  14: 66486.450 ops/s
Iteration  15: 65970.486 ops/s
Iteration  16: 66913.427 ops/s
Iteration  17: 64601.371 ops/s
Iteration  18: 64654.434 ops/s
Iteration  19: 65115.553 ops/s
Iteration  20: 66276.920 ops/s
Iteration  21: 65948.295 ops/s
Iteration  22: 66001.037 ops/s
Iteration  23: 65815.371 ops/s
Iteration  24: 66429.055 ops/s
Iteration  25: 66164.787 ops/s
Iteration  26: 66773.658 ops/s
Iteration  27: 64905.587 ops/s
Iteration  28: 66540.295 ops/s
Iteration  29: 66022.091 ops/s
Iteration  30: 65500.411 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_233._Benchmark.benchmark_Cluster_233":
  65911.891 ±(99.9%) 470.159 ops/s [Average]
  (min, avg, max) = (64601.371, 65911.891, 66913.427), stdev = 703.712
  CI (99.9%): [65441.732, 66382.050] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_233._Benchmark.benchmark_Cluster_233  thrpt   30  65911.891 ± 470.159  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_234._Benchmark.benchmark_Cluster_234$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_234._Benchmark.benchmark_Cluster_234

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75168.334 ops/s
# Warmup Iteration   2: 97385.153 ops/s
# Warmup Iteration   3: 141172.336 ops/s
# Warmup Iteration   4: 171238.066 ops/s
# Warmup Iteration   5: 169967.126 ops/s
# Warmup Iteration   6: 172250.262 ops/s
# Warmup Iteration   7: 171719.800 ops/s
# Warmup Iteration   8: 172357.735 ops/s
# Warmup Iteration   9: 172865.559 ops/s
# Warmup Iteration  10: 162646.971 ops/s
# Warmup Iteration  11: 127734.170 ops/s
# Warmup Iteration  12: 172440.502 ops/s
# Warmup Iteration  13: 172578.949 ops/s
# Warmup Iteration  14: 173058.575 ops/s
# Warmup Iteration  15: 172525.333 ops/s
# Warmup Iteration  16: 173313.819 ops/s
# Warmup Iteration  17: 173293.368 ops/s
# Warmup Iteration  18: 173260.635 ops/s
# Warmup Iteration  19: 172531.315 ops/s
# Warmup Iteration  20: 173072.247 ops/s
# Warmup Iteration  21: 172824.666 ops/s
# Warmup Iteration  22: 173568.238 ops/s
# Warmup Iteration  23: 173208.251 ops/s
# Warmup Iteration  24: 173121.708 ops/s
# Warmup Iteration  25: 173438.754 ops/s
# Warmup Iteration  26: 173389.249 ops/s
# Warmup Iteration  27: 173020.992 ops/s
# Warmup Iteration  28: 172425.899 ops/s
# Warmup Iteration  29: 173117.044 ops/s
# Warmup Iteration  30: 172866.763 ops/s
Iteration   1: 173340.319 ops/s
Iteration   2: 172229.847 ops/s
Iteration   3: 173383.723 ops/s
Iteration   4: 173037.848 ops/s
Iteration   5: 172636.214 ops/s
Iteration   6: 172546.592 ops/s
Iteration   7: 172601.337 ops/s
Iteration   8: 172507.249 ops/s
Iteration   9: 172113.811 ops/s
Iteration  10: 172559.186 ops/s
Iteration  11: 172774.906 ops/s
Iteration  12: 172105.335 ops/s
Iteration  13: 172526.792 ops/s
Iteration  14: 172269.157 ops/s
Iteration  15: 172074.566 ops/s
Iteration  16: 173312.315 ops/s
Iteration  17: 173672.869 ops/s
Iteration  18: 172859.940 ops/s
Iteration  19: 172909.124 ops/s
Iteration  20: 172704.999 ops/s
Iteration  21: 173414.948 ops/s
Iteration  22: 171807.251 ops/s
Iteration  23: 172909.919 ops/s
Iteration  24: 173064.062 ops/s
Iteration  25: 172994.029 ops/s
Iteration  26: 173383.343 ops/s
Iteration  27: 172924.472 ops/s
Iteration  28: 172975.453 ops/s
Iteration  29: 172538.106 ops/s
Iteration  30: 172530.400 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_234._Benchmark.benchmark_Cluster_234":
  172756.937 ±(99.9%) 307.160 ops/s [Average]
  (min, avg, max) = (171807.251, 172756.937, 173672.869), stdev = 459.743
  CI (99.9%): [172449.777, 173064.097] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_234._Benchmark.benchmark_Cluster_234  thrpt   30  172756.937 ± 307.160  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_235._Benchmark.benchmark_Cluster_235$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_235._Benchmark.benchmark_Cluster_235

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72176.271 ops/s
# Warmup Iteration   2: 101598.704 ops/s
# Warmup Iteration   3: 105054.108 ops/s
# Warmup Iteration   4: 160494.557 ops/s
# Warmup Iteration   5: 160183.270 ops/s
# Warmup Iteration   6: 160762.497 ops/s
# Warmup Iteration   7: 158285.997 ops/s
# Warmup Iteration   8: 160222.585 ops/s
# Warmup Iteration   9: 160885.815 ops/s
# Warmup Iteration  10: 160260.165 ops/s
# Warmup Iteration  11: 160618.309 ops/s
# Warmup Iteration  12: 160179.773 ops/s
# Warmup Iteration  13: 160624.404 ops/s
# Warmup Iteration  14: 107124.815 ops/s
# Warmup Iteration  15: 160314.507 ops/s
# Warmup Iteration  16: 160109.037 ops/s
# Warmup Iteration  17: 161357.631 ops/s
# Warmup Iteration  18: 161408.199 ops/s
# Warmup Iteration  19: 161224.001 ops/s
# Warmup Iteration  20: 161138.239 ops/s
# Warmup Iteration  21: 161273.252 ops/s
# Warmup Iteration  22: 161165.178 ops/s
# Warmup Iteration  23: 161135.252 ops/s
# Warmup Iteration  24: 161341.641 ops/s
# Warmup Iteration  25: 161307.251 ops/s
# Warmup Iteration  26: 161217.914 ops/s
# Warmup Iteration  27: 160883.073 ops/s
# Warmup Iteration  28: 160919.371 ops/s
# Warmup Iteration  29: 161545.300 ops/s
# Warmup Iteration  30: 161332.367 ops/s
Iteration   1: 161729.281 ops/s
Iteration   2: 161562.546 ops/s
Iteration   3: 161757.812 ops/s
Iteration   4: 161693.977 ops/s
Iteration   5: 161233.602 ops/s
Iteration   6: 161371.585 ops/s
Iteration   7: 160631.660 ops/s
Iteration   8: 161484.621 ops/s
Iteration   9: 161608.260 ops/s
Iteration  10: 161231.832 ops/s
Iteration  11: 160875.171 ops/s
Iteration  12: 161627.019 ops/s
Iteration  13: 161779.072 ops/s
Iteration  14: 160857.402 ops/s
Iteration  15: 161730.652 ops/s
Iteration  16: 162154.641 ops/s
Iteration  17: 161525.631 ops/s
Iteration  18: 161577.696 ops/s
Iteration  19: 161860.860 ops/s
Iteration  20: 161245.425 ops/s
Iteration  21: 160901.878 ops/s
Iteration  22: 160853.840 ops/s
Iteration  23: 160615.792 ops/s
Iteration  24: 162001.538 ops/s
Iteration  25: 161665.349 ops/s
Iteration  26: 161524.167 ops/s
Iteration  27: 161418.683 ops/s
Iteration  28: 160782.931 ops/s
Iteration  29: 161326.435 ops/s
Iteration  30: 161557.191 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_235._Benchmark.benchmark_Cluster_235":
  161406.218 ±(99.9%) 271.634 ops/s [Average]
  (min, avg, max) = (160615.792, 161406.218, 162154.641), stdev = 406.569
  CI (99.9%): [161134.584, 161677.852] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_235._Benchmark.benchmark_Cluster_235  thrpt   30  161406.218 ± 271.634  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_236._Benchmark.benchmark_Cluster_236$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_236._Benchmark.benchmark_Cluster_236

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74980.927 ops/s
# Warmup Iteration   2: 99863.180 ops/s
# Warmup Iteration   3: 131464.215 ops/s
# Warmup Iteration   4: 173102.906 ops/s
# Warmup Iteration   5: 174021.449 ops/s
# Warmup Iteration   6: 172541.205 ops/s
# Warmup Iteration   7: 174345.186 ops/s
# Warmup Iteration   8: 173927.543 ops/s
# Warmup Iteration   9: 174665.878 ops/s
# Warmup Iteration  10: 173571.393 ops/s
# Warmup Iteration  11: 155231.992 ops/s
# Warmup Iteration  12: 137749.537 ops/s
# Warmup Iteration  13: 174186.286 ops/s
# Warmup Iteration  14: 174134.222 ops/s
# Warmup Iteration  15: 173761.631 ops/s
# Warmup Iteration  16: 173942.197 ops/s
# Warmup Iteration  17: 176282.722 ops/s
# Warmup Iteration  18: 176878.263 ops/s
# Warmup Iteration  19: 175952.057 ops/s
# Warmup Iteration  20: 176261.798 ops/s
# Warmup Iteration  21: 176408.178 ops/s
# Warmup Iteration  22: 176591.031 ops/s
# Warmup Iteration  23: 176681.917 ops/s
# Warmup Iteration  24: 176863.754 ops/s
# Warmup Iteration  25: 176717.241 ops/s
# Warmup Iteration  26: 177076.749 ops/s
# Warmup Iteration  27: 176506.352 ops/s
# Warmup Iteration  28: 176281.939 ops/s
# Warmup Iteration  29: 176652.908 ops/s
# Warmup Iteration  30: 176460.079 ops/s
Iteration   1: 176751.943 ops/s
Iteration   2: 176286.410 ops/s
Iteration   3: 175767.276 ops/s
Iteration   4: 176021.775 ops/s
Iteration   5: 176635.419 ops/s
Iteration   6: 175864.787 ops/s
Iteration   7: 175837.755 ops/s
Iteration   8: 176680.600 ops/s
Iteration   9: 176326.207 ops/s
Iteration  10: 176392.561 ops/s
Iteration  11: 175759.510 ops/s
Iteration  12: 176461.755 ops/s
Iteration  13: 176326.355 ops/s
Iteration  14: 176182.357 ops/s
Iteration  15: 176712.159 ops/s
Iteration  16: 176259.737 ops/s
Iteration  17: 176667.341 ops/s
Iteration  18: 176267.226 ops/s
Iteration  19: 176385.899 ops/s
Iteration  20: 176410.008 ops/s
Iteration  21: 176425.977 ops/s
Iteration  22: 176483.425 ops/s
Iteration  23: 176215.179 ops/s
Iteration  24: 176481.051 ops/s
Iteration  25: 176102.379 ops/s
Iteration  26: 176252.596 ops/s
Iteration  27: 175923.249 ops/s
Iteration  28: 175929.022 ops/s
Iteration  29: 175473.489 ops/s
Iteration  30: 176124.089 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_236._Benchmark.benchmark_Cluster_236":
  176246.918 ±(99.9%) 212.549 ops/s [Average]
  (min, avg, max) = (175473.489, 176246.918, 176751.943), stdev = 318.133
  CI (99.9%): [176034.369, 176459.467] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_236._Benchmark.benchmark_Cluster_236  thrpt   30  176246.918 ± 212.549  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_237._Benchmark.benchmark_Cluster_237$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_237._Benchmark.benchmark_Cluster_237

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 49781.513 ops/s
# Warmup Iteration   2: 78110.503 ops/s
# Warmup Iteration   3: 125995.052 ops/s
# Warmup Iteration   4: 152020.583 ops/s
# Warmup Iteration   5: 150476.421 ops/s
# Warmup Iteration   6: 151850.744 ops/s
# Warmup Iteration   7: 152071.875 ops/s
# Warmup Iteration   8: 152201.842 ops/s
# Warmup Iteration   9: 124428.855 ops/s
# Warmup Iteration  10: 132166.068 ops/s
# Warmup Iteration  11: 151886.502 ops/s
# Warmup Iteration  12: 151852.200 ops/s
# Warmup Iteration  13: 152114.501 ops/s
# Warmup Iteration  14: 151865.420 ops/s
# Warmup Iteration  15: 151544.398 ops/s
# Warmup Iteration  16: 151472.313 ops/s
# Warmup Iteration  17: 153266.633 ops/s
# Warmup Iteration  18: 153126.183 ops/s
# Warmup Iteration  19: 153189.828 ops/s
# Warmup Iteration  20: 152977.585 ops/s
# Warmup Iteration  21: 152991.684 ops/s
# Warmup Iteration  22: 153244.975 ops/s
# Warmup Iteration  23: 153673.439 ops/s
# Warmup Iteration  24: 153111.433 ops/s
# Warmup Iteration  25: 152902.529 ops/s
# Warmup Iteration  26: 153278.362 ops/s
# Warmup Iteration  27: 152557.103 ops/s
# Warmup Iteration  28: 153065.803 ops/s
# Warmup Iteration  29: 152909.871 ops/s
# Warmup Iteration  30: 153144.870 ops/s
Iteration   1: 152917.099 ops/s
Iteration   2: 152984.111 ops/s
Iteration   3: 152778.462 ops/s
Iteration   4: 151989.311 ops/s
Iteration   5: 152865.548 ops/s
Iteration   6: 153207.871 ops/s
Iteration   7: 152521.804 ops/s
Iteration   8: 153083.665 ops/s
Iteration   9: 153205.726 ops/s
Iteration  10: 153204.171 ops/s
Iteration  11: 153185.112 ops/s
Iteration  12: 152765.277 ops/s
Iteration  13: 152934.307 ops/s
Iteration  14: 153262.113 ops/s
Iteration  15: 153099.159 ops/s
Iteration  16: 153206.394 ops/s
Iteration  17: 152419.239 ops/s
Iteration  18: 152692.464 ops/s
Iteration  19: 152980.108 ops/s
Iteration  20: 152778.868 ops/s
Iteration  21: 152479.793 ops/s
Iteration  22: 153243.414 ops/s
Iteration  23: 153197.987 ops/s
Iteration  24: 152875.668 ops/s
Iteration  25: 152944.817 ops/s
Iteration  26: 152746.661 ops/s
Iteration  27: 152315.248 ops/s
Iteration  28: 153023.608 ops/s
Iteration  29: 152876.158 ops/s
Iteration  30: 153030.603 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_237._Benchmark.benchmark_Cluster_237":
  152893.826 ±(99.9%) 205.885 ops/s [Average]
  (min, avg, max) = (151989.311, 152893.826, 153262.113), stdev = 308.160
  CI (99.9%): [152687.940, 153099.711] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_237._Benchmark.benchmark_Cluster_237  thrpt   30  152893.826 ± 205.885  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_238._Benchmark.benchmark_Cluster_238$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_238._Benchmark.benchmark_Cluster_238

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63389.284 ops/s
# Warmup Iteration   2: 86596.227 ops/s
# Warmup Iteration   3: 109879.972 ops/s
# Warmup Iteration   4: 149749.079 ops/s
# Warmup Iteration   5: 150293.015 ops/s
# Warmup Iteration   6: 148780.341 ops/s
# Warmup Iteration   7: 150764.245 ops/s
# Warmup Iteration   8: 151463.106 ops/s
# Warmup Iteration   9: 150808.012 ops/s
# Warmup Iteration  10: 150677.114 ops/s
# Warmup Iteration  11: 151361.825 ops/s
# Warmup Iteration  12: 101429.462 ops/s
# Warmup Iteration  13: 150679.310 ops/s
# Warmup Iteration  14: 150876.377 ops/s
# Warmup Iteration  15: 150424.924 ops/s
# Warmup Iteration  16: 150598.864 ops/s
# Warmup Iteration  17: 154799.209 ops/s
# Warmup Iteration  18: 154896.642 ops/s
# Warmup Iteration  19: 154429.675 ops/s
# Warmup Iteration  20: 154724.668 ops/s
# Warmup Iteration  21: 155028.486 ops/s
# Warmup Iteration  22: 154696.161 ops/s
# Warmup Iteration  23: 154589.556 ops/s
# Warmup Iteration  24: 154739.957 ops/s
# Warmup Iteration  25: 154347.490 ops/s
# Warmup Iteration  26: 154625.954 ops/s
# Warmup Iteration  27: 154579.256 ops/s
# Warmup Iteration  28: 154683.830 ops/s
# Warmup Iteration  29: 154652.926 ops/s
# Warmup Iteration  30: 154623.035 ops/s
Iteration   1: 154219.331 ops/s
Iteration   2: 154316.098 ops/s
Iteration   3: 154546.851 ops/s
Iteration   4: 154480.323 ops/s
Iteration   5: 154848.203 ops/s
Iteration   6: 154936.838 ops/s
Iteration   7: 154180.887 ops/s
Iteration   8: 154410.169 ops/s
Iteration   9: 154251.738 ops/s
Iteration  10: 153870.275 ops/s
Iteration  11: 154280.213 ops/s
Iteration  12: 154553.205 ops/s
Iteration  13: 154033.118 ops/s
Iteration  14: 154725.350 ops/s
Iteration  15: 155052.207 ops/s
Iteration  16: 154591.824 ops/s
Iteration  17: 154597.303 ops/s
Iteration  18: 154859.105 ops/s
Iteration  19: 154280.372 ops/s
Iteration  20: 154350.686 ops/s
Iteration  21: 154893.177 ops/s
Iteration  22: 154697.142 ops/s
Iteration  23: 154333.840 ops/s
Iteration  24: 154426.801 ops/s
Iteration  25: 154048.314 ops/s
Iteration  26: 154144.250 ops/s
Iteration  27: 153568.496 ops/s
Iteration  28: 154094.817 ops/s
Iteration  29: 154873.889 ops/s
Iteration  30: 154454.201 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_238._Benchmark.benchmark_Cluster_238":
  154430.634 ±(99.9%) 229.570 ops/s [Average]
  (min, avg, max) = (153568.496, 154430.634, 155052.207), stdev = 343.610
  CI (99.9%): [154201.064, 154660.205] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_238._Benchmark.benchmark_Cluster_238  thrpt   30  154430.634 ± 229.570  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_239._Benchmark.benchmark_Cluster_239$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_239._Benchmark.benchmark_Cluster_239

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 82850.868 ops/s
# Warmup Iteration   2: 99074.936 ops/s
# Warmup Iteration   3: 98670.578 ops/s
# Warmup Iteration   4: 147397.112 ops/s
# Warmup Iteration   5: 152825.499 ops/s
# Warmup Iteration   6: 152549.988 ops/s
# Warmup Iteration   7: 149348.459 ops/s
# Warmup Iteration   8: 152514.800 ops/s
# Warmup Iteration   9: 151978.204 ops/s
# Warmup Iteration  10: 152288.832 ops/s
# Warmup Iteration  11: 152283.871 ops/s
# Warmup Iteration  12: 151962.540 ops/s
# Warmup Iteration  13: 152070.834 ops/s
# Warmup Iteration  14: 152386.335 ops/s
# Warmup Iteration  15: 135926.986 ops/s
# Warmup Iteration  16: 115613.333 ops/s
# Warmup Iteration  17: 155914.232 ops/s
# Warmup Iteration  18: 155118.860 ops/s
# Warmup Iteration  19: 155399.803 ops/s
# Warmup Iteration  20: 155341.690 ops/s
# Warmup Iteration  21: 155259.365 ops/s
# Warmup Iteration  22: 155198.581 ops/s
# Warmup Iteration  23: 155295.167 ops/s
# Warmup Iteration  24: 155704.783 ops/s
# Warmup Iteration  25: 155546.024 ops/s
# Warmup Iteration  26: 155484.210 ops/s
# Warmup Iteration  27: 155793.108 ops/s
# Warmup Iteration  28: 155023.053 ops/s
# Warmup Iteration  29: 155097.746 ops/s
# Warmup Iteration  30: 155409.716 ops/s
Iteration   1: 154929.433 ops/s
Iteration   2: 155486.513 ops/s
Iteration   3: 156120.300 ops/s
Iteration   4: 156169.284 ops/s
Iteration   5: 155625.076 ops/s
Iteration   6: 155809.783 ops/s
Iteration   7: 155773.081 ops/s
Iteration   8: 156045.023 ops/s
Iteration   9: 156473.994 ops/s
Iteration  10: 156212.745 ops/s
Iteration  11: 156046.396 ops/s
Iteration  12: 155585.401 ops/s
Iteration  13: 155145.410 ops/s
Iteration  14: 155371.209 ops/s
Iteration  15: 155377.961 ops/s
Iteration  16: 155738.127 ops/s
Iteration  17: 155390.593 ops/s
Iteration  18: 155020.850 ops/s
Iteration  19: 155344.148 ops/s
Iteration  20: 155572.008 ops/s
Iteration  21: 154973.060 ops/s
Iteration  22: 155507.377 ops/s
Iteration  23: 155571.105 ops/s
Iteration  24: 154819.865 ops/s
Iteration  25: 154238.889 ops/s
Iteration  26: 155411.669 ops/s
Iteration  27: 155486.091 ops/s
Iteration  28: 155629.534 ops/s
Iteration  29: 155525.766 ops/s
Iteration  30: 155042.715 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_239._Benchmark.benchmark_Cluster_239":
  155514.780 ±(99.9%) 315.158 ops/s [Average]
  (min, avg, max) = (154238.889, 155514.780, 156473.994), stdev = 471.713
  CI (99.9%): [155199.622, 155829.938] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_239._Benchmark.benchmark_Cluster_239  thrpt   30  155514.780 ± 315.158  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_24._Benchmark.benchmark_Cluster_24$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_24._Benchmark.benchmark_Cluster_24

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67263.313 ops/s
# Warmup Iteration   2: 90595.816 ops/s
# Warmup Iteration   3: 132485.523 ops/s
# Warmup Iteration   4: 162156.088 ops/s
# Warmup Iteration   5: 160816.537 ops/s
# Warmup Iteration   6: 161833.544 ops/s
# Warmup Iteration   7: 161911.935 ops/s
# Warmup Iteration   8: 161581.929 ops/s
# Warmup Iteration   9: 162184.866 ops/s
# Warmup Iteration  10: 142228.536 ops/s
# Warmup Iteration  11: 132585.685 ops/s
# Warmup Iteration  12: 162797.958 ops/s
# Warmup Iteration  13: 162552.902 ops/s
# Warmup Iteration  14: 162846.722 ops/s
# Warmup Iteration  15: 162691.610 ops/s
# Warmup Iteration  16: 162312.423 ops/s
# Warmup Iteration  17: 162640.502 ops/s
# Warmup Iteration  18: 162935.769 ops/s
# Warmup Iteration  19: 163259.928 ops/s
# Warmup Iteration  20: 162816.207 ops/s
# Warmup Iteration  21: 162367.200 ops/s
# Warmup Iteration  22: 162658.524 ops/s
# Warmup Iteration  23: 163001.900 ops/s
# Warmup Iteration  24: 162844.297 ops/s
# Warmup Iteration  25: 163244.281 ops/s
# Warmup Iteration  26: 163070.959 ops/s
# Warmup Iteration  27: 162898.689 ops/s
# Warmup Iteration  28: 162817.282 ops/s
# Warmup Iteration  29: 162347.394 ops/s
# Warmup Iteration  30: 162908.470 ops/s
Iteration   1: 162500.527 ops/s
Iteration   2: 162602.149 ops/s
Iteration   3: 162677.728 ops/s
Iteration   4: 162714.982 ops/s
Iteration   5: 162949.764 ops/s
Iteration   6: 162924.508 ops/s
Iteration   7: 162707.161 ops/s
Iteration   8: 162952.567 ops/s
Iteration   9: 163048.003 ops/s
Iteration  10: 162885.402 ops/s
Iteration  11: 163164.726 ops/s
Iteration  12: 163044.426 ops/s
Iteration  13: 162874.915 ops/s
Iteration  14: 162375.687 ops/s
Iteration  15: 163020.291 ops/s
Iteration  16: 162909.506 ops/s
Iteration  17: 163030.437 ops/s
Iteration  18: 163464.736 ops/s
Iteration  19: 163063.398 ops/s
Iteration  20: 162369.911 ops/s
Iteration  21: 162950.847 ops/s
Iteration  22: 162522.686 ops/s
Iteration  23: 162838.344 ops/s
Iteration  24: 163158.777 ops/s
Iteration  25: 162756.074 ops/s
Iteration  26: 162826.049 ops/s
Iteration  27: 162598.687 ops/s
Iteration  28: 163326.708 ops/s
Iteration  29: 163037.865 ops/s
Iteration  30: 162409.350 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_24._Benchmark.benchmark_Cluster_24":
  162856.874 ±(99.9%) 181.512 ops/s [Average]
  (min, avg, max) = (162369.911, 162856.874, 163464.736), stdev = 271.678
  CI (99.9%): [162675.362, 163038.385] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_24._Benchmark.benchmark_Cluster_24  thrpt   30  162856.874 ± 181.512  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_240._Benchmark.benchmark_Cluster_240$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_240._Benchmark.benchmark_Cluster_240

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62946.793 ops/s
# Warmup Iteration   2: 80309.252 ops/s
# Warmup Iteration   3: 92205.337 ops/s
# Warmup Iteration   4: 132671.676 ops/s
# Warmup Iteration   5: 131460.101 ops/s
# Warmup Iteration   6: 130415.916 ops/s
# Warmup Iteration   7: 131898.263 ops/s
# Warmup Iteration   8: 132303.328 ops/s
# Warmup Iteration   9: 132930.329 ops/s
# Warmup Iteration  10: 132616.467 ops/s
# Warmup Iteration  11: 131793.290 ops/s
# Warmup Iteration  12: 131791.784 ops/s
# Warmup Iteration  13: 92010.744 ops/s
# Warmup Iteration  14: 128362.964 ops/s
# Warmup Iteration  15: 131804.574 ops/s
# Warmup Iteration  16: 132126.545 ops/s
# Warmup Iteration  17: 134794.259 ops/s
# Warmup Iteration  18: 134429.295 ops/s
# Warmup Iteration  19: 135103.200 ops/s
# Warmup Iteration  20: 135348.266 ops/s
# Warmup Iteration  21: 135068.047 ops/s
# Warmup Iteration  22: 134954.725 ops/s
# Warmup Iteration  23: 135048.290 ops/s
# Warmup Iteration  24: 135240.501 ops/s
# Warmup Iteration  25: 135471.724 ops/s
# Warmup Iteration  26: 135220.815 ops/s
# Warmup Iteration  27: 135557.368 ops/s
# Warmup Iteration  28: 134968.932 ops/s
# Warmup Iteration  29: 135094.638 ops/s
# Warmup Iteration  30: 134839.011 ops/s
Iteration   1: 134853.958 ops/s
Iteration   2: 134792.270 ops/s
Iteration   3: 134889.864 ops/s
Iteration   4: 134619.816 ops/s
Iteration   5: 135610.084 ops/s
Iteration   6: 135104.137 ops/s
Iteration   7: 134782.028 ops/s
Iteration   8: 135087.853 ops/s
Iteration   9: 135372.678 ops/s
Iteration  10: 135568.787 ops/s
Iteration  11: 135460.851 ops/s
Iteration  12: 135041.433 ops/s
Iteration  13: 135160.347 ops/s
Iteration  14: 134810.801 ops/s
Iteration  15: 135547.564 ops/s
Iteration  16: 134250.678 ops/s
Iteration  17: 135085.449 ops/s
Iteration  18: 135567.217 ops/s
Iteration  19: 135098.374 ops/s
Iteration  20: 134785.237 ops/s
Iteration  21: 134809.250 ops/s
Iteration  22: 135322.858 ops/s
Iteration  23: 135515.895 ops/s
Iteration  24: 135197.573 ops/s
Iteration  25: 135244.423 ops/s
Iteration  26: 135294.591 ops/s
Iteration  27: 135287.133 ops/s
Iteration  28: 135133.381 ops/s
Iteration  29: 135195.638 ops/s
Iteration  30: 135062.742 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_240._Benchmark.benchmark_Cluster_240":
  135118.430 ±(99.9%) 213.363 ops/s [Average]
  (min, avg, max) = (134250.678, 135118.430, 135610.084), stdev = 319.352
  CI (99.9%): [134905.067, 135331.794] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_240._Benchmark.benchmark_Cluster_240  thrpt   30  135118.430 ± 213.363  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_241._Benchmark.benchmark_Cluster_241$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_241._Benchmark.benchmark_Cluster_241

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50880.986 ops/s
# Warmup Iteration   2: 82186.921 ops/s
# Warmup Iteration   3: 114000.653 ops/s
# Warmup Iteration   4: 149751.009 ops/s
# Warmup Iteration   5: 148444.347 ops/s
# Warmup Iteration   6: 150064.067 ops/s
# Warmup Iteration   7: 149858.351 ops/s
# Warmup Iteration   8: 150158.505 ops/s
# Warmup Iteration   9: 149824.505 ops/s
# Warmup Iteration  10: 126009.099 ops/s
# Warmup Iteration  11: 125020.813 ops/s
# Warmup Iteration  12: 149874.734 ops/s
# Warmup Iteration  13: 150208.954 ops/s
# Warmup Iteration  14: 149983.798 ops/s
# Warmup Iteration  15: 150187.164 ops/s
# Warmup Iteration  16: 150007.630 ops/s
# Warmup Iteration  17: 150103.573 ops/s
# Warmup Iteration  18: 150055.232 ops/s
# Warmup Iteration  19: 150229.335 ops/s
# Warmup Iteration  20: 150047.270 ops/s
# Warmup Iteration  21: 149972.684 ops/s
# Warmup Iteration  22: 149890.442 ops/s
# Warmup Iteration  23: 150065.204 ops/s
# Warmup Iteration  24: 150207.885 ops/s
# Warmup Iteration  25: 150091.199 ops/s
# Warmup Iteration  26: 149984.491 ops/s
# Warmup Iteration  27: 149993.661 ops/s
# Warmup Iteration  28: 150129.751 ops/s
# Warmup Iteration  29: 150385.108 ops/s
# Warmup Iteration  30: 149994.312 ops/s
Iteration   1: 150309.058 ops/s
Iteration   2: 150514.568 ops/s
Iteration   3: 150335.566 ops/s
Iteration   4: 150030.335 ops/s
Iteration   5: 149510.079 ops/s
Iteration   6: 149217.426 ops/s
Iteration   7: 149817.108 ops/s
Iteration   8: 150020.641 ops/s
Iteration   9: 150019.314 ops/s
Iteration  10: 149898.125 ops/s
Iteration  11: 150230.539 ops/s
Iteration  12: 149564.140 ops/s
Iteration  13: 150290.726 ops/s
Iteration  14: 149958.890 ops/s
Iteration  15: 150455.214 ops/s
Iteration  16: 150293.134 ops/s
Iteration  17: 150293.558 ops/s
Iteration  18: 150247.503 ops/s
Iteration  19: 149740.729 ops/s
Iteration  20: 149749.556 ops/s
Iteration  21: 149984.290 ops/s
Iteration  22: 149636.340 ops/s
Iteration  23: 149944.825 ops/s
Iteration  24: 150011.144 ops/s
Iteration  25: 149385.784 ops/s
Iteration  26: 149784.446 ops/s
Iteration  27: 149791.674 ops/s
Iteration  28: 149626.082 ops/s
Iteration  29: 149873.731 ops/s
Iteration  30: 149991.329 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_241._Benchmark.benchmark_Cluster_241":
  149950.862 ±(99.9%) 213.340 ops/s [Average]
  (min, avg, max) = (149217.426, 149950.862, 150514.568), stdev = 319.317
  CI (99.9%): [149737.522, 150164.202] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_241._Benchmark.benchmark_Cluster_241  thrpt   30  149950.862 ± 213.340  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_242._Benchmark.benchmark_Cluster_242$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_242._Benchmark.benchmark_Cluster_242

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55311.400 ops/s
# Warmup Iteration   2: 79830.087 ops/s
# Warmup Iteration   3: 108030.432 ops/s
# Warmup Iteration   4: 141041.674 ops/s
# Warmup Iteration   5: 140950.542 ops/s
# Warmup Iteration   6: 139609.156 ops/s
# Warmup Iteration   7: 141236.253 ops/s
# Warmup Iteration   8: 141087.750 ops/s
# Warmup Iteration   9: 140938.302 ops/s
# Warmup Iteration  10: 141233.750 ops/s
# Warmup Iteration  11: 95302.254 ops/s
# Warmup Iteration  12: 141364.776 ops/s
# Warmup Iteration  13: 141137.322 ops/s
# Warmup Iteration  14: 141298.333 ops/s
# Warmup Iteration  15: 141404.341 ops/s
# Warmup Iteration  16: 141340.121 ops/s
# Warmup Iteration  17: 140983.808 ops/s
# Warmup Iteration  18: 140672.990 ops/s
# Warmup Iteration  19: 140753.595 ops/s
# Warmup Iteration  20: 140876.244 ops/s
# Warmup Iteration  21: 140596.854 ops/s
# Warmup Iteration  22: 140670.062 ops/s
# Warmup Iteration  23: 140823.719 ops/s
# Warmup Iteration  24: 141275.530 ops/s
# Warmup Iteration  25: 140817.598 ops/s
# Warmup Iteration  26: 141275.463 ops/s
# Warmup Iteration  27: 140488.701 ops/s
# Warmup Iteration  28: 140747.844 ops/s
# Warmup Iteration  29: 140718.605 ops/s
# Warmup Iteration  30: 140412.211 ops/s
Iteration   1: 140602.283 ops/s
Iteration   2: 141289.633 ops/s
Iteration   3: 141596.905 ops/s
Iteration   4: 140170.513 ops/s
Iteration   5: 141081.177 ops/s
Iteration   6: 141586.450 ops/s
Iteration   7: 141215.174 ops/s
Iteration   8: 141095.119 ops/s
Iteration   9: 141017.990 ops/s
Iteration  10: 141249.297 ops/s
Iteration  11: 141047.901 ops/s
Iteration  12: 141437.794 ops/s
Iteration  13: 141188.768 ops/s
Iteration  14: 141101.692 ops/s
Iteration  15: 141154.238 ops/s
Iteration  16: 141504.853 ops/s
Iteration  17: 141137.230 ops/s
Iteration  18: 140651.299 ops/s
Iteration  19: 140949.294 ops/s
Iteration  20: 141004.108 ops/s
Iteration  21: 140740.632 ops/s
Iteration  22: 141544.131 ops/s
Iteration  23: 141395.010 ops/s
Iteration  24: 140878.528 ops/s
Iteration  25: 140936.857 ops/s
Iteration  26: 140985.780 ops/s
Iteration  27: 141263.037 ops/s
Iteration  28: 141322.671 ops/s
Iteration  29: 141240.733 ops/s
Iteration  30: 140958.706 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_242._Benchmark.benchmark_Cluster_242":
  141111.593 ±(99.9%) 208.122 ops/s [Average]
  (min, avg, max) = (140170.513, 141111.593, 141596.905), stdev = 311.507
  CI (99.9%): [140903.472, 141319.715] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_242._Benchmark.benchmark_Cluster_242  thrpt   30  141111.593 ± 208.122  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_243._Benchmark.benchmark_Cluster_243$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_243._Benchmark.benchmark_Cluster_243

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60547.589 ops/s
# Warmup Iteration   2: 83311.955 ops/s
# Warmup Iteration   3: 171790.537 ops/s
# Warmup Iteration   4: 176206.926 ops/s
# Warmup Iteration   5: 177808.737 ops/s
# Warmup Iteration   6: 177425.023 ops/s
# Warmup Iteration   7: 177806.938 ops/s
# Warmup Iteration   8: 121488.534 ops/s
# Warmup Iteration   9: 177686.626 ops/s
# Warmup Iteration  10: 177632.875 ops/s
# Warmup Iteration  11: 177996.144 ops/s
# Warmup Iteration  12: 177696.879 ops/s
# Warmup Iteration  13: 177669.581 ops/s
# Warmup Iteration  14: 177848.120 ops/s
# Warmup Iteration  15: 177843.301 ops/s
# Warmup Iteration  16: 177974.638 ops/s
# Warmup Iteration  17: 177719.255 ops/s
# Warmup Iteration  18: 177739.278 ops/s
# Warmup Iteration  19: 177866.158 ops/s
# Warmup Iteration  20: 177774.042 ops/s
# Warmup Iteration  21: 177626.247 ops/s
# Warmup Iteration  22: 178003.459 ops/s
# Warmup Iteration  23: 177455.780 ops/s
# Warmup Iteration  24: 177654.163 ops/s
# Warmup Iteration  25: 177964.790 ops/s
# Warmup Iteration  26: 177586.560 ops/s
# Warmup Iteration  27: 177996.112 ops/s
# Warmup Iteration  28: 178237.123 ops/s
# Warmup Iteration  29: 177946.165 ops/s
# Warmup Iteration  30: 177874.709 ops/s
Iteration   1: 177722.532 ops/s
Iteration   2: 178005.625 ops/s
Iteration   3: 177971.267 ops/s
Iteration   4: 177837.746 ops/s
Iteration   5: 177490.410 ops/s
Iteration   6: 177059.557 ops/s
Iteration   7: 177146.851 ops/s
Iteration   8: 177418.472 ops/s
Iteration   9: 177866.462 ops/s
Iteration  10: 177313.085 ops/s
Iteration  11: 177889.717 ops/s
Iteration  12: 177912.394 ops/s
Iteration  13: 177850.314 ops/s
Iteration  14: 177919.544 ops/s
Iteration  15: 177258.847 ops/s
Iteration  16: 178014.235 ops/s
Iteration  17: 178063.553 ops/s
Iteration  18: 178477.462 ops/s
Iteration  19: 178369.531 ops/s
Iteration  20: 178145.533 ops/s
Iteration  21: 177883.497 ops/s
Iteration  22: 177379.184 ops/s
Iteration  23: 178051.344 ops/s
Iteration  24: 177659.196 ops/s
Iteration  25: 177554.964 ops/s
Iteration  26: 177426.095 ops/s
Iteration  27: 177397.161 ops/s
Iteration  28: 177598.190 ops/s
Iteration  29: 178186.540 ops/s
Iteration  30: 177569.057 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_243._Benchmark.benchmark_Cluster_243":
  177747.945 ±(99.9%) 237.889 ops/s [Average]
  (min, avg, max) = (177059.557, 177747.945, 178477.462), stdev = 356.061
  CI (99.9%): [177510.057, 177985.834] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_243._Benchmark.benchmark_Cluster_243  thrpt   30  177747.945 ± 237.889  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_244._Benchmark.benchmark_Cluster_244$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_244._Benchmark.benchmark_Cluster_244

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 104184.226 ops/s
# Warmup Iteration   2: 114277.803 ops/s
# Warmup Iteration   3: 115160.954 ops/s
# Warmup Iteration   4: 122374.187 ops/s
# Warmup Iteration   5: 157033.781 ops/s
# Warmup Iteration   6: 157057.551 ops/s
# Warmup Iteration   7: 156891.227 ops/s
# Warmup Iteration   8: 157456.048 ops/s
# Warmup Iteration   9: 157570.558 ops/s
# Warmup Iteration  10: 155551.958 ops/s
# Warmup Iteration  11: 157421.376 ops/s
# Warmup Iteration  12: 157167.843 ops/s
# Warmup Iteration  13: 156553.944 ops/s
# Warmup Iteration  14: 156167.472 ops/s
# Warmup Iteration  15: 156772.038 ops/s
# Warmup Iteration  16: 156885.189 ops/s
# Warmup Iteration  17: 165024.410 ops/s
# Warmup Iteration  18: 164463.738 ops/s
# Warmup Iteration  19: 163540.806 ops/s
# Warmup Iteration  20: 164133.979 ops/s
# Warmup Iteration  21: 120005.182 ops/s
# Warmup Iteration  22: 155296.733 ops/s
# Warmup Iteration  23: 164414.662 ops/s
# Warmup Iteration  24: 164552.167 ops/s
# Warmup Iteration  25: 164480.007 ops/s
# Warmup Iteration  26: 164711.676 ops/s
# Warmup Iteration  27: 164232.143 ops/s
# Warmup Iteration  28: 164726.254 ops/s
# Warmup Iteration  29: 164591.987 ops/s
# Warmup Iteration  30: 164528.390 ops/s
Iteration   1: 164738.925 ops/s
Iteration   2: 165232.582 ops/s
Iteration   3: 164381.217 ops/s
Iteration   4: 164424.871 ops/s
Iteration   5: 164666.967 ops/s
Iteration   6: 164419.442 ops/s
Iteration   7: 164375.287 ops/s
Iteration   8: 164349.005 ops/s
Iteration   9: 164948.035 ops/s
Iteration  10: 164884.692 ops/s
Iteration  11: 164597.528 ops/s
Iteration  12: 164894.952 ops/s
Iteration  13: 164486.698 ops/s
Iteration  14: 164355.053 ops/s
Iteration  15: 164972.632 ops/s
Iteration  16: 164261.328 ops/s
Iteration  17: 164784.623 ops/s
Iteration  18: 164130.219 ops/s
Iteration  19: 164164.772 ops/s
Iteration  20: 164202.586 ops/s
Iteration  21: 164447.495 ops/s
Iteration  22: 164267.486 ops/s
Iteration  23: 164124.445 ops/s
Iteration  24: 164294.385 ops/s
Iteration  25: 164258.258 ops/s
Iteration  26: 164320.169 ops/s
Iteration  27: 164322.082 ops/s
Iteration  28: 164395.027 ops/s
Iteration  29: 164543.952 ops/s
Iteration  30: 164568.644 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_244._Benchmark.benchmark_Cluster_244":
  164493.779 ±(99.9%) 188.140 ops/s [Average]
  (min, avg, max) = (164124.445, 164493.779, 165232.582), stdev = 281.599
  CI (99.9%): [164305.639, 164681.919] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_244._Benchmark.benchmark_Cluster_244  thrpt   30  164493.779 ± 188.140  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_245._Benchmark.benchmark_Cluster_245$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_245._Benchmark.benchmark_Cluster_245

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80099.079 ops/s
# Warmup Iteration   2: 98030.779 ops/s
# Warmup Iteration   3: 98371.767 ops/s
# Warmup Iteration   4: 124421.240 ops/s
# Warmup Iteration   5: 141788.451 ops/s
# Warmup Iteration   6: 141523.845 ops/s
# Warmup Iteration   7: 141143.247 ops/s
# Warmup Iteration   8: 139658.625 ops/s
# Warmup Iteration   9: 141362.155 ops/s
# Warmup Iteration  10: 141433.314 ops/s
# Warmup Iteration  11: 141470.641 ops/s
# Warmup Iteration  12: 141364.669 ops/s
# Warmup Iteration  13: 140933.133 ops/s
# Warmup Iteration  14: 141404.611 ops/s
# Warmup Iteration  15: 140916.642 ops/s
# Warmup Iteration  16: 141391.356 ops/s
# Warmup Iteration  17: 140686.970 ops/s
# Warmup Iteration  18: 108172.009 ops/s
# Warmup Iteration  19: 148180.028 ops/s
# Warmup Iteration  20: 147647.772 ops/s
# Warmup Iteration  21: 147616.572 ops/s
# Warmup Iteration  22: 148028.258 ops/s
# Warmup Iteration  23: 148248.696 ops/s
# Warmup Iteration  24: 147695.220 ops/s
# Warmup Iteration  25: 147371.960 ops/s
# Warmup Iteration  26: 147537.440 ops/s
# Warmup Iteration  27: 147548.451 ops/s
# Warmup Iteration  28: 147449.381 ops/s
# Warmup Iteration  29: 147903.252 ops/s
# Warmup Iteration  30: 147100.429 ops/s
Iteration   1: 147690.649 ops/s
Iteration   2: 147722.291 ops/s
Iteration   3: 148165.261 ops/s
Iteration   4: 147808.155 ops/s
Iteration   5: 147703.667 ops/s
Iteration   6: 148089.141 ops/s
Iteration   7: 147665.734 ops/s
Iteration   8: 147577.742 ops/s
Iteration   9: 147350.950 ops/s
Iteration  10: 147475.737 ops/s
Iteration  11: 147375.602 ops/s
Iteration  12: 147560.523 ops/s
Iteration  13: 147454.189 ops/s
Iteration  14: 147341.846 ops/s
Iteration  15: 147531.476 ops/s
Iteration  16: 148174.589 ops/s
Iteration  17: 147996.152 ops/s
Iteration  18: 148339.231 ops/s
Iteration  19: 147878.677 ops/s
Iteration  20: 148081.104 ops/s
Iteration  21: 148234.248 ops/s
Iteration  22: 148215.055 ops/s
Iteration  23: 147263.123 ops/s
Iteration  24: 148142.819 ops/s
Iteration  25: 148447.618 ops/s
Iteration  26: 147863.141 ops/s
Iteration  27: 147681.064 ops/s
Iteration  28: 147389.448 ops/s
Iteration  29: 147412.575 ops/s
Iteration  30: 148001.786 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_245._Benchmark.benchmark_Cluster_245":
  147787.786 ±(99.9%) 227.803 ops/s [Average]
  (min, avg, max) = (147263.123, 147787.786, 148447.618), stdev = 340.965
  CI (99.9%): [147559.983, 148015.589] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_245._Benchmark.benchmark_Cluster_245  thrpt   30  147787.786 ± 227.803  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_246._Benchmark.benchmark_Cluster_246$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_246._Benchmark.benchmark_Cluster_246

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46906.739 ops/s
# Warmup Iteration   2: 79261.236 ops/s
# Warmup Iteration   3: 122925.626 ops/s
# Warmup Iteration   4: 153546.042 ops/s
# Warmup Iteration   5: 151228.059 ops/s
# Warmup Iteration   6: 152036.908 ops/s
# Warmup Iteration   7: 152633.526 ops/s
# Warmup Iteration   8: 152691.322 ops/s
# Warmup Iteration   9: 136092.746 ops/s
# Warmup Iteration  10: 122514.330 ops/s
# Warmup Iteration  11: 152602.628 ops/s
# Warmup Iteration  12: 152314.816 ops/s
# Warmup Iteration  13: 152715.918 ops/s
# Warmup Iteration  14: 153018.276 ops/s
# Warmup Iteration  15: 152646.389 ops/s
# Warmup Iteration  16: 152244.572 ops/s
# Warmup Iteration  17: 153446.449 ops/s
# Warmup Iteration  18: 153419.627 ops/s
# Warmup Iteration  19: 153520.730 ops/s
# Warmup Iteration  20: 153128.496 ops/s
# Warmup Iteration  21: 153465.544 ops/s
# Warmup Iteration  22: 153631.892 ops/s
# Warmup Iteration  23: 153610.317 ops/s
# Warmup Iteration  24: 153657.999 ops/s
# Warmup Iteration  25: 153933.550 ops/s
# Warmup Iteration  26: 153311.242 ops/s
# Warmup Iteration  27: 152150.074 ops/s
# Warmup Iteration  28: 152665.377 ops/s
# Warmup Iteration  29: 153725.425 ops/s
# Warmup Iteration  30: 153236.595 ops/s
Iteration   1: 152657.833 ops/s
Iteration   2: 152282.211 ops/s
Iteration   3: 152444.201 ops/s
Iteration   4: 152489.885 ops/s
Iteration   5: 152785.920 ops/s
Iteration   6: 153064.316 ops/s
Iteration   7: 152837.853 ops/s
Iteration   8: 153634.900 ops/s
Iteration   9: 153572.804 ops/s
Iteration  10: 153723.357 ops/s
Iteration  11: 152854.988 ops/s
Iteration  12: 152528.816 ops/s
Iteration  13: 153587.310 ops/s
Iteration  14: 152345.259 ops/s
Iteration  15: 151536.533 ops/s
Iteration  16: 151986.250 ops/s
Iteration  17: 151367.800 ops/s
Iteration  18: 152192.359 ops/s
Iteration  19: 151740.979 ops/s
Iteration  20: 152494.206 ops/s
Iteration  21: 151156.281 ops/s
Iteration  22: 151749.676 ops/s
Iteration  23: 152154.462 ops/s
Iteration  24: 152444.507 ops/s
Iteration  25: 152136.799 ops/s
Iteration  26: 151868.272 ops/s
Iteration  27: 150253.279 ops/s
Iteration  28: 151319.544 ops/s
Iteration  29: 151579.899 ops/s
Iteration  30: 151239.175 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_246._Benchmark.benchmark_Cluster_246":
  152267.656 ±(99.9%) 544.806 ops/s [Average]
  (min, avg, max) = (150253.279, 152267.656, 153723.357), stdev = 815.440
  CI (99.9%): [151722.850, 152812.462] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_246._Benchmark.benchmark_Cluster_246  thrpt   30  152267.656 ± 544.806  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_247._Benchmark.benchmark_Cluster_247$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_247._Benchmark.benchmark_Cluster_247

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57014.847 ops/s
# Warmup Iteration   2: 82175.889 ops/s
# Warmup Iteration   3: 132601.187 ops/s
# Warmup Iteration   4: 155780.053 ops/s
# Warmup Iteration   5: 154635.147 ops/s
# Warmup Iteration   6: 156064.205 ops/s
# Warmup Iteration   7: 155703.120 ops/s
# Warmup Iteration   8: 155567.927 ops/s
# Warmup Iteration   9: 136051.598 ops/s
# Warmup Iteration  10: 126141.245 ops/s
# Warmup Iteration  11: 156421.658 ops/s
# Warmup Iteration  12: 156474.840 ops/s
# Warmup Iteration  13: 156612.935 ops/s
# Warmup Iteration  14: 156853.926 ops/s
# Warmup Iteration  15: 156663.963 ops/s
# Warmup Iteration  16: 156484.986 ops/s
# Warmup Iteration  17: 156056.241 ops/s
# Warmup Iteration  18: 156443.225 ops/s
# Warmup Iteration  19: 156216.277 ops/s
# Warmup Iteration  20: 156513.501 ops/s
# Warmup Iteration  21: 156281.912 ops/s
# Warmup Iteration  22: 156010.042 ops/s
# Warmup Iteration  23: 156488.030 ops/s
# Warmup Iteration  24: 156665.065 ops/s
# Warmup Iteration  25: 156520.649 ops/s
# Warmup Iteration  26: 156474.580 ops/s
# Warmup Iteration  27: 156614.440 ops/s
# Warmup Iteration  28: 156732.765 ops/s
# Warmup Iteration  29: 156079.766 ops/s
# Warmup Iteration  30: 156570.958 ops/s
Iteration   1: 156407.175 ops/s
Iteration   2: 156267.684 ops/s
Iteration   3: 156627.755 ops/s
Iteration   4: 156395.482 ops/s
Iteration   5: 155025.817 ops/s
Iteration   6: 156074.973 ops/s
Iteration   7: 156957.692 ops/s
Iteration   8: 156452.238 ops/s
Iteration   9: 156712.277 ops/s
Iteration  10: 156567.693 ops/s
Iteration  11: 155967.639 ops/s
Iteration  12: 155459.628 ops/s
Iteration  13: 156298.710 ops/s
Iteration  14: 156164.475 ops/s
Iteration  15: 155891.931 ops/s
Iteration  16: 156367.485 ops/s
Iteration  17: 156577.770 ops/s
Iteration  18: 156972.246 ops/s
Iteration  19: 156806.352 ops/s
Iteration  20: 156410.170 ops/s
Iteration  21: 156413.014 ops/s
Iteration  22: 156464.688 ops/s
Iteration  23: 156645.812 ops/s
Iteration  24: 156978.776 ops/s
Iteration  25: 156715.154 ops/s
Iteration  26: 156639.733 ops/s
Iteration  27: 156522.698 ops/s
Iteration  28: 156273.276 ops/s
Iteration  29: 156753.566 ops/s
Iteration  30: 156925.357 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_247._Benchmark.benchmark_Cluster_247":
  156424.576 ±(99.9%) 288.138 ops/s [Average]
  (min, avg, max) = (155025.817, 156424.576, 156978.776), stdev = 431.272
  CI (99.9%): [156136.437, 156712.714] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_247._Benchmark.benchmark_Cluster_247  thrpt   30  156424.576 ± 288.138  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_248._Benchmark.benchmark_Cluster_248$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_248._Benchmark.benchmark_Cluster_248

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80979.847 ops/s
# Warmup Iteration   2: 94483.684 ops/s
# Warmup Iteration   3: 94664.578 ops/s
# Warmup Iteration   4: 118089.755 ops/s
# Warmup Iteration   5: 135574.652 ops/s
# Warmup Iteration   6: 135668.548 ops/s
# Warmup Iteration   7: 135842.245 ops/s
# Warmup Iteration   8: 135823.231 ops/s
# Warmup Iteration   9: 136054.334 ops/s
# Warmup Iteration  10: 135794.095 ops/s
# Warmup Iteration  11: 136026.171 ops/s
# Warmup Iteration  12: 136476.370 ops/s
# Warmup Iteration  13: 135949.182 ops/s
# Warmup Iteration  14: 135936.312 ops/s
# Warmup Iteration  15: 135565.171 ops/s
# Warmup Iteration  16: 135819.751 ops/s
# Warmup Iteration  17: 141647.600 ops/s
# Warmup Iteration  18: 102763.249 ops/s
# Warmup Iteration  19: 136712.996 ops/s
# Warmup Iteration  20: 142370.224 ops/s
# Warmup Iteration  21: 141852.786 ops/s
# Warmup Iteration  22: 142029.735 ops/s
# Warmup Iteration  23: 142229.370 ops/s
# Warmup Iteration  24: 141600.567 ops/s
# Warmup Iteration  25: 141606.553 ops/s
# Warmup Iteration  26: 142265.799 ops/s
# Warmup Iteration  27: 142213.140 ops/s
# Warmup Iteration  28: 142632.492 ops/s
# Warmup Iteration  29: 142440.707 ops/s
# Warmup Iteration  30: 142108.637 ops/s
Iteration   1: 142263.101 ops/s
Iteration   2: 141622.112 ops/s
Iteration   3: 142592.833 ops/s
Iteration   4: 142274.142 ops/s
Iteration   5: 142674.119 ops/s
Iteration   6: 142475.369 ops/s
Iteration   7: 142526.805 ops/s
Iteration   8: 142751.640 ops/s
Iteration   9: 142101.292 ops/s
Iteration  10: 141343.833 ops/s
Iteration  11: 142235.007 ops/s
Iteration  12: 142173.170 ops/s
Iteration  13: 142560.117 ops/s
Iteration  14: 142410.019 ops/s
Iteration  15: 142200.945 ops/s
Iteration  16: 142149.815 ops/s
Iteration  17: 141854.734 ops/s
Iteration  18: 141706.812 ops/s
Iteration  19: 142344.408 ops/s
Iteration  20: 142196.828 ops/s
Iteration  21: 141980.811 ops/s
Iteration  22: 141535.017 ops/s
Iteration  23: 142194.079 ops/s
Iteration  24: 141987.099 ops/s
Iteration  25: 142255.512 ops/s
Iteration  26: 140817.656 ops/s
Iteration  27: 140773.498 ops/s
Iteration  28: 141566.699 ops/s
Iteration  29: 141735.456 ops/s
Iteration  30: 141823.077 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_248._Benchmark.benchmark_Cluster_248":
  142037.534 ±(99.9%) 327.433 ops/s [Average]
  (min, avg, max) = (140773.498, 142037.534, 142751.640), stdev = 490.087
  CI (99.9%): [141710.100, 142364.967] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_248._Benchmark.benchmark_Cluster_248  thrpt   30  142037.534 ± 327.433  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_249._Benchmark.benchmark_Cluster_249$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_249._Benchmark.benchmark_Cluster_249

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63182.728 ops/s
# Warmup Iteration   2: 90260.228 ops/s
# Warmup Iteration   3: 105695.547 ops/s
# Warmup Iteration   4: 151959.241 ops/s
# Warmup Iteration   5: 151948.762 ops/s
# Warmup Iteration   6: 150494.848 ops/s
# Warmup Iteration   7: 152558.548 ops/s
# Warmup Iteration   8: 151986.795 ops/s
# Warmup Iteration   9: 152513.135 ops/s
# Warmup Iteration  10: 152225.165 ops/s
# Warmup Iteration  11: 151958.664 ops/s
# Warmup Iteration  12: 125116.150 ops/s
# Warmup Iteration  13: 130968.203 ops/s
# Warmup Iteration  14: 153426.200 ops/s
# Warmup Iteration  15: 153228.357 ops/s
# Warmup Iteration  16: 153341.430 ops/s
# Warmup Iteration  17: 159677.335 ops/s
# Warmup Iteration  18: 160110.233 ops/s
# Warmup Iteration  19: 159730.116 ops/s
# Warmup Iteration  20: 159197.594 ops/s
# Warmup Iteration  21: 158912.785 ops/s
# Warmup Iteration  22: 159004.603 ops/s
# Warmup Iteration  23: 158975.899 ops/s
# Warmup Iteration  24: 159022.321 ops/s
# Warmup Iteration  25: 159000.798 ops/s
# Warmup Iteration  26: 159632.478 ops/s
# Warmup Iteration  27: 158895.341 ops/s
# Warmup Iteration  28: 159202.606 ops/s
# Warmup Iteration  29: 159338.499 ops/s
# Warmup Iteration  30: 159248.942 ops/s
Iteration   1: 159232.488 ops/s
Iteration   2: 159650.626 ops/s
Iteration   3: 159433.703 ops/s
Iteration   4: 159507.001 ops/s
Iteration   5: 159217.353 ops/s
Iteration   6: 159165.484 ops/s
Iteration   7: 159244.464 ops/s
Iteration   8: 159623.308 ops/s
Iteration   9: 159059.552 ops/s
Iteration  10: 159675.653 ops/s
Iteration  11: 159554.411 ops/s
Iteration  12: 160038.551 ops/s
Iteration  13: 159827.459 ops/s
Iteration  14: 159556.874 ops/s
Iteration  15: 159006.720 ops/s
Iteration  16: 159473.324 ops/s
Iteration  17: 159295.572 ops/s
Iteration  18: 159167.091 ops/s
Iteration  19: 159711.111 ops/s
Iteration  20: 159566.303 ops/s
Iteration  21: 159327.175 ops/s
Iteration  22: 159245.963 ops/s
Iteration  23: 159955.385 ops/s
Iteration  24: 160079.795 ops/s
Iteration  25: 159472.292 ops/s
Iteration  26: 159354.836 ops/s
Iteration  27: 158898.555 ops/s
Iteration  28: 158913.889 ops/s
Iteration  29: 159995.099 ops/s
Iteration  30: 159586.487 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_249._Benchmark.benchmark_Cluster_249":
  159461.217 ±(99.9%) 215.511 ops/s [Average]
  (min, avg, max) = (158898.555, 159461.217, 160079.795), stdev = 322.567
  CI (99.9%): [159245.706, 159676.729] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_249._Benchmark.benchmark_Cluster_249  thrpt   30  159461.217 ± 215.511  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_25._Benchmark.benchmark_Cluster_25$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_25._Benchmark.benchmark_Cluster_25

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70325.872 ops/s
# Warmup Iteration   2: 83460.411 ops/s
# Warmup Iteration   3: 83250.983 ops/s
# Warmup Iteration   4: 122536.047 ops/s
# Warmup Iteration   5: 125869.196 ops/s
# Warmup Iteration   6: 126220.334 ops/s
# Warmup Iteration   7: 124557.503 ops/s
# Warmup Iteration   8: 126188.477 ops/s
# Warmup Iteration   9: 126036.178 ops/s
# Warmup Iteration  10: 126151.408 ops/s
# Warmup Iteration  11: 125768.418 ops/s
# Warmup Iteration  12: 125686.660 ops/s
# Warmup Iteration  13: 124936.162 ops/s
# Warmup Iteration  14: 124856.365 ops/s
# Warmup Iteration  15: 116989.738 ops/s
# Warmup Iteration  16: 93620.936 ops/s
# Warmup Iteration  17: 129451.156 ops/s
# Warmup Iteration  18: 129609.667 ops/s
# Warmup Iteration  19: 129895.669 ops/s
# Warmup Iteration  20: 129983.108 ops/s
# Warmup Iteration  21: 130163.239 ops/s
# Warmup Iteration  22: 129665.174 ops/s
# Warmup Iteration  23: 129251.879 ops/s
# Warmup Iteration  24: 130252.215 ops/s
# Warmup Iteration  25: 130319.604 ops/s
# Warmup Iteration  26: 130076.439 ops/s
# Warmup Iteration  27: 130008.780 ops/s
# Warmup Iteration  28: 129933.136 ops/s
# Warmup Iteration  29: 129645.359 ops/s
# Warmup Iteration  30: 130316.452 ops/s
Iteration   1: 129595.219 ops/s
Iteration   2: 129784.388 ops/s
Iteration   3: 128836.993 ops/s
Iteration   4: 129505.135 ops/s
Iteration   5: 129877.784 ops/s
Iteration   6: 129024.859 ops/s
Iteration   7: 129139.949 ops/s
Iteration   8: 129967.127 ops/s
Iteration   9: 129517.682 ops/s
Iteration  10: 129966.947 ops/s
Iteration  11: 130160.141 ops/s
Iteration  12: 130179.223 ops/s
Iteration  13: 129460.167 ops/s
Iteration  14: 130258.672 ops/s
Iteration  15: 130100.520 ops/s
Iteration  16: 130463.487 ops/s
Iteration  17: 129486.947 ops/s
Iteration  18: 129612.044 ops/s
Iteration  19: 129894.417 ops/s
Iteration  20: 129820.226 ops/s
Iteration  21: 129667.388 ops/s
Iteration  22: 129544.215 ops/s
Iteration  23: 128768.470 ops/s
Iteration  24: 129439.631 ops/s
Iteration  25: 129099.154 ops/s
Iteration  26: 129787.123 ops/s
Iteration  27: 129708.949 ops/s
Iteration  28: 130047.906 ops/s
Iteration  29: 130244.271 ops/s
Iteration  30: 129442.574 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_25._Benchmark.benchmark_Cluster_25":
  129680.054 ±(99.9%) 283.963 ops/s [Average]
  (min, avg, max) = (128768.470, 129680.054, 130463.487), stdev = 425.022
  CI (99.9%): [129396.091, 129964.017] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_25._Benchmark.benchmark_Cluster_25  thrpt   30  129680.054 ± 283.963  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_250._Benchmark.benchmark_Cluster_250$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_250._Benchmark.benchmark_Cluster_250

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78447.896 ops/s
# Warmup Iteration   2: 95609.576 ops/s
# Warmup Iteration   3: 144557.484 ops/s
# Warmup Iteration   4: 172334.982 ops/s
# Warmup Iteration   5: 170406.381 ops/s
# Warmup Iteration   6: 172580.856 ops/s
# Warmup Iteration   7: 172383.522 ops/s
# Warmup Iteration   8: 171695.752 ops/s
# Warmup Iteration   9: 171825.875 ops/s
# Warmup Iteration  10: 145334.834 ops/s
# Warmup Iteration  11: 143691.750 ops/s
# Warmup Iteration  12: 171547.148 ops/s
# Warmup Iteration  13: 171688.700 ops/s
# Warmup Iteration  14: 172242.392 ops/s
# Warmup Iteration  15: 172386.362 ops/s
# Warmup Iteration  16: 171519.635 ops/s
# Warmup Iteration  17: 174133.194 ops/s
# Warmup Iteration  18: 174350.531 ops/s
# Warmup Iteration  19: 174450.714 ops/s
# Warmup Iteration  20: 174466.311 ops/s
# Warmup Iteration  21: 174031.818 ops/s
# Warmup Iteration  22: 174473.859 ops/s
# Warmup Iteration  23: 174098.231 ops/s
# Warmup Iteration  24: 173500.048 ops/s
# Warmup Iteration  25: 173914.188 ops/s
# Warmup Iteration  26: 174284.804 ops/s
# Warmup Iteration  27: 174270.527 ops/s
# Warmup Iteration  28: 174835.327 ops/s
# Warmup Iteration  29: 174568.878 ops/s
# Warmup Iteration  30: 174458.905 ops/s
Iteration   1: 174901.090 ops/s
Iteration   2: 174185.494 ops/s
Iteration   3: 174385.438 ops/s
Iteration   4: 174054.011 ops/s
Iteration   5: 173862.692 ops/s
Iteration   6: 174023.027 ops/s
Iteration   7: 172685.588 ops/s
Iteration   8: 173921.392 ops/s
Iteration   9: 173609.539 ops/s
Iteration  10: 174243.808 ops/s
Iteration  11: 174325.662 ops/s
Iteration  12: 173595.228 ops/s
Iteration  13: 173122.690 ops/s
Iteration  14: 173197.248 ops/s
Iteration  15: 173848.320 ops/s
Iteration  16: 174065.877 ops/s
Iteration  17: 173852.177 ops/s
Iteration  18: 174369.742 ops/s
Iteration  19: 174734.673 ops/s
Iteration  20: 174489.518 ops/s
Iteration  21: 175082.689 ops/s
Iteration  22: 174721.713 ops/s
Iteration  23: 174133.571 ops/s
Iteration  24: 174935.916 ops/s
Iteration  25: 175097.683 ops/s
Iteration  26: 174640.024 ops/s
Iteration  27: 174611.725 ops/s
Iteration  28: 174516.221 ops/s
Iteration  29: 174574.069 ops/s
Iteration  30: 175302.791 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_250._Benchmark.benchmark_Cluster_250":
  174236.321 ±(99.9%) 407.829 ops/s [Average]
  (min, avg, max) = (172685.588, 174236.321, 175302.791), stdev = 610.419
  CI (99.9%): [173828.491, 174644.150] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_250._Benchmark.benchmark_Cluster_250  thrpt   30  174236.321 ± 407.829  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_251._Benchmark.benchmark_Cluster_251$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_251._Benchmark.benchmark_Cluster_251

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64979.360 ops/s
# Warmup Iteration   2: 80531.637 ops/s
# Warmup Iteration   3: 80976.180 ops/s
# Warmup Iteration   4: 82817.073 ops/s
# Warmup Iteration   5: 111051.195 ops/s
# Warmup Iteration   6: 111870.203 ops/s
# Warmup Iteration   7: 110478.908 ops/s
# Warmup Iteration   8: 111824.578 ops/s
# Warmup Iteration   9: 111829.368 ops/s
# Warmup Iteration  10: 110462.309 ops/s
# Warmup Iteration  11: 111383.310 ops/s
# Warmup Iteration  12: 111966.928 ops/s
# Warmup Iteration  13: 111892.251 ops/s
# Warmup Iteration  14: 111530.306 ops/s
# Warmup Iteration  15: 111739.341 ops/s
# Warmup Iteration  16: 111587.867 ops/s
# Warmup Iteration  17: 116000.389 ops/s
# Warmup Iteration  18: 115275.920 ops/s
# Warmup Iteration  19: 115527.969 ops/s
# Warmup Iteration  20: 115695.813 ops/s
# Warmup Iteration  21: 100256.077 ops/s
# Warmup Iteration  22: 90574.180 ops/s
# Warmup Iteration  23: 115896.709 ops/s
# Warmup Iteration  24: 115977.984 ops/s
# Warmup Iteration  25: 116258.468 ops/s
# Warmup Iteration  26: 115822.291 ops/s
# Warmup Iteration  27: 115779.302 ops/s
# Warmup Iteration  28: 116083.408 ops/s
# Warmup Iteration  29: 115781.922 ops/s
# Warmup Iteration  30: 115991.668 ops/s
Iteration   1: 115975.715 ops/s
Iteration   2: 115206.296 ops/s
Iteration   3: 115418.477 ops/s
Iteration   4: 115886.228 ops/s
Iteration   5: 115474.962 ops/s
Iteration   6: 116016.260 ops/s
Iteration   7: 115692.753 ops/s
Iteration   8: 115462.514 ops/s
Iteration   9: 116058.477 ops/s
Iteration  10: 115172.738 ops/s
Iteration  11: 115375.606 ops/s
Iteration  12: 115453.054 ops/s
Iteration  13: 115494.640 ops/s
Iteration  14: 116045.759 ops/s
Iteration  15: 116282.289 ops/s
Iteration  16: 115442.152 ops/s
Iteration  17: 115669.412 ops/s
Iteration  18: 115544.003 ops/s
Iteration  19: 115528.804 ops/s
Iteration  20: 114895.920 ops/s
Iteration  21: 115347.619 ops/s
Iteration  22: 115323.790 ops/s
Iteration  23: 114033.647 ops/s
Iteration  24: 114527.003 ops/s
Iteration  25: 115353.203 ops/s
Iteration  26: 115017.196 ops/s
Iteration  27: 114591.608 ops/s
Iteration  28: 116041.263 ops/s
Iteration  29: 115604.852 ops/s
Iteration  30: 114963.188 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_251._Benchmark.benchmark_Cluster_251":
  115429.981 ±(99.9%) 332.820 ops/s [Average]
  (min, avg, max) = (114033.647, 115429.981, 116282.289), stdev = 498.149
  CI (99.9%): [115097.161, 115762.800] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_251._Benchmark.benchmark_Cluster_251  thrpt   30  115429.981 ± 332.820  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_252._Benchmark.benchmark_Cluster_252$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_252._Benchmark.benchmark_Cluster_252

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62107.836 ops/s
# Warmup Iteration   2: 77201.992 ops/s
# Warmup Iteration   3: 82644.318 ops/s
# Warmup Iteration   4: 126300.796 ops/s
# Warmup Iteration   5: 126432.497 ops/s
# Warmup Iteration   6: 126134.254 ops/s
# Warmup Iteration   7: 124121.665 ops/s
# Warmup Iteration   8: 125914.667 ops/s
# Warmup Iteration   9: 126384.461 ops/s
# Warmup Iteration  10: 125797.453 ops/s
# Warmup Iteration  11: 126320.422 ops/s
# Warmup Iteration  12: 126078.416 ops/s
# Warmup Iteration  13: 125863.466 ops/s
# Warmup Iteration  14: 84001.796 ops/s
# Warmup Iteration  15: 125254.039 ops/s
# Warmup Iteration  16: 125900.577 ops/s
# Warmup Iteration  17: 128716.799 ops/s
# Warmup Iteration  18: 128487.878 ops/s
# Warmup Iteration  19: 128696.548 ops/s
# Warmup Iteration  20: 128786.202 ops/s
# Warmup Iteration  21: 128601.830 ops/s
# Warmup Iteration  22: 128563.206 ops/s
# Warmup Iteration  23: 129226.209 ops/s
# Warmup Iteration  24: 129244.141 ops/s
# Warmup Iteration  25: 128910.142 ops/s
# Warmup Iteration  26: 128618.208 ops/s
# Warmup Iteration  27: 128651.334 ops/s
# Warmup Iteration  28: 128790.060 ops/s
# Warmup Iteration  29: 128929.344 ops/s
# Warmup Iteration  30: 128744.254 ops/s
Iteration   1: 128732.603 ops/s
Iteration   2: 128473.801 ops/s
Iteration   3: 128729.568 ops/s
Iteration   4: 128120.424 ops/s
Iteration   5: 128681.217 ops/s
Iteration   6: 128711.013 ops/s
Iteration   7: 128360.645 ops/s
Iteration   8: 128680.252 ops/s
Iteration   9: 127619.627 ops/s
Iteration  10: 128424.769 ops/s
Iteration  11: 128307.404 ops/s
Iteration  12: 127701.697 ops/s
Iteration  13: 127879.887 ops/s
Iteration  14: 128310.545 ops/s
Iteration  15: 128729.389 ops/s
Iteration  16: 129377.102 ops/s
Iteration  17: 129369.553 ops/s
Iteration  18: 129083.495 ops/s
Iteration  19: 128913.134 ops/s
Iteration  20: 128629.756 ops/s
Iteration  21: 128857.044 ops/s
Iteration  22: 128889.160 ops/s
Iteration  23: 129361.036 ops/s
Iteration  24: 128965.727 ops/s
Iteration  25: 128620.724 ops/s
Iteration  26: 128286.651 ops/s
Iteration  27: 129093.851 ops/s
Iteration  28: 129239.236 ops/s
Iteration  29: 129143.228 ops/s
Iteration  30: 128768.466 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_252._Benchmark.benchmark_Cluster_252":
  128668.700 ±(99.9%) 308.693 ops/s [Average]
  (min, avg, max) = (127619.627, 128668.700, 129377.102), stdev = 462.037
  CI (99.9%): [128360.007, 128977.393] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_252._Benchmark.benchmark_Cluster_252  thrpt   30  128668.700 ± 308.693  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_253._Benchmark.benchmark_Cluster_253$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_253._Benchmark.benchmark_Cluster_253

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72370.534 ops/s
# Warmup Iteration   2: 95801.688 ops/s
# Warmup Iteration   3: 123694.129 ops/s
# Warmup Iteration   4: 166085.375 ops/s
# Warmup Iteration   5: 165497.856 ops/s
# Warmup Iteration   6: 163808.506 ops/s
# Warmup Iteration   7: 166259.348 ops/s
# Warmup Iteration   8: 166576.059 ops/s
# Warmup Iteration   9: 165466.388 ops/s
# Warmup Iteration  10: 165287.367 ops/s
# Warmup Iteration  11: 153518.781 ops/s
# Warmup Iteration  12: 123414.730 ops/s
# Warmup Iteration  13: 166058.227 ops/s
# Warmup Iteration  14: 165850.588 ops/s
# Warmup Iteration  15: 165602.969 ops/s
# Warmup Iteration  16: 165167.941 ops/s
# Warmup Iteration  17: 168290.613 ops/s
# Warmup Iteration  18: 167905.479 ops/s
# Warmup Iteration  19: 167713.225 ops/s
# Warmup Iteration  20: 167802.891 ops/s
# Warmup Iteration  21: 168029.322 ops/s
# Warmup Iteration  22: 167593.501 ops/s
# Warmup Iteration  23: 167073.159 ops/s
# Warmup Iteration  24: 168215.587 ops/s
# Warmup Iteration  25: 168050.045 ops/s
# Warmup Iteration  26: 168462.063 ops/s
# Warmup Iteration  27: 168137.737 ops/s
# Warmup Iteration  28: 167929.295 ops/s
# Warmup Iteration  29: 167441.625 ops/s
# Warmup Iteration  30: 167117.015 ops/s
Iteration   1: 167832.782 ops/s
Iteration   2: 167690.668 ops/s
Iteration   3: 167773.095 ops/s
Iteration   4: 167145.058 ops/s
Iteration   5: 166941.353 ops/s
Iteration   6: 167312.557 ops/s
Iteration   7: 167758.539 ops/s
Iteration   8: 166942.603 ops/s
Iteration   9: 167840.750 ops/s
Iteration  10: 168585.078 ops/s
Iteration  11: 167932.327 ops/s
Iteration  12: 168100.906 ops/s
Iteration  13: 168292.876 ops/s
Iteration  14: 168427.661 ops/s
Iteration  15: 167640.579 ops/s
Iteration  16: 168024.071 ops/s
Iteration  17: 168391.777 ops/s
Iteration  18: 168029.059 ops/s
Iteration  19: 168585.309 ops/s
Iteration  20: 168092.388 ops/s
Iteration  21: 168155.934 ops/s
Iteration  22: 168013.604 ops/s
Iteration  23: 168705.859 ops/s
Iteration  24: 168521.094 ops/s
Iteration  25: 168186.181 ops/s
Iteration  26: 168270.253 ops/s
Iteration  27: 167748.345 ops/s
Iteration  28: 167795.050 ops/s
Iteration  29: 168346.133 ops/s
Iteration  30: 168181.113 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_253._Benchmark.benchmark_Cluster_253":
  167975.433 ±(99.9%) 306.517 ops/s [Average]
  (min, avg, max) = (166941.353, 167975.433, 168705.859), stdev = 458.780
  CI (99.9%): [167668.916, 168281.951] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_253._Benchmark.benchmark_Cluster_253  thrpt   30  167975.433 ± 306.517  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_254._Benchmark.benchmark_Cluster_254$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_254._Benchmark.benchmark_Cluster_254

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68324.750 ops/s
# Warmup Iteration   2: 88824.884 ops/s
# Warmup Iteration   3: 143141.591 ops/s
# Warmup Iteration   4: 167390.256 ops/s
# Warmup Iteration   5: 166199.453 ops/s
# Warmup Iteration   6: 167770.034 ops/s
# Warmup Iteration   7: 167995.676 ops/s
# Warmup Iteration   8: 167838.840 ops/s
# Warmup Iteration   9: 168362.457 ops/s
# Warmup Iteration  10: 114162.027 ops/s
# Warmup Iteration  11: 168177.882 ops/s
# Warmup Iteration  12: 167754.104 ops/s
# Warmup Iteration  13: 168127.067 ops/s
# Warmup Iteration  14: 168146.464 ops/s
# Warmup Iteration  15: 167863.101 ops/s
# Warmup Iteration  16: 167890.358 ops/s
# Warmup Iteration  17: 167900.097 ops/s
# Warmup Iteration  18: 167699.483 ops/s
# Warmup Iteration  19: 167927.892 ops/s
# Warmup Iteration  20: 167738.759 ops/s
# Warmup Iteration  21: 167939.600 ops/s
# Warmup Iteration  22: 167698.515 ops/s
# Warmup Iteration  23: 168160.454 ops/s
# Warmup Iteration  24: 167979.311 ops/s
# Warmup Iteration  25: 167827.904 ops/s
# Warmup Iteration  26: 167606.805 ops/s
# Warmup Iteration  27: 167739.439 ops/s
# Warmup Iteration  28: 167455.438 ops/s
# Warmup Iteration  29: 167430.836 ops/s
# Warmup Iteration  30: 167715.501 ops/s
Iteration   1: 167349.801 ops/s
Iteration   2: 167114.380 ops/s
Iteration   3: 167858.805 ops/s
Iteration   4: 167720.412 ops/s
Iteration   5: 167632.062 ops/s
Iteration   6: 167806.468 ops/s
Iteration   7: 167856.687 ops/s
Iteration   8: 167491.664 ops/s
Iteration   9: 167753.959 ops/s
Iteration  10: 167644.451 ops/s
Iteration  11: 167634.844 ops/s
Iteration  12: 167923.244 ops/s
Iteration  13: 167656.111 ops/s
Iteration  14: 167601.311 ops/s
Iteration  15: 167891.916 ops/s
Iteration  16: 168309.759 ops/s
Iteration  17: 168080.756 ops/s
Iteration  18: 167827.718 ops/s
Iteration  19: 167892.972 ops/s
Iteration  20: 167503.757 ops/s
Iteration  21: 167894.355 ops/s
Iteration  22: 168220.112 ops/s
Iteration  23: 167995.872 ops/s
Iteration  24: 167779.781 ops/s
Iteration  25: 167826.764 ops/s
Iteration  26: 167706.131 ops/s
Iteration  27: 167924.704 ops/s
Iteration  28: 167841.099 ops/s
Iteration  29: 167802.295 ops/s
Iteration  30: 167515.280 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_254._Benchmark.benchmark_Cluster_254":
  167768.582 ±(99.9%) 161.034 ops/s [Average]
  (min, avg, max) = (167114.380, 167768.582, 168309.759), stdev = 241.028
  CI (99.9%): [167607.549, 167929.616] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_254._Benchmark.benchmark_Cluster_254  thrpt   30  167768.582 ± 161.034  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_255._Benchmark.benchmark_Cluster_255$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_255._Benchmark.benchmark_Cluster_255

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75113.229 ops/s
# Warmup Iteration   2: 93558.894 ops/s
# Warmup Iteration   3: 131357.639 ops/s
# Warmup Iteration   4: 162655.691 ops/s
# Warmup Iteration   5: 162532.471 ops/s
# Warmup Iteration   6: 161952.923 ops/s
# Warmup Iteration   7: 162007.084 ops/s
# Warmup Iteration   8: 162515.195 ops/s
# Warmup Iteration   9: 162628.384 ops/s
# Warmup Iteration  10: 163268.338 ops/s
# Warmup Iteration  11: 114251.041 ops/s
# Warmup Iteration  12: 160669.694 ops/s
# Warmup Iteration  13: 162823.864 ops/s
# Warmup Iteration  14: 162944.034 ops/s
# Warmup Iteration  15: 162874.128 ops/s
# Warmup Iteration  16: 162689.710 ops/s
# Warmup Iteration  17: 162768.978 ops/s
# Warmup Iteration  18: 162854.863 ops/s
# Warmup Iteration  19: 162609.886 ops/s
# Warmup Iteration  20: 162867.423 ops/s
# Warmup Iteration  21: 162867.882 ops/s
# Warmup Iteration  22: 162755.845 ops/s
# Warmup Iteration  23: 162546.293 ops/s
# Warmup Iteration  24: 162460.809 ops/s
# Warmup Iteration  25: 162610.090 ops/s
# Warmup Iteration  26: 162614.956 ops/s
# Warmup Iteration  27: 162539.866 ops/s
# Warmup Iteration  28: 162550.301 ops/s
# Warmup Iteration  29: 162277.263 ops/s
# Warmup Iteration  30: 162603.423 ops/s
Iteration   1: 162381.327 ops/s
Iteration   2: 163092.071 ops/s
Iteration   3: 162973.471 ops/s
Iteration   4: 162461.953 ops/s
Iteration   5: 162509.780 ops/s
Iteration   6: 162795.141 ops/s
Iteration   7: 162886.302 ops/s
Iteration   8: 162643.556 ops/s
Iteration   9: 163083.076 ops/s
Iteration  10: 162571.124 ops/s
Iteration  11: 162423.394 ops/s
Iteration  12: 162716.568 ops/s
Iteration  13: 162357.398 ops/s
Iteration  14: 162927.208 ops/s
Iteration  15: 162420.204 ops/s
Iteration  16: 162431.166 ops/s
Iteration  17: 162140.132 ops/s
Iteration  18: 162222.716 ops/s
Iteration  19: 162245.673 ops/s
Iteration  20: 162457.463 ops/s
Iteration  21: 162625.986 ops/s
Iteration  22: 162727.904 ops/s
Iteration  23: 162904.232 ops/s
Iteration  24: 162838.223 ops/s
Iteration  25: 162535.331 ops/s
Iteration  26: 161845.756 ops/s
Iteration  27: 162597.462 ops/s
Iteration  28: 162640.798 ops/s
Iteration  29: 162140.399 ops/s
Iteration  30: 162919.189 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_255._Benchmark.benchmark_Cluster_255":
  162583.833 ±(99.9%) 201.213 ops/s [Average]
  (min, avg, max) = (161845.756, 162583.833, 163092.071), stdev = 301.167
  CI (99.9%): [162382.620, 162785.047] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_255._Benchmark.benchmark_Cluster_255  thrpt   30  162583.833 ± 201.213  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_256._Benchmark.benchmark_Cluster_256$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_256._Benchmark.benchmark_Cluster_256

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64261.242 ops/s
# Warmup Iteration   2: 98788.654 ops/s
# Warmup Iteration   3: 187644.937 ops/s
# Warmup Iteration   4: 200933.270 ops/s
# Warmup Iteration   5: 204213.721 ops/s
# Warmup Iteration   6: 204422.670 ops/s
# Warmup Iteration   7: 204431.758 ops/s
# Warmup Iteration   8: 152643.452 ops/s
# Warmup Iteration   9: 192666.561 ops/s
# Warmup Iteration  10: 203909.911 ops/s
# Warmup Iteration  11: 204419.812 ops/s
# Warmup Iteration  12: 204133.227 ops/s
# Warmup Iteration  13: 204163.820 ops/s
# Warmup Iteration  14: 203806.155 ops/s
# Warmup Iteration  15: 203904.728 ops/s
# Warmup Iteration  16: 204166.195 ops/s
# Warmup Iteration  17: 203969.874 ops/s
# Warmup Iteration  18: 203809.901 ops/s
# Warmup Iteration  19: 203724.813 ops/s
# Warmup Iteration  20: 203639.223 ops/s
# Warmup Iteration  21: 203592.090 ops/s
# Warmup Iteration  22: 203417.083 ops/s
# Warmup Iteration  23: 203140.944 ops/s
# Warmup Iteration  24: 203401.489 ops/s
# Warmup Iteration  25: 203383.848 ops/s
# Warmup Iteration  26: 204407.858 ops/s
# Warmup Iteration  27: 204531.821 ops/s
# Warmup Iteration  28: 203923.469 ops/s
# Warmup Iteration  29: 203846.980 ops/s
# Warmup Iteration  30: 204133.071 ops/s
Iteration   1: 203510.480 ops/s
Iteration   2: 202979.855 ops/s
Iteration   3: 203725.324 ops/s
Iteration   4: 203531.926 ops/s
Iteration   5: 203340.737 ops/s
Iteration   6: 203782.127 ops/s
Iteration   7: 203250.947 ops/s
Iteration   8: 202522.144 ops/s
Iteration   9: 203407.200 ops/s
Iteration  10: 203445.511 ops/s
Iteration  11: 203840.046 ops/s
Iteration  12: 203692.579 ops/s
Iteration  13: 203863.184 ops/s
Iteration  14: 202949.154 ops/s
Iteration  15: 203665.365 ops/s
Iteration  16: 203522.928 ops/s
Iteration  17: 202707.050 ops/s
Iteration  18: 203063.257 ops/s
Iteration  19: 202910.420 ops/s
Iteration  20: 203768.618 ops/s
Iteration  21: 203426.987 ops/s
Iteration  22: 202689.895 ops/s
Iteration  23: 203755.282 ops/s
Iteration  24: 203488.149 ops/s
Iteration  25: 203720.906 ops/s
Iteration  26: 203430.591 ops/s
Iteration  27: 203396.681 ops/s
Iteration  28: 202845.810 ops/s
Iteration  29: 202641.904 ops/s
Iteration  30: 203286.829 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_256._Benchmark.benchmark_Cluster_256":
  203338.730 ±(99.9%) 264.149 ops/s [Average]
  (min, avg, max) = (202522.144, 203338.730, 203863.184), stdev = 395.366
  CI (99.9%): [203074.580, 203602.879] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_256._Benchmark.benchmark_Cluster_256  thrpt   30  203338.730 ± 264.149  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_257._Benchmark.benchmark_Cluster_257$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_257._Benchmark.benchmark_Cluster_257

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47341.743 ops/s
# Warmup Iteration   2: 81445.254 ops/s
# Warmup Iteration   3: 135095.171 ops/s
# Warmup Iteration   4: 164917.903 ops/s
# Warmup Iteration   5: 162952.008 ops/s
# Warmup Iteration   6: 164596.853 ops/s
# Warmup Iteration   7: 165028.971 ops/s
# Warmup Iteration   8: 164131.186 ops/s
# Warmup Iteration   9: 111548.936 ops/s
# Warmup Iteration  10: 165444.323 ops/s
# Warmup Iteration  11: 164877.021 ops/s
# Warmup Iteration  12: 164058.411 ops/s
# Warmup Iteration  13: 164354.882 ops/s
# Warmup Iteration  14: 165306.737 ops/s
# Warmup Iteration  15: 165528.994 ops/s
# Warmup Iteration  16: 165278.712 ops/s
# Warmup Iteration  17: 164772.490 ops/s
# Warmup Iteration  18: 164340.303 ops/s
# Warmup Iteration  19: 165040.861 ops/s
# Warmup Iteration  20: 165502.712 ops/s
# Warmup Iteration  21: 165124.497 ops/s
# Warmup Iteration  22: 164572.475 ops/s
# Warmup Iteration  23: 164943.139 ops/s
# Warmup Iteration  24: 165073.930 ops/s
# Warmup Iteration  25: 165499.599 ops/s
# Warmup Iteration  26: 165461.559 ops/s
# Warmup Iteration  27: 165221.533 ops/s
# Warmup Iteration  28: 165396.637 ops/s
# Warmup Iteration  29: 164843.946 ops/s
# Warmup Iteration  30: 165093.418 ops/s
Iteration   1: 165152.079 ops/s
Iteration   2: 165157.188 ops/s
Iteration   3: 165582.491 ops/s
Iteration   4: 165243.531 ops/s
Iteration   5: 165365.091 ops/s
Iteration   6: 165785.346 ops/s
Iteration   7: 165149.044 ops/s
Iteration   8: 165576.728 ops/s
Iteration   9: 165577.556 ops/s
Iteration  10: 164395.291 ops/s
Iteration  11: 164627.138 ops/s
Iteration  12: 165113.362 ops/s
Iteration  13: 165659.920 ops/s
Iteration  14: 165477.589 ops/s
Iteration  15: 165133.542 ops/s
Iteration  16: 165867.896 ops/s
Iteration  17: 165637.767 ops/s
Iteration  18: 164946.467 ops/s
Iteration  19: 165391.729 ops/s
Iteration  20: 165264.915 ops/s
Iteration  21: 164726.836 ops/s
Iteration  22: 163901.598 ops/s
Iteration  23: 164253.065 ops/s
Iteration  24: 164959.747 ops/s
Iteration  25: 164807.018 ops/s
Iteration  26: 164708.574 ops/s
Iteration  27: 164718.850 ops/s
Iteration  28: 165042.075 ops/s
Iteration  29: 164478.811 ops/s
Iteration  30: 164646.564 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_257._Benchmark.benchmark_Cluster_257":
  165078.260 ±(99.9%) 321.777 ops/s [Average]
  (min, avg, max) = (163901.598, 165078.260, 165867.896), stdev = 481.621
  CI (99.9%): [164756.483, 165400.037] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_257._Benchmark.benchmark_Cluster_257  thrpt   30  165078.260 ± 321.777  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_258._Benchmark.benchmark_Cluster_258$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_258._Benchmark.benchmark_Cluster_258

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68380.959 ops/s
# Warmup Iteration   2: 109027.883 ops/s
# Warmup Iteration   3: 109315.555 ops/s
# Warmup Iteration   4: 110234.808 ops/s
# Warmup Iteration   5: 144737.575 ops/s
# Warmup Iteration   6: 153394.684 ops/s
# Warmup Iteration   7: 152672.250 ops/s
# Warmup Iteration   8: 152059.101 ops/s
# Warmup Iteration   9: 153600.896 ops/s
# Warmup Iteration  10: 151285.073 ops/s
# Warmup Iteration  11: 153192.264 ops/s
# Warmup Iteration  12: 153580.009 ops/s
# Warmup Iteration  13: 153232.163 ops/s
# Warmup Iteration  14: 153719.935 ops/s
# Warmup Iteration  15: 153724.024 ops/s
# Warmup Iteration  16: 153237.892 ops/s
# Warmup Iteration  17: 159946.663 ops/s
# Warmup Iteration  18: 159592.266 ops/s
# Warmup Iteration  19: 160111.636 ops/s
# Warmup Iteration  20: 159615.538 ops/s
# Warmup Iteration  21: 137557.976 ops/s
# Warmup Iteration  22: 126404.461 ops/s
# Warmup Iteration  23: 159111.780 ops/s
# Warmup Iteration  24: 159103.915 ops/s
# Warmup Iteration  25: 159335.337 ops/s
# Warmup Iteration  26: 158472.860 ops/s
# Warmup Iteration  27: 157948.006 ops/s
# Warmup Iteration  28: 158406.360 ops/s
# Warmup Iteration  29: 158862.465 ops/s
# Warmup Iteration  30: 158490.777 ops/s
Iteration   1: 157902.559 ops/s
Iteration   2: 158716.263 ops/s
Iteration   3: 159405.564 ops/s
Iteration   4: 159203.521 ops/s
Iteration   5: 159643.794 ops/s
Iteration   6: 160021.651 ops/s
Iteration   7: 160028.459 ops/s
Iteration   8: 159308.306 ops/s
Iteration   9: 159902.313 ops/s
Iteration  10: 159245.242 ops/s
Iteration  11: 159344.902 ops/s
Iteration  12: 158433.441 ops/s
Iteration  13: 158561.940 ops/s
Iteration  14: 159152.173 ops/s
Iteration  15: 158953.053 ops/s
Iteration  16: 158448.290 ops/s
Iteration  17: 159276.572 ops/s
Iteration  18: 159724.394 ops/s
Iteration  19: 159107.790 ops/s
Iteration  20: 158351.726 ops/s
Iteration  21: 159332.878 ops/s
Iteration  22: 158505.129 ops/s
Iteration  23: 159445.391 ops/s
Iteration  24: 159182.618 ops/s
Iteration  25: 158979.847 ops/s
Iteration  26: 159337.289 ops/s
Iteration  27: 158767.492 ops/s
Iteration  28: 159266.209 ops/s
Iteration  29: 159171.168 ops/s
Iteration  30: 159056.195 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_258._Benchmark.benchmark_Cluster_258":
  159125.872 ±(99.9%) 336.455 ops/s [Average]
  (min, avg, max) = (157902.559, 159125.872, 160028.459), stdev = 503.590
  CI (99.9%): [158789.417, 159462.327] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_258._Benchmark.benchmark_Cluster_258  thrpt   30  159125.872 ± 336.455  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_259._Benchmark.benchmark_Cluster_259$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_259._Benchmark.benchmark_Cluster_259

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83327.284 ops/s
# Warmup Iteration   2: 111705.506 ops/s
# Warmup Iteration   3: 113895.158 ops/s
# Warmup Iteration   4: 178397.866 ops/s
# Warmup Iteration   5: 178591.704 ops/s
# Warmup Iteration   6: 178968.199 ops/s
# Warmup Iteration   7: 177268.082 ops/s
# Warmup Iteration   8: 177910.704 ops/s
# Warmup Iteration   9: 178797.022 ops/s
# Warmup Iteration  10: 178587.204 ops/s
# Warmup Iteration  11: 178735.024 ops/s
# Warmup Iteration  12: 178470.845 ops/s
# Warmup Iteration  13: 162923.130 ops/s
# Warmup Iteration  14: 136567.438 ops/s
# Warmup Iteration  15: 178010.983 ops/s
# Warmup Iteration  16: 178371.990 ops/s
# Warmup Iteration  17: 183717.647 ops/s
# Warmup Iteration  18: 183106.908 ops/s
# Warmup Iteration  19: 184226.519 ops/s
# Warmup Iteration  20: 183414.774 ops/s
# Warmup Iteration  21: 182415.406 ops/s
# Warmup Iteration  22: 182995.728 ops/s
# Warmup Iteration  23: 183119.362 ops/s
# Warmup Iteration  24: 183067.148 ops/s
# Warmup Iteration  25: 182726.483 ops/s
# Warmup Iteration  26: 182846.486 ops/s
# Warmup Iteration  27: 182499.422 ops/s
# Warmup Iteration  28: 182870.200 ops/s
# Warmup Iteration  29: 182932.657 ops/s
# Warmup Iteration  30: 183842.802 ops/s
Iteration   1: 184020.520 ops/s
Iteration   2: 183725.178 ops/s
Iteration   3: 183730.345 ops/s
Iteration   4: 183468.350 ops/s
Iteration   5: 182847.343 ops/s
Iteration   6: 183312.898 ops/s
Iteration   7: 183821.971 ops/s
Iteration   8: 184148.914 ops/s
Iteration   9: 183901.299 ops/s
Iteration  10: 183445.296 ops/s
Iteration  11: 182762.472 ops/s
Iteration  12: 183077.214 ops/s
Iteration  13: 183469.821 ops/s
Iteration  14: 182464.349 ops/s
Iteration  15: 183805.835 ops/s
Iteration  16: 183263.999 ops/s
Iteration  17: 183142.267 ops/s
Iteration  18: 183202.664 ops/s
Iteration  19: 183671.676 ops/s
Iteration  20: 182230.813 ops/s
Iteration  21: 181909.178 ops/s
Iteration  22: 182847.606 ops/s
Iteration  23: 182764.278 ops/s
Iteration  24: 182791.425 ops/s
Iteration  25: 183344.213 ops/s
Iteration  26: 182961.756 ops/s
Iteration  27: 183066.309 ops/s
Iteration  28: 182924.951 ops/s
Iteration  29: 182218.345 ops/s
Iteration  30: 183218.668 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_259._Benchmark.benchmark_Cluster_259":
  183185.332 ±(99.9%) 370.358 ops/s [Average]
  (min, avg, max) = (181909.178, 183185.332, 184148.914), stdev = 554.334
  CI (99.9%): [182814.974, 183555.690] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_259._Benchmark.benchmark_Cluster_259  thrpt   30  183185.332 ± 370.358  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_26._Benchmark.benchmark_Cluster_26$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_26._Benchmark.benchmark_Cluster_26

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77501.910 ops/s
# Warmup Iteration   2: 103713.150 ops/s
# Warmup Iteration   3: 128934.045 ops/s
# Warmup Iteration   4: 172541.030 ops/s
# Warmup Iteration   5: 172655.881 ops/s
# Warmup Iteration   6: 170618.769 ops/s
# Warmup Iteration   7: 173003.498 ops/s
# Warmup Iteration   8: 173179.169 ops/s
# Warmup Iteration   9: 172303.567 ops/s
# Warmup Iteration  10: 172780.090 ops/s
# Warmup Iteration  11: 172897.701 ops/s
# Warmup Iteration  12: 119965.265 ops/s
# Warmup Iteration  13: 171022.760 ops/s
# Warmup Iteration  14: 173122.849 ops/s
# Warmup Iteration  15: 173446.416 ops/s
# Warmup Iteration  16: 173156.623 ops/s
# Warmup Iteration  17: 173037.759 ops/s
# Warmup Iteration  18: 172860.266 ops/s
# Warmup Iteration  19: 172950.470 ops/s
# Warmup Iteration  20: 172726.214 ops/s
# Warmup Iteration  21: 172348.470 ops/s
# Warmup Iteration  22: 172712.867 ops/s
# Warmup Iteration  23: 173580.722 ops/s
# Warmup Iteration  24: 173202.130 ops/s
# Warmup Iteration  25: 172791.395 ops/s
# Warmup Iteration  26: 172735.812 ops/s
# Warmup Iteration  27: 173355.606 ops/s
# Warmup Iteration  28: 172909.198 ops/s
# Warmup Iteration  29: 173328.968 ops/s
# Warmup Iteration  30: 172605.658 ops/s
Iteration   1: 173117.724 ops/s
Iteration   2: 173651.564 ops/s
Iteration   3: 172987.720 ops/s
Iteration   4: 173619.763 ops/s
Iteration   5: 173508.461 ops/s
Iteration   6: 173932.724 ops/s
Iteration   7: 172949.655 ops/s
Iteration   8: 172894.089 ops/s
Iteration   9: 172799.794 ops/s
Iteration  10: 173014.421 ops/s
Iteration  11: 171860.238 ops/s
Iteration  12: 172709.395 ops/s
Iteration  13: 173031.294 ops/s
Iteration  14: 173372.399 ops/s
Iteration  15: 173659.894 ops/s
Iteration  16: 173785.364 ops/s
Iteration  17: 173558.664 ops/s
Iteration  18: 173730.154 ops/s
Iteration  19: 173651.624 ops/s
Iteration  20: 173430.930 ops/s
Iteration  21: 173647.942 ops/s
Iteration  22: 173352.555 ops/s
Iteration  23: 174181.888 ops/s
Iteration  24: 173969.642 ops/s
Iteration  25: 173378.881 ops/s
Iteration  26: 173110.170 ops/s
Iteration  27: 173425.133 ops/s
Iteration  28: 173930.766 ops/s
Iteration  29: 173704.093 ops/s
Iteration  30: 173052.639 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_26._Benchmark.benchmark_Cluster_26":
  173367.319 ±(99.9%) 318.027 ops/s [Average]
  (min, avg, max) = (171860.238, 173367.319, 174181.888), stdev = 476.008
  CI (99.9%): [173049.292, 173685.346] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_26._Benchmark.benchmark_Cluster_26  thrpt   30  173367.319 ± 318.027  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_260._Benchmark.benchmark_Cluster_260$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_260._Benchmark.benchmark_Cluster_260

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67089.604 ops/s
# Warmup Iteration   2: 87508.641 ops/s
# Warmup Iteration   3: 95037.020 ops/s
# Warmup Iteration   4: 142982.577 ops/s
# Warmup Iteration   5: 142539.155 ops/s
# Warmup Iteration   6: 143555.503 ops/s
# Warmup Iteration   7: 141848.360 ops/s
# Warmup Iteration   8: 142432.101 ops/s
# Warmup Iteration   9: 142070.838 ops/s
# Warmup Iteration  10: 142415.799 ops/s
# Warmup Iteration  11: 142807.716 ops/s
# Warmup Iteration  12: 143210.906 ops/s
# Warmup Iteration  13: 127130.027 ops/s
# Warmup Iteration  14: 111357.923 ops/s
# Warmup Iteration  15: 142428.098 ops/s
# Warmup Iteration  16: 142901.352 ops/s
# Warmup Iteration  17: 145505.687 ops/s
# Warmup Iteration  18: 145394.184 ops/s
# Warmup Iteration  19: 145999.090 ops/s
# Warmup Iteration  20: 145733.312 ops/s
# Warmup Iteration  21: 145542.373 ops/s
# Warmup Iteration  22: 146052.329 ops/s
# Warmup Iteration  23: 145986.887 ops/s
# Warmup Iteration  24: 145961.414 ops/s
# Warmup Iteration  25: 145725.633 ops/s
# Warmup Iteration  26: 146185.507 ops/s
# Warmup Iteration  27: 146176.953 ops/s
# Warmup Iteration  28: 145804.381 ops/s
# Warmup Iteration  29: 145330.326 ops/s
# Warmup Iteration  30: 145787.934 ops/s
Iteration   1: 145721.764 ops/s
Iteration   2: 145730.813 ops/s
Iteration   3: 146153.765 ops/s
Iteration   4: 145923.220 ops/s
Iteration   5: 145246.411 ops/s
Iteration   6: 145898.987 ops/s
Iteration   7: 145354.018 ops/s
Iteration   8: 145693.913 ops/s
Iteration   9: 145577.839 ops/s
Iteration  10: 145422.576 ops/s
Iteration  11: 145262.336 ops/s
Iteration  12: 145555.673 ops/s
Iteration  13: 145551.774 ops/s
Iteration  14: 146057.819 ops/s
Iteration  15: 144851.346 ops/s
Iteration  16: 145681.477 ops/s
Iteration  17: 146180.567 ops/s
Iteration  18: 146198.112 ops/s
Iteration  19: 145441.116 ops/s
Iteration  20: 145040.571 ops/s
Iteration  21: 145664.442 ops/s
Iteration  22: 145766.746 ops/s
Iteration  23: 146148.596 ops/s
Iteration  24: 144910.762 ops/s
Iteration  25: 144957.560 ops/s
Iteration  26: 145869.775 ops/s
Iteration  27: 144844.212 ops/s
Iteration  28: 145282.718 ops/s
Iteration  29: 145391.349 ops/s
Iteration  30: 145441.289 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_260._Benchmark.benchmark_Cluster_260":
  145560.718 ±(99.9%) 268.240 ops/s [Average]
  (min, avg, max) = (144844.212, 145560.718, 146198.112), stdev = 401.489
  CI (99.9%): [145292.479, 145828.958] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_260._Benchmark.benchmark_Cluster_260  thrpt   30  145560.718 ± 268.240  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_261._Benchmark.benchmark_Cluster_261$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_261._Benchmark.benchmark_Cluster_261

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96280.172 ops/s
# Warmup Iteration   2: 114608.195 ops/s
# Warmup Iteration   3: 216548.696 ops/s
# Warmup Iteration   4: 225548.446 ops/s
# Warmup Iteration   5: 225199.716 ops/s
# Warmup Iteration   6: 224334.188 ops/s
# Warmup Iteration   7: 225725.768 ops/s
# Warmup Iteration   8: 221461.560 ops/s
# Warmup Iteration   9: 158865.215 ops/s
# Warmup Iteration  10: 226308.908 ops/s
# Warmup Iteration  11: 226487.721 ops/s
# Warmup Iteration  12: 225982.781 ops/s
# Warmup Iteration  13: 225676.790 ops/s
# Warmup Iteration  14: 226192.091 ops/s
# Warmup Iteration  15: 226350.850 ops/s
# Warmup Iteration  16: 226022.596 ops/s
# Warmup Iteration  17: 225587.182 ops/s
# Warmup Iteration  18: 225187.477 ops/s
# Warmup Iteration  19: 226092.043 ops/s
# Warmup Iteration  20: 225693.045 ops/s
# Warmup Iteration  21: 226231.057 ops/s
# Warmup Iteration  22: 226021.077 ops/s
# Warmup Iteration  23: 225962.010 ops/s
# Warmup Iteration  24: 224641.480 ops/s
# Warmup Iteration  25: 224499.933 ops/s
# Warmup Iteration  26: 225514.527 ops/s
# Warmup Iteration  27: 224634.914 ops/s
# Warmup Iteration  28: 226055.281 ops/s
# Warmup Iteration  29: 225419.490 ops/s
# Warmup Iteration  30: 226132.989 ops/s
Iteration   1: 226253.924 ops/s
Iteration   2: 226312.460 ops/s
Iteration   3: 225684.206 ops/s
Iteration   4: 226484.895 ops/s
Iteration   5: 225148.761 ops/s
Iteration   6: 224754.922 ops/s
Iteration   7: 226199.717 ops/s
Iteration   8: 225134.741 ops/s
Iteration   9: 225801.874 ops/s
Iteration  10: 224991.326 ops/s
Iteration  11: 225607.480 ops/s
Iteration  12: 225831.681 ops/s
Iteration  13: 225672.799 ops/s
Iteration  14: 224887.740 ops/s
Iteration  15: 225011.001 ops/s
Iteration  16: 224655.052 ops/s
Iteration  17: 225438.792 ops/s
Iteration  18: 225613.771 ops/s
Iteration  19: 225079.136 ops/s
Iteration  20: 225273.509 ops/s
Iteration  21: 225251.935 ops/s
Iteration  22: 226448.777 ops/s
Iteration  23: 225495.226 ops/s
Iteration  24: 225274.609 ops/s
Iteration  25: 224798.128 ops/s
Iteration  26: 224592.602 ops/s
Iteration  27: 224776.958 ops/s
Iteration  28: 225849.461 ops/s
Iteration  29: 225751.801 ops/s
Iteration  30: 224886.376 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_261._Benchmark.benchmark_Cluster_261":
  225432.122 ±(99.9%) 369.779 ops/s [Average]
  (min, avg, max) = (224592.602, 225432.122, 226484.895), stdev = 553.468
  CI (99.9%): [225062.343, 225801.901] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_261._Benchmark.benchmark_Cluster_261  thrpt   30  225432.122 ± 369.779  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_262._Benchmark.benchmark_Cluster_262$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_262._Benchmark.benchmark_Cluster_262

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69032.236 ops/s
# Warmup Iteration   2: 85925.596 ops/s
# Warmup Iteration   3: 142879.431 ops/s
# Warmup Iteration   4: 162523.452 ops/s
# Warmup Iteration   5: 161421.706 ops/s
# Warmup Iteration   6: 162180.079 ops/s
# Warmup Iteration   7: 162787.384 ops/s
# Warmup Iteration   8: 162954.046 ops/s
# Warmup Iteration   9: 148591.047 ops/s
# Warmup Iteration  10: 125432.963 ops/s
# Warmup Iteration  11: 163068.431 ops/s
# Warmup Iteration  12: 162658.102 ops/s
# Warmup Iteration  13: 162822.292 ops/s
# Warmup Iteration  14: 162295.437 ops/s
# Warmup Iteration  15: 163174.546 ops/s
# Warmup Iteration  16: 163452.618 ops/s
# Warmup Iteration  17: 163022.478 ops/s
# Warmup Iteration  18: 162753.126 ops/s
# Warmup Iteration  19: 163061.238 ops/s
# Warmup Iteration  20: 162835.375 ops/s
# Warmup Iteration  21: 162968.184 ops/s
# Warmup Iteration  22: 162829.907 ops/s
# Warmup Iteration  23: 163334.003 ops/s
# Warmup Iteration  24: 163664.523 ops/s
# Warmup Iteration  25: 163343.465 ops/s
# Warmup Iteration  26: 163297.436 ops/s
# Warmup Iteration  27: 163085.847 ops/s
# Warmup Iteration  28: 163244.999 ops/s
# Warmup Iteration  29: 163110.908 ops/s
# Warmup Iteration  30: 162766.667 ops/s
Iteration   1: 162826.368 ops/s
Iteration   2: 163235.283 ops/s
Iteration   3: 162757.956 ops/s
Iteration   4: 162746.890 ops/s
Iteration   5: 162238.289 ops/s
Iteration   6: 162432.488 ops/s
Iteration   7: 162893.275 ops/s
Iteration   8: 163168.568 ops/s
Iteration   9: 162880.003 ops/s
Iteration  10: 163328.536 ops/s
Iteration  11: 163524.403 ops/s
Iteration  12: 162765.813 ops/s
Iteration  13: 162838.843 ops/s
Iteration  14: 163034.251 ops/s
Iteration  15: 162653.837 ops/s
Iteration  16: 163332.594 ops/s
Iteration  17: 163061.362 ops/s
Iteration  18: 163118.874 ops/s
Iteration  19: 163020.107 ops/s
Iteration  20: 163193.048 ops/s
Iteration  21: 162931.766 ops/s
Iteration  22: 162754.779 ops/s
Iteration  23: 162952.733 ops/s
Iteration  24: 162970.343 ops/s
Iteration  25: 162772.453 ops/s
Iteration  26: 162936.241 ops/s
Iteration  27: 162843.315 ops/s
Iteration  28: 163188.577 ops/s
Iteration  29: 163279.410 ops/s
Iteration  30: 163426.813 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_262._Benchmark.benchmark_Cluster_262":
  162970.241 ±(99.9%) 189.504 ops/s [Average]
  (min, avg, max) = (162238.289, 162970.241, 163524.403), stdev = 283.640
  CI (99.9%): [162780.737, 163159.744] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_262._Benchmark.benchmark_Cluster_262  thrpt   30  162970.241 ± 189.504  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_263._Benchmark.benchmark_Cluster_263$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_263._Benchmark.benchmark_Cluster_263

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 41828.319 ops/s
# Warmup Iteration   2: 75056.399 ops/s
# Warmup Iteration   3: 108849.762 ops/s
# Warmup Iteration   4: 144136.465 ops/s
# Warmup Iteration   5: 142412.224 ops/s
# Warmup Iteration   6: 144159.839 ops/s
# Warmup Iteration   7: 144473.969 ops/s
# Warmup Iteration   8: 143771.663 ops/s
# Warmup Iteration   9: 142480.336 ops/s
# Warmup Iteration  10: 96560.089 ops/s
# Warmup Iteration  11: 143310.917 ops/s
# Warmup Iteration  12: 142887.841 ops/s
# Warmup Iteration  13: 141198.115 ops/s
# Warmup Iteration  14: 143576.890 ops/s
# Warmup Iteration  15: 142531.790 ops/s
# Warmup Iteration  16: 143227.771 ops/s
# Warmup Iteration  17: 144956.310 ops/s
# Warmup Iteration  18: 145104.278 ops/s
# Warmup Iteration  19: 144071.655 ops/s
# Warmup Iteration  20: 145072.429 ops/s
# Warmup Iteration  21: 145191.617 ops/s
# Warmup Iteration  22: 143581.264 ops/s
# Warmup Iteration  23: 144204.906 ops/s
# Warmup Iteration  24: 144907.660 ops/s
# Warmup Iteration  25: 144123.789 ops/s
# Warmup Iteration  26: 144305.587 ops/s
# Warmup Iteration  27: 144095.579 ops/s
# Warmup Iteration  28: 142564.829 ops/s
# Warmup Iteration  29: 142883.195 ops/s
# Warmup Iteration  30: 145328.104 ops/s
Iteration   1: 144976.041 ops/s
Iteration   2: 145333.593 ops/s
Iteration   3: 144714.597 ops/s
Iteration   4: 145157.017 ops/s
Iteration   5: 143923.366 ops/s
Iteration   6: 144396.213 ops/s
Iteration   7: 144522.108 ops/s
Iteration   8: 145251.482 ops/s
Iteration   9: 145004.646 ops/s
Iteration  10: 144742.334 ops/s
Iteration  11: 142657.697 ops/s
Iteration  12: 143884.490 ops/s
Iteration  13: 144678.516 ops/s
Iteration  14: 144911.608 ops/s
Iteration  15: 142893.109 ops/s
Iteration  16: 145030.085 ops/s
Iteration  17: 142864.104 ops/s
Iteration  18: 144005.990 ops/s
Iteration  19: 144582.209 ops/s
Iteration  20: 145123.763 ops/s
Iteration  21: 145014.595 ops/s
Iteration  22: 144457.328 ops/s
Iteration  23: 144479.679 ops/s
Iteration  24: 144030.675 ops/s
Iteration  25: 144914.800 ops/s
Iteration  26: 144868.839 ops/s
Iteration  27: 145335.097 ops/s
Iteration  28: 145495.240 ops/s
Iteration  29: 145355.817 ops/s
Iteration  30: 144286.553 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_263._Benchmark.benchmark_Cluster_263":
  144563.053 ±(99.9%) 494.965 ops/s [Average]
  (min, avg, max) = (142657.697, 144563.053, 145495.240), stdev = 740.840
  CI (99.9%): [144068.088, 145058.018] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_263._Benchmark.benchmark_Cluster_263  thrpt   30  144563.053 ± 494.965  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_264._Benchmark.benchmark_Cluster_264$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_264._Benchmark.benchmark_Cluster_264

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 82784.919 ops/s
# Warmup Iteration   2: 90482.687 ops/s
# Warmup Iteration   3: 90778.628 ops/s
# Warmup Iteration   4: 104402.623 ops/s
# Warmup Iteration   5: 125645.156 ops/s
# Warmup Iteration   6: 125195.955 ops/s
# Warmup Iteration   7: 124873.047 ops/s
# Warmup Iteration   8: 124605.187 ops/s
# Warmup Iteration   9: 124036.617 ops/s
# Warmup Iteration  10: 124987.135 ops/s
# Warmup Iteration  11: 125684.284 ops/s
# Warmup Iteration  12: 125384.254 ops/s
# Warmup Iteration  13: 125490.650 ops/s
# Warmup Iteration  14: 125649.568 ops/s
# Warmup Iteration  15: 125202.504 ops/s
# Warmup Iteration  16: 125389.213 ops/s
# Warmup Iteration  17: 130841.153 ops/s
# Warmup Iteration  18: 130553.696 ops/s
# Warmup Iteration  19: 128022.131 ops/s
# Warmup Iteration  20: 94288.598 ops/s
# Warmup Iteration  21: 127608.380 ops/s
# Warmup Iteration  22: 130956.962 ops/s
# Warmup Iteration  23: 130288.671 ops/s
# Warmup Iteration  24: 130155.701 ops/s
# Warmup Iteration  25: 130246.947 ops/s
# Warmup Iteration  26: 130701.345 ops/s
# Warmup Iteration  27: 130363.798 ops/s
# Warmup Iteration  28: 130553.555 ops/s
# Warmup Iteration  29: 130831.642 ops/s
# Warmup Iteration  30: 130768.875 ops/s
Iteration   1: 130357.530 ops/s
Iteration   2: 130651.690 ops/s
Iteration   3: 130207.564 ops/s
Iteration   4: 130623.839 ops/s
Iteration   5: 130838.214 ops/s
Iteration   6: 131088.767 ops/s
Iteration   7: 130633.170 ops/s
Iteration   8: 130831.699 ops/s
Iteration   9: 130955.514 ops/s
Iteration  10: 130173.471 ops/s
Iteration  11: 129685.810 ops/s
Iteration  12: 130004.368 ops/s
Iteration  13: 130824.678 ops/s
Iteration  14: 131164.760 ops/s
Iteration  15: 131016.039 ops/s
Iteration  16: 131035.563 ops/s
Iteration  17: 130474.474 ops/s
Iteration  18: 130717.958 ops/s
Iteration  19: 130679.796 ops/s
Iteration  20: 129993.446 ops/s
Iteration  21: 130215.831 ops/s
Iteration  22: 130218.937 ops/s
Iteration  23: 131145.554 ops/s
Iteration  24: 130138.477 ops/s
Iteration  25: 130844.607 ops/s
Iteration  26: 130585.340 ops/s
Iteration  27: 130560.640 ops/s
Iteration  28: 130993.670 ops/s
Iteration  29: 131112.386 ops/s
Iteration  30: 131214.471 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_264._Benchmark.benchmark_Cluster_264":
  130632.942 ±(99.9%) 272.635 ops/s [Average]
  (min, avg, max) = (129685.810, 130632.942, 131214.471), stdev = 408.067
  CI (99.9%): [130360.307, 130905.577] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_264._Benchmark.benchmark_Cluster_264  thrpt   30  130632.942 ± 272.635  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_265._Benchmark.benchmark_Cluster_265$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_265._Benchmark.benchmark_Cluster_265

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78113.353 ops/s
# Warmup Iteration   2: 87409.175 ops/s
# Warmup Iteration   3: 88643.581 ops/s
# Warmup Iteration   4: 112540.657 ops/s
# Warmup Iteration   5: 125535.776 ops/s
# Warmup Iteration   6: 124361.148 ops/s
# Warmup Iteration   7: 124741.626 ops/s
# Warmup Iteration   8: 124553.390 ops/s
# Warmup Iteration   9: 125089.162 ops/s
# Warmup Iteration  10: 125538.280 ops/s
# Warmup Iteration  11: 124990.767 ops/s
# Warmup Iteration  12: 125016.356 ops/s
# Warmup Iteration  13: 125010.678 ops/s
# Warmup Iteration  14: 125195.530 ops/s
# Warmup Iteration  15: 125054.328 ops/s
# Warmup Iteration  16: 125453.119 ops/s
# Warmup Iteration  17: 130724.153 ops/s
# Warmup Iteration  18: 92639.630 ops/s
# Warmup Iteration  19: 131486.339 ops/s
# Warmup Iteration  20: 131703.647 ops/s
# Warmup Iteration  21: 131608.791 ops/s
# Warmup Iteration  22: 131637.308 ops/s
# Warmup Iteration  23: 131259.519 ops/s
# Warmup Iteration  24: 131528.755 ops/s
# Warmup Iteration  25: 131631.588 ops/s
# Warmup Iteration  26: 131637.525 ops/s
# Warmup Iteration  27: 131733.850 ops/s
# Warmup Iteration  28: 132122.118 ops/s
# Warmup Iteration  29: 131914.786 ops/s
# Warmup Iteration  30: 131922.754 ops/s
Iteration   1: 131440.384 ops/s
Iteration   2: 131850.167 ops/s
Iteration   3: 132104.874 ops/s
Iteration   4: 131173.495 ops/s
Iteration   5: 131362.480 ops/s
Iteration   6: 131617.269 ops/s
Iteration   7: 131106.744 ops/s
Iteration   8: 131973.107 ops/s
Iteration   9: 132135.723 ops/s
Iteration  10: 131323.960 ops/s
Iteration  11: 131230.881 ops/s
Iteration  12: 131578.630 ops/s
Iteration  13: 131589.544 ops/s
Iteration  14: 131448.644 ops/s
Iteration  15: 131726.312 ops/s
Iteration  16: 132410.728 ops/s
Iteration  17: 131689.458 ops/s
Iteration  18: 130437.487 ops/s
Iteration  19: 131448.386 ops/s
Iteration  20: 132064.705 ops/s
Iteration  21: 131437.020 ops/s
Iteration  22: 131102.704 ops/s
Iteration  23: 130252.186 ops/s
Iteration  24: 131251.709 ops/s
Iteration  25: 131294.090 ops/s
Iteration  26: 131881.336 ops/s
Iteration  27: 131221.490 ops/s
Iteration  28: 131289.190 ops/s
Iteration  29: 131463.547 ops/s
Iteration  30: 132148.324 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_265._Benchmark.benchmark_Cluster_265":
  131501.819 ±(99.9%) 314.184 ops/s [Average]
  (min, avg, max) = (130252.186, 131501.819, 132410.728), stdev = 470.256
  CI (99.9%): [131187.635, 131816.004] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_265._Benchmark.benchmark_Cluster_265  thrpt   30  131501.819 ± 314.184  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_266._Benchmark.benchmark_Cluster_266$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_266._Benchmark.benchmark_Cluster_266

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79861.998 ops/s
# Warmup Iteration   2: 92245.156 ops/s
# Warmup Iteration   3: 93655.956 ops/s
# Warmup Iteration   4: 116731.545 ops/s
# Warmup Iteration   5: 131785.052 ops/s
# Warmup Iteration   6: 131359.739 ops/s
# Warmup Iteration   7: 131765.939 ops/s
# Warmup Iteration   8: 130504.800 ops/s
# Warmup Iteration   9: 131237.280 ops/s
# Warmup Iteration  10: 131242.676 ops/s
# Warmup Iteration  11: 131726.341 ops/s
# Warmup Iteration  12: 131613.665 ops/s
# Warmup Iteration  13: 132319.752 ops/s
# Warmup Iteration  14: 132656.936 ops/s
# Warmup Iteration  15: 131910.873 ops/s
# Warmup Iteration  16: 132348.613 ops/s
# Warmup Iteration  17: 137673.378 ops/s
# Warmup Iteration  18: 105588.276 ops/s
# Warmup Iteration  19: 127353.394 ops/s
# Warmup Iteration  20: 137808.965 ops/s
# Warmup Iteration  21: 137391.598 ops/s
# Warmup Iteration  22: 137391.982 ops/s
# Warmup Iteration  23: 137178.729 ops/s
# Warmup Iteration  24: 137335.491 ops/s
# Warmup Iteration  25: 137151.143 ops/s
# Warmup Iteration  26: 137780.110 ops/s
# Warmup Iteration  27: 137108.737 ops/s
# Warmup Iteration  28: 136849.118 ops/s
# Warmup Iteration  29: 136616.750 ops/s
# Warmup Iteration  30: 136622.769 ops/s
Iteration   1: 136675.733 ops/s
Iteration   2: 136513.344 ops/s
Iteration   3: 137035.765 ops/s
Iteration   4: 136482.899 ops/s
Iteration   5: 137439.269 ops/s
Iteration   6: 137028.817 ops/s
Iteration   7: 136497.312 ops/s
Iteration   8: 137447.621 ops/s
Iteration   9: 137548.033 ops/s
Iteration  10: 137181.941 ops/s
Iteration  11: 137424.079 ops/s
Iteration  12: 136839.320 ops/s
Iteration  13: 137070.951 ops/s
Iteration  14: 137560.860 ops/s
Iteration  15: 137204.185 ops/s
Iteration  16: 137063.184 ops/s
Iteration  17: 136981.490 ops/s
Iteration  18: 137122.876 ops/s
Iteration  19: 136338.195 ops/s
Iteration  20: 137035.065 ops/s
Iteration  21: 136770.181 ops/s
Iteration  22: 136145.683 ops/s
Iteration  23: 137002.356 ops/s
Iteration  24: 137407.062 ops/s
Iteration  25: 137530.287 ops/s
Iteration  26: 137953.998 ops/s
Iteration  27: 137589.602 ops/s
Iteration  28: 137066.827 ops/s
Iteration  29: 137766.051 ops/s
Iteration  30: 137660.016 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_266._Benchmark.benchmark_Cluster_266":
  137112.767 ±(99.9%) 297.480 ops/s [Average]
  (min, avg, max) = (136145.683, 137112.767, 137953.998), stdev = 445.255
  CI (99.9%): [136815.286, 137410.247] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_266._Benchmark.benchmark_Cluster_266  thrpt   30  137112.767 ± 297.480  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_267._Benchmark.benchmark_Cluster_267$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_267._Benchmark.benchmark_Cluster_267

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 82254.306 ops/s
# Warmup Iteration   2: 94954.126 ops/s
# Warmup Iteration   3: 94844.789 ops/s
# Warmup Iteration   4: 97676.352 ops/s
# Warmup Iteration   5: 135502.261 ops/s
# Warmup Iteration   6: 136349.869 ops/s
# Warmup Iteration   7: 134619.121 ops/s
# Warmup Iteration   8: 136839.753 ops/s
# Warmup Iteration   9: 136697.314 ops/s
# Warmup Iteration  10: 134961.751 ops/s
# Warmup Iteration  11: 136526.332 ops/s
# Warmup Iteration  12: 136658.519 ops/s
# Warmup Iteration  13: 137355.902 ops/s
# Warmup Iteration  14: 137563.788 ops/s
# Warmup Iteration  15: 136486.702 ops/s
# Warmup Iteration  16: 136488.954 ops/s
# Warmup Iteration  17: 141599.581 ops/s
# Warmup Iteration  18: 141390.486 ops/s
# Warmup Iteration  19: 141111.260 ops/s
# Warmup Iteration  20: 141145.741 ops/s
# Warmup Iteration  21: 100525.341 ops/s
# Warmup Iteration  22: 128071.853 ops/s
# Warmup Iteration  23: 141742.948 ops/s
# Warmup Iteration  24: 141035.225 ops/s
# Warmup Iteration  25: 141301.456 ops/s
# Warmup Iteration  26: 141421.073 ops/s
# Warmup Iteration  27: 141696.711 ops/s
# Warmup Iteration  28: 140647.003 ops/s
# Warmup Iteration  29: 141169.871 ops/s
# Warmup Iteration  30: 140988.989 ops/s
Iteration   1: 141282.545 ops/s
Iteration   2: 140406.521 ops/s
Iteration   3: 140964.468 ops/s
Iteration   4: 140727.085 ops/s
Iteration   5: 140445.482 ops/s
Iteration   6: 141295.023 ops/s
Iteration   7: 141452.055 ops/s
Iteration   8: 140792.487 ops/s
Iteration   9: 141109.872 ops/s
Iteration  10: 140980.798 ops/s
Iteration  11: 139788.903 ops/s
Iteration  12: 141397.382 ops/s
Iteration  13: 141210.114 ops/s
Iteration  14: 140559.666 ops/s
Iteration  15: 141347.385 ops/s
Iteration  16: 141045.483 ops/s
Iteration  17: 141520.378 ops/s
Iteration  18: 141614.259 ops/s
Iteration  19: 141077.658 ops/s
Iteration  20: 140959.955 ops/s
Iteration  21: 141400.772 ops/s
Iteration  22: 140627.058 ops/s
Iteration  23: 141069.151 ops/s
Iteration  24: 140917.187 ops/s
Iteration  25: 141292.559 ops/s
Iteration  26: 141476.859 ops/s
Iteration  27: 141689.586 ops/s
Iteration  28: 141183.833 ops/s
Iteration  29: 140751.922 ops/s
Iteration  30: 140840.977 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_267._Benchmark.benchmark_Cluster_267":
  141040.914 ±(99.9%) 276.687 ops/s [Average]
  (min, avg, max) = (139788.903, 141040.914, 141689.586), stdev = 414.131
  CI (99.9%): [140764.227, 141317.601] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_267._Benchmark.benchmark_Cluster_267  thrpt   30  141040.914 ± 276.687  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_268._Benchmark.benchmark_Cluster_268$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_268._Benchmark.benchmark_Cluster_268

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75525.793 ops/s
# Warmup Iteration   2: 85193.311 ops/s
# Warmup Iteration   3: 86147.636 ops/s
# Warmup Iteration   4: 96128.370 ops/s
# Warmup Iteration   5: 123793.717 ops/s
# Warmup Iteration   6: 123019.631 ops/s
# Warmup Iteration   7: 123564.290 ops/s
# Warmup Iteration   8: 123633.082 ops/s
# Warmup Iteration   9: 122499.906 ops/s
# Warmup Iteration  10: 123459.293 ops/s
# Warmup Iteration  11: 123566.541 ops/s
# Warmup Iteration  12: 124060.322 ops/s
# Warmup Iteration  13: 124083.312 ops/s
# Warmup Iteration  14: 123646.613 ops/s
# Warmup Iteration  15: 123762.221 ops/s
# Warmup Iteration  16: 124065.415 ops/s
# Warmup Iteration  17: 129591.302 ops/s
# Warmup Iteration  18: 129633.600 ops/s
# Warmup Iteration  19: 116461.816 ops/s
# Warmup Iteration  20: 96298.738 ops/s
# Warmup Iteration  21: 129565.173 ops/s
# Warmup Iteration  22: 129418.260 ops/s
# Warmup Iteration  23: 129821.600 ops/s
# Warmup Iteration  24: 129035.326 ops/s
# Warmup Iteration  25: 129418.658 ops/s
# Warmup Iteration  26: 129778.819 ops/s
# Warmup Iteration  27: 129333.938 ops/s
# Warmup Iteration  28: 129395.002 ops/s
# Warmup Iteration  29: 129135.198 ops/s
# Warmup Iteration  30: 129375.353 ops/s
Iteration   1: 129200.650 ops/s
Iteration   2: 129315.906 ops/s
Iteration   3: 129282.662 ops/s
Iteration   4: 128879.415 ops/s
Iteration   5: 129967.847 ops/s
Iteration   6: 129271.018 ops/s
Iteration   7: 128877.703 ops/s
Iteration   8: 128175.218 ops/s
Iteration   9: 128634.741 ops/s
Iteration  10: 129032.651 ops/s
Iteration  11: 129310.093 ops/s
Iteration  12: 129570.423 ops/s
Iteration  13: 129638.433 ops/s
Iteration  14: 128426.432 ops/s
Iteration  15: 129535.976 ops/s
Iteration  16: 129648.458 ops/s
Iteration  17: 129568.588 ops/s
Iteration  18: 129254.994 ops/s
Iteration  19: 129000.749 ops/s
Iteration  20: 129353.435 ops/s
Iteration  21: 129976.346 ops/s
Iteration  22: 129856.477 ops/s
Iteration  23: 130186.351 ops/s
Iteration  24: 129798.682 ops/s
Iteration  25: 129359.885 ops/s
Iteration  26: 129216.913 ops/s
Iteration  27: 129730.618 ops/s
Iteration  28: 129890.215 ops/s
Iteration  29: 129072.111 ops/s
Iteration  30: 129304.231 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_268._Benchmark.benchmark_Cluster_268":
  129344.574 ±(99.9%) 309.525 ops/s [Average]
  (min, avg, max) = (128175.218, 129344.574, 130186.351), stdev = 463.283
  CI (99.9%): [129035.049, 129654.099] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_268._Benchmark.benchmark_Cluster_268  thrpt   30  129344.574 ± 309.525  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_269._Benchmark.benchmark_Cluster_269$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_269._Benchmark.benchmark_Cluster_269

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 27991.517 ops/s
# Warmup Iteration   2: 60356.946 ops/s
# Warmup Iteration   3: 60147.618 ops/s
# Warmup Iteration   4: 93486.779 ops/s
# Warmup Iteration   5: 100473.639 ops/s
# Warmup Iteration   6: 100473.545 ops/s
# Warmup Iteration   7: 99319.369 ops/s
# Warmup Iteration   8: 101223.239 ops/s
# Warmup Iteration   9: 99919.592 ops/s
# Warmup Iteration  10: 99695.108 ops/s
# Warmup Iteration  11: 101093.998 ops/s
# Warmup Iteration  12: 101010.611 ops/s
# Warmup Iteration  13: 98042.947 ops/s
# Warmup Iteration  14: 70244.340 ops/s
# Warmup Iteration  15: 100388.993 ops/s
# Warmup Iteration  16: 100324.719 ops/s
# Warmup Iteration  17: 103795.965 ops/s
# Warmup Iteration  18: 102188.135 ops/s
# Warmup Iteration  19: 102928.196 ops/s
# Warmup Iteration  20: 103526.001 ops/s
# Warmup Iteration  21: 102808.866 ops/s
# Warmup Iteration  22: 100689.091 ops/s
# Warmup Iteration  23: 102916.715 ops/s
# Warmup Iteration  24: 101841.252 ops/s
# Warmup Iteration  25: 103184.712 ops/s
# Warmup Iteration  26: 103120.397 ops/s
# Warmup Iteration  27: 102754.427 ops/s
# Warmup Iteration  28: 102757.924 ops/s
# Warmup Iteration  29: 102932.094 ops/s
# Warmup Iteration  30: 102746.172 ops/s
Iteration   1: 102578.209 ops/s
Iteration   2: 103217.307 ops/s
Iteration   3: 103109.181 ops/s
Iteration   4: 101914.451 ops/s
Iteration   5: 102833.378 ops/s
Iteration   6: 102849.172 ops/s
Iteration   7: 102288.921 ops/s
Iteration   8: 101939.512 ops/s
Iteration   9: 102708.321 ops/s
Iteration  10: 102589.280 ops/s
Iteration  11: 103680.853 ops/s
Iteration  12: 103783.371 ops/s
Iteration  13: 103582.544 ops/s
Iteration  14: 102618.889 ops/s
Iteration  15: 102993.321 ops/s
Iteration  16: 102926.576 ops/s
Iteration  17: 102547.473 ops/s
Iteration  18: 102022.967 ops/s
Iteration  19: 102790.227 ops/s
Iteration  20: 103707.696 ops/s
Iteration  21: 102469.535 ops/s
Iteration  22: 103651.898 ops/s
Iteration  23: 102639.583 ops/s
Iteration  24: 101347.296 ops/s
Iteration  25: 102733.673 ops/s
Iteration  26: 101955.003 ops/s
Iteration  27: 103689.330 ops/s
Iteration  28: 103067.794 ops/s
Iteration  29: 103241.163 ops/s
Iteration  30: 101755.434 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_269._Benchmark.benchmark_Cluster_269":
  102774.412 ±(99.9%) 428.202 ops/s [Average]
  (min, avg, max) = (101347.296, 102774.412, 103783.371), stdev = 640.913
  CI (99.9%): [102346.210, 103202.614] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_269._Benchmark.benchmark_Cluster_269  thrpt   30  102774.412 ± 428.202  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_27._Benchmark.benchmark_Cluster_27$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_27._Benchmark.benchmark_Cluster_27

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 114938.229 ops/s
# Warmup Iteration   2: 122551.378 ops/s
# Warmup Iteration   3: 123200.678 ops/s
# Warmup Iteration   4: 124706.610 ops/s
# Warmup Iteration   5: 161581.599 ops/s
# Warmup Iteration   6: 162757.350 ops/s
# Warmup Iteration   7: 162093.729 ops/s
# Warmup Iteration   8: 161923.764 ops/s
# Warmup Iteration   9: 162965.021 ops/s
# Warmup Iteration  10: 161510.337 ops/s
# Warmup Iteration  11: 163051.446 ops/s
# Warmup Iteration  12: 162786.223 ops/s
# Warmup Iteration  13: 163059.240 ops/s
# Warmup Iteration  14: 162887.664 ops/s
# Warmup Iteration  15: 162534.714 ops/s
# Warmup Iteration  16: 162767.579 ops/s
# Warmup Iteration  17: 171816.054 ops/s
# Warmup Iteration  18: 171510.728 ops/s
# Warmup Iteration  19: 171491.755 ops/s
# Warmup Iteration  20: 171141.165 ops/s
# Warmup Iteration  21: 172043.805 ops/s
# Warmup Iteration  22: 140151.489 ops/s
# Warmup Iteration  23: 149950.000 ops/s
# Warmup Iteration  24: 171930.811 ops/s
# Warmup Iteration  25: 171638.457 ops/s
# Warmup Iteration  26: 172015.406 ops/s
# Warmup Iteration  27: 171696.952 ops/s
# Warmup Iteration  28: 171993.861 ops/s
# Warmup Iteration  29: 171752.715 ops/s
# Warmup Iteration  30: 172404.012 ops/s
Iteration   1: 171985.096 ops/s
Iteration   2: 172120.771 ops/s
Iteration   3: 172176.792 ops/s
Iteration   4: 172283.754 ops/s
Iteration   5: 171249.814 ops/s
Iteration   6: 171727.931 ops/s
Iteration   7: 171580.684 ops/s
Iteration   8: 171175.813 ops/s
Iteration   9: 171487.523 ops/s
Iteration  10: 171558.068 ops/s
Iteration  11: 171535.083 ops/s
Iteration  12: 171656.758 ops/s
Iteration  13: 171002.516 ops/s
Iteration  14: 171337.449 ops/s
Iteration  15: 171661.748 ops/s
Iteration  16: 171483.133 ops/s
Iteration  17: 171806.932 ops/s
Iteration  18: 171965.403 ops/s
Iteration  19: 172619.288 ops/s
Iteration  20: 172373.182 ops/s
Iteration  21: 171629.037 ops/s
Iteration  22: 170911.117 ops/s
Iteration  23: 171168.237 ops/s
Iteration  24: 172481.096 ops/s
Iteration  25: 170950.870 ops/s
Iteration  26: 171068.655 ops/s
Iteration  27: 170760.119 ops/s
Iteration  28: 171786.691 ops/s
Iteration  29: 171830.894 ops/s
Iteration  30: 170639.579 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_27._Benchmark.benchmark_Cluster_27":
  171600.468 ±(99.9%) 343.712 ops/s [Average]
  (min, avg, max) = (170639.579, 171600.468, 172619.288), stdev = 514.452
  CI (99.9%): [171256.756, 171944.180] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_27._Benchmark.benchmark_Cluster_27  thrpt   30  171600.468 ± 343.712  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_270._Benchmark.benchmark_Cluster_270$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_270._Benchmark.benchmark_Cluster_270

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79411.297 ops/s
# Warmup Iteration   2: 100172.581 ops/s
# Warmup Iteration   3: 159239.822 ops/s
# Warmup Iteration   4: 182591.021 ops/s
# Warmup Iteration   5: 180502.524 ops/s
# Warmup Iteration   6: 182525.798 ops/s
# Warmup Iteration   7: 182451.973 ops/s
# Warmup Iteration   8: 181997.588 ops/s
# Warmup Iteration   9: 182391.339 ops/s
# Warmup Iteration  10: 127096.054 ops/s
# Warmup Iteration  11: 183116.007 ops/s
# Warmup Iteration  12: 182743.445 ops/s
# Warmup Iteration  13: 182723.168 ops/s
# Warmup Iteration  14: 182848.653 ops/s
# Warmup Iteration  15: 183303.606 ops/s
# Warmup Iteration  16: 182944.060 ops/s
# Warmup Iteration  17: 183310.240 ops/s
# Warmup Iteration  18: 183094.661 ops/s
# Warmup Iteration  19: 183661.266 ops/s
# Warmup Iteration  20: 183316.538 ops/s
# Warmup Iteration  21: 182856.667 ops/s
# Warmup Iteration  22: 183412.332 ops/s
# Warmup Iteration  23: 183300.494 ops/s
# Warmup Iteration  24: 183616.667 ops/s
# Warmup Iteration  25: 183173.747 ops/s
# Warmup Iteration  26: 183263.095 ops/s
# Warmup Iteration  27: 183663.729 ops/s
# Warmup Iteration  28: 183492.499 ops/s
# Warmup Iteration  29: 183291.672 ops/s
# Warmup Iteration  30: 182731.417 ops/s
Iteration   1: 183934.203 ops/s
Iteration   2: 183205.826 ops/s
Iteration   3: 182702.682 ops/s
Iteration   4: 183158.061 ops/s
Iteration   5: 182998.963 ops/s
Iteration   6: 182754.775 ops/s
Iteration   7: 182913.560 ops/s
Iteration   8: 183135.516 ops/s
Iteration   9: 183123.326 ops/s
Iteration  10: 183159.814 ops/s
Iteration  11: 182574.925 ops/s
Iteration  12: 182254.018 ops/s
Iteration  13: 183262.027 ops/s
Iteration  14: 183439.512 ops/s
Iteration  15: 183089.119 ops/s
Iteration  16: 182770.984 ops/s
Iteration  17: 182232.963 ops/s
Iteration  18: 183370.626 ops/s
Iteration  19: 183672.144 ops/s
Iteration  20: 182840.261 ops/s
Iteration  21: 182665.546 ops/s
Iteration  22: 182813.447 ops/s
Iteration  23: 183164.113 ops/s
Iteration  24: 182086.448 ops/s
Iteration  25: 182386.499 ops/s
Iteration  26: 182746.994 ops/s
Iteration  27: 183261.228 ops/s
Iteration  28: 182040.384 ops/s
Iteration  29: 183471.694 ops/s
Iteration  30: 182393.252 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_270._Benchmark.benchmark_Cluster_270":
  182920.764 ±(99.9%) 310.351 ops/s [Average]
  (min, avg, max) = (182040.384, 182920.764, 183934.203), stdev = 464.519
  CI (99.9%): [182610.413, 183231.115] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_270._Benchmark.benchmark_Cluster_270  thrpt   30  182920.764 ± 310.351  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_271._Benchmark.benchmark_Cluster_271$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_271._Benchmark.benchmark_Cluster_271

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48525.176 ops/s
# Warmup Iteration   2: 83649.247 ops/s
# Warmup Iteration   3: 161168.609 ops/s
# Warmup Iteration   4: 177634.720 ops/s
# Warmup Iteration   5: 179188.030 ops/s
# Warmup Iteration   6: 178916.983 ops/s
# Warmup Iteration   7: 179233.376 ops/s
# Warmup Iteration   8: 122588.563 ops/s
# Warmup Iteration   9: 179393.763 ops/s
# Warmup Iteration  10: 179500.158 ops/s
# Warmup Iteration  11: 178948.033 ops/s
# Warmup Iteration  12: 179188.721 ops/s
# Warmup Iteration  13: 179917.490 ops/s
# Warmup Iteration  14: 178903.090 ops/s
# Warmup Iteration  15: 179272.683 ops/s
# Warmup Iteration  16: 179624.399 ops/s
# Warmup Iteration  17: 177358.815 ops/s
# Warmup Iteration  18: 177666.602 ops/s
# Warmup Iteration  19: 178349.129 ops/s
# Warmup Iteration  20: 178036.299 ops/s
# Warmup Iteration  21: 178104.423 ops/s
# Warmup Iteration  22: 177977.219 ops/s
# Warmup Iteration  23: 178354.841 ops/s
# Warmup Iteration  24: 178819.664 ops/s
# Warmup Iteration  25: 178780.552 ops/s
# Warmup Iteration  26: 178887.455 ops/s
# Warmup Iteration  27: 178157.436 ops/s
# Warmup Iteration  28: 178271.711 ops/s
# Warmup Iteration  29: 178604.374 ops/s
# Warmup Iteration  30: 178475.319 ops/s
Iteration   1: 178120.965 ops/s
Iteration   2: 177482.734 ops/s
Iteration   3: 178947.429 ops/s
Iteration   4: 178344.780 ops/s
Iteration   5: 177994.679 ops/s
Iteration   6: 178027.328 ops/s
Iteration   7: 177904.431 ops/s
Iteration   8: 178729.732 ops/s
Iteration   9: 178681.192 ops/s
Iteration  10: 178768.149 ops/s
Iteration  11: 177289.989 ops/s
Iteration  12: 177654.621 ops/s
Iteration  13: 177584.817 ops/s
Iteration  14: 178270.770 ops/s
Iteration  15: 178558.887 ops/s
Iteration  16: 178412.004 ops/s
Iteration  17: 178875.345 ops/s
Iteration  18: 178268.982 ops/s
Iteration  19: 178804.887 ops/s
Iteration  20: 178485.666 ops/s
Iteration  21: 179141.071 ops/s
Iteration  22: 178427.056 ops/s
Iteration  23: 178301.629 ops/s
Iteration  24: 177479.958 ops/s
Iteration  25: 178374.511 ops/s
Iteration  26: 179027.472 ops/s
Iteration  27: 177805.557 ops/s
Iteration  28: 178223.986 ops/s
Iteration  29: 178810.374 ops/s
Iteration  30: 178153.498 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_271._Benchmark.benchmark_Cluster_271":
  178298.417 ±(99.9%) 330.749 ops/s [Average]
  (min, avg, max) = (177289.989, 178298.417, 179141.071), stdev = 495.050
  CI (99.9%): [177967.668, 178629.166] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_271._Benchmark.benchmark_Cluster_271  thrpt   30  178298.417 ± 330.749  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_272._Benchmark.benchmark_Cluster_272$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_272._Benchmark.benchmark_Cluster_272

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73054.010 ops/s
# Warmup Iteration   2: 91505.356 ops/s
# Warmup Iteration   3: 132076.190 ops/s
# Warmup Iteration   4: 161851.506 ops/s
# Warmup Iteration   5: 160235.476 ops/s
# Warmup Iteration   6: 162469.339 ops/s
# Warmup Iteration   7: 160568.836 ops/s
# Warmup Iteration   8: 161646.926 ops/s
# Warmup Iteration   9: 162414.995 ops/s
# Warmup Iteration  10: 162369.713 ops/s
# Warmup Iteration  11: 111055.375 ops/s
# Warmup Iteration  12: 162289.264 ops/s
# Warmup Iteration  13: 162709.474 ops/s
# Warmup Iteration  14: 162817.890 ops/s
# Warmup Iteration  15: 162586.244 ops/s
# Warmup Iteration  16: 162671.464 ops/s
# Warmup Iteration  17: 164854.513 ops/s
# Warmup Iteration  18: 164932.524 ops/s
# Warmup Iteration  19: 164950.924 ops/s
# Warmup Iteration  20: 164973.873 ops/s
# Warmup Iteration  21: 164812.596 ops/s
# Warmup Iteration  22: 165391.332 ops/s
# Warmup Iteration  23: 165387.039 ops/s
# Warmup Iteration  24: 165788.511 ops/s
# Warmup Iteration  25: 165307.612 ops/s
# Warmup Iteration  26: 165369.449 ops/s
# Warmup Iteration  27: 165352.188 ops/s
# Warmup Iteration  28: 165006.787 ops/s
# Warmup Iteration  29: 165046.062 ops/s
# Warmup Iteration  30: 165233.289 ops/s
Iteration   1: 165551.524 ops/s
Iteration   2: 164891.977 ops/s
Iteration   3: 165231.033 ops/s
Iteration   4: 164976.390 ops/s
Iteration   5: 165528.422 ops/s
Iteration   6: 165047.804 ops/s
Iteration   7: 165405.417 ops/s
Iteration   8: 165517.962 ops/s
Iteration   9: 165200.308 ops/s
Iteration  10: 165185.901 ops/s
Iteration  11: 165390.698 ops/s
Iteration  12: 165230.595 ops/s
Iteration  13: 165313.494 ops/s
Iteration  14: 165392.470 ops/s
Iteration  15: 165364.295 ops/s
Iteration  16: 165217.046 ops/s
Iteration  17: 165624.368 ops/s
Iteration  18: 165181.336 ops/s
Iteration  19: 164985.858 ops/s
Iteration  20: 165533.209 ops/s
Iteration  21: 165416.165 ops/s
Iteration  22: 164634.651 ops/s
Iteration  23: 165589.062 ops/s
Iteration  24: 165340.726 ops/s
Iteration  25: 165453.428 ops/s
Iteration  26: 165274.839 ops/s
Iteration  27: 165291.701 ops/s
Iteration  28: 165153.540 ops/s
Iteration  29: 163795.013 ops/s
Iteration  30: 164868.332 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_272._Benchmark.benchmark_Cluster_272":
  165219.585 ±(99.9%) 238.198 ops/s [Average]
  (min, avg, max) = (163795.013, 165219.585, 165624.368), stdev = 356.524
  CI (99.9%): [164981.387, 165457.783] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_272._Benchmark.benchmark_Cluster_272  thrpt   30  165219.585 ± 238.198  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_273._Benchmark.benchmark_Cluster_273$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_273._Benchmark.benchmark_Cluster_273

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 87404.804 ops/s
# Warmup Iteration   2: 99173.289 ops/s
# Warmup Iteration   3: 99836.552 ops/s
# Warmup Iteration   4: 109294.825 ops/s
# Warmup Iteration   5: 136691.172 ops/s
# Warmup Iteration   6: 136492.502 ops/s
# Warmup Iteration   7: 136113.248 ops/s
# Warmup Iteration   8: 136896.501 ops/s
# Warmup Iteration   9: 135440.754 ops/s
# Warmup Iteration  10: 137021.486 ops/s
# Warmup Iteration  11: 136419.255 ops/s
# Warmup Iteration  12: 136341.483 ops/s
# Warmup Iteration  13: 136533.525 ops/s
# Warmup Iteration  14: 135938.681 ops/s
# Warmup Iteration  15: 136051.983 ops/s
# Warmup Iteration  16: 136411.503 ops/s
# Warmup Iteration  17: 140974.340 ops/s
# Warmup Iteration  18: 141163.451 ops/s
# Warmup Iteration  19: 141101.246 ops/s
# Warmup Iteration  20: 121472.772 ops/s
# Warmup Iteration  21: 115149.477 ops/s
# Warmup Iteration  22: 141508.154 ops/s
# Warmup Iteration  23: 141464.205 ops/s
# Warmup Iteration  24: 141290.692 ops/s
# Warmup Iteration  25: 141565.226 ops/s
# Warmup Iteration  26: 141509.910 ops/s
# Warmup Iteration  27: 141831.393 ops/s
# Warmup Iteration  28: 141690.349 ops/s
# Warmup Iteration  29: 141970.096 ops/s
# Warmup Iteration  30: 142078.820 ops/s
Iteration   1: 141878.688 ops/s
Iteration   2: 141122.411 ops/s
Iteration   3: 141163.122 ops/s
Iteration   4: 141465.540 ops/s
Iteration   5: 141464.183 ops/s
Iteration   6: 141507.776 ops/s
Iteration   7: 141421.664 ops/s
Iteration   8: 141637.932 ops/s
Iteration   9: 141670.674 ops/s
Iteration  10: 142126.175 ops/s
Iteration  11: 141822.031 ops/s
Iteration  12: 141239.627 ops/s
Iteration  13: 141612.804 ops/s
Iteration  14: 141273.659 ops/s
Iteration  15: 141597.243 ops/s
Iteration  16: 141636.531 ops/s
Iteration  17: 141254.285 ops/s
Iteration  18: 141169.316 ops/s
Iteration  19: 141745.189 ops/s
Iteration  20: 141605.668 ops/s
Iteration  21: 141661.925 ops/s
Iteration  22: 141367.639 ops/s
Iteration  23: 141392.223 ops/s
Iteration  24: 141476.750 ops/s
Iteration  25: 141004.136 ops/s
Iteration  26: 141517.749 ops/s
Iteration  27: 141632.831 ops/s
Iteration  28: 141186.002 ops/s
Iteration  29: 141054.056 ops/s
Iteration  30: 140850.596 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_273._Benchmark.benchmark_Cluster_273":
  141451.947 ±(99.9%) 189.076 ops/s [Average]
  (min, avg, max) = (140850.596, 141451.947, 142126.175), stdev = 283.001
  CI (99.9%): [141262.871, 141641.024] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_273._Benchmark.benchmark_Cluster_273  thrpt   30  141451.947 ± 189.076  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_274._Benchmark.benchmark_Cluster_274$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_274._Benchmark.benchmark_Cluster_274

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67102.028 ops/s
# Warmup Iteration   2: 77645.584 ops/s
# Warmup Iteration   3: 124152.272 ops/s
# Warmup Iteration   4: 154766.434 ops/s
# Warmup Iteration   5: 154178.936 ops/s
# Warmup Iteration   6: 155174.429 ops/s
# Warmup Iteration   7: 154758.358 ops/s
# Warmup Iteration   8: 153938.654 ops/s
# Warmup Iteration   9: 154260.023 ops/s
# Warmup Iteration  10: 97094.515 ops/s
# Warmup Iteration  11: 153883.636 ops/s
# Warmup Iteration  12: 153907.937 ops/s
# Warmup Iteration  13: 154597.379 ops/s
# Warmup Iteration  14: 154082.124 ops/s
# Warmup Iteration  15: 153431.664 ops/s
# Warmup Iteration  16: 154265.304 ops/s
# Warmup Iteration  17: 160926.637 ops/s
# Warmup Iteration  18: 161255.488 ops/s
# Warmup Iteration  19: 160593.123 ops/s
# Warmup Iteration  20: 160338.730 ops/s
# Warmup Iteration  21: 160176.864 ops/s
# Warmup Iteration  22: 160797.903 ops/s
# Warmup Iteration  23: 160728.436 ops/s
# Warmup Iteration  24: 161101.620 ops/s
# Warmup Iteration  25: 160643.052 ops/s
# Warmup Iteration  26: 161564.703 ops/s
# Warmup Iteration  27: 161181.099 ops/s
# Warmup Iteration  28: 160657.151 ops/s
# Warmup Iteration  29: 160437.071 ops/s
# Warmup Iteration  30: 160614.413 ops/s
Iteration   1: 160748.638 ops/s
Iteration   2: 160351.900 ops/s
Iteration   3: 160572.935 ops/s
Iteration   4: 160848.496 ops/s
Iteration   5: 160946.313 ops/s
Iteration   6: 160359.716 ops/s
Iteration   7: 161398.712 ops/s
Iteration   8: 160769.340 ops/s
Iteration   9: 160672.324 ops/s
Iteration  10: 160823.155 ops/s
Iteration  11: 159718.569 ops/s
Iteration  12: 160142.817 ops/s
Iteration  13: 160505.471 ops/s
Iteration  14: 160134.756 ops/s
Iteration  15: 160243.095 ops/s
Iteration  16: 160854.899 ops/s
Iteration  17: 160978.051 ops/s
Iteration  18: 160824.047 ops/s
Iteration  19: 160609.921 ops/s
Iteration  20: 159938.619 ops/s
Iteration  21: 160178.556 ops/s
Iteration  22: 160040.135 ops/s
Iteration  23: 160952.392 ops/s
Iteration  24: 160869.570 ops/s
Iteration  25: 160564.536 ops/s
Iteration  26: 160955.028 ops/s
Iteration  27: 159975.850 ops/s
Iteration  28: 159610.297 ops/s
Iteration  29: 161540.651 ops/s
Iteration  30: 160895.634 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_274._Benchmark.benchmark_Cluster_274":
  160567.481 ±(99.9%) 309.034 ops/s [Average]
  (min, avg, max) = (159610.297, 160567.481, 161540.651), stdev = 462.547
  CI (99.9%): [160258.447, 160876.515] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_274._Benchmark.benchmark_Cluster_274  thrpt   30  160567.481 ± 309.034  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_275._Benchmark.benchmark_Cluster_275$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_275._Benchmark.benchmark_Cluster_275

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 90240.946 ops/s
# Warmup Iteration   2: 100931.389 ops/s
# Warmup Iteration   3: 141526.041 ops/s
# Warmup Iteration   4: 172960.835 ops/s
# Warmup Iteration   5: 173428.360 ops/s
# Warmup Iteration   6: 171964.502 ops/s
# Warmup Iteration   7: 172359.115 ops/s
# Warmup Iteration   8: 172758.440 ops/s
# Warmup Iteration   9: 173315.941 ops/s
# Warmup Iteration  10: 173411.295 ops/s
# Warmup Iteration  11: 145689.913 ops/s
# Warmup Iteration  12: 144352.180 ops/s
# Warmup Iteration  13: 172617.384 ops/s
# Warmup Iteration  14: 172158.147 ops/s
# Warmup Iteration  15: 172872.211 ops/s
# Warmup Iteration  16: 172040.576 ops/s
# Warmup Iteration  17: 178362.302 ops/s
# Warmup Iteration  18: 178615.105 ops/s
# Warmup Iteration  19: 179066.995 ops/s
# Warmup Iteration  20: 178815.175 ops/s
# Warmup Iteration  21: 178412.342 ops/s
# Warmup Iteration  22: 178800.505 ops/s
# Warmup Iteration  23: 177774.210 ops/s
# Warmup Iteration  24: 178420.585 ops/s
# Warmup Iteration  25: 178672.781 ops/s
# Warmup Iteration  26: 178496.482 ops/s
# Warmup Iteration  27: 178829.281 ops/s
# Warmup Iteration  28: 178464.779 ops/s
# Warmup Iteration  29: 178858.945 ops/s
# Warmup Iteration  30: 178437.712 ops/s
Iteration   1: 178456.218 ops/s
Iteration   2: 178477.507 ops/s
Iteration   3: 179012.938 ops/s
Iteration   4: 178898.107 ops/s
Iteration   5: 179475.987 ops/s
Iteration   6: 178293.787 ops/s
Iteration   7: 178203.642 ops/s
Iteration   8: 178581.733 ops/s
Iteration   9: 178937.169 ops/s
Iteration  10: 179165.739 ops/s
Iteration  11: 179547.352 ops/s
Iteration  12: 179653.852 ops/s
Iteration  13: 178590.124 ops/s
Iteration  14: 178640.871 ops/s
Iteration  15: 179417.527 ops/s
Iteration  16: 178705.803 ops/s
Iteration  17: 178335.892 ops/s
Iteration  18: 178137.501 ops/s
Iteration  19: 177993.532 ops/s
Iteration  20: 178628.168 ops/s
Iteration  21: 178138.090 ops/s
Iteration  22: 178102.319 ops/s
Iteration  23: 179291.427 ops/s
Iteration  24: 178053.089 ops/s
Iteration  25: 178009.967 ops/s
Iteration  26: 178306.840 ops/s
Iteration  27: 178075.329 ops/s
Iteration  28: 177898.777 ops/s
Iteration  29: 178153.178 ops/s
Iteration  30: 177768.357 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_275._Benchmark.benchmark_Cluster_275":
  178565.027 ±(99.9%) 359.210 ops/s [Average]
  (min, avg, max) = (177768.357, 178565.027, 179653.852), stdev = 537.648
  CI (99.9%): [178205.818, 178924.237] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_275._Benchmark.benchmark_Cluster_275  thrpt   30  178565.027 ± 359.210  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_276._Benchmark.benchmark_Cluster_276$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_276._Benchmark.benchmark_Cluster_276

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63408.019 ops/s
# Warmup Iteration   2: 78710.384 ops/s
# Warmup Iteration   3: 154820.674 ops/s
# Warmup Iteration   4: 170057.208 ops/s
# Warmup Iteration   5: 168030.989 ops/s
# Warmup Iteration   6: 170282.304 ops/s
# Warmup Iteration   7: 171108.404 ops/s
# Warmup Iteration   8: 152143.217 ops/s
# Warmup Iteration   9: 134737.165 ops/s
# Warmup Iteration  10: 170261.842 ops/s
# Warmup Iteration  11: 169800.248 ops/s
# Warmup Iteration  12: 170309.648 ops/s
# Warmup Iteration  13: 170825.895 ops/s
# Warmup Iteration  14: 170155.245 ops/s
# Warmup Iteration  15: 170650.824 ops/s
# Warmup Iteration  16: 170101.923 ops/s
# Warmup Iteration  17: 170183.306 ops/s
# Warmup Iteration  18: 170532.218 ops/s
# Warmup Iteration  19: 170534.645 ops/s
# Warmup Iteration  20: 170526.466 ops/s
# Warmup Iteration  21: 170638.962 ops/s
# Warmup Iteration  22: 169997.101 ops/s
# Warmup Iteration  23: 170291.738 ops/s
# Warmup Iteration  24: 170354.485 ops/s
# Warmup Iteration  25: 169870.817 ops/s
# Warmup Iteration  26: 170400.308 ops/s
# Warmup Iteration  27: 170063.975 ops/s
# Warmup Iteration  28: 170136.745 ops/s
# Warmup Iteration  29: 170307.556 ops/s
# Warmup Iteration  30: 170156.432 ops/s
Iteration   1: 169359.956 ops/s
Iteration   2: 170359.572 ops/s
Iteration   3: 169353.203 ops/s
Iteration   4: 169995.732 ops/s
Iteration   5: 169912.064 ops/s
Iteration   6: 170821.510 ops/s
Iteration   7: 170048.630 ops/s
Iteration   8: 170250.921 ops/s
Iteration   9: 170951.936 ops/s
Iteration  10: 170915.067 ops/s
Iteration  11: 169880.123 ops/s
Iteration  12: 169959.801 ops/s
Iteration  13: 169348.628 ops/s
Iteration  14: 169630.129 ops/s
Iteration  15: 169546.073 ops/s
Iteration  16: 169738.477 ops/s
Iteration  17: 170406.261 ops/s
Iteration  18: 170073.652 ops/s
Iteration  19: 170701.180 ops/s
Iteration  20: 170371.590 ops/s
Iteration  21: 170543.107 ops/s
Iteration  22: 171131.466 ops/s
Iteration  23: 169568.268 ops/s
Iteration  24: 170035.292 ops/s
Iteration  25: 169258.726 ops/s
Iteration  26: 170204.605 ops/s
Iteration  27: 169744.455 ops/s
Iteration  28: 169858.646 ops/s
Iteration  29: 170470.249 ops/s
Iteration  30: 170155.344 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_276._Benchmark.benchmark_Cluster_276":
  170086.489 ±(99.9%) 341.142 ops/s [Average]
  (min, avg, max) = (169258.726, 170086.489, 171131.466), stdev = 510.605
  CI (99.9%): [169745.347, 170427.631] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_276._Benchmark.benchmark_Cluster_276  thrpt   30  170086.489 ± 341.142  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_277._Benchmark.benchmark_Cluster_277$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_277._Benchmark.benchmark_Cluster_277

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58331.684 ops/s
# Warmup Iteration   2: 86007.416 ops/s
# Warmup Iteration   3: 175775.296 ops/s
# Warmup Iteration   4: 186679.338 ops/s
# Warmup Iteration   5: 187327.355 ops/s
# Warmup Iteration   6: 185867.595 ops/s
# Warmup Iteration   7: 186017.650 ops/s
# Warmup Iteration   8: 127645.351 ops/s
# Warmup Iteration   9: 185847.303 ops/s
# Warmup Iteration  10: 186365.236 ops/s
# Warmup Iteration  11: 186279.710 ops/s
# Warmup Iteration  12: 185969.504 ops/s
# Warmup Iteration  13: 185841.083 ops/s
# Warmup Iteration  14: 185276.055 ops/s
# Warmup Iteration  15: 185678.095 ops/s
# Warmup Iteration  16: 185731.301 ops/s
# Warmup Iteration  17: 185825.971 ops/s
# Warmup Iteration  18: 186044.569 ops/s
# Warmup Iteration  19: 186716.151 ops/s
# Warmup Iteration  20: 186966.508 ops/s
# Warmup Iteration  21: 186881.697 ops/s
# Warmup Iteration  22: 186848.122 ops/s
# Warmup Iteration  23: 186501.403 ops/s
# Warmup Iteration  24: 186784.991 ops/s
# Warmup Iteration  25: 186668.677 ops/s
# Warmup Iteration  26: 186792.727 ops/s
# Warmup Iteration  27: 186534.995 ops/s
# Warmup Iteration  28: 186023.453 ops/s
# Warmup Iteration  29: 185778.945 ops/s
# Warmup Iteration  30: 185742.914 ops/s
Iteration   1: 185853.153 ops/s
Iteration   2: 185459.460 ops/s
Iteration   3: 186691.380 ops/s
Iteration   4: 186283.590 ops/s
Iteration   5: 185876.941 ops/s
Iteration   6: 186743.946 ops/s
Iteration   7: 186940.975 ops/s
Iteration   8: 186927.205 ops/s
Iteration   9: 186702.501 ops/s
Iteration  10: 186824.226 ops/s
Iteration  11: 186555.344 ops/s
Iteration  12: 186983.272 ops/s
Iteration  13: 185942.359 ops/s
Iteration  14: 186316.088 ops/s
Iteration  15: 185742.764 ops/s
Iteration  16: 185666.082 ops/s
Iteration  17: 186063.755 ops/s
Iteration  18: 185847.729 ops/s
Iteration  19: 186876.494 ops/s
Iteration  20: 186432.530 ops/s
Iteration  21: 186126.859 ops/s
Iteration  22: 186133.626 ops/s
Iteration  23: 185998.542 ops/s
Iteration  24: 186087.747 ops/s
Iteration  25: 186783.679 ops/s
Iteration  26: 186281.147 ops/s
Iteration  27: 186360.630 ops/s
Iteration  28: 186622.261 ops/s
Iteration  29: 185854.642 ops/s
Iteration  30: 186024.731 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_277._Benchmark.benchmark_Cluster_277":
  186300.122 ±(99.9%) 290.142 ops/s [Average]
  (min, avg, max) = (185459.460, 186300.122, 186983.272), stdev = 434.271
  CI (99.9%): [186009.980, 186590.264] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_277._Benchmark.benchmark_Cluster_277  thrpt   30  186300.122 ± 290.142  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_278._Benchmark.benchmark_Cluster_278$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_278._Benchmark.benchmark_Cluster_278

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64289.217 ops/s
# Warmup Iteration   2: 88188.234 ops/s
# Warmup Iteration   3: 88806.635 ops/s
# Warmup Iteration   4: 130361.743 ops/s
# Warmup Iteration   5: 141694.012 ops/s
# Warmup Iteration   6: 141112.139 ops/s
# Warmup Iteration   7: 138836.680 ops/s
# Warmup Iteration   8: 140051.426 ops/s
# Warmup Iteration   9: 141856.477 ops/s
# Warmup Iteration  10: 141120.971 ops/s
# Warmup Iteration  11: 141613.408 ops/s
# Warmup Iteration  12: 141476.195 ops/s
# Warmup Iteration  13: 141645.889 ops/s
# Warmup Iteration  14: 142932.506 ops/s
# Warmup Iteration  15: 105983.931 ops/s
# Warmup Iteration  16: 129506.579 ops/s
# Warmup Iteration  17: 146751.172 ops/s
# Warmup Iteration  18: 146871.589 ops/s
# Warmup Iteration  19: 146241.540 ops/s
# Warmup Iteration  20: 146246.842 ops/s
# Warmup Iteration  21: 145569.102 ops/s
# Warmup Iteration  22: 145059.858 ops/s
# Warmup Iteration  23: 145817.104 ops/s
# Warmup Iteration  24: 145108.197 ops/s
# Warmup Iteration  25: 146070.102 ops/s
# Warmup Iteration  26: 146340.858 ops/s
# Warmup Iteration  27: 146359.102 ops/s
# Warmup Iteration  28: 146794.927 ops/s
# Warmup Iteration  29: 146175.971 ops/s
# Warmup Iteration  30: 146285.315 ops/s
Iteration   1: 146331.763 ops/s
Iteration   2: 146000.015 ops/s
Iteration   3: 146717.159 ops/s
Iteration   4: 145205.753 ops/s
Iteration   5: 146551.020 ops/s
Iteration   6: 146624.540 ops/s
Iteration   7: 145752.534 ops/s
Iteration   8: 144972.395 ops/s
Iteration   9: 146116.098 ops/s
Iteration  10: 146583.284 ops/s
Iteration  11: 145771.778 ops/s
Iteration  12: 145513.162 ops/s
Iteration  13: 145960.629 ops/s
Iteration  14: 145876.417 ops/s
Iteration  15: 146212.606 ops/s
Iteration  16: 146647.997 ops/s
Iteration  17: 147940.588 ops/s
Iteration  18: 147520.642 ops/s
Iteration  19: 146811.195 ops/s
Iteration  20: 145780.261 ops/s
Iteration  21: 146132.181 ops/s
Iteration  22: 147227.207 ops/s
Iteration  23: 146648.640 ops/s
Iteration  24: 147044.760 ops/s
Iteration  25: 146722.282 ops/s
Iteration  26: 145875.946 ops/s
Iteration  27: 145918.127 ops/s
Iteration  28: 145913.019 ops/s
Iteration  29: 145476.640 ops/s
Iteration  30: 146193.254 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_278._Benchmark.benchmark_Cluster_278":
  146268.063 ±(99.9%) 442.446 ops/s [Average]
  (min, avg, max) = (144972.395, 146268.063, 147940.588), stdev = 662.233
  CI (99.9%): [145825.617, 146710.509] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_278._Benchmark.benchmark_Cluster_278  thrpt   30  146268.063 ± 442.446  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_279._Benchmark.benchmark_Cluster_279$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_279._Benchmark.benchmark_Cluster_279

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94499.649 ops/s
# Warmup Iteration   2: 111723.186 ops/s
# Warmup Iteration   3: 112757.498 ops/s
# Warmup Iteration   4: 140634.936 ops/s
# Warmup Iteration   5: 162996.939 ops/s
# Warmup Iteration   6: 162540.374 ops/s
# Warmup Iteration   7: 162572.138 ops/s
# Warmup Iteration   8: 160954.126 ops/s
# Warmup Iteration   9: 163377.838 ops/s
# Warmup Iteration  10: 162841.267 ops/s
# Warmup Iteration  11: 162505.815 ops/s
# Warmup Iteration  12: 161679.069 ops/s
# Warmup Iteration  13: 162600.778 ops/s
# Warmup Iteration  14: 163005.778 ops/s
# Warmup Iteration  15: 162806.926 ops/s
# Warmup Iteration  16: 162201.838 ops/s
# Warmup Iteration  17: 169234.189 ops/s
# Warmup Iteration  18: 119492.067 ops/s
# Warmup Iteration  19: 163083.429 ops/s
# Warmup Iteration  20: 168735.189 ops/s
# Warmup Iteration  21: 168987.051 ops/s
# Warmup Iteration  22: 168767.343 ops/s
# Warmup Iteration  23: 168516.436 ops/s
# Warmup Iteration  24: 167827.787 ops/s
# Warmup Iteration  25: 167633.982 ops/s
# Warmup Iteration  26: 168365.748 ops/s
# Warmup Iteration  27: 168637.507 ops/s
# Warmup Iteration  28: 168768.132 ops/s
# Warmup Iteration  29: 168487.275 ops/s
# Warmup Iteration  30: 168166.119 ops/s
Iteration   1: 168044.300 ops/s
Iteration   2: 166911.752 ops/s
Iteration   3: 168506.826 ops/s
Iteration   4: 168211.593 ops/s
Iteration   5: 169042.955 ops/s
Iteration   6: 168713.268 ops/s
Iteration   7: 167473.618 ops/s
Iteration   8: 168675.224 ops/s
Iteration   9: 168978.649 ops/s
Iteration  10: 168688.958 ops/s
Iteration  11: 167589.114 ops/s
Iteration  12: 168494.508 ops/s
Iteration  13: 168677.932 ops/s
Iteration  14: 168421.179 ops/s
Iteration  15: 169305.305 ops/s
Iteration  16: 168738.843 ops/s
Iteration  17: 168020.211 ops/s
Iteration  18: 168034.774 ops/s
Iteration  19: 167184.439 ops/s
Iteration  20: 167462.376 ops/s
Iteration  21: 166716.726 ops/s
Iteration  22: 167146.208 ops/s
Iteration  23: 167628.872 ops/s
Iteration  24: 167467.336 ops/s
Iteration  25: 167120.071 ops/s
Iteration  26: 168033.009 ops/s
Iteration  27: 167886.312 ops/s
Iteration  28: 167657.206 ops/s
Iteration  29: 167704.344 ops/s
Iteration  30: 167335.504 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_279._Benchmark.benchmark_Cluster_279":
  167995.714 ±(99.9%) 459.831 ops/s [Average]
  (min, avg, max) = (166716.726, 167995.714, 169305.305), stdev = 688.254
  CI (99.9%): [167535.882, 168455.545] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_279._Benchmark.benchmark_Cluster_279  thrpt   30  167995.714 ± 459.831  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_28._Benchmark.benchmark_Cluster_28$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_28._Benchmark.benchmark_Cluster_28

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77299.268 ops/s
# Warmup Iteration   2: 91822.260 ops/s
# Warmup Iteration   3: 92422.504 ops/s
# Warmup Iteration   4: 101654.579 ops/s
# Warmup Iteration   5: 128921.576 ops/s
# Warmup Iteration   6: 129189.464 ops/s
# Warmup Iteration   7: 129496.561 ops/s
# Warmup Iteration   8: 129706.273 ops/s
# Warmup Iteration   9: 127625.182 ops/s
# Warmup Iteration  10: 129306.843 ops/s
# Warmup Iteration  11: 129585.131 ops/s
# Warmup Iteration  12: 128858.498 ops/s
# Warmup Iteration  13: 128869.153 ops/s
# Warmup Iteration  14: 128682.015 ops/s
# Warmup Iteration  15: 129190.024 ops/s
# Warmup Iteration  16: 129224.056 ops/s
# Warmup Iteration  17: 134843.455 ops/s
# Warmup Iteration  18: 134570.176 ops/s
# Warmup Iteration  19: 134107.935 ops/s
# Warmup Iteration  20: 95119.031 ops/s
# Warmup Iteration  21: 128838.040 ops/s
# Warmup Iteration  22: 134649.797 ops/s
# Warmup Iteration  23: 134592.261 ops/s
# Warmup Iteration  24: 134840.583 ops/s
# Warmup Iteration  25: 134719.025 ops/s
# Warmup Iteration  26: 134086.551 ops/s
# Warmup Iteration  27: 134287.018 ops/s
# Warmup Iteration  28: 134689.705 ops/s
# Warmup Iteration  29: 134290.603 ops/s
# Warmup Iteration  30: 134268.424 ops/s
Iteration   1: 134296.641 ops/s
Iteration   2: 134182.945 ops/s
Iteration   3: 134524.381 ops/s
Iteration   4: 134897.044 ops/s
Iteration   5: 134412.973 ops/s
Iteration   6: 134675.692 ops/s
Iteration   7: 134841.865 ops/s
Iteration   8: 134973.198 ops/s
Iteration   9: 134836.712 ops/s
Iteration  10: 134441.737 ops/s
Iteration  11: 134893.723 ops/s
Iteration  12: 134801.613 ops/s
Iteration  13: 134238.740 ops/s
Iteration  14: 134574.804 ops/s
Iteration  15: 134781.201 ops/s
Iteration  16: 134720.819 ops/s
Iteration  17: 133345.213 ops/s
Iteration  18: 133848.291 ops/s
Iteration  19: 133877.856 ops/s
Iteration  20: 134715.591 ops/s
Iteration  21: 133980.164 ops/s
Iteration  22: 134534.985 ops/s
Iteration  23: 134895.577 ops/s
Iteration  24: 134200.969 ops/s
Iteration  25: 133966.601 ops/s
Iteration  26: 134280.729 ops/s
Iteration  27: 133617.710 ops/s
Iteration  28: 134119.228 ops/s
Iteration  29: 134080.678 ops/s
Iteration  30: 133904.680 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_28._Benchmark.benchmark_Cluster_28":
  134382.079 ±(99.9%) 286.213 ops/s [Average]
  (min, avg, max) = (133345.213, 134382.079, 134973.198), stdev = 428.391
  CI (99.9%): [134095.865, 134668.292] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_28._Benchmark.benchmark_Cluster_28  thrpt   30  134382.079 ± 286.213  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_280._Benchmark.benchmark_Cluster_280$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_280._Benchmark.benchmark_Cluster_280

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 124493.763 ops/s
# Warmup Iteration   2: 133863.434 ops/s
# Warmup Iteration   3: 153427.163 ops/s
# Warmup Iteration   4: 210590.903 ops/s
# Warmup Iteration   5: 209322.144 ops/s
# Warmup Iteration   6: 209924.405 ops/s
# Warmup Iteration   7: 209709.098 ops/s
# Warmup Iteration   8: 209552.096 ops/s
# Warmup Iteration   9: 209245.153 ops/s
# Warmup Iteration  10: 208453.311 ops/s
# Warmup Iteration  11: 208225.360 ops/s
# Warmup Iteration  12: 208787.995 ops/s
# Warmup Iteration  13: 201055.831 ops/s
# Warmup Iteration  14: 147861.536 ops/s
# Warmup Iteration  15: 209634.601 ops/s
# Warmup Iteration  16: 210343.559 ops/s
# Warmup Iteration  17: 220444.540 ops/s
# Warmup Iteration  18: 220542.131 ops/s
# Warmup Iteration  19: 220472.016 ops/s
# Warmup Iteration  20: 218795.319 ops/s
# Warmup Iteration  21: 220772.244 ops/s
# Warmup Iteration  22: 220329.655 ops/s
# Warmup Iteration  23: 219802.613 ops/s
# Warmup Iteration  24: 219302.235 ops/s
# Warmup Iteration  25: 218855.898 ops/s
# Warmup Iteration  26: 219727.091 ops/s
# Warmup Iteration  27: 218077.305 ops/s
# Warmup Iteration  28: 218647.465 ops/s
# Warmup Iteration  29: 219383.842 ops/s
# Warmup Iteration  30: 220500.570 ops/s
Iteration   1: 221361.165 ops/s
Iteration   2: 221571.424 ops/s
Iteration   3: 221273.038 ops/s
Iteration   4: 220441.953 ops/s
Iteration   5: 220245.498 ops/s
Iteration   6: 220009.012 ops/s
Iteration   7: 220478.795 ops/s
Iteration   8: 220594.643 ops/s
Iteration   9: 221183.030 ops/s
Iteration  10: 220237.383 ops/s
Iteration  11: 220728.871 ops/s
Iteration  12: 220737.336 ops/s
Iteration  13: 220785.057 ops/s
Iteration  14: 221282.090 ops/s
Iteration  15: 220192.670 ops/s
Iteration  16: 220235.903 ops/s
Iteration  17: 220908.633 ops/s
Iteration  18: 220410.847 ops/s
Iteration  19: 220163.663 ops/s
Iteration  20: 218566.000 ops/s
Iteration  21: 220751.591 ops/s
Iteration  22: 219554.152 ops/s
Iteration  23: 218800.939 ops/s
Iteration  24: 219070.645 ops/s
Iteration  25: 220066.328 ops/s
Iteration  26: 219146.502 ops/s
Iteration  27: 218434.345 ops/s
Iteration  28: 219860.426 ops/s
Iteration  29: 219406.329 ops/s
Iteration  30: 220552.556 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_280._Benchmark.benchmark_Cluster_280":
  220235.028 ±(99.9%) 555.002 ops/s [Average]
  (min, avg, max) = (218434.345, 220235.028, 221571.424), stdev = 830.701
  CI (99.9%): [219680.025, 220790.030] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_280._Benchmark.benchmark_Cluster_280  thrpt   30  220235.028 ± 555.002  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_281._Benchmark.benchmark_Cluster_281$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_281._Benchmark.benchmark_Cluster_281

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62692.454 ops/s
# Warmup Iteration   2: 71994.231 ops/s
# Warmup Iteration   3: 103546.696 ops/s
# Warmup Iteration   4: 131741.055 ops/s
# Warmup Iteration   5: 132313.181 ops/s
# Warmup Iteration   6: 130187.877 ops/s
# Warmup Iteration   7: 131036.657 ops/s
# Warmup Iteration   8: 131624.962 ops/s
# Warmup Iteration   9: 132331.772 ops/s
# Warmup Iteration  10: 132907.165 ops/s
# Warmup Iteration  11: 92374.039 ops/s
# Warmup Iteration  12: 126473.312 ops/s
# Warmup Iteration  13: 131423.116 ops/s
# Warmup Iteration  14: 130797.960 ops/s
# Warmup Iteration  15: 131184.356 ops/s
# Warmup Iteration  16: 131533.386 ops/s
# Warmup Iteration  17: 134952.952 ops/s
# Warmup Iteration  18: 134620.788 ops/s
# Warmup Iteration  19: 134605.641 ops/s
# Warmup Iteration  20: 135017.381 ops/s
# Warmup Iteration  21: 135406.207 ops/s
# Warmup Iteration  22: 134964.598 ops/s
# Warmup Iteration  23: 135182.615 ops/s
# Warmup Iteration  24: 135100.491 ops/s
# Warmup Iteration  25: 135093.244 ops/s
# Warmup Iteration  26: 135120.982 ops/s
# Warmup Iteration  27: 134777.727 ops/s
# Warmup Iteration  28: 134893.738 ops/s
# Warmup Iteration  29: 134854.788 ops/s
# Warmup Iteration  30: 134985.257 ops/s
Iteration   1: 134904.309 ops/s
Iteration   2: 135183.517 ops/s
Iteration   3: 134950.318 ops/s
Iteration   4: 135224.442 ops/s
Iteration   5: 135566.999 ops/s
Iteration   6: 135686.484 ops/s
Iteration   7: 135065.991 ops/s
Iteration   8: 134611.381 ops/s
Iteration   9: 135195.767 ops/s
Iteration  10: 134715.406 ops/s
Iteration  11: 134952.759 ops/s
Iteration  12: 134746.213 ops/s
Iteration  13: 134302.990 ops/s
Iteration  14: 134495.180 ops/s
Iteration  15: 135622.070 ops/s
Iteration  16: 134921.330 ops/s
Iteration  17: 134795.572 ops/s
Iteration  18: 134519.537 ops/s
Iteration  19: 134878.796 ops/s
Iteration  20: 135267.994 ops/s
Iteration  21: 135209.180 ops/s
Iteration  22: 135219.539 ops/s
Iteration  23: 135333.677 ops/s
Iteration  24: 134904.354 ops/s
Iteration  25: 134992.024 ops/s
Iteration  26: 135247.310 ops/s
Iteration  27: 134982.835 ops/s
Iteration  28: 135064.966 ops/s
Iteration  29: 135494.239 ops/s
Iteration  30: 134953.468 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_281._Benchmark.benchmark_Cluster_281":
  135033.621 ±(99.9%) 222.401 ops/s [Average]
  (min, avg, max) = (134302.990, 135033.621, 135686.484), stdev = 332.879
  CI (99.9%): [134811.221, 135256.022] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_281._Benchmark.benchmark_Cluster_281  thrpt   30  135033.621 ± 222.401  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_282._Benchmark.benchmark_Cluster_282$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_282._Benchmark.benchmark_Cluster_282

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76449.949 ops/s
# Warmup Iteration   2: 86782.945 ops/s
# Warmup Iteration   3: 155799.882 ops/s
# Warmup Iteration   4: 165200.106 ops/s
# Warmup Iteration   5: 163371.129 ops/s
# Warmup Iteration   6: 165425.036 ops/s
# Warmup Iteration   7: 164725.386 ops/s
# Warmup Iteration   8: 164160.868 ops/s
# Warmup Iteration   9: 127820.959 ops/s
# Warmup Iteration  10: 148201.732 ops/s
# Warmup Iteration  11: 165206.315 ops/s
# Warmup Iteration  12: 166027.547 ops/s
# Warmup Iteration  13: 165885.404 ops/s
# Warmup Iteration  14: 165741.311 ops/s
# Warmup Iteration  15: 165141.505 ops/s
# Warmup Iteration  16: 165721.507 ops/s
# Warmup Iteration  17: 165225.994 ops/s
# Warmup Iteration  18: 165235.678 ops/s
# Warmup Iteration  19: 166391.134 ops/s
# Warmup Iteration  20: 165547.724 ops/s
# Warmup Iteration  21: 165518.528 ops/s
# Warmup Iteration  22: 166054.672 ops/s
# Warmup Iteration  23: 165928.168 ops/s
# Warmup Iteration  24: 165792.763 ops/s
# Warmup Iteration  25: 165587.697 ops/s
# Warmup Iteration  26: 165259.753 ops/s
# Warmup Iteration  27: 165672.585 ops/s
# Warmup Iteration  28: 165125.975 ops/s
# Warmup Iteration  29: 165449.255 ops/s
# Warmup Iteration  30: 165443.222 ops/s
Iteration   1: 164880.068 ops/s
Iteration   2: 164554.405 ops/s
Iteration   3: 165427.652 ops/s
Iteration   4: 165363.984 ops/s
Iteration   5: 165761.353 ops/s
Iteration   6: 165109.900 ops/s
Iteration   7: 164969.859 ops/s
Iteration   8: 164778.373 ops/s
Iteration   9: 165811.060 ops/s
Iteration  10: 166050.424 ops/s
Iteration  11: 165058.673 ops/s
Iteration  12: 165115.622 ops/s
Iteration  13: 164812.488 ops/s
Iteration  14: 165404.076 ops/s
Iteration  15: 164325.621 ops/s
Iteration  16: 164991.355 ops/s
Iteration  17: 166284.643 ops/s
Iteration  18: 165725.369 ops/s
Iteration  19: 165054.048 ops/s
Iteration  20: 164916.465 ops/s
Iteration  21: 165531.009 ops/s
Iteration  22: 165077.114 ops/s
Iteration  23: 166149.126 ops/s
Iteration  24: 165141.861 ops/s
Iteration  25: 164867.367 ops/s
Iteration  26: 165186.107 ops/s
Iteration  27: 166033.672 ops/s
Iteration  28: 164684.722 ops/s
Iteration  29: 164734.072 ops/s
Iteration  30: 164956.679 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_282._Benchmark.benchmark_Cluster_282":
  165225.239 ±(99.9%) 332.602 ops/s [Average]
  (min, avg, max) = (164325.621, 165225.239, 166284.643), stdev = 497.823
  CI (99.9%): [164892.637, 165557.841] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_282._Benchmark.benchmark_Cluster_282  thrpt   30  165225.239 ± 332.602  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_283._Benchmark.benchmark_Cluster_283$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_283._Benchmark.benchmark_Cluster_283

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55865.171 ops/s
# Warmup Iteration   2: 78440.327 ops/s
# Warmup Iteration   3: 170053.483 ops/s
# Warmup Iteration   4: 167871.092 ops/s
# Warmup Iteration   5: 170760.951 ops/s
# Warmup Iteration   6: 170846.800 ops/s
# Warmup Iteration   7: 156368.935 ops/s
# Warmup Iteration   8: 132009.928 ops/s
# Warmup Iteration   9: 171016.290 ops/s
# Warmup Iteration  10: 171643.389 ops/s
# Warmup Iteration  11: 170202.426 ops/s
# Warmup Iteration  12: 170466.519 ops/s
# Warmup Iteration  13: 171260.301 ops/s
# Warmup Iteration  14: 171191.037 ops/s
# Warmup Iteration  15: 170899.936 ops/s
# Warmup Iteration  16: 170207.440 ops/s
# Warmup Iteration  17: 169847.898 ops/s
# Warmup Iteration  18: 170688.779 ops/s
# Warmup Iteration  19: 170899.478 ops/s
# Warmup Iteration  20: 170486.979 ops/s
# Warmup Iteration  21: 170888.845 ops/s
# Warmup Iteration  22: 170628.566 ops/s
# Warmup Iteration  23: 171631.101 ops/s
# Warmup Iteration  24: 170944.708 ops/s
# Warmup Iteration  25: 171442.708 ops/s
# Warmup Iteration  26: 170435.891 ops/s
# Warmup Iteration  27: 170902.701 ops/s
# Warmup Iteration  28: 171398.300 ops/s
# Warmup Iteration  29: 170627.643 ops/s
# Warmup Iteration  30: 171392.071 ops/s
Iteration   1: 170359.426 ops/s
Iteration   2: 170413.392 ops/s
Iteration   3: 171360.186 ops/s
Iteration   4: 171705.920 ops/s
Iteration   5: 171265.290 ops/s
Iteration   6: 171268.044 ops/s
Iteration   7: 171154.563 ops/s
Iteration   8: 171691.826 ops/s
Iteration   9: 171559.980 ops/s
Iteration  10: 171384.297 ops/s
Iteration  11: 171561.757 ops/s
Iteration  12: 171516.006 ops/s
Iteration  13: 172134.828 ops/s
Iteration  14: 171943.559 ops/s
Iteration  15: 172114.298 ops/s
Iteration  16: 170838.724 ops/s
Iteration  17: 171245.022 ops/s
Iteration  18: 171424.803 ops/s
Iteration  19: 171232.581 ops/s
Iteration  20: 171199.280 ops/s
Iteration  21: 171673.144 ops/s
Iteration  22: 171492.215 ops/s
Iteration  23: 171510.300 ops/s
Iteration  24: 170979.732 ops/s
Iteration  25: 171659.807 ops/s
Iteration  26: 170644.453 ops/s
Iteration  27: 171254.377 ops/s
Iteration  28: 171860.136 ops/s
Iteration  29: 171682.779 ops/s
Iteration  30: 171619.119 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_283._Benchmark.benchmark_Cluster_283":
  171391.661 ±(99.9%) 288.849 ops/s [Average]
  (min, avg, max) = (170359.426, 171391.661, 172134.828), stdev = 432.335
  CI (99.9%): [171102.813, 171680.510] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_283._Benchmark.benchmark_Cluster_283  thrpt   30  171391.661 ± 288.849  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_284._Benchmark.benchmark_Cluster_284$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_284._Benchmark.benchmark_Cluster_284

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57713.605 ops/s
# Warmup Iteration   2: 90212.040 ops/s
# Warmup Iteration   3: 115561.769 ops/s
# Warmup Iteration   4: 160390.203 ops/s
# Warmup Iteration   5: 161258.243 ops/s
# Warmup Iteration   6: 158398.896 ops/s
# Warmup Iteration   7: 159746.974 ops/s
# Warmup Iteration   8: 158454.117 ops/s
# Warmup Iteration   9: 156103.654 ops/s
# Warmup Iteration  10: 160675.508 ops/s
# Warmup Iteration  11: 122699.269 ops/s
# Warmup Iteration  12: 144619.584 ops/s
# Warmup Iteration  13: 159707.955 ops/s
# Warmup Iteration  14: 160119.652 ops/s
# Warmup Iteration  15: 160254.306 ops/s
# Warmup Iteration  16: 159990.298 ops/s
# Warmup Iteration  17: 164194.506 ops/s
# Warmup Iteration  18: 164945.058 ops/s
# Warmup Iteration  19: 164538.768 ops/s
# Warmup Iteration  20: 165159.387 ops/s
# Warmup Iteration  21: 165526.875 ops/s
# Warmup Iteration  22: 164674.661 ops/s
# Warmup Iteration  23: 164418.749 ops/s
# Warmup Iteration  24: 164737.655 ops/s
# Warmup Iteration  25: 164712.435 ops/s
# Warmup Iteration  26: 164935.688 ops/s
# Warmup Iteration  27: 164800.384 ops/s
# Warmup Iteration  28: 165141.853 ops/s
# Warmup Iteration  29: 165268.855 ops/s
# Warmup Iteration  30: 165294.408 ops/s
Iteration   1: 165360.095 ops/s
Iteration   2: 165159.488 ops/s
Iteration   3: 165193.128 ops/s
Iteration   4: 164635.695 ops/s
Iteration   5: 165798.416 ops/s
Iteration   6: 164969.217 ops/s
Iteration   7: 165381.976 ops/s
Iteration   8: 164705.135 ops/s
Iteration   9: 164166.464 ops/s
Iteration  10: 165734.595 ops/s
Iteration  11: 164902.463 ops/s
Iteration  12: 165193.832 ops/s
Iteration  13: 165452.107 ops/s
Iteration  14: 165374.954 ops/s
Iteration  15: 165375.211 ops/s
Iteration  16: 164970.020 ops/s
Iteration  17: 164868.009 ops/s
Iteration  18: 163979.607 ops/s
Iteration  19: 164162.198 ops/s
Iteration  20: 164486.079 ops/s
Iteration  21: 163941.539 ops/s
Iteration  22: 163783.468 ops/s
Iteration  23: 163798.554 ops/s
Iteration  24: 165565.071 ops/s
Iteration  25: 164296.906 ops/s
Iteration  26: 164556.000 ops/s
Iteration  27: 164610.022 ops/s
Iteration  28: 164848.084 ops/s
Iteration  29: 164644.338 ops/s
Iteration  30: 165013.340 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_284._Benchmark.benchmark_Cluster_284":
  164830.867 ±(99.9%) 382.142 ops/s [Average]
  (min, avg, max) = (163783.468, 164830.867, 165798.416), stdev = 571.972
  CI (99.9%): [164448.725, 165213.009] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_284._Benchmark.benchmark_Cluster_284  thrpt   30  164830.867 ± 382.142  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_285._Benchmark.benchmark_Cluster_285$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_285._Benchmark.benchmark_Cluster_285

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77543.968 ops/s
# Warmup Iteration   2: 97266.207 ops/s
# Warmup Iteration   3: 96397.784 ops/s
# Warmup Iteration   4: 110826.963 ops/s
# Warmup Iteration   5: 140769.663 ops/s
# Warmup Iteration   6: 140227.502 ops/s
# Warmup Iteration   7: 140977.846 ops/s
# Warmup Iteration   8: 140506.409 ops/s
# Warmup Iteration   9: 138760.212 ops/s
# Warmup Iteration  10: 140752.959 ops/s
# Warmup Iteration  11: 140269.949 ops/s
# Warmup Iteration  12: 140734.822 ops/s
# Warmup Iteration  13: 140284.028 ops/s
# Warmup Iteration  14: 139954.700 ops/s
# Warmup Iteration  15: 140188.017 ops/s
# Warmup Iteration  16: 140071.833 ops/s
# Warmup Iteration  17: 144188.688 ops/s
# Warmup Iteration  18: 144482.590 ops/s
# Warmup Iteration  19: 101599.895 ops/s
# Warmup Iteration  20: 133302.236 ops/s
# Warmup Iteration  21: 144208.930 ops/s
# Warmup Iteration  22: 143977.049 ops/s
# Warmup Iteration  23: 143187.061 ops/s
# Warmup Iteration  24: 143982.963 ops/s
# Warmup Iteration  25: 143261.462 ops/s
# Warmup Iteration  26: 143765.885 ops/s
# Warmup Iteration  27: 144173.638 ops/s
# Warmup Iteration  28: 143865.800 ops/s
# Warmup Iteration  29: 143943.893 ops/s
# Warmup Iteration  30: 144560.762 ops/s
Iteration   1: 144566.086 ops/s
Iteration   2: 144640.162 ops/s
Iteration   3: 144307.458 ops/s
Iteration   4: 144059.854 ops/s
Iteration   5: 143744.304 ops/s
Iteration   6: 144210.701 ops/s
Iteration   7: 144471.995 ops/s
Iteration   8: 143914.954 ops/s
Iteration   9: 144207.692 ops/s
Iteration  10: 143854.288 ops/s
Iteration  11: 143631.100 ops/s
Iteration  12: 144239.192 ops/s
Iteration  13: 144215.236 ops/s
Iteration  14: 144280.251 ops/s
Iteration  15: 143619.543 ops/s
Iteration  16: 143541.168 ops/s
Iteration  17: 144074.719 ops/s
Iteration  18: 143614.068 ops/s
Iteration  19: 143610.914 ops/s
Iteration  20: 143478.356 ops/s
Iteration  21: 143929.393 ops/s
Iteration  22: 143992.995 ops/s
Iteration  23: 144180.752 ops/s
Iteration  24: 144437.675 ops/s
Iteration  25: 144340.020 ops/s
Iteration  26: 144266.995 ops/s
Iteration  27: 144240.950 ops/s
Iteration  28: 144067.762 ops/s
Iteration  29: 144607.893 ops/s
Iteration  30: 144097.059 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_285._Benchmark.benchmark_Cluster_285":
  144081.451 ±(99.9%) 219.940 ops/s [Average]
  (min, avg, max) = (143478.356, 144081.451, 144640.162), stdev = 329.196
  CI (99.9%): [143861.511, 144301.391] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_285._Benchmark.benchmark_Cluster_285  thrpt   30  144081.451 ± 219.940  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_286._Benchmark.benchmark_Cluster_286$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_286._Benchmark.benchmark_Cluster_286

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79938.717 ops/s
# Warmup Iteration   2: 86379.009 ops/s
# Warmup Iteration   3: 96645.482 ops/s
# Warmup Iteration   4: 135020.897 ops/s
# Warmup Iteration   5: 135172.735 ops/s
# Warmup Iteration   6: 135211.047 ops/s
# Warmup Iteration   7: 133634.512 ops/s
# Warmup Iteration   8: 135411.622 ops/s
# Warmup Iteration   9: 135450.078 ops/s
# Warmup Iteration  10: 134810.833 ops/s
# Warmup Iteration  11: 135089.603 ops/s
# Warmup Iteration  12: 134752.479 ops/s
# Warmup Iteration  13: 134965.026 ops/s
# Warmup Iteration  14: 97061.028 ops/s
# Warmup Iteration  15: 128892.199 ops/s
# Warmup Iteration  16: 134926.596 ops/s
# Warmup Iteration  17: 141834.221 ops/s
# Warmup Iteration  18: 142893.644 ops/s
# Warmup Iteration  19: 141943.897 ops/s
# Warmup Iteration  20: 143067.384 ops/s
# Warmup Iteration  21: 142366.404 ops/s
# Warmup Iteration  22: 142471.904 ops/s
# Warmup Iteration  23: 142282.147 ops/s
# Warmup Iteration  24: 142584.720 ops/s
# Warmup Iteration  25: 142216.146 ops/s
# Warmup Iteration  26: 141858.545 ops/s
# Warmup Iteration  27: 142673.456 ops/s
# Warmup Iteration  28: 142100.215 ops/s
# Warmup Iteration  29: 141872.678 ops/s
# Warmup Iteration  30: 141999.244 ops/s
Iteration   1: 142294.402 ops/s
Iteration   2: 143036.692 ops/s
Iteration   3: 141691.307 ops/s
Iteration   4: 142111.261 ops/s
Iteration   5: 142339.508 ops/s
Iteration   6: 141544.936 ops/s
Iteration   7: 142821.287 ops/s
Iteration   8: 141722.894 ops/s
Iteration   9: 140726.860 ops/s
Iteration  10: 142905.478 ops/s
Iteration  11: 142072.542 ops/s
Iteration  12: 142296.218 ops/s
Iteration  13: 141257.344 ops/s
Iteration  14: 142157.793 ops/s
Iteration  15: 143021.588 ops/s
Iteration  16: 142076.050 ops/s
Iteration  17: 141833.321 ops/s
Iteration  18: 141680.189 ops/s
Iteration  19: 141856.457 ops/s
Iteration  20: 141674.841 ops/s
Iteration  21: 142445.056 ops/s
Iteration  22: 142174.894 ops/s
Iteration  23: 142752.051 ops/s
Iteration  24: 142192.170 ops/s
Iteration  25: 141804.169 ops/s
Iteration  26: 142615.368 ops/s
Iteration  27: 142470.873 ops/s
Iteration  28: 142177.593 ops/s
Iteration  29: 141585.589 ops/s
Iteration  30: 142621.100 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_286._Benchmark.benchmark_Cluster_286":
  142131.994 ±(99.9%) 357.322 ops/s [Average]
  (min, avg, max) = (140726.860, 142131.994, 143036.692), stdev = 534.823
  CI (99.9%): [141774.672, 142489.317] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_286._Benchmark.benchmark_Cluster_286  thrpt   30  142131.994 ± 357.322  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_287._Benchmark.benchmark_Cluster_287$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_287._Benchmark.benchmark_Cluster_287

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60413.400 ops/s
# Warmup Iteration   2: 83889.568 ops/s
# Warmup Iteration   3: 88321.862 ops/s
# Warmup Iteration   4: 145022.218 ops/s
# Warmup Iteration   5: 144894.502 ops/s
# Warmup Iteration   6: 145392.904 ops/s
# Warmup Iteration   7: 144552.051 ops/s
# Warmup Iteration   8: 145467.698 ops/s
# Warmup Iteration   9: 146239.918 ops/s
# Warmup Iteration  10: 145511.786 ops/s
# Warmup Iteration  11: 145964.889 ops/s
# Warmup Iteration  12: 145828.169 ops/s
# Warmup Iteration  13: 101726.631 ops/s
# Warmup Iteration  14: 134568.782 ops/s
# Warmup Iteration  15: 145499.494 ops/s
# Warmup Iteration  16: 145396.189 ops/s
# Warmup Iteration  17: 147512.560 ops/s
# Warmup Iteration  18: 147085.707 ops/s
# Warmup Iteration  19: 147128.283 ops/s
# Warmup Iteration  20: 147597.504 ops/s
# Warmup Iteration  21: 147216.037 ops/s
# Warmup Iteration  22: 148193.195 ops/s
# Warmup Iteration  23: 147075.293 ops/s
# Warmup Iteration  24: 147458.967 ops/s
# Warmup Iteration  25: 148732.848 ops/s
# Warmup Iteration  26: 148459.391 ops/s
# Warmup Iteration  27: 148497.872 ops/s
# Warmup Iteration  28: 147850.991 ops/s
# Warmup Iteration  29: 147007.564 ops/s
# Warmup Iteration  30: 148159.484 ops/s
Iteration   1: 148552.836 ops/s
Iteration   2: 148577.704 ops/s
Iteration   3: 147485.561 ops/s
Iteration   4: 148092.295 ops/s
Iteration   5: 148043.421 ops/s
Iteration   6: 147848.788 ops/s
Iteration   7: 147574.331 ops/s
Iteration   8: 147681.651 ops/s
Iteration   9: 147348.239 ops/s
Iteration  10: 147994.392 ops/s
Iteration  11: 148318.616 ops/s
Iteration  12: 147706.061 ops/s
Iteration  13: 148329.590 ops/s
Iteration  14: 147772.948 ops/s
Iteration  15: 147467.766 ops/s
Iteration  16: 146476.635 ops/s
Iteration  17: 146916.288 ops/s
Iteration  18: 146879.160 ops/s
Iteration  19: 147288.650 ops/s
Iteration  20: 147897.316 ops/s
Iteration  21: 148195.326 ops/s
Iteration  22: 148204.714 ops/s
Iteration  23: 148505.192 ops/s
Iteration  24: 147923.088 ops/s
Iteration  25: 147702.252 ops/s
Iteration  26: 147060.661 ops/s
Iteration  27: 147426.123 ops/s
Iteration  28: 147028.964 ops/s
Iteration  29: 147146.365 ops/s
Iteration  30: 147244.572 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_287._Benchmark.benchmark_Cluster_287":
  147689.650 ±(99.9%) 362.523 ops/s [Average]
  (min, avg, max) = (146476.635, 147689.650, 148577.704), stdev = 542.607
  CI (99.9%): [147327.128, 148052.173] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_287._Benchmark.benchmark_Cluster_287  thrpt   30  147689.650 ± 362.523  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_288._Benchmark.benchmark_Cluster_288$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_288._Benchmark.benchmark_Cluster_288

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 85773.255 ops/s
# Warmup Iteration   2: 102862.529 ops/s
# Warmup Iteration   3: 142070.883 ops/s
# Warmup Iteration   4: 182715.618 ops/s
# Warmup Iteration   5: 183501.274 ops/s
# Warmup Iteration   6: 181183.461 ops/s
# Warmup Iteration   7: 182949.248 ops/s
# Warmup Iteration   8: 182764.790 ops/s
# Warmup Iteration   9: 182845.536 ops/s
# Warmup Iteration  10: 183150.181 ops/s
# Warmup Iteration  11: 146065.513 ops/s
# Warmup Iteration  12: 161225.568 ops/s
# Warmup Iteration  13: 183593.662 ops/s
# Warmup Iteration  14: 182593.862 ops/s
# Warmup Iteration  15: 182942.951 ops/s
# Warmup Iteration  16: 183068.360 ops/s
# Warmup Iteration  17: 185785.299 ops/s
# Warmup Iteration  18: 185992.041 ops/s
# Warmup Iteration  19: 184162.556 ops/s
# Warmup Iteration  20: 185195.369 ops/s
# Warmup Iteration  21: 185073.489 ops/s
# Warmup Iteration  22: 185938.794 ops/s
# Warmup Iteration  23: 185040.754 ops/s
# Warmup Iteration  24: 184880.422 ops/s
# Warmup Iteration  25: 186391.285 ops/s
# Warmup Iteration  26: 185370.725 ops/s
# Warmup Iteration  27: 184878.149 ops/s
# Warmup Iteration  28: 184990.095 ops/s
# Warmup Iteration  29: 185828.561 ops/s
# Warmup Iteration  30: 185822.141 ops/s
Iteration   1: 185473.193 ops/s
Iteration   2: 185903.232 ops/s
Iteration   3: 185861.801 ops/s
Iteration   4: 185157.323 ops/s
Iteration   5: 185390.576 ops/s
Iteration   6: 185656.100 ops/s
Iteration   7: 185562.486 ops/s
Iteration   8: 185753.509 ops/s
Iteration   9: 186153.581 ops/s
Iteration  10: 186794.327 ops/s
Iteration  11: 185880.778 ops/s
Iteration  12: 185459.053 ops/s
Iteration  13: 185835.142 ops/s
Iteration  14: 185335.057 ops/s
Iteration  15: 184684.883 ops/s
Iteration  16: 185292.567 ops/s
Iteration  17: 185254.912 ops/s
Iteration  18: 185154.475 ops/s
Iteration  19: 185003.815 ops/s
Iteration  20: 182962.520 ops/s
Iteration  21: 183042.072 ops/s
Iteration  22: 185487.710 ops/s
Iteration  23: 185840.743 ops/s
Iteration  24: 184983.021 ops/s
Iteration  25: 186004.134 ops/s
Iteration  26: 185882.365 ops/s
Iteration  27: 185448.167 ops/s
Iteration  28: 185298.150 ops/s
Iteration  29: 185403.185 ops/s
Iteration  30: 185524.711 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_288._Benchmark.benchmark_Cluster_288":
  185382.786 ±(99.9%) 510.680 ops/s [Average]
  (min, avg, max) = (182962.520, 185382.786, 186794.327), stdev = 764.362
  CI (99.9%): [184872.106, 185893.467] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_288._Benchmark.benchmark_Cluster_288  thrpt   30  185382.786 ± 510.680  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_289._Benchmark.benchmark_Cluster_289$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_289._Benchmark.benchmark_Cluster_289

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 99866.668 ops/s
# Warmup Iteration   2: 129501.316 ops/s
# Warmup Iteration   3: 200202.846 ops/s
# Warmup Iteration   4: 235850.254 ops/s
# Warmup Iteration   5: 235822.269 ops/s
# Warmup Iteration   6: 236190.572 ops/s
# Warmup Iteration   7: 235399.192 ops/s
# Warmup Iteration   8: 236787.835 ops/s
# Warmup Iteration   9: 237477.383 ops/s
# Warmup Iteration  10: 166222.928 ops/s
# Warmup Iteration  11: 234097.937 ops/s
# Warmup Iteration  12: 237140.239 ops/s
# Warmup Iteration  13: 236612.775 ops/s
# Warmup Iteration  14: 236480.929 ops/s
# Warmup Iteration  15: 237424.617 ops/s
# Warmup Iteration  16: 237664.284 ops/s
# Warmup Iteration  17: 237193.797 ops/s
# Warmup Iteration  18: 237128.862 ops/s
# Warmup Iteration  19: 236606.778 ops/s
# Warmup Iteration  20: 237062.961 ops/s
# Warmup Iteration  21: 237221.482 ops/s
# Warmup Iteration  22: 236451.901 ops/s
# Warmup Iteration  23: 236310.902 ops/s
# Warmup Iteration  24: 236939.784 ops/s
# Warmup Iteration  25: 237350.389 ops/s
# Warmup Iteration  26: 236993.975 ops/s
# Warmup Iteration  27: 236708.401 ops/s
# Warmup Iteration  28: 236488.954 ops/s
# Warmup Iteration  29: 236621.988 ops/s
# Warmup Iteration  30: 237382.557 ops/s
Iteration   1: 236713.417 ops/s
Iteration   2: 237515.497 ops/s
Iteration   3: 237955.514 ops/s
Iteration   4: 237549.644 ops/s
Iteration   5: 236993.413 ops/s
Iteration   6: 237803.286 ops/s
Iteration   7: 237374.692 ops/s
Iteration   8: 236721.107 ops/s
Iteration   9: 237344.697 ops/s
Iteration  10: 236901.022 ops/s
Iteration  11: 237305.922 ops/s
Iteration  12: 236735.152 ops/s
Iteration  13: 236971.319 ops/s
Iteration  14: 236380.410 ops/s
Iteration  15: 235835.578 ops/s
Iteration  16: 237372.974 ops/s
Iteration  17: 237205.696 ops/s
Iteration  18: 237977.544 ops/s
Iteration  19: 237307.428 ops/s
Iteration  20: 237659.682 ops/s
Iteration  21: 237962.650 ops/s
Iteration  22: 237138.878 ops/s
Iteration  23: 237517.653 ops/s
Iteration  24: 237858.535 ops/s
Iteration  25: 237841.233 ops/s
Iteration  26: 237616.600 ops/s
Iteration  27: 237740.828 ops/s
Iteration  28: 237335.011 ops/s
Iteration  29: 236997.449 ops/s
Iteration  30: 237114.625 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_289._Benchmark.benchmark_Cluster_289":
  237291.582 ±(99.9%) 334.945 ops/s [Average]
  (min, avg, max) = (235835.578, 237291.582, 237977.544), stdev = 501.330
  CI (99.9%): [236956.637, 237626.527] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_289._Benchmark.benchmark_Cluster_289  thrpt   30  237291.582 ± 334.945  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_29._Benchmark.benchmark_Cluster_29$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_29._Benchmark.benchmark_Cluster_29

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79307.115 ops/s
# Warmup Iteration   2: 113409.017 ops/s
# Warmup Iteration   3: 158392.663 ops/s
# Warmup Iteration   4: 198123.826 ops/s
# Warmup Iteration   5: 196419.238 ops/s
# Warmup Iteration   6: 198056.438 ops/s
# Warmup Iteration   7: 197639.506 ops/s
# Warmup Iteration   8: 197842.000 ops/s
# Warmup Iteration   9: 197705.567 ops/s
# Warmup Iteration  10: 198900.106 ops/s
# Warmup Iteration  11: 137979.428 ops/s
# Warmup Iteration  12: 198929.559 ops/s
# Warmup Iteration  13: 198495.464 ops/s
# Warmup Iteration  14: 198206.478 ops/s
# Warmup Iteration  15: 198357.072 ops/s
# Warmup Iteration  16: 198297.636 ops/s
# Warmup Iteration  17: 198578.099 ops/s
# Warmup Iteration  18: 198676.512 ops/s
# Warmup Iteration  19: 198741.551 ops/s
# Warmup Iteration  20: 198092.767 ops/s
# Warmup Iteration  21: 197607.862 ops/s
# Warmup Iteration  22: 198870.257 ops/s
# Warmup Iteration  23: 199151.372 ops/s
# Warmup Iteration  24: 199148.609 ops/s
# Warmup Iteration  25: 197970.059 ops/s
# Warmup Iteration  26: 198510.573 ops/s
# Warmup Iteration  27: 198748.971 ops/s
# Warmup Iteration  28: 198225.304 ops/s
# Warmup Iteration  29: 198757.060 ops/s
# Warmup Iteration  30: 198629.151 ops/s
Iteration   1: 198514.486 ops/s
Iteration   2: 198484.637 ops/s
Iteration   3: 198293.946 ops/s
Iteration   4: 198652.097 ops/s
Iteration   5: 198291.013 ops/s
Iteration   6: 198783.654 ops/s
Iteration   7: 198520.672 ops/s
Iteration   8: 198714.920 ops/s
Iteration   9: 198933.938 ops/s
Iteration  10: 198526.499 ops/s
Iteration  11: 199235.791 ops/s
Iteration  12: 198855.443 ops/s
Iteration  13: 198856.986 ops/s
Iteration  14: 198558.094 ops/s
Iteration  15: 198754.444 ops/s
Iteration  16: 198468.428 ops/s
Iteration  17: 198854.085 ops/s
Iteration  18: 198015.420 ops/s
Iteration  19: 197694.010 ops/s
Iteration  20: 198654.198 ops/s
Iteration  21: 199233.354 ops/s
Iteration  22: 198301.510 ops/s
Iteration  23: 198690.381 ops/s
Iteration  24: 198962.720 ops/s
Iteration  25: 198865.975 ops/s
Iteration  26: 197511.450 ops/s
Iteration  27: 197632.188 ops/s
Iteration  28: 198848.045 ops/s
Iteration  29: 198091.802 ops/s
Iteration  30: 198474.252 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_29._Benchmark.benchmark_Cluster_29":
  198542.481 ±(99.9%) 284.264 ops/s [Average]
  (min, avg, max) = (197511.450, 198542.481, 199235.791), stdev = 425.472
  CI (99.9%): [198258.218, 198826.745] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_29._Benchmark.benchmark_Cluster_29  thrpt   30  198542.481 ± 284.264  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_290._Benchmark.benchmark_Cluster_290$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_290._Benchmark.benchmark_Cluster_290

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71435.170 ops/s
# Warmup Iteration   2: 101652.879 ops/s
# Warmup Iteration   3: 102156.411 ops/s
# Warmup Iteration   4: 145581.755 ops/s
# Warmup Iteration   5: 156298.479 ops/s
# Warmup Iteration   6: 156349.458 ops/s
# Warmup Iteration   7: 154826.469 ops/s
# Warmup Iteration   8: 158015.170 ops/s
# Warmup Iteration   9: 157615.653 ops/s
# Warmup Iteration  10: 157325.058 ops/s
# Warmup Iteration  11: 157356.883 ops/s
# Warmup Iteration  12: 157282.477 ops/s
# Warmup Iteration  13: 157014.376 ops/s
# Warmup Iteration  14: 157376.380 ops/s
# Warmup Iteration  15: 135449.609 ops/s
# Warmup Iteration  16: 126457.041 ops/s
# Warmup Iteration  17: 161052.590 ops/s
# Warmup Iteration  18: 161243.984 ops/s
# Warmup Iteration  19: 160773.848 ops/s
# Warmup Iteration  20: 160853.701 ops/s
# Warmup Iteration  21: 160520.940 ops/s
# Warmup Iteration  22: 160315.886 ops/s
# Warmup Iteration  23: 160418.667 ops/s
# Warmup Iteration  24: 161034.658 ops/s
# Warmup Iteration  25: 160326.461 ops/s
# Warmup Iteration  26: 160684.270 ops/s
# Warmup Iteration  27: 160789.306 ops/s
# Warmup Iteration  28: 161095.719 ops/s
# Warmup Iteration  29: 161164.352 ops/s
# Warmup Iteration  30: 161186.755 ops/s
Iteration   1: 159900.717 ops/s
Iteration   2: 160770.155 ops/s
Iteration   3: 160553.304 ops/s
Iteration   4: 161069.789 ops/s
Iteration   5: 159386.021 ops/s
Iteration   6: 160568.760 ops/s
Iteration   7: 159519.092 ops/s
Iteration   8: 160652.371 ops/s
Iteration   9: 159687.251 ops/s
Iteration  10: 161127.950 ops/s
Iteration  11: 160347.985 ops/s
Iteration  12: 160875.977 ops/s
Iteration  13: 160779.446 ops/s
Iteration  14: 160693.672 ops/s
Iteration  15: 160957.284 ops/s
Iteration  16: 160578.923 ops/s
Iteration  17: 160722.582 ops/s
Iteration  18: 160774.297 ops/s
Iteration  19: 161261.469 ops/s
Iteration  20: 160868.863 ops/s
Iteration  21: 161050.156 ops/s
Iteration  22: 160679.445 ops/s
Iteration  23: 160845.197 ops/s
Iteration  24: 160673.508 ops/s
Iteration  25: 161021.972 ops/s
Iteration  26: 161037.436 ops/s
Iteration  27: 160874.480 ops/s
Iteration  28: 161099.612 ops/s
Iteration  29: 160501.081 ops/s
Iteration  30: 161071.829 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_290._Benchmark.benchmark_Cluster_290":
  160665.021 ±(99.9%) 314.767 ops/s [Average]
  (min, avg, max) = (159386.021, 160665.021, 161261.469), stdev = 471.128
  CI (99.9%): [160350.254, 160979.788] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_290._Benchmark.benchmark_Cluster_290  thrpt   30  160665.021 ± 314.767  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_291._Benchmark.benchmark_Cluster_291$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_291._Benchmark.benchmark_Cluster_291

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 98242.776 ops/s
# Warmup Iteration   2: 123550.266 ops/s
# Warmup Iteration   3: 151668.338 ops/s
# Warmup Iteration   4: 203134.059 ops/s
# Warmup Iteration   5: 202819.516 ops/s
# Warmup Iteration   6: 201478.709 ops/s
# Warmup Iteration   7: 203423.396 ops/s
# Warmup Iteration   8: 203014.383 ops/s
# Warmup Iteration   9: 202318.916 ops/s
# Warmup Iteration  10: 202552.745 ops/s
# Warmup Iteration  11: 202699.907 ops/s
# Warmup Iteration  12: 172617.932 ops/s
# Warmup Iteration  13: 170348.858 ops/s
# Warmup Iteration  14: 202999.542 ops/s
# Warmup Iteration  15: 202933.963 ops/s
# Warmup Iteration  16: 202605.770 ops/s
# Warmup Iteration  17: 202253.846 ops/s
# Warmup Iteration  18: 202613.607 ops/s
# Warmup Iteration  19: 202512.114 ops/s
# Warmup Iteration  20: 202237.375 ops/s
# Warmup Iteration  21: 202755.282 ops/s
# Warmup Iteration  22: 203215.690 ops/s
# Warmup Iteration  23: 202571.739 ops/s
# Warmup Iteration  24: 202117.416 ops/s
# Warmup Iteration  25: 202047.579 ops/s
# Warmup Iteration  26: 202946.725 ops/s
# Warmup Iteration  27: 203072.716 ops/s
# Warmup Iteration  28: 202338.809 ops/s
# Warmup Iteration  29: 202242.889 ops/s
# Warmup Iteration  30: 202128.554 ops/s
Iteration   1: 201896.478 ops/s
Iteration   2: 202818.200 ops/s
Iteration   3: 202905.858 ops/s
Iteration   4: 203259.808 ops/s
Iteration   5: 202278.221 ops/s
Iteration   6: 201922.432 ops/s
Iteration   7: 203138.218 ops/s
Iteration   8: 203351.286 ops/s
Iteration   9: 203255.484 ops/s
Iteration  10: 203397.768 ops/s
Iteration  11: 202335.620 ops/s
Iteration  12: 202901.296 ops/s
Iteration  13: 203045.015 ops/s
Iteration  14: 202279.582 ops/s
Iteration  15: 202589.921 ops/s
Iteration  16: 202793.025 ops/s
Iteration  17: 201985.741 ops/s
Iteration  18: 201484.264 ops/s
Iteration  19: 201721.364 ops/s
Iteration  20: 202591.777 ops/s
Iteration  21: 202929.192 ops/s
Iteration  22: 202298.136 ops/s
Iteration  23: 202831.420 ops/s
Iteration  24: 203022.172 ops/s
Iteration  25: 202920.046 ops/s
Iteration  26: 202710.047 ops/s
Iteration  27: 203101.175 ops/s
Iteration  28: 202479.519 ops/s
Iteration  29: 201784.973 ops/s
Iteration  30: 201450.551 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_291._Benchmark.benchmark_Cluster_291":
  202582.620 ±(99.9%) 377.029 ops/s [Average]
  (min, avg, max) = (201450.551, 202582.620, 203397.768), stdev = 564.319
  CI (99.9%): [202205.591, 202959.649] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_291._Benchmark.benchmark_Cluster_291  thrpt   30  202582.620 ± 377.029  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_292._Benchmark.benchmark_Cluster_292$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_292._Benchmark.benchmark_Cluster_292

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86824.374 ops/s
# Warmup Iteration   2: 126663.214 ops/s
# Warmup Iteration   3: 288661.490 ops/s
# Warmup Iteration   4: 286211.135 ops/s
# Warmup Iteration   5: 289177.960 ops/s
# Warmup Iteration   6: 254522.675 ops/s
# Warmup Iteration   7: 226592.614 ops/s
# Warmup Iteration   8: 286795.253 ops/s
# Warmup Iteration   9: 288798.184 ops/s
# Warmup Iteration  10: 288988.243 ops/s
# Warmup Iteration  11: 289603.887 ops/s
# Warmup Iteration  12: 289478.118 ops/s
# Warmup Iteration  13: 288807.537 ops/s
# Warmup Iteration  14: 289473.435 ops/s
# Warmup Iteration  15: 291182.408 ops/s
# Warmup Iteration  16: 290868.841 ops/s
# Warmup Iteration  17: 290817.739 ops/s
# Warmup Iteration  18: 289765.118 ops/s
# Warmup Iteration  19: 290931.125 ops/s
# Warmup Iteration  20: 290738.323 ops/s
# Warmup Iteration  21: 291522.114 ops/s
# Warmup Iteration  22: 291147.728 ops/s
# Warmup Iteration  23: 290221.982 ops/s
# Warmup Iteration  24: 290404.676 ops/s
# Warmup Iteration  25: 289725.928 ops/s
# Warmup Iteration  26: 290894.651 ops/s
# Warmup Iteration  27: 289335.101 ops/s
# Warmup Iteration  28: 290677.291 ops/s
# Warmup Iteration  29: 289003.067 ops/s
# Warmup Iteration  30: 289356.948 ops/s
Iteration   1: 289147.618 ops/s
Iteration   2: 289172.131 ops/s
Iteration   3: 288792.615 ops/s
Iteration   4: 288307.023 ops/s
Iteration   5: 290925.920 ops/s
Iteration   6: 290189.537 ops/s
Iteration   7: 290395.019 ops/s
Iteration   8: 291987.097 ops/s
Iteration   9: 291243.462 ops/s
Iteration  10: 289749.807 ops/s
Iteration  11: 291136.789 ops/s
Iteration  12: 290458.188 ops/s
Iteration  13: 290306.954 ops/s
Iteration  14: 290585.628 ops/s
Iteration  15: 292070.473 ops/s
Iteration  16: 290888.676 ops/s
Iteration  17: 290494.929 ops/s
Iteration  18: 288407.491 ops/s
Iteration  19: 290065.026 ops/s
Iteration  20: 290602.351 ops/s
Iteration  21: 290355.123 ops/s
Iteration  22: 292066.259 ops/s
Iteration  23: 291003.684 ops/s
Iteration  24: 292305.199 ops/s
Iteration  25: 290480.840 ops/s
Iteration  26: 290553.215 ops/s
Iteration  27: 289642.852 ops/s
Iteration  28: 290307.861 ops/s
Iteration  29: 290478.934 ops/s
Iteration  30: 291382.760 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_292._Benchmark.benchmark_Cluster_292":
  290450.115 ±(99.9%) 680.059 ops/s [Average]
  (min, avg, max) = (288307.023, 290450.115, 292305.199), stdev = 1017.881
  CI (99.9%): [289770.056, 291130.175] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_292._Benchmark.benchmark_Cluster_292  thrpt   30  290450.115 ± 680.059  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_293._Benchmark.benchmark_Cluster_293$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_293._Benchmark.benchmark_Cluster_293

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 85144.331 ops/s
# Warmup Iteration   2: 94806.123 ops/s
# Warmup Iteration   3: 96324.022 ops/s
# Warmup Iteration   4: 102961.361 ops/s
# Warmup Iteration   5: 132224.837 ops/s
# Warmup Iteration   6: 131898.810 ops/s
# Warmup Iteration   7: 131365.455 ops/s
# Warmup Iteration   8: 131364.310 ops/s
# Warmup Iteration   9: 131522.799 ops/s
# Warmup Iteration  10: 130269.846 ops/s
# Warmup Iteration  11: 131641.066 ops/s
# Warmup Iteration  12: 131821.958 ops/s
# Warmup Iteration  13: 131999.027 ops/s
# Warmup Iteration  14: 131621.963 ops/s
# Warmup Iteration  15: 131364.416 ops/s
# Warmup Iteration  16: 131539.909 ops/s
# Warmup Iteration  17: 136873.613 ops/s
# Warmup Iteration  18: 136051.368 ops/s
# Warmup Iteration  19: 135839.830 ops/s
# Warmup Iteration  20: 131772.131 ops/s
# Warmup Iteration  21: 99435.694 ops/s
# Warmup Iteration  22: 133871.558 ops/s
# Warmup Iteration  23: 136576.089 ops/s
# Warmup Iteration  24: 135826.277 ops/s
# Warmup Iteration  25: 136489.876 ops/s
# Warmup Iteration  26: 136547.996 ops/s
# Warmup Iteration  27: 136308.324 ops/s
# Warmup Iteration  28: 136029.642 ops/s
# Warmup Iteration  29: 136384.340 ops/s
# Warmup Iteration  30: 136312.781 ops/s
Iteration   1: 135825.939 ops/s
Iteration   2: 135098.431 ops/s
Iteration   3: 136246.704 ops/s
Iteration   4: 136429.751 ops/s
Iteration   5: 136480.342 ops/s
Iteration   6: 136252.445 ops/s
Iteration   7: 135944.384 ops/s
Iteration   8: 135513.822 ops/s
Iteration   9: 135932.506 ops/s
Iteration  10: 136370.646 ops/s
Iteration  11: 135647.410 ops/s
Iteration  12: 135880.493 ops/s
Iteration  13: 135582.042 ops/s
Iteration  14: 135658.596 ops/s
Iteration  15: 135734.575 ops/s
Iteration  16: 135500.683 ops/s
Iteration  17: 136343.606 ops/s
Iteration  18: 135940.710 ops/s
Iteration  19: 136189.809 ops/s
Iteration  20: 136074.103 ops/s
Iteration  21: 136309.476 ops/s
Iteration  22: 136188.569 ops/s
Iteration  23: 135603.761 ops/s
Iteration  24: 136103.382 ops/s
Iteration  25: 136057.911 ops/s
Iteration  26: 136204.557 ops/s
Iteration  27: 136540.526 ops/s
Iteration  28: 136140.628 ops/s
Iteration  29: 136313.767 ops/s
Iteration  30: 136303.297 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_293._Benchmark.benchmark_Cluster_293":
  136013.762 ±(99.9%) 232.707 ops/s [Average]
  (min, avg, max) = (135098.431, 136013.762, 136540.526), stdev = 348.305
  CI (99.9%): [135781.056, 136246.469] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_293._Benchmark.benchmark_Cluster_293  thrpt   30  136013.762 ± 232.707  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_294._Benchmark.benchmark_Cluster_294$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_294._Benchmark.benchmark_Cluster_294

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 118835.402 ops/s
# Warmup Iteration   2: 128529.477 ops/s
# Warmup Iteration   3: 130271.403 ops/s
# Warmup Iteration   4: 130008.777 ops/s
# Warmup Iteration   5: 146891.234 ops/s
# Warmup Iteration   6: 164081.245 ops/s
# Warmup Iteration   7: 163714.472 ops/s
# Warmup Iteration   8: 163451.716 ops/s
# Warmup Iteration   9: 164440.014 ops/s
# Warmup Iteration  10: 164219.360 ops/s
# Warmup Iteration  11: 164338.095 ops/s
# Warmup Iteration  12: 162670.822 ops/s
# Warmup Iteration  13: 164632.929 ops/s
# Warmup Iteration  14: 164585.735 ops/s
# Warmup Iteration  15: 164105.443 ops/s
# Warmup Iteration  16: 164374.019 ops/s
# Warmup Iteration  17: 171145.610 ops/s
# Warmup Iteration  18: 171038.847 ops/s
# Warmup Iteration  19: 171078.279 ops/s
# Warmup Iteration  20: 171935.130 ops/s
# Warmup Iteration  21: 171932.017 ops/s
# Warmup Iteration  22: 171537.038 ops/s
# Warmup Iteration  23: 171632.311 ops/s
# Warmup Iteration  24: 171937.340 ops/s
# Warmup Iteration  25: 172272.154 ops/s
# Warmup Iteration  26: 138506.356 ops/s
# Warmup Iteration  27: 152751.560 ops/s
# Warmup Iteration  28: 171427.464 ops/s
# Warmup Iteration  29: 170967.691 ops/s
# Warmup Iteration  30: 171121.736 ops/s
Iteration   1: 171046.631 ops/s
Iteration   2: 170820.873 ops/s
Iteration   3: 170660.666 ops/s
Iteration   4: 171122.391 ops/s
Iteration   5: 171106.843 ops/s
Iteration   6: 170717.054 ops/s
Iteration   7: 170674.693 ops/s
Iteration   8: 170843.388 ops/s
Iteration   9: 170675.030 ops/s
Iteration  10: 171370.244 ops/s
Iteration  11: 171137.699 ops/s
Iteration  12: 171039.379 ops/s
Iteration  13: 171154.402 ops/s
Iteration  14: 171961.658 ops/s
Iteration  15: 170725.325 ops/s
Iteration  16: 171714.012 ops/s
Iteration  17: 171406.978 ops/s
Iteration  18: 170863.616 ops/s
Iteration  19: 170973.100 ops/s
Iteration  20: 171411.169 ops/s
Iteration  21: 171330.604 ops/s
Iteration  22: 171910.692 ops/s
Iteration  23: 171049.280 ops/s
Iteration  24: 171191.027 ops/s
Iteration  25: 171468.208 ops/s
Iteration  26: 171272.893 ops/s
Iteration  27: 171195.981 ops/s
Iteration  28: 170926.556 ops/s
Iteration  29: 170856.920 ops/s
Iteration  30: 170991.047 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_294._Benchmark.benchmark_Cluster_294":
  171120.612 ±(99.9%) 229.991 ops/s [Average]
  (min, avg, max) = (170660.666, 171120.612, 171961.658), stdev = 344.239
  CI (99.9%): [170890.621, 171350.603] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_294._Benchmark.benchmark_Cluster_294  thrpt   30  171120.612 ± 229.991  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_295._Benchmark.benchmark_Cluster_295$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_295._Benchmark.benchmark_Cluster_295

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83010.573 ops/s
# Warmup Iteration   2: 107780.250 ops/s
# Warmup Iteration   3: 108617.061 ops/s
# Warmup Iteration   4: 160534.380 ops/s
# Warmup Iteration   5: 163103.542 ops/s
# Warmup Iteration   6: 162561.518 ops/s
# Warmup Iteration   7: 161065.440 ops/s
# Warmup Iteration   8: 162187.155 ops/s
# Warmup Iteration   9: 162456.467 ops/s
# Warmup Iteration  10: 162873.838 ops/s
# Warmup Iteration  11: 162032.043 ops/s
# Warmup Iteration  12: 161761.958 ops/s
# Warmup Iteration  13: 162213.076 ops/s
# Warmup Iteration  14: 162910.784 ops/s
# Warmup Iteration  15: 124193.079 ops/s
# Warmup Iteration  16: 149146.253 ops/s
# Warmup Iteration  17: 161967.727 ops/s
# Warmup Iteration  18: 162376.603 ops/s
# Warmup Iteration  19: 163093.142 ops/s
# Warmup Iteration  20: 162575.763 ops/s
# Warmup Iteration  21: 162212.739 ops/s
# Warmup Iteration  22: 162205.310 ops/s
# Warmup Iteration  23: 161736.772 ops/s
# Warmup Iteration  24: 162594.225 ops/s
# Warmup Iteration  25: 163075.774 ops/s
# Warmup Iteration  26: 162554.296 ops/s
# Warmup Iteration  27: 161709.188 ops/s
# Warmup Iteration  28: 162414.967 ops/s
# Warmup Iteration  29: 161936.325 ops/s
# Warmup Iteration  30: 162098.948 ops/s
Iteration   1: 162549.544 ops/s
Iteration   2: 162903.156 ops/s
Iteration   3: 163092.598 ops/s
Iteration   4: 163318.819 ops/s
Iteration   5: 162280.814 ops/s
Iteration   6: 161153.326 ops/s
Iteration   7: 162972.197 ops/s
Iteration   8: 162413.278 ops/s
Iteration   9: 162618.557 ops/s
Iteration  10: 163182.139 ops/s
Iteration  11: 162594.107 ops/s
Iteration  12: 162421.656 ops/s
Iteration  13: 162533.245 ops/s
Iteration  14: 162483.181 ops/s
Iteration  15: 161984.612 ops/s
Iteration  16: 162846.196 ops/s
Iteration  17: 162793.087 ops/s
Iteration  18: 163242.191 ops/s
Iteration  19: 163179.407 ops/s
Iteration  20: 162189.924 ops/s
Iteration  21: 162507.191 ops/s
Iteration  22: 161924.527 ops/s
Iteration  23: 162137.898 ops/s
Iteration  24: 161033.663 ops/s
Iteration  25: 161581.902 ops/s
Iteration  26: 161995.137 ops/s
Iteration  27: 162788.187 ops/s
Iteration  28: 162488.308 ops/s
Iteration  29: 161849.260 ops/s
Iteration  30: 162409.615 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_295._Benchmark.benchmark_Cluster_295":
  162448.924 ±(99.9%) 382.420 ops/s [Average]
  (min, avg, max) = (161033.663, 162448.924, 163318.819), stdev = 572.389
  CI (99.9%): [162066.504, 162831.344] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_295._Benchmark.benchmark_Cluster_295  thrpt   30  162448.924 ± 382.420  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_296._Benchmark.benchmark_Cluster_296$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_296._Benchmark.benchmark_Cluster_296

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48024.978 ops/s
# Warmup Iteration   2: 83008.719 ops/s
# Warmup Iteration   3: 123921.177 ops/s
# Warmup Iteration   4: 159215.569 ops/s
# Warmup Iteration   5: 157356.178 ops/s
# Warmup Iteration   6: 158546.556 ops/s
# Warmup Iteration   7: 158266.450 ops/s
# Warmup Iteration   8: 158738.127 ops/s
# Warmup Iteration   9: 150476.283 ops/s
# Warmup Iteration  10: 115784.204 ops/s
# Warmup Iteration  11: 158785.300 ops/s
# Warmup Iteration  12: 158967.634 ops/s
# Warmup Iteration  13: 158716.715 ops/s
# Warmup Iteration  14: 159326.265 ops/s
# Warmup Iteration  15: 159195.930 ops/s
# Warmup Iteration  16: 158673.526 ops/s
# Warmup Iteration  17: 159405.169 ops/s
# Warmup Iteration  18: 159444.180 ops/s
# Warmup Iteration  19: 158738.175 ops/s
# Warmup Iteration  20: 159064.579 ops/s
# Warmup Iteration  21: 158585.776 ops/s
# Warmup Iteration  22: 158738.540 ops/s
# Warmup Iteration  23: 159083.874 ops/s
# Warmup Iteration  24: 158930.181 ops/s
# Warmup Iteration  25: 158984.035 ops/s
# Warmup Iteration  26: 158884.065 ops/s
# Warmup Iteration  27: 158578.313 ops/s
# Warmup Iteration  28: 158790.888 ops/s
# Warmup Iteration  29: 158593.386 ops/s
# Warmup Iteration  30: 158696.292 ops/s
Iteration   1: 158773.406 ops/s
Iteration   2: 158188.217 ops/s
Iteration   3: 158574.996 ops/s
Iteration   4: 158924.354 ops/s
Iteration   5: 159253.308 ops/s
Iteration   6: 159127.071 ops/s
Iteration   7: 159381.543 ops/s
Iteration   8: 159739.079 ops/s
Iteration   9: 159237.715 ops/s
Iteration  10: 159718.357 ops/s
Iteration  11: 159458.867 ops/s
Iteration  12: 158818.518 ops/s
Iteration  13: 159312.400 ops/s
Iteration  14: 159283.414 ops/s
Iteration  15: 159619.066 ops/s
Iteration  16: 159667.394 ops/s
Iteration  17: 159128.098 ops/s
Iteration  18: 159067.386 ops/s
Iteration  19: 159534.058 ops/s
Iteration  20: 158921.305 ops/s
Iteration  21: 159208.708 ops/s
Iteration  22: 159382.921 ops/s
Iteration  23: 159242.789 ops/s
Iteration  24: 159282.713 ops/s
Iteration  25: 159110.214 ops/s
Iteration  26: 159069.902 ops/s
Iteration  27: 159301.252 ops/s
Iteration  28: 159237.235 ops/s
Iteration  29: 159095.886 ops/s
Iteration  30: 159278.724 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_296._Benchmark.benchmark_Cluster_296":
  159197.963 ±(99.9%) 222.216 ops/s [Average]
  (min, avg, max) = (158188.217, 159197.963, 159739.079), stdev = 332.603
  CI (99.9%): [158975.747, 159420.179] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_296._Benchmark.benchmark_Cluster_296  thrpt   30  159197.963 ± 222.216  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_297._Benchmark.benchmark_Cluster_297$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_297._Benchmark.benchmark_Cluster_297

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80818.588 ops/s
# Warmup Iteration   2: 88595.635 ops/s
# Warmup Iteration   3: 89289.188 ops/s
# Warmup Iteration   4: 111958.204 ops/s
# Warmup Iteration   5: 126751.546 ops/s
# Warmup Iteration   6: 126625.679 ops/s
# Warmup Iteration   7: 126553.862 ops/s
# Warmup Iteration   8: 126550.214 ops/s
# Warmup Iteration   9: 127019.759 ops/s
# Warmup Iteration  10: 126761.680 ops/s
# Warmup Iteration  11: 126473.114 ops/s
# Warmup Iteration  12: 126685.862 ops/s
# Warmup Iteration  13: 126204.801 ops/s
# Warmup Iteration  14: 126161.679 ops/s
# Warmup Iteration  15: 125993.003 ops/s
# Warmup Iteration  16: 126152.279 ops/s
# Warmup Iteration  17: 132051.096 ops/s
# Warmup Iteration  18: 99320.303 ops/s
# Warmup Iteration  19: 122654.871 ops/s
# Warmup Iteration  20: 132136.151 ops/s
# Warmup Iteration  21: 132032.417 ops/s
# Warmup Iteration  22: 132092.542 ops/s
# Warmup Iteration  23: 131818.598 ops/s
# Warmup Iteration  24: 131736.573 ops/s
# Warmup Iteration  25: 132283.496 ops/s
# Warmup Iteration  26: 132180.214 ops/s
# Warmup Iteration  27: 132032.437 ops/s
# Warmup Iteration  28: 131555.610 ops/s
# Warmup Iteration  29: 131903.043 ops/s
# Warmup Iteration  30: 131425.158 ops/s
Iteration   1: 130894.095 ops/s
Iteration   2: 131864.074 ops/s
Iteration   3: 132027.254 ops/s
Iteration   4: 132524.561 ops/s
Iteration   5: 131362.233 ops/s
Iteration   6: 130966.859 ops/s
Iteration   7: 131342.336 ops/s
Iteration   8: 132034.795 ops/s
Iteration   9: 131578.654 ops/s
Iteration  10: 132413.906 ops/s
Iteration  11: 132013.624 ops/s
Iteration  12: 131516.412 ops/s
Iteration  13: 131237.276 ops/s
Iteration  14: 131633.312 ops/s
Iteration  15: 132327.343 ops/s
Iteration  16: 131654.904 ops/s
Iteration  17: 132107.432 ops/s
Iteration  18: 132623.696 ops/s
Iteration  19: 132105.375 ops/s
Iteration  20: 132055.429 ops/s
Iteration  21: 131946.908 ops/s
Iteration  22: 132081.319 ops/s
Iteration  23: 131659.469 ops/s
Iteration  24: 131888.582 ops/s
Iteration  25: 132438.528 ops/s
Iteration  26: 132014.703 ops/s
Iteration  27: 132666.068 ops/s
Iteration  28: 132503.319 ops/s
Iteration  29: 132571.685 ops/s
Iteration  30: 131515.670 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_297._Benchmark.benchmark_Cluster_297":
  131918.994 ±(99.9%) 322.503 ops/s [Average]
  (min, avg, max) = (130894.095, 131918.994, 132666.068), stdev = 482.707
  CI (99.9%): [131596.491, 132241.497] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_297._Benchmark.benchmark_Cluster_297  thrpt   30  131918.994 ± 322.503  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_298._Benchmark.benchmark_Cluster_298$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_298._Benchmark.benchmark_Cluster_298

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 34841.205 ops/s
# Warmup Iteration   2: 63484.719 ops/s
# Warmup Iteration   3: 66283.819 ops/s
# Warmup Iteration   4: 108539.999 ops/s
# Warmup Iteration   5: 110053.225 ops/s
# Warmup Iteration   6: 108411.808 ops/s
# Warmup Iteration   7: 109857.148 ops/s
# Warmup Iteration   8: 110770.247 ops/s
# Warmup Iteration   9: 110839.967 ops/s
# Warmup Iteration  10: 111410.207 ops/s
# Warmup Iteration  11: 110889.225 ops/s
# Warmup Iteration  12: 107613.847 ops/s
# Warmup Iteration  13: 73929.807 ops/s
# Warmup Iteration  14: 110969.016 ops/s
# Warmup Iteration  15: 110794.624 ops/s
# Warmup Iteration  16: 108945.300 ops/s
# Warmup Iteration  17: 114687.096 ops/s
# Warmup Iteration  18: 114726.031 ops/s
# Warmup Iteration  19: 114453.528 ops/s
# Warmup Iteration  20: 114448.269 ops/s
# Warmup Iteration  21: 113913.217 ops/s
# Warmup Iteration  22: 114569.646 ops/s
# Warmup Iteration  23: 114627.639 ops/s
# Warmup Iteration  24: 114240.609 ops/s
# Warmup Iteration  25: 114916.948 ops/s
# Warmup Iteration  26: 114176.291 ops/s
# Warmup Iteration  27: 115012.903 ops/s
# Warmup Iteration  28: 114823.544 ops/s
# Warmup Iteration  29: 114572.565 ops/s
# Warmup Iteration  30: 114497.005 ops/s
Iteration   1: 114689.592 ops/s
Iteration   2: 116005.027 ops/s
Iteration   3: 115856.018 ops/s
Iteration   4: 114718.626 ops/s
Iteration   5: 115217.230 ops/s
Iteration   6: 115007.472 ops/s
Iteration   7: 115164.820 ops/s
Iteration   8: 113933.481 ops/s
Iteration   9: 114436.535 ops/s
Iteration  10: 115654.083 ops/s
Iteration  11: 115575.194 ops/s
Iteration  12: 115317.171 ops/s
Iteration  13: 114928.552 ops/s
Iteration  14: 115086.776 ops/s
Iteration  15: 114624.930 ops/s
Iteration  16: 112879.182 ops/s
Iteration  17: 113031.387 ops/s
Iteration  18: 113788.319 ops/s
Iteration  19: 113973.172 ops/s
Iteration  20: 115054.651 ops/s
Iteration  21: 114023.161 ops/s
Iteration  22: 114174.464 ops/s
Iteration  23: 114377.932 ops/s
Iteration  24: 114251.820 ops/s
Iteration  25: 114932.368 ops/s
Iteration  26: 114760.286 ops/s
Iteration  27: 114475.315 ops/s
Iteration  28: 114670.205 ops/s
Iteration  29: 115182.079 ops/s
Iteration  30: 114751.113 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_298._Benchmark.benchmark_Cluster_298":
  114684.699 ±(99.9%) 488.452 ops/s [Average]
  (min, avg, max) = (112879.182, 114684.699, 116005.027), stdev = 731.092
  CI (99.9%): [114196.247, 115173.151] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_298._Benchmark.benchmark_Cluster_298  thrpt   30  114684.699 ± 488.452  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_299._Benchmark.benchmark_Cluster_299$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_299._Benchmark.benchmark_Cluster_299

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76275.925 ops/s
# Warmup Iteration   2: 87261.593 ops/s
# Warmup Iteration   3: 117414.450 ops/s
# Warmup Iteration   4: 148082.304 ops/s
# Warmup Iteration   5: 148972.210 ops/s
# Warmup Iteration   6: 146880.005 ops/s
# Warmup Iteration   7: 148199.733 ops/s
# Warmup Iteration   8: 149095.054 ops/s
# Warmup Iteration   9: 148620.933 ops/s
# Warmup Iteration  10: 148284.043 ops/s
# Warmup Iteration  11: 148388.497 ops/s
# Warmup Iteration  12: 101064.487 ops/s
# Warmup Iteration  13: 149094.304 ops/s
# Warmup Iteration  14: 148576.885 ops/s
# Warmup Iteration  15: 148101.420 ops/s
# Warmup Iteration  16: 149003.245 ops/s
# Warmup Iteration  17: 151471.402 ops/s
# Warmup Iteration  18: 151697.108 ops/s
# Warmup Iteration  19: 151863.836 ops/s
# Warmup Iteration  20: 151647.761 ops/s
# Warmup Iteration  21: 151825.199 ops/s
# Warmup Iteration  22: 152085.700 ops/s
# Warmup Iteration  23: 151954.681 ops/s
# Warmup Iteration  24: 151685.766 ops/s
# Warmup Iteration  25: 151222.701 ops/s
# Warmup Iteration  26: 151449.378 ops/s
# Warmup Iteration  27: 151600.285 ops/s
# Warmup Iteration  28: 151684.030 ops/s
# Warmup Iteration  29: 151524.093 ops/s
# Warmup Iteration  30: 151740.650 ops/s
Iteration   1: 151344.354 ops/s
Iteration   2: 150679.620 ops/s
Iteration   3: 151664.676 ops/s
Iteration   4: 151551.938 ops/s
Iteration   5: 152174.312 ops/s
Iteration   6: 151681.324 ops/s
Iteration   7: 151901.084 ops/s
Iteration   8: 150686.542 ops/s
Iteration   9: 151008.552 ops/s
Iteration  10: 151960.540 ops/s
Iteration  11: 151763.771 ops/s
Iteration  12: 151917.974 ops/s
Iteration  13: 151062.700 ops/s
Iteration  14: 151973.216 ops/s
Iteration  15: 152110.323 ops/s
Iteration  16: 151517.802 ops/s
Iteration  17: 152185.116 ops/s
Iteration  18: 151567.673 ops/s
Iteration  19: 151926.666 ops/s
Iteration  20: 151753.372 ops/s
Iteration  21: 152651.580 ops/s
Iteration  22: 152082.090 ops/s
Iteration  23: 151805.304 ops/s
Iteration  24: 151467.455 ops/s
Iteration  25: 151628.545 ops/s
Iteration  26: 151411.218 ops/s
Iteration  27: 151401.735 ops/s
Iteration  28: 151658.564 ops/s
Iteration  29: 151597.102 ops/s
Iteration  30: 152197.193 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_299._Benchmark.benchmark_Cluster_299":
  151677.745 ±(99.9%) 293.840 ops/s [Average]
  (min, avg, max) = (150679.620, 151677.745, 152651.580), stdev = 439.806
  CI (99.9%): [151383.905, 151971.585] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_299._Benchmark.benchmark_Cluster_299  thrpt   30  151677.745 ± 293.840  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_3._Benchmark.benchmark_Cluster_3$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_3._Benchmark.benchmark_Cluster_3

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75746.705 ops/s
# Warmup Iteration   2: 86653.485 ops/s
# Warmup Iteration   3: 86855.506 ops/s
# Warmup Iteration   4: 110505.249 ops/s
# Warmup Iteration   5: 123913.978 ops/s
# Warmup Iteration   6: 123744.772 ops/s
# Warmup Iteration   7: 123868.374 ops/s
# Warmup Iteration   8: 123178.430 ops/s
# Warmup Iteration   9: 123436.331 ops/s
# Warmup Iteration  10: 123047.669 ops/s
# Warmup Iteration  11: 123018.683 ops/s
# Warmup Iteration  12: 123900.725 ops/s
# Warmup Iteration  13: 123420.780 ops/s
# Warmup Iteration  14: 122838.336 ops/s
# Warmup Iteration  15: 123085.735 ops/s
# Warmup Iteration  16: 123641.105 ops/s
# Warmup Iteration  17: 128158.243 ops/s
# Warmup Iteration  18: 90322.252 ops/s
# Warmup Iteration  19: 128870.234 ops/s
# Warmup Iteration  20: 129058.335 ops/s
# Warmup Iteration  21: 129871.835 ops/s
# Warmup Iteration  22: 129225.690 ops/s
# Warmup Iteration  23: 128747.916 ops/s
# Warmup Iteration  24: 129417.762 ops/s
# Warmup Iteration  25: 129473.120 ops/s
# Warmup Iteration  26: 129060.995 ops/s
# Warmup Iteration  27: 129472.242 ops/s
# Warmup Iteration  28: 128754.548 ops/s
# Warmup Iteration  29: 128788.927 ops/s
# Warmup Iteration  30: 129763.479 ops/s
Iteration   1: 130032.126 ops/s
Iteration   2: 129755.753 ops/s
Iteration   3: 129368.357 ops/s
Iteration   4: 129357.053 ops/s
Iteration   5: 129027.716 ops/s
Iteration   6: 129047.889 ops/s
Iteration   7: 129557.230 ops/s
Iteration   8: 128692.020 ops/s
Iteration   9: 129033.592 ops/s
Iteration  10: 129705.664 ops/s
Iteration  11: 129502.049 ops/s
Iteration  12: 129174.467 ops/s
Iteration  13: 129871.338 ops/s
Iteration  14: 129208.739 ops/s
Iteration  15: 130117.835 ops/s
Iteration  16: 130404.991 ops/s
Iteration  17: 129833.170 ops/s
Iteration  18: 130204.369 ops/s
Iteration  19: 129918.429 ops/s
Iteration  20: 130044.770 ops/s
Iteration  21: 129127.742 ops/s
Iteration  22: 129423.353 ops/s
Iteration  23: 128998.749 ops/s
Iteration  24: 129524.823 ops/s
Iteration  25: 129003.359 ops/s
Iteration  26: 128641.997 ops/s
Iteration  27: 129988.516 ops/s
Iteration  28: 129195.016 ops/s
Iteration  29: 128979.379 ops/s
Iteration  30: 128920.814 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_3._Benchmark.benchmark_Cluster_3":
  129455.377 ±(99.9%) 318.627 ops/s [Average]
  (min, avg, max) = (128641.997, 129455.377, 130404.991), stdev = 476.905
  CI (99.9%): [129136.750, 129774.004] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score     Error  Units
Cluster_3._Benchmark.benchmark_Cluster_3  thrpt   30  129455.377 ± 318.627  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_30._Benchmark.benchmark_Cluster_30$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_30._Benchmark.benchmark_Cluster_30

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51924.852 ops/s
# Warmup Iteration   2: 86084.450 ops/s
# Warmup Iteration   3: 125140.241 ops/s
# Warmup Iteration   4: 158527.044 ops/s
# Warmup Iteration   5: 158099.150 ops/s
# Warmup Iteration   6: 158922.822 ops/s
# Warmup Iteration   7: 158995.999 ops/s
# Warmup Iteration   8: 159432.174 ops/s
# Warmup Iteration   9: 158575.918 ops/s
# Warmup Iteration  10: 107871.571 ops/s
# Warmup Iteration  11: 159138.307 ops/s
# Warmup Iteration  12: 159324.819 ops/s
# Warmup Iteration  13: 159282.074 ops/s
# Warmup Iteration  14: 159556.336 ops/s
# Warmup Iteration  15: 159667.610 ops/s
# Warmup Iteration  16: 159409.654 ops/s
# Warmup Iteration  17: 158797.940 ops/s
# Warmup Iteration  18: 158258.989 ops/s
# Warmup Iteration  19: 158815.982 ops/s
# Warmup Iteration  20: 158447.076 ops/s
# Warmup Iteration  21: 158351.093 ops/s
# Warmup Iteration  22: 158478.195 ops/s
# Warmup Iteration  23: 157922.436 ops/s
# Warmup Iteration  24: 158895.136 ops/s
# Warmup Iteration  25: 159247.490 ops/s
# Warmup Iteration  26: 158932.630 ops/s
# Warmup Iteration  27: 158662.220 ops/s
# Warmup Iteration  28: 158661.585 ops/s
# Warmup Iteration  29: 159335.721 ops/s
# Warmup Iteration  30: 158895.019 ops/s
Iteration   1: 158818.108 ops/s
Iteration   2: 158876.924 ops/s
Iteration   3: 158503.676 ops/s
Iteration   4: 157547.634 ops/s
Iteration   5: 157627.622 ops/s
Iteration   6: 158512.379 ops/s
Iteration   7: 157472.103 ops/s
Iteration   8: 158883.099 ops/s
Iteration   9: 159376.447 ops/s
Iteration  10: 159480.136 ops/s
Iteration  11: 159808.867 ops/s
Iteration  12: 159241.784 ops/s
Iteration  13: 158517.867 ops/s
Iteration  14: 158133.168 ops/s
Iteration  15: 158611.692 ops/s
Iteration  16: 158213.557 ops/s
Iteration  17: 159494.472 ops/s
Iteration  18: 159385.669 ops/s
Iteration  19: 158606.113 ops/s
Iteration  20: 159236.134 ops/s
Iteration  21: 159347.643 ops/s
Iteration  22: 158672.198 ops/s
Iteration  23: 158449.503 ops/s
Iteration  24: 159324.497 ops/s
Iteration  25: 158939.978 ops/s
Iteration  26: 158308.796 ops/s
Iteration  27: 159466.007 ops/s
Iteration  28: 159322.687 ops/s
Iteration  29: 159951.122 ops/s
Iteration  30: 159849.572 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_30._Benchmark.benchmark_Cluster_30":
  158865.982 ±(99.9%) 444.605 ops/s [Average]
  (min, avg, max) = (157472.103, 158865.982, 159951.122), stdev = 665.463
  CI (99.9%): [158421.377, 159310.586] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_30._Benchmark.benchmark_Cluster_30  thrpt   30  158865.982 ± 444.605  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_300._Benchmark.benchmark_Cluster_300$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_300._Benchmark.benchmark_Cluster_300

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59015.378 ops/s
# Warmup Iteration   2: 80281.062 ops/s
# Warmup Iteration   3: 115692.747 ops/s
# Warmup Iteration   4: 145570.690 ops/s
# Warmup Iteration   5: 144393.117 ops/s
# Warmup Iteration   6: 144748.916 ops/s
# Warmup Iteration   7: 144654.611 ops/s
# Warmup Iteration   8: 145506.390 ops/s
# Warmup Iteration   9: 145077.862 ops/s
# Warmup Iteration  10: 132736.457 ops/s
# Warmup Iteration  11: 111552.014 ops/s
# Warmup Iteration  12: 145162.131 ops/s
# Warmup Iteration  13: 144982.322 ops/s
# Warmup Iteration  14: 145253.668 ops/s
# Warmup Iteration  15: 146162.439 ops/s
# Warmup Iteration  16: 145461.517 ops/s
# Warmup Iteration  17: 149527.394 ops/s
# Warmup Iteration  18: 149583.253 ops/s
# Warmup Iteration  19: 149966.820 ops/s
# Warmup Iteration  20: 150160.090 ops/s
# Warmup Iteration  21: 149048.453 ops/s
# Warmup Iteration  22: 148705.314 ops/s
# Warmup Iteration  23: 149669.002 ops/s
# Warmup Iteration  24: 149351.973 ops/s
# Warmup Iteration  25: 149047.510 ops/s
# Warmup Iteration  26: 148220.134 ops/s
# Warmup Iteration  27: 148317.993 ops/s
# Warmup Iteration  28: 148761.801 ops/s
# Warmup Iteration  29: 149139.851 ops/s
# Warmup Iteration  30: 149077.751 ops/s
Iteration   1: 149408.678 ops/s
Iteration   2: 147950.031 ops/s
Iteration   3: 148439.462 ops/s
Iteration   4: 149098.121 ops/s
Iteration   5: 148387.513 ops/s
Iteration   6: 149828.198 ops/s
Iteration   7: 149232.780 ops/s
Iteration   8: 149201.459 ops/s
Iteration   9: 149897.161 ops/s
Iteration  10: 149431.374 ops/s
Iteration  11: 149116.914 ops/s
Iteration  12: 149254.925 ops/s
Iteration  13: 148539.911 ops/s
Iteration  14: 148937.319 ops/s
Iteration  15: 148554.017 ops/s
Iteration  16: 148671.168 ops/s
Iteration  17: 148765.538 ops/s
Iteration  18: 149253.805 ops/s
Iteration  19: 149244.954 ops/s
Iteration  20: 148562.941 ops/s
Iteration  21: 150003.636 ops/s
Iteration  22: 149199.032 ops/s
Iteration  23: 149077.790 ops/s
Iteration  24: 149197.414 ops/s
Iteration  25: 149240.692 ops/s
Iteration  26: 149295.158 ops/s
Iteration  27: 149640.699 ops/s
Iteration  28: 149145.435 ops/s
Iteration  29: 148616.548 ops/s
Iteration  30: 149093.372 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_300._Benchmark.benchmark_Cluster_300":
  149076.201 ±(99.9%) 312.930 ops/s [Average]
  (min, avg, max) = (147950.031, 149076.201, 150003.636), stdev = 468.378
  CI (99.9%): [148763.272, 149389.131] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_300._Benchmark.benchmark_Cluster_300  thrpt   30  149076.201 ± 312.930  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_301._Benchmark.benchmark_Cluster_301$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_301._Benchmark.benchmark_Cluster_301

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57022.981 ops/s
# Warmup Iteration   2: 77229.439 ops/s
# Warmup Iteration   3: 95301.115 ops/s
# Warmup Iteration   4: 142504.976 ops/s
# Warmup Iteration   5: 142777.786 ops/s
# Warmup Iteration   6: 140609.898 ops/s
# Warmup Iteration   7: 143082.718 ops/s
# Warmup Iteration   8: 142506.149 ops/s
# Warmup Iteration   9: 142082.609 ops/s
# Warmup Iteration  10: 142241.160 ops/s
# Warmup Iteration  11: 137389.717 ops/s
# Warmup Iteration  12: 95186.996 ops/s
# Warmup Iteration  13: 142454.653 ops/s
# Warmup Iteration  14: 142706.429 ops/s
# Warmup Iteration  15: 142637.277 ops/s
# Warmup Iteration  16: 142587.420 ops/s
# Warmup Iteration  17: 144021.589 ops/s
# Warmup Iteration  18: 143499.542 ops/s
# Warmup Iteration  19: 143838.921 ops/s
# Warmup Iteration  20: 143573.085 ops/s
# Warmup Iteration  21: 143679.343 ops/s
# Warmup Iteration  22: 143244.695 ops/s
# Warmup Iteration  23: 143266.715 ops/s
# Warmup Iteration  24: 143460.307 ops/s
# Warmup Iteration  25: 144214.854 ops/s
# Warmup Iteration  26: 143499.627 ops/s
# Warmup Iteration  27: 142819.379 ops/s
# Warmup Iteration  28: 143385.030 ops/s
# Warmup Iteration  29: 142508.325 ops/s
# Warmup Iteration  30: 142928.365 ops/s
Iteration   1: 142845.785 ops/s
Iteration   2: 142844.834 ops/s
Iteration   3: 142618.332 ops/s
Iteration   4: 142694.354 ops/s
Iteration   5: 143602.775 ops/s
Iteration   6: 143639.093 ops/s
Iteration   7: 143690.711 ops/s
Iteration   8: 143158.129 ops/s
Iteration   9: 143271.766 ops/s
Iteration  10: 143787.504 ops/s
Iteration  11: 143001.992 ops/s
Iteration  12: 143147.259 ops/s
Iteration  13: 142847.416 ops/s
Iteration  14: 143249.405 ops/s
Iteration  15: 143178.824 ops/s
Iteration  16: 143832.316 ops/s
Iteration  17: 143433.966 ops/s
Iteration  18: 143437.147 ops/s
Iteration  19: 143121.316 ops/s
Iteration  20: 143150.250 ops/s
Iteration  21: 142495.362 ops/s
Iteration  22: 142800.067 ops/s
Iteration  23: 142343.538 ops/s
Iteration  24: 144086.780 ops/s
Iteration  25: 143594.535 ops/s
Iteration  26: 143596.805 ops/s
Iteration  27: 143945.487 ops/s
Iteration  28: 143915.925 ops/s
Iteration  29: 144124.620 ops/s
Iteration  30: 143774.937 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_301._Benchmark.benchmark_Cluster_301":
  143307.708 ±(99.9%) 325.359 ops/s [Average]
  (min, avg, max) = (142343.538, 143307.708, 144124.620), stdev = 486.982
  CI (99.9%): [142982.348, 143633.067] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_301._Benchmark.benchmark_Cluster_301  thrpt   30  143307.708 ± 325.359  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_302._Benchmark.benchmark_Cluster_302$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_302._Benchmark.benchmark_Cluster_302

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65280.319 ops/s
# Warmup Iteration   2: 86268.563 ops/s
# Warmup Iteration   3: 140639.940 ops/s
# Warmup Iteration   4: 161513.161 ops/s
# Warmup Iteration   5: 159249.578 ops/s
# Warmup Iteration   6: 160801.582 ops/s
# Warmup Iteration   7: 160891.665 ops/s
# Warmup Iteration   8: 160919.956 ops/s
# Warmup Iteration   9: 151834.972 ops/s
# Warmup Iteration  10: 119280.711 ops/s
# Warmup Iteration  11: 161066.136 ops/s
# Warmup Iteration  12: 160628.606 ops/s
# Warmup Iteration  13: 161036.756 ops/s
# Warmup Iteration  14: 162145.954 ops/s
# Warmup Iteration  15: 161903.080 ops/s
# Warmup Iteration  16: 161388.900 ops/s
# Warmup Iteration  17: 161595.033 ops/s
# Warmup Iteration  18: 161705.438 ops/s
# Warmup Iteration  19: 161650.009 ops/s
# Warmup Iteration  20: 161680.223 ops/s
# Warmup Iteration  21: 161501.044 ops/s
# Warmup Iteration  22: 161643.696 ops/s
# Warmup Iteration  23: 161023.632 ops/s
# Warmup Iteration  24: 161754.815 ops/s
# Warmup Iteration  25: 161416.707 ops/s
# Warmup Iteration  26: 161636.872 ops/s
# Warmup Iteration  27: 162214.838 ops/s
# Warmup Iteration  28: 161667.269 ops/s
# Warmup Iteration  29: 161445.063 ops/s
# Warmup Iteration  30: 161383.191 ops/s
Iteration   1: 161440.990 ops/s
Iteration   2: 161863.166 ops/s
Iteration   3: 161316.749 ops/s
Iteration   4: 161859.183 ops/s
Iteration   5: 162195.466 ops/s
Iteration   6: 162111.104 ops/s
Iteration   7: 161416.429 ops/s
Iteration   8: 161840.964 ops/s
Iteration   9: 161524.455 ops/s
Iteration  10: 161431.089 ops/s
Iteration  11: 161707.587 ops/s
Iteration  12: 160902.456 ops/s
Iteration  13: 161569.360 ops/s
Iteration  14: 161875.803 ops/s
Iteration  15: 161425.798 ops/s
Iteration  16: 161658.950 ops/s
Iteration  17: 161704.225 ops/s
Iteration  18: 161593.766 ops/s
Iteration  19: 161672.745 ops/s
Iteration  20: 161525.984 ops/s
Iteration  21: 161479.141 ops/s
Iteration  22: 161134.340 ops/s
Iteration  23: 161546.247 ops/s
Iteration  24: 161676.400 ops/s
Iteration  25: 160229.702 ops/s
Iteration  26: 161734.188 ops/s
Iteration  27: 160923.948 ops/s
Iteration  28: 160396.149 ops/s
Iteration  29: 161374.951 ops/s
Iteration  30: 161372.103 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_302._Benchmark.benchmark_Cluster_302":
  161483.448 ±(99.9%) 287.008 ops/s [Average]
  (min, avg, max) = (160229.702, 161483.448, 162195.466), stdev = 429.581
  CI (99.9%): [161196.439, 161770.456] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_302._Benchmark.benchmark_Cluster_302  thrpt   30  161483.448 ± 287.008  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_303._Benchmark.benchmark_Cluster_303$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_303._Benchmark.benchmark_Cluster_303

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65525.020 ops/s
# Warmup Iteration   2: 92732.537 ops/s
# Warmup Iteration   3: 161177.616 ops/s
# Warmup Iteration   4: 182512.450 ops/s
# Warmup Iteration   5: 182076.980 ops/s
# Warmup Iteration   6: 183285.601 ops/s
# Warmup Iteration   7: 182470.342 ops/s
# Warmup Iteration   8: 182925.996 ops/s
# Warmup Iteration   9: 125244.550 ops/s
# Warmup Iteration  10: 183090.397 ops/s
# Warmup Iteration  11: 184331.019 ops/s
# Warmup Iteration  12: 184563.499 ops/s
# Warmup Iteration  13: 183739.991 ops/s
# Warmup Iteration  14: 184323.569 ops/s
# Warmup Iteration  15: 181449.465 ops/s
# Warmup Iteration  16: 183282.840 ops/s
# Warmup Iteration  17: 185036.063 ops/s
# Warmup Iteration  18: 183934.180 ops/s
# Warmup Iteration  19: 184521.603 ops/s
# Warmup Iteration  20: 183794.112 ops/s
# Warmup Iteration  21: 184220.097 ops/s
# Warmup Iteration  22: 184556.575 ops/s
# Warmup Iteration  23: 182941.681 ops/s
# Warmup Iteration  24: 182720.983 ops/s
# Warmup Iteration  25: 184396.274 ops/s
# Warmup Iteration  26: 184529.976 ops/s
# Warmup Iteration  27: 183410.672 ops/s
# Warmup Iteration  28: 184037.771 ops/s
# Warmup Iteration  29: 183060.825 ops/s
# Warmup Iteration  30: 184159.243 ops/s
Iteration   1: 184320.141 ops/s
Iteration   2: 185196.610 ops/s
Iteration   3: 184950.093 ops/s
Iteration   4: 182524.573 ops/s
Iteration   5: 184439.734 ops/s
Iteration   6: 183453.167 ops/s
Iteration   7: 183734.556 ops/s
Iteration   8: 182826.434 ops/s
Iteration   9: 182689.450 ops/s
Iteration  10: 184422.219 ops/s
Iteration  11: 183446.710 ops/s
Iteration  12: 183634.438 ops/s
Iteration  13: 183210.003 ops/s
Iteration  14: 184199.076 ops/s
Iteration  15: 183722.513 ops/s
Iteration  16: 182787.219 ops/s
Iteration  17: 182738.756 ops/s
Iteration  18: 183048.872 ops/s
Iteration  19: 184237.657 ops/s
Iteration  20: 182498.004 ops/s
Iteration  21: 183524.311 ops/s
Iteration  22: 183958.031 ops/s
Iteration  23: 184828.363 ops/s
Iteration  24: 185062.101 ops/s
Iteration  25: 182351.528 ops/s
Iteration  26: 182852.881 ops/s
Iteration  27: 183522.568 ops/s
Iteration  28: 182664.474 ops/s
Iteration  29: 182729.437 ops/s
Iteration  30: 183893.870 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_303._Benchmark.benchmark_Cluster_303":
  183582.260 ±(99.9%) 560.175 ops/s [Average]
  (min, avg, max) = (182351.528, 183582.260, 185196.610), stdev = 838.443
  CI (99.9%): [183022.085, 184142.434] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_303._Benchmark.benchmark_Cluster_303  thrpt   30  183582.260 ± 560.175  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_304._Benchmark.benchmark_Cluster_304$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_304._Benchmark.benchmark_Cluster_304

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 34136.397 ops/s
# Warmup Iteration   2: 71575.331 ops/s
# Warmup Iteration   3: 138239.935 ops/s
# Warmup Iteration   4: 157666.651 ops/s
# Warmup Iteration   5: 160432.019 ops/s
# Warmup Iteration   6: 159961.930 ops/s
# Warmup Iteration   7: 150396.148 ops/s
# Warmup Iteration   8: 119401.205 ops/s
# Warmup Iteration   9: 159877.074 ops/s
# Warmup Iteration  10: 159958.033 ops/s
# Warmup Iteration  11: 158932.639 ops/s
# Warmup Iteration  12: 159464.568 ops/s
# Warmup Iteration  13: 159678.348 ops/s
# Warmup Iteration  14: 159931.645 ops/s
# Warmup Iteration  15: 159380.892 ops/s
# Warmup Iteration  16: 160344.021 ops/s
# Warmup Iteration  17: 159134.011 ops/s
# Warmup Iteration  18: 159318.463 ops/s
# Warmup Iteration  19: 159189.324 ops/s
# Warmup Iteration  20: 160330.330 ops/s
# Warmup Iteration  21: 159684.543 ops/s
# Warmup Iteration  22: 159866.852 ops/s
# Warmup Iteration  23: 160043.361 ops/s
# Warmup Iteration  24: 159933.775 ops/s
# Warmup Iteration  25: 160050.404 ops/s
# Warmup Iteration  26: 160095.265 ops/s
# Warmup Iteration  27: 159654.498 ops/s
# Warmup Iteration  28: 159717.232 ops/s
# Warmup Iteration  29: 159613.191 ops/s
# Warmup Iteration  30: 160178.388 ops/s
Iteration   1: 160497.793 ops/s
Iteration   2: 159574.053 ops/s
Iteration   3: 159840.815 ops/s
Iteration   4: 159109.492 ops/s
Iteration   5: 159599.086 ops/s
Iteration   6: 159502.477 ops/s
Iteration   7: 160527.456 ops/s
Iteration   8: 159942.413 ops/s
Iteration   9: 160205.116 ops/s
Iteration  10: 159180.554 ops/s
Iteration  11: 158976.219 ops/s
Iteration  12: 159707.852 ops/s
Iteration  13: 159888.776 ops/s
Iteration  14: 159408.783 ops/s
Iteration  15: 160031.996 ops/s
Iteration  16: 159748.706 ops/s
Iteration  17: 160354.624 ops/s
Iteration  18: 160132.283 ops/s
Iteration  19: 159648.952 ops/s
Iteration  20: 159140.089 ops/s
Iteration  21: 159818.848 ops/s
Iteration  22: 160085.009 ops/s
Iteration  23: 159336.119 ops/s
Iteration  24: 160106.710 ops/s
Iteration  25: 158746.627 ops/s
Iteration  26: 158725.442 ops/s
Iteration  27: 158839.755 ops/s
Iteration  28: 159882.408 ops/s
Iteration  29: 159690.161 ops/s
Iteration  30: 160172.252 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_304._Benchmark.benchmark_Cluster_304":
  159680.696 ±(99.9%) 335.918 ops/s [Average]
  (min, avg, max) = (158725.442, 159680.696, 160527.456), stdev = 502.787
  CI (99.9%): [159344.777, 160016.614] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_304._Benchmark.benchmark_Cluster_304  thrpt   30  159680.696 ± 335.918  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_305._Benchmark.benchmark_Cluster_305$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_305._Benchmark.benchmark_Cluster_305

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57803.976 ops/s
# Warmup Iteration   2: 87549.857 ops/s
# Warmup Iteration   3: 124613.037 ops/s
# Warmup Iteration   4: 161877.943 ops/s
# Warmup Iteration   5: 161099.291 ops/s
# Warmup Iteration   6: 160363.915 ops/s
# Warmup Iteration   7: 163388.975 ops/s
# Warmup Iteration   8: 163790.509 ops/s
# Warmup Iteration   9: 165073.264 ops/s
# Warmup Iteration  10: 134016.120 ops/s
# Warmup Iteration  11: 139311.987 ops/s
# Warmup Iteration  12: 162129.934 ops/s
# Warmup Iteration  13: 162204.801 ops/s
# Warmup Iteration  14: 162589.337 ops/s
# Warmup Iteration  15: 162953.478 ops/s
# Warmup Iteration  16: 161910.717 ops/s
# Warmup Iteration  17: 162978.668 ops/s
# Warmup Iteration  18: 163917.902 ops/s
# Warmup Iteration  19: 164564.124 ops/s
# Warmup Iteration  20: 163135.085 ops/s
# Warmup Iteration  21: 163596.447 ops/s
# Warmup Iteration  22: 163849.948 ops/s
# Warmup Iteration  23: 164407.196 ops/s
# Warmup Iteration  24: 164395.948 ops/s
# Warmup Iteration  25: 164077.594 ops/s
# Warmup Iteration  26: 164224.576 ops/s
# Warmup Iteration  27: 164104.129 ops/s
# Warmup Iteration  28: 163518.600 ops/s
# Warmup Iteration  29: 165422.385 ops/s
# Warmup Iteration  30: 164747.637 ops/s
Iteration   1: 165350.509 ops/s
Iteration   2: 164501.490 ops/s
Iteration   3: 164465.658 ops/s
Iteration   4: 164136.265 ops/s
Iteration   5: 163366.549 ops/s
Iteration   6: 163768.639 ops/s
Iteration   7: 165383.870 ops/s
Iteration   8: 165214.421 ops/s
Iteration   9: 164473.024 ops/s
Iteration  10: 164809.670 ops/s
Iteration  11: 163913.590 ops/s
Iteration  12: 164115.054 ops/s
Iteration  13: 165187.559 ops/s
Iteration  14: 164729.678 ops/s
Iteration  15: 163956.948 ops/s
Iteration  16: 164778.732 ops/s
Iteration  17: 165024.387 ops/s
Iteration  18: 164797.982 ops/s
Iteration  19: 164175.340 ops/s
Iteration  20: 164627.236 ops/s
Iteration  21: 164682.511 ops/s
Iteration  22: 164338.579 ops/s
Iteration  23: 164676.718 ops/s
Iteration  24: 164238.204 ops/s
Iteration  25: 164144.208 ops/s
Iteration  26: 164743.597 ops/s
Iteration  27: 164859.816 ops/s
Iteration  28: 164509.671 ops/s
Iteration  29: 165516.893 ops/s
Iteration  30: 164597.756 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_305._Benchmark.benchmark_Cluster_305":
  164569.485 ±(99.9%) 335.519 ops/s [Average]
  (min, avg, max) = (163366.549, 164569.485, 165516.893), stdev = 502.189
  CI (99.9%): [164233.966, 164905.004] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_305._Benchmark.benchmark_Cluster_305  thrpt   30  164569.485 ± 335.519  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_306._Benchmark.benchmark_Cluster_306$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_306._Benchmark.benchmark_Cluster_306

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 81662.353 ops/s
# Warmup Iteration   2: 102315.877 ops/s
# Warmup Iteration   3: 103545.053 ops/s
# Warmup Iteration   4: 104620.144 ops/s
# Warmup Iteration   5: 139064.410 ops/s
# Warmup Iteration   6: 141074.382 ops/s
# Warmup Iteration   7: 141152.917 ops/s
# Warmup Iteration   8: 141541.497 ops/s
# Warmup Iteration   9: 140878.056 ops/s
# Warmup Iteration  10: 139247.345 ops/s
# Warmup Iteration  11: 140878.587 ops/s
# Warmup Iteration  12: 140262.529 ops/s
# Warmup Iteration  13: 140467.995 ops/s
# Warmup Iteration  14: 141016.020 ops/s
# Warmup Iteration  15: 140107.690 ops/s
# Warmup Iteration  16: 140881.364 ops/s
# Warmup Iteration  17: 144822.533 ops/s
# Warmup Iteration  18: 143926.509 ops/s
# Warmup Iteration  19: 143958.771 ops/s
# Warmup Iteration  20: 144508.621 ops/s
# Warmup Iteration  21: 121781.434 ops/s
# Warmup Iteration  22: 119341.156 ops/s
# Warmup Iteration  23: 144448.552 ops/s
# Warmup Iteration  24: 144506.187 ops/s
# Warmup Iteration  25: 144413.614 ops/s
# Warmup Iteration  26: 143980.494 ops/s
# Warmup Iteration  27: 143827.476 ops/s
# Warmup Iteration  28: 143597.867 ops/s
# Warmup Iteration  29: 144182.227 ops/s
# Warmup Iteration  30: 143647.335 ops/s
Iteration   1: 143821.979 ops/s
Iteration   2: 143934.712 ops/s
Iteration   3: 143879.460 ops/s
Iteration   4: 143734.104 ops/s
Iteration   5: 144562.048 ops/s
Iteration   6: 143824.595 ops/s
Iteration   7: 143676.415 ops/s
Iteration   8: 143735.255 ops/s
Iteration   9: 144356.020 ops/s
Iteration  10: 144269.888 ops/s
Iteration  11: 144444.972 ops/s
Iteration  12: 144474.320 ops/s
Iteration  13: 144328.925 ops/s
Iteration  14: 144563.957 ops/s
Iteration  15: 144907.562 ops/s
Iteration  16: 144718.975 ops/s
Iteration  17: 144162.257 ops/s
Iteration  18: 143651.295 ops/s
Iteration  19: 143730.895 ops/s
Iteration  20: 143738.138 ops/s
Iteration  21: 144381.171 ops/s
Iteration  22: 144389.133 ops/s
Iteration  23: 144280.214 ops/s
Iteration  24: 144175.038 ops/s
Iteration  25: 144190.633 ops/s
Iteration  26: 144332.908 ops/s
Iteration  27: 143684.719 ops/s
Iteration  28: 144245.616 ops/s
Iteration  29: 144057.617 ops/s
Iteration  30: 144407.906 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_306._Benchmark.benchmark_Cluster_306":
  144155.358 ±(99.9%) 231.420 ops/s [Average]
  (min, avg, max) = (143651.295, 144155.358, 144907.562), stdev = 346.378
  CI (99.9%): [143923.938, 144386.777] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_306._Benchmark.benchmark_Cluster_306  thrpt   30  144155.358 ± 231.420  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_307._Benchmark.benchmark_Cluster_307$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_307._Benchmark.benchmark_Cluster_307

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 32926.083 ops/s
# Warmup Iteration   2: 60059.126 ops/s
# Warmup Iteration   3: 88333.665 ops/s
# Warmup Iteration   4: 117971.884 ops/s
# Warmup Iteration   5: 117303.903 ops/s
# Warmup Iteration   6: 117929.723 ops/s
# Warmup Iteration   7: 118359.314 ops/s
# Warmup Iteration   8: 117764.710 ops/s
# Warmup Iteration   9: 117681.354 ops/s
# Warmup Iteration  10: 78741.037 ops/s
# Warmup Iteration  11: 118213.845 ops/s
# Warmup Iteration  12: 117696.274 ops/s
# Warmup Iteration  13: 118454.344 ops/s
# Warmup Iteration  14: 117892.841 ops/s
# Warmup Iteration  15: 118031.940 ops/s
# Warmup Iteration  16: 117704.047 ops/s
# Warmup Iteration  17: 118764.940 ops/s
# Warmup Iteration  18: 118762.384 ops/s
# Warmup Iteration  19: 118574.494 ops/s
# Warmup Iteration  20: 118244.839 ops/s
# Warmup Iteration  21: 118528.567 ops/s
# Warmup Iteration  22: 118553.627 ops/s
# Warmup Iteration  23: 118821.130 ops/s
# Warmup Iteration  24: 118225.569 ops/s
# Warmup Iteration  25: 118929.736 ops/s
# Warmup Iteration  26: 118992.328 ops/s
# Warmup Iteration  27: 119090.923 ops/s
# Warmup Iteration  28: 119046.165 ops/s
# Warmup Iteration  29: 119280.000 ops/s
# Warmup Iteration  30: 119362.982 ops/s
Iteration   1: 118395.382 ops/s
Iteration   2: 119188.387 ops/s
Iteration   3: 119155.248 ops/s
Iteration   4: 118997.028 ops/s
Iteration   5: 119252.763 ops/s
Iteration   6: 119502.098 ops/s
Iteration   7: 119334.390 ops/s
Iteration   8: 118450.653 ops/s
Iteration   9: 118746.632 ops/s
Iteration  10: 119655.636 ops/s
Iteration  11: 119554.423 ops/s
Iteration  12: 119317.144 ops/s
Iteration  13: 119632.011 ops/s
Iteration  14: 119735.174 ops/s
Iteration  15: 119412.162 ops/s
Iteration  16: 119203.212 ops/s
Iteration  17: 119707.903 ops/s
Iteration  18: 119396.907 ops/s
Iteration  19: 119646.604 ops/s
Iteration  20: 118779.038 ops/s
Iteration  21: 118752.038 ops/s
Iteration  22: 119677.579 ops/s
Iteration  23: 119570.359 ops/s
Iteration  24: 119131.982 ops/s
Iteration  25: 119071.176 ops/s
Iteration  26: 119654.951 ops/s
Iteration  27: 119083.548 ops/s
Iteration  28: 119442.981 ops/s
Iteration  29: 119192.013 ops/s
Iteration  30: 119663.654 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_307._Benchmark.benchmark_Cluster_307":
  119276.769 ±(99.9%) 248.543 ops/s [Average]
  (min, avg, max) = (118395.382, 119276.769, 119735.174), stdev = 372.007
  CI (99.9%): [119028.227, 119525.312] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_307._Benchmark.benchmark_Cluster_307  thrpt   30  119276.769 ± 248.543  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_308._Benchmark.benchmark_Cluster_308$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_308._Benchmark.benchmark_Cluster_308

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43669.848 ops/s
# Warmup Iteration   2: 86725.855 ops/s
# Warmup Iteration   3: 156932.663 ops/s
# Warmup Iteration   4: 186045.211 ops/s
# Warmup Iteration   5: 188016.680 ops/s
# Warmup Iteration   6: 187723.995 ops/s
# Warmup Iteration   7: 187274.167 ops/s
# Warmup Iteration   8: 129641.396 ops/s
# Warmup Iteration   9: 185547.878 ops/s
# Warmup Iteration  10: 186946.878 ops/s
# Warmup Iteration  11: 187172.928 ops/s
# Warmup Iteration  12: 187355.292 ops/s
# Warmup Iteration  13: 187520.328 ops/s
# Warmup Iteration  14: 187778.671 ops/s
# Warmup Iteration  15: 187543.883 ops/s
# Warmup Iteration  16: 187351.306 ops/s
# Warmup Iteration  17: 187767.431 ops/s
# Warmup Iteration  18: 187696.433 ops/s
# Warmup Iteration  19: 187701.587 ops/s
# Warmup Iteration  20: 187304.943 ops/s
# Warmup Iteration  21: 187357.907 ops/s
# Warmup Iteration  22: 186596.586 ops/s
# Warmup Iteration  23: 187926.576 ops/s
# Warmup Iteration  24: 187265.328 ops/s
# Warmup Iteration  25: 187005.334 ops/s
# Warmup Iteration  26: 187098.313 ops/s
# Warmup Iteration  27: 187290.264 ops/s
# Warmup Iteration  28: 187372.507 ops/s
# Warmup Iteration  29: 187042.054 ops/s
# Warmup Iteration  30: 187068.769 ops/s
Iteration   1: 187700.032 ops/s
Iteration   2: 187348.233 ops/s
Iteration   3: 186753.984 ops/s
Iteration   4: 187294.998 ops/s
Iteration   5: 186413.830 ops/s
Iteration   6: 186738.902 ops/s
Iteration   7: 186641.951 ops/s
Iteration   8: 186540.960 ops/s
Iteration   9: 186848.108 ops/s
Iteration  10: 186583.954 ops/s
Iteration  11: 186817.605 ops/s
Iteration  12: 187274.174 ops/s
Iteration  13: 187429.543 ops/s
Iteration  14: 186904.578 ops/s
Iteration  15: 186723.013 ops/s
Iteration  16: 186999.858 ops/s
Iteration  17: 187233.364 ops/s
Iteration  18: 187478.919 ops/s
Iteration  19: 186137.884 ops/s
Iteration  20: 187807.982 ops/s
Iteration  21: 187181.336 ops/s
Iteration  22: 186625.665 ops/s
Iteration  23: 186414.601 ops/s
Iteration  24: 187441.177 ops/s
Iteration  25: 187036.232 ops/s
Iteration  26: 187507.471 ops/s
Iteration  27: 187417.000 ops/s
Iteration  28: 186944.729 ops/s
Iteration  29: 187596.321 ops/s
Iteration  30: 187609.351 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_308._Benchmark.benchmark_Cluster_308":
  187048.192 ±(99.9%) 292.746 ops/s [Average]
  (min, avg, max) = (186137.884, 187048.192, 187807.982), stdev = 438.168
  CI (99.9%): [186755.446, 187340.937] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_308._Benchmark.benchmark_Cluster_308  thrpt   30  187048.192 ± 292.746  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_309._Benchmark.benchmark_Cluster_309$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_309._Benchmark.benchmark_Cluster_309

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47523.686 ops/s
# Warmup Iteration   2: 67584.288 ops/s
# Warmup Iteration   3: 85652.112 ops/s
# Warmup Iteration   4: 119982.284 ops/s
# Warmup Iteration   5: 120582.096 ops/s
# Warmup Iteration   6: 118640.284 ops/s
# Warmup Iteration   7: 119979.594 ops/s
# Warmup Iteration   8: 120173.170 ops/s
# Warmup Iteration   9: 119824.269 ops/s
# Warmup Iteration  10: 119699.563 ops/s
# Warmup Iteration  11: 111478.802 ops/s
# Warmup Iteration  12: 87441.041 ops/s
# Warmup Iteration  13: 120296.047 ops/s
# Warmup Iteration  14: 119890.898 ops/s
# Warmup Iteration  15: 119899.680 ops/s
# Warmup Iteration  16: 120070.107 ops/s
# Warmup Iteration  17: 122096.685 ops/s
# Warmup Iteration  18: 122385.835 ops/s
# Warmup Iteration  19: 122043.858 ops/s
# Warmup Iteration  20: 121567.667 ops/s
# Warmup Iteration  21: 122042.974 ops/s
# Warmup Iteration  22: 121814.885 ops/s
# Warmup Iteration  23: 122142.603 ops/s
# Warmup Iteration  24: 122076.805 ops/s
# Warmup Iteration  25: 122273.249 ops/s
# Warmup Iteration  26: 121427.828 ops/s
# Warmup Iteration  27: 121773.662 ops/s
# Warmup Iteration  28: 121671.581 ops/s
# Warmup Iteration  29: 121457.435 ops/s
# Warmup Iteration  30: 121400.431 ops/s
Iteration   1: 121584.714 ops/s
Iteration   2: 122256.390 ops/s
Iteration   3: 122154.104 ops/s
Iteration   4: 121906.069 ops/s
Iteration   5: 121646.450 ops/s
Iteration   6: 122091.886 ops/s
Iteration   7: 121174.397 ops/s
Iteration   8: 121382.876 ops/s
Iteration   9: 122101.969 ops/s
Iteration  10: 122129.044 ops/s
Iteration  11: 121929.456 ops/s
Iteration  12: 121712.403 ops/s
Iteration  13: 121750.498 ops/s
Iteration  14: 121823.175 ops/s
Iteration  15: 121076.473 ops/s
Iteration  16: 121851.223 ops/s
Iteration  17: 121657.701 ops/s
Iteration  18: 121783.952 ops/s
Iteration  19: 121424.595 ops/s
Iteration  20: 121328.026 ops/s
Iteration  21: 121608.425 ops/s
Iteration  22: 121989.001 ops/s
Iteration  23: 121339.061 ops/s
Iteration  24: 121040.348 ops/s
Iteration  25: 121589.374 ops/s
Iteration  26: 122279.616 ops/s
Iteration  27: 121318.734 ops/s
Iteration  28: 121383.723 ops/s
Iteration  29: 121892.602 ops/s
Iteration  30: 122129.809 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_309._Benchmark.benchmark_Cluster_309":
  121711.203 ±(99.9%) 236.203 ops/s [Average]
  (min, avg, max) = (121040.348, 121711.203, 122279.616), stdev = 353.537
  CI (99.9%): [121475.000, 121947.406] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_309._Benchmark.benchmark_Cluster_309  thrpt   30  121711.203 ± 236.203  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_31._Benchmark.benchmark_Cluster_31$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_31._Benchmark.benchmark_Cluster_31

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86081.632 ops/s
# Warmup Iteration   2: 95304.363 ops/s
# Warmup Iteration   3: 96989.758 ops/s
# Warmup Iteration   4: 125549.151 ops/s
# Warmup Iteration   5: 139159.563 ops/s
# Warmup Iteration   6: 139002.717 ops/s
# Warmup Iteration   7: 139394.496 ops/s
# Warmup Iteration   8: 138037.669 ops/s
# Warmup Iteration   9: 139642.357 ops/s
# Warmup Iteration  10: 139349.732 ops/s
# Warmup Iteration  11: 140345.714 ops/s
# Warmup Iteration  12: 140326.037 ops/s
# Warmup Iteration  13: 139085.951 ops/s
# Warmup Iteration  14: 139132.219 ops/s
# Warmup Iteration  15: 139251.369 ops/s
# Warmup Iteration  16: 139522.072 ops/s
# Warmup Iteration  17: 130551.084 ops/s
# Warmup Iteration  18: 114063.209 ops/s
# Warmup Iteration  19: 145969.993 ops/s
# Warmup Iteration  20: 146549.750 ops/s
# Warmup Iteration  21: 146184.057 ops/s
# Warmup Iteration  22: 145828.475 ops/s
# Warmup Iteration  23: 145817.398 ops/s
# Warmup Iteration  24: 145913.748 ops/s
# Warmup Iteration  25: 145424.166 ops/s
# Warmup Iteration  26: 146064.398 ops/s
# Warmup Iteration  27: 145309.208 ops/s
# Warmup Iteration  28: 145393.705 ops/s
# Warmup Iteration  29: 145474.761 ops/s
# Warmup Iteration  30: 145432.505 ops/s
Iteration   1: 145763.926 ops/s
Iteration   2: 145542.269 ops/s
Iteration   3: 145733.784 ops/s
Iteration   4: 145576.505 ops/s
Iteration   5: 145643.590 ops/s
Iteration   6: 145845.868 ops/s
Iteration   7: 145504.515 ops/s
Iteration   8: 145787.060 ops/s
Iteration   9: 145491.985 ops/s
Iteration  10: 145037.435 ops/s
Iteration  11: 146205.457 ops/s
Iteration  12: 145901.152 ops/s
Iteration  13: 145270.667 ops/s
Iteration  14: 146077.483 ops/s
Iteration  15: 145785.076 ops/s
Iteration  16: 145254.697 ops/s
Iteration  17: 145566.050 ops/s
Iteration  18: 145424.626 ops/s
Iteration  19: 145662.946 ops/s
Iteration  20: 145391.426 ops/s
Iteration  21: 146246.529 ops/s
Iteration  22: 145084.923 ops/s
Iteration  23: 145877.441 ops/s
Iteration  24: 146185.384 ops/s
Iteration  25: 145692.206 ops/s
Iteration  26: 145076.809 ops/s
Iteration  27: 145654.301 ops/s
Iteration  28: 145829.004 ops/s
Iteration  29: 144717.049 ops/s
Iteration  30: 145279.024 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_31._Benchmark.benchmark_Cluster_31":
  145603.640 ±(99.9%) 242.885 ops/s [Average]
  (min, avg, max) = (144717.049, 145603.640, 146246.529), stdev = 363.539
  CI (99.9%): [145360.755, 145846.524] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_31._Benchmark.benchmark_Cluster_31  thrpt   30  145603.640 ± 242.885  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_310._Benchmark.benchmark_Cluster_310$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_310._Benchmark.benchmark_Cluster_310

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43292.858 ops/s
# Warmup Iteration   2: 59815.032 ops/s
# Warmup Iteration   3: 116387.695 ops/s
# Warmup Iteration   4: 128506.613 ops/s
# Warmup Iteration   5: 129534.189 ops/s
# Warmup Iteration   6: 129712.872 ops/s
# Warmup Iteration   7: 130176.145 ops/s
# Warmup Iteration   8: 93747.035 ops/s
# Warmup Iteration   9: 121118.515 ops/s
# Warmup Iteration  10: 129853.835 ops/s
# Warmup Iteration  11: 129491.862 ops/s
# Warmup Iteration  12: 129671.823 ops/s
# Warmup Iteration  13: 128998.822 ops/s
# Warmup Iteration  14: 129660.904 ops/s
# Warmup Iteration  15: 129579.150 ops/s
# Warmup Iteration  16: 129020.774 ops/s
# Warmup Iteration  17: 131943.069 ops/s
# Warmup Iteration  18: 131377.873 ops/s
# Warmup Iteration  19: 131955.513 ops/s
# Warmup Iteration  20: 131446.616 ops/s
# Warmup Iteration  21: 130761.096 ops/s
# Warmup Iteration  22: 130797.929 ops/s
# Warmup Iteration  23: 131313.798 ops/s
# Warmup Iteration  24: 131262.329 ops/s
# Warmup Iteration  25: 131462.854 ops/s
# Warmup Iteration  26: 131863.031 ops/s
# Warmup Iteration  27: 132416.822 ops/s
# Warmup Iteration  28: 130103.421 ops/s
# Warmup Iteration  29: 131808.180 ops/s
# Warmup Iteration  30: 131165.043 ops/s
Iteration   1: 130988.407 ops/s
Iteration   2: 131633.187 ops/s
Iteration   3: 131781.721 ops/s
Iteration   4: 130573.587 ops/s
Iteration   5: 131692.683 ops/s
Iteration   6: 131376.438 ops/s
Iteration   7: 130879.903 ops/s
Iteration   8: 132616.778 ops/s
Iteration   9: 132088.755 ops/s
Iteration  10: 132469.032 ops/s
Iteration  11: 132585.620 ops/s
Iteration  12: 131906.112 ops/s
Iteration  13: 131853.402 ops/s
Iteration  14: 131756.955 ops/s
Iteration  15: 132758.234 ops/s
Iteration  16: 131844.257 ops/s
Iteration  17: 132265.090 ops/s
Iteration  18: 131835.747 ops/s
Iteration  19: 132159.777 ops/s
Iteration  20: 131950.471 ops/s
Iteration  21: 130668.852 ops/s
Iteration  22: 131898.987 ops/s
Iteration  23: 132095.231 ops/s
Iteration  24: 132864.811 ops/s
Iteration  25: 131746.214 ops/s
Iteration  26: 132574.038 ops/s
Iteration  27: 132675.620 ops/s
Iteration  28: 131687.633 ops/s
Iteration  29: 130872.424 ops/s
Iteration  30: 131053.319 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_310._Benchmark.benchmark_Cluster_310":
  131838.443 ±(99.9%) 422.821 ops/s [Average]
  (min, avg, max) = (130573.587, 131838.443, 132864.811), stdev = 632.858
  CI (99.9%): [131415.622, 132261.264] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_310._Benchmark.benchmark_Cluster_310  thrpt   30  131838.443 ± 422.821  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_311._Benchmark.benchmark_Cluster_311$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_311._Benchmark.benchmark_Cluster_311

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54579.668 ops/s
# Warmup Iteration   2: 82731.797 ops/s
# Warmup Iteration   3: 170381.380 ops/s
# Warmup Iteration   4: 168828.047 ops/s
# Warmup Iteration   5: 169516.539 ops/s
# Warmup Iteration   6: 165281.085 ops/s
# Warmup Iteration   7: 121827.045 ops/s
# Warmup Iteration   8: 170520.595 ops/s
# Warmup Iteration   9: 170831.243 ops/s
# Warmup Iteration  10: 170493.265 ops/s
# Warmup Iteration  11: 170749.591 ops/s
# Warmup Iteration  12: 169916.009 ops/s
# Warmup Iteration  13: 171005.443 ops/s
# Warmup Iteration  14: 169987.905 ops/s
# Warmup Iteration  15: 171237.013 ops/s
# Warmup Iteration  16: 170496.872 ops/s
# Warmup Iteration  17: 170752.327 ops/s
# Warmup Iteration  18: 169934.688 ops/s
# Warmup Iteration  19: 171093.965 ops/s
# Warmup Iteration  20: 170917.867 ops/s
# Warmup Iteration  21: 170758.042 ops/s
# Warmup Iteration  22: 170008.460 ops/s
# Warmup Iteration  23: 170084.027 ops/s
# Warmup Iteration  24: 170415.946 ops/s
# Warmup Iteration  25: 171002.615 ops/s
# Warmup Iteration  26: 170900.061 ops/s
# Warmup Iteration  27: 170088.921 ops/s
# Warmup Iteration  28: 170854.346 ops/s
# Warmup Iteration  29: 170375.177 ops/s
# Warmup Iteration  30: 170349.170 ops/s
Iteration   1: 170545.150 ops/s
Iteration   2: 170717.315 ops/s
Iteration   3: 169862.324 ops/s
Iteration   4: 170609.485 ops/s
Iteration   5: 170864.298 ops/s
Iteration   6: 170375.009 ops/s
Iteration   7: 170006.566 ops/s
Iteration   8: 169949.675 ops/s
Iteration   9: 170739.240 ops/s
Iteration  10: 170548.910 ops/s
Iteration  11: 171217.509 ops/s
Iteration  12: 170155.209 ops/s
Iteration  13: 170167.589 ops/s
Iteration  14: 170315.653 ops/s
Iteration  15: 169759.089 ops/s
Iteration  16: 169513.001 ops/s
Iteration  17: 169866.309 ops/s
Iteration  18: 170650.321 ops/s
Iteration  19: 171127.668 ops/s
Iteration  20: 170966.624 ops/s
Iteration  21: 170639.342 ops/s
Iteration  22: 170843.006 ops/s
Iteration  23: 169456.501 ops/s
Iteration  24: 171086.285 ops/s
Iteration  25: 170499.145 ops/s
Iteration  26: 170103.466 ops/s
Iteration  27: 170082.324 ops/s
Iteration  28: 170313.652 ops/s
Iteration  29: 170131.770 ops/s
Iteration  30: 169278.320 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_311._Benchmark.benchmark_Cluster_311":
  170346.358 ±(99.9%) 337.845 ops/s [Average]
  (min, avg, max) = (169278.320, 170346.358, 171217.509), stdev = 505.670
  CI (99.9%): [170008.514, 170684.203] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_311._Benchmark.benchmark_Cluster_311  thrpt   30  170346.358 ± 337.845  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_312._Benchmark.benchmark_Cluster_312$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_312._Benchmark.benchmark_Cluster_312

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55417.943 ops/s
# Warmup Iteration   2: 67885.243 ops/s
# Warmup Iteration   3: 147107.514 ops/s
# Warmup Iteration   4: 148417.149 ops/s
# Warmup Iteration   5: 150170.933 ops/s
# Warmup Iteration   6: 149006.865 ops/s
# Warmup Iteration   7: 149444.259 ops/s
# Warmup Iteration   8: 99477.127 ops/s
# Warmup Iteration   9: 149909.922 ops/s
# Warmup Iteration  10: 149157.470 ops/s
# Warmup Iteration  11: 149374.773 ops/s
# Warmup Iteration  12: 148985.490 ops/s
# Warmup Iteration  13: 149580.869 ops/s
# Warmup Iteration  14: 149368.401 ops/s
# Warmup Iteration  15: 149023.598 ops/s
# Warmup Iteration  16: 149846.066 ops/s
# Warmup Iteration  17: 150115.383 ops/s
# Warmup Iteration  18: 149754.173 ops/s
# Warmup Iteration  19: 149360.815 ops/s
# Warmup Iteration  20: 149798.958 ops/s
# Warmup Iteration  21: 149260.205 ops/s
# Warmup Iteration  22: 149093.955 ops/s
# Warmup Iteration  23: 149081.618 ops/s
# Warmup Iteration  24: 149762.330 ops/s
# Warmup Iteration  25: 149564.461 ops/s
# Warmup Iteration  26: 149947.410 ops/s
# Warmup Iteration  27: 149744.915 ops/s
# Warmup Iteration  28: 149951.443 ops/s
# Warmup Iteration  29: 149772.235 ops/s
# Warmup Iteration  30: 149709.917 ops/s
Iteration   1: 149812.174 ops/s
Iteration   2: 150068.596 ops/s
Iteration   3: 149884.422 ops/s
Iteration   4: 150016.069 ops/s
Iteration   5: 149551.338 ops/s
Iteration   6: 150063.303 ops/s
Iteration   7: 150483.286 ops/s
Iteration   8: 150039.408 ops/s
Iteration   9: 150657.789 ops/s
Iteration  10: 149935.138 ops/s
Iteration  11: 150175.010 ops/s
Iteration  12: 150172.786 ops/s
Iteration  13: 150050.639 ops/s
Iteration  14: 149407.756 ops/s
Iteration  15: 149619.181 ops/s
Iteration  16: 149484.298 ops/s
Iteration  17: 149830.475 ops/s
Iteration  18: 149691.141 ops/s
Iteration  19: 149884.653 ops/s
Iteration  20: 149788.423 ops/s
Iteration  21: 149743.532 ops/s
Iteration  22: 149551.019 ops/s
Iteration  23: 150306.897 ops/s
Iteration  24: 149662.647 ops/s
Iteration  25: 149417.541 ops/s
Iteration  26: 149253.972 ops/s
Iteration  27: 148953.682 ops/s
Iteration  28: 148993.326 ops/s
Iteration  29: 149977.879 ops/s
Iteration  30: 149948.218 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_312._Benchmark.benchmark_Cluster_312":
  149814.153 ±(99.9%) 259.775 ops/s [Average]
  (min, avg, max) = (148953.682, 149814.153, 150657.789), stdev = 388.819
  CI (99.9%): [149554.378, 150073.929] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_312._Benchmark.benchmark_Cluster_312  thrpt   30  149814.153 ± 259.775  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_313._Benchmark.benchmark_Cluster_313$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_313._Benchmark.benchmark_Cluster_313

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46992.773 ops/s
# Warmup Iteration   2: 74872.277 ops/s
# Warmup Iteration   3: 154775.261 ops/s
# Warmup Iteration   4: 165998.076 ops/s
# Warmup Iteration   5: 167633.186 ops/s
# Warmup Iteration   6: 167440.924 ops/s
# Warmup Iteration   7: 161087.492 ops/s
# Warmup Iteration   8: 121042.845 ops/s
# Warmup Iteration   9: 167162.917 ops/s
# Warmup Iteration  10: 167108.258 ops/s
# Warmup Iteration  11: 166994.158 ops/s
# Warmup Iteration  12: 167420.939 ops/s
# Warmup Iteration  13: 166547.340 ops/s
# Warmup Iteration  14: 167045.415 ops/s
# Warmup Iteration  15: 167267.158 ops/s
# Warmup Iteration  16: 167092.636 ops/s
# Warmup Iteration  17: 167793.099 ops/s
# Warmup Iteration  18: 167282.440 ops/s
# Warmup Iteration  19: 167048.534 ops/s
# Warmup Iteration  20: 166785.486 ops/s
# Warmup Iteration  21: 166834.465 ops/s
# Warmup Iteration  22: 166585.425 ops/s
# Warmup Iteration  23: 167840.739 ops/s
# Warmup Iteration  24: 167972.184 ops/s
# Warmup Iteration  25: 167553.894 ops/s
# Warmup Iteration  26: 167195.654 ops/s
# Warmup Iteration  27: 167327.577 ops/s
# Warmup Iteration  28: 167094.240 ops/s
# Warmup Iteration  29: 166703.583 ops/s
# Warmup Iteration  30: 167021.045 ops/s
Iteration   1: 166831.383 ops/s
Iteration   2: 166885.059 ops/s
Iteration   3: 167004.730 ops/s
Iteration   4: 166752.657 ops/s
Iteration   5: 167260.571 ops/s
Iteration   6: 166901.185 ops/s
Iteration   7: 166608.064 ops/s
Iteration   8: 167086.465 ops/s
Iteration   9: 167129.995 ops/s
Iteration  10: 165861.653 ops/s
Iteration  11: 165930.536 ops/s
Iteration  12: 167177.598 ops/s
Iteration  13: 167169.515 ops/s
Iteration  14: 167392.292 ops/s
Iteration  15: 167289.065 ops/s
Iteration  16: 167823.200 ops/s
Iteration  17: 166608.779 ops/s
Iteration  18: 166903.379 ops/s
Iteration  19: 167643.422 ops/s
Iteration  20: 166691.910 ops/s
Iteration  21: 166922.300 ops/s
Iteration  22: 167242.217 ops/s
Iteration  23: 165892.680 ops/s
Iteration  24: 167239.683 ops/s
Iteration  25: 167413.549 ops/s
Iteration  26: 167301.384 ops/s
Iteration  27: 167122.293 ops/s
Iteration  28: 167180.681 ops/s
Iteration  29: 167320.592 ops/s
Iteration  30: 167277.402 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_313._Benchmark.benchmark_Cluster_313":
  166995.475 ±(99.9%) 310.948 ops/s [Average]
  (min, avg, max) = (165861.653, 166995.475, 167823.200), stdev = 465.412
  CI (99.9%): [166684.527, 167306.423] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_313._Benchmark.benchmark_Cluster_313  thrpt   30  166995.475 ± 310.948  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_314._Benchmark.benchmark_Cluster_314$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_314._Benchmark.benchmark_Cluster_314

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48013.257 ops/s
# Warmup Iteration   2: 87654.567 ops/s
# Warmup Iteration   3: 94478.711 ops/s
# Warmup Iteration   4: 153222.702 ops/s
# Warmup Iteration   5: 153008.307 ops/s
# Warmup Iteration   6: 150138.726 ops/s
# Warmup Iteration   7: 151147.538 ops/s
# Warmup Iteration   8: 152262.862 ops/s
# Warmup Iteration   9: 151284.153 ops/s
# Warmup Iteration  10: 151595.669 ops/s
# Warmup Iteration  11: 152277.734 ops/s
# Warmup Iteration  12: 113930.477 ops/s
# Warmup Iteration  13: 136655.912 ops/s
# Warmup Iteration  14: 152193.821 ops/s
# Warmup Iteration  15: 152607.737 ops/s
# Warmup Iteration  16: 152396.873 ops/s
# Warmup Iteration  17: 157532.312 ops/s
# Warmup Iteration  18: 157015.767 ops/s
# Warmup Iteration  19: 156990.675 ops/s
# Warmup Iteration  20: 156957.794 ops/s
# Warmup Iteration  21: 157577.168 ops/s
# Warmup Iteration  22: 158334.182 ops/s
# Warmup Iteration  23: 158064.247 ops/s
# Warmup Iteration  24: 157154.982 ops/s
# Warmup Iteration  25: 157057.570 ops/s
# Warmup Iteration  26: 157385.976 ops/s
# Warmup Iteration  27: 157159.580 ops/s
# Warmup Iteration  28: 157221.531 ops/s
# Warmup Iteration  29: 157722.030 ops/s
# Warmup Iteration  30: 156539.407 ops/s
Iteration   1: 156020.885 ops/s
Iteration   2: 157644.063 ops/s
Iteration   3: 158128.736 ops/s
Iteration   4: 158227.340 ops/s
Iteration   5: 157365.964 ops/s
Iteration   6: 157354.960 ops/s
Iteration   7: 158331.568 ops/s
Iteration   8: 157761.921 ops/s
Iteration   9: 158047.486 ops/s
Iteration  10: 156520.442 ops/s
Iteration  11: 156863.086 ops/s
Iteration  12: 157542.726 ops/s
Iteration  13: 157543.901 ops/s
Iteration  14: 158135.486 ops/s
Iteration  15: 157581.886 ops/s
Iteration  16: 157587.940 ops/s
Iteration  17: 156654.648 ops/s
Iteration  18: 157278.731 ops/s
Iteration  19: 156375.196 ops/s
Iteration  20: 156922.149 ops/s
Iteration  21: 156044.783 ops/s
Iteration  22: 156771.100 ops/s
Iteration  23: 156837.890 ops/s
Iteration  24: 156145.630 ops/s
Iteration  25: 156420.905 ops/s
Iteration  26: 156889.103 ops/s
Iteration  27: 157362.695 ops/s
Iteration  28: 156991.771 ops/s
Iteration  29: 157848.415 ops/s
Iteration  30: 157100.469 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_314._Benchmark.benchmark_Cluster_314":
  157210.063 ±(99.9%) 445.206 ops/s [Average]
  (min, avg, max) = (156020.885, 157210.063, 158331.568), stdev = 666.364
  CI (99.9%): [156764.856, 157655.269] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_314._Benchmark.benchmark_Cluster_314  thrpt   30  157210.063 ± 445.206  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_315._Benchmark.benchmark_Cluster_315$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_315._Benchmark.benchmark_Cluster_315

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57059.584 ops/s
# Warmup Iteration   2: 79989.842 ops/s
# Warmup Iteration   3: 107418.680 ops/s
# Warmup Iteration   4: 143474.140 ops/s
# Warmup Iteration   5: 143566.378 ops/s
# Warmup Iteration   6: 142538.683 ops/s
# Warmup Iteration   7: 143558.964 ops/s
# Warmup Iteration   8: 142880.701 ops/s
# Warmup Iteration   9: 143484.989 ops/s
# Warmup Iteration  10: 143072.448 ops/s
# Warmup Iteration  11: 105498.259 ops/s
# Warmup Iteration  12: 135755.738 ops/s
# Warmup Iteration  13: 143438.226 ops/s
# Warmup Iteration  14: 143333.887 ops/s
# Warmup Iteration  15: 143563.442 ops/s
# Warmup Iteration  16: 143797.552 ops/s
# Warmup Iteration  17: 147062.963 ops/s
# Warmup Iteration  18: 146845.310 ops/s
# Warmup Iteration  19: 146453.491 ops/s
# Warmup Iteration  20: 146564.252 ops/s
# Warmup Iteration  21: 147002.737 ops/s
# Warmup Iteration  22: 146331.623 ops/s
# Warmup Iteration  23: 146111.011 ops/s
# Warmup Iteration  24: 146260.556 ops/s
# Warmup Iteration  25: 145525.945 ops/s
# Warmup Iteration  26: 146184.225 ops/s
# Warmup Iteration  27: 145632.786 ops/s
# Warmup Iteration  28: 146338.821 ops/s
# Warmup Iteration  29: 146309.065 ops/s
# Warmup Iteration  30: 146665.287 ops/s
Iteration   1: 146786.143 ops/s
Iteration   2: 147021.536 ops/s
Iteration   3: 146987.439 ops/s
Iteration   4: 146313.988 ops/s
Iteration   5: 146921.631 ops/s
Iteration   6: 146459.743 ops/s
Iteration   7: 146587.974 ops/s
Iteration   8: 146811.111 ops/s
Iteration   9: 146674.650 ops/s
Iteration  10: 147066.233 ops/s
Iteration  11: 147071.096 ops/s
Iteration  12: 147284.446 ops/s
Iteration  13: 147223.178 ops/s
Iteration  14: 147115.131 ops/s
Iteration  15: 147469.526 ops/s
Iteration  16: 147576.345 ops/s
Iteration  17: 147212.845 ops/s
Iteration  18: 147138.228 ops/s
Iteration  19: 146825.821 ops/s
Iteration  20: 146415.299 ops/s
Iteration  21: 146098.730 ops/s
Iteration  22: 146649.576 ops/s
Iteration  23: 146335.532 ops/s
Iteration  24: 145859.670 ops/s
Iteration  25: 145716.782 ops/s
Iteration  26: 146852.094 ops/s
Iteration  27: 146619.703 ops/s
Iteration  28: 146096.411 ops/s
Iteration  29: 146860.542 ops/s
Iteration  30: 147465.018 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_315._Benchmark.benchmark_Cluster_315":
  146783.881 ±(99.9%) 314.108 ops/s [Average]
  (min, avg, max) = (145716.782, 146783.881, 147576.345), stdev = 470.143
  CI (99.9%): [146469.772, 147097.989] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_315._Benchmark.benchmark_Cluster_315  thrpt   30  146783.881 ± 314.108  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_316._Benchmark.benchmark_Cluster_316$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_316._Benchmark.benchmark_Cluster_316

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59189.484 ops/s
# Warmup Iteration   2: 91591.119 ops/s
# Warmup Iteration   3: 93153.292 ops/s
# Warmup Iteration   4: 123282.243 ops/s
# Warmup Iteration   5: 142951.899 ops/s
# Warmup Iteration   6: 142578.125 ops/s
# Warmup Iteration   7: 143254.495 ops/s
# Warmup Iteration   8: 142408.943 ops/s
# Warmup Iteration   9: 142654.464 ops/s
# Warmup Iteration  10: 143154.151 ops/s
# Warmup Iteration  11: 141532.255 ops/s
# Warmup Iteration  12: 142277.385 ops/s
# Warmup Iteration  13: 142261.018 ops/s
# Warmup Iteration  14: 103539.001 ops/s
# Warmup Iteration  15: 134784.851 ops/s
# Warmup Iteration  16: 142900.606 ops/s
# Warmup Iteration  17: 148858.988 ops/s
# Warmup Iteration  18: 148690.991 ops/s
# Warmup Iteration  19: 148066.541 ops/s
# Warmup Iteration  20: 148117.383 ops/s
# Warmup Iteration  21: 148141.402 ops/s
# Warmup Iteration  22: 148121.189 ops/s
# Warmup Iteration  23: 147195.268 ops/s
# Warmup Iteration  24: 146695.821 ops/s
# Warmup Iteration  25: 147493.244 ops/s
# Warmup Iteration  26: 147652.163 ops/s
# Warmup Iteration  27: 147711.101 ops/s
# Warmup Iteration  28: 148176.619 ops/s
# Warmup Iteration  29: 148462.068 ops/s
# Warmup Iteration  30: 147868.956 ops/s
Iteration   1: 148628.137 ops/s
Iteration   2: 148806.783 ops/s
Iteration   3: 148585.531 ops/s
Iteration   4: 147856.296 ops/s
Iteration   5: 147451.839 ops/s
Iteration   6: 147878.981 ops/s
Iteration   7: 147579.391 ops/s
Iteration   8: 147799.844 ops/s
Iteration   9: 148655.298 ops/s
Iteration  10: 147672.933 ops/s
Iteration  11: 149092.058 ops/s
Iteration  12: 148765.474 ops/s
Iteration  13: 147747.798 ops/s
Iteration  14: 147760.675 ops/s
Iteration  15: 147953.847 ops/s
Iteration  16: 148336.574 ops/s
Iteration  17: 148293.367 ops/s
Iteration  18: 148632.290 ops/s
Iteration  19: 148533.796 ops/s
Iteration  20: 148416.144 ops/s
Iteration  21: 148472.503 ops/s
Iteration  22: 148658.134 ops/s
Iteration  23: 148834.156 ops/s
Iteration  24: 149375.610 ops/s
Iteration  25: 148016.444 ops/s
Iteration  26: 148125.291 ops/s
Iteration  27: 148140.859 ops/s
Iteration  28: 148106.170 ops/s
Iteration  29: 148122.695 ops/s
Iteration  30: 147192.659 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_316._Benchmark.benchmark_Cluster_316":
  148249.719 ±(99.9%) 340.308 ops/s [Average]
  (min, avg, max) = (147192.659, 148249.719, 149375.610), stdev = 509.358
  CI (99.9%): [147909.411, 148590.028] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_316._Benchmark.benchmark_Cluster_316  thrpt   30  148249.719 ± 340.308  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_317._Benchmark.benchmark_Cluster_317$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_317._Benchmark.benchmark_Cluster_317

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66910.519 ops/s
# Warmup Iteration   2: 99738.551 ops/s
# Warmup Iteration   3: 139073.028 ops/s
# Warmup Iteration   4: 176969.954 ops/s
# Warmup Iteration   5: 175665.774 ops/s
# Warmup Iteration   6: 177607.258 ops/s
# Warmup Iteration   7: 177671.721 ops/s
# Warmup Iteration   8: 177409.961 ops/s
# Warmup Iteration   9: 177555.243 ops/s
# Warmup Iteration  10: 165593.269 ops/s
# Warmup Iteration  11: 133970.672 ops/s
# Warmup Iteration  12: 176743.422 ops/s
# Warmup Iteration  13: 176678.554 ops/s
# Warmup Iteration  14: 177592.928 ops/s
# Warmup Iteration  15: 177714.993 ops/s
# Warmup Iteration  16: 176885.535 ops/s
# Warmup Iteration  17: 176981.717 ops/s
# Warmup Iteration  18: 176339.965 ops/s
# Warmup Iteration  19: 177255.176 ops/s
# Warmup Iteration  20: 177284.839 ops/s
# Warmup Iteration  21: 176769.437 ops/s
# Warmup Iteration  22: 176753.255 ops/s
# Warmup Iteration  23: 177008.275 ops/s
# Warmup Iteration  24: 176663.458 ops/s
# Warmup Iteration  25: 177198.229 ops/s
# Warmup Iteration  26: 177235.175 ops/s
# Warmup Iteration  27: 177859.152 ops/s
# Warmup Iteration  28: 176884.453 ops/s
# Warmup Iteration  29: 177555.533 ops/s
# Warmup Iteration  30: 176996.469 ops/s
Iteration   1: 176370.001 ops/s
Iteration   2: 176271.047 ops/s
Iteration   3: 177265.135 ops/s
Iteration   4: 176655.030 ops/s
Iteration   5: 177564.130 ops/s
Iteration   6: 177527.218 ops/s
Iteration   7: 176782.988 ops/s
Iteration   8: 177523.938 ops/s
Iteration   9: 177280.684 ops/s
Iteration  10: 176566.752 ops/s
Iteration  11: 176958.458 ops/s
Iteration  12: 177433.719 ops/s
Iteration  13: 176170.009 ops/s
Iteration  14: 176442.160 ops/s
Iteration  15: 176395.087 ops/s
Iteration  16: 177301.710 ops/s
Iteration  17: 177033.447 ops/s
Iteration  18: 177335.135 ops/s
Iteration  19: 176730.886 ops/s
Iteration  20: 176961.236 ops/s
Iteration  21: 176709.312 ops/s
Iteration  22: 178035.456 ops/s
Iteration  23: 177414.297 ops/s
Iteration  24: 177453.457 ops/s
Iteration  25: 177150.373 ops/s
Iteration  26: 177278.624 ops/s
Iteration  27: 178044.257 ops/s
Iteration  28: 177948.674 ops/s
Iteration  29: 178022.170 ops/s
Iteration  30: 178261.931 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_317._Benchmark.benchmark_Cluster_317":
  177162.911 ±(99.9%) 384.439 ops/s [Average]
  (min, avg, max) = (176170.009, 177162.911, 178261.931), stdev = 575.410
  CI (99.9%): [176778.472, 177547.350] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_317._Benchmark.benchmark_Cluster_317  thrpt   30  177162.911 ± 384.439  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_318._Benchmark.benchmark_Cluster_318$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_318._Benchmark.benchmark_Cluster_318

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63893.719 ops/s
# Warmup Iteration   2: 92518.307 ops/s
# Warmup Iteration   3: 136797.681 ops/s
# Warmup Iteration   4: 178654.968 ops/s
# Warmup Iteration   5: 176045.555 ops/s
# Warmup Iteration   6: 178239.390 ops/s
# Warmup Iteration   7: 178201.844 ops/s
# Warmup Iteration   8: 178222.563 ops/s
# Warmup Iteration   9: 177747.734 ops/s
# Warmup Iteration  10: 117151.032 ops/s
# Warmup Iteration  11: 179082.407 ops/s
# Warmup Iteration  12: 178367.319 ops/s
# Warmup Iteration  13: 178147.430 ops/s
# Warmup Iteration  14: 178503.929 ops/s
# Warmup Iteration  15: 178282.137 ops/s
# Warmup Iteration  16: 178617.169 ops/s
# Warmup Iteration  17: 178287.835 ops/s
# Warmup Iteration  18: 178499.780 ops/s
# Warmup Iteration  19: 179203.589 ops/s
# Warmup Iteration  20: 179169.351 ops/s
# Warmup Iteration  21: 178995.129 ops/s
# Warmup Iteration  22: 178910.449 ops/s
# Warmup Iteration  23: 179013.182 ops/s
# Warmup Iteration  24: 178215.207 ops/s
# Warmup Iteration  25: 179043.587 ops/s
# Warmup Iteration  26: 178374.866 ops/s
# Warmup Iteration  27: 178531.163 ops/s
# Warmup Iteration  28: 179392.236 ops/s
# Warmup Iteration  29: 179267.598 ops/s
# Warmup Iteration  30: 179309.375 ops/s
Iteration   1: 179453.700 ops/s
Iteration   2: 178486.897 ops/s
Iteration   3: 178925.094 ops/s
Iteration   4: 179075.621 ops/s
Iteration   5: 178922.751 ops/s
Iteration   6: 178752.603 ops/s
Iteration   7: 179307.539 ops/s
Iteration   8: 178659.765 ops/s
Iteration   9: 179210.272 ops/s
Iteration  10: 178548.583 ops/s
Iteration  11: 178122.645 ops/s
Iteration  12: 178138.162 ops/s
Iteration  13: 178099.099 ops/s
Iteration  14: 177530.564 ops/s
Iteration  15: 176833.085 ops/s
Iteration  16: 178716.960 ops/s
Iteration  17: 178005.474 ops/s
Iteration  18: 177850.240 ops/s
Iteration  19: 179000.283 ops/s
Iteration  20: 178320.929 ops/s
Iteration  21: 178327.913 ops/s
Iteration  22: 178125.575 ops/s
Iteration  23: 177993.998 ops/s
Iteration  24: 178451.161 ops/s
Iteration  25: 178252.070 ops/s
Iteration  26: 178397.259 ops/s
Iteration  27: 179310.417 ops/s
Iteration  28: 178698.763 ops/s
Iteration  29: 178578.653 ops/s
Iteration  30: 178714.141 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_318._Benchmark.benchmark_Cluster_318":
  178493.674 ±(99.9%) 377.224 ops/s [Average]
  (min, avg, max) = (176833.085, 178493.674, 179453.700), stdev = 564.611
  CI (99.9%): [178116.450, 178870.898] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_318._Benchmark.benchmark_Cluster_318  thrpt   30  178493.674 ± 377.224  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_319._Benchmark.benchmark_Cluster_319$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_319._Benchmark.benchmark_Cluster_319

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55607.843 ops/s
# Warmup Iteration   2: 77048.454 ops/s
# Warmup Iteration   3: 77577.224 ops/s
# Warmup Iteration   4: 105108.426 ops/s
# Warmup Iteration   5: 113710.293 ops/s
# Warmup Iteration   6: 113591.514 ops/s
# Warmup Iteration   7: 114229.667 ops/s
# Warmup Iteration   8: 113031.306 ops/s
# Warmup Iteration   9: 113798.167 ops/s
# Warmup Iteration  10: 114077.989 ops/s
# Warmup Iteration  11: 113728.629 ops/s
# Warmup Iteration  12: 113981.377 ops/s
# Warmup Iteration  13: 114536.411 ops/s
# Warmup Iteration  14: 114235.917 ops/s
# Warmup Iteration  15: 113956.459 ops/s
# Warmup Iteration  16: 92061.931 ops/s
# Warmup Iteration  17: 99287.335 ops/s
# Warmup Iteration  18: 114011.384 ops/s
# Warmup Iteration  19: 114248.630 ops/s
# Warmup Iteration  20: 114251.932 ops/s
# Warmup Iteration  21: 113771.724 ops/s
# Warmup Iteration  22: 113846.814 ops/s
# Warmup Iteration  23: 113637.329 ops/s
# Warmup Iteration  24: 114310.955 ops/s
# Warmup Iteration  25: 114258.260 ops/s
# Warmup Iteration  26: 113988.108 ops/s
# Warmup Iteration  27: 113761.919 ops/s
# Warmup Iteration  28: 113970.891 ops/s
# Warmup Iteration  29: 113883.809 ops/s
# Warmup Iteration  30: 113757.272 ops/s
Iteration   1: 114262.864 ops/s
Iteration   2: 114041.144 ops/s
Iteration   3: 114089.340 ops/s
Iteration   4: 113861.352 ops/s
Iteration   5: 114325.632 ops/s
Iteration   6: 114011.324 ops/s
Iteration   7: 114184.637 ops/s
Iteration   8: 114511.906 ops/s
Iteration   9: 113807.918 ops/s
Iteration  10: 113841.864 ops/s
Iteration  11: 113733.701 ops/s
Iteration  12: 112871.049 ops/s
Iteration  13: 113706.259 ops/s
Iteration  14: 113721.434 ops/s
Iteration  15: 114116.020 ops/s
Iteration  16: 113407.526 ops/s
Iteration  17: 113556.552 ops/s
Iteration  18: 114091.315 ops/s
Iteration  19: 113679.863 ops/s
Iteration  20: 113323.075 ops/s
Iteration  21: 113643.411 ops/s
Iteration  22: 113722.534 ops/s
Iteration  23: 113677.556 ops/s
Iteration  24: 114435.735 ops/s
Iteration  25: 114596.481 ops/s
Iteration  26: 114196.363 ops/s
Iteration  27: 114342.423 ops/s
Iteration  28: 114167.456 ops/s
Iteration  29: 113803.993 ops/s
Iteration  30: 113829.805 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_319._Benchmark.benchmark_Cluster_319":
  113918.684 ±(99.9%) 251.469 ops/s [Average]
  (min, avg, max) = (112871.049, 113918.684, 114596.481), stdev = 376.387
  CI (99.9%): [113667.215, 114170.154] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_319._Benchmark.benchmark_Cluster_319  thrpt   30  113918.684 ± 251.469  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_32._Benchmark.benchmark_Cluster_32$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_32._Benchmark.benchmark_Cluster_32

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58158.794 ops/s
# Warmup Iteration   2: 83356.486 ops/s
# Warmup Iteration   3: 130174.591 ops/s
# Warmup Iteration   4: 153994.913 ops/s
# Warmup Iteration   5: 152377.233 ops/s
# Warmup Iteration   6: 154466.620 ops/s
# Warmup Iteration   7: 153523.524 ops/s
# Warmup Iteration   8: 153621.946 ops/s
# Warmup Iteration   9: 153958.555 ops/s
# Warmup Iteration  10: 105142.589 ops/s
# Warmup Iteration  11: 154166.759 ops/s
# Warmup Iteration  12: 154771.672 ops/s
# Warmup Iteration  13: 154524.610 ops/s
# Warmup Iteration  14: 154281.548 ops/s
# Warmup Iteration  15: 154505.696 ops/s
# Warmup Iteration  16: 154705.365 ops/s
# Warmup Iteration  17: 153980.118 ops/s
# Warmup Iteration  18: 154730.781 ops/s
# Warmup Iteration  19: 154518.242 ops/s
# Warmup Iteration  20: 153385.840 ops/s
# Warmup Iteration  21: 154268.954 ops/s
# Warmup Iteration  22: 153265.465 ops/s
# Warmup Iteration  23: 153912.899 ops/s
# Warmup Iteration  24: 153902.306 ops/s
# Warmup Iteration  25: 154249.074 ops/s
# Warmup Iteration  26: 154040.514 ops/s
# Warmup Iteration  27: 153711.160 ops/s
# Warmup Iteration  28: 154413.234 ops/s
# Warmup Iteration  29: 154322.426 ops/s
# Warmup Iteration  30: 154484.220 ops/s
Iteration   1: 155537.313 ops/s
Iteration   2: 154069.816 ops/s
Iteration   3: 153427.511 ops/s
Iteration   4: 153692.033 ops/s
Iteration   5: 153589.153 ops/s
Iteration   6: 154967.097 ops/s
Iteration   7: 153932.926 ops/s
Iteration   8: 153773.406 ops/s
Iteration   9: 152931.562 ops/s
Iteration  10: 154375.953 ops/s
Iteration  11: 154930.725 ops/s
Iteration  12: 153787.957 ops/s
Iteration  13: 154303.987 ops/s
Iteration  14: 154644.734 ops/s
Iteration  15: 152495.827 ops/s
Iteration  16: 153036.581 ops/s
Iteration  17: 154018.314 ops/s
Iteration  18: 154584.639 ops/s
Iteration  19: 154136.095 ops/s
Iteration  20: 153467.667 ops/s
Iteration  21: 154208.401 ops/s
Iteration  22: 153916.023 ops/s
Iteration  23: 153771.061 ops/s
Iteration  24: 154434.826 ops/s
Iteration  25: 152744.623 ops/s
Iteration  26: 153915.610 ops/s
Iteration  27: 153585.090 ops/s
Iteration  28: 154391.384 ops/s
Iteration  29: 153980.373 ops/s
Iteration  30: 153781.098 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_32._Benchmark.benchmark_Cluster_32":
  153947.726 ±(99.9%) 441.338 ops/s [Average]
  (min, avg, max) = (152495.827, 153947.726, 155537.313), stdev = 660.574
  CI (99.9%): [153506.388, 154389.064] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_32._Benchmark.benchmark_Cluster_32  thrpt   30  153947.726 ± 441.338  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_320._Benchmark.benchmark_Cluster_320$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_320._Benchmark.benchmark_Cluster_320

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73537.050 ops/s
# Warmup Iteration   2: 121752.771 ops/s
# Warmup Iteration   3: 164150.588 ops/s
# Warmup Iteration   4: 226637.312 ops/s
# Warmup Iteration   5: 224918.766 ops/s
# Warmup Iteration   6: 227563.910 ops/s
# Warmup Iteration   7: 226427.829 ops/s
# Warmup Iteration   8: 226544.385 ops/s
# Warmup Iteration   9: 227213.130 ops/s
# Warmup Iteration  10: 208925.788 ops/s
# Warmup Iteration  11: 169809.274 ops/s
# Warmup Iteration  12: 227422.640 ops/s
# Warmup Iteration  13: 227484.181 ops/s
# Warmup Iteration  14: 227237.387 ops/s
# Warmup Iteration  15: 227486.246 ops/s
# Warmup Iteration  16: 226948.434 ops/s
# Warmup Iteration  17: 227052.133 ops/s
# Warmup Iteration  18: 227194.894 ops/s
# Warmup Iteration  19: 227025.642 ops/s
# Warmup Iteration  20: 226257.698 ops/s
# Warmup Iteration  21: 226326.129 ops/s
# Warmup Iteration  22: 227300.408 ops/s
# Warmup Iteration  23: 226237.772 ops/s
# Warmup Iteration  24: 226759.637 ops/s
# Warmup Iteration  25: 226613.075 ops/s
# Warmup Iteration  26: 226040.752 ops/s
# Warmup Iteration  27: 225696.375 ops/s
# Warmup Iteration  28: 227132.352 ops/s
# Warmup Iteration  29: 227195.820 ops/s
# Warmup Iteration  30: 227650.031 ops/s
Iteration   1: 227519.880 ops/s
Iteration   2: 227858.385 ops/s
Iteration   3: 227003.529 ops/s
Iteration   4: 227480.189 ops/s
Iteration   5: 226899.037 ops/s
Iteration   6: 227770.564 ops/s
Iteration   7: 226083.408 ops/s
Iteration   8: 226840.924 ops/s
Iteration   9: 226493.248 ops/s
Iteration  10: 225344.280 ops/s
Iteration  11: 225552.570 ops/s
Iteration  12: 225518.931 ops/s
Iteration  13: 225514.645 ops/s
Iteration  14: 225645.942 ops/s
Iteration  15: 225849.790 ops/s
Iteration  16: 226355.931 ops/s
Iteration  17: 226843.098 ops/s
Iteration  18: 225504.925 ops/s
Iteration  19: 225995.376 ops/s
Iteration  20: 225646.043 ops/s
Iteration  21: 227713.983 ops/s
Iteration  22: 226804.529 ops/s
Iteration  23: 227632.539 ops/s
Iteration  24: 226801.429 ops/s
Iteration  25: 225727.996 ops/s
Iteration  26: 227072.963 ops/s
Iteration  27: 225952.727 ops/s
Iteration  28: 226822.611 ops/s
Iteration  29: 226338.602 ops/s
Iteration  30: 227257.695 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_320._Benchmark.benchmark_Cluster_320":
  226528.192 ±(99.9%) 532.741 ops/s [Average]
  (min, avg, max) = (225344.280, 226528.192, 227858.385), stdev = 797.381
  CI (99.9%): [225995.452, 227060.933] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_320._Benchmark.benchmark_Cluster_320  thrpt   30  226528.192 ± 532.741  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_321._Benchmark.benchmark_Cluster_321$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_321._Benchmark.benchmark_Cluster_321

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73436.613 ops/s
# Warmup Iteration   2: 100689.393 ops/s
# Warmup Iteration   3: 132832.996 ops/s
# Warmup Iteration   4: 184109.153 ops/s
# Warmup Iteration   5: 182156.341 ops/s
# Warmup Iteration   6: 181800.505 ops/s
# Warmup Iteration   7: 182900.857 ops/s
# Warmup Iteration   8: 183769.702 ops/s
# Warmup Iteration   9: 183736.319 ops/s
# Warmup Iteration  10: 181562.971 ops/s
# Warmup Iteration  11: 147898.471 ops/s
# Warmup Iteration  12: 156166.121 ops/s
# Warmup Iteration  13: 183637.829 ops/s
# Warmup Iteration  14: 183983.817 ops/s
# Warmup Iteration  15: 184912.819 ops/s
# Warmup Iteration  16: 184495.481 ops/s
# Warmup Iteration  17: 186743.046 ops/s
# Warmup Iteration  18: 186177.912 ops/s
# Warmup Iteration  19: 185965.372 ops/s
# Warmup Iteration  20: 186533.970 ops/s
# Warmup Iteration  21: 186257.938 ops/s
# Warmup Iteration  22: 186050.682 ops/s
# Warmup Iteration  23: 184915.986 ops/s
# Warmup Iteration  24: 184948.676 ops/s
# Warmup Iteration  25: 185709.624 ops/s
# Warmup Iteration  26: 187049.417 ops/s
# Warmup Iteration  27: 186758.179 ops/s
# Warmup Iteration  28: 185772.753 ops/s
# Warmup Iteration  29: 186121.866 ops/s
# Warmup Iteration  30: 186451.780 ops/s
Iteration   1: 184913.244 ops/s
Iteration   2: 186819.714 ops/s
Iteration   3: 185756.275 ops/s
Iteration   4: 186520.637 ops/s
Iteration   5: 185672.824 ops/s
Iteration   6: 185512.934 ops/s
Iteration   7: 186398.920 ops/s
Iteration   8: 185027.085 ops/s
Iteration   9: 186827.756 ops/s
Iteration  10: 186285.734 ops/s
Iteration  11: 184925.075 ops/s
Iteration  12: 185731.234 ops/s
Iteration  13: 186383.329 ops/s
Iteration  14: 186197.891 ops/s
Iteration  15: 185081.739 ops/s
Iteration  16: 184606.554 ops/s
Iteration  17: 184830.331 ops/s
Iteration  18: 187662.862 ops/s
Iteration  19: 187024.269 ops/s
Iteration  20: 186715.756 ops/s
Iteration  21: 187106.213 ops/s
Iteration  22: 186453.777 ops/s
Iteration  23: 186161.685 ops/s
Iteration  24: 186769.929 ops/s
Iteration  25: 185461.676 ops/s
Iteration  26: 185627.821 ops/s
Iteration  27: 185907.048 ops/s
Iteration  28: 187078.489 ops/s
Iteration  29: 186640.287 ops/s
Iteration  30: 186674.333 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_321._Benchmark.benchmark_Cluster_321":
  186092.514 ±(99.9%) 534.349 ops/s [Average]
  (min, avg, max) = (184606.554, 186092.514, 187662.862), stdev = 799.788
  CI (99.9%): [185558.165, 186626.863] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_321._Benchmark.benchmark_Cluster_321  thrpt   30  186092.514 ± 534.349  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_322._Benchmark.benchmark_Cluster_322$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_322._Benchmark.benchmark_Cluster_322

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 29889.212 ops/s
# Warmup Iteration   2: 62995.593 ops/s
# Warmup Iteration   3: 97354.618 ops/s
# Warmup Iteration   4: 131319.276 ops/s
# Warmup Iteration   5: 131641.429 ops/s
# Warmup Iteration   6: 131193.199 ops/s
# Warmup Iteration   7: 130829.752 ops/s
# Warmup Iteration   8: 88646.853 ops/s
# Warmup Iteration   9: 131336.992 ops/s
# Warmup Iteration  10: 131526.114 ops/s
# Warmup Iteration  11: 131261.193 ops/s
# Warmup Iteration  12: 131491.800 ops/s
# Warmup Iteration  13: 131611.385 ops/s
# Warmup Iteration  14: 131619.300 ops/s
# Warmup Iteration  15: 131301.472 ops/s
# Warmup Iteration  16: 131254.961 ops/s
# Warmup Iteration  17: 130691.461 ops/s
# Warmup Iteration  18: 130943.656 ops/s
# Warmup Iteration  19: 131387.454 ops/s
# Warmup Iteration  20: 131669.720 ops/s
# Warmup Iteration  21: 130903.404 ops/s
# Warmup Iteration  22: 131075.406 ops/s
# Warmup Iteration  23: 131341.458 ops/s
# Warmup Iteration  24: 131214.772 ops/s
# Warmup Iteration  25: 130029.761 ops/s
# Warmup Iteration  26: 129872.389 ops/s
# Warmup Iteration  27: 130375.659 ops/s
# Warmup Iteration  28: 131093.684 ops/s
# Warmup Iteration  29: 130885.702 ops/s
# Warmup Iteration  30: 130828.441 ops/s
Iteration   1: 130650.847 ops/s
Iteration   2: 130982.955 ops/s
Iteration   3: 130838.176 ops/s
Iteration   4: 130507.359 ops/s
Iteration   5: 131286.784 ops/s
Iteration   6: 130635.600 ops/s
Iteration   7: 130356.184 ops/s
Iteration   8: 130433.144 ops/s
Iteration   9: 129766.213 ops/s
Iteration  10: 131322.124 ops/s
Iteration  11: 131023.188 ops/s
Iteration  12: 130524.701 ops/s
Iteration  13: 131249.660 ops/s
Iteration  14: 131117.425 ops/s
Iteration  15: 131198.553 ops/s
Iteration  16: 130943.899 ops/s
Iteration  17: 131313.860 ops/s
Iteration  18: 132179.199 ops/s
Iteration  19: 132141.698 ops/s
Iteration  20: 132023.049 ops/s
Iteration  21: 131434.536 ops/s
Iteration  22: 131218.169 ops/s
Iteration  23: 131205.567 ops/s
Iteration  24: 131617.537 ops/s
Iteration  25: 130956.863 ops/s
Iteration  26: 131516.295 ops/s
Iteration  27: 131386.086 ops/s
Iteration  28: 131565.680 ops/s
Iteration  29: 130789.721 ops/s
Iteration  30: 131291.222 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_322._Benchmark.benchmark_Cluster_322":
  131115.876 ±(99.9%) 356.910 ops/s [Average]
  (min, avg, max) = (129766.213, 131115.876, 132179.199), stdev = 534.206
  CI (99.9%): [130758.967, 131472.786] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_322._Benchmark.benchmark_Cluster_322  thrpt   30  131115.876 ± 356.910  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_323._Benchmark.benchmark_Cluster_323$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_323._Benchmark.benchmark_Cluster_323

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66869.958 ops/s
# Warmup Iteration   2: 91906.895 ops/s
# Warmup Iteration   3: 175211.946 ops/s
# Warmup Iteration   4: 188431.038 ops/s
# Warmup Iteration   5: 189898.889 ops/s
# Warmup Iteration   6: 190654.216 ops/s
# Warmup Iteration   7: 191045.403 ops/s
# Warmup Iteration   8: 159410.820 ops/s
# Warmup Iteration   9: 160469.303 ops/s
# Warmup Iteration  10: 189856.312 ops/s
# Warmup Iteration  11: 189781.308 ops/s
# Warmup Iteration  12: 189898.753 ops/s
# Warmup Iteration  13: 189972.146 ops/s
# Warmup Iteration  14: 189870.109 ops/s
# Warmup Iteration  15: 190448.845 ops/s
# Warmup Iteration  16: 189962.061 ops/s
# Warmup Iteration  17: 191132.379 ops/s
# Warmup Iteration  18: 190451.430 ops/s
# Warmup Iteration  19: 191147.426 ops/s
# Warmup Iteration  20: 190945.890 ops/s
# Warmup Iteration  21: 190839.974 ops/s
# Warmup Iteration  22: 190855.563 ops/s
# Warmup Iteration  23: 191777.877 ops/s
# Warmup Iteration  24: 191089.056 ops/s
# Warmup Iteration  25: 191652.338 ops/s
# Warmup Iteration  26: 191127.363 ops/s
# Warmup Iteration  27: 191501.806 ops/s
# Warmup Iteration  28: 190882.155 ops/s
# Warmup Iteration  29: 190248.669 ops/s
# Warmup Iteration  30: 190902.116 ops/s
Iteration   1: 190908.897 ops/s
Iteration   2: 191181.310 ops/s
Iteration   3: 190742.911 ops/s
Iteration   4: 190658.464 ops/s
Iteration   5: 190936.143 ops/s
Iteration   6: 191402.947 ops/s
Iteration   7: 190894.385 ops/s
Iteration   8: 191958.370 ops/s
Iteration   9: 191001.452 ops/s
Iteration  10: 191831.841 ops/s
Iteration  11: 191422.768 ops/s
Iteration  12: 191358.437 ops/s
Iteration  13: 191626.742 ops/s
Iteration  14: 191175.328 ops/s
Iteration  15: 191390.589 ops/s
Iteration  16: 191492.114 ops/s
Iteration  17: 190535.605 ops/s
Iteration  18: 190968.247 ops/s
Iteration  19: 191154.473 ops/s
Iteration  20: 190756.179 ops/s
Iteration  21: 189639.641 ops/s
Iteration  22: 190042.124 ops/s
Iteration  23: 190276.423 ops/s
Iteration  24: 190436.728 ops/s
Iteration  25: 190761.514 ops/s
Iteration  26: 190882.811 ops/s
Iteration  27: 190817.795 ops/s
Iteration  28: 190893.773 ops/s
Iteration  29: 190708.526 ops/s
Iteration  30: 191328.999 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_323._Benchmark.benchmark_Cluster_323":
  190972.851 ±(99.9%) 335.953 ops/s [Average]
  (min, avg, max) = (189639.641, 190972.851, 191958.370), stdev = 502.838
  CI (99.9%): [190636.899, 191308.804] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_323._Benchmark.benchmark_Cluster_323  thrpt   30  190972.851 ± 335.953  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_324._Benchmark.benchmark_Cluster_324$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_324._Benchmark.benchmark_Cluster_324

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68265.006 ops/s
# Warmup Iteration   2: 90790.591 ops/s
# Warmup Iteration   3: 109433.429 ops/s
# Warmup Iteration   4: 156344.659 ops/s
# Warmup Iteration   5: 157370.226 ops/s
# Warmup Iteration   6: 155606.195 ops/s
# Warmup Iteration   7: 157037.491 ops/s
# Warmup Iteration   8: 157949.582 ops/s
# Warmup Iteration   9: 157561.112 ops/s
# Warmup Iteration  10: 157200.611 ops/s
# Warmup Iteration  11: 157564.057 ops/s
# Warmup Iteration  12: 113884.797 ops/s
# Warmup Iteration  13: 145821.514 ops/s
# Warmup Iteration  14: 157403.155 ops/s
# Warmup Iteration  15: 157038.270 ops/s
# Warmup Iteration  16: 157400.854 ops/s
# Warmup Iteration  17: 157802.981 ops/s
# Warmup Iteration  18: 157344.101 ops/s
# Warmup Iteration  19: 157649.957 ops/s
# Warmup Iteration  20: 156682.767 ops/s
# Warmup Iteration  21: 157308.622 ops/s
# Warmup Iteration  22: 157188.013 ops/s
# Warmup Iteration  23: 157303.674 ops/s
# Warmup Iteration  24: 156800.030 ops/s
# Warmup Iteration  25: 157022.176 ops/s
# Warmup Iteration  26: 157346.370 ops/s
# Warmup Iteration  27: 157468.775 ops/s
# Warmup Iteration  28: 157379.951 ops/s
# Warmup Iteration  29: 156904.771 ops/s
# Warmup Iteration  30: 157493.005 ops/s
Iteration   1: 158114.520 ops/s
Iteration   2: 158204.774 ops/s
Iteration   3: 157434.031 ops/s
Iteration   4: 157888.955 ops/s
Iteration   5: 157173.194 ops/s
Iteration   6: 157432.582 ops/s
Iteration   7: 157799.909 ops/s
Iteration   8: 157895.223 ops/s
Iteration   9: 158147.978 ops/s
Iteration  10: 157814.517 ops/s
Iteration  11: 157368.654 ops/s
Iteration  12: 157587.866 ops/s
Iteration  13: 157493.102 ops/s
Iteration  14: 157637.157 ops/s
Iteration  15: 157794.746 ops/s
Iteration  16: 158269.094 ops/s
Iteration  17: 158327.674 ops/s
Iteration  18: 157410.926 ops/s
Iteration  19: 157232.639 ops/s
Iteration  20: 157817.147 ops/s
Iteration  21: 157722.914 ops/s
Iteration  22: 157836.449 ops/s
Iteration  23: 157539.189 ops/s
Iteration  24: 157948.601 ops/s
Iteration  25: 157739.000 ops/s
Iteration  26: 157204.041 ops/s
Iteration  27: 157128.557 ops/s
Iteration  28: 157932.806 ops/s
Iteration  29: 158050.476 ops/s
Iteration  30: 157845.851 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_324._Benchmark.benchmark_Cluster_324":
  157726.419 ±(99.9%) 222.415 ops/s [Average]
  (min, avg, max) = (157128.557, 157726.419, 158327.674), stdev = 332.901
  CI (99.9%): [157504.004, 157948.834] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_324._Benchmark.benchmark_Cluster_324  thrpt   30  157726.419 ± 222.415  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_325._Benchmark.benchmark_Cluster_325$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_325._Benchmark.benchmark_Cluster_325

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57729.024 ops/s
# Warmup Iteration   2: 80822.035 ops/s
# Warmup Iteration   3: 117582.083 ops/s
# Warmup Iteration   4: 147523.943 ops/s
# Warmup Iteration   5: 145942.812 ops/s
# Warmup Iteration   6: 147588.093 ops/s
# Warmup Iteration   7: 147349.532 ops/s
# Warmup Iteration   8: 146973.234 ops/s
# Warmup Iteration   9: 147309.434 ops/s
# Warmup Iteration  10: 125884.490 ops/s
# Warmup Iteration  11: 121279.835 ops/s
# Warmup Iteration  12: 148290.968 ops/s
# Warmup Iteration  13: 147851.397 ops/s
# Warmup Iteration  14: 148168.228 ops/s
# Warmup Iteration  15: 148317.298 ops/s
# Warmup Iteration  16: 147917.621 ops/s
# Warmup Iteration  17: 147240.551 ops/s
# Warmup Iteration  18: 147614.651 ops/s
# Warmup Iteration  19: 147459.064 ops/s
# Warmup Iteration  20: 147449.334 ops/s
# Warmup Iteration  21: 147401.694 ops/s
# Warmup Iteration  22: 148058.860 ops/s
# Warmup Iteration  23: 148363.815 ops/s
# Warmup Iteration  24: 148048.724 ops/s
# Warmup Iteration  25: 148249.071 ops/s
# Warmup Iteration  26: 148342.654 ops/s
# Warmup Iteration  27: 147982.311 ops/s
# Warmup Iteration  28: 148179.587 ops/s
# Warmup Iteration  29: 148147.611 ops/s
# Warmup Iteration  30: 148072.916 ops/s
Iteration   1: 147855.768 ops/s
Iteration   2: 147952.751 ops/s
Iteration   3: 148055.933 ops/s
Iteration   4: 148045.183 ops/s
Iteration   5: 147771.039 ops/s
Iteration   6: 148020.892 ops/s
Iteration   7: 147831.538 ops/s
Iteration   8: 148383.589 ops/s
Iteration   9: 148034.903 ops/s
Iteration  10: 147998.375 ops/s
Iteration  11: 147995.265 ops/s
Iteration  12: 147984.044 ops/s
Iteration  13: 147304.866 ops/s
Iteration  14: 147932.029 ops/s
Iteration  15: 148356.534 ops/s
Iteration  16: 147631.527 ops/s
Iteration  17: 147301.381 ops/s
Iteration  18: 147338.484 ops/s
Iteration  19: 147448.202 ops/s
Iteration  20: 147239.021 ops/s
Iteration  21: 147984.397 ops/s
Iteration  22: 147344.409 ops/s
Iteration  23: 147656.355 ops/s
Iteration  24: 148162.311 ops/s
Iteration  25: 148161.247 ops/s
Iteration  26: 147591.226 ops/s
Iteration  27: 148075.699 ops/s
Iteration  28: 147925.555 ops/s
Iteration  29: 147841.945 ops/s
Iteration  30: 147674.327 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_325._Benchmark.benchmark_Cluster_325":
  147829.960 ±(99.9%) 209.833 ops/s [Average]
  (min, avg, max) = (147239.021, 147829.960, 148383.589), stdev = 314.068
  CI (99.9%): [147620.127, 148039.793] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_325._Benchmark.benchmark_Cluster_325  thrpt   30  147829.960 ± 209.833  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_326._Benchmark.benchmark_Cluster_326$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_326._Benchmark.benchmark_Cluster_326

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58188.588 ops/s
# Warmup Iteration   2: 83214.084 ops/s
# Warmup Iteration   3: 96085.687 ops/s
# Warmup Iteration   4: 138661.255 ops/s
# Warmup Iteration   5: 138671.448 ops/s
# Warmup Iteration   6: 137900.083 ops/s
# Warmup Iteration   7: 139029.563 ops/s
# Warmup Iteration   8: 138937.391 ops/s
# Warmup Iteration   9: 136619.261 ops/s
# Warmup Iteration  10: 136486.862 ops/s
# Warmup Iteration  11: 138489.231 ops/s
# Warmup Iteration  12: 120788.099 ops/s
# Warmup Iteration  13: 111105.317 ops/s
# Warmup Iteration  14: 138149.437 ops/s
# Warmup Iteration  15: 137824.857 ops/s
# Warmup Iteration  16: 138130.809 ops/s
# Warmup Iteration  17: 140222.596 ops/s
# Warmup Iteration  18: 141585.284 ops/s
# Warmup Iteration  19: 141889.083 ops/s
# Warmup Iteration  20: 140470.267 ops/s
# Warmup Iteration  21: 140795.280 ops/s
# Warmup Iteration  22: 142306.014 ops/s
# Warmup Iteration  23: 141786.193 ops/s
# Warmup Iteration  24: 141623.985 ops/s
# Warmup Iteration  25: 141655.097 ops/s
# Warmup Iteration  26: 141299.304 ops/s
# Warmup Iteration  27: 141940.997 ops/s
# Warmup Iteration  28: 141703.580 ops/s
# Warmup Iteration  29: 141742.456 ops/s
# Warmup Iteration  30: 141639.667 ops/s
Iteration   1: 141625.784 ops/s
Iteration   2: 141832.072 ops/s
Iteration   3: 141778.120 ops/s
Iteration   4: 141273.007 ops/s
Iteration   5: 141095.380 ops/s
Iteration   6: 141956.084 ops/s
Iteration   7: 141685.335 ops/s
Iteration   8: 142018.494 ops/s
Iteration   9: 141546.566 ops/s
Iteration  10: 141973.111 ops/s
Iteration  11: 141464.012 ops/s
Iteration  12: 141443.693 ops/s
Iteration  13: 140692.605 ops/s
Iteration  14: 141249.049 ops/s
Iteration  15: 141695.957 ops/s
Iteration  16: 142259.876 ops/s
Iteration  17: 142359.033 ops/s
Iteration  18: 141529.106 ops/s
Iteration  19: 141482.341 ops/s
Iteration  20: 141834.586 ops/s
Iteration  21: 141046.355 ops/s
Iteration  22: 141228.309 ops/s
Iteration  23: 141128.245 ops/s
Iteration  24: 141486.340 ops/s
Iteration  25: 141351.961 ops/s
Iteration  26: 141925.075 ops/s
Iteration  27: 140554.603 ops/s
Iteration  28: 141359.836 ops/s
Iteration  29: 141999.203 ops/s
Iteration  30: 141812.228 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_326._Benchmark.benchmark_Cluster_326":
  141556.212 ±(99.9%) 280.947 ops/s [Average]
  (min, avg, max) = (140554.603, 141556.212, 142359.033), stdev = 420.508
  CI (99.9%): [141275.265, 141837.159] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_326._Benchmark.benchmark_Cluster_326  thrpt   30  141556.212 ± 280.947  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_327._Benchmark.benchmark_Cluster_327$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_327._Benchmark.benchmark_Cluster_327

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47629.224 ops/s
# Warmup Iteration   2: 70789.732 ops/s
# Warmup Iteration   3: 84308.687 ops/s
# Warmup Iteration   4: 122521.007 ops/s
# Warmup Iteration   5: 122116.657 ops/s
# Warmup Iteration   6: 121476.979 ops/s
# Warmup Iteration   7: 122276.549 ops/s
# Warmup Iteration   8: 122326.918 ops/s
# Warmup Iteration   9: 122471.866 ops/s
# Warmup Iteration  10: 122769.606 ops/s
# Warmup Iteration  11: 123348.855 ops/s
# Warmup Iteration  12: 83207.970 ops/s
# Warmup Iteration  13: 121230.396 ops/s
# Warmup Iteration  14: 121958.604 ops/s
# Warmup Iteration  15: 121640.931 ops/s
# Warmup Iteration  16: 122064.056 ops/s
# Warmup Iteration  17: 125466.262 ops/s
# Warmup Iteration  18: 124957.766 ops/s
# Warmup Iteration  19: 124630.726 ops/s
# Warmup Iteration  20: 124438.134 ops/s
# Warmup Iteration  21: 125405.152 ops/s
# Warmup Iteration  22: 125367.254 ops/s
# Warmup Iteration  23: 125003.489 ops/s
# Warmup Iteration  24: 125385.549 ops/s
# Warmup Iteration  25: 125304.457 ops/s
# Warmup Iteration  26: 125353.830 ops/s
# Warmup Iteration  27: 125384.301 ops/s
# Warmup Iteration  28: 125064.770 ops/s
# Warmup Iteration  29: 124801.632 ops/s
# Warmup Iteration  30: 124846.397 ops/s
Iteration   1: 124778.731 ops/s
Iteration   2: 124471.642 ops/s
Iteration   3: 125568.021 ops/s
Iteration   4: 123805.619 ops/s
Iteration   5: 124278.297 ops/s
Iteration   6: 125063.042 ops/s
Iteration   7: 124611.006 ops/s
Iteration   8: 125286.290 ops/s
Iteration   9: 124841.751 ops/s
Iteration  10: 124987.929 ops/s
Iteration  11: 125949.984 ops/s
Iteration  12: 124952.103 ops/s
Iteration  13: 125018.128 ops/s
Iteration  14: 125682.079 ops/s
Iteration  15: 124499.312 ops/s
Iteration  16: 125353.363 ops/s
Iteration  17: 124164.833 ops/s
Iteration  18: 125564.397 ops/s
Iteration  19: 125378.369 ops/s
Iteration  20: 124970.077 ops/s
Iteration  21: 125324.295 ops/s
Iteration  22: 125618.015 ops/s
Iteration  23: 125680.262 ops/s
Iteration  24: 125209.599 ops/s
Iteration  25: 124716.034 ops/s
Iteration  26: 125199.999 ops/s
Iteration  27: 125218.042 ops/s
Iteration  28: 125070.940 ops/s
Iteration  29: 124347.185 ops/s
Iteration  30: 125378.442 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_327._Benchmark.benchmark_Cluster_327":
  125032.926 ±(99.9%) 339.098 ops/s [Average]
  (min, avg, max) = (123805.619, 125032.926, 125949.984), stdev = 507.545
  CI (99.9%): [124693.829, 125372.024] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_327._Benchmark.benchmark_Cluster_327  thrpt   30  125032.926 ± 339.098  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_328._Benchmark.benchmark_Cluster_328$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_328._Benchmark.benchmark_Cluster_328

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86843.725 ops/s
# Warmup Iteration   2: 92951.555 ops/s
# Warmup Iteration   3: 114401.776 ops/s
# Warmup Iteration   4: 148672.244 ops/s
# Warmup Iteration   5: 149057.761 ops/s
# Warmup Iteration   6: 149084.016 ops/s
# Warmup Iteration   7: 149487.798 ops/s
# Warmup Iteration   8: 150016.537 ops/s
# Warmup Iteration   9: 149538.959 ops/s
# Warmup Iteration  10: 149091.402 ops/s
# Warmup Iteration  11: 149324.522 ops/s
# Warmup Iteration  12: 149419.902 ops/s
# Warmup Iteration  13: 102710.206 ops/s
# Warmup Iteration  14: 150014.070 ops/s
# Warmup Iteration  15: 148907.922 ops/s
# Warmup Iteration  16: 149509.888 ops/s
# Warmup Iteration  17: 156870.622 ops/s
# Warmup Iteration  18: 157704.163 ops/s
# Warmup Iteration  19: 157602.616 ops/s
# Warmup Iteration  20: 157186.294 ops/s
# Warmup Iteration  21: 157450.610 ops/s
# Warmup Iteration  22: 157657.682 ops/s
# Warmup Iteration  23: 157092.556 ops/s
# Warmup Iteration  24: 156903.976 ops/s
# Warmup Iteration  25: 157710.181 ops/s
# Warmup Iteration  26: 156436.235 ops/s
# Warmup Iteration  27: 156487.017 ops/s
# Warmup Iteration  28: 156375.598 ops/s
# Warmup Iteration  29: 157367.205 ops/s
# Warmup Iteration  30: 157006.332 ops/s
Iteration   1: 156392.712 ops/s
Iteration   2: 157237.889 ops/s
Iteration   3: 156541.919 ops/s
Iteration   4: 156117.355 ops/s
Iteration   5: 156514.303 ops/s
Iteration   6: 156515.386 ops/s
Iteration   7: 156489.605 ops/s
Iteration   8: 157269.658 ops/s
Iteration   9: 157283.627 ops/s
Iteration  10: 157986.290 ops/s
Iteration  11: 157932.754 ops/s
Iteration  12: 158141.760 ops/s
Iteration  13: 157322.111 ops/s
Iteration  14: 157356.232 ops/s
Iteration  15: 157596.164 ops/s
Iteration  16: 156601.899 ops/s
Iteration  17: 156816.611 ops/s
Iteration  18: 157239.291 ops/s
Iteration  19: 157797.102 ops/s
Iteration  20: 157340.284 ops/s
Iteration  21: 157917.294 ops/s
Iteration  22: 156853.267 ops/s
Iteration  23: 157541.834 ops/s
Iteration  24: 157625.620 ops/s
Iteration  25: 157238.474 ops/s
Iteration  26: 157228.494 ops/s
Iteration  27: 157454.357 ops/s
Iteration  28: 156967.251 ops/s
Iteration  29: 157807.441 ops/s
Iteration  30: 157692.767 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_328._Benchmark.benchmark_Cluster_328":
  157227.325 ±(99.9%) 361.238 ops/s [Average]
  (min, avg, max) = (156117.355, 157227.325, 158141.760), stdev = 540.684
  CI (99.9%): [156866.087, 157588.563] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_328._Benchmark.benchmark_Cluster_328  thrpt   30  157227.325 ± 361.238  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_329._Benchmark.benchmark_Cluster_329$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_329._Benchmark.benchmark_Cluster_329

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54092.651 ops/s
# Warmup Iteration   2: 85263.834 ops/s
# Warmup Iteration   3: 182537.641 ops/s
# Warmup Iteration   4: 193010.564 ops/s
# Warmup Iteration   5: 193818.341 ops/s
# Warmup Iteration   6: 193819.275 ops/s
# Warmup Iteration   7: 170435.128 ops/s
# Warmup Iteration   8: 154767.855 ops/s
# Warmup Iteration   9: 195174.518 ops/s
# Warmup Iteration  10: 194438.938 ops/s
# Warmup Iteration  11: 195468.404 ops/s
# Warmup Iteration  12: 194524.165 ops/s
# Warmup Iteration  13: 194645.271 ops/s
# Warmup Iteration  14: 195157.034 ops/s
# Warmup Iteration  15: 194277.116 ops/s
# Warmup Iteration  16: 194578.783 ops/s
# Warmup Iteration  17: 194514.292 ops/s
# Warmup Iteration  18: 194143.306 ops/s
# Warmup Iteration  19: 194556.673 ops/s
# Warmup Iteration  20: 194331.338 ops/s
# Warmup Iteration  21: 193780.927 ops/s
# Warmup Iteration  22: 194123.772 ops/s
# Warmup Iteration  23: 193909.743 ops/s
# Warmup Iteration  24: 194480.511 ops/s
# Warmup Iteration  25: 193859.370 ops/s
# Warmup Iteration  26: 194470.026 ops/s
# Warmup Iteration  27: 194309.984 ops/s
# Warmup Iteration  28: 194674.772 ops/s
# Warmup Iteration  29: 194359.131 ops/s
# Warmup Iteration  30: 194137.059 ops/s
Iteration   1: 194467.962 ops/s
Iteration   2: 194431.406 ops/s
Iteration   3: 193674.845 ops/s
Iteration   4: 192534.713 ops/s
Iteration   5: 193734.029 ops/s
Iteration   6: 193863.783 ops/s
Iteration   7: 195069.626 ops/s
Iteration   8: 194821.177 ops/s
Iteration   9: 194293.368 ops/s
Iteration  10: 193633.183 ops/s
Iteration  11: 193855.200 ops/s
Iteration  12: 194021.787 ops/s
Iteration  13: 193232.882 ops/s
Iteration  14: 194499.370 ops/s
Iteration  15: 195115.918 ops/s
Iteration  16: 194248.459 ops/s
Iteration  17: 194484.078 ops/s
Iteration  18: 193809.948 ops/s
Iteration  19: 194775.605 ops/s
Iteration  20: 194131.497 ops/s
Iteration  21: 193694.559 ops/s
Iteration  22: 193632.930 ops/s
Iteration  23: 194991.434 ops/s
Iteration  24: 193491.383 ops/s
Iteration  25: 193134.233 ops/s
Iteration  26: 193862.509 ops/s
Iteration  27: 194486.756 ops/s
Iteration  28: 195278.399 ops/s
Iteration  29: 193967.145 ops/s
Iteration  30: 194463.129 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_329._Benchmark.benchmark_Cluster_329":
  194123.377 ±(99.9%) 424.552 ops/s [Average]
  (min, avg, max) = (192534.713, 194123.377, 195278.399), stdev = 635.450
  CI (99.9%): [193698.825, 194547.929] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_329._Benchmark.benchmark_Cluster_329  thrpt   30  194123.377 ± 424.552  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_33._Benchmark.benchmark_Cluster_33$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_33._Benchmark.benchmark_Cluster_33

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91555.546 ops/s
# Warmup Iteration   2: 105884.670 ops/s
# Warmup Iteration   3: 104890.959 ops/s
# Warmup Iteration   4: 105075.878 ops/s
# Warmup Iteration   5: 139847.670 ops/s
# Warmup Iteration   6: 143877.268 ops/s
# Warmup Iteration   7: 143199.978 ops/s
# Warmup Iteration   8: 143313.283 ops/s
# Warmup Iteration   9: 143927.555 ops/s
# Warmup Iteration  10: 142359.122 ops/s
# Warmup Iteration  11: 143683.089 ops/s
# Warmup Iteration  12: 144010.485 ops/s
# Warmup Iteration  13: 143423.857 ops/s
# Warmup Iteration  14: 143111.887 ops/s
# Warmup Iteration  15: 143223.678 ops/s
# Warmup Iteration  16: 142970.172 ops/s
# Warmup Iteration  17: 149686.130 ops/s
# Warmup Iteration  18: 149434.602 ops/s
# Warmup Iteration  19: 149572.683 ops/s
# Warmup Iteration  20: 149602.326 ops/s
# Warmup Iteration  21: 149573.549 ops/s
# Warmup Iteration  22: 123109.155 ops/s
# Warmup Iteration  23: 124906.005 ops/s
# Warmup Iteration  24: 148702.142 ops/s
# Warmup Iteration  25: 149008.033 ops/s
# Warmup Iteration  26: 148317.039 ops/s
# Warmup Iteration  27: 148959.383 ops/s
# Warmup Iteration  28: 148698.937 ops/s
# Warmup Iteration  29: 148483.970 ops/s
# Warmup Iteration  30: 148169.644 ops/s
Iteration   1: 148022.800 ops/s
Iteration   2: 148145.331 ops/s
Iteration   3: 148888.706 ops/s
Iteration   4: 149242.186 ops/s
Iteration   5: 149291.855 ops/s
Iteration   6: 149208.994 ops/s
Iteration   7: 148712.887 ops/s
Iteration   8: 149015.686 ops/s
Iteration   9: 148284.955 ops/s
Iteration  10: 148148.891 ops/s
Iteration  11: 148295.821 ops/s
Iteration  12: 148651.404 ops/s
Iteration  13: 148176.822 ops/s
Iteration  14: 148649.087 ops/s
Iteration  15: 148962.920 ops/s
Iteration  16: 148616.861 ops/s
Iteration  17: 148521.617 ops/s
Iteration  18: 148505.806 ops/s
Iteration  19: 148926.661 ops/s
Iteration  20: 148867.964 ops/s
Iteration  21: 148785.115 ops/s
Iteration  22: 148254.602 ops/s
Iteration  23: 148168.583 ops/s
Iteration  24: 148517.273 ops/s
Iteration  25: 148486.557 ops/s
Iteration  26: 147911.728 ops/s
Iteration  27: 149340.666 ops/s
Iteration  28: 148204.252 ops/s
Iteration  29: 148649.018 ops/s
Iteration  30: 148455.987 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_33._Benchmark.benchmark_Cluster_33":
  148597.035 ±(99.9%) 264.258 ops/s [Average]
  (min, avg, max) = (147911.728, 148597.035, 149340.666), stdev = 395.529
  CI (99.9%): [148332.777, 148861.292] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_33._Benchmark.benchmark_Cluster_33  thrpt   30  148597.035 ± 264.258  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_330._Benchmark.benchmark_Cluster_330$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_330._Benchmark.benchmark_Cluster_330

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67746.194 ops/s
# Warmup Iteration   2: 89992.210 ops/s
# Warmup Iteration   3: 156222.804 ops/s
# Warmup Iteration   4: 175301.942 ops/s
# Warmup Iteration   5: 172858.679 ops/s
# Warmup Iteration   6: 173990.484 ops/s
# Warmup Iteration   7: 174581.657 ops/s
# Warmup Iteration   8: 175465.087 ops/s
# Warmup Iteration   9: 120573.817 ops/s
# Warmup Iteration  10: 175144.594 ops/s
# Warmup Iteration  11: 174480.168 ops/s
# Warmup Iteration  12: 173942.185 ops/s
# Warmup Iteration  13: 174693.294 ops/s
# Warmup Iteration  14: 174379.691 ops/s
# Warmup Iteration  15: 174417.856 ops/s
# Warmup Iteration  16: 173886.779 ops/s
# Warmup Iteration  17: 174720.046 ops/s
# Warmup Iteration  18: 174975.460 ops/s
# Warmup Iteration  19: 174329.047 ops/s
# Warmup Iteration  20: 174138.414 ops/s
# Warmup Iteration  21: 174429.373 ops/s
# Warmup Iteration  22: 174007.415 ops/s
# Warmup Iteration  23: 175219.645 ops/s
# Warmup Iteration  24: 174510.180 ops/s
# Warmup Iteration  25: 173948.062 ops/s
# Warmup Iteration  26: 174577.743 ops/s
# Warmup Iteration  27: 173891.267 ops/s
# Warmup Iteration  28: 173952.426 ops/s
# Warmup Iteration  29: 174206.242 ops/s
# Warmup Iteration  30: 174994.179 ops/s
Iteration   1: 174617.396 ops/s
Iteration   2: 174486.727 ops/s
Iteration   3: 173280.363 ops/s
Iteration   4: 173783.977 ops/s
Iteration   5: 173327.133 ops/s
Iteration   6: 174620.268 ops/s
Iteration   7: 173766.480 ops/s
Iteration   8: 174197.488 ops/s
Iteration   9: 174337.283 ops/s
Iteration  10: 174242.833 ops/s
Iteration  11: 174383.654 ops/s
Iteration  12: 174034.506 ops/s
Iteration  13: 173730.720 ops/s
Iteration  14: 174570.917 ops/s
Iteration  15: 175282.686 ops/s
Iteration  16: 174827.667 ops/s
Iteration  17: 174692.878 ops/s
Iteration  18: 174880.574 ops/s
Iteration  19: 174051.482 ops/s
Iteration  20: 174445.104 ops/s
Iteration  21: 174021.381 ops/s
Iteration  22: 174399.032 ops/s
Iteration  23: 174396.355 ops/s
Iteration  24: 174319.668 ops/s
Iteration  25: 174771.003 ops/s
Iteration  26: 174159.823 ops/s
Iteration  27: 174350.808 ops/s
Iteration  28: 173387.382 ops/s
Iteration  29: 174328.274 ops/s
Iteration  30: 173936.449 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_330._Benchmark.benchmark_Cluster_330":
  174254.344 ±(99.9%) 312.098 ops/s [Average]
  (min, avg, max) = (173280.363, 174254.344, 175282.686), stdev = 467.133
  CI (99.9%): [173942.246, 174566.441] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_330._Benchmark.benchmark_Cluster_330  thrpt   30  174254.344 ± 312.098  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_331._Benchmark.benchmark_Cluster_331$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_331._Benchmark.benchmark_Cluster_331

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 38666.118 ops/s
# Warmup Iteration   2: 75741.980 ops/s
# Warmup Iteration   3: 99759.013 ops/s
# Warmup Iteration   4: 140815.236 ops/s
# Warmup Iteration   5: 138918.243 ops/s
# Warmup Iteration   6: 140938.474 ops/s
# Warmup Iteration   7: 140242.940 ops/s
# Warmup Iteration   8: 140493.888 ops/s
# Warmup Iteration   9: 139668.157 ops/s
# Warmup Iteration  10: 118413.600 ops/s
# Warmup Iteration  11: 115896.418 ops/s
# Warmup Iteration  12: 139883.309 ops/s
# Warmup Iteration  13: 139947.758 ops/s
# Warmup Iteration  14: 139523.841 ops/s
# Warmup Iteration  15: 140578.531 ops/s
# Warmup Iteration  16: 140269.915 ops/s
# Warmup Iteration  17: 140246.998 ops/s
# Warmup Iteration  18: 140139.029 ops/s
# Warmup Iteration  19: 140693.402 ops/s
# Warmup Iteration  20: 140769.677 ops/s
# Warmup Iteration  21: 140341.524 ops/s
# Warmup Iteration  22: 140422.996 ops/s
# Warmup Iteration  23: 140825.071 ops/s
# Warmup Iteration  24: 140586.356 ops/s
# Warmup Iteration  25: 139937.934 ops/s
# Warmup Iteration  26: 140606.670 ops/s
# Warmup Iteration  27: 139105.289 ops/s
# Warmup Iteration  28: 139550.566 ops/s
# Warmup Iteration  29: 140007.552 ops/s
# Warmup Iteration  30: 139886.649 ops/s
Iteration   1: 140381.449 ops/s
Iteration   2: 140250.888 ops/s
Iteration   3: 141147.559 ops/s
Iteration   4: 141075.550 ops/s
Iteration   5: 140899.678 ops/s
Iteration   6: 140212.838 ops/s
Iteration   7: 140496.815 ops/s
Iteration   8: 140621.698 ops/s
Iteration   9: 140121.841 ops/s
Iteration  10: 140721.405 ops/s
Iteration  11: 140330.615 ops/s
Iteration  12: 140128.671 ops/s
Iteration  13: 140682.287 ops/s
Iteration  14: 140616.444 ops/s
Iteration  15: 140012.598 ops/s
Iteration  16: 141014.819 ops/s
Iteration  17: 140682.680 ops/s
Iteration  18: 139935.947 ops/s
Iteration  19: 139342.654 ops/s
Iteration  20: 140260.840 ops/s
Iteration  21: 140184.306 ops/s
Iteration  22: 140190.338 ops/s
Iteration  23: 139937.392 ops/s
Iteration  24: 139604.434 ops/s
Iteration  25: 139465.102 ops/s
Iteration  26: 139738.547 ops/s
Iteration  27: 140164.142 ops/s
Iteration  28: 139643.918 ops/s
Iteration  29: 140142.610 ops/s
Iteration  30: 139653.247 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_331._Benchmark.benchmark_Cluster_331":
  140255.377 ±(99.9%) 318.730 ops/s [Average]
  (min, avg, max) = (139342.654, 140255.377, 141147.559), stdev = 477.061
  CI (99.9%): [139936.647, 140574.107] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_331._Benchmark.benchmark_Cluster_331  thrpt   30  140255.377 ± 318.730  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_332._Benchmark.benchmark_Cluster_332$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_332._Benchmark.benchmark_Cluster_332

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43526.115 ops/s
# Warmup Iteration   2: 93146.446 ops/s
# Warmup Iteration   3: 150364.880 ops/s
# Warmup Iteration   4: 196213.254 ops/s
# Warmup Iteration   5: 193326.637 ops/s
# Warmup Iteration   6: 196274.448 ops/s
# Warmup Iteration   7: 196335.839 ops/s
# Warmup Iteration   8: 195880.171 ops/s
# Warmup Iteration   9: 133015.430 ops/s
# Warmup Iteration  10: 195765.271 ops/s
# Warmup Iteration  11: 196093.068 ops/s
# Warmup Iteration  12: 196557.775 ops/s
# Warmup Iteration  13: 196362.214 ops/s
# Warmup Iteration  14: 196677.010 ops/s
# Warmup Iteration  15: 196249.547 ops/s
# Warmup Iteration  16: 197207.229 ops/s
# Warmup Iteration  17: 196543.661 ops/s
# Warmup Iteration  18: 196749.711 ops/s
# Warmup Iteration  19: 196376.365 ops/s
# Warmup Iteration  20: 196650.843 ops/s
# Warmup Iteration  21: 197123.563 ops/s
# Warmup Iteration  22: 196682.321 ops/s
# Warmup Iteration  23: 196848.572 ops/s
# Warmup Iteration  24: 196106.647 ops/s
# Warmup Iteration  25: 195987.471 ops/s
# Warmup Iteration  26: 196043.042 ops/s
# Warmup Iteration  27: 196950.128 ops/s
# Warmup Iteration  28: 196593.832 ops/s
# Warmup Iteration  29: 196656.778 ops/s
# Warmup Iteration  30: 196724.164 ops/s
Iteration   1: 197400.103 ops/s
Iteration   2: 196479.687 ops/s
Iteration   3: 196019.925 ops/s
Iteration   4: 197001.908 ops/s
Iteration   5: 195677.597 ops/s
Iteration   6: 196626.160 ops/s
Iteration   7: 195568.853 ops/s
Iteration   8: 197040.021 ops/s
Iteration   9: 196918.052 ops/s
Iteration  10: 196714.745 ops/s
Iteration  11: 196596.522 ops/s
Iteration  12: 196388.150 ops/s
Iteration  13: 196334.015 ops/s
Iteration  14: 197200.649 ops/s
Iteration  15: 195393.267 ops/s
Iteration  16: 196832.402 ops/s
Iteration  17: 195890.421 ops/s
Iteration  18: 195695.768 ops/s
Iteration  19: 196878.140 ops/s
Iteration  20: 196294.364 ops/s
Iteration  21: 196239.520 ops/s
Iteration  22: 195887.389 ops/s
Iteration  23: 195565.610 ops/s
Iteration  24: 196465.432 ops/s
Iteration  25: 196120.208 ops/s
Iteration  26: 196886.311 ops/s
Iteration  27: 196050.604 ops/s
Iteration  28: 196103.569 ops/s
Iteration  29: 195859.509 ops/s
Iteration  30: 196616.956 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_332._Benchmark.benchmark_Cluster_332":
  196358.195 ±(99.9%) 356.021 ops/s [Average]
  (min, avg, max) = (195393.267, 196358.195, 197400.103), stdev = 532.876
  CI (99.9%): [196002.174, 196714.216] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_332._Benchmark.benchmark_Cluster_332  thrpt   30  196358.195 ± 356.021  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_333._Benchmark.benchmark_Cluster_333$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_333._Benchmark.benchmark_Cluster_333

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50252.696 ops/s
# Warmup Iteration   2: 68215.203 ops/s
# Warmup Iteration   3: 88539.472 ops/s
# Warmup Iteration   4: 119772.073 ops/s
# Warmup Iteration   5: 121772.417 ops/s
# Warmup Iteration   6: 120444.123 ops/s
# Warmup Iteration   7: 120586.127 ops/s
# Warmup Iteration   8: 120135.813 ops/s
# Warmup Iteration   9: 120898.430 ops/s
# Warmup Iteration  10: 120324.812 ops/s
# Warmup Iteration  11: 102320.861 ops/s
# Warmup Iteration  12: 99264.150 ops/s
# Warmup Iteration  13: 121364.680 ops/s
# Warmup Iteration  14: 120157.431 ops/s
# Warmup Iteration  15: 119832.890 ops/s
# Warmup Iteration  16: 119285.046 ops/s
# Warmup Iteration  17: 119738.778 ops/s
# Warmup Iteration  18: 119937.350 ops/s
# Warmup Iteration  19: 120338.748 ops/s
# Warmup Iteration  20: 121193.121 ops/s
# Warmup Iteration  21: 120891.243 ops/s
# Warmup Iteration  22: 120060.001 ops/s
# Warmup Iteration  23: 121331.256 ops/s
# Warmup Iteration  24: 121039.098 ops/s
# Warmup Iteration  25: 119890.422 ops/s
# Warmup Iteration  26: 120434.086 ops/s
# Warmup Iteration  27: 119738.160 ops/s
# Warmup Iteration  28: 120593.489 ops/s
# Warmup Iteration  29: 119482.370 ops/s
# Warmup Iteration  30: 120613.889 ops/s
Iteration   1: 120429.048 ops/s
Iteration   2: 120813.499 ops/s
Iteration   3: 120068.143 ops/s
Iteration   4: 119868.099 ops/s
Iteration   5: 120257.262 ops/s
Iteration   6: 120521.997 ops/s
Iteration   7: 120954.726 ops/s
Iteration   8: 120005.090 ops/s
Iteration   9: 119195.901 ops/s
Iteration  10: 119609.446 ops/s
Iteration  11: 119617.596 ops/s
Iteration  12: 119477.215 ops/s
Iteration  13: 119827.293 ops/s
Iteration  14: 120792.914 ops/s
Iteration  15: 119517.170 ops/s
Iteration  16: 121270.256 ops/s
Iteration  17: 120756.073 ops/s
Iteration  18: 120578.139 ops/s
Iteration  19: 121863.789 ops/s
Iteration  20: 120876.662 ops/s
Iteration  21: 120361.798 ops/s
Iteration  22: 121789.286 ops/s
Iteration  23: 120616.313 ops/s
Iteration  24: 120504.811 ops/s
Iteration  25: 120664.547 ops/s
Iteration  26: 121813.759 ops/s
Iteration  27: 119886.827 ops/s
Iteration  28: 120217.547 ops/s
Iteration  29: 119436.476 ops/s
Iteration  30: 120577.639 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_333._Benchmark.benchmark_Cluster_333":
  120405.644 ±(99.9%) 471.832 ops/s [Average]
  (min, avg, max) = (119195.901, 120405.644, 121863.789), stdev = 706.216
  CI (99.9%): [119933.812, 120877.476] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_333._Benchmark.benchmark_Cluster_333  thrpt   30  120405.644 ± 471.832  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_334._Benchmark.benchmark_Cluster_334$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_334._Benchmark.benchmark_Cluster_334

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 38409.620 ops/s
# Warmup Iteration   2: 67846.979 ops/s
# Warmup Iteration   3: 116794.979 ops/s
# Warmup Iteration   4: 140616.100 ops/s
# Warmup Iteration   5: 139442.528 ops/s
# Warmup Iteration   6: 140541.105 ops/s
# Warmup Iteration   7: 141305.245 ops/s
# Warmup Iteration   8: 134750.422 ops/s
# Warmup Iteration   9: 101300.809 ops/s
# Warmup Iteration  10: 139843.361 ops/s
# Warmup Iteration  11: 139046.732 ops/s
# Warmup Iteration  12: 140822.068 ops/s
# Warmup Iteration  13: 140748.529 ops/s
# Warmup Iteration  14: 141165.940 ops/s
# Warmup Iteration  15: 141497.311 ops/s
# Warmup Iteration  16: 141221.580 ops/s
# Warmup Iteration  17: 143335.435 ops/s
# Warmup Iteration  18: 142547.480 ops/s
# Warmup Iteration  19: 143165.589 ops/s
# Warmup Iteration  20: 143184.647 ops/s
# Warmup Iteration  21: 143404.634 ops/s
# Warmup Iteration  22: 143002.442 ops/s
# Warmup Iteration  23: 142301.024 ops/s
# Warmup Iteration  24: 142078.528 ops/s
# Warmup Iteration  25: 142650.675 ops/s
# Warmup Iteration  26: 142857.564 ops/s
# Warmup Iteration  27: 143058.210 ops/s
# Warmup Iteration  28: 142549.596 ops/s
# Warmup Iteration  29: 142878.810 ops/s
# Warmup Iteration  30: 142712.541 ops/s
Iteration   1: 141469.846 ops/s
Iteration   2: 140733.021 ops/s
Iteration   3: 141972.900 ops/s
Iteration   4: 142548.592 ops/s
Iteration   5: 142216.727 ops/s
Iteration   6: 143160.553 ops/s
Iteration   7: 143255.935 ops/s
Iteration   8: 143679.803 ops/s
Iteration   9: 143592.804 ops/s
Iteration  10: 143178.941 ops/s
Iteration  11: 143731.931 ops/s
Iteration  12: 143664.672 ops/s
Iteration  13: 143217.742 ops/s
Iteration  14: 143506.626 ops/s
Iteration  15: 143368.793 ops/s
Iteration  16: 144005.475 ops/s
Iteration  17: 143547.068 ops/s
Iteration  18: 144240.635 ops/s
Iteration  19: 143636.110 ops/s
Iteration  20: 143520.006 ops/s
Iteration  21: 143773.954 ops/s
Iteration  22: 142898.142 ops/s
Iteration  23: 144237.660 ops/s
Iteration  24: 143080.160 ops/s
Iteration  25: 143434.651 ops/s
Iteration  26: 143158.137 ops/s
Iteration  27: 142844.814 ops/s
Iteration  28: 143937.449 ops/s
Iteration  29: 143931.492 ops/s
Iteration  30: 144073.977 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_334._Benchmark.benchmark_Cluster_334":
  143253.954 ±(99.9%) 534.814 ops/s [Average]
  (min, avg, max) = (140733.021, 143253.954, 144240.635), stdev = 800.484
  CI (99.9%): [142719.140, 143788.768] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_334._Benchmark.benchmark_Cluster_334  thrpt   30  143253.954 ± 534.814  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_335._Benchmark.benchmark_Cluster_335$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_335._Benchmark.benchmark_Cluster_335

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 36047.124 ops/s
# Warmup Iteration   2: 67937.663 ops/s
# Warmup Iteration   3: 74245.469 ops/s
# Warmup Iteration   4: 117720.507 ops/s
# Warmup Iteration   5: 117667.291 ops/s
# Warmup Iteration   6: 116838.019 ops/s
# Warmup Iteration   7: 118269.536 ops/s
# Warmup Iteration   8: 117748.745 ops/s
# Warmup Iteration   9: 117334.391 ops/s
# Warmup Iteration  10: 117572.544 ops/s
# Warmup Iteration  11: 118316.371 ops/s
# Warmup Iteration  12: 90953.221 ops/s
# Warmup Iteration  13: 105610.531 ops/s
# Warmup Iteration  14: 115986.012 ops/s
# Warmup Iteration  15: 116561.473 ops/s
# Warmup Iteration  16: 116394.713 ops/s
# Warmup Iteration  17: 118917.514 ops/s
# Warmup Iteration  18: 118650.720 ops/s
# Warmup Iteration  19: 119367.808 ops/s
# Warmup Iteration  20: 119426.102 ops/s
# Warmup Iteration  21: 119334.283 ops/s
# Warmup Iteration  22: 118947.065 ops/s
# Warmup Iteration  23: 119242.392 ops/s
# Warmup Iteration  24: 119134.174 ops/s
# Warmup Iteration  25: 118618.038 ops/s
# Warmup Iteration  26: 118471.583 ops/s
# Warmup Iteration  27: 119386.543 ops/s
# Warmup Iteration  28: 118517.385 ops/s
# Warmup Iteration  29: 119636.677 ops/s
# Warmup Iteration  30: 119281.035 ops/s
Iteration   1: 119476.913 ops/s
Iteration   2: 119636.203 ops/s
Iteration   3: 118378.352 ops/s
Iteration   4: 118962.269 ops/s
Iteration   5: 119407.894 ops/s
Iteration   6: 119283.745 ops/s
Iteration   7: 119381.294 ops/s
Iteration   8: 119003.142 ops/s
Iteration   9: 118658.654 ops/s
Iteration  10: 119408.443 ops/s
Iteration  11: 119122.568 ops/s
Iteration  12: 119275.137 ops/s
Iteration  13: 118915.722 ops/s
Iteration  14: 118567.482 ops/s
Iteration  15: 118848.445 ops/s
Iteration  16: 118939.372 ops/s
Iteration  17: 119322.633 ops/s
Iteration  18: 118389.148 ops/s
Iteration  19: 118873.457 ops/s
Iteration  20: 119082.938 ops/s
Iteration  21: 118096.057 ops/s
Iteration  22: 118799.207 ops/s
Iteration  23: 118206.875 ops/s
Iteration  24: 118803.797 ops/s
Iteration  25: 118584.186 ops/s
Iteration  26: 117928.356 ops/s
Iteration  27: 118784.831 ops/s
Iteration  28: 119117.427 ops/s
Iteration  29: 118863.633 ops/s
Iteration  30: 118168.318 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_335._Benchmark.benchmark_Cluster_335":
  118876.217 ±(99.9%) 295.275 ops/s [Average]
  (min, avg, max) = (117928.356, 118876.217, 119636.203), stdev = 441.954
  CI (99.9%): [118580.942, 119171.492] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_335._Benchmark.benchmark_Cluster_335  thrpt   30  118876.217 ± 295.275  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_336._Benchmark.benchmark_Cluster_336$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_336._Benchmark.benchmark_Cluster_336

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79243.510 ops/s
# Warmup Iteration   2: 102935.315 ops/s
# Warmup Iteration   3: 159719.579 ops/s
# Warmup Iteration   4: 187354.998 ops/s
# Warmup Iteration   5: 184957.405 ops/s
# Warmup Iteration   6: 187473.758 ops/s
# Warmup Iteration   7: 187723.913 ops/s
# Warmup Iteration   8: 186890.004 ops/s
# Warmup Iteration   9: 187592.116 ops/s
# Warmup Iteration  10: 127660.831 ops/s
# Warmup Iteration  11: 187111.167 ops/s
# Warmup Iteration  12: 187602.212 ops/s
# Warmup Iteration  13: 188177.452 ops/s
# Warmup Iteration  14: 187579.793 ops/s
# Warmup Iteration  15: 187525.346 ops/s
# Warmup Iteration  16: 187880.896 ops/s
# Warmup Iteration  17: 187541.412 ops/s
# Warmup Iteration  18: 187481.715 ops/s
# Warmup Iteration  19: 187827.879 ops/s
# Warmup Iteration  20: 187184.084 ops/s
# Warmup Iteration  21: 187410.711 ops/s
# Warmup Iteration  22: 187565.390 ops/s
# Warmup Iteration  23: 187416.284 ops/s
# Warmup Iteration  24: 187356.829 ops/s
# Warmup Iteration  25: 187760.736 ops/s
# Warmup Iteration  26: 187611.685 ops/s
# Warmup Iteration  27: 187451.139 ops/s
# Warmup Iteration  28: 187569.304 ops/s
# Warmup Iteration  29: 188185.943 ops/s
# Warmup Iteration  30: 188427.422 ops/s
Iteration   1: 188503.388 ops/s
Iteration   2: 187842.715 ops/s
Iteration   3: 188175.125 ops/s
Iteration   4: 187925.159 ops/s
Iteration   5: 188817.921 ops/s
Iteration   6: 187722.076 ops/s
Iteration   7: 188198.538 ops/s
Iteration   8: 188725.075 ops/s
Iteration   9: 186941.795 ops/s
Iteration  10: 187518.920 ops/s
Iteration  11: 187241.819 ops/s
Iteration  12: 187227.054 ops/s
Iteration  13: 186812.992 ops/s
Iteration  14: 187061.074 ops/s
Iteration  15: 187977.820 ops/s
Iteration  16: 187272.605 ops/s
Iteration  17: 187005.444 ops/s
Iteration  18: 187470.166 ops/s
Iteration  19: 187329.403 ops/s
Iteration  20: 187545.123 ops/s
Iteration  21: 187635.044 ops/s
Iteration  22: 187411.063 ops/s
Iteration  23: 186706.496 ops/s
Iteration  24: 188116.736 ops/s
Iteration  25: 188618.204 ops/s
Iteration  26: 187615.828 ops/s
Iteration  27: 188223.619 ops/s
Iteration  28: 187319.506 ops/s
Iteration  29: 188053.603 ops/s
Iteration  30: 187847.868 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_336._Benchmark.benchmark_Cluster_336":
  187695.406 ±(99.9%) 379.330 ops/s [Average]
  (min, avg, max) = (186706.496, 187695.406, 188817.921), stdev = 567.764
  CI (99.9%): [187316.076, 188074.736] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_336._Benchmark.benchmark_Cluster_336  thrpt   30  187695.406 ± 379.330  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_337._Benchmark.benchmark_Cluster_337$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_337._Benchmark.benchmark_Cluster_337

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57815.876 ops/s
# Warmup Iteration   2: 90788.171 ops/s
# Warmup Iteration   3: 90029.361 ops/s
# Warmup Iteration   4: 133382.359 ops/s
# Warmup Iteration   5: 143072.123 ops/s
# Warmup Iteration   6: 143834.859 ops/s
# Warmup Iteration   7: 142115.053 ops/s
# Warmup Iteration   8: 144212.944 ops/s
# Warmup Iteration   9: 142941.851 ops/s
# Warmup Iteration  10: 143251.371 ops/s
# Warmup Iteration  11: 142791.411 ops/s
# Warmup Iteration  12: 143210.363 ops/s
# Warmup Iteration  13: 143308.646 ops/s
# Warmup Iteration  14: 144445.153 ops/s
# Warmup Iteration  15: 94588.555 ops/s
# Warmup Iteration  16: 142508.843 ops/s
# Warmup Iteration  17: 147622.971 ops/s
# Warmup Iteration  18: 147518.162 ops/s
# Warmup Iteration  19: 147234.245 ops/s
# Warmup Iteration  20: 147780.480 ops/s
# Warmup Iteration  21: 148017.796 ops/s
# Warmup Iteration  22: 147817.091 ops/s
# Warmup Iteration  23: 147912.397 ops/s
# Warmup Iteration  24: 147816.070 ops/s
# Warmup Iteration  25: 147698.107 ops/s
# Warmup Iteration  26: 147906.388 ops/s
# Warmup Iteration  27: 147381.316 ops/s
# Warmup Iteration  28: 146552.551 ops/s
# Warmup Iteration  29: 146706.549 ops/s
# Warmup Iteration  30: 147844.878 ops/s
Iteration   1: 146221.044 ops/s
Iteration   2: 146792.507 ops/s
Iteration   3: 147951.495 ops/s
Iteration   4: 148049.246 ops/s
Iteration   5: 147763.162 ops/s
Iteration   6: 148119.184 ops/s
Iteration   7: 147440.471 ops/s
Iteration   8: 147249.628 ops/s
Iteration   9: 146107.514 ops/s
Iteration  10: 146272.538 ops/s
Iteration  11: 147732.517 ops/s
Iteration  12: 147350.884 ops/s
Iteration  13: 147150.125 ops/s
Iteration  14: 146201.899 ops/s
Iteration  15: 146744.824 ops/s
Iteration  16: 146436.497 ops/s
Iteration  17: 147485.042 ops/s
Iteration  18: 147379.129 ops/s
Iteration  19: 147986.043 ops/s
Iteration  20: 146554.652 ops/s
Iteration  21: 147167.264 ops/s
Iteration  22: 147175.837 ops/s
Iteration  23: 147442.997 ops/s
Iteration  24: 148137.737 ops/s
Iteration  25: 147953.223 ops/s
Iteration  26: 147288.241 ops/s
Iteration  27: 147228.776 ops/s
Iteration  28: 146028.447 ops/s
Iteration  29: 147545.020 ops/s
Iteration  30: 146898.248 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_337._Benchmark.benchmark_Cluster_337":
  147195.140 ±(99.9%) 430.262 ops/s [Average]
  (min, avg, max) = (146028.447, 147195.140, 148137.737), stdev = 643.996
  CI (99.9%): [146764.878, 147625.401] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_337._Benchmark.benchmark_Cluster_337  thrpt   30  147195.140 ± 430.262  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_338._Benchmark.benchmark_Cluster_338$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_338._Benchmark.benchmark_Cluster_338

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72679.357 ops/s
# Warmup Iteration   2: 89344.435 ops/s
# Warmup Iteration   3: 140328.214 ops/s
# Warmup Iteration   4: 159987.743 ops/s
# Warmup Iteration   5: 159276.728 ops/s
# Warmup Iteration   6: 160293.072 ops/s
# Warmup Iteration   7: 160530.894 ops/s
# Warmup Iteration   8: 159880.076 ops/s
# Warmup Iteration   9: 160045.788 ops/s
# Warmup Iteration  10: 113735.874 ops/s
# Warmup Iteration  11: 157176.212 ops/s
# Warmup Iteration  12: 160899.146 ops/s
# Warmup Iteration  13: 160579.326 ops/s
# Warmup Iteration  14: 160247.181 ops/s
# Warmup Iteration  15: 160440.367 ops/s
# Warmup Iteration  16: 160847.619 ops/s
# Warmup Iteration  17: 160214.236 ops/s
# Warmup Iteration  18: 160836.304 ops/s
# Warmup Iteration  19: 160163.712 ops/s
# Warmup Iteration  20: 159932.978 ops/s
# Warmup Iteration  21: 159971.729 ops/s
# Warmup Iteration  22: 160066.280 ops/s
# Warmup Iteration  23: 159816.664 ops/s
# Warmup Iteration  24: 159867.022 ops/s
# Warmup Iteration  25: 160119.035 ops/s
# Warmup Iteration  26: 159983.886 ops/s
# Warmup Iteration  27: 160148.040 ops/s
# Warmup Iteration  28: 160073.983 ops/s
# Warmup Iteration  29: 160630.402 ops/s
# Warmup Iteration  30: 159958.049 ops/s
Iteration   1: 160270.629 ops/s
Iteration   2: 160407.033 ops/s
Iteration   3: 160045.617 ops/s
Iteration   4: 160438.450 ops/s
Iteration   5: 160805.441 ops/s
Iteration   6: 160156.532 ops/s
Iteration   7: 160881.596 ops/s
Iteration   8: 159769.269 ops/s
Iteration   9: 159937.701 ops/s
Iteration  10: 160457.415 ops/s
Iteration  11: 159564.924 ops/s
Iteration  12: 160524.806 ops/s
Iteration  13: 160896.303 ops/s
Iteration  14: 160671.004 ops/s
Iteration  15: 159761.083 ops/s
Iteration  16: 160623.670 ops/s
Iteration  17: 160004.752 ops/s
Iteration  18: 160475.703 ops/s
Iteration  19: 160288.225 ops/s
Iteration  20: 160156.269 ops/s
Iteration  21: 160535.675 ops/s
Iteration  22: 160535.430 ops/s
Iteration  23: 161087.421 ops/s
Iteration  24: 160785.072 ops/s
Iteration  25: 160431.597 ops/s
Iteration  26: 160200.660 ops/s
Iteration  27: 160208.576 ops/s
Iteration  28: 160563.693 ops/s
Iteration  29: 160012.581 ops/s
Iteration  30: 160857.889 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_338._Benchmark.benchmark_Cluster_338":
  160378.501 ±(99.9%) 249.575 ops/s [Average]
  (min, avg, max) = (159564.924, 160378.501, 161087.421), stdev = 373.553
  CI (99.9%): [160128.925, 160628.076] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_338._Benchmark.benchmark_Cluster_338  thrpt   30  160378.501 ± 249.575  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_339._Benchmark.benchmark_Cluster_339$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_339._Benchmark.benchmark_Cluster_339

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 82934.029 ops/s
# Warmup Iteration   2: 103335.996 ops/s
# Warmup Iteration   3: 140304.505 ops/s
# Warmup Iteration   4: 175726.763 ops/s
# Warmup Iteration   5: 175917.566 ops/s
# Warmup Iteration   6: 174102.288 ops/s
# Warmup Iteration   7: 176466.795 ops/s
# Warmup Iteration   8: 176527.158 ops/s
# Warmup Iteration   9: 176549.666 ops/s
# Warmup Iteration  10: 176335.662 ops/s
# Warmup Iteration  11: 144690.082 ops/s
# Warmup Iteration  12: 153190.052 ops/s
# Warmup Iteration  13: 175535.867 ops/s
# Warmup Iteration  14: 175917.020 ops/s
# Warmup Iteration  15: 175759.503 ops/s
# Warmup Iteration  16: 175749.063 ops/s
# Warmup Iteration  17: 177538.987 ops/s
# Warmup Iteration  18: 176965.019 ops/s
# Warmup Iteration  19: 177923.689 ops/s
# Warmup Iteration  20: 178159.492 ops/s
# Warmup Iteration  21: 177911.410 ops/s
# Warmup Iteration  22: 177503.124 ops/s
# Warmup Iteration  23: 177444.543 ops/s
# Warmup Iteration  24: 177377.910 ops/s
# Warmup Iteration  25: 177619.224 ops/s
# Warmup Iteration  26: 177719.767 ops/s
# Warmup Iteration  27: 177971.881 ops/s
# Warmup Iteration  28: 176892.940 ops/s
# Warmup Iteration  29: 177606.967 ops/s
# Warmup Iteration  30: 177214.007 ops/s
Iteration   1: 178040.127 ops/s
Iteration   2: 177769.759 ops/s
Iteration   3: 177435.085 ops/s
Iteration   4: 177406.294 ops/s
Iteration   5: 176580.700 ops/s
Iteration   6: 176933.995 ops/s
Iteration   7: 176916.063 ops/s
Iteration   8: 176686.227 ops/s
Iteration   9: 177335.769 ops/s
Iteration  10: 176401.408 ops/s
Iteration  11: 177277.080 ops/s
Iteration  12: 177273.308 ops/s
Iteration  13: 175976.648 ops/s
Iteration  14: 176329.526 ops/s
Iteration  15: 178233.704 ops/s
Iteration  16: 178015.574 ops/s
Iteration  17: 177691.267 ops/s
Iteration  18: 177334.130 ops/s
Iteration  19: 177909.875 ops/s
Iteration  20: 177508.728 ops/s
Iteration  21: 177546.695 ops/s
Iteration  22: 177654.800 ops/s
Iteration  23: 178137.256 ops/s
Iteration  24: 178001.381 ops/s
Iteration  25: 177474.177 ops/s
Iteration  26: 175970.427 ops/s
Iteration  27: 176779.870 ops/s
Iteration  28: 176628.105 ops/s
Iteration  29: 177227.896 ops/s
Iteration  30: 177179.352 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_339._Benchmark.benchmark_Cluster_339":
  177255.174 ±(99.9%) 416.856 ops/s [Average]
  (min, avg, max) = (175970.427, 177255.174, 178233.704), stdev = 623.931
  CI (99.9%): [176838.318, 177672.030] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_339._Benchmark.benchmark_Cluster_339  thrpt   30  177255.174 ± 416.856  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_34._Benchmark.benchmark_Cluster_34$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_34._Benchmark.benchmark_Cluster_34

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80885.324 ops/s
# Warmup Iteration   2: 115517.639 ops/s
# Warmup Iteration   3: 153766.391 ops/s
# Warmup Iteration   4: 198237.192 ops/s
# Warmup Iteration   5: 199605.568 ops/s
# Warmup Iteration   6: 196979.163 ops/s
# Warmup Iteration   7: 198369.166 ops/s
# Warmup Iteration   8: 198135.883 ops/s
# Warmup Iteration   9: 199028.807 ops/s
# Warmup Iteration  10: 199833.728 ops/s
# Warmup Iteration  11: 161663.649 ops/s
# Warmup Iteration  12: 174907.469 ops/s
# Warmup Iteration  13: 198735.789 ops/s
# Warmup Iteration  14: 199272.046 ops/s
# Warmup Iteration  15: 198916.744 ops/s
# Warmup Iteration  16: 199497.648 ops/s
# Warmup Iteration  17: 199635.105 ops/s
# Warmup Iteration  18: 199761.476 ops/s
# Warmup Iteration  19: 198710.250 ops/s
# Warmup Iteration  20: 199113.841 ops/s
# Warmup Iteration  21: 198229.425 ops/s
# Warmup Iteration  22: 199218.053 ops/s
# Warmup Iteration  23: 198891.989 ops/s
# Warmup Iteration  24: 199569.217 ops/s
# Warmup Iteration  25: 199584.223 ops/s
# Warmup Iteration  26: 199422.965 ops/s
# Warmup Iteration  27: 199619.056 ops/s
# Warmup Iteration  28: 199424.640 ops/s
# Warmup Iteration  29: 199168.624 ops/s
# Warmup Iteration  30: 199547.963 ops/s
Iteration   1: 199842.553 ops/s
Iteration   2: 199325.084 ops/s
Iteration   3: 198836.101 ops/s
Iteration   4: 199230.517 ops/s
Iteration   5: 199697.565 ops/s
Iteration   6: 198694.238 ops/s
Iteration   7: 199500.906 ops/s
Iteration   8: 198975.723 ops/s
Iteration   9: 198913.140 ops/s
Iteration  10: 197798.336 ops/s
Iteration  11: 198061.120 ops/s
Iteration  12: 199131.707 ops/s
Iteration  13: 198968.415 ops/s
Iteration  14: 199723.294 ops/s
Iteration  15: 198798.095 ops/s
Iteration  16: 199096.837 ops/s
Iteration  17: 198733.989 ops/s
Iteration  18: 199942.442 ops/s
Iteration  19: 199077.758 ops/s
Iteration  20: 199322.054 ops/s
Iteration  21: 199765.864 ops/s
Iteration  22: 198953.688 ops/s
Iteration  23: 199616.063 ops/s
Iteration  24: 199029.435 ops/s
Iteration  25: 199106.547 ops/s
Iteration  26: 199223.018 ops/s
Iteration  27: 198906.608 ops/s
Iteration  28: 198612.000 ops/s
Iteration  29: 200185.032 ops/s
Iteration  30: 199601.698 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_34._Benchmark.benchmark_Cluster_34":
  199155.661 ±(99.9%) 349.799 ops/s [Average]
  (min, avg, max) = (197798.336, 199155.661, 200185.032), stdev = 523.563
  CI (99.9%): [198805.861, 199505.460] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_34._Benchmark.benchmark_Cluster_34  thrpt   30  199155.661 ± 349.799  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_340._Benchmark.benchmark_Cluster_340$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_340._Benchmark.benchmark_Cluster_340

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 90408.634 ops/s
# Warmup Iteration   2: 106876.696 ops/s
# Warmup Iteration   3: 141680.224 ops/s
# Warmup Iteration   4: 178296.583 ops/s
# Warmup Iteration   5: 178170.846 ops/s
# Warmup Iteration   6: 175848.421 ops/s
# Warmup Iteration   7: 177389.249 ops/s
# Warmup Iteration   8: 178553.139 ops/s
# Warmup Iteration   9: 177654.278 ops/s
# Warmup Iteration  10: 177960.499 ops/s
# Warmup Iteration  11: 178447.571 ops/s
# Warmup Iteration  12: 121466.259 ops/s
# Warmup Iteration  13: 178739.847 ops/s
# Warmup Iteration  14: 178686.399 ops/s
# Warmup Iteration  15: 178694.504 ops/s
# Warmup Iteration  16: 178510.455 ops/s
# Warmup Iteration  17: 178455.092 ops/s
# Warmup Iteration  18: 178327.290 ops/s
# Warmup Iteration  19: 178930.857 ops/s
# Warmup Iteration  20: 178960.413 ops/s
# Warmup Iteration  21: 178126.409 ops/s
# Warmup Iteration  22: 177644.162 ops/s
# Warmup Iteration  23: 177784.829 ops/s
# Warmup Iteration  24: 178468.431 ops/s
# Warmup Iteration  25: 178648.887 ops/s
# Warmup Iteration  26: 178283.571 ops/s
# Warmup Iteration  27: 177667.601 ops/s
# Warmup Iteration  28: 177905.328 ops/s
# Warmup Iteration  29: 178579.498 ops/s
# Warmup Iteration  30: 178261.061 ops/s
Iteration   1: 178325.634 ops/s
Iteration   2: 178868.149 ops/s
Iteration   3: 178721.503 ops/s
Iteration   4: 178259.270 ops/s
Iteration   5: 177671.918 ops/s
Iteration   6: 177741.326 ops/s
Iteration   7: 178220.341 ops/s
Iteration   8: 177841.369 ops/s
Iteration   9: 178605.233 ops/s
Iteration  10: 178018.123 ops/s
Iteration  11: 177791.692 ops/s
Iteration  12: 177963.872 ops/s
Iteration  13: 178787.947 ops/s
Iteration  14: 177998.077 ops/s
Iteration  15: 177851.258 ops/s
Iteration  16: 177891.791 ops/s
Iteration  17: 177844.296 ops/s
Iteration  18: 177875.211 ops/s
Iteration  19: 178171.903 ops/s
Iteration  20: 178574.848 ops/s
Iteration  21: 178603.488 ops/s
Iteration  22: 177935.542 ops/s
Iteration  23: 178715.699 ops/s
Iteration  24: 179079.086 ops/s
Iteration  25: 178492.207 ops/s
Iteration  26: 178178.669 ops/s
Iteration  27: 177977.318 ops/s
Iteration  28: 178485.938 ops/s
Iteration  29: 178298.429 ops/s
Iteration  30: 178426.724 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_340._Benchmark.benchmark_Cluster_340":
  178240.562 ±(99.9%) 255.843 ops/s [Average]
  (min, avg, max) = (177671.918, 178240.562, 179079.086), stdev = 382.934
  CI (99.9%): [177984.719, 178496.405] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_340._Benchmark.benchmark_Cluster_340  thrpt   30  178240.562 ± 255.843  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_341._Benchmark.benchmark_Cluster_341$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_341._Benchmark.benchmark_Cluster_341

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 84869.441 ops/s
# Warmup Iteration   2: 90882.541 ops/s
# Warmup Iteration   3: 90709.729 ops/s
# Warmup Iteration   4: 106161.121 ops/s
# Warmup Iteration   5: 126753.472 ops/s
# Warmup Iteration   6: 126824.797 ops/s
# Warmup Iteration   7: 126520.562 ops/s
# Warmup Iteration   8: 126498.291 ops/s
# Warmup Iteration   9: 125128.530 ops/s
# Warmup Iteration  10: 126912.240 ops/s
# Warmup Iteration  11: 126799.266 ops/s
# Warmup Iteration  12: 125952.656 ops/s
# Warmup Iteration  13: 125957.330 ops/s
# Warmup Iteration  14: 126213.206 ops/s
# Warmup Iteration  15: 126420.613 ops/s
# Warmup Iteration  16: 126493.166 ops/s
# Warmup Iteration  17: 132406.128 ops/s
# Warmup Iteration  18: 132587.553 ops/s
# Warmup Iteration  19: 116922.801 ops/s
# Warmup Iteration  20: 104559.659 ops/s
# Warmup Iteration  21: 133275.020 ops/s
# Warmup Iteration  22: 132732.266 ops/s
# Warmup Iteration  23: 132530.400 ops/s
# Warmup Iteration  24: 132972.042 ops/s
# Warmup Iteration  25: 131913.293 ops/s
# Warmup Iteration  26: 132421.490 ops/s
# Warmup Iteration  27: 132776.381 ops/s
# Warmup Iteration  28: 133088.105 ops/s
# Warmup Iteration  29: 132910.214 ops/s
# Warmup Iteration  30: 133267.443 ops/s
Iteration   1: 133021.695 ops/s
Iteration   2: 132938.233 ops/s
Iteration   3: 132665.124 ops/s
Iteration   4: 133100.433 ops/s
Iteration   5: 132914.893 ops/s
Iteration   6: 133186.487 ops/s
Iteration   7: 133234.575 ops/s
Iteration   8: 132761.689 ops/s
Iteration   9: 132725.075 ops/s
Iteration  10: 132869.009 ops/s
Iteration  11: 133379.536 ops/s
Iteration  12: 132848.121 ops/s
Iteration  13: 133359.794 ops/s
Iteration  14: 133051.576 ops/s
Iteration  15: 133239.743 ops/s
Iteration  16: 133397.387 ops/s
Iteration  17: 133473.642 ops/s
Iteration  18: 133412.828 ops/s
Iteration  19: 132968.954 ops/s
Iteration  20: 132720.541 ops/s
Iteration  21: 132544.715 ops/s
Iteration  22: 133188.875 ops/s
Iteration  23: 132996.942 ops/s
Iteration  24: 132597.789 ops/s
Iteration  25: 132736.775 ops/s
Iteration  26: 132946.304 ops/s
Iteration  27: 132684.847 ops/s
Iteration  28: 132995.834 ops/s
Iteration  29: 132973.720 ops/s
Iteration  30: 133035.645 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_341._Benchmark.benchmark_Cluster_341":
  132999.026 ±(99.9%) 172.791 ops/s [Average]
  (min, avg, max) = (132544.715, 132999.026, 133473.642), stdev = 258.625
  CI (99.9%): [132826.235, 133171.817] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_341._Benchmark.benchmark_Cluster_341  thrpt   30  132999.026 ± 172.791  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_342._Benchmark.benchmark_Cluster_342$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_342._Benchmark.benchmark_Cluster_342

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 85018.281 ops/s
# Warmup Iteration   2: 91179.781 ops/s
# Warmup Iteration   3: 91079.099 ops/s
# Warmup Iteration   4: 97082.489 ops/s
# Warmup Iteration   5: 124662.185 ops/s
# Warmup Iteration   6: 124844.593 ops/s
# Warmup Iteration   7: 124077.578 ops/s
# Warmup Iteration   8: 125277.517 ops/s
# Warmup Iteration   9: 125128.649 ops/s
# Warmup Iteration  10: 123770.388 ops/s
# Warmup Iteration  11: 124834.532 ops/s
# Warmup Iteration  12: 124043.584 ops/s
# Warmup Iteration  13: 124770.848 ops/s
# Warmup Iteration  14: 125199.717 ops/s
# Warmup Iteration  15: 124703.228 ops/s
# Warmup Iteration  16: 124641.064 ops/s
# Warmup Iteration  17: 131238.383 ops/s
# Warmup Iteration  18: 131462.340 ops/s
# Warmup Iteration  19: 131316.392 ops/s
# Warmup Iteration  20: 129132.418 ops/s
# Warmup Iteration  21: 95360.121 ops/s
# Warmup Iteration  22: 126792.880 ops/s
# Warmup Iteration  23: 131885.552 ops/s
# Warmup Iteration  24: 131576.678 ops/s
# Warmup Iteration  25: 131459.996 ops/s
# Warmup Iteration  26: 131179.480 ops/s
# Warmup Iteration  27: 130888.011 ops/s
# Warmup Iteration  28: 131543.298 ops/s
# Warmup Iteration  29: 131557.681 ops/s
# Warmup Iteration  30: 131588.957 ops/s
Iteration   1: 131613.466 ops/s
Iteration   2: 131125.133 ops/s
Iteration   3: 130925.670 ops/s
Iteration   4: 129935.228 ops/s
Iteration   5: 130946.989 ops/s
Iteration   6: 131381.777 ops/s
Iteration   7: 131808.686 ops/s
Iteration   8: 131298.654 ops/s
Iteration   9: 131274.241 ops/s
Iteration  10: 131132.728 ops/s
Iteration  11: 131490.312 ops/s
Iteration  12: 132379.269 ops/s
Iteration  13: 132017.520 ops/s
Iteration  14: 131358.679 ops/s
Iteration  15: 131393.967 ops/s
Iteration  16: 131166.924 ops/s
Iteration  17: 131668.389 ops/s
Iteration  18: 130986.438 ops/s
Iteration  19: 131263.855 ops/s
Iteration  20: 131446.067 ops/s
Iteration  21: 130879.742 ops/s
Iteration  22: 131230.541 ops/s
Iteration  23: 130634.100 ops/s
Iteration  24: 131600.381 ops/s
Iteration  25: 131877.559 ops/s
Iteration  26: 132075.509 ops/s
Iteration  27: 131039.636 ops/s
Iteration  28: 131829.502 ops/s
Iteration  29: 131261.869 ops/s
Iteration  30: 130676.324 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_342._Benchmark.benchmark_Cluster_342":
  131323.972 ±(99.9%) 326.465 ops/s [Average]
  (min, avg, max) = (129935.228, 131323.972, 132379.269), stdev = 488.638
  CI (99.9%): [130997.507, 131650.437] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_342._Benchmark.benchmark_Cluster_342  thrpt   30  131323.972 ± 326.465  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_343._Benchmark.benchmark_Cluster_343$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_343._Benchmark.benchmark_Cluster_343

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 84008.112 ops/s
# Warmup Iteration   2: 90936.224 ops/s
# Warmup Iteration   3: 91139.465 ops/s
# Warmup Iteration   4: 98719.665 ops/s
# Warmup Iteration   5: 127221.751 ops/s
# Warmup Iteration   6: 126708.911 ops/s
# Warmup Iteration   7: 127179.346 ops/s
# Warmup Iteration   8: 127408.555 ops/s
# Warmup Iteration   9: 127330.711 ops/s
# Warmup Iteration  10: 126543.092 ops/s
# Warmup Iteration  11: 127087.166 ops/s
# Warmup Iteration  12: 126293.299 ops/s
# Warmup Iteration  13: 127252.288 ops/s
# Warmup Iteration  14: 127822.643 ops/s
# Warmup Iteration  15: 126879.047 ops/s
# Warmup Iteration  16: 126571.136 ops/s
# Warmup Iteration  17: 132762.723 ops/s
# Warmup Iteration  18: 132537.832 ops/s
# Warmup Iteration  19: 132766.248 ops/s
# Warmup Iteration  20: 115749.758 ops/s
# Warmup Iteration  21: 105209.732 ops/s
# Warmup Iteration  22: 132840.499 ops/s
# Warmup Iteration  23: 132899.391 ops/s
# Warmup Iteration  24: 132441.547 ops/s
# Warmup Iteration  25: 132729.958 ops/s
# Warmup Iteration  26: 132602.916 ops/s
# Warmup Iteration  27: 132632.323 ops/s
# Warmup Iteration  28: 132864.161 ops/s
# Warmup Iteration  29: 132283.142 ops/s
# Warmup Iteration  30: 132985.008 ops/s
Iteration   1: 132934.943 ops/s
Iteration   2: 133268.305 ops/s
Iteration   3: 132770.874 ops/s
Iteration   4: 132600.857 ops/s
Iteration   5: 132661.286 ops/s
Iteration   6: 132653.883 ops/s
Iteration   7: 132473.433 ops/s
Iteration   8: 133229.863 ops/s
Iteration   9: 132666.853 ops/s
Iteration  10: 132354.276 ops/s
Iteration  11: 132609.038 ops/s
Iteration  12: 132907.672 ops/s
Iteration  13: 133248.957 ops/s
Iteration  14: 133275.457 ops/s
Iteration  15: 132808.733 ops/s
Iteration  16: 133183.676 ops/s
Iteration  17: 133485.316 ops/s
Iteration  18: 133537.996 ops/s
Iteration  19: 132983.829 ops/s
Iteration  20: 133218.549 ops/s
Iteration  21: 133061.340 ops/s
Iteration  22: 133268.822 ops/s
Iteration  23: 132534.342 ops/s
Iteration  24: 133331.817 ops/s
Iteration  25: 132306.105 ops/s
Iteration  26: 132965.106 ops/s
Iteration  27: 132931.966 ops/s
Iteration  28: 132716.114 ops/s
Iteration  29: 132919.495 ops/s
Iteration  30: 131865.492 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_343._Benchmark.benchmark_Cluster_343":
  132892.480 ±(99.9%) 255.491 ops/s [Average]
  (min, avg, max) = (131865.492, 132892.480, 133537.996), stdev = 382.407
  CI (99.9%): [132636.988, 133147.971] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_343._Benchmark.benchmark_Cluster_343  thrpt   30  132892.480 ± 255.491  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_344._Benchmark.benchmark_Cluster_344$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_344._Benchmark.benchmark_Cluster_344

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 116713.235 ops/s
# Warmup Iteration   2: 126637.183 ops/s
# Warmup Iteration   3: 125094.306 ops/s
# Warmup Iteration   4: 132746.144 ops/s
# Warmup Iteration   5: 167522.977 ops/s
# Warmup Iteration   6: 167589.637 ops/s
# Warmup Iteration   7: 167303.137 ops/s
# Warmup Iteration   8: 167831.860 ops/s
# Warmup Iteration   9: 168094.106 ops/s
# Warmup Iteration  10: 166223.620 ops/s
# Warmup Iteration  11: 168159.771 ops/s
# Warmup Iteration  12: 168137.614 ops/s
# Warmup Iteration  13: 167874.616 ops/s
# Warmup Iteration  14: 167827.793 ops/s
# Warmup Iteration  15: 168257.325 ops/s
# Warmup Iteration  16: 168281.595 ops/s
# Warmup Iteration  17: 175507.601 ops/s
# Warmup Iteration  18: 174938.333 ops/s
# Warmup Iteration  19: 175959.629 ops/s
# Warmup Iteration  20: 175601.914 ops/s
# Warmup Iteration  21: 158001.716 ops/s
# Warmup Iteration  22: 139291.828 ops/s
# Warmup Iteration  23: 175822.659 ops/s
# Warmup Iteration  24: 175508.753 ops/s
# Warmup Iteration  25: 175712.680 ops/s
# Warmup Iteration  26: 176002.668 ops/s
# Warmup Iteration  27: 175424.441 ops/s
# Warmup Iteration  28: 175309.891 ops/s
# Warmup Iteration  29: 175245.956 ops/s
# Warmup Iteration  30: 175236.061 ops/s
Iteration   1: 175526.811 ops/s
Iteration   2: 175689.384 ops/s
Iteration   3: 175462.322 ops/s
Iteration   4: 175843.608 ops/s
Iteration   5: 175524.341 ops/s
Iteration   6: 175389.737 ops/s
Iteration   7: 175543.706 ops/s
Iteration   8: 175739.392 ops/s
Iteration   9: 175897.089 ops/s
Iteration  10: 175606.534 ops/s
Iteration  11: 175857.600 ops/s
Iteration  12: 176069.503 ops/s
Iteration  13: 175941.717 ops/s
Iteration  14: 176821.549 ops/s
Iteration  15: 175959.863 ops/s
Iteration  16: 176500.105 ops/s
Iteration  17: 176379.097 ops/s
Iteration  18: 176257.131 ops/s
Iteration  19: 176366.259 ops/s
Iteration  20: 176339.843 ops/s
Iteration  21: 175517.634 ops/s
Iteration  22: 176368.951 ops/s
Iteration  23: 175478.003 ops/s
Iteration  24: 175553.280 ops/s
Iteration  25: 175954.674 ops/s
Iteration  26: 176501.750 ops/s
Iteration  27: 175836.581 ops/s
Iteration  28: 175602.914 ops/s
Iteration  29: 175476.575 ops/s
Iteration  30: 176002.300 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_344._Benchmark.benchmark_Cluster_344":
  175900.275 ±(99.9%) 258.564 ops/s [Average]
  (min, avg, max) = (175389.737, 175900.275, 176821.549), stdev = 387.006
  CI (99.9%): [175641.711, 176158.839] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_344._Benchmark.benchmark_Cluster_344  thrpt   30  175900.275 ± 258.564  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_345._Benchmark.benchmark_Cluster_345$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_345._Benchmark.benchmark_Cluster_345

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 113080.095 ops/s
# Warmup Iteration   2: 123802.559 ops/s
# Warmup Iteration   3: 125190.019 ops/s
# Warmup Iteration   4: 149598.000 ops/s
# Warmup Iteration   5: 174078.625 ops/s
# Warmup Iteration   6: 173800.008 ops/s
# Warmup Iteration   7: 174188.258 ops/s
# Warmup Iteration   8: 174401.974 ops/s
# Warmup Iteration   9: 172425.063 ops/s
# Warmup Iteration  10: 173773.359 ops/s
# Warmup Iteration  11: 174183.899 ops/s
# Warmup Iteration  12: 173973.860 ops/s
# Warmup Iteration  13: 174440.040 ops/s
# Warmup Iteration  14: 173739.948 ops/s
# Warmup Iteration  15: 174621.757 ops/s
# Warmup Iteration  16: 174486.051 ops/s
# Warmup Iteration  17: 181900.238 ops/s
# Warmup Iteration  18: 181873.470 ops/s
# Warmup Iteration  19: 130710.869 ops/s
# Warmup Iteration  20: 176334.724 ops/s
# Warmup Iteration  21: 181763.799 ops/s
# Warmup Iteration  22: 181955.399 ops/s
# Warmup Iteration  23: 182045.947 ops/s
# Warmup Iteration  24: 181965.384 ops/s
# Warmup Iteration  25: 181051.326 ops/s
# Warmup Iteration  26: 181778.919 ops/s
# Warmup Iteration  27: 181683.514 ops/s
# Warmup Iteration  28: 181567.516 ops/s
# Warmup Iteration  29: 180946.906 ops/s
# Warmup Iteration  30: 180744.384 ops/s
Iteration   1: 180816.345 ops/s
Iteration   2: 181152.963 ops/s
Iteration   3: 181826.536 ops/s
Iteration   4: 181204.025 ops/s
Iteration   5: 180483.237 ops/s
Iteration   6: 181022.034 ops/s
Iteration   7: 180242.798 ops/s
Iteration   8: 181248.617 ops/s
Iteration   9: 180397.550 ops/s
Iteration  10: 179833.510 ops/s
Iteration  11: 181414.142 ops/s
Iteration  12: 180458.834 ops/s
Iteration  13: 181337.914 ops/s
Iteration  14: 181086.212 ops/s
Iteration  15: 179730.655 ops/s
Iteration  16: 180813.107 ops/s
Iteration  17: 182352.592 ops/s
Iteration  18: 180691.000 ops/s
Iteration  19: 180383.784 ops/s
Iteration  20: 180569.017 ops/s
Iteration  21: 182244.595 ops/s
Iteration  22: 181330.340 ops/s
Iteration  23: 180918.050 ops/s
Iteration  24: 182281.344 ops/s
Iteration  25: 181800.556 ops/s
Iteration  26: 180783.239 ops/s
Iteration  27: 180982.451 ops/s
Iteration  28: 181341.529 ops/s
Iteration  29: 180874.115 ops/s
Iteration  30: 179473.664 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_345._Benchmark.benchmark_Cluster_345":
  180969.825 ±(99.9%) 473.414 ops/s [Average]
  (min, avg, max) = (179473.664, 180969.825, 182352.592), stdev = 708.584
  CI (99.9%): [180496.411, 181443.239] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_345._Benchmark.benchmark_Cluster_345  thrpt   30  180969.825 ± 473.414  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_346._Benchmark.benchmark_Cluster_346$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_346._Benchmark.benchmark_Cluster_346

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 88115.984 ops/s
# Warmup Iteration   2: 100785.831 ops/s
# Warmup Iteration   3: 189796.968 ops/s
# Warmup Iteration   4: 198695.538 ops/s
# Warmup Iteration   5: 196746.721 ops/s
# Warmup Iteration   6: 196760.517 ops/s
# Warmup Iteration   7: 197729.430 ops/s
# Warmup Iteration   8: 197356.957 ops/s
# Warmup Iteration   9: 135133.816 ops/s
# Warmup Iteration  10: 199016.267 ops/s
# Warmup Iteration  11: 198851.577 ops/s
# Warmup Iteration  12: 198694.278 ops/s
# Warmup Iteration  13: 197081.972 ops/s
# Warmup Iteration  14: 197913.092 ops/s
# Warmup Iteration  15: 197277.552 ops/s
# Warmup Iteration  16: 198662.979 ops/s
# Warmup Iteration  17: 198589.479 ops/s
# Warmup Iteration  18: 198728.461 ops/s
# Warmup Iteration  19: 198933.130 ops/s
# Warmup Iteration  20: 198609.018 ops/s
# Warmup Iteration  21: 200106.478 ops/s
# Warmup Iteration  22: 200211.117 ops/s
# Warmup Iteration  23: 198676.983 ops/s
# Warmup Iteration  24: 197887.270 ops/s
# Warmup Iteration  25: 199712.559 ops/s
# Warmup Iteration  26: 199530.412 ops/s
# Warmup Iteration  27: 198298.142 ops/s
# Warmup Iteration  28: 198956.800 ops/s
# Warmup Iteration  29: 198765.572 ops/s
# Warmup Iteration  30: 197747.886 ops/s
Iteration   1: 197590.892 ops/s
Iteration   2: 199076.939 ops/s
Iteration   3: 198051.766 ops/s
Iteration   4: 199354.975 ops/s
Iteration   5: 199188.470 ops/s
Iteration   6: 198088.652 ops/s
Iteration   7: 197939.865 ops/s
Iteration   8: 200597.596 ops/s
Iteration   9: 196990.909 ops/s
Iteration  10: 199579.526 ops/s
Iteration  11: 198992.513 ops/s
Iteration  12: 196850.273 ops/s
Iteration  13: 198187.764 ops/s
Iteration  14: 198119.193 ops/s
Iteration  15: 197243.204 ops/s
Iteration  16: 197540.691 ops/s
Iteration  17: 198258.776 ops/s
Iteration  18: 198484.397 ops/s
Iteration  19: 198882.659 ops/s
Iteration  20: 199057.174 ops/s
Iteration  21: 198735.208 ops/s
Iteration  22: 198174.051 ops/s
Iteration  23: 200347.469 ops/s
Iteration  24: 200370.631 ops/s
Iteration  25: 200162.277 ops/s
Iteration  26: 200286.060 ops/s
Iteration  27: 200384.994 ops/s
Iteration  28: 199094.387 ops/s
Iteration  29: 199646.588 ops/s
Iteration  30: 199880.879 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_346._Benchmark.benchmark_Cluster_346":
  198838.626 ±(99.9%) 721.584 ops/s [Average]
  (min, avg, max) = (196850.273, 198838.626, 200597.596), stdev = 1080.034
  CI (99.9%): [198117.041, 199560.210] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_346._Benchmark.benchmark_Cluster_346  thrpt   30  198838.626 ± 721.584  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_347._Benchmark.benchmark_Cluster_347$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_347._Benchmark.benchmark_Cluster_347

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93216.188 ops/s
# Warmup Iteration   2: 112795.056 ops/s
# Warmup Iteration   3: 114594.687 ops/s
# Warmup Iteration   4: 115667.350 ops/s
# Warmup Iteration   5: 152051.186 ops/s
# Warmup Iteration   6: 153822.851 ops/s
# Warmup Iteration   7: 153273.506 ops/s
# Warmup Iteration   8: 154421.044 ops/s
# Warmup Iteration   9: 155622.339 ops/s
# Warmup Iteration  10: 153156.633 ops/s
# Warmup Iteration  11: 154903.395 ops/s
# Warmup Iteration  12: 153154.932 ops/s
# Warmup Iteration  13: 153483.393 ops/s
# Warmup Iteration  14: 154153.651 ops/s
# Warmup Iteration  15: 153911.478 ops/s
# Warmup Iteration  16: 153880.619 ops/s
# Warmup Iteration  17: 154036.039 ops/s
# Warmup Iteration  18: 153403.290 ops/s
# Warmup Iteration  19: 153755.987 ops/s
# Warmup Iteration  20: 152915.854 ops/s
# Warmup Iteration  21: 153046.872 ops/s
# Warmup Iteration  22: 131756.652 ops/s
# Warmup Iteration  23: 124864.369 ops/s
# Warmup Iteration  24: 153905.896 ops/s
# Warmup Iteration  25: 154852.092 ops/s
# Warmup Iteration  26: 153602.982 ops/s
# Warmup Iteration  27: 153488.512 ops/s
# Warmup Iteration  28: 152683.496 ops/s
# Warmup Iteration  29: 153745.383 ops/s
# Warmup Iteration  30: 152959.450 ops/s
Iteration   1: 152754.232 ops/s
Iteration   2: 153711.199 ops/s
Iteration   3: 153797.309 ops/s
Iteration   4: 153380.774 ops/s
Iteration   5: 152948.625 ops/s
Iteration   6: 153433.649 ops/s
Iteration   7: 154150.786 ops/s
Iteration   8: 155468.478 ops/s
Iteration   9: 154981.496 ops/s
Iteration  10: 154419.762 ops/s
Iteration  11: 152957.302 ops/s
Iteration  12: 152900.361 ops/s
Iteration  13: 153599.125 ops/s
Iteration  14: 152944.460 ops/s
Iteration  15: 152285.928 ops/s
Iteration  16: 152913.655 ops/s
Iteration  17: 153373.694 ops/s
Iteration  18: 155443.881 ops/s
Iteration  19: 152721.290 ops/s
Iteration  20: 153075.646 ops/s
Iteration  21: 154481.972 ops/s
Iteration  22: 152995.500 ops/s
Iteration  23: 152850.476 ops/s
Iteration  24: 154234.701 ops/s
Iteration  25: 152942.456 ops/s
Iteration  26: 153276.942 ops/s
Iteration  27: 153360.874 ops/s
Iteration  28: 153280.039 ops/s
Iteration  29: 152850.215 ops/s
Iteration  30: 152648.884 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_347._Benchmark.benchmark_Cluster_347":
  153472.790 ±(99.9%) 547.235 ops/s [Average]
  (min, avg, max) = (152285.928, 153472.790, 155468.478), stdev = 819.075
  CI (99.9%): [152925.556, 154020.025] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_347._Benchmark.benchmark_Cluster_347  thrpt   30  153472.790 ± 547.235  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_348._Benchmark.benchmark_Cluster_348$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_348._Benchmark.benchmark_Cluster_348

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74257.925 ops/s
# Warmup Iteration   2: 104916.853 ops/s
# Warmup Iteration   3: 123317.520 ops/s
# Warmup Iteration   4: 173057.105 ops/s
# Warmup Iteration   5: 172750.965 ops/s
# Warmup Iteration   6: 171105.881 ops/s
# Warmup Iteration   7: 174364.447 ops/s
# Warmup Iteration   8: 172725.163 ops/s
# Warmup Iteration   9: 172495.349 ops/s
# Warmup Iteration  10: 173267.932 ops/s
# Warmup Iteration  11: 172785.337 ops/s
# Warmup Iteration  12: 151148.619 ops/s
# Warmup Iteration  13: 138374.707 ops/s
# Warmup Iteration  14: 173936.010 ops/s
# Warmup Iteration  15: 173391.483 ops/s
# Warmup Iteration  16: 173039.566 ops/s
# Warmup Iteration  17: 172578.611 ops/s
# Warmup Iteration  18: 174297.820 ops/s
# Warmup Iteration  19: 175149.188 ops/s
# Warmup Iteration  20: 173303.075 ops/s
# Warmup Iteration  21: 173210.208 ops/s
# Warmup Iteration  22: 173007.162 ops/s
# Warmup Iteration  23: 174459.365 ops/s
# Warmup Iteration  24: 174548.565 ops/s
# Warmup Iteration  25: 174799.873 ops/s
# Warmup Iteration  26: 172930.944 ops/s
# Warmup Iteration  27: 172267.711 ops/s
# Warmup Iteration  28: 172931.314 ops/s
# Warmup Iteration  29: 173249.963 ops/s
# Warmup Iteration  30: 173720.858 ops/s
Iteration   1: 173335.114 ops/s
Iteration   2: 174259.801 ops/s
Iteration   3: 174086.302 ops/s
Iteration   4: 175025.269 ops/s
Iteration   5: 175345.561 ops/s
Iteration   6: 173832.526 ops/s
Iteration   7: 174634.111 ops/s
Iteration   8: 174112.571 ops/s
Iteration   9: 174235.329 ops/s
Iteration  10: 174046.129 ops/s
Iteration  11: 172899.320 ops/s
Iteration  12: 173227.627 ops/s
Iteration  13: 174008.980 ops/s
Iteration  14: 173389.761 ops/s
Iteration  15: 173755.028 ops/s
Iteration  16: 173637.520 ops/s
Iteration  17: 174102.794 ops/s
Iteration  18: 173521.337 ops/s
Iteration  19: 173668.550 ops/s
Iteration  20: 173435.315 ops/s
Iteration  21: 172883.339 ops/s
Iteration  22: 173922.843 ops/s
Iteration  23: 172894.676 ops/s
Iteration  24: 172408.417 ops/s
Iteration  25: 172682.335 ops/s
Iteration  26: 172478.273 ops/s
Iteration  27: 172031.924 ops/s
Iteration  28: 171766.136 ops/s
Iteration  29: 172907.158 ops/s
Iteration  30: 171906.439 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_348._Benchmark.benchmark_Cluster_348":
  173481.350 ±(99.9%) 586.528 ops/s [Average]
  (min, avg, max) = (171766.136, 173481.350, 175345.561), stdev = 877.887
  CI (99.9%): [172894.822, 174067.877] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_348._Benchmark.benchmark_Cluster_348  thrpt   30  173481.350 ± 586.528  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_349._Benchmark.benchmark_Cluster_349$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_349._Benchmark.benchmark_Cluster_349

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 61903.824 ops/s
# Warmup Iteration   2: 101030.868 ops/s
# Warmup Iteration   3: 190900.631 ops/s
# Warmup Iteration   4: 211788.005 ops/s
# Warmup Iteration   5: 213356.938 ops/s
# Warmup Iteration   6: 214007.879 ops/s
# Warmup Iteration   7: 214100.015 ops/s
# Warmup Iteration   8: 168025.334 ops/s
# Warmup Iteration   9: 192945.306 ops/s
# Warmup Iteration  10: 213050.139 ops/s
# Warmup Iteration  11: 211789.241 ops/s
# Warmup Iteration  12: 213400.061 ops/s
# Warmup Iteration  13: 213165.348 ops/s
# Warmup Iteration  14: 213515.091 ops/s
# Warmup Iteration  15: 213247.491 ops/s
# Warmup Iteration  16: 211602.827 ops/s
# Warmup Iteration  17: 212514.275 ops/s
# Warmup Iteration  18: 212555.005 ops/s
# Warmup Iteration  19: 212431.536 ops/s
# Warmup Iteration  20: 211930.586 ops/s
# Warmup Iteration  21: 211694.768 ops/s
# Warmup Iteration  22: 212280.222 ops/s
# Warmup Iteration  23: 214325.971 ops/s
# Warmup Iteration  24: 213489.990 ops/s
# Warmup Iteration  25: 214901.767 ops/s
# Warmup Iteration  26: 211664.980 ops/s
# Warmup Iteration  27: 212121.228 ops/s
# Warmup Iteration  28: 212918.717 ops/s
# Warmup Iteration  29: 212111.640 ops/s
# Warmup Iteration  30: 213261.345 ops/s
Iteration   1: 210166.767 ops/s
Iteration   2: 210970.021 ops/s
Iteration   3: 212586.337 ops/s
Iteration   4: 214048.296 ops/s
Iteration   5: 213878.117 ops/s
Iteration   6: 213421.616 ops/s
Iteration   7: 213436.954 ops/s
Iteration   8: 215008.931 ops/s
Iteration   9: 213559.392 ops/s
Iteration  10: 213083.683 ops/s
Iteration  11: 212608.440 ops/s
Iteration  12: 215527.487 ops/s
Iteration  13: 214693.490 ops/s
Iteration  14: 215438.010 ops/s
Iteration  15: 214882.470 ops/s
Iteration  16: 214936.358 ops/s
Iteration  17: 213624.627 ops/s
Iteration  18: 214426.069 ops/s
Iteration  19: 213390.043 ops/s
Iteration  20: 214528.184 ops/s
Iteration  21: 214125.463 ops/s
Iteration  22: 211625.749 ops/s
Iteration  23: 214905.105 ops/s
Iteration  24: 212352.056 ops/s
Iteration  25: 213579.016 ops/s
Iteration  26: 211974.512 ops/s
Iteration  27: 210534.019 ops/s
Iteration  28: 211404.348 ops/s
Iteration  29: 211046.116 ops/s
Iteration  30: 213965.772 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_349._Benchmark.benchmark_Cluster_349":
  213324.248 ±(99.9%) 1002.447 ops/s [Average]
  (min, avg, max) = (210166.767, 213324.248, 215527.487), stdev = 1500.416
  CI (99.9%): [212321.801, 214326.695] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_349._Benchmark.benchmark_Cluster_349  thrpt   30  213324.248 ± 1002.447  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_35._Benchmark.benchmark_Cluster_35$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_35._Benchmark.benchmark_Cluster_35

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68656.918 ops/s
# Warmup Iteration   2: 109225.387 ops/s
# Warmup Iteration   3: 235971.018 ops/s
# Warmup Iteration   4: 241806.168 ops/s
# Warmup Iteration   5: 243544.986 ops/s
# Warmup Iteration   6: 244625.530 ops/s
# Warmup Iteration   7: 222144.748 ops/s
# Warmup Iteration   8: 191528.526 ops/s
# Warmup Iteration   9: 244610.819 ops/s
# Warmup Iteration  10: 244313.078 ops/s
# Warmup Iteration  11: 244750.745 ops/s
# Warmup Iteration  12: 245233.260 ops/s
# Warmup Iteration  13: 244312.888 ops/s
# Warmup Iteration  14: 245751.372 ops/s
# Warmup Iteration  15: 245907.298 ops/s
# Warmup Iteration  16: 245999.454 ops/s
# Warmup Iteration  17: 246008.301 ops/s
# Warmup Iteration  18: 246401.972 ops/s
# Warmup Iteration  19: 245977.159 ops/s
# Warmup Iteration  20: 245907.112 ops/s
# Warmup Iteration  21: 245808.708 ops/s
# Warmup Iteration  22: 245966.653 ops/s
# Warmup Iteration  23: 245451.203 ops/s
# Warmup Iteration  24: 244915.013 ops/s
# Warmup Iteration  25: 245730.344 ops/s
# Warmup Iteration  26: 246418.944 ops/s
# Warmup Iteration  27: 246490.508 ops/s
# Warmup Iteration  28: 246473.085 ops/s
# Warmup Iteration  29: 246372.843 ops/s
# Warmup Iteration  30: 246516.904 ops/s
Iteration   1: 246400.724 ops/s
Iteration   2: 245224.724 ops/s
Iteration   3: 246586.496 ops/s
Iteration   4: 245254.796 ops/s
Iteration   5: 245482.214 ops/s
Iteration   6: 244520.639 ops/s
Iteration   7: 245972.221 ops/s
Iteration   8: 245472.724 ops/s
Iteration   9: 245457.072 ops/s
Iteration  10: 246595.297 ops/s
Iteration  11: 244986.611 ops/s
Iteration  12: 244897.558 ops/s
Iteration  13: 245848.094 ops/s
Iteration  14: 246271.571 ops/s
Iteration  15: 246351.085 ops/s
Iteration  16: 246541.750 ops/s
Iteration  17: 246341.019 ops/s
Iteration  18: 245787.807 ops/s
Iteration  19: 245570.147 ops/s
Iteration  20: 243812.628 ops/s
Iteration  21: 244990.775 ops/s
Iteration  22: 244581.986 ops/s
Iteration  23: 245077.555 ops/s
Iteration  24: 245819.381 ops/s
Iteration  25: 245637.622 ops/s
Iteration  26: 246254.166 ops/s
Iteration  27: 244659.461 ops/s
Iteration  28: 244670.143 ops/s
Iteration  29: 245875.314 ops/s
Iteration  30: 244908.628 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_35._Benchmark.benchmark_Cluster_35":
  245528.340 ±(99.9%) 482.727 ops/s [Average]
  (min, avg, max) = (243812.628, 245528.340, 246595.297), stdev = 722.523
  CI (99.9%): [245045.613, 246011.067] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_35._Benchmark.benchmark_Cluster_35  thrpt   30  245528.340 ± 482.727  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_350._Benchmark.benchmark_Cluster_350$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_350._Benchmark.benchmark_Cluster_350

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94420.393 ops/s
# Warmup Iteration   2: 117580.001 ops/s
# Warmup Iteration   3: 161812.271 ops/s
# Warmup Iteration   4: 204239.430 ops/s
# Warmup Iteration   5: 202640.228 ops/s
# Warmup Iteration   6: 202415.387 ops/s
# Warmup Iteration   7: 203445.689 ops/s
# Warmup Iteration   8: 205717.540 ops/s
# Warmup Iteration   9: 204681.180 ops/s
# Warmup Iteration  10: 205182.707 ops/s
# Warmup Iteration  11: 152246.475 ops/s
# Warmup Iteration  12: 189306.992 ops/s
# Warmup Iteration  13: 204299.936 ops/s
# Warmup Iteration  14: 204272.137 ops/s
# Warmup Iteration  15: 203689.910 ops/s
# Warmup Iteration  16: 203276.468 ops/s
# Warmup Iteration  17: 204062.953 ops/s
# Warmup Iteration  18: 203986.315 ops/s
# Warmup Iteration  19: 204553.351 ops/s
# Warmup Iteration  20: 204453.307 ops/s
# Warmup Iteration  21: 204274.478 ops/s
# Warmup Iteration  22: 204706.780 ops/s
# Warmup Iteration  23: 204172.589 ops/s
# Warmup Iteration  24: 203891.524 ops/s
# Warmup Iteration  25: 204149.745 ops/s
# Warmup Iteration  26: 203699.847 ops/s
# Warmup Iteration  27: 204762.258 ops/s
# Warmup Iteration  28: 204137.820 ops/s
# Warmup Iteration  29: 204655.457 ops/s
# Warmup Iteration  30: 204304.125 ops/s
Iteration   1: 205045.016 ops/s
Iteration   2: 204482.512 ops/s
Iteration   3: 204550.652 ops/s
Iteration   4: 203703.450 ops/s
Iteration   5: 203153.135 ops/s
Iteration   6: 200951.116 ops/s
Iteration   7: 201395.767 ops/s
Iteration   8: 206278.865 ops/s
Iteration   9: 201705.977 ops/s
Iteration  10: 202669.518 ops/s
Iteration  11: 204371.091 ops/s
Iteration  12: 205422.422 ops/s
Iteration  13: 205199.138 ops/s
Iteration  14: 205641.041 ops/s
Iteration  15: 205025.764 ops/s
Iteration  16: 202760.869 ops/s
Iteration  17: 204708.985 ops/s
Iteration  18: 203523.614 ops/s
Iteration  19: 206059.718 ops/s
Iteration  20: 204580.463 ops/s
Iteration  21: 204009.343 ops/s
Iteration  22: 203316.462 ops/s
Iteration  23: 203592.849 ops/s
Iteration  24: 203824.131 ops/s
Iteration  25: 203349.001 ops/s
Iteration  26: 205482.648 ops/s
Iteration  27: 204167.487 ops/s
Iteration  28: 204519.424 ops/s
Iteration  29: 204557.360 ops/s
Iteration  30: 204136.021 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_350._Benchmark.benchmark_Cluster_350":
  204072.795 ±(99.9%) 865.614 ops/s [Average]
  (min, avg, max) = (200951.116, 204072.795, 206278.865), stdev = 1295.610
  CI (99.9%): [203207.181, 204938.408] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_350._Benchmark.benchmark_Cluster_350  thrpt   30  204072.795 ± 865.614  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_351._Benchmark.benchmark_Cluster_351$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_351._Benchmark.benchmark_Cluster_351

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79225.456 ops/s
# Warmup Iteration   2: 97948.563 ops/s
# Warmup Iteration   3: 140765.599 ops/s
# Warmup Iteration   4: 174942.969 ops/s
# Warmup Iteration   5: 173095.757 ops/s
# Warmup Iteration   6: 173849.678 ops/s
# Warmup Iteration   7: 173568.484 ops/s
# Warmup Iteration   8: 173325.983 ops/s
# Warmup Iteration   9: 173051.470 ops/s
# Warmup Iteration  10: 174598.676 ops/s
# Warmup Iteration  11: 118593.442 ops/s
# Warmup Iteration  12: 175713.185 ops/s
# Warmup Iteration  13: 175279.733 ops/s
# Warmup Iteration  14: 175280.359 ops/s
# Warmup Iteration  15: 174789.725 ops/s
# Warmup Iteration  16: 174817.462 ops/s
# Warmup Iteration  17: 174757.274 ops/s
# Warmup Iteration  18: 174737.004 ops/s
# Warmup Iteration  19: 175086.541 ops/s
# Warmup Iteration  20: 174442.982 ops/s
# Warmup Iteration  21: 175419.227 ops/s
# Warmup Iteration  22: 174372.924 ops/s
# Warmup Iteration  23: 173543.138 ops/s
# Warmup Iteration  24: 173900.299 ops/s
# Warmup Iteration  25: 174781.272 ops/s
# Warmup Iteration  26: 174744.341 ops/s
# Warmup Iteration  27: 174381.036 ops/s
# Warmup Iteration  28: 174949.959 ops/s
# Warmup Iteration  29: 174912.975 ops/s
# Warmup Iteration  30: 174652.933 ops/s
Iteration   1: 174745.990 ops/s
Iteration   2: 174217.709 ops/s
Iteration   3: 173503.665 ops/s
Iteration   4: 174513.551 ops/s
Iteration   5: 173443.982 ops/s
Iteration   6: 174404.274 ops/s
Iteration   7: 173592.563 ops/s
Iteration   8: 174708.652 ops/s
Iteration   9: 174905.236 ops/s
Iteration  10: 173916.629 ops/s
Iteration  11: 175501.487 ops/s
Iteration  12: 174415.824 ops/s
Iteration  13: 173763.372 ops/s
Iteration  14: 175641.628 ops/s
Iteration  15: 173312.363 ops/s
Iteration  16: 174673.182 ops/s
Iteration  17: 173945.081 ops/s
Iteration  18: 175279.963 ops/s
Iteration  19: 173682.216 ops/s
Iteration  20: 174435.164 ops/s
Iteration  21: 173009.357 ops/s
Iteration  22: 173693.587 ops/s
Iteration  23: 174963.525 ops/s
Iteration  24: 173760.094 ops/s
Iteration  25: 174012.476 ops/s
Iteration  26: 174280.183 ops/s
Iteration  27: 173870.315 ops/s
Iteration  28: 175222.603 ops/s
Iteration  29: 174734.563 ops/s
Iteration  30: 175617.604 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_351._Benchmark.benchmark_Cluster_351":
  174325.561 ±(99.9%) 476.404 ops/s [Average]
  (min, avg, max) = (173009.357, 174325.561, 175641.628), stdev = 713.059
  CI (99.9%): [173849.158, 174801.965] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_351._Benchmark.benchmark_Cluster_351  thrpt   30  174325.561 ± 476.404  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_352._Benchmark.benchmark_Cluster_352$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_352._Benchmark.benchmark_Cluster_352

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 104188.411 ops/s
# Warmup Iteration   2: 116395.171 ops/s
# Warmup Iteration   3: 116315.889 ops/s
# Warmup Iteration   4: 173086.845 ops/s
# Warmup Iteration   5: 174082.765 ops/s
# Warmup Iteration   6: 171997.366 ops/s
# Warmup Iteration   7: 169496.296 ops/s
# Warmup Iteration   8: 171410.363 ops/s
# Warmup Iteration   9: 173183.992 ops/s
# Warmup Iteration  10: 173284.544 ops/s
# Warmup Iteration  11: 173071.504 ops/s
# Warmup Iteration  12: 173171.701 ops/s
# Warmup Iteration  13: 173179.198 ops/s
# Warmup Iteration  14: 172904.232 ops/s
# Warmup Iteration  15: 172211.053 ops/s
# Warmup Iteration  16: 118034.546 ops/s
# Warmup Iteration  17: 173001.512 ops/s
# Warmup Iteration  18: 172701.743 ops/s
# Warmup Iteration  19: 172575.181 ops/s
# Warmup Iteration  20: 172896.999 ops/s
# Warmup Iteration  21: 173631.806 ops/s
# Warmup Iteration  22: 172926.785 ops/s
# Warmup Iteration  23: 171971.180 ops/s
# Warmup Iteration  24: 173544.821 ops/s
# Warmup Iteration  25: 172879.626 ops/s
# Warmup Iteration  26: 173648.584 ops/s
# Warmup Iteration  27: 173104.465 ops/s
# Warmup Iteration  28: 173914.107 ops/s
# Warmup Iteration  29: 173973.326 ops/s
# Warmup Iteration  30: 174180.750 ops/s
Iteration   1: 173193.110 ops/s
Iteration   2: 172503.590 ops/s
Iteration   3: 174215.864 ops/s
Iteration   4: 174427.445 ops/s
Iteration   5: 172433.970 ops/s
Iteration   6: 173921.616 ops/s
Iteration   7: 173683.937 ops/s
Iteration   8: 174951.944 ops/s
Iteration   9: 175272.587 ops/s
Iteration  10: 174485.892 ops/s
Iteration  11: 173516.125 ops/s
Iteration  12: 174482.867 ops/s
Iteration  13: 173264.468 ops/s
Iteration  14: 173126.657 ops/s
Iteration  15: 173670.123 ops/s
Iteration  16: 173308.853 ops/s
Iteration  17: 173480.741 ops/s
Iteration  18: 173944.254 ops/s
Iteration  19: 174317.796 ops/s
Iteration  20: 173598.508 ops/s
Iteration  21: 173362.716 ops/s
Iteration  22: 174378.349 ops/s
Iteration  23: 173890.406 ops/s
Iteration  24: 173785.292 ops/s
Iteration  25: 174008.918 ops/s
Iteration  26: 174358.090 ops/s
Iteration  27: 174810.482 ops/s
Iteration  28: 173854.503 ops/s
Iteration  29: 173896.089 ops/s
Iteration  30: 174459.700 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_352._Benchmark.benchmark_Cluster_352":
  173886.830 ±(99.9%) 440.109 ops/s [Average]
  (min, avg, max) = (172433.970, 173886.830, 175272.587), stdev = 658.734
  CI (99.9%): [173446.721, 174326.938] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_352._Benchmark.benchmark_Cluster_352  thrpt   30  173886.830 ± 440.109  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_353._Benchmark.benchmark_Cluster_353$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_353._Benchmark.benchmark_Cluster_353

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70543.342 ops/s
# Warmup Iteration   2: 115616.299 ops/s
# Warmup Iteration   3: 175025.412 ops/s
# Warmup Iteration   4: 216479.938 ops/s
# Warmup Iteration   5: 213815.016 ops/s
# Warmup Iteration   6: 216000.247 ops/s
# Warmup Iteration   7: 215575.174 ops/s
# Warmup Iteration   8: 216184.225 ops/s
# Warmup Iteration   9: 209860.330 ops/s
# Warmup Iteration  10: 154595.484 ops/s
# Warmup Iteration  11: 216778.818 ops/s
# Warmup Iteration  12: 216144.868 ops/s
# Warmup Iteration  13: 215894.351 ops/s
# Warmup Iteration  14: 215970.024 ops/s
# Warmup Iteration  15: 216589.619 ops/s
# Warmup Iteration  16: 215626.383 ops/s
# Warmup Iteration  17: 216524.008 ops/s
# Warmup Iteration  18: 217395.130 ops/s
# Warmup Iteration  19: 217120.219 ops/s
# Warmup Iteration  20: 216722.754 ops/s
# Warmup Iteration  21: 215096.164 ops/s
# Warmup Iteration  22: 214862.836 ops/s
# Warmup Iteration  23: 215189.919 ops/s
# Warmup Iteration  24: 214670.286 ops/s
# Warmup Iteration  25: 214441.806 ops/s
# Warmup Iteration  26: 213799.508 ops/s
# Warmup Iteration  27: 214665.434 ops/s
# Warmup Iteration  28: 214286.992 ops/s
# Warmup Iteration  29: 214728.986 ops/s
# Warmup Iteration  30: 215873.601 ops/s
Iteration   1: 216299.153 ops/s
Iteration   2: 215996.009 ops/s
Iteration   3: 215886.829 ops/s
Iteration   4: 215113.421 ops/s
Iteration   5: 216071.979 ops/s
Iteration   6: 216929.759 ops/s
Iteration   7: 216848.579 ops/s
Iteration   8: 217673.405 ops/s
Iteration   9: 216247.622 ops/s
Iteration  10: 215863.290 ops/s
Iteration  11: 217623.038 ops/s
Iteration  12: 216853.056 ops/s
Iteration  13: 216215.328 ops/s
Iteration  14: 216135.909 ops/s
Iteration  15: 216642.368 ops/s
Iteration  16: 216232.556 ops/s
Iteration  17: 216001.116 ops/s
Iteration  18: 216772.547 ops/s
Iteration  19: 216994.703 ops/s
Iteration  20: 217510.450 ops/s
Iteration  21: 217179.443 ops/s
Iteration  22: 217338.559 ops/s
Iteration  23: 217820.823 ops/s
Iteration  24: 218063.703 ops/s
Iteration  25: 217297.570 ops/s
Iteration  26: 216188.694 ops/s
Iteration  27: 217238.748 ops/s
Iteration  28: 218027.159 ops/s
Iteration  29: 217758.045 ops/s
Iteration  30: 216959.003 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_353._Benchmark.benchmark_Cluster_353":
  216792.762 ±(99.9%) 502.367 ops/s [Average]
  (min, avg, max) = (215113.421, 216792.762, 218063.703), stdev = 751.919
  CI (99.9%): [216290.395, 217295.129] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_353._Benchmark.benchmark_Cluster_353  thrpt   30  216792.762 ± 502.367  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_354._Benchmark.benchmark_Cluster_354$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_354._Benchmark.benchmark_Cluster_354

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77654.001 ops/s
# Warmup Iteration   2: 130688.148 ops/s
# Warmup Iteration   3: 224842.399 ops/s
# Warmup Iteration   4: 276867.289 ops/s
# Warmup Iteration   5: 273926.858 ops/s
# Warmup Iteration   6: 274222.603 ops/s
# Warmup Iteration   7: 275161.921 ops/s
# Warmup Iteration   8: 275518.781 ops/s
# Warmup Iteration   9: 190067.570 ops/s
# Warmup Iteration  10: 272374.389 ops/s
# Warmup Iteration  11: 274659.643 ops/s
# Warmup Iteration  12: 274580.048 ops/s
# Warmup Iteration  13: 275081.575 ops/s
# Warmup Iteration  14: 277208.304 ops/s
# Warmup Iteration  15: 276311.729 ops/s
# Warmup Iteration  16: 276523.167 ops/s
# Warmup Iteration  17: 274855.997 ops/s
# Warmup Iteration  18: 275202.262 ops/s
# Warmup Iteration  19: 275283.642 ops/s
# Warmup Iteration  20: 276260.169 ops/s
# Warmup Iteration  21: 274721.410 ops/s
# Warmup Iteration  22: 271620.571 ops/s
# Warmup Iteration  23: 273474.946 ops/s
# Warmup Iteration  24: 272594.404 ops/s
# Warmup Iteration  25: 271675.886 ops/s
# Warmup Iteration  26: 271965.003 ops/s
# Warmup Iteration  27: 273786.148 ops/s
# Warmup Iteration  28: 276293.950 ops/s
# Warmup Iteration  29: 278133.383 ops/s
# Warmup Iteration  30: 276008.625 ops/s
Iteration   1: 275576.213 ops/s
Iteration   2: 275163.348 ops/s
Iteration   3: 276428.202 ops/s
Iteration   4: 274781.829 ops/s
Iteration   5: 275889.797 ops/s
Iteration   6: 278106.835 ops/s
Iteration   7: 277127.694 ops/s
Iteration   8: 276978.860 ops/s
Iteration   9: 276178.584 ops/s
Iteration  10: 277307.936 ops/s
Iteration  11: 275925.825 ops/s
Iteration  12: 275372.323 ops/s
Iteration  13: 276101.774 ops/s
Iteration  14: 275578.056 ops/s
Iteration  15: 275810.364 ops/s
Iteration  16: 274731.370 ops/s
Iteration  17: 275891.819 ops/s
Iteration  18: 277738.191 ops/s
Iteration  19: 276388.609 ops/s
Iteration  20: 276015.943 ops/s
Iteration  21: 276291.825 ops/s
Iteration  22: 275812.879 ops/s
Iteration  23: 274946.376 ops/s
Iteration  24: 276071.441 ops/s
Iteration  25: 275211.559 ops/s
Iteration  26: 275793.432 ops/s
Iteration  27: 274801.139 ops/s
Iteration  28: 275542.922 ops/s
Iteration  29: 276620.613 ops/s
Iteration  30: 276401.984 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_354._Benchmark.benchmark_Cluster_354":
  276019.591 ±(99.9%) 561.304 ops/s [Average]
  (min, avg, max) = (274731.370, 276019.591, 278106.835), stdev = 840.133
  CI (99.9%): [275458.287, 276580.895] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_354._Benchmark.benchmark_Cluster_354  thrpt   30  276019.591 ± 561.304  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_355._Benchmark.benchmark_Cluster_355$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_355._Benchmark.benchmark_Cluster_355

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79086.043 ops/s
# Warmup Iteration   2: 96649.792 ops/s
# Warmup Iteration   3: 96575.327 ops/s
# Warmup Iteration   4: 99568.624 ops/s
# Warmup Iteration   5: 134500.787 ops/s
# Warmup Iteration   6: 135069.768 ops/s
# Warmup Iteration   7: 135063.498 ops/s
# Warmup Iteration   8: 134600.030 ops/s
# Warmup Iteration   9: 134481.203 ops/s
# Warmup Iteration  10: 135394.682 ops/s
# Warmup Iteration  11: 135313.219 ops/s
# Warmup Iteration  12: 135266.019 ops/s
# Warmup Iteration  13: 134854.614 ops/s
# Warmup Iteration  14: 134458.836 ops/s
# Warmup Iteration  15: 134022.447 ops/s
# Warmup Iteration  16: 134199.343 ops/s
# Warmup Iteration  17: 138205.993 ops/s
# Warmup Iteration  18: 139604.314 ops/s
# Warmup Iteration  19: 139524.622 ops/s
# Warmup Iteration  20: 127840.096 ops/s
# Warmup Iteration  21: 103422.646 ops/s
# Warmup Iteration  22: 138848.238 ops/s
# Warmup Iteration  23: 138924.240 ops/s
# Warmup Iteration  24: 139100.663 ops/s
# Warmup Iteration  25: 139096.136 ops/s
# Warmup Iteration  26: 138485.879 ops/s
# Warmup Iteration  27: 139053.042 ops/s
# Warmup Iteration  28: 138291.358 ops/s
# Warmup Iteration  29: 138206.319 ops/s
# Warmup Iteration  30: 137768.050 ops/s
Iteration   1: 139273.975 ops/s
Iteration   2: 139261.434 ops/s
Iteration   3: 138122.023 ops/s
Iteration   4: 138330.366 ops/s
Iteration   5: 138822.500 ops/s
Iteration   6: 138589.875 ops/s
Iteration   7: 138281.933 ops/s
Iteration   8: 138299.636 ops/s
Iteration   9: 139190.881 ops/s
Iteration  10: 138651.128 ops/s
Iteration  11: 138573.511 ops/s
Iteration  12: 138691.361 ops/s
Iteration  13: 139409.125 ops/s
Iteration  14: 139487.375 ops/s
Iteration  15: 139083.225 ops/s
Iteration  16: 137969.521 ops/s
Iteration  17: 138376.247 ops/s
Iteration  18: 138712.131 ops/s
Iteration  19: 138318.681 ops/s
Iteration  20: 138606.972 ops/s
Iteration  21: 138686.829 ops/s
Iteration  22: 137773.226 ops/s
Iteration  23: 138914.406 ops/s
Iteration  24: 138507.996 ops/s
Iteration  25: 139608.050 ops/s
Iteration  26: 139671.966 ops/s
Iteration  27: 137908.783 ops/s
Iteration  28: 138199.844 ops/s
Iteration  29: 138716.935 ops/s
Iteration  30: 138200.391 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_355._Benchmark.benchmark_Cluster_355":
  138674.678 ±(99.9%) 342.414 ops/s [Average]
  (min, avg, max) = (137773.226, 138674.678, 139671.966), stdev = 512.509
  CI (99.9%): [138332.264, 139017.092] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_355._Benchmark.benchmark_Cluster_355  thrpt   30  138674.678 ± 342.414  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_356._Benchmark.benchmark_Cluster_356$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_356._Benchmark.benchmark_Cluster_356

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51045.273 ops/s
# Warmup Iteration   2: 75989.848 ops/s
# Warmup Iteration   3: 75210.737 ops/s
# Warmup Iteration   4: 103455.268 ops/s
# Warmup Iteration   5: 113715.552 ops/s
# Warmup Iteration   6: 114801.738 ops/s
# Warmup Iteration   7: 114138.614 ops/s
# Warmup Iteration   8: 113469.913 ops/s
# Warmup Iteration   9: 114342.366 ops/s
# Warmup Iteration  10: 114211.557 ops/s
# Warmup Iteration  11: 113383.510 ops/s
# Warmup Iteration  12: 110600.282 ops/s
# Warmup Iteration  13: 111446.567 ops/s
# Warmup Iteration  14: 114162.302 ops/s
# Warmup Iteration  15: 114395.273 ops/s
# Warmup Iteration  16: 86941.455 ops/s
# Warmup Iteration  17: 105998.559 ops/s
# Warmup Iteration  18: 118035.869 ops/s
# Warmup Iteration  19: 117916.068 ops/s
# Warmup Iteration  20: 117488.819 ops/s
# Warmup Iteration  21: 118215.835 ops/s
# Warmup Iteration  22: 118023.888 ops/s
# Warmup Iteration  23: 118963.504 ops/s
# Warmup Iteration  24: 117937.901 ops/s
# Warmup Iteration  25: 117519.723 ops/s
# Warmup Iteration  26: 118446.180 ops/s
# Warmup Iteration  27: 117104.621 ops/s
# Warmup Iteration  28: 117575.764 ops/s
# Warmup Iteration  29: 117341.470 ops/s
# Warmup Iteration  30: 118220.184 ops/s
Iteration   1: 118524.421 ops/s
Iteration   2: 117467.088 ops/s
Iteration   3: 118156.504 ops/s
Iteration   4: 118152.264 ops/s
Iteration   5: 117496.584 ops/s
Iteration   6: 119425.677 ops/s
Iteration   7: 118788.650 ops/s
Iteration   8: 117958.121 ops/s
Iteration   9: 116962.782 ops/s
Iteration  10: 117146.900 ops/s
Iteration  11: 118566.686 ops/s
Iteration  12: 118660.427 ops/s
Iteration  13: 118537.175 ops/s
Iteration  14: 118926.583 ops/s
Iteration  15: 118466.987 ops/s
Iteration  16: 117236.873 ops/s
Iteration  17: 117098.453 ops/s
Iteration  18: 118049.214 ops/s
Iteration  19: 118287.270 ops/s
Iteration  20: 116602.030 ops/s
Iteration  21: 118048.443 ops/s
Iteration  22: 118547.128 ops/s
Iteration  23: 118891.884 ops/s
Iteration  24: 117408.520 ops/s
Iteration  25: 117022.064 ops/s
Iteration  26: 117180.506 ops/s
Iteration  27: 117848.451 ops/s
Iteration  28: 117320.914 ops/s
Iteration  29: 118144.872 ops/s
Iteration  30: 117620.962 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_356._Benchmark.benchmark_Cluster_356":
  117951.481 ±(99.9%) 472.915 ops/s [Average]
  (min, avg, max) = (116602.030, 117951.481, 119425.677), stdev = 707.838
  CI (99.9%): [117478.566, 118424.397] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_356._Benchmark.benchmark_Cluster_356  thrpt   30  117951.481 ± 472.915  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_357._Benchmark.benchmark_Cluster_357$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_357._Benchmark.benchmark_Cluster_357

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 17888.429 ops/s
# Warmup Iteration   2: 46173.267 ops/s
# Warmup Iteration   3: 47184.571 ops/s
# Warmup Iteration   4: 72649.053 ops/s
# Warmup Iteration   5: 80082.857 ops/s
# Warmup Iteration   6: 80100.888 ops/s
# Warmup Iteration   7: 80220.340 ops/s
# Warmup Iteration   8: 81199.458 ops/s
# Warmup Iteration   9: 81421.530 ops/s
# Warmup Iteration  10: 81635.857 ops/s
# Warmup Iteration  11: 77443.228 ops/s
# Warmup Iteration  12: 56805.639 ops/s
# Warmup Iteration  13: 81577.271 ops/s
# Warmup Iteration  14: 80229.952 ops/s
# Warmup Iteration  15: 80633.551 ops/s
# Warmup Iteration  16: 81433.043 ops/s
# Warmup Iteration  17: 81167.904 ops/s
# Warmup Iteration  18: 81970.657 ops/s
# Warmup Iteration  19: 81333.771 ops/s
# Warmup Iteration  20: 80248.796 ops/s
# Warmup Iteration  21: 80398.254 ops/s
# Warmup Iteration  22: 80840.448 ops/s
# Warmup Iteration  23: 81340.562 ops/s
# Warmup Iteration  24: 81035.663 ops/s
# Warmup Iteration  25: 80875.127 ops/s
# Warmup Iteration  26: 81779.046 ops/s
# Warmup Iteration  27: 81619.780 ops/s
# Warmup Iteration  28: 82069.375 ops/s
# Warmup Iteration  29: 81775.770 ops/s
# Warmup Iteration  30: 80694.938 ops/s
Iteration   1: 81438.686 ops/s
Iteration   2: 81953.450 ops/s
Iteration   3: 81796.680 ops/s
Iteration   4: 81600.424 ops/s
Iteration   5: 81629.691 ops/s
Iteration   6: 81690.340 ops/s
Iteration   7: 81698.574 ops/s
Iteration   8: 79591.816 ops/s
Iteration   9: 80166.427 ops/s
Iteration  10: 81192.162 ops/s
Iteration  11: 79994.762 ops/s
Iteration  12: 80924.833 ops/s
Iteration  13: 81262.498 ops/s
Iteration  14: 80597.839 ops/s
Iteration  15: 80961.120 ops/s
Iteration  16: 80615.424 ops/s
Iteration  17: 81619.539 ops/s
Iteration  18: 80855.138 ops/s
Iteration  19: 81215.233 ops/s
Iteration  20: 81901.746 ops/s
Iteration  21: 81851.145 ops/s
Iteration  22: 81759.435 ops/s
Iteration  23: 81771.558 ops/s
Iteration  24: 81720.112 ops/s
Iteration  25: 81168.396 ops/s
Iteration  26: 81662.253 ops/s
Iteration  27: 81931.141 ops/s
Iteration  28: 81569.200 ops/s
Iteration  29: 81057.907 ops/s
Iteration  30: 80266.578 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_357._Benchmark.benchmark_Cluster_357":
  81248.804 ±(99.9%) 422.373 ops/s [Average]
  (min, avg, max) = (79591.816, 81248.804, 81953.450), stdev = 632.189
  CI (99.9%): [80826.430, 81671.177] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_357._Benchmark.benchmark_Cluster_357  thrpt   30  81248.804 ± 422.373  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_358._Benchmark.benchmark_Cluster_358$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_358._Benchmark.benchmark_Cluster_358

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71488.268 ops/s
# Warmup Iteration   2: 91984.409 ops/s
# Warmup Iteration   3: 131412.296 ops/s
# Warmup Iteration   4: 164569.209 ops/s
# Warmup Iteration   5: 163913.168 ops/s
# Warmup Iteration   6: 164833.909 ops/s
# Warmup Iteration   7: 164763.857 ops/s
# Warmup Iteration   8: 165043.990 ops/s
# Warmup Iteration   9: 165050.856 ops/s
# Warmup Iteration  10: 166064.233 ops/s
# Warmup Iteration  11: 111690.714 ops/s
# Warmup Iteration  12: 165845.796 ops/s
# Warmup Iteration  13: 163989.880 ops/s
# Warmup Iteration  14: 164872.073 ops/s
# Warmup Iteration  15: 164872.467 ops/s
# Warmup Iteration  16: 164962.608 ops/s
# Warmup Iteration  17: 164878.739 ops/s
# Warmup Iteration  18: 165363.591 ops/s
# Warmup Iteration  19: 166128.568 ops/s
# Warmup Iteration  20: 165942.565 ops/s
# Warmup Iteration  21: 165323.182 ops/s
# Warmup Iteration  22: 165661.506 ops/s
# Warmup Iteration  23: 165811.506 ops/s
# Warmup Iteration  24: 165267.784 ops/s
# Warmup Iteration  25: 166160.566 ops/s
# Warmup Iteration  26: 166528.063 ops/s
# Warmup Iteration  27: 166200.702 ops/s
# Warmup Iteration  28: 165763.695 ops/s
# Warmup Iteration  29: 165903.462 ops/s
# Warmup Iteration  30: 165826.828 ops/s
Iteration   1: 166607.767 ops/s
Iteration   2: 166032.629 ops/s
Iteration   3: 166343.033 ops/s
Iteration   4: 165344.212 ops/s
Iteration   5: 165026.634 ops/s
Iteration   6: 164967.443 ops/s
Iteration   7: 164590.995 ops/s
Iteration   8: 166707.572 ops/s
Iteration   9: 164740.284 ops/s
Iteration  10: 163675.283 ops/s
Iteration  11: 164430.550 ops/s
Iteration  12: 162166.904 ops/s
Iteration  13: 165039.711 ops/s
Iteration  14: 163918.176 ops/s
Iteration  15: 165903.580 ops/s
Iteration  16: 166020.440 ops/s
Iteration  17: 166112.843 ops/s
Iteration  18: 165473.758 ops/s
Iteration  19: 164758.465 ops/s
Iteration  20: 166226.027 ops/s
Iteration  21: 164573.305 ops/s
Iteration  22: 165407.515 ops/s
Iteration  23: 165901.004 ops/s
Iteration  24: 165379.261 ops/s
Iteration  25: 166338.263 ops/s
Iteration  26: 165280.459 ops/s
Iteration  27: 166107.946 ops/s
Iteration  28: 166366.591 ops/s
Iteration  29: 166089.834 ops/s
Iteration  30: 166331.187 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_358._Benchmark.benchmark_Cluster_358":
  165395.389 ±(99.9%) 672.976 ops/s [Average]
  (min, avg, max) = (162166.904, 165395.389, 166707.572), stdev = 1007.279
  CI (99.9%): [164722.413, 166068.365] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_358._Benchmark.benchmark_Cluster_358  thrpt   30  165395.389 ± 672.976  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_359._Benchmark.benchmark_Cluster_359$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_359._Benchmark.benchmark_Cluster_359

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93266.236 ops/s
# Warmup Iteration   2: 118105.125 ops/s
# Warmup Iteration   3: 126127.737 ops/s
# Warmup Iteration   4: 199882.551 ops/s
# Warmup Iteration   5: 198013.596 ops/s
# Warmup Iteration   6: 198404.870 ops/s
# Warmup Iteration   7: 196796.315 ops/s
# Warmup Iteration   8: 198497.620 ops/s
# Warmup Iteration   9: 198730.254 ops/s
# Warmup Iteration  10: 199184.716 ops/s
# Warmup Iteration  11: 197625.404 ops/s
# Warmup Iteration  12: 197467.377 ops/s
# Warmup Iteration  13: 173037.593 ops/s
# Warmup Iteration  14: 150799.787 ops/s
# Warmup Iteration  15: 198550.045 ops/s
# Warmup Iteration  16: 197576.433 ops/s
# Warmup Iteration  17: 202239.623 ops/s
# Warmup Iteration  18: 202125.963 ops/s
# Warmup Iteration  19: 203581.931 ops/s
# Warmup Iteration  20: 203255.181 ops/s
# Warmup Iteration  21: 202968.926 ops/s
# Warmup Iteration  22: 202864.787 ops/s
# Warmup Iteration  23: 202735.183 ops/s
# Warmup Iteration  24: 202117.371 ops/s
# Warmup Iteration  25: 202775.641 ops/s
# Warmup Iteration  26: 202892.417 ops/s
# Warmup Iteration  27: 203183.978 ops/s
# Warmup Iteration  28: 203021.251 ops/s
# Warmup Iteration  29: 202741.269 ops/s
# Warmup Iteration  30: 203259.977 ops/s
Iteration   1: 202636.115 ops/s
Iteration   2: 202806.868 ops/s
Iteration   3: 203101.336 ops/s
Iteration   4: 202723.766 ops/s
Iteration   5: 202485.436 ops/s
Iteration   6: 201446.124 ops/s
Iteration   7: 201786.788 ops/s
Iteration   8: 202575.877 ops/s
Iteration   9: 201092.813 ops/s
Iteration  10: 200648.923 ops/s
Iteration  11: 200368.165 ops/s
Iteration  12: 201988.262 ops/s
Iteration  13: 203265.397 ops/s
Iteration  14: 203215.376 ops/s
Iteration  15: 202435.588 ops/s
Iteration  16: 203632.846 ops/s
Iteration  17: 203913.289 ops/s
Iteration  18: 203897.639 ops/s
Iteration  19: 202935.538 ops/s
Iteration  20: 203513.501 ops/s
Iteration  21: 203769.689 ops/s
Iteration  22: 202324.098 ops/s
Iteration  23: 202475.223 ops/s
Iteration  24: 202564.394 ops/s
Iteration  25: 201905.479 ops/s
Iteration  26: 203729.878 ops/s
Iteration  27: 202988.829 ops/s
Iteration  28: 202332.705 ops/s
Iteration  29: 202950.377 ops/s
Iteration  30: 202339.129 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_359._Benchmark.benchmark_Cluster_359":
  202594.982 ±(99.9%) 603.404 ops/s [Average]
  (min, avg, max) = (200368.165, 202594.982, 203913.289), stdev = 903.147
  CI (99.9%): [201991.578, 203198.386] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_359._Benchmark.benchmark_Cluster_359  thrpt   30  202594.982 ± 603.404  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_36._Benchmark.benchmark_Cluster_36$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_36._Benchmark.benchmark_Cluster_36

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 121104.581 ops/s
# Warmup Iteration   2: 134223.221 ops/s
# Warmup Iteration   3: 136102.535 ops/s
# Warmup Iteration   4: 151726.988 ops/s
# Warmup Iteration   5: 187794.184 ops/s
# Warmup Iteration   6: 188804.644 ops/s
# Warmup Iteration   7: 188329.251 ops/s
# Warmup Iteration   8: 188047.863 ops/s
# Warmup Iteration   9: 186876.300 ops/s
# Warmup Iteration  10: 188307.972 ops/s
# Warmup Iteration  11: 188690.672 ops/s
# Warmup Iteration  12: 187036.983 ops/s
# Warmup Iteration  13: 188712.825 ops/s
# Warmup Iteration  14: 188996.512 ops/s
# Warmup Iteration  15: 188858.795 ops/s
# Warmup Iteration  16: 188585.541 ops/s
# Warmup Iteration  17: 196763.728 ops/s
# Warmup Iteration  18: 198468.413 ops/s
# Warmup Iteration  19: 198019.148 ops/s
# Warmup Iteration  20: 148346.744 ops/s
# Warmup Iteration  21: 182377.958 ops/s
# Warmup Iteration  22: 198072.058 ops/s
# Warmup Iteration  23: 196921.438 ops/s
# Warmup Iteration  24: 197409.816 ops/s
# Warmup Iteration  25: 197630.129 ops/s
# Warmup Iteration  26: 197243.035 ops/s
# Warmup Iteration  27: 197394.221 ops/s
# Warmup Iteration  28: 197840.674 ops/s
# Warmup Iteration  29: 197815.093 ops/s
# Warmup Iteration  30: 198188.513 ops/s
Iteration   1: 197588.704 ops/s
Iteration   2: 198258.765 ops/s
Iteration   3: 198023.320 ops/s
Iteration   4: 197812.492 ops/s
Iteration   5: 197982.769 ops/s
Iteration   6: 197278.146 ops/s
Iteration   7: 197348.513 ops/s
Iteration   8: 197188.248 ops/s
Iteration   9: 197565.423 ops/s
Iteration  10: 196740.537 ops/s
Iteration  11: 197551.808 ops/s
Iteration  12: 197491.910 ops/s
Iteration  13: 196831.927 ops/s
Iteration  14: 197190.633 ops/s
Iteration  15: 196970.056 ops/s
Iteration  16: 197814.745 ops/s
Iteration  17: 197051.490 ops/s
Iteration  18: 196976.999 ops/s
Iteration  19: 197157.022 ops/s
Iteration  20: 196815.461 ops/s
Iteration  21: 196519.431 ops/s
Iteration  22: 198069.566 ops/s
Iteration  23: 196745.784 ops/s
Iteration  24: 198036.263 ops/s
Iteration  25: 197570.617 ops/s
Iteration  26: 197488.319 ops/s
Iteration  27: 198055.352 ops/s
Iteration  28: 197267.903 ops/s
Iteration  29: 198049.589 ops/s
Iteration  30: 197935.017 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_36._Benchmark.benchmark_Cluster_36":
  197445.894 ±(99.9%) 324.412 ops/s [Average]
  (min, avg, max) = (196519.431, 197445.894, 198258.765), stdev = 485.564
  CI (99.9%): [197121.482, 197770.305] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_36._Benchmark.benchmark_Cluster_36  thrpt   30  197445.894 ± 324.412  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_360._Benchmark.benchmark_Cluster_360$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_360._Benchmark.benchmark_Cluster_360

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67124.554 ops/s
# Warmup Iteration   2: 95407.575 ops/s
# Warmup Iteration   3: 96493.906 ops/s
# Warmup Iteration   4: 145410.451 ops/s
# Warmup Iteration   5: 148961.885 ops/s
# Warmup Iteration   6: 149285.616 ops/s
# Warmup Iteration   7: 146262.517 ops/s
# Warmup Iteration   8: 149506.051 ops/s
# Warmup Iteration   9: 150001.250 ops/s
# Warmup Iteration  10: 150006.714 ops/s
# Warmup Iteration  11: 149133.059 ops/s
# Warmup Iteration  12: 148825.589 ops/s
# Warmup Iteration  13: 148318.215 ops/s
# Warmup Iteration  14: 147788.045 ops/s
# Warmup Iteration  15: 101806.091 ops/s
# Warmup Iteration  16: 149242.276 ops/s
# Warmup Iteration  17: 153073.100 ops/s
# Warmup Iteration  18: 152668.738 ops/s
# Warmup Iteration  19: 152874.086 ops/s
# Warmup Iteration  20: 152542.139 ops/s
# Warmup Iteration  21: 153130.834 ops/s
# Warmup Iteration  22: 152792.298 ops/s
# Warmup Iteration  23: 152952.565 ops/s
# Warmup Iteration  24: 153379.076 ops/s
# Warmup Iteration  25: 153526.066 ops/s
# Warmup Iteration  26: 153109.201 ops/s
# Warmup Iteration  27: 153418.545 ops/s
# Warmup Iteration  28: 153638.897 ops/s
# Warmup Iteration  29: 153752.025 ops/s
# Warmup Iteration  30: 153351.795 ops/s
Iteration   1: 153887.253 ops/s
Iteration   2: 153164.028 ops/s
Iteration   3: 152511.169 ops/s
Iteration   4: 152358.734 ops/s
Iteration   5: 153218.807 ops/s
Iteration   6: 152629.692 ops/s
Iteration   7: 153504.953 ops/s
Iteration   8: 153129.391 ops/s
Iteration   9: 153251.314 ops/s
Iteration  10: 153092.146 ops/s
Iteration  11: 153323.202 ops/s
Iteration  12: 153110.139 ops/s
Iteration  13: 153183.903 ops/s
Iteration  14: 153317.070 ops/s
Iteration  15: 152995.801 ops/s
Iteration  16: 153617.073 ops/s
Iteration  17: 153687.618 ops/s
Iteration  18: 153519.646 ops/s
Iteration  19: 153816.140 ops/s
Iteration  20: 153193.952 ops/s
Iteration  21: 153777.526 ops/s
Iteration  22: 152391.906 ops/s
Iteration  23: 153421.472 ops/s
Iteration  24: 153357.268 ops/s
Iteration  25: 153452.464 ops/s
Iteration  26: 153305.965 ops/s
Iteration  27: 153041.776 ops/s
Iteration  28: 153013.219 ops/s
Iteration  29: 153200.269 ops/s
Iteration  30: 153412.687 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_360._Benchmark.benchmark_Cluster_360":
  153229.553 ±(99.9%) 256.681 ops/s [Average]
  (min, avg, max) = (152358.734, 153229.553, 153887.253), stdev = 384.188
  CI (99.9%): [152972.872, 153486.234] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_360._Benchmark.benchmark_Cluster_360  thrpt   30  153229.553 ± 256.681  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_361._Benchmark.benchmark_Cluster_361$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_361._Benchmark.benchmark_Cluster_361

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94891.489 ops/s
# Warmup Iteration   2: 102827.544 ops/s
# Warmup Iteration   3: 102222.711 ops/s
# Warmup Iteration   4: 115385.433 ops/s
# Warmup Iteration   5: 141679.226 ops/s
# Warmup Iteration   6: 141355.656 ops/s
# Warmup Iteration   7: 140959.681 ops/s
# Warmup Iteration   8: 141150.154 ops/s
# Warmup Iteration   9: 140289.565 ops/s
# Warmup Iteration  10: 140476.959 ops/s
# Warmup Iteration  11: 140672.380 ops/s
# Warmup Iteration  12: 140503.000 ops/s
# Warmup Iteration  13: 140982.191 ops/s
# Warmup Iteration  14: 141030.457 ops/s
# Warmup Iteration  15: 140432.168 ops/s
# Warmup Iteration  16: 141069.916 ops/s
# Warmup Iteration  17: 148650.681 ops/s
# Warmup Iteration  18: 148501.489 ops/s
# Warmup Iteration  19: 146157.395 ops/s
# Warmup Iteration  20: 107586.773 ops/s
# Warmup Iteration  21: 145371.898 ops/s
# Warmup Iteration  22: 148798.132 ops/s
# Warmup Iteration  23: 148529.059 ops/s
# Warmup Iteration  24: 148628.725 ops/s
# Warmup Iteration  25: 148388.329 ops/s
# Warmup Iteration  26: 148658.434 ops/s
# Warmup Iteration  27: 148606.623 ops/s
# Warmup Iteration  28: 148989.015 ops/s
# Warmup Iteration  29: 148682.614 ops/s
# Warmup Iteration  30: 148852.332 ops/s
Iteration   1: 148281.005 ops/s
Iteration   2: 148181.751 ops/s
Iteration   3: 148768.543 ops/s
Iteration   4: 148617.272 ops/s
Iteration   5: 147552.534 ops/s
Iteration   6: 148475.493 ops/s
Iteration   7: 148827.293 ops/s
Iteration   8: 148102.063 ops/s
Iteration   9: 148110.534 ops/s
Iteration  10: 147759.178 ops/s
Iteration  11: 148330.058 ops/s
Iteration  12: 147854.349 ops/s
Iteration  13: 148249.811 ops/s
Iteration  14: 148060.606 ops/s
Iteration  15: 148480.797 ops/s
Iteration  16: 148333.619 ops/s
Iteration  17: 148373.914 ops/s
Iteration  18: 148634.359 ops/s
Iteration  19: 148694.447 ops/s
Iteration  20: 148499.016 ops/s
Iteration  21: 148271.014 ops/s
Iteration  22: 148262.561 ops/s
Iteration  23: 147786.525 ops/s
Iteration  24: 148468.462 ops/s
Iteration  25: 148585.720 ops/s
Iteration  26: 147742.791 ops/s
Iteration  27: 147861.102 ops/s
Iteration  28: 148180.303 ops/s
Iteration  29: 148577.090 ops/s
Iteration  30: 148040.111 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_361._Benchmark.benchmark_Cluster_361":
  148265.411 ±(99.9%) 221.137 ops/s [Average]
  (min, avg, max) = (147552.534, 148265.411, 148827.293), stdev = 330.988
  CI (99.9%): [148044.274, 148486.548] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_361._Benchmark.benchmark_Cluster_361  thrpt   30  148265.411 ± 221.137  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_362._Benchmark.benchmark_Cluster_362$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_362._Benchmark.benchmark_Cluster_362

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 89528.495 ops/s
# Warmup Iteration   2: 98674.727 ops/s
# Warmup Iteration   3: 98542.237 ops/s
# Warmup Iteration   4: 119316.599 ops/s
# Warmup Iteration   5: 139220.513 ops/s
# Warmup Iteration   6: 139089.199 ops/s
# Warmup Iteration   7: 138945.706 ops/s
# Warmup Iteration   8: 137893.753 ops/s
# Warmup Iteration   9: 135142.041 ops/s
# Warmup Iteration  10: 137581.338 ops/s
# Warmup Iteration  11: 138291.388 ops/s
# Warmup Iteration  12: 138665.479 ops/s
# Warmup Iteration  13: 138830.841 ops/s
# Warmup Iteration  14: 138269.412 ops/s
# Warmup Iteration  15: 138651.094 ops/s
# Warmup Iteration  16: 138245.295 ops/s
# Warmup Iteration  17: 145885.088 ops/s
# Warmup Iteration  18: 139564.068 ops/s
# Warmup Iteration  19: 107132.740 ops/s
# Warmup Iteration  20: 145459.450 ops/s
# Warmup Iteration  21: 146379.328 ops/s
# Warmup Iteration  22: 146143.494 ops/s
# Warmup Iteration  23: 146086.395 ops/s
# Warmup Iteration  24: 146422.130 ops/s
# Warmup Iteration  25: 145236.072 ops/s
# Warmup Iteration  26: 145236.764 ops/s
# Warmup Iteration  27: 145894.478 ops/s
# Warmup Iteration  28: 145522.292 ops/s
# Warmup Iteration  29: 144713.345 ops/s
# Warmup Iteration  30: 143647.105 ops/s
Iteration   1: 145996.899 ops/s
Iteration   2: 144651.530 ops/s
Iteration   3: 143941.935 ops/s
Iteration   4: 143255.792 ops/s
Iteration   5: 143963.565 ops/s
Iteration   6: 144921.226 ops/s
Iteration   7: 142385.320 ops/s
Iteration   8: 145155.635 ops/s
Iteration   9: 145010.383 ops/s
Iteration  10: 143494.961 ops/s
Iteration  11: 146171.546 ops/s
Iteration  12: 145332.490 ops/s
Iteration  13: 146507.398 ops/s
Iteration  14: 145690.478 ops/s
Iteration  15: 145608.970 ops/s
Iteration  16: 145411.451 ops/s
Iteration  17: 142441.008 ops/s
Iteration  18: 145353.462 ops/s
Iteration  19: 144127.315 ops/s
Iteration  20: 145807.852 ops/s
Iteration  21: 145652.188 ops/s
Iteration  22: 145415.351 ops/s
Iteration  23: 146289.511 ops/s
Iteration  24: 145322.175 ops/s
Iteration  25: 145123.479 ops/s
Iteration  26: 145419.064 ops/s
Iteration  27: 145255.095 ops/s
Iteration  28: 145609.935 ops/s
Iteration  29: 145345.276 ops/s
Iteration  30: 145957.302 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_362._Benchmark.benchmark_Cluster_362":
  145020.620 ±(99.9%) 705.741 ops/s [Average]
  (min, avg, max) = (142385.320, 145020.620, 146507.398), stdev = 1056.320
  CI (99.9%): [144314.879, 145726.361] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_362._Benchmark.benchmark_Cluster_362  thrpt   30  145020.620 ± 705.741  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_363._Benchmark.benchmark_Cluster_363$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_363._Benchmark.benchmark_Cluster_363

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 110005.987 ops/s
# Warmup Iteration   2: 124119.482 ops/s
# Warmup Iteration   3: 122443.623 ops/s
# Warmup Iteration   4: 125421.869 ops/s
# Warmup Iteration   5: 163423.946 ops/s
# Warmup Iteration   6: 163745.366 ops/s
# Warmup Iteration   7: 163209.452 ops/s
# Warmup Iteration   8: 164205.943 ops/s
# Warmup Iteration   9: 163974.497 ops/s
# Warmup Iteration  10: 161706.345 ops/s
# Warmup Iteration  11: 163985.172 ops/s
# Warmup Iteration  12: 163794.616 ops/s
# Warmup Iteration  13: 163369.585 ops/s
# Warmup Iteration  14: 163025.975 ops/s
# Warmup Iteration  15: 162277.650 ops/s
# Warmup Iteration  16: 162584.911 ops/s
# Warmup Iteration  17: 169855.188 ops/s
# Warmup Iteration  18: 170075.602 ops/s
# Warmup Iteration  19: 168924.664 ops/s
# Warmup Iteration  20: 169414.214 ops/s
# Warmup Iteration  21: 169754.866 ops/s
# Warmup Iteration  22: 137925.496 ops/s
# Warmup Iteration  23: 147908.672 ops/s
# Warmup Iteration  24: 169299.920 ops/s
# Warmup Iteration  25: 170166.042 ops/s
# Warmup Iteration  26: 171155.544 ops/s
# Warmup Iteration  27: 170319.992 ops/s
# Warmup Iteration  28: 170532.040 ops/s
# Warmup Iteration  29: 168513.698 ops/s
# Warmup Iteration  30: 169295.805 ops/s
Iteration   1: 168543.562 ops/s
Iteration   2: 169144.926 ops/s
Iteration   3: 170229.041 ops/s
Iteration   4: 168997.033 ops/s
Iteration   5: 170760.107 ops/s
Iteration   6: 169623.006 ops/s
Iteration   7: 170709.369 ops/s
Iteration   8: 170663.135 ops/s
Iteration   9: 170826.277 ops/s
Iteration  10: 170654.490 ops/s
Iteration  11: 170573.294 ops/s
Iteration  12: 170646.024 ops/s
Iteration  13: 169488.997 ops/s
Iteration  14: 170170.823 ops/s
Iteration  15: 170441.719 ops/s
Iteration  16: 170847.164 ops/s
Iteration  17: 171069.295 ops/s
Iteration  18: 170782.177 ops/s
Iteration  19: 171312.567 ops/s
Iteration  20: 171378.419 ops/s
Iteration  21: 170597.885 ops/s
Iteration  22: 170410.451 ops/s
Iteration  23: 168484.175 ops/s
Iteration  24: 169831.018 ops/s
Iteration  25: 169416.199 ops/s
Iteration  26: 167118.421 ops/s
Iteration  27: 169719.023 ops/s
Iteration  28: 168016.124 ops/s
Iteration  29: 169326.493 ops/s
Iteration  30: 169117.928 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_363._Benchmark.benchmark_Cluster_363":
  169963.305 ±(99.9%) 687.578 ops/s [Average]
  (min, avg, max) = (167118.421, 169963.305, 171378.419), stdev = 1029.134
  CI (99.9%): [169275.727, 170650.883] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_363._Benchmark.benchmark_Cluster_363  thrpt   30  169963.305 ± 687.578  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_364._Benchmark.benchmark_Cluster_364$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_364._Benchmark.benchmark_Cluster_364

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91751.557 ops/s
# Warmup Iteration   2: 97288.139 ops/s
# Warmup Iteration   3: 97604.430 ops/s
# Warmup Iteration   4: 113969.035 ops/s
# Warmup Iteration   5: 135425.334 ops/s
# Warmup Iteration   6: 135962.912 ops/s
# Warmup Iteration   7: 135948.469 ops/s
# Warmup Iteration   8: 135297.358 ops/s
# Warmup Iteration   9: 134311.781 ops/s
# Warmup Iteration  10: 135463.389 ops/s
# Warmup Iteration  11: 135794.127 ops/s
# Warmup Iteration  12: 135305.002 ops/s
# Warmup Iteration  13: 135331.949 ops/s
# Warmup Iteration  14: 135633.015 ops/s
# Warmup Iteration  15: 135397.730 ops/s
# Warmup Iteration  16: 135931.432 ops/s
# Warmup Iteration  17: 141969.650 ops/s
# Warmup Iteration  18: 141779.334 ops/s
# Warmup Iteration  19: 125230.187 ops/s
# Warmup Iteration  20: 115354.817 ops/s
# Warmup Iteration  21: 142222.400 ops/s
# Warmup Iteration  22: 141540.515 ops/s
# Warmup Iteration  23: 142397.027 ops/s
# Warmup Iteration  24: 141495.744 ops/s
# Warmup Iteration  25: 142155.854 ops/s
# Warmup Iteration  26: 142149.206 ops/s
# Warmup Iteration  27: 141919.925 ops/s
# Warmup Iteration  28: 140455.582 ops/s
# Warmup Iteration  29: 140830.820 ops/s
# Warmup Iteration  30: 140179.400 ops/s
Iteration   1: 141478.025 ops/s
Iteration   2: 141494.720 ops/s
Iteration   3: 141098.775 ops/s
Iteration   4: 141383.109 ops/s
Iteration   5: 141690.635 ops/s
Iteration   6: 141538.190 ops/s
Iteration   7: 141279.816 ops/s
Iteration   8: 141198.711 ops/s
Iteration   9: 141633.152 ops/s
Iteration  10: 141616.739 ops/s
Iteration  11: 142125.795 ops/s
Iteration  12: 141740.181 ops/s
Iteration  13: 141817.075 ops/s
Iteration  14: 141958.781 ops/s
Iteration  15: 142226.809 ops/s
Iteration  16: 142283.632 ops/s
Iteration  17: 142206.696 ops/s
Iteration  18: 142286.243 ops/s
Iteration  19: 141881.538 ops/s
Iteration  20: 141858.433 ops/s
Iteration  21: 141780.803 ops/s
Iteration  22: 141889.254 ops/s
Iteration  23: 141364.661 ops/s
Iteration  24: 141927.377 ops/s
Iteration  25: 141858.458 ops/s
Iteration  26: 142038.271 ops/s
Iteration  27: 142196.644 ops/s
Iteration  28: 142102.113 ops/s
Iteration  29: 141998.572 ops/s
Iteration  30: 141720.760 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_364._Benchmark.benchmark_Cluster_364":
  141789.132 ±(99.9%) 220.706 ops/s [Average]
  (min, avg, max) = (141098.775, 141789.132, 142286.243), stdev = 330.343
  CI (99.9%): [141568.426, 142009.839] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_364._Benchmark.benchmark_Cluster_364  thrpt   30  141789.132 ± 220.706  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_365._Benchmark.benchmark_Cluster_365$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_365._Benchmark.benchmark_Cluster_365

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 102788.340 ops/s
# Warmup Iteration   2: 116426.125 ops/s
# Warmup Iteration   3: 113451.249 ops/s
# Warmup Iteration   4: 113402.087 ops/s
# Warmup Iteration   5: 135524.577 ops/s
# Warmup Iteration   6: 146095.812 ops/s
# Warmup Iteration   7: 146351.705 ops/s
# Warmup Iteration   8: 146321.128 ops/s
# Warmup Iteration   9: 146413.642 ops/s
# Warmup Iteration  10: 146523.468 ops/s
# Warmup Iteration  11: 145287.234 ops/s
# Warmup Iteration  12: 147025.895 ops/s
# Warmup Iteration  13: 146967.552 ops/s
# Warmup Iteration  14: 146917.434 ops/s
# Warmup Iteration  15: 146777.895 ops/s
# Warmup Iteration  16: 147062.211 ops/s
# Warmup Iteration  17: 154384.612 ops/s
# Warmup Iteration  18: 153318.210 ops/s
# Warmup Iteration  19: 154006.085 ops/s
# Warmup Iteration  20: 153785.398 ops/s
# Warmup Iteration  21: 153857.873 ops/s
# Warmup Iteration  22: 154045.644 ops/s
# Warmup Iteration  23: 154015.289 ops/s
# Warmup Iteration  24: 147461.244 ops/s
# Warmup Iteration  25: 118846.636 ops/s
# Warmup Iteration  26: 146922.197 ops/s
# Warmup Iteration  27: 153939.072 ops/s
# Warmup Iteration  28: 152826.937 ops/s
# Warmup Iteration  29: 153799.314 ops/s
# Warmup Iteration  30: 153671.644 ops/s
Iteration   1: 153635.628 ops/s
Iteration   2: 154021.863 ops/s
Iteration   3: 153868.308 ops/s
Iteration   4: 153940.418 ops/s
Iteration   5: 153626.023 ops/s
Iteration   6: 154053.169 ops/s
Iteration   7: 153842.501 ops/s
Iteration   8: 153163.808 ops/s
Iteration   9: 153439.934 ops/s
Iteration  10: 153525.408 ops/s
Iteration  11: 153713.902 ops/s
Iteration  12: 153668.208 ops/s
Iteration  13: 153278.096 ops/s
Iteration  14: 153537.180 ops/s
Iteration  15: 153324.293 ops/s
Iteration  16: 153898.487 ops/s
Iteration  17: 153515.384 ops/s
Iteration  18: 153785.527 ops/s
Iteration  19: 153728.835 ops/s
Iteration  20: 153830.563 ops/s
Iteration  21: 153411.235 ops/s
Iteration  22: 153230.621 ops/s
Iteration  23: 152248.314 ops/s
Iteration  24: 153240.302 ops/s
Iteration  25: 152354.972 ops/s
Iteration  26: 153002.489 ops/s
Iteration  27: 152768.127 ops/s
Iteration  28: 153193.628 ops/s
Iteration  29: 153195.791 ops/s
Iteration  30: 152851.625 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_365._Benchmark.benchmark_Cluster_365":
  153429.821 ±(99.9%) 303.959 ops/s [Average]
  (min, avg, max) = (152248.314, 153429.821, 154053.169), stdev = 454.952
  CI (99.9%): [153125.862, 153733.780] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_365._Benchmark.benchmark_Cluster_365  thrpt   30  153429.821 ± 303.959  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_366._Benchmark.benchmark_Cluster_366$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_366._Benchmark.benchmark_Cluster_366

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78243.409 ops/s
# Warmup Iteration   2: 93010.758 ops/s
# Warmup Iteration   3: 170189.454 ops/s
# Warmup Iteration   4: 179017.688 ops/s
# Warmup Iteration   5: 176915.032 ops/s
# Warmup Iteration   6: 178123.957 ops/s
# Warmup Iteration   7: 178260.368 ops/s
# Warmup Iteration   8: 179015.509 ops/s
# Warmup Iteration   9: 123950.810 ops/s
# Warmup Iteration  10: 179584.260 ops/s
# Warmup Iteration  11: 179561.129 ops/s
# Warmup Iteration  12: 179493.804 ops/s
# Warmup Iteration  13: 178446.359 ops/s
# Warmup Iteration  14: 179444.295 ops/s
# Warmup Iteration  15: 179405.990 ops/s
# Warmup Iteration  16: 179258.383 ops/s
# Warmup Iteration  17: 180525.511 ops/s
# Warmup Iteration  18: 180667.307 ops/s
# Warmup Iteration  19: 180535.271 ops/s
# Warmup Iteration  20: 180961.336 ops/s
# Warmup Iteration  21: 180737.267 ops/s
# Warmup Iteration  22: 180907.356 ops/s
# Warmup Iteration  23: 179760.224 ops/s
# Warmup Iteration  24: 180309.131 ops/s
# Warmup Iteration  25: 179815.416 ops/s
# Warmup Iteration  26: 180161.372 ops/s
# Warmup Iteration  27: 180648.847 ops/s
# Warmup Iteration  28: 180896.206 ops/s
# Warmup Iteration  29: 180512.455 ops/s
# Warmup Iteration  30: 179539.775 ops/s
Iteration   1: 180286.827 ops/s
Iteration   2: 178036.170 ops/s
Iteration   3: 180149.276 ops/s
Iteration   4: 178780.869 ops/s
Iteration   5: 180127.966 ops/s
Iteration   6: 180705.127 ops/s
Iteration   7: 180442.074 ops/s
Iteration   8: 180983.268 ops/s
Iteration   9: 181007.816 ops/s
Iteration  10: 180983.073 ops/s
Iteration  11: 181101.781 ops/s
Iteration  12: 180855.086 ops/s
Iteration  13: 181042.049 ops/s
Iteration  14: 180911.959 ops/s
Iteration  15: 180909.464 ops/s
Iteration  16: 180979.896 ops/s
Iteration  17: 181045.699 ops/s
Iteration  18: 180599.064 ops/s
Iteration  19: 181114.468 ops/s
Iteration  20: 181059.087 ops/s
Iteration  21: 180792.922 ops/s
Iteration  22: 180817.292 ops/s
Iteration  23: 180719.671 ops/s
Iteration  24: 180271.105 ops/s
Iteration  25: 180867.395 ops/s
Iteration  26: 180745.872 ops/s
Iteration  27: 180978.926 ops/s
Iteration  28: 180934.053 ops/s
Iteration  29: 181020.584 ops/s
Iteration  30: 181255.807 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_366._Benchmark.benchmark_Cluster_366":
  180650.821 ±(99.9%) 456.024 ops/s [Average]
  (min, avg, max) = (178036.170, 180650.821, 181255.807), stdev = 682.556
  CI (99.9%): [180194.797, 181106.846] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_366._Benchmark.benchmark_Cluster_366  thrpt   30  180650.821 ± 456.024  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_367._Benchmark.benchmark_Cluster_367$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_367._Benchmark.benchmark_Cluster_367

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54045.209 ops/s
# Warmup Iteration   2: 76148.460 ops/s
# Warmup Iteration   3: 110047.883 ops/s
# Warmup Iteration   4: 135435.255 ops/s
# Warmup Iteration   5: 133957.722 ops/s
# Warmup Iteration   6: 135768.293 ops/s
# Warmup Iteration   7: 135181.760 ops/s
# Warmup Iteration   8: 135338.519 ops/s
# Warmup Iteration   9: 135197.163 ops/s
# Warmup Iteration  10: 122433.823 ops/s
# Warmup Iteration  11: 105175.531 ops/s
# Warmup Iteration  12: 134726.313 ops/s
# Warmup Iteration  13: 134691.928 ops/s
# Warmup Iteration  14: 134745.255 ops/s
# Warmup Iteration  15: 134930.080 ops/s
# Warmup Iteration  16: 135061.509 ops/s
# Warmup Iteration  17: 135038.082 ops/s
# Warmup Iteration  18: 135194.411 ops/s
# Warmup Iteration  19: 135150.698 ops/s
# Warmup Iteration  20: 135296.151 ops/s
# Warmup Iteration  21: 135113.551 ops/s
# Warmup Iteration  22: 135124.456 ops/s
# Warmup Iteration  23: 135010.306 ops/s
# Warmup Iteration  24: 135044.658 ops/s
# Warmup Iteration  25: 135248.544 ops/s
# Warmup Iteration  26: 135059.257 ops/s
# Warmup Iteration  27: 135031.870 ops/s
# Warmup Iteration  28: 135027.316 ops/s
# Warmup Iteration  29: 135004.633 ops/s
# Warmup Iteration  30: 135137.730 ops/s
Iteration   1: 134012.631 ops/s
Iteration   2: 134982.074 ops/s
Iteration   3: 135028.912 ops/s
Iteration   4: 134678.309 ops/s
Iteration   5: 134679.271 ops/s
Iteration   6: 134196.873 ops/s
Iteration   7: 134841.246 ops/s
Iteration   8: 134696.358 ops/s
Iteration   9: 134812.684 ops/s
Iteration  10: 134908.227 ops/s
Iteration  11: 134334.147 ops/s
Iteration  12: 134891.851 ops/s
Iteration  13: 133767.105 ops/s
Iteration  14: 134766.236 ops/s
Iteration  15: 134820.563 ops/s
Iteration  16: 135327.529 ops/s
Iteration  17: 134850.025 ops/s
Iteration  18: 134686.508 ops/s
Iteration  19: 135105.564 ops/s
Iteration  20: 134496.511 ops/s
Iteration  21: 134052.885 ops/s
Iteration  22: 134717.494 ops/s
Iteration  23: 133559.103 ops/s
Iteration  24: 134780.714 ops/s
Iteration  25: 134255.744 ops/s
Iteration  26: 134764.769 ops/s
Iteration  27: 134316.233 ops/s
Iteration  28: 133809.414 ops/s
Iteration  29: 135013.826 ops/s
Iteration  30: 134722.749 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_367._Benchmark.benchmark_Cluster_367":
  134595.852 ±(99.9%) 286.033 ops/s [Average]
  (min, avg, max) = (133559.103, 134595.852, 135327.529), stdev = 428.120
  CI (99.9%): [134309.819, 134881.885] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_367._Benchmark.benchmark_Cluster_367  thrpt   30  134595.852 ± 286.033  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_368._Benchmark.benchmark_Cluster_368$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_368._Benchmark.benchmark_Cluster_368

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93663.788 ops/s
# Warmup Iteration   2: 102404.375 ops/s
# Warmup Iteration   3: 103164.871 ops/s
# Warmup Iteration   4: 152450.196 ops/s
# Warmup Iteration   5: 152364.610 ops/s
# Warmup Iteration   6: 152733.775 ops/s
# Warmup Iteration   7: 151064.000 ops/s
# Warmup Iteration   8: 152904.428 ops/s
# Warmup Iteration   9: 151923.298 ops/s
# Warmup Iteration  10: 151363.150 ops/s
# Warmup Iteration  11: 149948.006 ops/s
# Warmup Iteration  12: 150357.701 ops/s
# Warmup Iteration  13: 150760.291 ops/s
# Warmup Iteration  14: 152856.026 ops/s
# Warmup Iteration  15: 139354.019 ops/s
# Warmup Iteration  16: 118383.810 ops/s
# Warmup Iteration  17: 159258.823 ops/s
# Warmup Iteration  18: 159971.224 ops/s
# Warmup Iteration  19: 159610.065 ops/s
# Warmup Iteration  20: 159831.554 ops/s
# Warmup Iteration  21: 159294.108 ops/s
# Warmup Iteration  22: 159649.837 ops/s
# Warmup Iteration  23: 159977.451 ops/s
# Warmup Iteration  24: 159849.656 ops/s
# Warmup Iteration  25: 159441.712 ops/s
# Warmup Iteration  26: 159760.431 ops/s
# Warmup Iteration  27: 159413.951 ops/s
# Warmup Iteration  28: 159103.950 ops/s
# Warmup Iteration  29: 159589.949 ops/s
# Warmup Iteration  30: 159445.688 ops/s
Iteration   1: 159508.567 ops/s
Iteration   2: 159249.292 ops/s
Iteration   3: 159876.772 ops/s
Iteration   4: 158768.692 ops/s
Iteration   5: 158697.559 ops/s
Iteration   6: 159262.411 ops/s
Iteration   7: 158939.393 ops/s
Iteration   8: 159396.432 ops/s
Iteration   9: 159429.566 ops/s
Iteration  10: 159406.879 ops/s
Iteration  11: 159697.316 ops/s
Iteration  12: 158836.326 ops/s
Iteration  13: 158496.027 ops/s
Iteration  14: 158807.018 ops/s
Iteration  15: 159299.385 ops/s
Iteration  16: 160006.583 ops/s
Iteration  17: 159512.346 ops/s
Iteration  18: 159327.102 ops/s
Iteration  19: 159173.602 ops/s
Iteration  20: 158599.914 ops/s
Iteration  21: 159429.273 ops/s
Iteration  22: 159123.149 ops/s
Iteration  23: 159798.315 ops/s
Iteration  24: 159078.155 ops/s
Iteration  25: 159583.102 ops/s
Iteration  26: 159667.805 ops/s
Iteration  27: 158094.676 ops/s
Iteration  28: 159948.046 ops/s
Iteration  29: 160230.223 ops/s
Iteration  30: 159995.739 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_368._Benchmark.benchmark_Cluster_368":
  159307.989 ±(99.9%) 334.920 ops/s [Average]
  (min, avg, max) = (158094.676, 159307.989, 160230.223), stdev = 501.292
  CI (99.9%): [158973.069, 159642.909] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_368._Benchmark.benchmark_Cluster_368  thrpt   30  159307.989 ± 334.920  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_369._Benchmark.benchmark_Cluster_369$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_369._Benchmark.benchmark_Cluster_369

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69680.353 ops/s
# Warmup Iteration   2: 86680.804 ops/s
# Warmup Iteration   3: 122183.014 ops/s
# Warmup Iteration   4: 152759.063 ops/s
# Warmup Iteration   5: 152571.658 ops/s
# Warmup Iteration   6: 152091.106 ops/s
# Warmup Iteration   7: 151484.617 ops/s
# Warmup Iteration   8: 152208.777 ops/s
# Warmup Iteration   9: 152738.979 ops/s
# Warmup Iteration  10: 152344.021 ops/s
# Warmup Iteration  11: 106850.005 ops/s
# Warmup Iteration  12: 148837.281 ops/s
# Warmup Iteration  13: 152375.414 ops/s
# Warmup Iteration  14: 152480.616 ops/s
# Warmup Iteration  15: 152387.621 ops/s
# Warmup Iteration  16: 152254.038 ops/s
# Warmup Iteration  17: 153114.184 ops/s
# Warmup Iteration  18: 153821.268 ops/s
# Warmup Iteration  19: 153717.015 ops/s
# Warmup Iteration  20: 153915.691 ops/s
# Warmup Iteration  21: 154128.195 ops/s
# Warmup Iteration  22: 153815.128 ops/s
# Warmup Iteration  23: 154408.662 ops/s
# Warmup Iteration  24: 153757.537 ops/s
# Warmup Iteration  25: 153923.931 ops/s
# Warmup Iteration  26: 154118.034 ops/s
# Warmup Iteration  27: 153884.915 ops/s
# Warmup Iteration  28: 153920.854 ops/s
# Warmup Iteration  29: 153857.363 ops/s
# Warmup Iteration  30: 153814.225 ops/s
Iteration   1: 153363.542 ops/s
Iteration   2: 154204.547 ops/s
Iteration   3: 154049.488 ops/s
Iteration   4: 153563.372 ops/s
Iteration   5: 153189.295 ops/s
Iteration   6: 153842.195 ops/s
Iteration   7: 153756.030 ops/s
Iteration   8: 153459.618 ops/s
Iteration   9: 153634.474 ops/s
Iteration  10: 153955.545 ops/s
Iteration  11: 154093.832 ops/s
Iteration  12: 153946.712 ops/s
Iteration  13: 154092.512 ops/s
Iteration  14: 153920.812 ops/s
Iteration  15: 153817.786 ops/s
Iteration  16: 153680.483 ops/s
Iteration  17: 153675.158 ops/s
Iteration  18: 153202.458 ops/s
Iteration  19: 153228.672 ops/s
Iteration  20: 153568.291 ops/s
Iteration  21: 153846.270 ops/s
Iteration  22: 153896.288 ops/s
Iteration  23: 153071.473 ops/s
Iteration  24: 154007.691 ops/s
Iteration  25: 154051.693 ops/s
Iteration  26: 153773.248 ops/s
Iteration  27: 154092.273 ops/s
Iteration  28: 153774.272 ops/s
Iteration  29: 154144.670 ops/s
Iteration  30: 154138.652 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_369._Benchmark.benchmark_Cluster_369":
  153768.045 ±(99.9%) 212.373 ops/s [Average]
  (min, avg, max) = (153071.473, 153768.045, 154204.547), stdev = 317.869
  CI (99.9%): [153555.673, 153980.418] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_369._Benchmark.benchmark_Cluster_369  thrpt   30  153768.045 ± 212.373  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_37._Benchmark.benchmark_Cluster_37$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_37._Benchmark.benchmark_Cluster_37

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 142919.075 ops/s
# Warmup Iteration   2: 168737.714 ops/s
# Warmup Iteration   3: 169951.171 ops/s
# Warmup Iteration   4: 253710.918 ops/s
# Warmup Iteration   5: 255228.921 ops/s
# Warmup Iteration   6: 253601.034 ops/s
# Warmup Iteration   7: 252011.265 ops/s
# Warmup Iteration   8: 255625.371 ops/s
# Warmup Iteration   9: 255494.328 ops/s
# Warmup Iteration  10: 254846.025 ops/s
# Warmup Iteration  11: 254443.560 ops/s
# Warmup Iteration  12: 255365.034 ops/s
# Warmup Iteration  13: 254704.576 ops/s
# Warmup Iteration  14: 254675.412 ops/s
# Warmup Iteration  15: 213435.244 ops/s
# Warmup Iteration  16: 214134.430 ops/s
# Warmup Iteration  17: 264667.259 ops/s
# Warmup Iteration  18: 264052.047 ops/s
# Warmup Iteration  19: 264693.332 ops/s
# Warmup Iteration  20: 264528.102 ops/s
# Warmup Iteration  21: 264524.132 ops/s
# Warmup Iteration  22: 264289.533 ops/s
# Warmup Iteration  23: 263588.262 ops/s
# Warmup Iteration  24: 263931.473 ops/s
# Warmup Iteration  25: 264600.951 ops/s
# Warmup Iteration  26: 264535.713 ops/s
# Warmup Iteration  27: 264604.035 ops/s
# Warmup Iteration  28: 264372.819 ops/s
# Warmup Iteration  29: 264505.488 ops/s
# Warmup Iteration  30: 264192.771 ops/s
Iteration   1: 264317.354 ops/s
Iteration   2: 264856.005 ops/s
Iteration   3: 264032.092 ops/s
Iteration   4: 264530.898 ops/s
Iteration   5: 264654.452 ops/s
Iteration   6: 264224.324 ops/s
Iteration   7: 264481.353 ops/s
Iteration   8: 264283.640 ops/s
Iteration   9: 263985.225 ops/s
Iteration  10: 264191.468 ops/s
Iteration  11: 264031.579 ops/s
Iteration  12: 264934.691 ops/s
Iteration  13: 264879.708 ops/s
Iteration  14: 264304.088 ops/s
Iteration  15: 264086.290 ops/s
Iteration  16: 264038.781 ops/s
Iteration  17: 264868.721 ops/s
Iteration  18: 264676.362 ops/s
Iteration  19: 263868.159 ops/s
Iteration  20: 264569.923 ops/s
Iteration  21: 264056.772 ops/s
Iteration  22: 264424.514 ops/s
Iteration  23: 264528.788 ops/s
Iteration  24: 264975.069 ops/s
Iteration  25: 264841.849 ops/s
Iteration  26: 264492.323 ops/s
Iteration  27: 264352.680 ops/s
Iteration  28: 264578.302 ops/s
Iteration  29: 264823.153 ops/s
Iteration  30: 264486.366 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_37._Benchmark.benchmark_Cluster_37":
  264445.831 ±(99.9%) 215.716 ops/s [Average]
  (min, avg, max) = (263868.159, 264445.831, 264975.069), stdev = 322.874
  CI (99.9%): [264230.115, 264661.547] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_37._Benchmark.benchmark_Cluster_37  thrpt   30  264445.831 ± 215.716  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_370._Benchmark.benchmark_Cluster_370$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_370._Benchmark.benchmark_Cluster_370

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73173.255 ops/s
# Warmup Iteration   2: 89415.755 ops/s
# Warmup Iteration   3: 141605.626 ops/s
# Warmup Iteration   4: 164905.544 ops/s
# Warmup Iteration   5: 163254.167 ops/s
# Warmup Iteration   6: 164884.981 ops/s
# Warmup Iteration   7: 165056.762 ops/s
# Warmup Iteration   8: 164863.400 ops/s
# Warmup Iteration   9: 164565.414 ops/s
# Warmup Iteration  10: 112283.307 ops/s
# Warmup Iteration  11: 164967.170 ops/s
# Warmup Iteration  12: 164773.412 ops/s
# Warmup Iteration  13: 164747.124 ops/s
# Warmup Iteration  14: 164790.388 ops/s
# Warmup Iteration  15: 164479.756 ops/s
# Warmup Iteration  16: 164716.430 ops/s
# Warmup Iteration  17: 164794.544 ops/s
# Warmup Iteration  18: 164880.176 ops/s
# Warmup Iteration  19: 164755.448 ops/s
# Warmup Iteration  20: 164610.851 ops/s
# Warmup Iteration  21: 164665.794 ops/s
# Warmup Iteration  22: 164658.547 ops/s
# Warmup Iteration  23: 164736.924 ops/s
# Warmup Iteration  24: 164832.429 ops/s
# Warmup Iteration  25: 164766.185 ops/s
# Warmup Iteration  26: 164655.108 ops/s
# Warmup Iteration  27: 164917.703 ops/s
# Warmup Iteration  28: 164689.993 ops/s
# Warmup Iteration  29: 164796.732 ops/s
# Warmup Iteration  30: 164926.688 ops/s
Iteration   1: 164737.399 ops/s
Iteration   2: 165097.768 ops/s
Iteration   3: 165183.233 ops/s
Iteration   4: 164911.461 ops/s
Iteration   5: 164908.078 ops/s
Iteration   6: 165043.080 ops/s
Iteration   7: 164959.498 ops/s
Iteration   8: 164871.571 ops/s
Iteration   9: 164934.546 ops/s
Iteration  10: 164995.945 ops/s
Iteration  11: 164841.624 ops/s
Iteration  12: 164873.833 ops/s
Iteration  13: 164874.056 ops/s
Iteration  14: 164776.552 ops/s
Iteration  15: 164936.191 ops/s
Iteration  16: 165144.154 ops/s
Iteration  17: 164732.108 ops/s
Iteration  18: 165007.093 ops/s
Iteration  19: 165076.277 ops/s
Iteration  20: 164810.610 ops/s
Iteration  21: 165178.793 ops/s
Iteration  22: 165063.359 ops/s
Iteration  23: 164815.356 ops/s
Iteration  24: 165142.267 ops/s
Iteration  25: 164811.442 ops/s
Iteration  26: 164766.577 ops/s
Iteration  27: 165006.363 ops/s
Iteration  28: 165135.854 ops/s
Iteration  29: 164895.273 ops/s
Iteration  30: 164975.187 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_370._Benchmark.benchmark_Cluster_370":
  164950.185 ±(99.9%) 90.645 ops/s [Average]
  (min, avg, max) = (164732.108, 164950.185, 165183.233), stdev = 135.673
  CI (99.9%): [164859.540, 165040.830] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score    Error  Units
Cluster_370._Benchmark.benchmark_Cluster_370  thrpt   30  164950.185 ± 90.645  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_371._Benchmark.benchmark_Cluster_371$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_371._Benchmark.benchmark_Cluster_371

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75879.790 ops/s
# Warmup Iteration   2: 100867.430 ops/s
# Warmup Iteration   3: 139898.813 ops/s
# Warmup Iteration   4: 177593.945 ops/s
# Warmup Iteration   5: 177033.764 ops/s
# Warmup Iteration   6: 178168.379 ops/s
# Warmup Iteration   7: 177489.059 ops/s
# Warmup Iteration   8: 178684.002 ops/s
# Warmup Iteration   9: 178555.756 ops/s
# Warmup Iteration  10: 178798.390 ops/s
# Warmup Iteration  11: 120853.369 ops/s
# Warmup Iteration  12: 178332.531 ops/s
# Warmup Iteration  13: 178756.600 ops/s
# Warmup Iteration  14: 178954.450 ops/s
# Warmup Iteration  15: 178578.452 ops/s
# Warmup Iteration  16: 178763.301 ops/s
# Warmup Iteration  17: 178263.943 ops/s
# Warmup Iteration  18: 178128.051 ops/s
# Warmup Iteration  19: 178214.287 ops/s
# Warmup Iteration  20: 178220.252 ops/s
# Warmup Iteration  21: 178632.838 ops/s
# Warmup Iteration  22: 178219.875 ops/s
# Warmup Iteration  23: 178471.080 ops/s
# Warmup Iteration  24: 178073.371 ops/s
# Warmup Iteration  25: 178552.813 ops/s
# Warmup Iteration  26: 178661.154 ops/s
# Warmup Iteration  27: 177733.190 ops/s
# Warmup Iteration  28: 177933.416 ops/s
# Warmup Iteration  29: 178004.805 ops/s
# Warmup Iteration  30: 178203.961 ops/s
Iteration   1: 178653.801 ops/s
Iteration   2: 178539.977 ops/s
Iteration   3: 178495.248 ops/s
Iteration   4: 178086.833 ops/s
Iteration   5: 178385.101 ops/s
Iteration   6: 178335.395 ops/s
Iteration   7: 177829.454 ops/s
Iteration   8: 177821.361 ops/s
Iteration   9: 178015.037 ops/s
Iteration  10: 178311.051 ops/s
Iteration  11: 178310.636 ops/s
Iteration  12: 178248.042 ops/s
Iteration  13: 177909.586 ops/s
Iteration  14: 177941.021 ops/s
Iteration  15: 178190.343 ops/s
Iteration  16: 177777.970 ops/s
Iteration  17: 177810.665 ops/s
Iteration  18: 177800.971 ops/s
Iteration  19: 178198.719 ops/s
Iteration  20: 178162.117 ops/s
Iteration  21: 178015.993 ops/s
Iteration  22: 178181.241 ops/s
Iteration  23: 178426.685 ops/s
Iteration  24: 177991.761 ops/s
Iteration  25: 178093.817 ops/s
Iteration  26: 178042.706 ops/s
Iteration  27: 178603.326 ops/s
Iteration  28: 178173.898 ops/s
Iteration  29: 178611.570 ops/s
Iteration  30: 178486.429 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_371._Benchmark.benchmark_Cluster_371":
  178181.692 ±(99.9%) 176.654 ops/s [Average]
  (min, avg, max) = (177777.970, 178181.692, 178653.801), stdev = 264.407
  CI (99.9%): [178005.038, 178358.345] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_371._Benchmark.benchmark_Cluster_371  thrpt   30  178181.692 ± 176.654  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_372._Benchmark.benchmark_Cluster_372$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_372._Benchmark.benchmark_Cluster_372

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59089.315 ops/s
# Warmup Iteration   2: 82094.827 ops/s
# Warmup Iteration   3: 137033.145 ops/s
# Warmup Iteration   4: 157130.565 ops/s
# Warmup Iteration   5: 155501.141 ops/s
# Warmup Iteration   6: 156657.825 ops/s
# Warmup Iteration   7: 156663.038 ops/s
# Warmup Iteration   8: 156739.386 ops/s
# Warmup Iteration   9: 124157.990 ops/s
# Warmup Iteration  10: 141333.234 ops/s
# Warmup Iteration  11: 157687.337 ops/s
# Warmup Iteration  12: 158039.721 ops/s
# Warmup Iteration  13: 157624.045 ops/s
# Warmup Iteration  14: 157639.664 ops/s
# Warmup Iteration  15: 157475.803 ops/s
# Warmup Iteration  16: 157595.125 ops/s
# Warmup Iteration  17: 157577.498 ops/s
# Warmup Iteration  18: 157464.711 ops/s
# Warmup Iteration  19: 157911.653 ops/s
# Warmup Iteration  20: 157652.030 ops/s
# Warmup Iteration  21: 157711.525 ops/s
# Warmup Iteration  22: 157780.845 ops/s
# Warmup Iteration  23: 157933.233 ops/s
# Warmup Iteration  24: 157569.531 ops/s
# Warmup Iteration  25: 157714.588 ops/s
# Warmup Iteration  26: 157952.967 ops/s
# Warmup Iteration  27: 157681.219 ops/s
# Warmup Iteration  28: 157603.193 ops/s
# Warmup Iteration  29: 157490.160 ops/s
# Warmup Iteration  30: 158005.550 ops/s
Iteration   1: 157827.290 ops/s
Iteration   2: 158041.763 ops/s
Iteration   3: 157782.617 ops/s
Iteration   4: 157534.053 ops/s
Iteration   5: 157545.509 ops/s
Iteration   6: 157953.902 ops/s
Iteration   7: 157381.253 ops/s
Iteration   8: 157696.473 ops/s
Iteration   9: 157761.970 ops/s
Iteration  10: 157540.862 ops/s
Iteration  11: 157876.458 ops/s
Iteration  12: 157685.378 ops/s
Iteration  13: 157965.737 ops/s
Iteration  14: 157783.098 ops/s
Iteration  15: 157756.859 ops/s
Iteration  16: 157536.980 ops/s
Iteration  17: 157809.297 ops/s
Iteration  18: 157506.299 ops/s
Iteration  19: 157729.998 ops/s
Iteration  20: 157453.213 ops/s
Iteration  21: 157661.075 ops/s
Iteration  22: 157492.633 ops/s
Iteration  23: 157436.370 ops/s
Iteration  24: 157593.592 ops/s
Iteration  25: 157820.570 ops/s
Iteration  26: 157621.773 ops/s
Iteration  27: 157610.522 ops/s
Iteration  28: 157715.455 ops/s
Iteration  29: 157540.136 ops/s
Iteration  30: 157740.282 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_372._Benchmark.benchmark_Cluster_372":
  157680.047 ±(99.9%) 111.377 ops/s [Average]
  (min, avg, max) = (157381.253, 157680.047, 158041.763), stdev = 166.703
  CI (99.9%): [157568.671, 157791.424] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_372._Benchmark.benchmark_Cluster_372  thrpt   30  157680.047 ± 111.377  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_373._Benchmark.benchmark_Cluster_373$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_373._Benchmark.benchmark_Cluster_373

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59548.229 ops/s
# Warmup Iteration   2: 85831.625 ops/s
# Warmup Iteration   3: 141912.075 ops/s
# Warmup Iteration   4: 165187.142 ops/s
# Warmup Iteration   5: 163584.770 ops/s
# Warmup Iteration   6: 164967.737 ops/s
# Warmup Iteration   7: 164773.847 ops/s
# Warmup Iteration   8: 164897.996 ops/s
# Warmup Iteration   9: 131756.930 ops/s
# Warmup Iteration  10: 146521.569 ops/s
# Warmup Iteration  11: 165154.731 ops/s
# Warmup Iteration  12: 164937.205 ops/s
# Warmup Iteration  13: 164859.620 ops/s
# Warmup Iteration  14: 164745.097 ops/s
# Warmup Iteration  15: 164929.067 ops/s
# Warmup Iteration  16: 165194.138 ops/s
# Warmup Iteration  17: 164702.371 ops/s
# Warmup Iteration  18: 164621.808 ops/s
# Warmup Iteration  19: 164840.401 ops/s
# Warmup Iteration  20: 164728.905 ops/s
# Warmup Iteration  21: 164662.759 ops/s
# Warmup Iteration  22: 164400.475 ops/s
# Warmup Iteration  23: 164676.221 ops/s
# Warmup Iteration  24: 164603.247 ops/s
# Warmup Iteration  25: 164540.271 ops/s
# Warmup Iteration  26: 164676.032 ops/s
# Warmup Iteration  27: 164820.239 ops/s
# Warmup Iteration  28: 164540.193 ops/s
# Warmup Iteration  29: 164894.690 ops/s
# Warmup Iteration  30: 164697.173 ops/s
Iteration   1: 164707.696 ops/s
Iteration   2: 164735.595 ops/s
Iteration   3: 164607.603 ops/s
Iteration   4: 164306.428 ops/s
Iteration   5: 164375.804 ops/s
Iteration   6: 164641.688 ops/s
Iteration   7: 164681.976 ops/s
Iteration   8: 164902.328 ops/s
Iteration   9: 164921.544 ops/s
Iteration  10: 164373.230 ops/s
Iteration  11: 164447.053 ops/s
Iteration  12: 164552.619 ops/s
Iteration  13: 164548.439 ops/s
Iteration  14: 164640.527 ops/s
Iteration  15: 164655.995 ops/s
Iteration  16: 164529.085 ops/s
Iteration  17: 164787.300 ops/s
Iteration  18: 164360.765 ops/s
Iteration  19: 164402.502 ops/s
Iteration  20: 164514.298 ops/s
Iteration  21: 164470.425 ops/s
Iteration  22: 164566.225 ops/s
Iteration  23: 164763.688 ops/s
Iteration  24: 164727.660 ops/s
Iteration  25: 164805.565 ops/s
Iteration  26: 164797.226 ops/s
Iteration  27: 164882.335 ops/s
Iteration  28: 165079.140 ops/s
Iteration  29: 164929.523 ops/s
Iteration  30: 164576.677 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_373._Benchmark.benchmark_Cluster_373":
  164643.031 ±(99.9%) 130.297 ops/s [Average]
  (min, avg, max) = (164306.428, 164643.031, 165079.140), stdev = 195.022
  CI (99.9%): [164512.734, 164773.328] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_373._Benchmark.benchmark_Cluster_373  thrpt   30  164643.031 ± 130.297  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_374._Benchmark.benchmark_Cluster_374$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_374._Benchmark.benchmark_Cluster_374

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58082.478 ops/s
# Warmup Iteration   2: 89150.384 ops/s
# Warmup Iteration   3: 198613.340 ops/s
# Warmup Iteration   4: 196634.879 ops/s
# Warmup Iteration   5: 200875.727 ops/s
# Warmup Iteration   6: 201413.144 ops/s
# Warmup Iteration   7: 156232.384 ops/s
# Warmup Iteration   8: 182840.302 ops/s
# Warmup Iteration   9: 202176.994 ops/s
# Warmup Iteration  10: 201433.511 ops/s
# Warmup Iteration  11: 201741.364 ops/s
# Warmup Iteration  12: 201775.493 ops/s
# Warmup Iteration  13: 201472.943 ops/s
# Warmup Iteration  14: 201510.212 ops/s
# Warmup Iteration  15: 201125.901 ops/s
# Warmup Iteration  16: 201438.622 ops/s
# Warmup Iteration  17: 200992.506 ops/s
# Warmup Iteration  18: 201915.958 ops/s
# Warmup Iteration  19: 201664.875 ops/s
# Warmup Iteration  20: 201374.350 ops/s
# Warmup Iteration  21: 200985.975 ops/s
# Warmup Iteration  22: 201695.170 ops/s
# Warmup Iteration  23: 200947.945 ops/s
# Warmup Iteration  24: 201633.737 ops/s
# Warmup Iteration  25: 201566.514 ops/s
# Warmup Iteration  26: 201292.938 ops/s
# Warmup Iteration  27: 201187.527 ops/s
# Warmup Iteration  28: 201358.018 ops/s
# Warmup Iteration  29: 201608.477 ops/s
# Warmup Iteration  30: 201482.808 ops/s
Iteration   1: 201431.470 ops/s
Iteration   2: 201596.865 ops/s
Iteration   3: 201502.625 ops/s
Iteration   4: 201378.207 ops/s
Iteration   5: 201356.219 ops/s
Iteration   6: 201056.816 ops/s
Iteration   7: 201281.350 ops/s
Iteration   8: 200658.074 ops/s
Iteration   9: 201434.206 ops/s
Iteration  10: 201060.772 ops/s
Iteration  11: 201161.800 ops/s
Iteration  12: 200902.886 ops/s
Iteration  13: 201968.174 ops/s
Iteration  14: 201328.015 ops/s
Iteration  15: 201039.545 ops/s
Iteration  16: 200929.097 ops/s
Iteration  17: 201464.715 ops/s
Iteration  18: 201085.399 ops/s
Iteration  19: 201731.419 ops/s
Iteration  20: 200469.523 ops/s
Iteration  21: 201357.860 ops/s
Iteration  22: 200177.066 ops/s
Iteration  23: 200402.301 ops/s
Iteration  24: 200854.571 ops/s
Iteration  25: 200839.147 ops/s
Iteration  26: 200533.959 ops/s
Iteration  27: 200977.675 ops/s
Iteration  28: 200783.095 ops/s
Iteration  29: 201587.790 ops/s
Iteration  30: 200879.517 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_374._Benchmark.benchmark_Cluster_374":
  201107.672 ±(99.9%) 279.349 ops/s [Average]
  (min, avg, max) = (200177.066, 201107.672, 201968.174), stdev = 418.116
  CI (99.9%): [200828.323, 201387.021] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_374._Benchmark.benchmark_Cluster_374  thrpt   30  201107.672 ± 279.349  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_375._Benchmark.benchmark_Cluster_375$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_375._Benchmark.benchmark_Cluster_375

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86149.629 ops/s
# Warmup Iteration   2: 91964.693 ops/s
# Warmup Iteration   3: 116772.344 ops/s
# Warmup Iteration   4: 149585.870 ops/s
# Warmup Iteration   5: 149783.938 ops/s
# Warmup Iteration   6: 149150.232 ops/s
# Warmup Iteration   7: 149291.398 ops/s
# Warmup Iteration   8: 149600.720 ops/s
# Warmup Iteration   9: 149610.597 ops/s
# Warmup Iteration  10: 148740.242 ops/s
# Warmup Iteration  11: 149055.537 ops/s
# Warmup Iteration  12: 134441.374 ops/s
# Warmup Iteration  13: 117190.369 ops/s
# Warmup Iteration  14: 149506.166 ops/s
# Warmup Iteration  15: 148810.629 ops/s
# Warmup Iteration  16: 148640.406 ops/s
# Warmup Iteration  17: 156846.309 ops/s
# Warmup Iteration  18: 156776.078 ops/s
# Warmup Iteration  19: 156236.952 ops/s
# Warmup Iteration  20: 156353.766 ops/s
# Warmup Iteration  21: 155688.578 ops/s
# Warmup Iteration  22: 156785.337 ops/s
# Warmup Iteration  23: 156781.331 ops/s
# Warmup Iteration  24: 157631.329 ops/s
# Warmup Iteration  25: 157162.870 ops/s
# Warmup Iteration  26: 156819.897 ops/s
# Warmup Iteration  27: 156238.478 ops/s
# Warmup Iteration  28: 156391.380 ops/s
# Warmup Iteration  29: 156687.907 ops/s
# Warmup Iteration  30: 156980.339 ops/s
Iteration   1: 157064.702 ops/s
Iteration   2: 156711.509 ops/s
Iteration   3: 156960.701 ops/s
Iteration   4: 156873.573 ops/s
Iteration   5: 157268.518 ops/s
Iteration   6: 157508.662 ops/s
Iteration   7: 156853.288 ops/s
Iteration   8: 156937.104 ops/s
Iteration   9: 156892.075 ops/s
Iteration  10: 157623.907 ops/s
Iteration  11: 157463.022 ops/s
Iteration  12: 157181.087 ops/s
Iteration  13: 156931.046 ops/s
Iteration  14: 157421.613 ops/s
Iteration  15: 156370.734 ops/s
Iteration  16: 156147.624 ops/s
Iteration  17: 157368.892 ops/s
Iteration  18: 157621.572 ops/s
Iteration  19: 157037.412 ops/s
Iteration  20: 156947.709 ops/s
Iteration  21: 156605.052 ops/s
Iteration  22: 155953.076 ops/s
Iteration  23: 157207.202 ops/s
Iteration  24: 157659.091 ops/s
Iteration  25: 157286.716 ops/s
Iteration  26: 156605.876 ops/s
Iteration  27: 157499.502 ops/s
Iteration  28: 156622.632 ops/s
Iteration  29: 157085.037 ops/s
Iteration  30: 156048.386 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_375._Benchmark.benchmark_Cluster_375":
  156991.911 ±(99.9%) 309.185 ops/s [Average]
  (min, avg, max) = (155953.076, 156991.911, 157659.091), stdev = 462.773
  CI (99.9%): [156682.726, 157301.095] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_375._Benchmark.benchmark_Cluster_375  thrpt   30  156991.911 ± 309.185  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_376._Benchmark.benchmark_Cluster_376$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_376._Benchmark.benchmark_Cluster_376

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51122.874 ops/s
# Warmup Iteration   2: 79425.882 ops/s
# Warmup Iteration   3: 90166.075 ops/s
# Warmup Iteration   4: 131798.049 ops/s
# Warmup Iteration   5: 131180.525 ops/s
# Warmup Iteration   6: 130327.057 ops/s
# Warmup Iteration   7: 131564.349 ops/s
# Warmup Iteration   8: 131577.417 ops/s
# Warmup Iteration   9: 131766.215 ops/s
# Warmup Iteration  10: 131383.891 ops/s
# Warmup Iteration  11: 131586.587 ops/s
# Warmup Iteration  12: 113150.190 ops/s
# Warmup Iteration  13: 107887.438 ops/s
# Warmup Iteration  14: 131925.508 ops/s
# Warmup Iteration  15: 131825.538 ops/s
# Warmup Iteration  16: 131596.494 ops/s
# Warmup Iteration  17: 134113.227 ops/s
# Warmup Iteration  18: 134487.360 ops/s
# Warmup Iteration  19: 133899.498 ops/s
# Warmup Iteration  20: 134475.475 ops/s
# Warmup Iteration  21: 134207.464 ops/s
# Warmup Iteration  22: 133669.515 ops/s
# Warmup Iteration  23: 133908.477 ops/s
# Warmup Iteration  24: 134391.845 ops/s
# Warmup Iteration  25: 134045.664 ops/s
# Warmup Iteration  26: 134417.638 ops/s
# Warmup Iteration  27: 134522.605 ops/s
# Warmup Iteration  28: 134434.052 ops/s
# Warmup Iteration  29: 134338.066 ops/s
# Warmup Iteration  30: 134282.122 ops/s
Iteration   1: 133590.667 ops/s
Iteration   2: 134457.221 ops/s
Iteration   3: 134261.374 ops/s
Iteration   4: 134391.343 ops/s
Iteration   5: 133952.516 ops/s
Iteration   6: 134057.596 ops/s
Iteration   7: 133957.929 ops/s
Iteration   8: 134271.287 ops/s
Iteration   9: 134348.486 ops/s
Iteration  10: 134469.024 ops/s
Iteration  11: 134735.541 ops/s
Iteration  12: 134293.154 ops/s
Iteration  13: 134035.353 ops/s
Iteration  14: 133651.988 ops/s
Iteration  15: 133892.045 ops/s
Iteration  16: 133392.595 ops/s
Iteration  17: 134562.218 ops/s
Iteration  18: 134432.088 ops/s
Iteration  19: 134341.964 ops/s
Iteration  20: 133545.527 ops/s
Iteration  21: 134426.934 ops/s
Iteration  22: 134313.366 ops/s
Iteration  23: 134082.609 ops/s
Iteration  24: 133858.113 ops/s
Iteration  25: 134124.529 ops/s
Iteration  26: 133455.819 ops/s
Iteration  27: 133676.646 ops/s
Iteration  28: 133813.694 ops/s
Iteration  29: 134395.215 ops/s
Iteration  30: 134250.482 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_376._Benchmark.benchmark_Cluster_376":
  134101.244 ±(99.9%) 236.909 ops/s [Average]
  (min, avg, max) = (133392.595, 134101.244, 134735.541), stdev = 354.595
  CI (99.9%): [133864.335, 134338.153] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_376._Benchmark.benchmark_Cluster_376  thrpt   30  134101.244 ± 236.909  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_377._Benchmark.benchmark_Cluster_377$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_377._Benchmark.benchmark_Cluster_377

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42273.412 ops/s
# Warmup Iteration   2: 79233.077 ops/s
# Warmup Iteration   3: 153403.992 ops/s
# Warmup Iteration   4: 170926.904 ops/s
# Warmup Iteration   5: 171134.402 ops/s
# Warmup Iteration   6: 172090.727 ops/s
# Warmup Iteration   7: 171998.267 ops/s
# Warmup Iteration   8: 118106.714 ops/s
# Warmup Iteration   9: 172665.625 ops/s
# Warmup Iteration  10: 172623.489 ops/s
# Warmup Iteration  11: 172021.438 ops/s
# Warmup Iteration  12: 171971.364 ops/s
# Warmup Iteration  13: 173634.669 ops/s
# Warmup Iteration  14: 173529.292 ops/s
# Warmup Iteration  15: 171699.533 ops/s
# Warmup Iteration  16: 173535.573 ops/s
# Warmup Iteration  17: 172885.576 ops/s
# Warmup Iteration  18: 173569.646 ops/s
# Warmup Iteration  19: 173596.299 ops/s
# Warmup Iteration  20: 172049.228 ops/s
# Warmup Iteration  21: 173287.143 ops/s
# Warmup Iteration  22: 172580.188 ops/s
# Warmup Iteration  23: 172077.674 ops/s
# Warmup Iteration  24: 173912.988 ops/s
# Warmup Iteration  25: 172090.892 ops/s
# Warmup Iteration  26: 173354.066 ops/s
# Warmup Iteration  27: 173205.780 ops/s
# Warmup Iteration  28: 173479.204 ops/s
# Warmup Iteration  29: 172564.061 ops/s
# Warmup Iteration  30: 173187.499 ops/s
Iteration   1: 173335.935 ops/s
Iteration   2: 174013.523 ops/s
Iteration   3: 173056.686 ops/s
Iteration   4: 173286.400 ops/s
Iteration   5: 173652.403 ops/s
Iteration   6: 173460.972 ops/s
Iteration   7: 174213.983 ops/s
Iteration   8: 171511.015 ops/s
Iteration   9: 172239.503 ops/s
Iteration  10: 172837.711 ops/s
Iteration  11: 173406.187 ops/s
Iteration  12: 172909.439 ops/s
Iteration  13: 173676.467 ops/s
Iteration  14: 173154.131 ops/s
Iteration  15: 173625.718 ops/s
Iteration  16: 172196.562 ops/s
Iteration  17: 172287.532 ops/s
Iteration  18: 172926.907 ops/s
Iteration  19: 172582.616 ops/s
Iteration  20: 172349.024 ops/s
Iteration  21: 172264.802 ops/s
Iteration  22: 172644.124 ops/s
Iteration  23: 171656.792 ops/s
Iteration  24: 171039.250 ops/s
Iteration  25: 171569.718 ops/s
Iteration  26: 172239.514 ops/s
Iteration  27: 171852.958 ops/s
Iteration  28: 171539.069 ops/s
Iteration  29: 172762.808 ops/s
Iteration  30: 172676.693 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_377._Benchmark.benchmark_Cluster_377":
  172698.948 ±(99.9%) 537.839 ops/s [Average]
  (min, avg, max) = (171039.250, 172698.948, 174213.983), stdev = 805.012
  CI (99.9%): [172161.109, 173236.787] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_377._Benchmark.benchmark_Cluster_377  thrpt   30  172698.948 ± 537.839  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_378._Benchmark.benchmark_Cluster_378$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_378._Benchmark.benchmark_Cluster_378

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68912.544 ops/s
# Warmup Iteration   2: 86233.072 ops/s
# Warmup Iteration   3: 90870.264 ops/s
# Warmup Iteration   4: 139071.124 ops/s
# Warmup Iteration   5: 139357.139 ops/s
# Warmup Iteration   6: 139149.445 ops/s
# Warmup Iteration   7: 137455.209 ops/s
# Warmup Iteration   8: 139790.487 ops/s
# Warmup Iteration   9: 139271.246 ops/s
# Warmup Iteration  10: 139466.711 ops/s
# Warmup Iteration  11: 139435.687 ops/s
# Warmup Iteration  12: 138159.278 ops/s
# Warmup Iteration  13: 138498.362 ops/s
# Warmup Iteration  14: 93713.287 ops/s
# Warmup Iteration  15: 136599.668 ops/s
# Warmup Iteration  16: 139246.597 ops/s
# Warmup Iteration  17: 144706.551 ops/s
# Warmup Iteration  18: 145484.599 ops/s
# Warmup Iteration  19: 145002.986 ops/s
# Warmup Iteration  20: 145546.159 ops/s
# Warmup Iteration  21: 145172.487 ops/s
# Warmup Iteration  22: 144976.903 ops/s
# Warmup Iteration  23: 144813.755 ops/s
# Warmup Iteration  24: 145139.385 ops/s
# Warmup Iteration  25: 144577.972 ops/s
# Warmup Iteration  26: 144366.823 ops/s
# Warmup Iteration  27: 144958.742 ops/s
# Warmup Iteration  28: 145190.355 ops/s
# Warmup Iteration  29: 145570.741 ops/s
# Warmup Iteration  30: 144846.692 ops/s
Iteration   1: 144819.286 ops/s
Iteration   2: 145132.110 ops/s
Iteration   3: 143942.998 ops/s
Iteration   4: 144956.313 ops/s
Iteration   5: 144792.701 ops/s
Iteration   6: 144891.520 ops/s
Iteration   7: 145330.369 ops/s
Iteration   8: 145324.623 ops/s
Iteration   9: 144955.853 ops/s
Iteration  10: 144843.176 ops/s
Iteration  11: 144008.601 ops/s
Iteration  12: 145665.937 ops/s
Iteration  13: 145367.535 ops/s
Iteration  14: 145628.042 ops/s
Iteration  15: 144449.525 ops/s
Iteration  16: 144849.347 ops/s
Iteration  17: 144987.391 ops/s
Iteration  18: 144396.319 ops/s
Iteration  19: 144797.461 ops/s
Iteration  20: 144992.344 ops/s
Iteration  21: 145121.721 ops/s
Iteration  22: 145094.007 ops/s
Iteration  23: 144949.783 ops/s
Iteration  24: 144690.956 ops/s
Iteration  25: 145338.746 ops/s
Iteration  26: 145106.033 ops/s
Iteration  27: 145413.632 ops/s
Iteration  28: 145608.243 ops/s
Iteration  29: 145476.276 ops/s
Iteration  30: 145241.830 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_378._Benchmark.benchmark_Cluster_378":
  145005.756 ±(99.9%) 283.602 ops/s [Average]
  (min, avg, max) = (143942.998, 145005.756, 145665.937), stdev = 424.483
  CI (99.9%): [144722.153, 145289.358] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_378._Benchmark.benchmark_Cluster_378  thrpt   30  145005.756 ± 283.602  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_379._Benchmark.benchmark_Cluster_379$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_379._Benchmark.benchmark_Cluster_379

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42383.421 ops/s
# Warmup Iteration   2: 60416.810 ops/s
# Warmup Iteration   3: 71563.082 ops/s
# Warmup Iteration   4: 106181.830 ops/s
# Warmup Iteration   5: 104543.346 ops/s
# Warmup Iteration   6: 103211.081 ops/s
# Warmup Iteration   7: 103952.603 ops/s
# Warmup Iteration   8: 105031.995 ops/s
# Warmup Iteration   9: 104859.570 ops/s
# Warmup Iteration  10: 104702.060 ops/s
# Warmup Iteration  11: 104888.951 ops/s
# Warmup Iteration  12: 76698.703 ops/s
# Warmup Iteration  13: 96451.695 ops/s
# Warmup Iteration  14: 104977.882 ops/s
# Warmup Iteration  15: 104900.248 ops/s
# Warmup Iteration  16: 104925.017 ops/s
# Warmup Iteration  17: 106061.858 ops/s
# Warmup Iteration  18: 107111.930 ops/s
# Warmup Iteration  19: 105953.869 ops/s
# Warmup Iteration  20: 106042.209 ops/s
# Warmup Iteration  21: 107348.489 ops/s
# Warmup Iteration  22: 105695.219 ops/s
# Warmup Iteration  23: 105590.623 ops/s
# Warmup Iteration  24: 106426.719 ops/s
# Warmup Iteration  25: 106076.663 ops/s
# Warmup Iteration  26: 106615.326 ops/s
# Warmup Iteration  27: 105764.392 ops/s
# Warmup Iteration  28: 106594.298 ops/s
# Warmup Iteration  29: 106597.049 ops/s
# Warmup Iteration  30: 106338.045 ops/s
Iteration   1: 106212.562 ops/s
Iteration   2: 108189.971 ops/s
Iteration   3: 106322.439 ops/s
Iteration   4: 106700.559 ops/s
Iteration   5: 106700.905 ops/s
Iteration   6: 106477.263 ops/s
Iteration   7: 106146.867 ops/s
Iteration   8: 104000.535 ops/s
Iteration   9: 104244.069 ops/s
Iteration  10: 104507.561 ops/s
Iteration  11: 104971.666 ops/s
Iteration  12: 107609.189 ops/s
Iteration  13: 107245.955 ops/s
Iteration  14: 104827.472 ops/s
Iteration  15: 106117.716 ops/s
Iteration  16: 105867.897 ops/s
Iteration  17: 105219.585 ops/s
Iteration  18: 105760.001 ops/s
Iteration  19: 107704.231 ops/s
Iteration  20: 105163.842 ops/s
Iteration  21: 104963.358 ops/s
Iteration  22: 104845.954 ops/s
Iteration  23: 107861.768 ops/s
Iteration  24: 106915.174 ops/s
Iteration  25: 107243.468 ops/s
Iteration  26: 106288.093 ops/s
Iteration  27: 104755.210 ops/s
Iteration  28: 105002.607 ops/s
Iteration  29: 107358.546 ops/s
Iteration  30: 105042.090 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_379._Benchmark.benchmark_Cluster_379":
  106008.885 ±(99.9%) 784.711 ops/s [Average]
  (min, avg, max) = (104000.535, 106008.885, 108189.971), stdev = 1174.518
  CI (99.9%): [105224.174, 106793.596] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_379._Benchmark.benchmark_Cluster_379  thrpt   30  106008.885 ± 784.711  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_38._Benchmark.benchmark_Cluster_38$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_38._Benchmark.benchmark_Cluster_38

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53263.522 ops/s
# Warmup Iteration   2: 74371.780 ops/s
# Warmup Iteration   3: 130209.218 ops/s
# Warmup Iteration   4: 151148.027 ops/s
# Warmup Iteration   5: 149088.212 ops/s
# Warmup Iteration   6: 150668.825 ops/s
# Warmup Iteration   7: 150874.351 ops/s
# Warmup Iteration   8: 151319.598 ops/s
# Warmup Iteration   9: 101613.414 ops/s
# Warmup Iteration  10: 150715.278 ops/s
# Warmup Iteration  11: 150930.889 ops/s
# Warmup Iteration  12: 150319.724 ops/s
# Warmup Iteration  13: 150791.624 ops/s
# Warmup Iteration  14: 151113.143 ops/s
# Warmup Iteration  15: 150507.440 ops/s
# Warmup Iteration  16: 150601.844 ops/s
# Warmup Iteration  17: 150271.518 ops/s
# Warmup Iteration  18: 150036.195 ops/s
# Warmup Iteration  19: 149793.322 ops/s
# Warmup Iteration  20: 150067.449 ops/s
# Warmup Iteration  21: 150193.013 ops/s
# Warmup Iteration  22: 149745.449 ops/s
# Warmup Iteration  23: 150173.987 ops/s
# Warmup Iteration  24: 150580.193 ops/s
# Warmup Iteration  25: 150257.900 ops/s
# Warmup Iteration  26: 150220.726 ops/s
# Warmup Iteration  27: 149700.612 ops/s
# Warmup Iteration  28: 150060.620 ops/s
# Warmup Iteration  29: 149588.599 ops/s
# Warmup Iteration  30: 149892.262 ops/s
Iteration   1: 149722.154 ops/s
Iteration   2: 150295.950 ops/s
Iteration   3: 149722.170 ops/s
Iteration   4: 150128.303 ops/s
Iteration   5: 150067.953 ops/s
Iteration   6: 150499.903 ops/s
Iteration   7: 150334.537 ops/s
Iteration   8: 150628.632 ops/s
Iteration   9: 150579.268 ops/s
Iteration  10: 150541.255 ops/s
Iteration  11: 150564.151 ops/s
Iteration  12: 149898.951 ops/s
Iteration  13: 150549.920 ops/s
Iteration  14: 150756.642 ops/s
Iteration  15: 150490.910 ops/s
Iteration  16: 150876.352 ops/s
Iteration  17: 150168.614 ops/s
Iteration  18: 150311.998 ops/s
Iteration  19: 150683.715 ops/s
Iteration  20: 150239.158 ops/s
Iteration  21: 151068.684 ops/s
Iteration  22: 151045.111 ops/s
Iteration  23: 150418.194 ops/s
Iteration  24: 150265.827 ops/s
Iteration  25: 150053.874 ops/s
Iteration  26: 150490.700 ops/s
Iteration  27: 150634.357 ops/s
Iteration  28: 150324.232 ops/s
Iteration  29: 150336.044 ops/s
Iteration  30: 150466.043 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_38._Benchmark.benchmark_Cluster_38":
  150405.453 ±(99.9%) 219.874 ops/s [Average]
  (min, avg, max) = (149722.154, 150405.453, 151068.684), stdev = 329.097
  CI (99.9%): [150185.579, 150625.327] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_38._Benchmark.benchmark_Cluster_38  thrpt   30  150405.453 ± 219.874  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_380._Benchmark.benchmark_Cluster_380$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_380._Benchmark.benchmark_Cluster_380

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 43293.020 ops/s
# Warmup Iteration   2: 73754.034 ops/s
# Warmup Iteration   3: 74327.609 ops/s
# Warmup Iteration   4: 86108.424 ops/s
# Warmup Iteration   5: 111209.631 ops/s
# Warmup Iteration   6: 110694.354 ops/s
# Warmup Iteration   7: 110240.517 ops/s
# Warmup Iteration   8: 110259.067 ops/s
# Warmup Iteration   9: 109880.349 ops/s
# Warmup Iteration  10: 110102.703 ops/s
# Warmup Iteration  11: 110118.746 ops/s
# Warmup Iteration  12: 111072.691 ops/s
# Warmup Iteration  13: 111089.663 ops/s
# Warmup Iteration  14: 110640.967 ops/s
# Warmup Iteration  15: 110323.358 ops/s
# Warmup Iteration  16: 110143.155 ops/s
# Warmup Iteration  17: 111825.500 ops/s
# Warmup Iteration  18: 75800.622 ops/s
# Warmup Iteration  19: 111538.276 ops/s
# Warmup Iteration  20: 112922.181 ops/s
# Warmup Iteration  21: 113246.034 ops/s
# Warmup Iteration  22: 113630.222 ops/s
# Warmup Iteration  23: 112425.001 ops/s
# Warmup Iteration  24: 112271.827 ops/s
# Warmup Iteration  25: 113411.379 ops/s
# Warmup Iteration  26: 112841.222 ops/s
# Warmup Iteration  27: 112493.670 ops/s
# Warmup Iteration  28: 113650.232 ops/s
# Warmup Iteration  29: 113528.749 ops/s
# Warmup Iteration  30: 112094.733 ops/s
Iteration   1: 113062.269 ops/s
Iteration   2: 112746.787 ops/s
Iteration   3: 113503.357 ops/s
Iteration   4: 113036.952 ops/s
Iteration   5: 113578.046 ops/s
Iteration   6: 113728.021 ops/s
Iteration   7: 113961.126 ops/s
Iteration   8: 112848.087 ops/s
Iteration   9: 113019.176 ops/s
Iteration  10: 113013.826 ops/s
Iteration  11: 112502.795 ops/s
Iteration  12: 111793.651 ops/s
Iteration  13: 113097.344 ops/s
Iteration  14: 112463.785 ops/s
Iteration  15: 113673.491 ops/s
Iteration  16: 113285.974 ops/s
Iteration  17: 112129.689 ops/s
Iteration  18: 113461.929 ops/s
Iteration  19: 113563.068 ops/s
Iteration  20: 112736.411 ops/s
Iteration  21: 113108.751 ops/s
Iteration  22: 113553.119 ops/s
Iteration  23: 112094.325 ops/s
Iteration  24: 112528.960 ops/s
Iteration  25: 112840.601 ops/s
Iteration  26: 112875.350 ops/s
Iteration  27: 113408.976 ops/s
Iteration  28: 113535.325 ops/s
Iteration  29: 112184.439 ops/s
Iteration  30: 112708.917 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_380._Benchmark.benchmark_Cluster_380":
  113001.485 ±(99.9%) 364.486 ops/s [Average]
  (min, avg, max) = (111793.651, 113001.485, 113961.126), stdev = 545.545
  CI (99.9%): [112636.999, 113365.971] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_380._Benchmark.benchmark_Cluster_380  thrpt   30  113001.485 ± 364.486  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_381._Benchmark.benchmark_Cluster_381$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_381._Benchmark.benchmark_Cluster_381

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79571.687 ops/s
# Warmup Iteration   2: 103677.461 ops/s
# Warmup Iteration   3: 191335.791 ops/s
# Warmup Iteration   4: 204271.497 ops/s
# Warmup Iteration   5: 203532.469 ops/s
# Warmup Iteration   6: 203159.130 ops/s
# Warmup Iteration   7: 203811.771 ops/s
# Warmup Iteration   8: 196759.328 ops/s
# Warmup Iteration   9: 149215.828 ops/s
# Warmup Iteration  10: 203264.364 ops/s
# Warmup Iteration  11: 203214.495 ops/s
# Warmup Iteration  12: 202953.587 ops/s
# Warmup Iteration  13: 203272.472 ops/s
# Warmup Iteration  14: 203329.826 ops/s
# Warmup Iteration  15: 203584.281 ops/s
# Warmup Iteration  16: 203237.274 ops/s
# Warmup Iteration  17: 203585.830 ops/s
# Warmup Iteration  18: 203583.690 ops/s
# Warmup Iteration  19: 204187.005 ops/s
# Warmup Iteration  20: 203762.197 ops/s
# Warmup Iteration  21: 203351.128 ops/s
# Warmup Iteration  22: 203964.332 ops/s
# Warmup Iteration  23: 204120.149 ops/s
# Warmup Iteration  24: 204003.543 ops/s
# Warmup Iteration  25: 203013.208 ops/s
# Warmup Iteration  26: 203038.652 ops/s
# Warmup Iteration  27: 203995.655 ops/s
# Warmup Iteration  28: 204118.220 ops/s
# Warmup Iteration  29: 204227.677 ops/s
# Warmup Iteration  30: 203476.602 ops/s
Iteration   1: 203434.143 ops/s
Iteration   2: 203348.582 ops/s
Iteration   3: 204057.089 ops/s
Iteration   4: 204071.255 ops/s
Iteration   5: 203557.790 ops/s
Iteration   6: 204582.233 ops/s
Iteration   7: 204130.906 ops/s
Iteration   8: 204146.881 ops/s
Iteration   9: 204255.890 ops/s
Iteration  10: 203855.553 ops/s
Iteration  11: 204731.272 ops/s
Iteration  12: 204751.873 ops/s
Iteration  13: 204437.990 ops/s
Iteration  14: 204304.915 ops/s
Iteration  15: 204180.733 ops/s
Iteration  16: 203559.784 ops/s
Iteration  17: 203315.773 ops/s
Iteration  18: 203328.754 ops/s
Iteration  19: 203621.914 ops/s
Iteration  20: 203579.059 ops/s
Iteration  21: 204154.752 ops/s
Iteration  22: 204129.417 ops/s
Iteration  23: 203927.530 ops/s
Iteration  24: 204445.654 ops/s
Iteration  25: 204029.908 ops/s
Iteration  26: 203455.333 ops/s
Iteration  27: 204637.096 ops/s
Iteration  28: 203957.411 ops/s
Iteration  29: 203978.725 ops/s
Iteration  30: 203682.324 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_381._Benchmark.benchmark_Cluster_381":
  203988.351 ±(99.9%) 285.884 ops/s [Average]
  (min, avg, max) = (203315.773, 203988.351, 204751.873), stdev = 427.898
  CI (99.9%): [203702.467, 204274.236] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_381._Benchmark.benchmark_Cluster_381  thrpt   30  203988.351 ± 285.884  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_382._Benchmark.benchmark_Cluster_382$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_382._Benchmark.benchmark_Cluster_382

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72325.190 ops/s
# Warmup Iteration   2: 96485.027 ops/s
# Warmup Iteration   3: 139775.218 ops/s
# Warmup Iteration   4: 171318.088 ops/s
# Warmup Iteration   5: 169203.808 ops/s
# Warmup Iteration   6: 171453.808 ops/s
# Warmup Iteration   7: 171957.156 ops/s
# Warmup Iteration   8: 172318.425 ops/s
# Warmup Iteration   9: 172209.832 ops/s
# Warmup Iteration  10: 156316.468 ops/s
# Warmup Iteration  11: 132932.329 ops/s
# Warmup Iteration  12: 171741.740 ops/s
# Warmup Iteration  13: 171378.563 ops/s
# Warmup Iteration  14: 171347.097 ops/s
# Warmup Iteration  15: 171687.505 ops/s
# Warmup Iteration  16: 172185.905 ops/s
# Warmup Iteration  17: 172347.164 ops/s
# Warmup Iteration  18: 171441.288 ops/s
# Warmup Iteration  19: 172349.770 ops/s
# Warmup Iteration  20: 172347.291 ops/s
# Warmup Iteration  21: 172455.804 ops/s
# Warmup Iteration  22: 172189.501 ops/s
# Warmup Iteration  23: 171656.978 ops/s
# Warmup Iteration  24: 172033.189 ops/s
# Warmup Iteration  25: 171553.671 ops/s
# Warmup Iteration  26: 172138.090 ops/s
# Warmup Iteration  27: 172242.638 ops/s
# Warmup Iteration  28: 172289.800 ops/s
# Warmup Iteration  29: 172190.793 ops/s
# Warmup Iteration  30: 172043.571 ops/s
Iteration   1: 172285.633 ops/s
Iteration   2: 172556.207 ops/s
Iteration   3: 171772.477 ops/s
Iteration   4: 172201.275 ops/s
Iteration   5: 172324.652 ops/s
Iteration   6: 171675.188 ops/s
Iteration   7: 171646.827 ops/s
Iteration   8: 171765.908 ops/s
Iteration   9: 171964.469 ops/s
Iteration  10: 171877.602 ops/s
Iteration  11: 172039.395 ops/s
Iteration  12: 171897.185 ops/s
Iteration  13: 171640.761 ops/s
Iteration  14: 171718.763 ops/s
Iteration  15: 171781.279 ops/s
Iteration  16: 171870.497 ops/s
Iteration  17: 172520.698 ops/s
Iteration  18: 171979.896 ops/s
Iteration  19: 172371.708 ops/s
Iteration  20: 171488.772 ops/s
Iteration  21: 172124.932 ops/s
Iteration  22: 172601.473 ops/s
Iteration  23: 172526.646 ops/s
Iteration  24: 171599.431 ops/s
Iteration  25: 171947.237 ops/s
Iteration  26: 172323.253 ops/s
Iteration  27: 171428.331 ops/s
Iteration  28: 172134.616 ops/s
Iteration  29: 172475.210 ops/s
Iteration  30: 171949.423 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_382._Benchmark.benchmark_Cluster_382":
  172016.325 ±(99.9%) 226.521 ops/s [Average]
  (min, avg, max) = (171428.331, 172016.325, 172601.473), stdev = 339.046
  CI (99.9%): [171789.804, 172242.846] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_382._Benchmark.benchmark_Cluster_382  thrpt   30  172016.325 ± 226.521  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_383._Benchmark.benchmark_Cluster_383$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_383._Benchmark.benchmark_Cluster_383

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 93763.302 ops/s
# Warmup Iteration   2: 109416.227 ops/s
# Warmup Iteration   3: 117993.851 ops/s
# Warmup Iteration   4: 169510.346 ops/s
# Warmup Iteration   5: 166423.981 ops/s
# Warmup Iteration   6: 169013.661 ops/s
# Warmup Iteration   7: 166959.971 ops/s
# Warmup Iteration   8: 168698.531 ops/s
# Warmup Iteration   9: 168224.567 ops/s
# Warmup Iteration  10: 169345.376 ops/s
# Warmup Iteration  11: 168571.996 ops/s
# Warmup Iteration  12: 169411.293 ops/s
# Warmup Iteration  13: 168824.142 ops/s
# Warmup Iteration  14: 162583.769 ops/s
# Warmup Iteration  15: 121763.018 ops/s
# Warmup Iteration  16: 169056.634 ops/s
# Warmup Iteration  17: 175080.470 ops/s
# Warmup Iteration  18: 175294.512 ops/s
# Warmup Iteration  19: 176007.963 ops/s
# Warmup Iteration  20: 174976.213 ops/s
# Warmup Iteration  21: 175720.740 ops/s
# Warmup Iteration  22: 175543.512 ops/s
# Warmup Iteration  23: 176213.001 ops/s
# Warmup Iteration  24: 175395.368 ops/s
# Warmup Iteration  25: 175826.098 ops/s
# Warmup Iteration  26: 175300.095 ops/s
# Warmup Iteration  27: 175018.064 ops/s
# Warmup Iteration  28: 175538.404 ops/s
# Warmup Iteration  29: 176006.988 ops/s
# Warmup Iteration  30: 175626.329 ops/s
Iteration   1: 175975.774 ops/s
Iteration   2: 175934.152 ops/s
Iteration   3: 175719.381 ops/s
Iteration   4: 175671.678 ops/s
Iteration   5: 176175.421 ops/s
Iteration   6: 176012.704 ops/s
Iteration   7: 175961.930 ops/s
Iteration   8: 175879.097 ops/s
Iteration   9: 175974.846 ops/s
Iteration  10: 175977.139 ops/s
Iteration  11: 175933.027 ops/s
Iteration  12: 176121.678 ops/s
Iteration  13: 175561.977 ops/s
Iteration  14: 175810.962 ops/s
Iteration  15: 175868.590 ops/s
Iteration  16: 175716.530 ops/s
Iteration  17: 176306.657 ops/s
Iteration  18: 174996.169 ops/s
Iteration  19: 176087.889 ops/s
Iteration  20: 175765.783 ops/s
Iteration  21: 175037.186 ops/s
Iteration  22: 175611.009 ops/s
Iteration  23: 175384.690 ops/s
Iteration  24: 175220.942 ops/s
Iteration  25: 175645.355 ops/s
Iteration  26: 175797.437 ops/s
Iteration  27: 175930.507 ops/s
Iteration  28: 176177.569 ops/s
Iteration  29: 175925.173 ops/s
Iteration  30: 175894.026 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_383._Benchmark.benchmark_Cluster_383":
  175802.509 ±(99.9%) 209.895 ops/s [Average]
  (min, avg, max) = (174996.169, 175802.509, 176306.657), stdev = 314.161
  CI (99.9%): [175592.614, 176012.404] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_383._Benchmark.benchmark_Cluster_383  thrpt   30  175802.509 ± 209.895  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_384._Benchmark.benchmark_Cluster_384$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_384._Benchmark.benchmark_Cluster_384

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83803.132 ops/s
# Warmup Iteration   2: 95797.197 ops/s
# Warmup Iteration   3: 112671.707 ops/s
# Warmup Iteration   4: 156178.488 ops/s
# Warmup Iteration   5: 155935.973 ops/s
# Warmup Iteration   6: 154624.004 ops/s
# Warmup Iteration   7: 156438.282 ops/s
# Warmup Iteration   8: 156456.348 ops/s
# Warmup Iteration   9: 156527.235 ops/s
# Warmup Iteration  10: 155301.650 ops/s
# Warmup Iteration  11: 155771.523 ops/s
# Warmup Iteration  12: 156026.261 ops/s
# Warmup Iteration  13: 123041.316 ops/s
# Warmup Iteration  14: 138299.499 ops/s
# Warmup Iteration  15: 156060.408 ops/s
# Warmup Iteration  16: 156345.125 ops/s
# Warmup Iteration  17: 160673.612 ops/s
# Warmup Iteration  18: 160462.981 ops/s
# Warmup Iteration  19: 159792.440 ops/s
# Warmup Iteration  20: 160075.855 ops/s
# Warmup Iteration  21: 160254.982 ops/s
# Warmup Iteration  22: 160478.261 ops/s
# Warmup Iteration  23: 160518.071 ops/s
# Warmup Iteration  24: 160142.274 ops/s
# Warmup Iteration  25: 160362.159 ops/s
# Warmup Iteration  26: 160250.887 ops/s
# Warmup Iteration  27: 160223.024 ops/s
# Warmup Iteration  28: 160234.322 ops/s
# Warmup Iteration  29: 160401.216 ops/s
# Warmup Iteration  30: 160232.041 ops/s
Iteration   1: 159911.412 ops/s
Iteration   2: 160539.015 ops/s
Iteration   3: 160674.795 ops/s
Iteration   4: 160121.597 ops/s
Iteration   5: 160358.285 ops/s
Iteration   6: 160234.948 ops/s
Iteration   7: 159878.137 ops/s
Iteration   8: 159959.904 ops/s
Iteration   9: 160504.483 ops/s
Iteration  10: 160576.374 ops/s
Iteration  11: 160944.962 ops/s
Iteration  12: 160849.705 ops/s
Iteration  13: 160580.192 ops/s
Iteration  14: 160598.260 ops/s
Iteration  15: 159942.570 ops/s
Iteration  16: 160870.251 ops/s
Iteration  17: 160510.205 ops/s
Iteration  18: 160006.834 ops/s
Iteration  19: 160210.197 ops/s
Iteration  20: 160245.345 ops/s
Iteration  21: 160890.259 ops/s
Iteration  22: 159634.476 ops/s
Iteration  23: 160511.321 ops/s
Iteration  24: 160674.850 ops/s
Iteration  25: 160086.743 ops/s
Iteration  26: 160705.815 ops/s
Iteration  27: 160257.694 ops/s
Iteration  28: 160612.270 ops/s
Iteration  29: 160316.845 ops/s
Iteration  30: 160402.815 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_384._Benchmark.benchmark_Cluster_384":
  160387.019 ±(99.9%) 227.053 ops/s [Average]
  (min, avg, max) = (159634.476, 160387.019, 160944.962), stdev = 339.842
  CI (99.9%): [160159.966, 160614.071] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_384._Benchmark.benchmark_Cluster_384  thrpt   30  160387.019 ± 227.053  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_385._Benchmark.benchmark_Cluster_385$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_385._Benchmark.benchmark_Cluster_385

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76383.843 ops/s
# Warmup Iteration   2: 91356.860 ops/s
# Warmup Iteration   3: 141025.196 ops/s
# Warmup Iteration   4: 165569.709 ops/s
# Warmup Iteration   5: 164193.118 ops/s
# Warmup Iteration   6: 165652.041 ops/s
# Warmup Iteration   7: 166136.240 ops/s
# Warmup Iteration   8: 165767.067 ops/s
# Warmup Iteration   9: 165991.932 ops/s
# Warmup Iteration  10: 132022.176 ops/s
# Warmup Iteration  11: 146588.012 ops/s
# Warmup Iteration  12: 165526.794 ops/s
# Warmup Iteration  13: 165835.253 ops/s
# Warmup Iteration  14: 164695.991 ops/s
# Warmup Iteration  15: 165504.049 ops/s
# Warmup Iteration  16: 166002.462 ops/s
# Warmup Iteration  17: 165683.057 ops/s
# Warmup Iteration  18: 165848.347 ops/s
# Warmup Iteration  19: 165585.417 ops/s
# Warmup Iteration  20: 165146.375 ops/s
# Warmup Iteration  21: 165226.110 ops/s
# Warmup Iteration  22: 164836.907 ops/s
# Warmup Iteration  23: 165026.002 ops/s
# Warmup Iteration  24: 165379.228 ops/s
# Warmup Iteration  25: 165204.195 ops/s
# Warmup Iteration  26: 164965.957 ops/s
# Warmup Iteration  27: 165894.971 ops/s
# Warmup Iteration  28: 165476.471 ops/s
# Warmup Iteration  29: 165453.849 ops/s
# Warmup Iteration  30: 165014.168 ops/s
Iteration   1: 164874.432 ops/s
Iteration   2: 164769.184 ops/s
Iteration   3: 165626.241 ops/s
Iteration   4: 165560.823 ops/s
Iteration   5: 165888.195 ops/s
Iteration   6: 165941.967 ops/s
Iteration   7: 165335.474 ops/s
Iteration   8: 165306.093 ops/s
Iteration   9: 165297.015 ops/s
Iteration  10: 165401.035 ops/s
Iteration  11: 164962.613 ops/s
Iteration  12: 165623.022 ops/s
Iteration  13: 165207.068 ops/s
Iteration  14: 165316.752 ops/s
Iteration  15: 166067.514 ops/s
Iteration  16: 165475.384 ops/s
Iteration  17: 165885.218 ops/s
Iteration  18: 165694.466 ops/s
Iteration  19: 165443.182 ops/s
Iteration  20: 165530.539 ops/s
Iteration  21: 165978.964 ops/s
Iteration  22: 166076.901 ops/s
Iteration  23: 165987.474 ops/s
Iteration  24: 166115.830 ops/s
Iteration  25: 165755.780 ops/s
Iteration  26: 165105.861 ops/s
Iteration  27: 166060.123 ops/s
Iteration  28: 165230.495 ops/s
Iteration  29: 165889.949 ops/s
Iteration  30: 165635.197 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_385._Benchmark.benchmark_Cluster_385":
  165568.093 ±(99.9%) 253.063 ops/s [Average]
  (min, avg, max) = (164769.184, 165568.093, 166115.830), stdev = 378.773
  CI (99.9%): [165315.030, 165821.156] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_385._Benchmark.benchmark_Cluster_385  thrpt   30  165568.093 ± 253.063  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_386._Benchmark.benchmark_Cluster_386$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_386._Benchmark.benchmark_Cluster_386

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 89552.264 ops/s
# Warmup Iteration   2: 104221.814 ops/s
# Warmup Iteration   3: 179566.512 ops/s
# Warmup Iteration   4: 196123.337 ops/s
# Warmup Iteration   5: 194346.969 ops/s
# Warmup Iteration   6: 195598.252 ops/s
# Warmup Iteration   7: 194750.389 ops/s
# Warmup Iteration   8: 195005.756 ops/s
# Warmup Iteration   9: 169015.039 ops/s
# Warmup Iteration  10: 159792.800 ops/s
# Warmup Iteration  11: 196461.512 ops/s
# Warmup Iteration  12: 196024.015 ops/s
# Warmup Iteration  13: 195851.254 ops/s
# Warmup Iteration  14: 196258.697 ops/s
# Warmup Iteration  15: 196083.393 ops/s
# Warmup Iteration  16: 196183.865 ops/s
# Warmup Iteration  17: 196288.077 ops/s
# Warmup Iteration  18: 196377.697 ops/s
# Warmup Iteration  19: 195822.529 ops/s
# Warmup Iteration  20: 195238.835 ops/s
# Warmup Iteration  21: 196521.474 ops/s
# Warmup Iteration  22: 195779.643 ops/s
# Warmup Iteration  23: 196015.148 ops/s
# Warmup Iteration  24: 196568.787 ops/s
# Warmup Iteration  25: 196088.373 ops/s
# Warmup Iteration  26: 196251.465 ops/s
# Warmup Iteration  27: 195676.887 ops/s
# Warmup Iteration  28: 196504.154 ops/s
# Warmup Iteration  29: 196325.498 ops/s
# Warmup Iteration  30: 195818.952 ops/s
Iteration   1: 196230.622 ops/s
Iteration   2: 195665.640 ops/s
Iteration   3: 196429.621 ops/s
Iteration   4: 196480.134 ops/s
Iteration   5: 195610.203 ops/s
Iteration   6: 196073.144 ops/s
Iteration   7: 195698.020 ops/s
Iteration   8: 195277.504 ops/s
Iteration   9: 196593.985 ops/s
Iteration  10: 196647.798 ops/s
Iteration  11: 196376.976 ops/s
Iteration  12: 196113.310 ops/s
Iteration  13: 196670.203 ops/s
Iteration  14: 195673.446 ops/s
Iteration  15: 195410.228 ops/s
Iteration  16: 196444.330 ops/s
Iteration  17: 196299.620 ops/s
Iteration  18: 195841.445 ops/s
Iteration  19: 196082.144 ops/s
Iteration  20: 195923.915 ops/s
Iteration  21: 196002.670 ops/s
Iteration  22: 196230.505 ops/s
Iteration  23: 196057.685 ops/s
Iteration  24: 195642.057 ops/s
Iteration  25: 196028.494 ops/s
Iteration  26: 196031.589 ops/s
Iteration  27: 196197.411 ops/s
Iteration  28: 195186.151 ops/s
Iteration  29: 196426.819 ops/s
Iteration  30: 196091.511 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_386._Benchmark.benchmark_Cluster_386":
  196047.906 ±(99.9%) 263.648 ops/s [Average]
  (min, avg, max) = (195186.151, 196047.906, 196670.203), stdev = 394.616
  CI (99.9%): [195784.258, 196311.554] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_386._Benchmark.benchmark_Cluster_386  thrpt   30  196047.906 ± 263.648  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_387._Benchmark.benchmark_Cluster_387$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_387._Benchmark.benchmark_Cluster_387

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 77793.039 ops/s
# Warmup Iteration   2: 96054.763 ops/s
# Warmup Iteration   3: 165041.763 ops/s
# Warmup Iteration   4: 183809.343 ops/s
# Warmup Iteration   5: 181960.841 ops/s
# Warmup Iteration   6: 183681.363 ops/s
# Warmup Iteration   7: 183483.292 ops/s
# Warmup Iteration   8: 183780.293 ops/s
# Warmup Iteration   9: 151438.334 ops/s
# Warmup Iteration  10: 156757.508 ops/s
# Warmup Iteration  11: 183859.228 ops/s
# Warmup Iteration  12: 184198.796 ops/s
# Warmup Iteration  13: 183845.524 ops/s
# Warmup Iteration  14: 183768.199 ops/s
# Warmup Iteration  15: 183121.416 ops/s
# Warmup Iteration  16: 183909.226 ops/s
# Warmup Iteration  17: 184151.873 ops/s
# Warmup Iteration  18: 184596.625 ops/s
# Warmup Iteration  19: 184287.756 ops/s
# Warmup Iteration  20: 184455.955 ops/s
# Warmup Iteration  21: 184431.511 ops/s
# Warmup Iteration  22: 184208.115 ops/s
# Warmup Iteration  23: 184444.700 ops/s
# Warmup Iteration  24: 184482.290 ops/s
# Warmup Iteration  25: 184670.083 ops/s
# Warmup Iteration  26: 183871.831 ops/s
# Warmup Iteration  27: 184343.262 ops/s
# Warmup Iteration  28: 184097.991 ops/s
# Warmup Iteration  29: 184721.311 ops/s
# Warmup Iteration  30: 184035.976 ops/s
Iteration   1: 184805.788 ops/s
Iteration   2: 184671.878 ops/s
Iteration   3: 185031.715 ops/s
Iteration   4: 184668.777 ops/s
Iteration   5: 184258.727 ops/s
Iteration   6: 184539.735 ops/s
Iteration   7: 184630.685 ops/s
Iteration   8: 184671.983 ops/s
Iteration   9: 184662.548 ops/s
Iteration  10: 184891.339 ops/s
Iteration  11: 184098.103 ops/s
Iteration  12: 184295.066 ops/s
Iteration  13: 184467.195 ops/s
Iteration  14: 184498.240 ops/s
Iteration  15: 184623.169 ops/s
Iteration  16: 184043.878 ops/s
Iteration  17: 183962.320 ops/s
Iteration  18: 184364.094 ops/s
Iteration  19: 184386.176 ops/s
Iteration  20: 184073.501 ops/s
Iteration  21: 184278.809 ops/s
Iteration  22: 183974.726 ops/s
Iteration  23: 183913.713 ops/s
Iteration  24: 184617.754 ops/s
Iteration  25: 184426.421 ops/s
Iteration  26: 184337.841 ops/s
Iteration  27: 184132.012 ops/s
Iteration  28: 184306.184 ops/s
Iteration  29: 184352.801 ops/s
Iteration  30: 184219.767 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_387._Benchmark.benchmark_Cluster_387":
  184406.831 ±(99.9%) 191.295 ops/s [Average]
  (min, avg, max) = (183913.713, 184406.831, 185031.715), stdev = 286.322
  CI (99.9%): [184215.536, 184598.127] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_387._Benchmark.benchmark_Cluster_387  thrpt   30  184406.831 ± 191.295  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_388._Benchmark.benchmark_Cluster_388$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_388._Benchmark.benchmark_Cluster_388

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58411.727 ops/s
# Warmup Iteration   2: 73561.623 ops/s
# Warmup Iteration   3: 153988.966 ops/s
# Warmup Iteration   4: 155507.725 ops/s
# Warmup Iteration   5: 157335.868 ops/s
# Warmup Iteration   6: 157683.690 ops/s
# Warmup Iteration   7: 157083.271 ops/s
# Warmup Iteration   8: 107883.969 ops/s
# Warmup Iteration   9: 157474.199 ops/s
# Warmup Iteration  10: 157500.750 ops/s
# Warmup Iteration  11: 157514.358 ops/s
# Warmup Iteration  12: 157693.705 ops/s
# Warmup Iteration  13: 157380.482 ops/s
# Warmup Iteration  14: 157349.950 ops/s
# Warmup Iteration  15: 157199.028 ops/s
# Warmup Iteration  16: 157335.724 ops/s
# Warmup Iteration  17: 156798.993 ops/s
# Warmup Iteration  18: 157152.402 ops/s
# Warmup Iteration  19: 156856.321 ops/s
# Warmup Iteration  20: 156858.251 ops/s
# Warmup Iteration  21: 156707.832 ops/s
# Warmup Iteration  22: 157127.113 ops/s
# Warmup Iteration  23: 156901.656 ops/s
# Warmup Iteration  24: 157008.822 ops/s
# Warmup Iteration  25: 156761.634 ops/s
# Warmup Iteration  26: 156718.930 ops/s
# Warmup Iteration  27: 156715.199 ops/s
# Warmup Iteration  28: 157208.646 ops/s
# Warmup Iteration  29: 156927.831 ops/s
# Warmup Iteration  30: 157288.739 ops/s
Iteration   1: 157042.674 ops/s
Iteration   2: 156693.980 ops/s
Iteration   3: 157003.369 ops/s
Iteration   4: 156746.175 ops/s
Iteration   5: 156769.926 ops/s
Iteration   6: 156695.758 ops/s
Iteration   7: 156913.262 ops/s
Iteration   8: 157246.139 ops/s
Iteration   9: 156529.823 ops/s
Iteration  10: 157104.323 ops/s
Iteration  11: 156971.876 ops/s
Iteration  12: 157206.981 ops/s
Iteration  13: 157042.349 ops/s
Iteration  14: 156809.001 ops/s
Iteration  15: 156352.732 ops/s
Iteration  16: 155970.534 ops/s
Iteration  17: 155838.663 ops/s
Iteration  18: 156050.276 ops/s
Iteration  19: 156709.980 ops/s
Iteration  20: 157034.313 ops/s
Iteration  21: 157015.559 ops/s
Iteration  22: 156525.206 ops/s
Iteration  23: 156076.699 ops/s
Iteration  24: 156357.376 ops/s
Iteration  25: 156420.294 ops/s
Iteration  26: 156702.054 ops/s
Iteration  27: 156476.402 ops/s
Iteration  28: 156944.856 ops/s
Iteration  29: 156923.357 ops/s
Iteration  30: 156616.682 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_388._Benchmark.benchmark_Cluster_388":
  156693.021 ±(99.9%) 248.780 ops/s [Average]
  (min, avg, max) = (155838.663, 156693.021, 157246.139), stdev = 372.362
  CI (99.9%): [156444.240, 156941.801] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_388._Benchmark.benchmark_Cluster_388  thrpt   30  156693.021 ± 248.780  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_389._Benchmark.benchmark_Cluster_389$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_389._Benchmark.benchmark_Cluster_389

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 88569.192 ops/s
# Warmup Iteration   2: 115488.550 ops/s
# Warmup Iteration   3: 218585.053 ops/s
# Warmup Iteration   4: 234187.152 ops/s
# Warmup Iteration   5: 232560.638 ops/s
# Warmup Iteration   6: 235199.437 ops/s
# Warmup Iteration   7: 235026.970 ops/s
# Warmup Iteration   8: 219186.668 ops/s
# Warmup Iteration   9: 173323.394 ops/s
# Warmup Iteration  10: 235546.628 ops/s
# Warmup Iteration  11: 235863.048 ops/s
# Warmup Iteration  12: 235556.877 ops/s
# Warmup Iteration  13: 235474.269 ops/s
# Warmup Iteration  14: 235474.327 ops/s
# Warmup Iteration  15: 235758.531 ops/s
# Warmup Iteration  16: 235422.648 ops/s
# Warmup Iteration  17: 235822.587 ops/s
# Warmup Iteration  18: 235951.847 ops/s
# Warmup Iteration  19: 235499.289 ops/s
# Warmup Iteration  20: 235693.618 ops/s
# Warmup Iteration  21: 236028.861 ops/s
# Warmup Iteration  22: 235975.635 ops/s
# Warmup Iteration  23: 235526.069 ops/s
# Warmup Iteration  24: 235936.258 ops/s
# Warmup Iteration  25: 236363.543 ops/s
# Warmup Iteration  26: 235553.632 ops/s
# Warmup Iteration  27: 235752.406 ops/s
# Warmup Iteration  28: 235475.910 ops/s
# Warmup Iteration  29: 236262.546 ops/s
# Warmup Iteration  30: 236258.294 ops/s
Iteration   1: 235432.073 ops/s
Iteration   2: 235484.835 ops/s
Iteration   3: 235977.718 ops/s
Iteration   4: 235362.815 ops/s
Iteration   5: 235274.180 ops/s
Iteration   6: 235759.340 ops/s
Iteration   7: 233929.100 ops/s
Iteration   8: 235370.940 ops/s
Iteration   9: 234520.638 ops/s
Iteration  10: 234188.020 ops/s
Iteration  11: 234728.472 ops/s
Iteration  12: 235232.089 ops/s
Iteration  13: 234288.785 ops/s
Iteration  14: 235391.080 ops/s
Iteration  15: 235731.160 ops/s
Iteration  16: 235120.132 ops/s
Iteration  17: 234830.358 ops/s
Iteration  18: 234870.297 ops/s
Iteration  19: 235001.170 ops/s
Iteration  20: 236114.799 ops/s
Iteration  21: 235423.051 ops/s
Iteration  22: 235613.792 ops/s
Iteration  23: 236124.976 ops/s
Iteration  24: 235388.525 ops/s
Iteration  25: 235140.172 ops/s
Iteration  26: 236277.386 ops/s
Iteration  27: 235324.609 ops/s
Iteration  28: 234348.516 ops/s
Iteration  29: 234006.007 ops/s
Iteration  30: 235443.016 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_389._Benchmark.benchmark_Cluster_389":
  235189.935 ±(99.9%) 415.458 ops/s [Average]
  (min, avg, max) = (233929.100, 235189.935, 236277.386), stdev = 621.839
  CI (99.9%): [234774.477, 235605.393] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_389._Benchmark.benchmark_Cluster_389  thrpt   30  235189.935 ± 415.458  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_39._Benchmark.benchmark_Cluster_39$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_39._Benchmark.benchmark_Cluster_39

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 40046.812 ops/s
# Warmup Iteration   2: 71189.235 ops/s
# Warmup Iteration   3: 89178.832 ops/s
# Warmup Iteration   4: 138761.033 ops/s
# Warmup Iteration   5: 138767.687 ops/s
# Warmup Iteration   6: 136552.987 ops/s
# Warmup Iteration   7: 137662.359 ops/s
# Warmup Iteration   8: 138963.896 ops/s
# Warmup Iteration   9: 138618.186 ops/s
# Warmup Iteration  10: 138213.399 ops/s
# Warmup Iteration  11: 89454.993 ops/s
# Warmup Iteration  12: 139070.080 ops/s
# Warmup Iteration  13: 139188.228 ops/s
# Warmup Iteration  14: 139599.072 ops/s
# Warmup Iteration  15: 139481.472 ops/s
# Warmup Iteration  16: 138409.432 ops/s
# Warmup Iteration  17: 142663.474 ops/s
# Warmup Iteration  18: 142304.847 ops/s
# Warmup Iteration  19: 142074.341 ops/s
# Warmup Iteration  20: 142335.918 ops/s
# Warmup Iteration  21: 142457.727 ops/s
# Warmup Iteration  22: 141714.979 ops/s
# Warmup Iteration  23: 142998.147 ops/s
# Warmup Iteration  24: 142235.168 ops/s
# Warmup Iteration  25: 142074.852 ops/s
# Warmup Iteration  26: 142524.842 ops/s
# Warmup Iteration  27: 142796.009 ops/s
# Warmup Iteration  28: 142488.841 ops/s
# Warmup Iteration  29: 142535.436 ops/s
# Warmup Iteration  30: 142940.273 ops/s
Iteration   1: 142690.764 ops/s
Iteration   2: 142172.647 ops/s
Iteration   3: 141793.206 ops/s
Iteration   4: 142459.561 ops/s
Iteration   5: 143029.876 ops/s
Iteration   6: 142913.241 ops/s
Iteration   7: 142488.517 ops/s
Iteration   8: 143240.501 ops/s
Iteration   9: 143360.619 ops/s
Iteration  10: 142808.602 ops/s
Iteration  11: 143300.989 ops/s
Iteration  12: 143360.975 ops/s
Iteration  13: 142523.311 ops/s
Iteration  14: 143281.687 ops/s
Iteration  15: 142501.613 ops/s
Iteration  16: 142303.264 ops/s
Iteration  17: 142777.827 ops/s
Iteration  18: 143367.108 ops/s
Iteration  19: 142727.185 ops/s
Iteration  20: 142832.048 ops/s
Iteration  21: 142316.228 ops/s
Iteration  22: 142557.807 ops/s
Iteration  23: 142752.406 ops/s
Iteration  24: 142446.783 ops/s
Iteration  25: 142367.319 ops/s
Iteration  26: 142789.636 ops/s
Iteration  27: 142649.378 ops/s
Iteration  28: 143036.203 ops/s
Iteration  29: 143152.690 ops/s
Iteration  30: 143179.124 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_39._Benchmark.benchmark_Cluster_39":
  142772.704 ±(99.9%) 268.277 ops/s [Average]
  (min, avg, max) = (141793.206, 142772.704, 143367.108), stdev = 401.545
  CI (99.9%): [142504.427, 143040.981] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_39._Benchmark.benchmark_Cluster_39  thrpt   30  142772.704 ± 268.277  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_390._Benchmark.benchmark_Cluster_390$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_390._Benchmark.benchmark_Cluster_390

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 32314.621 ops/s
# Warmup Iteration   2: 52616.511 ops/s
# Warmup Iteration   3: 62769.690 ops/s
# Warmup Iteration   4: 91800.720 ops/s
# Warmup Iteration   5: 91837.915 ops/s
# Warmup Iteration   6: 90232.375 ops/s
# Warmup Iteration   7: 91027.237 ops/s
# Warmup Iteration   8: 92018.704 ops/s
# Warmup Iteration   9: 91132.719 ops/s
# Warmup Iteration  10: 91807.873 ops/s
# Warmup Iteration  11: 93032.572 ops/s
# Warmup Iteration  12: 61926.964 ops/s
# Warmup Iteration  13: 91304.662 ops/s
# Warmup Iteration  14: 91465.696 ops/s
# Warmup Iteration  15: 91947.448 ops/s
# Warmup Iteration  16: 91367.911 ops/s
# Warmup Iteration  17: 90845.787 ops/s
# Warmup Iteration  18: 92437.686 ops/s
# Warmup Iteration  19: 92334.488 ops/s
# Warmup Iteration  20: 92061.214 ops/s
# Warmup Iteration  21: 92825.795 ops/s
# Warmup Iteration  22: 92250.169 ops/s
# Warmup Iteration  23: 92374.710 ops/s
# Warmup Iteration  24: 92287.733 ops/s
# Warmup Iteration  25: 92028.953 ops/s
# Warmup Iteration  26: 91733.626 ops/s
# Warmup Iteration  27: 92412.897 ops/s
# Warmup Iteration  28: 92627.989 ops/s
# Warmup Iteration  29: 91940.351 ops/s
# Warmup Iteration  30: 92355.192 ops/s
Iteration   1: 90872.141 ops/s
Iteration   2: 92679.935 ops/s
Iteration   3: 92363.439 ops/s
Iteration   4: 92474.516 ops/s
Iteration   5: 92113.916 ops/s
Iteration   6: 90359.913 ops/s
Iteration   7: 91924.309 ops/s
Iteration   8: 92174.922 ops/s
Iteration   9: 92739.319 ops/s
Iteration  10: 92812.790 ops/s
Iteration  11: 92439.908 ops/s
Iteration  12: 92264.069 ops/s
Iteration  13: 92931.902 ops/s
Iteration  14: 92259.668 ops/s
Iteration  15: 91856.378 ops/s
Iteration  16: 90122.286 ops/s
Iteration  17: 91057.897 ops/s
Iteration  18: 91157.362 ops/s
Iteration  19: 91251.494 ops/s
Iteration  20: 91462.937 ops/s
Iteration  21: 91315.613 ops/s
Iteration  22: 91969.662 ops/s
Iteration  23: 91458.235 ops/s
Iteration  24: 91939.207 ops/s
Iteration  25: 92103.163 ops/s
Iteration  26: 89745.085 ops/s
Iteration  27: 92366.894 ops/s
Iteration  28: 92778.872 ops/s
Iteration  29: 92303.850 ops/s
Iteration  30: 91483.816 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_390._Benchmark.benchmark_Cluster_390":
  91826.117 ±(99.9%) 544.825 ops/s [Average]
  (min, avg, max) = (89745.085, 91826.117, 92931.902), stdev = 815.468
  CI (99.9%): [91281.292, 92370.941] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_390._Benchmark.benchmark_Cluster_390  thrpt   30  91826.117 ± 544.825  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_391._Benchmark.benchmark_Cluster_391$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_391._Benchmark.benchmark_Cluster_391

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80610.308 ops/s
# Warmup Iteration   2: 108163.245 ops/s
# Warmup Iteration   3: 153135.826 ops/s
# Warmup Iteration   4: 195622.351 ops/s
# Warmup Iteration   5: 195919.841 ops/s
# Warmup Iteration   6: 194541.297 ops/s
# Warmup Iteration   7: 196206.591 ops/s
# Warmup Iteration   8: 196467.778 ops/s
# Warmup Iteration   9: 197034.546 ops/s
# Warmup Iteration  10: 196545.491 ops/s
# Warmup Iteration  11: 131536.287 ops/s
# Warmup Iteration  12: 196449.883 ops/s
# Warmup Iteration  13: 196882.652 ops/s
# Warmup Iteration  14: 196964.404 ops/s
# Warmup Iteration  15: 196615.425 ops/s
# Warmup Iteration  16: 196787.967 ops/s
# Warmup Iteration  17: 197473.880 ops/s
# Warmup Iteration  18: 196923.371 ops/s
# Warmup Iteration  19: 197191.129 ops/s
# Warmup Iteration  20: 196207.964 ops/s
# Warmup Iteration  21: 197183.454 ops/s
# Warmup Iteration  22: 197210.918 ops/s
# Warmup Iteration  23: 197177.317 ops/s
# Warmup Iteration  24: 197351.120 ops/s
# Warmup Iteration  25: 197585.582 ops/s
# Warmup Iteration  26: 197555.279 ops/s
# Warmup Iteration  27: 197734.059 ops/s
# Warmup Iteration  28: 197598.434 ops/s
# Warmup Iteration  29: 197669.520 ops/s
# Warmup Iteration  30: 197608.349 ops/s
Iteration   1: 197835.685 ops/s
Iteration   2: 197543.360 ops/s
Iteration   3: 196869.889 ops/s
Iteration   4: 197276.915 ops/s
Iteration   5: 197722.673 ops/s
Iteration   6: 197292.769 ops/s
Iteration   7: 197507.382 ops/s
Iteration   8: 197667.137 ops/s
Iteration   9: 197500.363 ops/s
Iteration  10: 197180.374 ops/s
Iteration  11: 197585.103 ops/s
Iteration  12: 197407.617 ops/s
Iteration  13: 196926.021 ops/s
Iteration  14: 196782.747 ops/s
Iteration  15: 197382.146 ops/s
Iteration  16: 197367.848 ops/s
Iteration  17: 196999.748 ops/s
Iteration  18: 197683.238 ops/s
Iteration  19: 197499.209 ops/s
Iteration  20: 197556.234 ops/s
Iteration  21: 196889.527 ops/s
Iteration  22: 197853.798 ops/s
Iteration  23: 198068.482 ops/s
Iteration  24: 197236.228 ops/s
Iteration  25: 197556.740 ops/s
Iteration  26: 197720.276 ops/s
Iteration  27: 197293.121 ops/s
Iteration  28: 197288.679 ops/s
Iteration  29: 197761.049 ops/s
Iteration  30: 197548.841 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_391._Benchmark.benchmark_Cluster_391":
  197426.773 ±(99.9%) 211.332 ops/s [Average]
  (min, avg, max) = (196782.747, 197426.773, 198068.482), stdev = 316.312
  CI (99.9%): [197215.441, 197638.105] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_391._Benchmark.benchmark_Cluster_391  thrpt   30  197426.773 ± 211.332  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_392._Benchmark.benchmark_Cluster_392$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_392._Benchmark.benchmark_Cluster_392

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72208.787 ops/s
# Warmup Iteration   2: 97449.049 ops/s
# Warmup Iteration   3: 146764.190 ops/s
# Warmup Iteration   4: 175028.426 ops/s
# Warmup Iteration   5: 173894.656 ops/s
# Warmup Iteration   6: 175425.763 ops/s
# Warmup Iteration   7: 175819.573 ops/s
# Warmup Iteration   8: 175502.689 ops/s
# Warmup Iteration   9: 175542.257 ops/s
# Warmup Iteration  10: 132071.486 ops/s
# Warmup Iteration  11: 165502.776 ops/s
# Warmup Iteration  12: 175331.530 ops/s
# Warmup Iteration  13: 175345.543 ops/s
# Warmup Iteration  14: 175399.897 ops/s
# Warmup Iteration  15: 175487.223 ops/s
# Warmup Iteration  16: 175723.721 ops/s
# Warmup Iteration  17: 175509.814 ops/s
# Warmup Iteration  18: 175752.701 ops/s
# Warmup Iteration  19: 175573.015 ops/s
# Warmup Iteration  20: 175682.197 ops/s
# Warmup Iteration  21: 175829.699 ops/s
# Warmup Iteration  22: 175425.967 ops/s
# Warmup Iteration  23: 175659.910 ops/s
# Warmup Iteration  24: 175808.727 ops/s
# Warmup Iteration  25: 175439.841 ops/s
# Warmup Iteration  26: 175437.347 ops/s
# Warmup Iteration  27: 175852.356 ops/s
# Warmup Iteration  28: 175550.782 ops/s
# Warmup Iteration  29: 175960.078 ops/s
# Warmup Iteration  30: 175518.807 ops/s
Iteration   1: 174923.975 ops/s
Iteration   2: 175283.663 ops/s
Iteration   3: 176105.665 ops/s
Iteration   4: 175457.311 ops/s
Iteration   5: 174931.913 ops/s
Iteration   6: 174753.279 ops/s
Iteration   7: 174522.071 ops/s
Iteration   8: 174852.186 ops/s
Iteration   9: 175858.009 ops/s
Iteration  10: 175972.806 ops/s
Iteration  11: 175158.555 ops/s
Iteration  12: 174447.297 ops/s
Iteration  13: 175527.375 ops/s
Iteration  14: 175434.683 ops/s
Iteration  15: 175633.318 ops/s
Iteration  16: 176130.910 ops/s
Iteration  17: 175927.406 ops/s
Iteration  18: 175207.681 ops/s
Iteration  19: 175863.151 ops/s
Iteration  20: 175919.259 ops/s
Iteration  21: 175366.255 ops/s
Iteration  22: 175946.125 ops/s
Iteration  23: 175325.780 ops/s
Iteration  24: 175098.732 ops/s
Iteration  25: 175508.093 ops/s
Iteration  26: 175804.751 ops/s
Iteration  27: 175290.707 ops/s
Iteration  28: 175336.661 ops/s
Iteration  29: 174629.541 ops/s
Iteration  30: 174566.626 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_392._Benchmark.benchmark_Cluster_392":
  175359.459 ±(99.9%) 332.549 ops/s [Average]
  (min, avg, max) = (174447.297, 175359.459, 176130.910), stdev = 497.744
  CI (99.9%): [175026.910, 175692.009] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_392._Benchmark.benchmark_Cluster_392  thrpt   30  175359.459 ± 332.549  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_393._Benchmark.benchmark_Cluster_393$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_393._Benchmark.benchmark_Cluster_393

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64331.838 ops/s
# Warmup Iteration   2: 85859.527 ops/s
# Warmup Iteration   3: 86023.517 ops/s
# Warmup Iteration   4: 108460.730 ops/s
# Warmup Iteration   5: 126703.765 ops/s
# Warmup Iteration   6: 126627.675 ops/s
# Warmup Iteration   7: 127183.480 ops/s
# Warmup Iteration   8: 125551.892 ops/s
# Warmup Iteration   9: 126392.292 ops/s
# Warmup Iteration  10: 126253.151 ops/s
# Warmup Iteration  11: 127110.663 ops/s
# Warmup Iteration  12: 127257.488 ops/s
# Warmup Iteration  13: 127064.530 ops/s
# Warmup Iteration  14: 127031.422 ops/s
# Warmup Iteration  15: 127048.373 ops/s
# Warmup Iteration  16: 127340.648 ops/s
# Warmup Iteration  17: 110592.687 ops/s
# Warmup Iteration  18: 108994.766 ops/s
# Warmup Iteration  19: 132225.279 ops/s
# Warmup Iteration  20: 131671.572 ops/s
# Warmup Iteration  21: 131744.169 ops/s
# Warmup Iteration  22: 131102.743 ops/s
# Warmup Iteration  23: 132247.265 ops/s
# Warmup Iteration  24: 131969.156 ops/s
# Warmup Iteration  25: 132358.792 ops/s
# Warmup Iteration  26: 131788.887 ops/s
# Warmup Iteration  27: 131826.257 ops/s
# Warmup Iteration  28: 131917.483 ops/s
# Warmup Iteration  29: 131948.274 ops/s
# Warmup Iteration  30: 132236.294 ops/s
Iteration   1: 131963.023 ops/s
Iteration   2: 132587.797 ops/s
Iteration   3: 132580.836 ops/s
Iteration   4: 131965.787 ops/s
Iteration   5: 132159.687 ops/s
Iteration   6: 131680.239 ops/s
Iteration   7: 132063.013 ops/s
Iteration   8: 132277.265 ops/s
Iteration   9: 130341.831 ops/s
Iteration  10: 132014.201 ops/s
Iteration  11: 131730.578 ops/s
Iteration  12: 131372.739 ops/s
Iteration  13: 131972.866 ops/s
Iteration  14: 131907.051 ops/s
Iteration  15: 130983.276 ops/s
Iteration  16: 131838.468 ops/s
Iteration  17: 131808.748 ops/s
Iteration  18: 131767.367 ops/s
Iteration  19: 131483.037 ops/s
Iteration  20: 132044.543 ops/s
Iteration  21: 131994.532 ops/s
Iteration  22: 132630.336 ops/s
Iteration  23: 132340.391 ops/s
Iteration  24: 132455.481 ops/s
Iteration  25: 132281.932 ops/s
Iteration  26: 131888.689 ops/s
Iteration  27: 132058.702 ops/s
Iteration  28: 132115.665 ops/s
Iteration  29: 131901.831 ops/s
Iteration  30: 132543.562 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_393._Benchmark.benchmark_Cluster_393":
  131958.449 ±(99.9%) 319.251 ops/s [Average]
  (min, avg, max) = (130341.831, 131958.449, 132630.336), stdev = 477.840
  CI (99.9%): [131639.198, 132277.700] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_393._Benchmark.benchmark_Cluster_393  thrpt   30  131958.449 ± 319.251  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_394._Benchmark.benchmark_Cluster_394$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_394._Benchmark.benchmark_Cluster_394

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 86853.798 ops/s
# Warmup Iteration   2: 92418.216 ops/s
# Warmup Iteration   3: 110649.210 ops/s
# Warmup Iteration   4: 146727.979 ops/s
# Warmup Iteration   5: 146907.935 ops/s
# Warmup Iteration   6: 147061.268 ops/s
# Warmup Iteration   7: 147431.302 ops/s
# Warmup Iteration   8: 146327.644 ops/s
# Warmup Iteration   9: 146774.940 ops/s
# Warmup Iteration  10: 146795.265 ops/s
# Warmup Iteration  11: 147125.807 ops/s
# Warmup Iteration  12: 147165.735 ops/s
# Warmup Iteration  13: 116684.248 ops/s
# Warmup Iteration  14: 130470.869 ops/s
# Warmup Iteration  15: 146623.145 ops/s
# Warmup Iteration  16: 146630.843 ops/s
# Warmup Iteration  17: 154492.065 ops/s
# Warmup Iteration  18: 154408.707 ops/s
# Warmup Iteration  19: 154379.139 ops/s
# Warmup Iteration  20: 154446.400 ops/s
# Warmup Iteration  21: 154630.264 ops/s
# Warmup Iteration  22: 154176.527 ops/s
# Warmup Iteration  23: 154006.418 ops/s
# Warmup Iteration  24: 154120.374 ops/s
# Warmup Iteration  25: 153631.489 ops/s
# Warmup Iteration  26: 153495.877 ops/s
# Warmup Iteration  27: 154597.855 ops/s
# Warmup Iteration  28: 154455.861 ops/s
# Warmup Iteration  29: 153979.196 ops/s
# Warmup Iteration  30: 154265.940 ops/s
Iteration   1: 153668.181 ops/s
Iteration   2: 154764.367 ops/s
Iteration   3: 154275.977 ops/s
Iteration   4: 155537.556 ops/s
Iteration   5: 154005.937 ops/s
Iteration   6: 154925.449 ops/s
Iteration   7: 153683.643 ops/s
Iteration   8: 154820.832 ops/s
Iteration   9: 153414.346 ops/s
Iteration  10: 152550.805 ops/s
Iteration  11: 154223.379 ops/s
Iteration  12: 153900.350 ops/s
Iteration  13: 153721.631 ops/s
Iteration  14: 154012.325 ops/s
Iteration  15: 153974.368 ops/s
Iteration  16: 153950.064 ops/s
Iteration  17: 153300.109 ops/s
Iteration  18: 152395.438 ops/s
Iteration  19: 153887.961 ops/s
Iteration  20: 154150.785 ops/s
Iteration  21: 154182.023 ops/s
Iteration  22: 154682.566 ops/s
Iteration  23: 153857.722 ops/s
Iteration  24: 152855.797 ops/s
Iteration  25: 155108.912 ops/s
Iteration  26: 153900.082 ops/s
Iteration  27: 154539.730 ops/s
Iteration  28: 153460.600 ops/s
Iteration  29: 153165.170 ops/s
Iteration  30: 154684.796 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_394._Benchmark.benchmark_Cluster_394":
  153986.697 ±(99.9%) 484.641 ops/s [Average]
  (min, avg, max) = (152395.438, 153986.697, 155537.556), stdev = 725.388
  CI (99.9%): [153502.055, 154471.338] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_394._Benchmark.benchmark_Cluster_394  thrpt   30  153986.697 ± 484.641  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_395._Benchmark.benchmark_Cluster_395$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_395._Benchmark.benchmark_Cluster_395

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 32598.734 ops/s
# Warmup Iteration   2: 67963.214 ops/s
# Warmup Iteration   3: 93531.208 ops/s
# Warmup Iteration   4: 128067.268 ops/s
# Warmup Iteration   5: 126358.225 ops/s
# Warmup Iteration   6: 127589.406 ops/s
# Warmup Iteration   7: 128104.749 ops/s
# Warmup Iteration   8: 128313.889 ops/s
# Warmup Iteration   9: 127931.751 ops/s
# Warmup Iteration  10: 87561.557 ops/s
# Warmup Iteration  11: 128257.443 ops/s
# Warmup Iteration  12: 127764.355 ops/s
# Warmup Iteration  13: 128073.479 ops/s
# Warmup Iteration  14: 128064.076 ops/s
# Warmup Iteration  15: 127967.115 ops/s
# Warmup Iteration  16: 127506.293 ops/s
# Warmup Iteration  17: 127674.222 ops/s
# Warmup Iteration  18: 127969.886 ops/s
# Warmup Iteration  19: 127346.185 ops/s
# Warmup Iteration  20: 127835.436 ops/s
# Warmup Iteration  21: 127991.678 ops/s
# Warmup Iteration  22: 128010.504 ops/s
# Warmup Iteration  23: 127312.181 ops/s
# Warmup Iteration  24: 128284.757 ops/s
# Warmup Iteration  25: 127765.307 ops/s
# Warmup Iteration  26: 128132.291 ops/s
# Warmup Iteration  27: 128339.302 ops/s
# Warmup Iteration  28: 127677.996 ops/s
# Warmup Iteration  29: 127705.522 ops/s
# Warmup Iteration  30: 128070.579 ops/s
Iteration   1: 128134.605 ops/s
Iteration   2: 127685.932 ops/s
Iteration   3: 127876.294 ops/s
Iteration   4: 127770.669 ops/s
Iteration   5: 127233.210 ops/s
Iteration   6: 127775.853 ops/s
Iteration   7: 128081.427 ops/s
Iteration   8: 127834.516 ops/s
Iteration   9: 128348.444 ops/s
Iteration  10: 128043.606 ops/s
Iteration  11: 127191.796 ops/s
Iteration  12: 127535.712 ops/s
Iteration  13: 127135.128 ops/s
Iteration  14: 127693.119 ops/s
Iteration  15: 127699.263 ops/s
Iteration  16: 127674.041 ops/s
Iteration  17: 127689.949 ops/s
Iteration  18: 127904.320 ops/s
Iteration  19: 127813.581 ops/s
Iteration  20: 127512.011 ops/s
Iteration  21: 128028.269 ops/s
Iteration  22: 128069.435 ops/s
Iteration  23: 127607.023 ops/s
Iteration  24: 127128.679 ops/s
Iteration  25: 127628.823 ops/s
Iteration  26: 127091.925 ops/s
Iteration  27: 127306.820 ops/s
Iteration  28: 127014.714 ops/s
Iteration  29: 126799.053 ops/s
Iteration  30: 127247.147 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_395._Benchmark.benchmark_Cluster_395":
  127618.512 ±(99.9%) 255.526 ops/s [Average]
  (min, avg, max) = (126799.053, 127618.512, 128348.444), stdev = 382.459
  CI (99.9%): [127362.986, 127874.038] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_395._Benchmark.benchmark_Cluster_395  thrpt   30  127618.512 ± 255.526  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_396._Benchmark.benchmark_Cluster_396$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_396._Benchmark.benchmark_Cluster_396

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 117251.771 ops/s
# Warmup Iteration   2: 147926.319 ops/s
# Warmup Iteration   3: 238539.119 ops/s
# Warmup Iteration   4: 273250.081 ops/s
# Warmup Iteration   5: 270795.890 ops/s
# Warmup Iteration   6: 273669.456 ops/s
# Warmup Iteration   7: 273000.333 ops/s
# Warmup Iteration   8: 273770.300 ops/s
# Warmup Iteration   9: 273259.676 ops/s
# Warmup Iteration  10: 185900.333 ops/s
# Warmup Iteration  11: 272938.019 ops/s
# Warmup Iteration  12: 272661.185 ops/s
# Warmup Iteration  13: 273059.932 ops/s
# Warmup Iteration  14: 272425.664 ops/s
# Warmup Iteration  15: 273711.197 ops/s
# Warmup Iteration  16: 273501.452 ops/s
# Warmup Iteration  17: 273506.081 ops/s
# Warmup Iteration  18: 273334.542 ops/s
# Warmup Iteration  19: 274224.861 ops/s
# Warmup Iteration  20: 274171.230 ops/s
# Warmup Iteration  21: 274064.287 ops/s
# Warmup Iteration  22: 273381.458 ops/s
# Warmup Iteration  23: 273718.013 ops/s
# Warmup Iteration  24: 274217.868 ops/s
# Warmup Iteration  25: 273420.241 ops/s
# Warmup Iteration  26: 273402.045 ops/s
# Warmup Iteration  27: 273747.799 ops/s
# Warmup Iteration  28: 273868.596 ops/s
# Warmup Iteration  29: 273344.716 ops/s
# Warmup Iteration  30: 273715.867 ops/s
Iteration   1: 274066.292 ops/s
Iteration   2: 273775.215 ops/s
Iteration   3: 273268.890 ops/s
Iteration   4: 274414.373 ops/s
Iteration   5: 274292.338 ops/s
Iteration   6: 274183.791 ops/s
Iteration   7: 274319.680 ops/s
Iteration   8: 273932.535 ops/s
Iteration   9: 273696.475 ops/s
Iteration  10: 274201.191 ops/s
Iteration  11: 274374.316 ops/s
Iteration  12: 274167.174 ops/s
Iteration  13: 274251.336 ops/s
Iteration  14: 274099.670 ops/s
Iteration  15: 273414.635 ops/s
Iteration  16: 274413.094 ops/s
Iteration  17: 274278.879 ops/s
Iteration  18: 273747.249 ops/s
Iteration  19: 274071.399 ops/s
Iteration  20: 274091.013 ops/s
Iteration  21: 272817.822 ops/s
Iteration  22: 273789.094 ops/s
Iteration  23: 274647.914 ops/s
Iteration  24: 273780.346 ops/s
Iteration  25: 274142.885 ops/s
Iteration  26: 273357.733 ops/s
Iteration  27: 273543.887 ops/s
Iteration  28: 273761.524 ops/s
Iteration  29: 273503.836 ops/s
Iteration  30: 273669.080 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_396._Benchmark.benchmark_Cluster_396":
  273935.789 ±(99.9%) 273.764 ops/s [Average]
  (min, avg, max) = (272817.822, 273935.789, 274647.914), stdev = 409.758
  CI (99.9%): [273662.025, 274209.553] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_396._Benchmark.benchmark_Cluster_396  thrpt   30  273935.789 ± 273.764  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_397._Benchmark.benchmark_Cluster_397$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_397._Benchmark.benchmark_Cluster_397

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83430.779 ops/s
# Warmup Iteration   2: 96671.165 ops/s
# Warmup Iteration   3: 154396.203 ops/s
# Warmup Iteration   4: 174667.883 ops/s
# Warmup Iteration   5: 173844.379 ops/s
# Warmup Iteration   6: 175722.574 ops/s
# Warmup Iteration   7: 176541.626 ops/s
# Warmup Iteration   8: 177216.712 ops/s
# Warmup Iteration   9: 177153.709 ops/s
# Warmup Iteration  10: 120359.419 ops/s
# Warmup Iteration  11: 177552.177 ops/s
# Warmup Iteration  12: 177108.000 ops/s
# Warmup Iteration  13: 177328.879 ops/s
# Warmup Iteration  14: 177077.160 ops/s
# Warmup Iteration  15: 177366.542 ops/s
# Warmup Iteration  16: 177420.570 ops/s
# Warmup Iteration  17: 177164.267 ops/s
# Warmup Iteration  18: 177086.819 ops/s
# Warmup Iteration  19: 174508.783 ops/s
# Warmup Iteration  20: 174576.181 ops/s
# Warmup Iteration  21: 174809.736 ops/s
# Warmup Iteration  22: 174556.504 ops/s
# Warmup Iteration  23: 174489.222 ops/s
# Warmup Iteration  24: 174643.753 ops/s
# Warmup Iteration  25: 174703.635 ops/s
# Warmup Iteration  26: 174542.024 ops/s
# Warmup Iteration  27: 174868.947 ops/s
# Warmup Iteration  28: 174717.027 ops/s
# Warmup Iteration  29: 174658.298 ops/s
# Warmup Iteration  30: 174816.595 ops/s
Iteration   1: 174642.125 ops/s
Iteration   2: 174489.930 ops/s
Iteration   3: 174428.585 ops/s
Iteration   4: 174517.283 ops/s
Iteration   5: 174150.098 ops/s
Iteration   6: 174632.373 ops/s
Iteration   7: 174515.706 ops/s
Iteration   8: 174180.843 ops/s
Iteration   9: 174804.263 ops/s
Iteration  10: 174677.435 ops/s
Iteration  11: 174427.737 ops/s
Iteration  12: 174252.735 ops/s
Iteration  13: 174732.048 ops/s
Iteration  14: 174470.719 ops/s
Iteration  15: 174580.200 ops/s
Iteration  16: 174555.584 ops/s
Iteration  17: 174524.983 ops/s
Iteration  18: 174474.761 ops/s
Iteration  19: 174500.965 ops/s
Iteration  20: 174389.650 ops/s
Iteration  21: 174211.991 ops/s
Iteration  22: 174575.723 ops/s
Iteration  23: 174544.927 ops/s
Iteration  24: 174356.901 ops/s
Iteration  25: 174358.178 ops/s
Iteration  26: 174425.515 ops/s
Iteration  27: 174499.923 ops/s
Iteration  28: 174822.610 ops/s
Iteration  29: 174747.547 ops/s
Iteration  30: 174485.438 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_397._Benchmark.benchmark_Cluster_397":
  174499.226 ±(99.9%) 113.589 ops/s [Average]
  (min, avg, max) = (174150.098, 174499.226, 174822.610), stdev = 170.014
  CI (99.9%): [174385.637, 174612.815] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_397._Benchmark.benchmark_Cluster_397  thrpt   30  174499.226 ± 113.589  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_398._Benchmark.benchmark_Cluster_398$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_398._Benchmark.benchmark_Cluster_398

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 52342.000 ops/s
# Warmup Iteration   2: 88450.416 ops/s
# Warmup Iteration   3: 146823.526 ops/s
# Warmup Iteration   4: 179166.694 ops/s
# Warmup Iteration   5: 177801.254 ops/s
# Warmup Iteration   6: 179003.223 ops/s
# Warmup Iteration   7: 179212.498 ops/s
# Warmup Iteration   8: 178808.503 ops/s
# Warmup Iteration   9: 120306.640 ops/s
# Warmup Iteration  10: 178930.992 ops/s
# Warmup Iteration  11: 179145.650 ops/s
# Warmup Iteration  12: 178888.078 ops/s
# Warmup Iteration  13: 178783.767 ops/s
# Warmup Iteration  14: 179004.917 ops/s
# Warmup Iteration  15: 178994.590 ops/s
# Warmup Iteration  16: 178703.169 ops/s
# Warmup Iteration  17: 178749.651 ops/s
# Warmup Iteration  18: 179076.785 ops/s
# Warmup Iteration  19: 178681.192 ops/s
# Warmup Iteration  20: 178945.895 ops/s
# Warmup Iteration  21: 179166.396 ops/s
# Warmup Iteration  22: 179318.369 ops/s
# Warmup Iteration  23: 178865.614 ops/s
# Warmup Iteration  24: 179200.256 ops/s
# Warmup Iteration  25: 179135.985 ops/s
# Warmup Iteration  26: 179472.755 ops/s
# Warmup Iteration  27: 179165.147 ops/s
# Warmup Iteration  28: 179228.037 ops/s
# Warmup Iteration  29: 179111.486 ops/s
# Warmup Iteration  30: 179315.426 ops/s
Iteration   1: 178863.667 ops/s
Iteration   2: 178989.124 ops/s
Iteration   3: 179275.424 ops/s
Iteration   4: 179299.843 ops/s
Iteration   5: 179417.345 ops/s
Iteration   6: 178800.554 ops/s
Iteration   7: 179115.105 ops/s
Iteration   8: 178446.391 ops/s
Iteration   9: 178935.818 ops/s
Iteration  10: 179374.259 ops/s
Iteration  11: 179027.926 ops/s
Iteration  12: 179022.457 ops/s
Iteration  13: 178823.505 ops/s
Iteration  14: 178428.067 ops/s
Iteration  15: 178707.076 ops/s
Iteration  16: 178678.574 ops/s
Iteration  17: 177822.773 ops/s
Iteration  18: 178394.725 ops/s
Iteration  19: 178486.535 ops/s
Iteration  20: 178660.188 ops/s
Iteration  21: 178146.992 ops/s
Iteration  22: 178629.149 ops/s
Iteration  23: 178606.511 ops/s
Iteration  24: 178498.958 ops/s
Iteration  25: 178829.068 ops/s
Iteration  26: 178698.483 ops/s
Iteration  27: 178293.748 ops/s
Iteration  28: 179072.463 ops/s
Iteration  29: 178557.741 ops/s
Iteration  30: 177881.793 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_398._Benchmark.benchmark_Cluster_398":
  178726.142 ±(99.9%) 267.060 ops/s [Average]
  (min, avg, max) = (177822.773, 178726.142, 179417.345), stdev = 399.723
  CI (99.9%): [178459.082, 178993.202] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_398._Benchmark.benchmark_Cluster_398  thrpt   30  178726.142 ± 267.060  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_399._Benchmark.benchmark_Cluster_399$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_399._Benchmark.benchmark_Cluster_399

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68719.814 ops/s
# Warmup Iteration   2: 93070.567 ops/s
# Warmup Iteration   3: 145866.039 ops/s
# Warmup Iteration   4: 174234.760 ops/s
# Warmup Iteration   5: 171460.403 ops/s
# Warmup Iteration   6: 174312.177 ops/s
# Warmup Iteration   7: 174305.736 ops/s
# Warmup Iteration   8: 174138.434 ops/s
# Warmup Iteration   9: 174555.300 ops/s
# Warmup Iteration  10: 119607.781 ops/s
# Warmup Iteration  11: 174481.299 ops/s
# Warmup Iteration  12: 174304.835 ops/s
# Warmup Iteration  13: 174667.715 ops/s
# Warmup Iteration  14: 173874.896 ops/s
# Warmup Iteration  15: 174597.988 ops/s
# Warmup Iteration  16: 174050.400 ops/s
# Warmup Iteration  17: 174250.412 ops/s
# Warmup Iteration  18: 174037.425 ops/s
# Warmup Iteration  19: 173851.974 ops/s
# Warmup Iteration  20: 174153.776 ops/s
# Warmup Iteration  21: 174454.496 ops/s
# Warmup Iteration  22: 174997.757 ops/s
# Warmup Iteration  23: 174506.115 ops/s
# Warmup Iteration  24: 174414.414 ops/s
# Warmup Iteration  25: 173917.939 ops/s
# Warmup Iteration  26: 174179.370 ops/s
# Warmup Iteration  27: 173940.816 ops/s
# Warmup Iteration  28: 174109.026 ops/s
# Warmup Iteration  29: 174339.576 ops/s
# Warmup Iteration  30: 174982.030 ops/s
Iteration   1: 174751.885 ops/s
Iteration   2: 173560.284 ops/s
Iteration   3: 173708.458 ops/s
Iteration   4: 174373.531 ops/s
Iteration   5: 173812.817 ops/s
Iteration   6: 173918.189 ops/s
Iteration   7: 173573.068 ops/s
Iteration   8: 173058.817 ops/s
Iteration   9: 172666.624 ops/s
Iteration  10: 173500.253 ops/s
Iteration  11: 174551.332 ops/s
Iteration  12: 174984.729 ops/s
Iteration  13: 174630.205 ops/s
Iteration  14: 174570.540 ops/s
Iteration  15: 174134.909 ops/s
Iteration  16: 174513.209 ops/s
Iteration  17: 174397.669 ops/s
Iteration  18: 175085.515 ops/s
Iteration  19: 174841.082 ops/s
Iteration  20: 174491.401 ops/s
Iteration  21: 174717.107 ops/s
Iteration  22: 174682.101 ops/s
Iteration  23: 174420.365 ops/s
Iteration  24: 174140.787 ops/s
Iteration  25: 175333.166 ops/s
Iteration  26: 174957.140 ops/s
Iteration  27: 174549.906 ops/s
Iteration  28: 174535.874 ops/s
Iteration  29: 174016.694 ops/s
Iteration  30: 174186.669 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_399._Benchmark.benchmark_Cluster_399":
  174288.811 ±(99.9%) 405.369 ops/s [Average]
  (min, avg, max) = (172666.624, 174288.811, 175333.166), stdev = 606.737
  CI (99.9%): [173883.442, 174694.180] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_399._Benchmark.benchmark_Cluster_399  thrpt   30  174288.811 ± 405.369  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_4._Benchmark.benchmark_Cluster_4$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_4._Benchmark.benchmark_Cluster_4

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 68616.361 ops/s
# Warmup Iteration   2: 82219.557 ops/s
# Warmup Iteration   3: 85363.220 ops/s
# Warmup Iteration   4: 93777.101 ops/s
# Warmup Iteration   5: 119756.315 ops/s
# Warmup Iteration   6: 119673.305 ops/s
# Warmup Iteration   7: 119695.917 ops/s
# Warmup Iteration   8: 119910.617 ops/s
# Warmup Iteration   9: 118413.929 ops/s
# Warmup Iteration  10: 119471.513 ops/s
# Warmup Iteration  11: 119685.935 ops/s
# Warmup Iteration  12: 119881.849 ops/s
# Warmup Iteration  13: 120571.704 ops/s
# Warmup Iteration  14: 119349.446 ops/s
# Warmup Iteration  15: 119790.241 ops/s
# Warmup Iteration  16: 119706.007 ops/s
# Warmup Iteration  17: 125044.657 ops/s
# Warmup Iteration  18: 125130.222 ops/s
# Warmup Iteration  19: 118178.438 ops/s
# Warmup Iteration  20: 88896.542 ops/s
# Warmup Iteration  21: 124308.204 ops/s
# Warmup Iteration  22: 124356.000 ops/s
# Warmup Iteration  23: 124098.304 ops/s
# Warmup Iteration  24: 124413.119 ops/s
# Warmup Iteration  25: 124913.225 ops/s
# Warmup Iteration  26: 124329.878 ops/s
# Warmup Iteration  27: 124206.358 ops/s
# Warmup Iteration  28: 124807.172 ops/s
# Warmup Iteration  29: 124833.766 ops/s
# Warmup Iteration  30: 124531.316 ops/s
Iteration   1: 123983.548 ops/s
Iteration   2: 123408.255 ops/s
Iteration   3: 124482.854 ops/s
Iteration   4: 124558.081 ops/s
Iteration   5: 125348.551 ops/s
Iteration   6: 124659.632 ops/s
Iteration   7: 124485.569 ops/s
Iteration   8: 125240.247 ops/s
Iteration   9: 125220.354 ops/s
Iteration  10: 125139.255 ops/s
Iteration  11: 124521.146 ops/s
Iteration  12: 125108.041 ops/s
Iteration  13: 124867.810 ops/s
Iteration  14: 125402.044 ops/s
Iteration  15: 125081.683 ops/s
Iteration  16: 124787.460 ops/s
Iteration  17: 125083.581 ops/s
Iteration  18: 125087.135 ops/s
Iteration  19: 124398.476 ops/s
Iteration  20: 125034.255 ops/s
Iteration  21: 125438.908 ops/s
Iteration  22: 125086.930 ops/s
Iteration  23: 125066.996 ops/s
Iteration  24: 125449.557 ops/s
Iteration  25: 125480.835 ops/s
Iteration  26: 125034.356 ops/s
Iteration  27: 125296.299 ops/s
Iteration  28: 125006.831 ops/s
Iteration  29: 125060.838 ops/s
Iteration  30: 125061.510 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_4._Benchmark.benchmark_Cluster_4":
  124929.368 ±(99.9%) 306.207 ops/s [Average]
  (min, avg, max) = (123408.255, 124929.368, 125480.835), stdev = 458.316
  CI (99.9%): [124623.161, 125235.575] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score     Error  Units
Cluster_4._Benchmark.benchmark_Cluster_4  thrpt   30  124929.368 ± 306.207  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_40._Benchmark.benchmark_Cluster_40$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_40._Benchmark.benchmark_Cluster_40

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69056.836 ops/s
# Warmup Iteration   2: 104414.537 ops/s
# Warmup Iteration   3: 128055.129 ops/s
# Warmup Iteration   4: 176475.369 ops/s
# Warmup Iteration   5: 177041.555 ops/s
# Warmup Iteration   6: 175218.504 ops/s
# Warmup Iteration   7: 176785.488 ops/s
# Warmup Iteration   8: 177163.406 ops/s
# Warmup Iteration   9: 177018.909 ops/s
# Warmup Iteration  10: 176736.258 ops/s
# Warmup Iteration  11: 177039.255 ops/s
# Warmup Iteration  12: 121057.107 ops/s
# Warmup Iteration  13: 176474.481 ops/s
# Warmup Iteration  14: 176620.373 ops/s
# Warmup Iteration  15: 176517.987 ops/s
# Warmup Iteration  16: 176364.318 ops/s
# Warmup Iteration  17: 175015.903 ops/s
# Warmup Iteration  18: 174568.129 ops/s
# Warmup Iteration  19: 174810.380 ops/s
# Warmup Iteration  20: 174347.059 ops/s
# Warmup Iteration  21: 174985.437 ops/s
# Warmup Iteration  22: 174675.773 ops/s
# Warmup Iteration  23: 175213.148 ops/s
# Warmup Iteration  24: 174408.615 ops/s
# Warmup Iteration  25: 174820.116 ops/s
# Warmup Iteration  26: 174476.804 ops/s
# Warmup Iteration  27: 175017.533 ops/s
# Warmup Iteration  28: 174825.409 ops/s
# Warmup Iteration  29: 174755.889 ops/s
# Warmup Iteration  30: 174365.270 ops/s
Iteration   1: 174401.347 ops/s
Iteration   2: 174045.684 ops/s
Iteration   3: 174379.401 ops/s
Iteration   4: 174619.785 ops/s
Iteration   5: 174812.172 ops/s
Iteration   6: 174822.019 ops/s
Iteration   7: 174777.110 ops/s
Iteration   8: 175168.532 ops/s
Iteration   9: 174963.159 ops/s
Iteration  10: 174755.187 ops/s
Iteration  11: 174932.055 ops/s
Iteration  12: 175413.094 ops/s
Iteration  13: 175089.351 ops/s
Iteration  14: 174560.432 ops/s
Iteration  15: 174853.236 ops/s
Iteration  16: 174719.286 ops/s
Iteration  17: 174887.143 ops/s
Iteration  18: 174753.993 ops/s
Iteration  19: 175124.973 ops/s
Iteration  20: 174760.964 ops/s
Iteration  21: 174411.379 ops/s
Iteration  22: 174970.608 ops/s
Iteration  23: 175226.607 ops/s
Iteration  24: 174935.948 ops/s
Iteration  25: 174759.065 ops/s
Iteration  26: 175127.365 ops/s
Iteration  27: 175219.200 ops/s
Iteration  28: 175211.944 ops/s
Iteration  29: 175142.550 ops/s
Iteration  30: 175046.145 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_40._Benchmark.benchmark_Cluster_40":
  174862.991 ±(99.9%) 202.242 ops/s [Average]
  (min, avg, max) = (174045.684, 174862.991, 175413.094), stdev = 302.706
  CI (99.9%): [174660.749, 175065.233] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_40._Benchmark.benchmark_Cluster_40  thrpt   30  174862.991 ± 202.242  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_400._Benchmark.benchmark_Cluster_400$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_400._Benchmark.benchmark_Cluster_400

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 111798.874 ops/s
# Warmup Iteration   2: 129055.811 ops/s
# Warmup Iteration   3: 128652.970 ops/s
# Warmup Iteration   4: 179336.499 ops/s
# Warmup Iteration   5: 189908.954 ops/s
# Warmup Iteration   6: 188622.308 ops/s
# Warmup Iteration   7: 188414.168 ops/s
# Warmup Iteration   8: 185504.791 ops/s
# Warmup Iteration   9: 189155.072 ops/s
# Warmup Iteration  10: 188845.840 ops/s
# Warmup Iteration  11: 189246.466 ops/s
# Warmup Iteration  12: 189531.356 ops/s
# Warmup Iteration  13: 189158.020 ops/s
# Warmup Iteration  14: 188879.727 ops/s
# Warmup Iteration  15: 188977.903 ops/s
# Warmup Iteration  16: 167210.321 ops/s
# Warmup Iteration  17: 151014.306 ops/s
# Warmup Iteration  18: 189578.396 ops/s
# Warmup Iteration  19: 189370.166 ops/s
# Warmup Iteration  20: 189661.933 ops/s
# Warmup Iteration  21: 188466.746 ops/s
# Warmup Iteration  22: 189215.010 ops/s
# Warmup Iteration  23: 189510.178 ops/s
# Warmup Iteration  24: 188614.810 ops/s
# Warmup Iteration  25: 187928.789 ops/s
# Warmup Iteration  26: 187940.124 ops/s
# Warmup Iteration  27: 188385.638 ops/s
# Warmup Iteration  28: 189790.461 ops/s
# Warmup Iteration  29: 188267.727 ops/s
# Warmup Iteration  30: 187989.221 ops/s
Iteration   1: 188572.993 ops/s
Iteration   2: 187750.645 ops/s
Iteration   3: 188963.429 ops/s
Iteration   4: 190803.325 ops/s
Iteration   5: 190302.088 ops/s
Iteration   6: 188438.266 ops/s
Iteration   7: 189040.119 ops/s
Iteration   8: 188675.265 ops/s
Iteration   9: 190867.557 ops/s
Iteration  10: 189251.777 ops/s
Iteration  11: 189265.033 ops/s
Iteration  12: 188338.339 ops/s
Iteration  13: 189141.993 ops/s
Iteration  14: 187733.809 ops/s
Iteration  15: 187862.626 ops/s
Iteration  16: 189810.093 ops/s
Iteration  17: 190560.527 ops/s
Iteration  18: 190298.190 ops/s
Iteration  19: 187707.523 ops/s
Iteration  20: 190594.752 ops/s
Iteration  21: 190192.940 ops/s
Iteration  22: 190320.808 ops/s
Iteration  23: 188274.520 ops/s
Iteration  24: 188192.916 ops/s
Iteration  25: 189498.456 ops/s
Iteration  26: 189594.485 ops/s
Iteration  27: 187999.419 ops/s
Iteration  28: 189159.727 ops/s
Iteration  29: 190642.331 ops/s
Iteration  30: 189541.065 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_400._Benchmark.benchmark_Cluster_400":
  189246.501 ±(99.9%) 682.048 ops/s [Average]
  (min, avg, max) = (187707.523, 189246.501, 190867.557), stdev = 1020.857
  CI (99.9%): [188564.453, 189928.548] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_400._Benchmark.benchmark_Cluster_400  thrpt   30  189246.501 ± 682.048  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_401._Benchmark.benchmark_Cluster_401$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_401._Benchmark.benchmark_Cluster_401

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 108004.727 ops/s
# Warmup Iteration   2: 122485.125 ops/s
# Warmup Iteration   3: 122414.517 ops/s
# Warmup Iteration   4: 124204.404 ops/s
# Warmup Iteration   5: 159922.461 ops/s
# Warmup Iteration   6: 161105.789 ops/s
# Warmup Iteration   7: 160659.931 ops/s
# Warmup Iteration   8: 159993.352 ops/s
# Warmup Iteration   9: 161453.188 ops/s
# Warmup Iteration  10: 158910.551 ops/s
# Warmup Iteration  11: 161353.913 ops/s
# Warmup Iteration  12: 161573.200 ops/s
# Warmup Iteration  13: 161368.250 ops/s
# Warmup Iteration  14: 160598.597 ops/s
# Warmup Iteration  15: 160691.275 ops/s
# Warmup Iteration  16: 160873.141 ops/s
# Warmup Iteration  17: 167557.845 ops/s
# Warmup Iteration  18: 167710.286 ops/s
# Warmup Iteration  19: 167191.410 ops/s
# Warmup Iteration  20: 167738.716 ops/s
# Warmup Iteration  21: 167842.491 ops/s
# Warmup Iteration  22: 155236.751 ops/s
# Warmup Iteration  23: 127679.121 ops/s
# Warmup Iteration  24: 168043.764 ops/s
# Warmup Iteration  25: 167934.243 ops/s
# Warmup Iteration  26: 167539.966 ops/s
# Warmup Iteration  27: 167689.910 ops/s
# Warmup Iteration  28: 167179.306 ops/s
# Warmup Iteration  29: 167476.707 ops/s
# Warmup Iteration  30: 166576.102 ops/s
Iteration   1: 167525.577 ops/s
Iteration   2: 167580.031 ops/s
Iteration   3: 168030.714 ops/s
Iteration   4: 167462.228 ops/s
Iteration   5: 167489.938 ops/s
Iteration   6: 167420.927 ops/s
Iteration   7: 167929.624 ops/s
Iteration   8: 167738.272 ops/s
Iteration   9: 167854.972 ops/s
Iteration  10: 167635.536 ops/s
Iteration  11: 167391.651 ops/s
Iteration  12: 167829.758 ops/s
Iteration  13: 167755.176 ops/s
Iteration  14: 167496.873 ops/s
Iteration  15: 167394.361 ops/s
Iteration  16: 167947.404 ops/s
Iteration  17: 167899.290 ops/s
Iteration  18: 168024.011 ops/s
Iteration  19: 167923.212 ops/s
Iteration  20: 167472.565 ops/s
Iteration  21: 167940.422 ops/s
Iteration  22: 167952.622 ops/s
Iteration  23: 167521.080 ops/s
Iteration  24: 167414.517 ops/s
Iteration  25: 167306.368 ops/s
Iteration  26: 167569.662 ops/s
Iteration  27: 167458.126 ops/s
Iteration  28: 167452.369 ops/s
Iteration  29: 167372.568 ops/s
Iteration  30: 168323.946 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_401._Benchmark.benchmark_Cluster_401":
  167670.460 ±(99.9%) 174.109 ops/s [Average]
  (min, avg, max) = (167306.368, 167670.460, 168323.946), stdev = 260.598
  CI (99.9%): [167496.351, 167844.569] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_401._Benchmark.benchmark_Cluster_401  thrpt   30  167670.460 ± 174.109  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_402._Benchmark.benchmark_Cluster_402$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_402._Benchmark.benchmark_Cluster_402

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72265.413 ops/s
# Warmup Iteration   2: 91684.283 ops/s
# Warmup Iteration   3: 128907.570 ops/s
# Warmup Iteration   4: 160277.634 ops/s
# Warmup Iteration   5: 158810.839 ops/s
# Warmup Iteration   6: 159522.258 ops/s
# Warmup Iteration   7: 159983.848 ops/s
# Warmup Iteration   8: 159797.578 ops/s
# Warmup Iteration   9: 160344.141 ops/s
# Warmup Iteration  10: 160397.281 ops/s
# Warmup Iteration  11: 109343.049 ops/s
# Warmup Iteration  12: 160059.347 ops/s
# Warmup Iteration  13: 159932.831 ops/s
# Warmup Iteration  14: 159360.425 ops/s
# Warmup Iteration  15: 159383.650 ops/s
# Warmup Iteration  16: 159902.750 ops/s
# Warmup Iteration  17: 159799.134 ops/s
# Warmup Iteration  18: 159987.718 ops/s
# Warmup Iteration  19: 160105.297 ops/s
# Warmup Iteration  20: 160020.900 ops/s
# Warmup Iteration  21: 159865.890 ops/s
# Warmup Iteration  22: 159725.634 ops/s
# Warmup Iteration  23: 160067.359 ops/s
# Warmup Iteration  24: 159808.896 ops/s
# Warmup Iteration  25: 160212.722 ops/s
# Warmup Iteration  26: 160097.907 ops/s
# Warmup Iteration  27: 160022.073 ops/s
# Warmup Iteration  28: 159669.613 ops/s
# Warmup Iteration  29: 159734.906 ops/s
# Warmup Iteration  30: 160016.133 ops/s
Iteration   1: 159998.032 ops/s
Iteration   2: 160188.147 ops/s
Iteration   3: 159985.255 ops/s
Iteration   4: 159169.751 ops/s
Iteration   5: 159602.744 ops/s
Iteration   6: 159638.833 ops/s
Iteration   7: 159597.955 ops/s
Iteration   8: 159839.415 ops/s
Iteration   9: 160164.842 ops/s
Iteration  10: 159845.432 ops/s
Iteration  11: 159254.444 ops/s
Iteration  12: 159996.403 ops/s
Iteration  13: 159702.891 ops/s
Iteration  14: 159005.622 ops/s
Iteration  15: 159755.854 ops/s
Iteration  16: 159489.961 ops/s
Iteration  17: 159731.960 ops/s
Iteration  18: 159681.824 ops/s
Iteration  19: 160047.794 ops/s
Iteration  20: 159595.238 ops/s
Iteration  21: 159806.563 ops/s
Iteration  22: 159471.684 ops/s
Iteration  23: 159474.174 ops/s
Iteration  24: 159836.211 ops/s
Iteration  25: 159793.129 ops/s
Iteration  26: 159418.817 ops/s
Iteration  27: 159071.240 ops/s
Iteration  28: 159742.594 ops/s
Iteration  29: 159259.508 ops/s
Iteration  30: 159703.677 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_402._Benchmark.benchmark_Cluster_402":
  159662.333 ±(99.9%) 203.422 ops/s [Average]
  (min, avg, max) = (159005.622, 159662.333, 160188.147), stdev = 304.472
  CI (99.9%): [159458.911, 159865.755] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_402._Benchmark.benchmark_Cluster_402  thrpt   30  159662.333 ± 203.422  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_403._Benchmark.benchmark_Cluster_403$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_403._Benchmark.benchmark_Cluster_403

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83091.055 ops/s
# Warmup Iteration   2: 127110.526 ops/s
# Warmup Iteration   3: 190849.226 ops/s
# Warmup Iteration   4: 234541.158 ops/s
# Warmup Iteration   5: 232002.185 ops/s
# Warmup Iteration   6: 234284.730 ops/s
# Warmup Iteration   7: 234501.349 ops/s
# Warmup Iteration   8: 234693.942 ops/s
# Warmup Iteration   9: 234594.380 ops/s
# Warmup Iteration  10: 161343.619 ops/s
# Warmup Iteration  11: 234712.254 ops/s
# Warmup Iteration  12: 234326.590 ops/s
# Warmup Iteration  13: 234509.784 ops/s
# Warmup Iteration  14: 234878.240 ops/s
# Warmup Iteration  15: 234746.678 ops/s
# Warmup Iteration  16: 234629.245 ops/s
# Warmup Iteration  17: 234357.226 ops/s
# Warmup Iteration  18: 234744.151 ops/s
# Warmup Iteration  19: 235078.819 ops/s
# Warmup Iteration  20: 235043.038 ops/s
# Warmup Iteration  21: 235119.944 ops/s
# Warmup Iteration  22: 235031.866 ops/s
# Warmup Iteration  23: 234455.850 ops/s
# Warmup Iteration  24: 234993.199 ops/s
# Warmup Iteration  25: 235473.839 ops/s
# Warmup Iteration  26: 234359.730 ops/s
# Warmup Iteration  27: 234328.946 ops/s
# Warmup Iteration  28: 234676.997 ops/s
# Warmup Iteration  29: 234594.944 ops/s
# Warmup Iteration  30: 234940.491 ops/s
Iteration   1: 234405.173 ops/s
Iteration   2: 234982.497 ops/s
Iteration   3: 234349.828 ops/s
Iteration   4: 235135.559 ops/s
Iteration   5: 235218.685 ops/s
Iteration   6: 234552.823 ops/s
Iteration   7: 234891.627 ops/s
Iteration   8: 235103.471 ops/s
Iteration   9: 234008.263 ops/s
Iteration  10: 234606.032 ops/s
Iteration  11: 234698.660 ops/s
Iteration  12: 234416.330 ops/s
Iteration  13: 234207.474 ops/s
Iteration  14: 233997.360 ops/s
Iteration  15: 233844.580 ops/s
Iteration  16: 235126.174 ops/s
Iteration  17: 234904.741 ops/s
Iteration  18: 233964.974 ops/s
Iteration  19: 234048.806 ops/s
Iteration  20: 234138.013 ops/s
Iteration  21: 233433.414 ops/s
Iteration  22: 234570.864 ops/s
Iteration  23: 234639.665 ops/s
Iteration  24: 234592.240 ops/s
Iteration  25: 234461.923 ops/s
Iteration  26: 234535.038 ops/s
Iteration  27: 234844.421 ops/s
Iteration  28: 234673.501 ops/s
Iteration  29: 233804.807 ops/s
Iteration  30: 233171.191 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_403._Benchmark.benchmark_Cluster_403":
  234444.271 ±(99.9%) 338.112 ops/s [Average]
  (min, avg, max) = (233171.191, 234444.271, 235218.685), stdev = 506.070
  CI (99.9%): [234106.159, 234782.383] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_403._Benchmark.benchmark_Cluster_403  thrpt   30  234444.271 ± 338.112  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_404._Benchmark.benchmark_Cluster_404$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_404._Benchmark.benchmark_Cluster_404

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71402.535 ops/s
# Warmup Iteration   2: 96916.258 ops/s
# Warmup Iteration   3: 151194.577 ops/s
# Warmup Iteration   4: 178097.576 ops/s
# Warmup Iteration   5: 176964.946 ops/s
# Warmup Iteration   6: 178783.518 ops/s
# Warmup Iteration   7: 178829.017 ops/s
# Warmup Iteration   8: 178721.325 ops/s
# Warmup Iteration   9: 178454.530 ops/s
# Warmup Iteration  10: 122562.400 ops/s
# Warmup Iteration  11: 178934.658 ops/s
# Warmup Iteration  12: 178678.878 ops/s
# Warmup Iteration  13: 178614.571 ops/s
# Warmup Iteration  14: 178685.562 ops/s
# Warmup Iteration  15: 178493.860 ops/s
# Warmup Iteration  16: 178821.230 ops/s
# Warmup Iteration  17: 179279.714 ops/s
# Warmup Iteration  18: 178456.504 ops/s
# Warmup Iteration  19: 178376.376 ops/s
# Warmup Iteration  20: 178721.773 ops/s
# Warmup Iteration  21: 178457.410 ops/s
# Warmup Iteration  22: 178336.326 ops/s
# Warmup Iteration  23: 178839.758 ops/s
# Warmup Iteration  24: 178375.142 ops/s
# Warmup Iteration  25: 178254.669 ops/s
# Warmup Iteration  26: 178494.556 ops/s
# Warmup Iteration  27: 178253.345 ops/s
# Warmup Iteration  28: 178977.623 ops/s
# Warmup Iteration  29: 178819.508 ops/s
# Warmup Iteration  30: 179232.517 ops/s
Iteration   1: 178977.087 ops/s
Iteration   2: 179072.065 ops/s
Iteration   3: 178658.844 ops/s
Iteration   4: 178369.995 ops/s
Iteration   5: 178101.919 ops/s
Iteration   6: 178489.931 ops/s
Iteration   7: 178623.417 ops/s
Iteration   8: 178686.974 ops/s
Iteration   9: 178992.004 ops/s
Iteration  10: 179165.028 ops/s
Iteration  11: 178777.958 ops/s
Iteration  12: 178744.346 ops/s
Iteration  13: 178691.405 ops/s
Iteration  14: 179173.839 ops/s
Iteration  15: 178372.792 ops/s
Iteration  16: 178148.469 ops/s
Iteration  17: 177952.043 ops/s
Iteration  18: 178680.362 ops/s
Iteration  19: 178656.319 ops/s
Iteration  20: 177762.252 ops/s
Iteration  21: 178726.578 ops/s
Iteration  22: 178668.863 ops/s
Iteration  23: 178610.877 ops/s
Iteration  24: 178664.101 ops/s
Iteration  25: 178502.727 ops/s
Iteration  26: 178838.982 ops/s
Iteration  27: 178643.589 ops/s
Iteration  28: 178608.968 ops/s
Iteration  29: 178596.170 ops/s
Iteration  30: 178133.694 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_404._Benchmark.benchmark_Cluster_404":
  178603.053 ±(99.9%) 223.673 ops/s [Average]
  (min, avg, max) = (177762.252, 178603.053, 179173.839), stdev = 334.783
  CI (99.9%): [178379.380, 178826.726] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_404._Benchmark.benchmark_Cluster_404  thrpt   30  178603.053 ± 223.673  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_405._Benchmark.benchmark_Cluster_405$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_405._Benchmark.benchmark_Cluster_405

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51624.951 ops/s
# Warmup Iteration   2: 72394.656 ops/s
# Warmup Iteration   3: 101540.702 ops/s
# Warmup Iteration   4: 132732.163 ops/s
# Warmup Iteration   5: 131120.595 ops/s
# Warmup Iteration   6: 132682.036 ops/s
# Warmup Iteration   7: 132042.027 ops/s
# Warmup Iteration   8: 130935.991 ops/s
# Warmup Iteration   9: 132482.429 ops/s
# Warmup Iteration  10: 119465.269 ops/s
# Warmup Iteration  11: 99971.790 ops/s
# Warmup Iteration  12: 132963.278 ops/s
# Warmup Iteration  13: 132785.948 ops/s
# Warmup Iteration  14: 132464.992 ops/s
# Warmup Iteration  15: 132974.847 ops/s
# Warmup Iteration  16: 132532.041 ops/s
# Warmup Iteration  17: 136643.039 ops/s
# Warmup Iteration  18: 137226.992 ops/s
# Warmup Iteration  19: 137214.624 ops/s
# Warmup Iteration  20: 137722.312 ops/s
# Warmup Iteration  21: 137313.613 ops/s
# Warmup Iteration  22: 137738.083 ops/s
# Warmup Iteration  23: 137094.508 ops/s
# Warmup Iteration  24: 137412.899 ops/s
# Warmup Iteration  25: 136615.809 ops/s
# Warmup Iteration  26: 137437.956 ops/s
# Warmup Iteration  27: 137112.325 ops/s
# Warmup Iteration  28: 136915.010 ops/s
# Warmup Iteration  29: 137360.202 ops/s
# Warmup Iteration  30: 137659.548 ops/s
Iteration   1: 136874.367 ops/s
Iteration   2: 137103.163 ops/s
Iteration   3: 136382.991 ops/s
Iteration   4: 135905.426 ops/s
Iteration   5: 136273.588 ops/s
Iteration   6: 137536.412 ops/s
Iteration   7: 137767.757 ops/s
Iteration   8: 137722.836 ops/s
Iteration   9: 136893.502 ops/s
Iteration  10: 137042.480 ops/s
Iteration  11: 137885.656 ops/s
Iteration  12: 137464.081 ops/s
Iteration  13: 136290.442 ops/s
Iteration  14: 136529.764 ops/s
Iteration  15: 137677.413 ops/s
Iteration  16: 137041.146 ops/s
Iteration  17: 137548.360 ops/s
Iteration  18: 137054.392 ops/s
Iteration  19: 137408.540 ops/s
Iteration  20: 136405.916 ops/s
Iteration  21: 136727.489 ops/s
Iteration  22: 137145.518 ops/s
Iteration  23: 137341.664 ops/s
Iteration  24: 137120.831 ops/s
Iteration  25: 137769.046 ops/s
Iteration  26: 137745.013 ops/s
Iteration  27: 137436.031 ops/s
Iteration  28: 137453.966 ops/s
Iteration  29: 137342.126 ops/s
Iteration  30: 137765.387 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_405._Benchmark.benchmark_Cluster_405":
  137155.177 ±(99.9%) 357.517 ops/s [Average]
  (min, avg, max) = (135905.426, 137155.177, 137885.656), stdev = 535.115
  CI (99.9%): [136797.660, 137512.694] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_405._Benchmark.benchmark_Cluster_405  thrpt   30  137155.177 ± 357.517  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_406._Benchmark.benchmark_Cluster_406$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_406._Benchmark.benchmark_Cluster_406

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 108563.339 ops/s
# Warmup Iteration   2: 118974.550 ops/s
# Warmup Iteration   3: 119507.548 ops/s
# Warmup Iteration   4: 140049.921 ops/s
# Warmup Iteration   5: 163782.715 ops/s
# Warmup Iteration   6: 164084.651 ops/s
# Warmup Iteration   7: 164327.702 ops/s
# Warmup Iteration   8: 164464.008 ops/s
# Warmup Iteration   9: 162586.476 ops/s
# Warmup Iteration  10: 164337.665 ops/s
# Warmup Iteration  11: 163827.701 ops/s
# Warmup Iteration  12: 164371.512 ops/s
# Warmup Iteration  13: 163846.550 ops/s
# Warmup Iteration  14: 163769.822 ops/s
# Warmup Iteration  15: 163937.382 ops/s
# Warmup Iteration  16: 164066.265 ops/s
# Warmup Iteration  17: 171489.273 ops/s
# Warmup Iteration  18: 171087.975 ops/s
# Warmup Iteration  19: 148234.953 ops/s
# Warmup Iteration  20: 140437.668 ops/s
# Warmup Iteration  21: 170551.810 ops/s
# Warmup Iteration  22: 170766.373 ops/s
# Warmup Iteration  23: 170827.396 ops/s
# Warmup Iteration  24: 170874.474 ops/s
# Warmup Iteration  25: 170652.516 ops/s
# Warmup Iteration  26: 170814.842 ops/s
# Warmup Iteration  27: 170616.720 ops/s
# Warmup Iteration  28: 170999.395 ops/s
# Warmup Iteration  29: 170700.938 ops/s
# Warmup Iteration  30: 169942.989 ops/s
Iteration   1: 170469.830 ops/s
Iteration   2: 170352.540 ops/s
Iteration   3: 170826.710 ops/s
Iteration   4: 170545.775 ops/s
Iteration   5: 171272.883 ops/s
Iteration   6: 171226.435 ops/s
Iteration   7: 170828.551 ops/s
Iteration   8: 170253.475 ops/s
Iteration   9: 170004.171 ops/s
Iteration  10: 170933.650 ops/s
Iteration  11: 170613.602 ops/s
Iteration  12: 170847.452 ops/s
Iteration  13: 171158.203 ops/s
Iteration  14: 170886.708 ops/s
Iteration  15: 170964.205 ops/s
Iteration  16: 171095.260 ops/s
Iteration  17: 171184.430 ops/s
Iteration  18: 171062.565 ops/s
Iteration  19: 170586.724 ops/s
Iteration  20: 170062.198 ops/s
Iteration  21: 170666.253 ops/s
Iteration  22: 170683.158 ops/s
Iteration  23: 170576.180 ops/s
Iteration  24: 169406.171 ops/s
Iteration  25: 169082.556 ops/s
Iteration  26: 169011.223 ops/s
Iteration  27: 170215.936 ops/s
Iteration  28: 170822.041 ops/s
Iteration  29: 170955.326 ops/s
Iteration  30: 170181.000 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_406._Benchmark.benchmark_Cluster_406":
  170559.174 ±(99.9%) 392.467 ops/s [Average]
  (min, avg, max) = (169011.223, 170559.174, 171272.883), stdev = 587.426
  CI (99.9%): [170166.707, 170951.640] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_406._Benchmark.benchmark_Cluster_406  thrpt   30  170559.174 ± 392.467  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_407._Benchmark.benchmark_Cluster_407$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_407._Benchmark.benchmark_Cluster_407

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 81767.155 ops/s
# Warmup Iteration   2: 90967.912 ops/s
# Warmup Iteration   3: 116912.293 ops/s
# Warmup Iteration   4: 153320.900 ops/s
# Warmup Iteration   5: 153045.841 ops/s
# Warmup Iteration   6: 151758.854 ops/s
# Warmup Iteration   7: 153408.676 ops/s
# Warmup Iteration   8: 153433.678 ops/s
# Warmup Iteration   9: 153062.247 ops/s
# Warmup Iteration  10: 153060.948 ops/s
# Warmup Iteration  11: 152498.769 ops/s
# Warmup Iteration  12: 119769.091 ops/s
# Warmup Iteration  13: 135882.891 ops/s
# Warmup Iteration  14: 152902.519 ops/s
# Warmup Iteration  15: 152096.089 ops/s
# Warmup Iteration  16: 152601.677 ops/s
# Warmup Iteration  17: 157730.770 ops/s
# Warmup Iteration  18: 157692.685 ops/s
# Warmup Iteration  19: 157634.315 ops/s
# Warmup Iteration  20: 157919.658 ops/s
# Warmup Iteration  21: 158042.089 ops/s
# Warmup Iteration  22: 157860.565 ops/s
# Warmup Iteration  23: 157496.645 ops/s
# Warmup Iteration  24: 157987.548 ops/s
# Warmup Iteration  25: 158242.141 ops/s
# Warmup Iteration  26: 157428.215 ops/s
# Warmup Iteration  27: 157854.059 ops/s
# Warmup Iteration  28: 157702.493 ops/s
# Warmup Iteration  29: 157420.841 ops/s
# Warmup Iteration  30: 157689.123 ops/s
Iteration   1: 157636.453 ops/s
Iteration   2: 157623.189 ops/s
Iteration   3: 157807.981 ops/s
Iteration   4: 157601.327 ops/s
Iteration   5: 157747.937 ops/s
Iteration   6: 157917.349 ops/s
Iteration   7: 157806.402 ops/s
Iteration   8: 157530.014 ops/s
Iteration   9: 157769.510 ops/s
Iteration  10: 157569.931 ops/s
Iteration  11: 157744.572 ops/s
Iteration  12: 157828.940 ops/s
Iteration  13: 157471.163 ops/s
Iteration  14: 157511.610 ops/s
Iteration  15: 156716.173 ops/s
Iteration  16: 157691.638 ops/s
Iteration  17: 157582.312 ops/s
Iteration  18: 157442.085 ops/s
Iteration  19: 157333.213 ops/s
Iteration  20: 157275.293 ops/s
Iteration  21: 157564.091 ops/s
Iteration  22: 156639.391 ops/s
Iteration  23: 156997.419 ops/s
Iteration  24: 156597.301 ops/s
Iteration  25: 157749.528 ops/s
Iteration  26: 157349.761 ops/s
Iteration  27: 157099.090 ops/s
Iteration  28: 157422.369 ops/s
Iteration  29: 157624.305 ops/s
Iteration  30: 157102.565 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_407._Benchmark.benchmark_Cluster_407":
  157458.430 ±(99.9%) 236.727 ops/s [Average]
  (min, avg, max) = (156597.301, 157458.430, 157917.349), stdev = 354.322
  CI (99.9%): [157221.703, 157695.157] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_407._Benchmark.benchmark_Cluster_407  thrpt   30  157458.430 ± 236.727  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_408._Benchmark.benchmark_Cluster_408$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_408._Benchmark.benchmark_Cluster_408

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96074.867 ops/s
# Warmup Iteration   2: 131378.494 ops/s
# Warmup Iteration   3: 199037.276 ops/s
# Warmup Iteration   4: 240475.491 ops/s
# Warmup Iteration   5: 237546.726 ops/s
# Warmup Iteration   6: 239232.161 ops/s
# Warmup Iteration   7: 240195.659 ops/s
# Warmup Iteration   8: 240917.077 ops/s
# Warmup Iteration   9: 240316.976 ops/s
# Warmup Iteration  10: 166107.258 ops/s
# Warmup Iteration  11: 239037.871 ops/s
# Warmup Iteration  12: 240592.507 ops/s
# Warmup Iteration  13: 241035.195 ops/s
# Warmup Iteration  14: 241116.918 ops/s
# Warmup Iteration  15: 240888.608 ops/s
# Warmup Iteration  16: 240968.443 ops/s
# Warmup Iteration  17: 242999.767 ops/s
# Warmup Iteration  18: 242776.291 ops/s
# Warmup Iteration  19: 243093.181 ops/s
# Warmup Iteration  20: 242779.907 ops/s
# Warmup Iteration  21: 242587.246 ops/s
# Warmup Iteration  22: 242558.727 ops/s
# Warmup Iteration  23: 242791.004 ops/s
# Warmup Iteration  24: 242156.813 ops/s
# Warmup Iteration  25: 242817.669 ops/s
# Warmup Iteration  26: 241733.207 ops/s
# Warmup Iteration  27: 242984.761 ops/s
# Warmup Iteration  28: 242416.847 ops/s
# Warmup Iteration  29: 242261.642 ops/s
# Warmup Iteration  30: 242173.976 ops/s
Iteration   1: 241609.749 ops/s
Iteration   2: 242936.087 ops/s
Iteration   3: 243105.043 ops/s
Iteration   4: 242194.195 ops/s
Iteration   5: 241868.544 ops/s
Iteration   6: 241706.101 ops/s
Iteration   7: 242368.164 ops/s
Iteration   8: 241087.709 ops/s
Iteration   9: 241515.338 ops/s
Iteration  10: 241669.911 ops/s
Iteration  11: 241801.422 ops/s
Iteration  12: 241136.721 ops/s
Iteration  13: 241040.032 ops/s
Iteration  14: 241356.745 ops/s
Iteration  15: 242441.430 ops/s
Iteration  16: 242295.588 ops/s
Iteration  17: 242674.844 ops/s
Iteration  18: 242855.654 ops/s
Iteration  19: 242529.771 ops/s
Iteration  20: 243185.721 ops/s
Iteration  21: 243021.355 ops/s
Iteration  22: 242703.386 ops/s
Iteration  23: 242788.784 ops/s
Iteration  24: 242819.903 ops/s
Iteration  25: 243224.114 ops/s
Iteration  26: 243140.405 ops/s
Iteration  27: 243211.088 ops/s
Iteration  28: 243006.663 ops/s
Iteration  29: 242825.216 ops/s
Iteration  30: 243278.556 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_408._Benchmark.benchmark_Cluster_408":
  242379.941 ±(99.9%) 481.712 ops/s [Average]
  (min, avg, max) = (241040.032, 242379.941, 243278.556), stdev = 721.004
  CI (99.9%): [241898.229, 242861.653] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_408._Benchmark.benchmark_Cluster_408  thrpt   30  242379.941 ± 481.712  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_409._Benchmark.benchmark_Cluster_409$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_409._Benchmark.benchmark_Cluster_409

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74912.281 ops/s
# Warmup Iteration   2: 112480.300 ops/s
# Warmup Iteration   3: 200826.656 ops/s
# Warmup Iteration   4: 227387.853 ops/s
# Warmup Iteration   5: 225624.022 ops/s
# Warmup Iteration   6: 227225.973 ops/s
# Warmup Iteration   7: 227832.130 ops/s
# Warmup Iteration   8: 214075.432 ops/s
# Warmup Iteration   9: 170562.634 ops/s
# Warmup Iteration  10: 226967.480 ops/s
# Warmup Iteration  11: 227900.949 ops/s
# Warmup Iteration  12: 227755.222 ops/s
# Warmup Iteration  13: 226992.864 ops/s
# Warmup Iteration  14: 227587.570 ops/s
# Warmup Iteration  15: 227555.745 ops/s
# Warmup Iteration  16: 227387.870 ops/s
# Warmup Iteration  17: 227890.263 ops/s
# Warmup Iteration  18: 226690.420 ops/s
# Warmup Iteration  19: 227242.049 ops/s
# Warmup Iteration  20: 227197.375 ops/s
# Warmup Iteration  21: 227391.340 ops/s
# Warmup Iteration  22: 227629.612 ops/s
# Warmup Iteration  23: 227596.384 ops/s
# Warmup Iteration  24: 227127.113 ops/s
# Warmup Iteration  25: 227306.879 ops/s
# Warmup Iteration  26: 227508.275 ops/s
# Warmup Iteration  27: 226432.866 ops/s
# Warmup Iteration  28: 227627.092 ops/s
# Warmup Iteration  29: 227213.383 ops/s
# Warmup Iteration  30: 227531.856 ops/s
Iteration   1: 226056.251 ops/s
Iteration   2: 227735.872 ops/s
Iteration   3: 227645.967 ops/s
Iteration   4: 227524.190 ops/s
Iteration   5: 227563.738 ops/s
Iteration   6: 227501.885 ops/s
Iteration   7: 228304.801 ops/s
Iteration   8: 227216.933 ops/s
Iteration   9: 227449.273 ops/s
Iteration  10: 227196.219 ops/s
Iteration  11: 226918.599 ops/s
Iteration  12: 227019.755 ops/s
Iteration  13: 227572.577 ops/s
Iteration  14: 228285.036 ops/s
Iteration  15: 226137.947 ops/s
Iteration  16: 227746.268 ops/s
Iteration  17: 227827.115 ops/s
Iteration  18: 227035.145 ops/s
Iteration  19: 227661.400 ops/s
Iteration  20: 227142.742 ops/s
Iteration  21: 225876.973 ops/s
Iteration  22: 226419.494 ops/s
Iteration  23: 227913.595 ops/s
Iteration  24: 227115.102 ops/s
Iteration  25: 226829.938 ops/s
Iteration  26: 227204.442 ops/s
Iteration  27: 226908.076 ops/s
Iteration  28: 228015.323 ops/s
Iteration  29: 227534.868 ops/s
Iteration  30: 227147.770 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_409._Benchmark.benchmark_Cluster_409":
  227283.576 ±(99.9%) 403.257 ops/s [Average]
  (min, avg, max) = (225876.973, 227283.576, 228304.801), stdev = 603.576
  CI (99.9%): [226880.320, 227686.833] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_409._Benchmark.benchmark_Cluster_409  thrpt   30  227283.576 ± 403.257  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_41._Benchmark.benchmark_Cluster_41$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_41._Benchmark.benchmark_Cluster_41

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 81888.443 ops/s
# Warmup Iteration   2: 106304.760 ops/s
# Warmup Iteration   3: 106831.877 ops/s
# Warmup Iteration   4: 135971.292 ops/s
# Warmup Iteration   5: 153756.093 ops/s
# Warmup Iteration   6: 153323.635 ops/s
# Warmup Iteration   7: 152463.612 ops/s
# Warmup Iteration   8: 151233.962 ops/s
# Warmup Iteration   9: 153530.799 ops/s
# Warmup Iteration  10: 153644.559 ops/s
# Warmup Iteration  11: 153986.785 ops/s
# Warmup Iteration  12: 153722.582 ops/s
# Warmup Iteration  13: 153976.757 ops/s
# Warmup Iteration  14: 153305.512 ops/s
# Warmup Iteration  15: 153170.934 ops/s
# Warmup Iteration  16: 153509.558 ops/s
# Warmup Iteration  17: 139505.732 ops/s
# Warmup Iteration  18: 132910.539 ops/s
# Warmup Iteration  19: 161510.702 ops/s
# Warmup Iteration  20: 161110.613 ops/s
# Warmup Iteration  21: 161462.083 ops/s
# Warmup Iteration  22: 161828.393 ops/s
# Warmup Iteration  23: 161470.017 ops/s
# Warmup Iteration  24: 161461.906 ops/s
# Warmup Iteration  25: 161198.638 ops/s
# Warmup Iteration  26: 161444.460 ops/s
# Warmup Iteration  27: 161647.230 ops/s
# Warmup Iteration  28: 161227.424 ops/s
# Warmup Iteration  29: 161254.725 ops/s
# Warmup Iteration  30: 160804.839 ops/s
Iteration   1: 160812.592 ops/s
Iteration   2: 160421.370 ops/s
Iteration   3: 161787.299 ops/s
Iteration   4: 161665.786 ops/s
Iteration   5: 160903.808 ops/s
Iteration   6: 160694.374 ops/s
Iteration   7: 160884.724 ops/s
Iteration   8: 161565.552 ops/s
Iteration   9: 161598.409 ops/s
Iteration  10: 161413.500 ops/s
Iteration  11: 161790.480 ops/s
Iteration  12: 161369.028 ops/s
Iteration  13: 161850.605 ops/s
Iteration  14: 160864.907 ops/s
Iteration  15: 160309.210 ops/s
Iteration  16: 161183.294 ops/s
Iteration  17: 161750.472 ops/s
Iteration  18: 161425.130 ops/s
Iteration  19: 161270.078 ops/s
Iteration  20: 161509.469 ops/s
Iteration  21: 161468.359 ops/s
Iteration  22: 161211.149 ops/s
Iteration  23: 161967.698 ops/s
Iteration  24: 162098.955 ops/s
Iteration  25: 162140.355 ops/s
Iteration  26: 160972.183 ops/s
Iteration  27: 161121.884 ops/s
Iteration  28: 161370.747 ops/s
Iteration  29: 161590.284 ops/s
Iteration  30: 161582.825 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_41._Benchmark.benchmark_Cluster_41":
  161353.151 ±(99.9%) 311.308 ops/s [Average]
  (min, avg, max) = (160309.210, 161353.151, 162140.355), stdev = 465.951
  CI (99.9%): [161041.843, 161664.459] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_41._Benchmark.benchmark_Cluster_41  thrpt   30  161353.151 ± 311.308  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_410._Benchmark.benchmark_Cluster_410$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_410._Benchmark.benchmark_Cluster_410

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46477.707 ops/s
# Warmup Iteration   2: 85820.257 ops/s
# Warmup Iteration   3: 164411.513 ops/s
# Warmup Iteration   4: 184370.459 ops/s
# Warmup Iteration   5: 187159.831 ops/s
# Warmup Iteration   6: 186635.521 ops/s
# Warmup Iteration   7: 186521.205 ops/s
# Warmup Iteration   8: 127820.840 ops/s
# Warmup Iteration   9: 186479.654 ops/s
# Warmup Iteration  10: 186329.875 ops/s
# Warmup Iteration  11: 186306.715 ops/s
# Warmup Iteration  12: 185536.781 ops/s
# Warmup Iteration  13: 186529.741 ops/s
# Warmup Iteration  14: 186605.606 ops/s
# Warmup Iteration  15: 186305.142 ops/s
# Warmup Iteration  16: 187026.180 ops/s
# Warmup Iteration  17: 186836.199 ops/s
# Warmup Iteration  18: 186427.492 ops/s
# Warmup Iteration  19: 186198.112 ops/s
# Warmup Iteration  20: 186450.104 ops/s
# Warmup Iteration  21: 187140.565 ops/s
# Warmup Iteration  22: 186829.534 ops/s
# Warmup Iteration  23: 186431.549 ops/s
# Warmup Iteration  24: 186142.828 ops/s
# Warmup Iteration  25: 186711.496 ops/s
# Warmup Iteration  26: 186917.472 ops/s
# Warmup Iteration  27: 186719.507 ops/s
# Warmup Iteration  28: 186757.431 ops/s
# Warmup Iteration  29: 186545.420 ops/s
# Warmup Iteration  30: 186308.225 ops/s
Iteration   1: 185757.465 ops/s
Iteration   2: 187195.096 ops/s
Iteration   3: 186028.521 ops/s
Iteration   4: 186701.287 ops/s
Iteration   5: 186325.635 ops/s
Iteration   6: 185991.717 ops/s
Iteration   7: 186313.046 ops/s
Iteration   8: 186444.164 ops/s
Iteration   9: 185953.054 ops/s
Iteration  10: 186167.637 ops/s
Iteration  11: 186720.587 ops/s
Iteration  12: 185751.566 ops/s
Iteration  13: 186103.732 ops/s
Iteration  14: 186242.389 ops/s
Iteration  15: 186592.142 ops/s
Iteration  16: 186139.706 ops/s
Iteration  17: 186563.624 ops/s
Iteration  18: 186646.618 ops/s
Iteration  19: 186281.663 ops/s
Iteration  20: 186392.093 ops/s
Iteration  21: 186734.129 ops/s
Iteration  22: 187079.680 ops/s
Iteration  23: 186524.490 ops/s
Iteration  24: 187009.216 ops/s
Iteration  25: 186786.569 ops/s
Iteration  26: 186631.521 ops/s
Iteration  27: 187122.659 ops/s
Iteration  28: 186350.584 ops/s
Iteration  29: 186479.405 ops/s
Iteration  30: 186990.083 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_410._Benchmark.benchmark_Cluster_410":
  186467.336 ±(99.9%) 261.949 ops/s [Average]
  (min, avg, max) = (185751.566, 186467.336, 187195.096), stdev = 392.073
  CI (99.9%): [186205.387, 186729.285] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_410._Benchmark.benchmark_Cluster_410  thrpt   30  186467.336 ± 261.949  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_411._Benchmark.benchmark_Cluster_411$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_411._Benchmark.benchmark_Cluster_411

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 24431.891 ops/s
# Warmup Iteration   2: 55270.899 ops/s
# Warmup Iteration   3: 72231.452 ops/s
# Warmup Iteration   4: 107122.362 ops/s
# Warmup Iteration   5: 105654.325 ops/s
# Warmup Iteration   6: 107152.427 ops/s
# Warmup Iteration   7: 107413.840 ops/s
# Warmup Iteration   8: 107138.741 ops/s
# Warmup Iteration   9: 106968.207 ops/s
# Warmup Iteration  10: 72876.031 ops/s
# Warmup Iteration  11: 106573.846 ops/s
# Warmup Iteration  12: 106026.835 ops/s
# Warmup Iteration  13: 106165.622 ops/s
# Warmup Iteration  14: 106117.822 ops/s
# Warmup Iteration  15: 106046.600 ops/s
# Warmup Iteration  16: 106247.021 ops/s
# Warmup Iteration  17: 105736.672 ops/s
# Warmup Iteration  18: 104826.036 ops/s
# Warmup Iteration  19: 105770.892 ops/s
# Warmup Iteration  20: 105608.102 ops/s
# Warmup Iteration  21: 106114.298 ops/s
# Warmup Iteration  22: 106247.930 ops/s
# Warmup Iteration  23: 105727.981 ops/s
# Warmup Iteration  24: 105961.744 ops/s
# Warmup Iteration  25: 105400.917 ops/s
# Warmup Iteration  26: 105156.790 ops/s
# Warmup Iteration  27: 105574.060 ops/s
# Warmup Iteration  28: 106185.904 ops/s
# Warmup Iteration  29: 105873.401 ops/s
# Warmup Iteration  30: 106080.117 ops/s
Iteration   1: 106384.514 ops/s
Iteration   2: 106182.943 ops/s
Iteration   3: 106018.710 ops/s
Iteration   4: 106066.811 ops/s
Iteration   5: 105901.240 ops/s
Iteration   6: 106066.092 ops/s
Iteration   7: 105872.845 ops/s
Iteration   8: 106080.919 ops/s
Iteration   9: 106126.845 ops/s
Iteration  10: 106560.024 ops/s
Iteration  11: 106580.120 ops/s
Iteration  12: 105774.714 ops/s
Iteration  13: 105669.095 ops/s
Iteration  14: 106372.783 ops/s
Iteration  15: 105390.625 ops/s
Iteration  16: 106119.408 ops/s
Iteration  17: 105875.129 ops/s
Iteration  18: 105833.831 ops/s
Iteration  19: 106088.084 ops/s
Iteration  20: 106439.166 ops/s
Iteration  21: 106487.748 ops/s
Iteration  22: 106463.379 ops/s
Iteration  23: 105865.308 ops/s
Iteration  24: 106197.326 ops/s
Iteration  25: 106493.151 ops/s
Iteration  26: 106553.234 ops/s
Iteration  27: 106209.147 ops/s
Iteration  28: 106584.725 ops/s
Iteration  29: 106323.930 ops/s
Iteration  30: 105893.219 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_411._Benchmark.benchmark_Cluster_411":
  106149.169 ±(99.9%) 204.286 ops/s [Average]
  (min, avg, max) = (105390.625, 106149.169, 106584.725), stdev = 305.765
  CI (99.9%): [105944.883, 106353.454] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_411._Benchmark.benchmark_Cluster_411  thrpt   30  106149.169 ± 204.286  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_412._Benchmark.benchmark_Cluster_412$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_412._Benchmark.benchmark_Cluster_412

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78884.303 ops/s
# Warmup Iteration   2: 102634.461 ops/s
# Warmup Iteration   3: 104498.323 ops/s
# Warmup Iteration   4: 121398.781 ops/s
# Warmup Iteration   5: 148918.145 ops/s
# Warmup Iteration   6: 148404.693 ops/s
# Warmup Iteration   7: 148511.322 ops/s
# Warmup Iteration   8: 148164.142 ops/s
# Warmup Iteration   9: 146458.202 ops/s
# Warmup Iteration  10: 148435.946 ops/s
# Warmup Iteration  11: 148320.960 ops/s
# Warmup Iteration  12: 148325.961 ops/s
# Warmup Iteration  13: 148048.700 ops/s
# Warmup Iteration  14: 147760.600 ops/s
# Warmup Iteration  15: 147935.892 ops/s
# Warmup Iteration  16: 148182.713 ops/s
# Warmup Iteration  17: 152285.394 ops/s
# Warmup Iteration  18: 143878.116 ops/s
# Warmup Iteration  19: 109678.700 ops/s
# Warmup Iteration  20: 151999.786 ops/s
# Warmup Iteration  21: 151883.385 ops/s
# Warmup Iteration  22: 152009.971 ops/s
# Warmup Iteration  23: 151794.992 ops/s
# Warmup Iteration  24: 152350.560 ops/s
# Warmup Iteration  25: 152222.410 ops/s
# Warmup Iteration  26: 151848.808 ops/s
# Warmup Iteration  27: 152195.720 ops/s
# Warmup Iteration  28: 152328.039 ops/s
# Warmup Iteration  29: 152371.319 ops/s
# Warmup Iteration  30: 152086.707 ops/s
Iteration   1: 151987.503 ops/s
Iteration   2: 151821.014 ops/s
Iteration   3: 151682.923 ops/s
Iteration   4: 152348.528 ops/s
Iteration   5: 151785.728 ops/s
Iteration   6: 151626.422 ops/s
Iteration   7: 152066.144 ops/s
Iteration   8: 151984.442 ops/s
Iteration   9: 151887.983 ops/s
Iteration  10: 151540.960 ops/s
Iteration  11: 152030.377 ops/s
Iteration  12: 151675.195 ops/s
Iteration  13: 151481.627 ops/s
Iteration  14: 151284.778 ops/s
Iteration  15: 151840.101 ops/s
Iteration  16: 151561.715 ops/s
Iteration  17: 152446.269 ops/s
Iteration  18: 152498.502 ops/s
Iteration  19: 152412.002 ops/s
Iteration  20: 151677.211 ops/s
Iteration  21: 151861.439 ops/s
Iteration  22: 150601.907 ops/s
Iteration  23: 151336.379 ops/s
Iteration  24: 151948.525 ops/s
Iteration  25: 151568.253 ops/s
Iteration  26: 151970.312 ops/s
Iteration  27: 152159.514 ops/s
Iteration  28: 151007.914 ops/s
Iteration  29: 152098.116 ops/s
Iteration  30: 152006.203 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_412._Benchmark.benchmark_Cluster_412":
  151806.600 ±(99.9%) 277.278 ops/s [Average]
  (min, avg, max) = (150601.907, 151806.600, 152498.502), stdev = 415.016
  CI (99.9%): [151529.322, 152083.877] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_412._Benchmark.benchmark_Cluster_412  thrpt   30  151806.600 ± 277.278  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_413._Benchmark.benchmark_Cluster_413$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_413._Benchmark.benchmark_Cluster_413

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63749.028 ops/s
# Warmup Iteration   2: 83758.670 ops/s
# Warmup Iteration   3: 84506.936 ops/s
# Warmup Iteration   4: 129371.912 ops/s
# Warmup Iteration   5: 130175.787 ops/s
# Warmup Iteration   6: 130215.990 ops/s
# Warmup Iteration   7: 127534.832 ops/s
# Warmup Iteration   8: 130159.806 ops/s
# Warmup Iteration   9: 130600.593 ops/s
# Warmup Iteration  10: 130486.335 ops/s
# Warmup Iteration  11: 130562.580 ops/s
# Warmup Iteration  12: 130199.354 ops/s
# Warmup Iteration  13: 129802.865 ops/s
# Warmup Iteration  14: 130039.335 ops/s
# Warmup Iteration  15: 88937.901 ops/s
# Warmup Iteration  16: 129500.121 ops/s
# Warmup Iteration  17: 134405.955 ops/s
# Warmup Iteration  18: 134498.070 ops/s
# Warmup Iteration  19: 134419.713 ops/s
# Warmup Iteration  20: 134082.320 ops/s
# Warmup Iteration  21: 134508.378 ops/s
# Warmup Iteration  22: 134574.179 ops/s
# Warmup Iteration  23: 134432.370 ops/s
# Warmup Iteration  24: 134395.498 ops/s
# Warmup Iteration  25: 134490.861 ops/s
# Warmup Iteration  26: 134547.911 ops/s
# Warmup Iteration  27: 134095.728 ops/s
# Warmup Iteration  28: 133984.009 ops/s
# Warmup Iteration  29: 134077.054 ops/s
# Warmup Iteration  30: 134199.464 ops/s
Iteration   1: 134186.042 ops/s
Iteration   2: 134169.996 ops/s
Iteration   3: 134574.360 ops/s
Iteration   4: 134229.863 ops/s
Iteration   5: 134531.583 ops/s
Iteration   6: 134249.843 ops/s
Iteration   7: 133961.646 ops/s
Iteration   8: 133935.836 ops/s
Iteration   9: 133816.726 ops/s
Iteration  10: 133918.070 ops/s
Iteration  11: 133487.110 ops/s
Iteration  12: 133781.035 ops/s
Iteration  13: 133802.748 ops/s
Iteration  14: 133440.052 ops/s
Iteration  15: 133933.198 ops/s
Iteration  16: 134675.411 ops/s
Iteration  17: 134742.979 ops/s
Iteration  18: 134224.943 ops/s
Iteration  19: 134040.939 ops/s
Iteration  20: 134602.501 ops/s
Iteration  21: 134481.684 ops/s
Iteration  22: 134457.849 ops/s
Iteration  23: 134095.819 ops/s
Iteration  24: 134656.006 ops/s
Iteration  25: 134732.244 ops/s
Iteration  26: 134683.551 ops/s
Iteration  27: 133959.908 ops/s
Iteration  28: 134247.641 ops/s
Iteration  29: 134485.225 ops/s
Iteration  30: 134452.179 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_413._Benchmark.benchmark_Cluster_413":
  134218.566 ±(99.9%) 244.470 ops/s [Average]
  (min, avg, max) = (133440.052, 134218.566, 134742.979), stdev = 365.911
  CI (99.9%): [133974.097, 134463.036] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_413._Benchmark.benchmark_Cluster_413  thrpt   30  134218.566 ± 244.470  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_414._Benchmark.benchmark_Cluster_414$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_414._Benchmark.benchmark_Cluster_414

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62486.791 ops/s
# Warmup Iteration   2: 92670.042 ops/s
# Warmup Iteration   3: 187864.974 ops/s
# Warmup Iteration   4: 196343.721 ops/s
# Warmup Iteration   5: 197801.350 ops/s
# Warmup Iteration   6: 197983.044 ops/s
# Warmup Iteration   7: 197766.306 ops/s
# Warmup Iteration   8: 135109.178 ops/s
# Warmup Iteration   9: 197732.225 ops/s
# Warmup Iteration  10: 197516.860 ops/s
# Warmup Iteration  11: 197714.430 ops/s
# Warmup Iteration  12: 197955.066 ops/s
# Warmup Iteration  13: 197497.226 ops/s
# Warmup Iteration  14: 197769.595 ops/s
# Warmup Iteration  15: 197436.602 ops/s
# Warmup Iteration  16: 197858.549 ops/s
# Warmup Iteration  17: 198548.078 ops/s
# Warmup Iteration  18: 197580.626 ops/s
# Warmup Iteration  19: 198074.842 ops/s
# Warmup Iteration  20: 197705.641 ops/s
# Warmup Iteration  21: 198181.959 ops/s
# Warmup Iteration  22: 198034.087 ops/s
# Warmup Iteration  23: 198035.797 ops/s
# Warmup Iteration  24: 197917.384 ops/s
# Warmup Iteration  25: 197684.223 ops/s
# Warmup Iteration  26: 197285.449 ops/s
# Warmup Iteration  27: 197989.435 ops/s
# Warmup Iteration  28: 197708.121 ops/s
# Warmup Iteration  29: 197927.298 ops/s
# Warmup Iteration  30: 197311.050 ops/s
Iteration   1: 197592.652 ops/s
Iteration   2: 198072.500 ops/s
Iteration   3: 197013.161 ops/s
Iteration   4: 197299.633 ops/s
Iteration   5: 197398.104 ops/s
Iteration   6: 197933.883 ops/s
Iteration   7: 197248.498 ops/s
Iteration   8: 197176.063 ops/s
Iteration   9: 197952.446 ops/s
Iteration  10: 198239.923 ops/s
Iteration  11: 197738.907 ops/s
Iteration  12: 197991.054 ops/s
Iteration  13: 197783.983 ops/s
Iteration  14: 196912.392 ops/s
Iteration  15: 197347.179 ops/s
Iteration  16: 197812.543 ops/s
Iteration  17: 197012.787 ops/s
Iteration  18: 197626.211 ops/s
Iteration  19: 197893.056 ops/s
Iteration  20: 197617.918 ops/s
Iteration  21: 197473.805 ops/s
Iteration  22: 198238.576 ops/s
Iteration  23: 197176.405 ops/s
Iteration  24: 197683.041 ops/s
Iteration  25: 197829.138 ops/s
Iteration  26: 197573.125 ops/s
Iteration  27: 197577.668 ops/s
Iteration  28: 197897.910 ops/s
Iteration  29: 198153.194 ops/s
Iteration  30: 197687.984 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_414._Benchmark.benchmark_Cluster_414":
  197631.791 ±(99.9%) 245.097 ops/s [Average]
  (min, avg, max) = (196912.392, 197631.791, 198239.923), stdev = 366.849
  CI (99.9%): [197386.694, 197876.888] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_414._Benchmark.benchmark_Cluster_414  thrpt   30  197631.791 ± 245.097  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_415._Benchmark.benchmark_Cluster_415$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_415._Benchmark.benchmark_Cluster_415

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59813.126 ops/s
# Warmup Iteration   2: 85316.195 ops/s
# Warmup Iteration   3: 133384.806 ops/s
# Warmup Iteration   4: 158613.612 ops/s
# Warmup Iteration   5: 156946.484 ops/s
# Warmup Iteration   6: 158536.100 ops/s
# Warmup Iteration   7: 158566.289 ops/s
# Warmup Iteration   8: 158704.041 ops/s
# Warmup Iteration   9: 158427.845 ops/s
# Warmup Iteration  10: 107800.447 ops/s
# Warmup Iteration  11: 157765.933 ops/s
# Warmup Iteration  12: 157712.641 ops/s
# Warmup Iteration  13: 158264.076 ops/s
# Warmup Iteration  14: 158329.444 ops/s
# Warmup Iteration  15: 157988.637 ops/s
# Warmup Iteration  16: 157732.238 ops/s
# Warmup Iteration  17: 158484.815 ops/s
# Warmup Iteration  18: 158701.252 ops/s
# Warmup Iteration  19: 158447.156 ops/s
# Warmup Iteration  20: 158844.008 ops/s
# Warmup Iteration  21: 158682.134 ops/s
# Warmup Iteration  22: 158911.671 ops/s
# Warmup Iteration  23: 158878.055 ops/s
# Warmup Iteration  24: 158583.625 ops/s
# Warmup Iteration  25: 158342.053 ops/s
# Warmup Iteration  26: 158309.639 ops/s
# Warmup Iteration  27: 158286.526 ops/s
# Warmup Iteration  28: 158560.359 ops/s
# Warmup Iteration  29: 158366.392 ops/s
# Warmup Iteration  30: 158400.097 ops/s
Iteration   1: 158659.768 ops/s
Iteration   2: 158894.287 ops/s
Iteration   3: 158511.683 ops/s
Iteration   4: 158702.847 ops/s
Iteration   5: 157967.766 ops/s
Iteration   6: 158217.002 ops/s
Iteration   7: 158606.254 ops/s
Iteration   8: 158924.374 ops/s
Iteration   9: 158396.221 ops/s
Iteration  10: 158612.023 ops/s
Iteration  11: 158566.528 ops/s
Iteration  12: 158270.669 ops/s
Iteration  13: 159035.436 ops/s
Iteration  14: 158783.838 ops/s
Iteration  15: 158821.324 ops/s
Iteration  16: 159024.097 ops/s
Iteration  17: 158390.217 ops/s
Iteration  18: 158738.899 ops/s
Iteration  19: 158570.578 ops/s
Iteration  20: 157763.740 ops/s
Iteration  21: 157169.035 ops/s
Iteration  22: 158701.377 ops/s
Iteration  23: 158968.204 ops/s
Iteration  24: 158464.410 ops/s
Iteration  25: 157302.925 ops/s
Iteration  26: 157472.754 ops/s
Iteration  27: 158011.013 ops/s
Iteration  28: 158802.636 ops/s
Iteration  29: 158019.460 ops/s
Iteration  30: 157505.096 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_415._Benchmark.benchmark_Cluster_415":
  158395.815 ±(99.9%) 350.147 ops/s [Average]
  (min, avg, max) = (157169.035, 158395.815, 159035.436), stdev = 524.084
  CI (99.9%): [158045.668, 158745.963] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_415._Benchmark.benchmark_Cluster_415  thrpt   30  158395.815 ± 350.147  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_416._Benchmark.benchmark_Cluster_416$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_416._Benchmark.benchmark_Cluster_416

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 73854.022 ops/s
# Warmup Iteration   2: 99415.155 ops/s
# Warmup Iteration   3: 125659.304 ops/s
# Warmup Iteration   4: 163044.329 ops/s
# Warmup Iteration   5: 162156.231 ops/s
# Warmup Iteration   6: 161555.203 ops/s
# Warmup Iteration   7: 163341.405 ops/s
# Warmup Iteration   8: 163157.421 ops/s
# Warmup Iteration   9: 161585.851 ops/s
# Warmup Iteration  10: 162720.171 ops/s
# Warmup Iteration  11: 163420.987 ops/s
# Warmup Iteration  12: 117246.227 ops/s
# Warmup Iteration  13: 157252.317 ops/s
# Warmup Iteration  14: 162902.919 ops/s
# Warmup Iteration  15: 162674.415 ops/s
# Warmup Iteration  16: 163076.218 ops/s
# Warmup Iteration  17: 163074.061 ops/s
# Warmup Iteration  18: 163566.173 ops/s
# Warmup Iteration  19: 163277.737 ops/s
# Warmup Iteration  20: 163205.440 ops/s
# Warmup Iteration  21: 163456.006 ops/s
# Warmup Iteration  22: 163397.010 ops/s
# Warmup Iteration  23: 163811.137 ops/s
# Warmup Iteration  24: 162887.662 ops/s
# Warmup Iteration  25: 163576.838 ops/s
# Warmup Iteration  26: 162944.202 ops/s
# Warmup Iteration  27: 163155.878 ops/s
# Warmup Iteration  28: 162984.205 ops/s
# Warmup Iteration  29: 163259.285 ops/s
# Warmup Iteration  30: 163439.524 ops/s
Iteration   1: 162617.654 ops/s
Iteration   2: 162758.763 ops/s
Iteration   3: 163318.251 ops/s
Iteration   4: 162063.618 ops/s
Iteration   5: 163504.784 ops/s
Iteration   6: 163333.960 ops/s
Iteration   7: 163803.127 ops/s
Iteration   8: 162981.738 ops/s
Iteration   9: 162939.605 ops/s
Iteration  10: 163469.958 ops/s
Iteration  11: 163190.396 ops/s
Iteration  12: 163028.416 ops/s
Iteration  13: 163297.307 ops/s
Iteration  14: 163309.940 ops/s
Iteration  15: 163130.775 ops/s
Iteration  16: 163191.466 ops/s
Iteration  17: 162797.371 ops/s
Iteration  18: 163080.494 ops/s
Iteration  19: 162736.587 ops/s
Iteration  20: 162874.455 ops/s
Iteration  21: 163246.734 ops/s
Iteration  22: 163518.633 ops/s
Iteration  23: 162891.985 ops/s
Iteration  24: 162977.674 ops/s
Iteration  25: 163540.864 ops/s
Iteration  26: 163253.363 ops/s
Iteration  27: 162913.439 ops/s
Iteration  28: 162478.391 ops/s
Iteration  29: 163287.718 ops/s
Iteration  30: 162775.618 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_416._Benchmark.benchmark_Cluster_416":
  163077.103 ±(99.9%) 240.563 ops/s [Average]
  (min, avg, max) = (162063.618, 163077.103, 163803.127), stdev = 360.064
  CI (99.9%): [162836.540, 163317.666] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_416._Benchmark.benchmark_Cluster_416  thrpt   30  163077.103 ± 240.563  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_417._Benchmark.benchmark_Cluster_417$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_417._Benchmark.benchmark_Cluster_417

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66934.893 ops/s
# Warmup Iteration   2: 110485.967 ops/s
# Warmup Iteration   3: 227687.121 ops/s
# Warmup Iteration   4: 245559.627 ops/s
# Warmup Iteration   5: 248124.153 ops/s
# Warmup Iteration   6: 248129.396 ops/s
# Warmup Iteration   7: 226521.407 ops/s
# Warmup Iteration   8: 191087.815 ops/s
# Warmup Iteration   9: 247364.190 ops/s
# Warmup Iteration  10: 246876.823 ops/s
# Warmup Iteration  11: 247564.371 ops/s
# Warmup Iteration  12: 247140.506 ops/s
# Warmup Iteration  13: 248569.647 ops/s
# Warmup Iteration  14: 248101.117 ops/s
# Warmup Iteration  15: 247558.854 ops/s
# Warmup Iteration  16: 248114.066 ops/s
# Warmup Iteration  17: 247331.793 ops/s
# Warmup Iteration  18: 246957.482 ops/s
# Warmup Iteration  19: 247949.004 ops/s
# Warmup Iteration  20: 247852.049 ops/s
# Warmup Iteration  21: 247527.191 ops/s
# Warmup Iteration  22: 247880.151 ops/s
# Warmup Iteration  23: 247313.357 ops/s
# Warmup Iteration  24: 247995.949 ops/s
# Warmup Iteration  25: 247181.168 ops/s
# Warmup Iteration  26: 247740.271 ops/s
# Warmup Iteration  27: 247717.386 ops/s
# Warmup Iteration  28: 247581.273 ops/s
# Warmup Iteration  29: 248577.863 ops/s
# Warmup Iteration  30: 247876.049 ops/s
Iteration   1: 247872.439 ops/s
Iteration   2: 247485.566 ops/s
Iteration   3: 248145.430 ops/s
Iteration   4: 247462.156 ops/s
Iteration   5: 247743.561 ops/s
Iteration   6: 247529.813 ops/s
Iteration   7: 247788.356 ops/s
Iteration   8: 247609.960 ops/s
Iteration   9: 247143.845 ops/s
Iteration  10: 247561.201 ops/s
Iteration  11: 247603.150 ops/s
Iteration  12: 246447.213 ops/s
Iteration  13: 247378.021 ops/s
Iteration  14: 247382.651 ops/s
Iteration  15: 247497.380 ops/s
Iteration  16: 248194.744 ops/s
Iteration  17: 247029.815 ops/s
Iteration  18: 247386.276 ops/s
Iteration  19: 247400.538 ops/s
Iteration  20: 247664.918 ops/s
Iteration  21: 247681.700 ops/s
Iteration  22: 247681.867 ops/s
Iteration  23: 248012.690 ops/s
Iteration  24: 247291.334 ops/s
Iteration  25: 247862.484 ops/s
Iteration  26: 247307.036 ops/s
Iteration  27: 246639.460 ops/s
Iteration  28: 247243.776 ops/s
Iteration  29: 246369.781 ops/s
Iteration  30: 248211.941 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_417._Benchmark.benchmark_Cluster_417":
  247487.637 ±(99.9%) 300.622 ops/s [Average]
  (min, avg, max) = (246369.781, 247487.637, 248211.941), stdev = 449.956
  CI (99.9%): [247187.015, 247788.258] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_417._Benchmark.benchmark_Cluster_417  thrpt   30  247487.637 ± 300.622  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_418._Benchmark.benchmark_Cluster_418$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_418._Benchmark.benchmark_Cluster_418

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71285.768 ops/s
# Warmup Iteration   2: 99690.188 ops/s
# Warmup Iteration   3: 187055.362 ops/s
# Warmup Iteration   4: 205492.888 ops/s
# Warmup Iteration   5: 203574.238 ops/s
# Warmup Iteration   6: 206086.644 ops/s
# Warmup Iteration   7: 205638.111 ops/s
# Warmup Iteration   8: 176581.544 ops/s
# Warmup Iteration   9: 169756.771 ops/s
# Warmup Iteration  10: 206177.497 ops/s
# Warmup Iteration  11: 205999.797 ops/s
# Warmup Iteration  12: 206028.651 ops/s
# Warmup Iteration  13: 205439.034 ops/s
# Warmup Iteration  14: 205776.793 ops/s
# Warmup Iteration  15: 206440.204 ops/s
# Warmup Iteration  16: 205762.533 ops/s
# Warmup Iteration  17: 205521.227 ops/s
# Warmup Iteration  18: 205652.620 ops/s
# Warmup Iteration  19: 205812.508 ops/s
# Warmup Iteration  20: 205892.591 ops/s
# Warmup Iteration  21: 205474.925 ops/s
# Warmup Iteration  22: 205716.749 ops/s
# Warmup Iteration  23: 205280.477 ops/s
# Warmup Iteration  24: 205781.660 ops/s
# Warmup Iteration  25: 205151.992 ops/s
# Warmup Iteration  26: 205195.887 ops/s
# Warmup Iteration  27: 206031.098 ops/s
# Warmup Iteration  28: 205625.157 ops/s
# Warmup Iteration  29: 205512.284 ops/s
# Warmup Iteration  30: 205272.934 ops/s
Iteration   1: 205061.071 ops/s
Iteration   2: 205829.639 ops/s
Iteration   3: 205920.718 ops/s
Iteration   4: 205994.040 ops/s
Iteration   5: 205752.775 ops/s
Iteration   6: 205642.046 ops/s
Iteration   7: 205317.184 ops/s
Iteration   8: 206082.303 ops/s
Iteration   9: 206043.735 ops/s
Iteration  10: 206316.624 ops/s
Iteration  11: 206320.396 ops/s
Iteration  12: 205819.968 ops/s
Iteration  13: 205847.982 ops/s
Iteration  14: 205638.317 ops/s
Iteration  15: 206271.850 ops/s
Iteration  16: 205931.242 ops/s
Iteration  17: 205684.547 ops/s
Iteration  18: 205918.306 ops/s
Iteration  19: 205666.323 ops/s
Iteration  20: 205867.449 ops/s
Iteration  21: 205812.097 ops/s
Iteration  22: 205839.637 ops/s
Iteration  23: 206285.571 ops/s
Iteration  24: 205934.531 ops/s
Iteration  25: 206189.876 ops/s
Iteration  26: 205247.167 ops/s
Iteration  27: 205391.518 ops/s
Iteration  28: 206099.857 ops/s
Iteration  29: 206038.009 ops/s
Iteration  30: 205790.124 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_418._Benchmark.benchmark_Cluster_418":
  205851.830 ±(99.9%) 207.632 ops/s [Average]
  (min, avg, max) = (205061.071, 205851.830, 206320.396), stdev = 310.774
  CI (99.9%): [205644.198, 206059.462] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_418._Benchmark.benchmark_Cluster_418  thrpt   30  205851.830 ± 207.632  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_419._Benchmark.benchmark_Cluster_419$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_419._Benchmark.benchmark_Cluster_419

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 54768.199 ops/s
# Warmup Iteration   2: 83829.484 ops/s
# Warmup Iteration   3: 167788.435 ops/s
# Warmup Iteration   4: 179781.143 ops/s
# Warmup Iteration   5: 181707.182 ops/s
# Warmup Iteration   6: 181643.076 ops/s
# Warmup Iteration   7: 180929.060 ops/s
# Warmup Iteration   8: 124072.458 ops/s
# Warmup Iteration   9: 181730.886 ops/s
# Warmup Iteration  10: 181670.950 ops/s
# Warmup Iteration  11: 181639.759 ops/s
# Warmup Iteration  12: 181410.652 ops/s
# Warmup Iteration  13: 181168.453 ops/s
# Warmup Iteration  14: 181372.992 ops/s
# Warmup Iteration  15: 181288.402 ops/s
# Warmup Iteration  16: 181701.458 ops/s
# Warmup Iteration  17: 181024.206 ops/s
# Warmup Iteration  18: 180633.049 ops/s
# Warmup Iteration  19: 181268.380 ops/s
# Warmup Iteration  20: 180639.002 ops/s
# Warmup Iteration  21: 180614.621 ops/s
# Warmup Iteration  22: 180804.691 ops/s
# Warmup Iteration  23: 181076.101 ops/s
# Warmup Iteration  24: 180471.844 ops/s
# Warmup Iteration  25: 180143.582 ops/s
# Warmup Iteration  26: 180899.144 ops/s
# Warmup Iteration  27: 181285.501 ops/s
# Warmup Iteration  28: 181644.118 ops/s
# Warmup Iteration  29: 181641.396 ops/s
# Warmup Iteration  30: 181195.064 ops/s
Iteration   1: 181389.267 ops/s
Iteration   2: 181352.961 ops/s
Iteration   3: 181325.935 ops/s
Iteration   4: 181359.665 ops/s
Iteration   5: 180959.948 ops/s
Iteration   6: 181921.311 ops/s
Iteration   7: 181792.214 ops/s
Iteration   8: 181752.975 ops/s
Iteration   9: 181401.550 ops/s
Iteration  10: 181316.524 ops/s
Iteration  11: 181596.615 ops/s
Iteration  12: 180582.661 ops/s
Iteration  13: 180830.969 ops/s
Iteration  14: 180595.526 ops/s
Iteration  15: 180199.229 ops/s
Iteration  16: 180892.211 ops/s
Iteration  17: 180440.037 ops/s
Iteration  18: 180969.158 ops/s
Iteration  19: 179709.509 ops/s
Iteration  20: 180677.873 ops/s
Iteration  21: 180654.210 ops/s
Iteration  22: 181682.983 ops/s
Iteration  23: 181028.612 ops/s
Iteration  24: 180639.435 ops/s
Iteration  25: 180983.350 ops/s
Iteration  26: 180416.326 ops/s
Iteration  27: 181131.434 ops/s
Iteration  28: 180612.679 ops/s
Iteration  29: 181056.171 ops/s
Iteration  30: 181412.564 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_419._Benchmark.benchmark_Cluster_419":
  181022.797 ±(99.9%) 343.368 ops/s [Average]
  (min, avg, max) = (179709.509, 181022.797, 181921.311), stdev = 513.937
  CI (99.9%): [180679.429, 181366.164] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_419._Benchmark.benchmark_Cluster_419  thrpt   30  181022.797 ± 343.368  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_42._Benchmark.benchmark_Cluster_42$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_42._Benchmark.benchmark_Cluster_42

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53496.997 ops/s
# Warmup Iteration   2: 75237.528 ops/s
# Warmup Iteration   3: 75649.724 ops/s
# Warmup Iteration   4: 91973.368 ops/s
# Warmup Iteration   5: 109614.934 ops/s
# Warmup Iteration   6: 109271.111 ops/s
# Warmup Iteration   7: 110097.420 ops/s
# Warmup Iteration   8: 107923.204 ops/s
# Warmup Iteration   9: 110490.012 ops/s
# Warmup Iteration  10: 110091.455 ops/s
# Warmup Iteration  11: 109523.573 ops/s
# Warmup Iteration  12: 109062.158 ops/s
# Warmup Iteration  13: 108775.896 ops/s
# Warmup Iteration  14: 108195.016 ops/s
# Warmup Iteration  15: 108090.621 ops/s
# Warmup Iteration  16: 109337.781 ops/s
# Warmup Iteration  17: 109914.326 ops/s
# Warmup Iteration  18: 76232.704 ops/s
# Warmup Iteration  19: 111179.604 ops/s
# Warmup Iteration  20: 111960.195 ops/s
# Warmup Iteration  21: 112027.402 ops/s
# Warmup Iteration  22: 112628.774 ops/s
# Warmup Iteration  23: 112906.151 ops/s
# Warmup Iteration  24: 112599.280 ops/s
# Warmup Iteration  25: 112826.035 ops/s
# Warmup Iteration  26: 112518.971 ops/s
# Warmup Iteration  27: 111488.889 ops/s
# Warmup Iteration  28: 112684.803 ops/s
# Warmup Iteration  29: 112659.429 ops/s
# Warmup Iteration  30: 112731.645 ops/s
Iteration   1: 112280.731 ops/s
Iteration   2: 113123.235 ops/s
Iteration   3: 113291.333 ops/s
Iteration   4: 112769.374 ops/s
Iteration   5: 112830.183 ops/s
Iteration   6: 112480.133 ops/s
Iteration   7: 112025.369 ops/s
Iteration   8: 111932.179 ops/s
Iteration   9: 110950.891 ops/s
Iteration  10: 112122.391 ops/s
Iteration  11: 112097.144 ops/s
Iteration  12: 111650.510 ops/s
Iteration  13: 112492.875 ops/s
Iteration  14: 112289.785 ops/s
Iteration  15: 112303.372 ops/s
Iteration  16: 111486.635 ops/s
Iteration  17: 110900.120 ops/s
Iteration  18: 112814.006 ops/s
Iteration  19: 112278.489 ops/s
Iteration  20: 113146.205 ops/s
Iteration  21: 112970.388 ops/s
Iteration  22: 112375.642 ops/s
Iteration  23: 111345.900 ops/s
Iteration  24: 111023.359 ops/s
Iteration  25: 111623.274 ops/s
Iteration  26: 112470.190 ops/s
Iteration  27: 112605.733 ops/s
Iteration  28: 112357.100 ops/s
Iteration  29: 111239.764 ops/s
Iteration  30: 112896.231 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_42._Benchmark.benchmark_Cluster_42":
  112205.751 ±(99.9%) 449.920 ops/s [Average]
  (min, avg, max) = (110900.120, 112205.751, 113291.333), stdev = 673.419
  CI (99.9%): [111755.831, 112655.672] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_42._Benchmark.benchmark_Cluster_42  thrpt   30  112205.751 ± 449.920  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_420._Benchmark.benchmark_Cluster_420$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_420._Benchmark.benchmark_Cluster_420

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 41123.947 ops/s
# Warmup Iteration   2: 71588.065 ops/s
# Warmup Iteration   3: 127251.947 ops/s
# Warmup Iteration   4: 146851.715 ops/s
# Warmup Iteration   5: 144602.601 ops/s
# Warmup Iteration   6: 147139.515 ops/s
# Warmup Iteration   7: 146908.594 ops/s
# Warmup Iteration   8: 125513.227 ops/s
# Warmup Iteration   9: 122282.517 ops/s
# Warmup Iteration  10: 147451.340 ops/s
# Warmup Iteration  11: 146954.968 ops/s
# Warmup Iteration  12: 147283.819 ops/s
# Warmup Iteration  13: 147640.224 ops/s
# Warmup Iteration  14: 147364.027 ops/s
# Warmup Iteration  15: 147009.399 ops/s
# Warmup Iteration  16: 146931.218 ops/s
# Warmup Iteration  17: 147597.381 ops/s
# Warmup Iteration  18: 147591.321 ops/s
# Warmup Iteration  19: 147381.764 ops/s
# Warmup Iteration  20: 147376.090 ops/s
# Warmup Iteration  21: 147238.176 ops/s
# Warmup Iteration  22: 147771.856 ops/s
# Warmup Iteration  23: 147524.336 ops/s
# Warmup Iteration  24: 148023.370 ops/s
# Warmup Iteration  25: 147795.991 ops/s
# Warmup Iteration  26: 147303.710 ops/s
# Warmup Iteration  27: 147017.414 ops/s
# Warmup Iteration  28: 147256.029 ops/s
# Warmup Iteration  29: 147673.481 ops/s
# Warmup Iteration  30: 147001.846 ops/s
Iteration   1: 146505.162 ops/s
Iteration   2: 147635.242 ops/s
Iteration   3: 146967.592 ops/s
Iteration   4: 147156.649 ops/s
Iteration   5: 147628.372 ops/s
Iteration   6: 147293.385 ops/s
Iteration   7: 147298.331 ops/s
Iteration   8: 147212.753 ops/s
Iteration   9: 147397.483 ops/s
Iteration  10: 147234.006 ops/s
Iteration  11: 147381.507 ops/s
Iteration  12: 147320.076 ops/s
Iteration  13: 146576.298 ops/s
Iteration  14: 146685.335 ops/s
Iteration  15: 147491.408 ops/s
Iteration  16: 147483.316 ops/s
Iteration  17: 146909.217 ops/s
Iteration  18: 147042.458 ops/s
Iteration  19: 147126.753 ops/s
Iteration  20: 147087.567 ops/s
Iteration  21: 147652.694 ops/s
Iteration  22: 147815.100 ops/s
Iteration  23: 146646.097 ops/s
Iteration  24: 147763.550 ops/s
Iteration  25: 147467.683 ops/s
Iteration  26: 147017.541 ops/s
Iteration  27: 147011.352 ops/s
Iteration  28: 147143.833 ops/s
Iteration  29: 146496.859 ops/s
Iteration  30: 147200.376 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_420._Benchmark.benchmark_Cluster_420":
  147188.266 ±(99.9%) 242.032 ops/s [Average]
  (min, avg, max) = (146496.859, 147188.266, 147815.100), stdev = 362.263
  CI (99.9%): [146946.234, 147430.299] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_420._Benchmark.benchmark_Cluster_420  thrpt   30  147188.266 ± 242.032  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_421._Benchmark.benchmark_Cluster_421$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_421._Benchmark.benchmark_Cluster_421

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 38048.398 ops/s
# Warmup Iteration   2: 68086.009 ops/s
# Warmup Iteration   3: 125441.509 ops/s
# Warmup Iteration   4: 151698.311 ops/s
# Warmup Iteration   5: 150147.260 ops/s
# Warmup Iteration   6: 152209.174 ops/s
# Warmup Iteration   7: 151904.252 ops/s
# Warmup Iteration   8: 110717.938 ops/s
# Warmup Iteration   9: 142932.598 ops/s
# Warmup Iteration  10: 152104.201 ops/s
# Warmup Iteration  11: 151812.995 ops/s
# Warmup Iteration  12: 152140.159 ops/s
# Warmup Iteration  13: 151726.500 ops/s
# Warmup Iteration  14: 152836.219 ops/s
# Warmup Iteration  15: 152575.351 ops/s
# Warmup Iteration  16: 151721.643 ops/s
# Warmup Iteration  17: 154064.580 ops/s
# Warmup Iteration  18: 154960.061 ops/s
# Warmup Iteration  19: 155133.670 ops/s
# Warmup Iteration  20: 153866.320 ops/s
# Warmup Iteration  21: 154469.020 ops/s
# Warmup Iteration  22: 150789.777 ops/s
# Warmup Iteration  23: 154559.709 ops/s
# Warmup Iteration  24: 152635.349 ops/s
# Warmup Iteration  25: 151262.035 ops/s
# Warmup Iteration  26: 154193.496 ops/s
# Warmup Iteration  27: 152773.771 ops/s
# Warmup Iteration  28: 150964.289 ops/s
# Warmup Iteration  29: 153051.610 ops/s
# Warmup Iteration  30: 153546.507 ops/s
Iteration   1: 153672.202 ops/s
Iteration   2: 153897.873 ops/s
Iteration   3: 151232.685 ops/s
Iteration   4: 153221.496 ops/s
Iteration   5: 153183.701 ops/s
Iteration   6: 153601.379 ops/s
Iteration   7: 154193.579 ops/s
Iteration   8: 154306.997 ops/s
Iteration   9: 154206.070 ops/s
Iteration  10: 153706.248 ops/s
Iteration  11: 155244.016 ops/s
Iteration  12: 155160.410 ops/s
Iteration  13: 153334.098 ops/s
Iteration  14: 154147.776 ops/s
Iteration  15: 153485.834 ops/s
Iteration  16: 154151.631 ops/s
Iteration  17: 150572.165 ops/s
Iteration  18: 150767.487 ops/s
Iteration  19: 153847.551 ops/s
Iteration  20: 151260.770 ops/s
Iteration  21: 151193.167 ops/s
Iteration  22: 153191.681 ops/s
Iteration  23: 154485.112 ops/s
Iteration  24: 153620.209 ops/s
Iteration  25: 154148.688 ops/s
Iteration  26: 154469.013 ops/s
Iteration  27: 152592.384 ops/s
Iteration  28: 153660.914 ops/s
Iteration  29: 155126.856 ops/s
Iteration  30: 154957.325 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_421._Benchmark.benchmark_Cluster_421":
  153487.977 ±(99.9%) 863.225 ops/s [Average]
  (min, avg, max) = (150572.165, 153487.977, 155244.016), stdev = 1292.034
  CI (99.9%): [152624.752, 154351.202] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_421._Benchmark.benchmark_Cluster_421  thrpt   30  153487.977 ± 863.225  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_422._Benchmark.benchmark_Cluster_422$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_422._Benchmark.benchmark_Cluster_422

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 49641.926 ops/s
# Warmup Iteration   2: 82590.652 ops/s
# Warmup Iteration   3: 135701.125 ops/s
# Warmup Iteration   4: 164572.133 ops/s
# Warmup Iteration   5: 163217.390 ops/s
# Warmup Iteration   6: 164101.325 ops/s
# Warmup Iteration   7: 164766.758 ops/s
# Warmup Iteration   8: 164917.623 ops/s
# Warmup Iteration   9: 111587.776 ops/s
# Warmup Iteration  10: 164944.442 ops/s
# Warmup Iteration  11: 165228.231 ops/s
# Warmup Iteration  12: 164903.155 ops/s
# Warmup Iteration  13: 164728.340 ops/s
# Warmup Iteration  14: 164672.138 ops/s
# Warmup Iteration  15: 164850.466 ops/s
# Warmup Iteration  16: 165107.292 ops/s
# Warmup Iteration  17: 165065.209 ops/s
# Warmup Iteration  18: 164862.267 ops/s
# Warmup Iteration  19: 164018.998 ops/s
# Warmup Iteration  20: 163738.709 ops/s
# Warmup Iteration  21: 164627.466 ops/s
# Warmup Iteration  22: 164681.917 ops/s
# Warmup Iteration  23: 164606.723 ops/s
# Warmup Iteration  24: 164565.792 ops/s
# Warmup Iteration  25: 164426.637 ops/s
# Warmup Iteration  26: 164168.258 ops/s
# Warmup Iteration  27: 164453.534 ops/s
# Warmup Iteration  28: 164624.967 ops/s
# Warmup Iteration  29: 164517.744 ops/s
# Warmup Iteration  30: 164603.730 ops/s
Iteration   1: 165243.340 ops/s
Iteration   2: 165258.128 ops/s
Iteration   3: 165163.179 ops/s
Iteration   4: 165144.199 ops/s
Iteration   5: 164891.646 ops/s
Iteration   6: 165027.637 ops/s
Iteration   7: 164111.183 ops/s
Iteration   8: 165071.014 ops/s
Iteration   9: 164911.828 ops/s
Iteration  10: 165244.846 ops/s
Iteration  11: 164992.360 ops/s
Iteration  12: 164056.527 ops/s
Iteration  13: 164314.683 ops/s
Iteration  14: 164732.394 ops/s
Iteration  15: 164746.537 ops/s
Iteration  16: 165379.214 ops/s
Iteration  17: 164794.795 ops/s
Iteration  18: 164822.200 ops/s
Iteration  19: 165049.069 ops/s
Iteration  20: 164826.926 ops/s
Iteration  21: 165252.808 ops/s
Iteration  22: 165097.559 ops/s
Iteration  23: 164480.093 ops/s
Iteration  24: 164464.488 ops/s
Iteration  25: 163684.599 ops/s
Iteration  26: 163927.728 ops/s
Iteration  27: 164585.673 ops/s
Iteration  28: 164704.155 ops/s
Iteration  29: 165026.597 ops/s
Iteration  30: 164964.458 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_422._Benchmark.benchmark_Cluster_422":
  164798.996 ±(99.9%) 287.065 ops/s [Average]
  (min, avg, max) = (163684.599, 164798.996, 165379.214), stdev = 429.666
  CI (99.9%): [164511.930, 165086.061] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_422._Benchmark.benchmark_Cluster_422  thrpt   30  164798.996 ± 287.065  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_423._Benchmark.benchmark_Cluster_423$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_423._Benchmark.benchmark_Cluster_423

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 56529.971 ops/s
# Warmup Iteration   2: 77856.463 ops/s
# Warmup Iteration   3: 149519.399 ops/s
# Warmup Iteration   4: 159951.253 ops/s
# Warmup Iteration   5: 161616.014 ops/s
# Warmup Iteration   6: 161304.068 ops/s
# Warmup Iteration   7: 162246.033 ops/s
# Warmup Iteration   8: 129909.465 ops/s
# Warmup Iteration   9: 142972.572 ops/s
# Warmup Iteration  10: 161429.027 ops/s
# Warmup Iteration  11: 161956.108 ops/s
# Warmup Iteration  12: 161761.320 ops/s
# Warmup Iteration  13: 161725.930 ops/s
# Warmup Iteration  14: 161226.173 ops/s
# Warmup Iteration  15: 161591.655 ops/s
# Warmup Iteration  16: 161565.695 ops/s
# Warmup Iteration  17: 161982.071 ops/s
# Warmup Iteration  18: 161782.182 ops/s
# Warmup Iteration  19: 162194.529 ops/s
# Warmup Iteration  20: 161831.626 ops/s
# Warmup Iteration  21: 161816.215 ops/s
# Warmup Iteration  22: 161638.967 ops/s
# Warmup Iteration  23: 161584.623 ops/s
# Warmup Iteration  24: 161851.561 ops/s
# Warmup Iteration  25: 161502.420 ops/s
# Warmup Iteration  26: 161614.188 ops/s
# Warmup Iteration  27: 161911.991 ops/s
# Warmup Iteration  28: 161154.994 ops/s
# Warmup Iteration  29: 161111.630 ops/s
# Warmup Iteration  30: 161855.801 ops/s
Iteration   1: 161500.107 ops/s
Iteration   2: 161950.556 ops/s
Iteration   3: 161792.531 ops/s
Iteration   4: 161809.872 ops/s
Iteration   5: 161474.666 ops/s
Iteration   6: 161788.177 ops/s
Iteration   7: 161733.551 ops/s
Iteration   8: 161639.964 ops/s
Iteration   9: 162091.261 ops/s
Iteration  10: 162170.950 ops/s
Iteration  11: 161493.933 ops/s
Iteration  12: 161857.281 ops/s
Iteration  13: 161740.444 ops/s
Iteration  14: 161944.389 ops/s
Iteration  15: 161833.961 ops/s
Iteration  16: 161512.670 ops/s
Iteration  17: 161761.130 ops/s
Iteration  18: 160679.153 ops/s
Iteration  19: 160975.522 ops/s
Iteration  20: 160746.096 ops/s
Iteration  21: 160813.960 ops/s
Iteration  22: 161462.755 ops/s
Iteration  23: 161320.274 ops/s
Iteration  24: 162084.207 ops/s
Iteration  25: 161644.943 ops/s
Iteration  26: 161164.059 ops/s
Iteration  27: 161794.870 ops/s
Iteration  28: 161526.394 ops/s
Iteration  29: 161545.617 ops/s
Iteration  30: 161555.875 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_423._Benchmark.benchmark_Cluster_423":
  161580.306 ±(99.9%) 257.302 ops/s [Average]
  (min, avg, max) = (160679.153, 161580.306, 162170.950), stdev = 385.118
  CI (99.9%): [161323.003, 161837.608] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_423._Benchmark.benchmark_Cluster_423  thrpt   30  161580.306 ± 257.302  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_424._Benchmark.benchmark_Cluster_424$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_424._Benchmark.benchmark_Cluster_424

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 40522.272 ops/s
# Warmup Iteration   2: 68470.032 ops/s
# Warmup Iteration   3: 69508.823 ops/s
# Warmup Iteration   4: 111375.705 ops/s
# Warmup Iteration   5: 113562.372 ops/s
# Warmup Iteration   6: 113577.879 ops/s
# Warmup Iteration   7: 112757.219 ops/s
# Warmup Iteration   8: 114389.632 ops/s
# Warmup Iteration   9: 114137.476 ops/s
# Warmup Iteration  10: 113941.545 ops/s
# Warmup Iteration  11: 114209.436 ops/s
# Warmup Iteration  12: 114418.549 ops/s
# Warmup Iteration  13: 101418.531 ops/s
# Warmup Iteration  14: 86681.764 ops/s
# Warmup Iteration  15: 112754.904 ops/s
# Warmup Iteration  16: 113541.773 ops/s
# Warmup Iteration  17: 116571.692 ops/s
# Warmup Iteration  18: 116972.840 ops/s
# Warmup Iteration  19: 116887.433 ops/s
# Warmup Iteration  20: 116516.325 ops/s
# Warmup Iteration  21: 116814.397 ops/s
# Warmup Iteration  22: 116859.339 ops/s
# Warmup Iteration  23: 117002.838 ops/s
# Warmup Iteration  24: 116865.655 ops/s
# Warmup Iteration  25: 117487.217 ops/s
# Warmup Iteration  26: 116830.707 ops/s
# Warmup Iteration  27: 117017.940 ops/s
# Warmup Iteration  28: 117100.764 ops/s
# Warmup Iteration  29: 116717.968 ops/s
# Warmup Iteration  30: 117017.335 ops/s
Iteration   1: 117024.639 ops/s
Iteration   2: 115804.007 ops/s
Iteration   3: 116722.959 ops/s
Iteration   4: 116925.101 ops/s
Iteration   5: 116482.887 ops/s
Iteration   6: 117565.527 ops/s
Iteration   7: 117336.805 ops/s
Iteration   8: 116992.931 ops/s
Iteration   9: 116697.829 ops/s
Iteration  10: 116881.707 ops/s
Iteration  11: 117142.805 ops/s
Iteration  12: 117111.859 ops/s
Iteration  13: 116946.690 ops/s
Iteration  14: 116778.789 ops/s
Iteration  15: 116695.889 ops/s
Iteration  16: 117450.556 ops/s
Iteration  17: 117230.059 ops/s
Iteration  18: 117151.793 ops/s
Iteration  19: 116118.032 ops/s
Iteration  20: 116181.971 ops/s
Iteration  21: 115869.124 ops/s
Iteration  22: 117015.376 ops/s
Iteration  23: 117205.748 ops/s
Iteration  24: 117379.878 ops/s
Iteration  25: 117229.270 ops/s
Iteration  26: 116484.867 ops/s
Iteration  27: 116753.312 ops/s
Iteration  28: 116417.478 ops/s
Iteration  29: 115753.809 ops/s
Iteration  30: 116783.177 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_424._Benchmark.benchmark_Cluster_424":
  116804.496 ±(99.9%) 324.942 ops/s [Average]
  (min, avg, max) = (115753.809, 116804.496, 117565.527), stdev = 486.358
  CI (99.9%): [116479.554, 117129.438] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_424._Benchmark.benchmark_Cluster_424  thrpt   30  116804.496 ± 324.942  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_425._Benchmark.benchmark_Cluster_425$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_425._Benchmark.benchmark_Cluster_425

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71582.433 ops/s
# Warmup Iteration   2: 96566.965 ops/s
# Warmup Iteration   3: 175684.616 ops/s
# Warmup Iteration   4: 191425.898 ops/s
# Warmup Iteration   5: 190598.269 ops/s
# Warmup Iteration   6: 191881.761 ops/s
# Warmup Iteration   7: 192181.090 ops/s
# Warmup Iteration   8: 187600.436 ops/s
# Warmup Iteration   9: 137297.249 ops/s
# Warmup Iteration  10: 191875.691 ops/s
# Warmup Iteration  11: 192058.878 ops/s
# Warmup Iteration  12: 191814.806 ops/s
# Warmup Iteration  13: 191615.541 ops/s
# Warmup Iteration  14: 191958.617 ops/s
# Warmup Iteration  15: 192056.504 ops/s
# Warmup Iteration  16: 191768.084 ops/s
# Warmup Iteration  17: 192439.502 ops/s
# Warmup Iteration  18: 192395.135 ops/s
# Warmup Iteration  19: 192152.970 ops/s
# Warmup Iteration  20: 192389.945 ops/s
# Warmup Iteration  21: 192338.133 ops/s
# Warmup Iteration  22: 192048.061 ops/s
# Warmup Iteration  23: 192398.716 ops/s
# Warmup Iteration  24: 192413.650 ops/s
# Warmup Iteration  25: 192369.795 ops/s
# Warmup Iteration  26: 192242.858 ops/s
# Warmup Iteration  27: 192224.474 ops/s
# Warmup Iteration  28: 192207.936 ops/s
# Warmup Iteration  29: 192195.577 ops/s
# Warmup Iteration  30: 192117.880 ops/s
Iteration   1: 192330.129 ops/s
Iteration   2: 192275.065 ops/s
Iteration   3: 192234.224 ops/s
Iteration   4: 192185.257 ops/s
Iteration   5: 192617.980 ops/s
Iteration   6: 192667.595 ops/s
Iteration   7: 192163.241 ops/s
Iteration   8: 192657.158 ops/s
Iteration   9: 192502.952 ops/s
Iteration  10: 192301.121 ops/s
Iteration  11: 192444.951 ops/s
Iteration  12: 192027.003 ops/s
Iteration  13: 192284.592 ops/s
Iteration  14: 192225.188 ops/s
Iteration  15: 192238.892 ops/s
Iteration  16: 192577.701 ops/s
Iteration  17: 192394.776 ops/s
Iteration  18: 192256.147 ops/s
Iteration  19: 192373.726 ops/s
Iteration  20: 191927.276 ops/s
Iteration  21: 192445.727 ops/s
Iteration  22: 192425.291 ops/s
Iteration  23: 192493.323 ops/s
Iteration  24: 192818.805 ops/s
Iteration  25: 192030.152 ops/s
Iteration  26: 192751.760 ops/s
Iteration  27: 192311.989 ops/s
Iteration  28: 192076.288 ops/s
Iteration  29: 192644.932 ops/s
Iteration  30: 192432.478 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_425._Benchmark.benchmark_Cluster_425":
  192370.524 ±(99.9%) 148.780 ops/s [Average]
  (min, avg, max) = (191927.276, 192370.524, 192818.805), stdev = 222.686
  CI (99.9%): [192221.744, 192519.304] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_425._Benchmark.benchmark_Cluster_425  thrpt   30  192370.524 ± 148.780  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_426._Benchmark.benchmark_Cluster_426$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_426._Benchmark.benchmark_Cluster_426

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59920.001 ops/s
# Warmup Iteration   2: 93389.729 ops/s
# Warmup Iteration   3: 121942.155 ops/s
# Warmup Iteration   4: 165010.204 ops/s
# Warmup Iteration   5: 165477.730 ops/s
# Warmup Iteration   6: 163185.166 ops/s
# Warmup Iteration   7: 164972.286 ops/s
# Warmup Iteration   8: 165045.956 ops/s
# Warmup Iteration   9: 165081.009 ops/s
# Warmup Iteration  10: 164867.060 ops/s
# Warmup Iteration  11: 114515.081 ops/s
# Warmup Iteration  12: 161431.635 ops/s
# Warmup Iteration  13: 164543.630 ops/s
# Warmup Iteration  14: 164465.584 ops/s
# Warmup Iteration  15: 163658.348 ops/s
# Warmup Iteration  16: 164828.084 ops/s
# Warmup Iteration  17: 164262.655 ops/s
# Warmup Iteration  18: 164200.781 ops/s
# Warmup Iteration  19: 164973.641 ops/s
# Warmup Iteration  20: 164844.053 ops/s
# Warmup Iteration  21: 164610.651 ops/s
# Warmup Iteration  22: 164433.534 ops/s
# Warmup Iteration  23: 164548.628 ops/s
# Warmup Iteration  24: 164605.063 ops/s
# Warmup Iteration  25: 164392.855 ops/s
# Warmup Iteration  26: 164803.937 ops/s
# Warmup Iteration  27: 164613.145 ops/s
# Warmup Iteration  28: 164889.081 ops/s
# Warmup Iteration  29: 164509.165 ops/s
# Warmup Iteration  30: 164599.842 ops/s
Iteration   1: 164729.754 ops/s
Iteration   2: 164880.475 ops/s
Iteration   3: 165180.706 ops/s
Iteration   4: 164434.553 ops/s
Iteration   5: 164939.883 ops/s
Iteration   6: 163707.331 ops/s
Iteration   7: 164709.228 ops/s
Iteration   8: 163843.129 ops/s
Iteration   9: 164722.764 ops/s
Iteration  10: 164566.813 ops/s
Iteration  11: 164263.981 ops/s
Iteration  12: 164829.897 ops/s
Iteration  13: 164717.912 ops/s
Iteration  14: 165328.214 ops/s
Iteration  15: 164243.717 ops/s
Iteration  16: 163313.905 ops/s
Iteration  17: 164348.784 ops/s
Iteration  18: 164511.479 ops/s
Iteration  19: 164795.687 ops/s
Iteration  20: 165025.671 ops/s
Iteration  21: 164732.974 ops/s
Iteration  22: 164878.523 ops/s
Iteration  23: 164929.529 ops/s
Iteration  24: 164324.422 ops/s
Iteration  25: 164403.471 ops/s
Iteration  26: 164908.074 ops/s
Iteration  27: 164939.220 ops/s
Iteration  28: 164245.034 ops/s
Iteration  29: 164554.259 ops/s
Iteration  30: 164878.249 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_426._Benchmark.benchmark_Cluster_426":
  164596.255 ±(99.9%) 290.649 ops/s [Average]
  (min, avg, max) = (163313.905, 164596.255, 165328.214), stdev = 435.030
  CI (99.9%): [164305.605, 164886.904] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_426._Benchmark.benchmark_Cluster_426  thrpt   30  164596.255 ± 290.649  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_427._Benchmark.benchmark_Cluster_427$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_427._Benchmark.benchmark_Cluster_427

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 48249.281 ops/s
# Warmup Iteration   2: 88099.939 ops/s
# Warmup Iteration   3: 89621.349 ops/s
# Warmup Iteration   4: 150930.277 ops/s
# Warmup Iteration   5: 154365.018 ops/s
# Warmup Iteration   6: 153322.882 ops/s
# Warmup Iteration   7: 153542.605 ops/s
# Warmup Iteration   8: 154325.604 ops/s
# Warmup Iteration   9: 154802.539 ops/s
# Warmup Iteration  10: 153734.689 ops/s
# Warmup Iteration  11: 153624.662 ops/s
# Warmup Iteration  12: 154832.927 ops/s
# Warmup Iteration  13: 98465.244 ops/s
# Warmup Iteration  14: 154572.085 ops/s
# Warmup Iteration  15: 154011.151 ops/s
# Warmup Iteration  16: 154942.797 ops/s
# Warmup Iteration  17: 157371.275 ops/s
# Warmup Iteration  18: 158006.551 ops/s
# Warmup Iteration  19: 157633.052 ops/s
# Warmup Iteration  20: 157687.450 ops/s
# Warmup Iteration  21: 157841.550 ops/s
# Warmup Iteration  22: 157941.872 ops/s
# Warmup Iteration  23: 157793.089 ops/s
# Warmup Iteration  24: 158200.960 ops/s
# Warmup Iteration  25: 158000.940 ops/s
# Warmup Iteration  26: 157919.519 ops/s
# Warmup Iteration  27: 158049.066 ops/s
# Warmup Iteration  28: 157790.499 ops/s
# Warmup Iteration  29: 157249.061 ops/s
# Warmup Iteration  30: 157437.366 ops/s
Iteration   1: 158006.252 ops/s
Iteration   2: 157605.759 ops/s
Iteration   3: 157659.192 ops/s
Iteration   4: 158011.943 ops/s
Iteration   5: 157642.482 ops/s
Iteration   6: 157107.528 ops/s
Iteration   7: 157147.251 ops/s
Iteration   8: 156917.247 ops/s
Iteration   9: 157187.960 ops/s
Iteration  10: 157115.845 ops/s
Iteration  11: 157675.452 ops/s
Iteration  12: 157910.681 ops/s
Iteration  13: 158309.260 ops/s
Iteration  14: 157547.330 ops/s
Iteration  15: 158422.834 ops/s
Iteration  16: 157798.088 ops/s
Iteration  17: 157222.446 ops/s
Iteration  18: 157007.955 ops/s
Iteration  19: 157471.069 ops/s
Iteration  20: 157352.471 ops/s
Iteration  21: 157858.570 ops/s
Iteration  22: 156699.392 ops/s
Iteration  23: 157842.044 ops/s
Iteration  24: 157534.560 ops/s
Iteration  25: 157873.656 ops/s
Iteration  26: 158338.177 ops/s
Iteration  27: 158060.388 ops/s
Iteration  28: 157881.841 ops/s
Iteration  29: 157759.778 ops/s
Iteration  30: 157081.493 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_427._Benchmark.benchmark_Cluster_427":
  157601.631 ±(99.9%) 296.190 ops/s [Average]
  (min, avg, max) = (156699.392, 157601.631, 158422.834), stdev = 443.323
  CI (99.9%): [157305.442, 157897.821] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_427._Benchmark.benchmark_Cluster_427  thrpt   30  157601.631 ± 296.190  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_428._Benchmark.benchmark_Cluster_428$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_428._Benchmark.benchmark_Cluster_428

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 39402.778 ops/s
# Warmup Iteration   2: 59329.167 ops/s
# Warmup Iteration   3: 130539.959 ops/s
# Warmup Iteration   4: 129324.947 ops/s
# Warmup Iteration   5: 130495.207 ops/s
# Warmup Iteration   6: 130535.194 ops/s
# Warmup Iteration   7: 88874.951 ops/s
# Warmup Iteration   8: 130332.911 ops/s
# Warmup Iteration   9: 130728.006 ops/s
# Warmup Iteration  10: 130685.895 ops/s
# Warmup Iteration  11: 130522.473 ops/s
# Warmup Iteration  12: 130969.800 ops/s
# Warmup Iteration  13: 130632.095 ops/s
# Warmup Iteration  14: 130773.455 ops/s
# Warmup Iteration  15: 130330.025 ops/s
# Warmup Iteration  16: 130587.671 ops/s
# Warmup Iteration  17: 131174.279 ops/s
# Warmup Iteration  18: 131308.705 ops/s
# Warmup Iteration  19: 131356.074 ops/s
# Warmup Iteration  20: 131007.013 ops/s
# Warmup Iteration  21: 130802.835 ops/s
# Warmup Iteration  22: 131344.534 ops/s
# Warmup Iteration  23: 130997.774 ops/s
# Warmup Iteration  24: 131228.009 ops/s
# Warmup Iteration  25: 131353.384 ops/s
# Warmup Iteration  26: 131437.457 ops/s
# Warmup Iteration  27: 131520.711 ops/s
# Warmup Iteration  28: 131231.540 ops/s
# Warmup Iteration  29: 131494.651 ops/s
# Warmup Iteration  30: 131504.543 ops/s
Iteration   1: 131407.439 ops/s
Iteration   2: 131256.477 ops/s
Iteration   3: 131427.589 ops/s
Iteration   4: 131259.209 ops/s
Iteration   5: 131377.639 ops/s
Iteration   6: 131415.180 ops/s
Iteration   7: 131346.760 ops/s
Iteration   8: 131112.762 ops/s
Iteration   9: 131294.138 ops/s
Iteration  10: 131481.198 ops/s
Iteration  11: 131234.298 ops/s
Iteration  12: 131096.736 ops/s
Iteration  13: 131503.115 ops/s
Iteration  14: 131195.045 ops/s
Iteration  15: 131199.048 ops/s
Iteration  16: 131736.475 ops/s
Iteration  17: 131114.021 ops/s
Iteration  18: 131481.159 ops/s
Iteration  19: 131005.596 ops/s
Iteration  20: 131013.730 ops/s
Iteration  21: 130713.588 ops/s
Iteration  22: 131189.694 ops/s
Iteration  23: 131354.148 ops/s
Iteration  24: 131354.849 ops/s
Iteration  25: 131442.521 ops/s
Iteration  26: 131345.163 ops/s
Iteration  27: 130993.125 ops/s
Iteration  28: 131086.055 ops/s
Iteration  29: 131058.483 ops/s
Iteration  30: 131254.696 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_428._Benchmark.benchmark_Cluster_428":
  131258.331 ±(99.9%) 135.226 ops/s [Average]
  (min, avg, max) = (130713.588, 131258.331, 131736.475), stdev = 202.399
  CI (99.9%): [131123.106, 131393.557] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_428._Benchmark.benchmark_Cluster_428  thrpt   30  131258.331 ± 135.226  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_429._Benchmark.benchmark_Cluster_429$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_429._Benchmark.benchmark_Cluster_429

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63695.444 ops/s
# Warmup Iteration   2: 80915.655 ops/s
# Warmup Iteration   3: 97482.717 ops/s
# Warmup Iteration   4: 134703.183 ops/s
# Warmup Iteration   5: 134689.378 ops/s
# Warmup Iteration   6: 133191.525 ops/s
# Warmup Iteration   7: 134798.228 ops/s
# Warmup Iteration   8: 134199.828 ops/s
# Warmup Iteration   9: 134529.982 ops/s
# Warmup Iteration  10: 134662.223 ops/s
# Warmup Iteration  11: 134354.907 ops/s
# Warmup Iteration  12: 120354.236 ops/s
# Warmup Iteration  13: 105718.037 ops/s
# Warmup Iteration  14: 134590.534 ops/s
# Warmup Iteration  15: 134599.077 ops/s
# Warmup Iteration  16: 133766.233 ops/s
# Warmup Iteration  17: 140897.791 ops/s
# Warmup Iteration  18: 140071.065 ops/s
# Warmup Iteration  19: 140449.050 ops/s
# Warmup Iteration  20: 141165.226 ops/s
# Warmup Iteration  21: 140103.044 ops/s
# Warmup Iteration  22: 141007.283 ops/s
# Warmup Iteration  23: 140592.567 ops/s
# Warmup Iteration  24: 141182.876 ops/s
# Warmup Iteration  25: 140404.307 ops/s
# Warmup Iteration  26: 140938.453 ops/s
# Warmup Iteration  27: 141163.845 ops/s
# Warmup Iteration  28: 140882.208 ops/s
# Warmup Iteration  29: 141139.399 ops/s
# Warmup Iteration  30: 140785.658 ops/s
Iteration   1: 141072.905 ops/s
Iteration   2: 140312.755 ops/s
Iteration   3: 139735.894 ops/s
Iteration   4: 140795.385 ops/s
Iteration   5: 139768.825 ops/s
Iteration   6: 140717.021 ops/s
Iteration   7: 141491.181 ops/s
Iteration   8: 140727.191 ops/s
Iteration   9: 140556.476 ops/s
Iteration  10: 140942.279 ops/s
Iteration  11: 140473.044 ops/s
Iteration  12: 141286.526 ops/s
Iteration  13: 140892.429 ops/s
Iteration  14: 140912.897 ops/s
Iteration  15: 140543.099 ops/s
Iteration  16: 141352.323 ops/s
Iteration  17: 140120.624 ops/s
Iteration  18: 141222.747 ops/s
Iteration  19: 140666.939 ops/s
Iteration  20: 140147.029 ops/s
Iteration  21: 141138.012 ops/s
Iteration  22: 141403.655 ops/s
Iteration  23: 141175.102 ops/s
Iteration  24: 139780.659 ops/s
Iteration  25: 140667.288 ops/s
Iteration  26: 140539.085 ops/s
Iteration  27: 141154.286 ops/s
Iteration  28: 140898.261 ops/s
Iteration  29: 140441.629 ops/s
Iteration  30: 140867.536 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_429._Benchmark.benchmark_Cluster_429":
  140726.769 ±(99.9%) 322.300 ops/s [Average]
  (min, avg, max) = (139735.894, 140726.769, 141491.181), stdev = 482.404
  CI (99.9%): [140404.469, 141049.070] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_429._Benchmark.benchmark_Cluster_429  thrpt   30  140726.769 ± 322.300  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_43._Benchmark.benchmark_Cluster_43$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_43._Benchmark.benchmark_Cluster_43

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 57528.927 ops/s
# Warmup Iteration   2: 86164.861 ops/s
# Warmup Iteration   3: 128382.660 ops/s
# Warmup Iteration   4: 159579.147 ops/s
# Warmup Iteration   5: 158053.682 ops/s
# Warmup Iteration   6: 159923.654 ops/s
# Warmup Iteration   7: 159462.159 ops/s
# Warmup Iteration   8: 160508.025 ops/s
# Warmup Iteration   9: 159993.855 ops/s
# Warmup Iteration  10: 110706.525 ops/s
# Warmup Iteration  11: 156146.852 ops/s
# Warmup Iteration  12: 159666.162 ops/s
# Warmup Iteration  13: 159287.600 ops/s
# Warmup Iteration  14: 159977.279 ops/s
# Warmup Iteration  15: 160185.640 ops/s
# Warmup Iteration  16: 159703.128 ops/s
# Warmup Iteration  17: 160086.314 ops/s
# Warmup Iteration  18: 160197.113 ops/s
# Warmup Iteration  19: 160299.716 ops/s
# Warmup Iteration  20: 159952.692 ops/s
# Warmup Iteration  21: 160216.396 ops/s
# Warmup Iteration  22: 159340.371 ops/s
# Warmup Iteration  23: 160473.088 ops/s
# Warmup Iteration  24: 160126.567 ops/s
# Warmup Iteration  25: 160405.853 ops/s
# Warmup Iteration  26: 160022.651 ops/s
# Warmup Iteration  27: 160033.173 ops/s
# Warmup Iteration  28: 159682.089 ops/s
# Warmup Iteration  29: 159840.532 ops/s
# Warmup Iteration  30: 159517.845 ops/s
Iteration   1: 159913.124 ops/s
Iteration   2: 159858.753 ops/s
Iteration   3: 160700.521 ops/s
Iteration   4: 160455.708 ops/s
Iteration   5: 159785.655 ops/s
Iteration   6: 160006.424 ops/s
Iteration   7: 159970.649 ops/s
Iteration   8: 159768.963 ops/s
Iteration   9: 159601.201 ops/s
Iteration  10: 159952.372 ops/s
Iteration  11: 159914.937 ops/s
Iteration  12: 160510.929 ops/s
Iteration  13: 159751.936 ops/s
Iteration  14: 160220.952 ops/s
Iteration  15: 160771.010 ops/s
Iteration  16: 158612.829 ops/s
Iteration  17: 160178.589 ops/s
Iteration  18: 160534.219 ops/s
Iteration  19: 160161.973 ops/s
Iteration  20: 160430.596 ops/s
Iteration  21: 159560.290 ops/s
Iteration  22: 158592.815 ops/s
Iteration  23: 160114.163 ops/s
Iteration  24: 159823.809 ops/s
Iteration  25: 159516.545 ops/s
Iteration  26: 159701.820 ops/s
Iteration  27: 159837.619 ops/s
Iteration  28: 159673.106 ops/s
Iteration  29: 157938.366 ops/s
Iteration  30: 158876.944 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_43._Benchmark.benchmark_Cluster_43":
  159824.561 ±(99.9%) 423.922 ops/s [Average]
  (min, avg, max) = (157938.366, 159824.561, 160771.010), stdev = 634.507
  CI (99.9%): [159400.638, 160248.483] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_43._Benchmark.benchmark_Cluster_43  thrpt   30  159824.561 ± 423.922  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_430._Benchmark.benchmark_Cluster_430$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_430._Benchmark.benchmark_Cluster_430

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 33877.879 ops/s
# Warmup Iteration   2: 65701.923 ops/s
# Warmup Iteration   3: 79773.862 ops/s
# Warmup Iteration   4: 115483.513 ops/s
# Warmup Iteration   5: 116177.234 ops/s
# Warmup Iteration   6: 115815.138 ops/s
# Warmup Iteration   7: 115971.037 ops/s
# Warmup Iteration   8: 116343.735 ops/s
# Warmup Iteration   9: 116680.655 ops/s
# Warmup Iteration  10: 116300.867 ops/s
# Warmup Iteration  11: 83568.647 ops/s
# Warmup Iteration  12: 113942.017 ops/s
# Warmup Iteration  13: 116547.159 ops/s
# Warmup Iteration  14: 116281.024 ops/s
# Warmup Iteration  15: 116188.862 ops/s
# Warmup Iteration  16: 116626.802 ops/s
# Warmup Iteration  17: 117281.022 ops/s
# Warmup Iteration  18: 116949.204 ops/s
# Warmup Iteration  19: 117447.773 ops/s
# Warmup Iteration  20: 117497.289 ops/s
# Warmup Iteration  21: 117563.989 ops/s
# Warmup Iteration  22: 117072.151 ops/s
# Warmup Iteration  23: 117140.530 ops/s
# Warmup Iteration  24: 117183.746 ops/s
# Warmup Iteration  25: 117153.367 ops/s
# Warmup Iteration  26: 117029.376 ops/s
# Warmup Iteration  27: 116970.354 ops/s
# Warmup Iteration  28: 116859.084 ops/s
# Warmup Iteration  29: 116984.896 ops/s
# Warmup Iteration  30: 116722.502 ops/s
Iteration   1: 117105.201 ops/s
Iteration   2: 116674.278 ops/s
Iteration   3: 116328.063 ops/s
Iteration   4: 117070.753 ops/s
Iteration   5: 116107.002 ops/s
Iteration   6: 117153.917 ops/s
Iteration   7: 117271.154 ops/s
Iteration   8: 117310.599 ops/s
Iteration   9: 117361.651 ops/s
Iteration  10: 116615.702 ops/s
Iteration  11: 116848.241 ops/s
Iteration  12: 117211.592 ops/s
Iteration  13: 117210.680 ops/s
Iteration  14: 117600.298 ops/s
Iteration  15: 117306.876 ops/s
Iteration  16: 117082.271 ops/s
Iteration  17: 117023.539 ops/s
Iteration  18: 117143.821 ops/s
Iteration  19: 117355.278 ops/s
Iteration  20: 117113.440 ops/s
Iteration  21: 116936.310 ops/s
Iteration  22: 117219.402 ops/s
Iteration  23: 117160.533 ops/s
Iteration  24: 116578.129 ops/s
Iteration  25: 117134.924 ops/s
Iteration  26: 117140.750 ops/s
Iteration  27: 116621.704 ops/s
Iteration  28: 116921.287 ops/s
Iteration  29: 116926.967 ops/s
Iteration  30: 116893.458 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_430._Benchmark.benchmark_Cluster_430":
  117014.261 ±(99.9%) 215.993 ops/s [Average]
  (min, avg, max) = (116107.002, 117014.261, 117600.298), stdev = 323.288
  CI (99.9%): [116798.268, 117230.253] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_430._Benchmark.benchmark_Cluster_430  thrpt   30  117014.261 ± 215.993  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_431._Benchmark.benchmark_Cluster_431$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_431._Benchmark.benchmark_Cluster_431

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63116.038 ops/s
# Warmup Iteration   2: 86035.503 ops/s
# Warmup Iteration   3: 115324.754 ops/s
# Warmup Iteration   4: 158140.875 ops/s
# Warmup Iteration   5: 157999.665 ops/s
# Warmup Iteration   6: 156745.719 ops/s
# Warmup Iteration   7: 158137.264 ops/s
# Warmup Iteration   8: 158069.711 ops/s
# Warmup Iteration   9: 157949.818 ops/s
# Warmup Iteration  10: 158438.419 ops/s
# Warmup Iteration  11: 107743.297 ops/s
# Warmup Iteration  12: 154197.253 ops/s
# Warmup Iteration  13: 157743.121 ops/s
# Warmup Iteration  14: 157770.993 ops/s
# Warmup Iteration  15: 158203.513 ops/s
# Warmup Iteration  16: 157650.735 ops/s
# Warmup Iteration  17: 159849.108 ops/s
# Warmup Iteration  18: 160083.003 ops/s
# Warmup Iteration  19: 160388.971 ops/s
# Warmup Iteration  20: 160565.748 ops/s
# Warmup Iteration  21: 159969.759 ops/s
# Warmup Iteration  22: 160277.085 ops/s
# Warmup Iteration  23: 160306.980 ops/s
# Warmup Iteration  24: 159974.235 ops/s
# Warmup Iteration  25: 160278.612 ops/s
# Warmup Iteration  26: 160576.271 ops/s
# Warmup Iteration  27: 160350.803 ops/s
# Warmup Iteration  28: 160259.389 ops/s
# Warmup Iteration  29: 160259.009 ops/s
# Warmup Iteration  30: 160484.784 ops/s
Iteration   1: 160677.850 ops/s
Iteration   2: 160277.641 ops/s
Iteration   3: 159410.116 ops/s
Iteration   4: 159975.620 ops/s
Iteration   5: 159635.616 ops/s
Iteration   6: 159267.903 ops/s
Iteration   7: 159107.677 ops/s
Iteration   8: 160018.525 ops/s
Iteration   9: 158722.518 ops/s
Iteration  10: 159110.040 ops/s
Iteration  11: 159208.673 ops/s
Iteration  12: 159379.377 ops/s
Iteration  13: 159902.956 ops/s
Iteration  14: 159934.342 ops/s
Iteration  15: 160408.052 ops/s
Iteration  16: 159269.707 ops/s
Iteration  17: 159455.469 ops/s
Iteration  18: 159484.780 ops/s
Iteration  19: 159600.834 ops/s
Iteration  20: 159940.427 ops/s
Iteration  21: 160054.474 ops/s
Iteration  22: 159679.562 ops/s
Iteration  23: 159771.039 ops/s
Iteration  24: 159853.006 ops/s
Iteration  25: 160727.673 ops/s
Iteration  26: 160779.046 ops/s
Iteration  27: 160046.709 ops/s
Iteration  28: 159916.989 ops/s
Iteration  29: 160146.939 ops/s
Iteration  30: 160332.031 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_431._Benchmark.benchmark_Cluster_431":
  159803.186 ±(99.9%) 340.201 ops/s [Average]
  (min, avg, max) = (158722.518, 159803.186, 160779.046), stdev = 509.197
  CI (99.9%): [159462.985, 160143.387] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_431._Benchmark.benchmark_Cluster_431  thrpt   30  159803.186 ± 340.201  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_432._Benchmark.benchmark_Cluster_432$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_432._Benchmark.benchmark_Cluster_432

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 90021.118 ops/s
# Warmup Iteration   2: 96664.489 ops/s
# Warmup Iteration   3: 97742.994 ops/s
# Warmup Iteration   4: 103921.600 ops/s
# Warmup Iteration   5: 132808.139 ops/s
# Warmup Iteration   6: 133425.391 ops/s
# Warmup Iteration   7: 132777.268 ops/s
# Warmup Iteration   8: 132977.243 ops/s
# Warmup Iteration   9: 132135.067 ops/s
# Warmup Iteration  10: 132368.975 ops/s
# Warmup Iteration  11: 132104.583 ops/s
# Warmup Iteration  12: 132145.895 ops/s
# Warmup Iteration  13: 132043.773 ops/s
# Warmup Iteration  14: 132357.868 ops/s
# Warmup Iteration  15: 132161.442 ops/s
# Warmup Iteration  16: 133052.927 ops/s
# Warmup Iteration  17: 139336.694 ops/s
# Warmup Iteration  18: 139172.891 ops/s
# Warmup Iteration  19: 138810.243 ops/s
# Warmup Iteration  20: 135706.326 ops/s
# Warmup Iteration  21: 101473.821 ops/s
# Warmup Iteration  22: 134908.271 ops/s
# Warmup Iteration  23: 139198.217 ops/s
# Warmup Iteration  24: 138526.177 ops/s
# Warmup Iteration  25: 139228.502 ops/s
# Warmup Iteration  26: 138182.674 ops/s
# Warmup Iteration  27: 138516.440 ops/s
# Warmup Iteration  28: 138593.694 ops/s
# Warmup Iteration  29: 138776.630 ops/s
# Warmup Iteration  30: 138898.583 ops/s
Iteration   1: 138323.310 ops/s
Iteration   2: 138878.448 ops/s
Iteration   3: 138455.817 ops/s
Iteration   4: 138083.274 ops/s
Iteration   5: 137840.781 ops/s
Iteration   6: 138123.688 ops/s
Iteration   7: 138190.202 ops/s
Iteration   8: 139043.559 ops/s
Iteration   9: 139039.285 ops/s
Iteration  10: 138218.940 ops/s
Iteration  11: 138488.735 ops/s
Iteration  12: 138959.634 ops/s
Iteration  13: 138728.652 ops/s
Iteration  14: 139320.874 ops/s
Iteration  15: 139126.398 ops/s
Iteration  16: 138826.506 ops/s
Iteration  17: 138973.074 ops/s
Iteration  18: 138006.985 ops/s
Iteration  19: 139254.656 ops/s
Iteration  20: 138873.161 ops/s
Iteration  21: 139145.953 ops/s
Iteration  22: 139118.298 ops/s
Iteration  23: 139186.431 ops/s
Iteration  24: 138911.885 ops/s
Iteration  25: 139073.211 ops/s
Iteration  26: 138899.734 ops/s
Iteration  27: 138867.146 ops/s
Iteration  28: 139025.379 ops/s
Iteration  29: 138453.410 ops/s
Iteration  30: 138595.592 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_432._Benchmark.benchmark_Cluster_432":
  138734.434 ±(99.9%) 277.466 ops/s [Average]
  (min, avg, max) = (137840.781, 138734.434, 139320.874), stdev = 415.297
  CI (99.9%): [138456.969, 139011.900] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_432._Benchmark.benchmark_Cluster_432  thrpt   30  138734.434 ± 277.466  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_433._Benchmark.benchmark_Cluster_433$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_433._Benchmark.benchmark_Cluster_433

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63850.407 ops/s
# Warmup Iteration   2: 89273.527 ops/s
# Warmup Iteration   3: 130858.571 ops/s
# Warmup Iteration   4: 162170.695 ops/s
# Warmup Iteration   5: 159993.065 ops/s
# Warmup Iteration   6: 161939.819 ops/s
# Warmup Iteration   7: 162552.460 ops/s
# Warmup Iteration   8: 162253.089 ops/s
# Warmup Iteration   9: 161846.410 ops/s
# Warmup Iteration  10: 133064.139 ops/s
# Warmup Iteration  11: 141504.227 ops/s
# Warmup Iteration  12: 162441.929 ops/s
# Warmup Iteration  13: 161935.560 ops/s
# Warmup Iteration  14: 162029.251 ops/s
# Warmup Iteration  15: 161461.182 ops/s
# Warmup Iteration  16: 162452.614 ops/s
# Warmup Iteration  17: 162769.525 ops/s
# Warmup Iteration  18: 162337.677 ops/s
# Warmup Iteration  19: 162572.735 ops/s
# Warmup Iteration  20: 162326.434 ops/s
# Warmup Iteration  21: 162871.929 ops/s
# Warmup Iteration  22: 162571.043 ops/s
# Warmup Iteration  23: 162506.506 ops/s
# Warmup Iteration  24: 162103.931 ops/s
# Warmup Iteration  25: 162524.737 ops/s
# Warmup Iteration  26: 162544.800 ops/s
# Warmup Iteration  27: 162382.415 ops/s
# Warmup Iteration  28: 162163.239 ops/s
# Warmup Iteration  29: 162321.142 ops/s
# Warmup Iteration  30: 162050.469 ops/s
Iteration   1: 162626.994 ops/s
Iteration   2: 162374.961 ops/s
Iteration   3: 162624.578 ops/s
Iteration   4: 162317.728 ops/s
Iteration   5: 162412.931 ops/s
Iteration   6: 162093.794 ops/s
Iteration   7: 161548.341 ops/s
Iteration   8: 162984.368 ops/s
Iteration   9: 162136.301 ops/s
Iteration  10: 163028.441 ops/s
Iteration  11: 162428.560 ops/s
Iteration  12: 162933.998 ops/s
Iteration  13: 162562.074 ops/s
Iteration  14: 163033.958 ops/s
Iteration  15: 162623.882 ops/s
Iteration  16: 161918.758 ops/s
Iteration  17: 162416.204 ops/s
Iteration  18: 162597.727 ops/s
Iteration  19: 162400.931 ops/s
Iteration  20: 162560.296 ops/s
Iteration  21: 162329.509 ops/s
Iteration  22: 162494.035 ops/s
Iteration  23: 162414.747 ops/s
Iteration  24: 162254.609 ops/s
Iteration  25: 162304.055 ops/s
Iteration  26: 161773.445 ops/s
Iteration  27: 161818.929 ops/s
Iteration  28: 162466.745 ops/s
Iteration  29: 162389.565 ops/s
Iteration  30: 162177.769 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_433._Benchmark.benchmark_Cluster_433":
  162401.608 ±(99.9%) 236.179 ops/s [Average]
  (min, avg, max) = (161548.341, 162401.608, 163033.958), stdev = 353.502
  CI (99.9%): [162165.429, 162637.787] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_433._Benchmark.benchmark_Cluster_433  thrpt   30  162401.608 ± 236.179  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_434._Benchmark.benchmark_Cluster_434$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_434._Benchmark.benchmark_Cluster_434

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64911.256 ops/s
# Warmup Iteration   2: 74515.845 ops/s
# Warmup Iteration   3: 109027.133 ops/s
# Warmup Iteration   4: 130480.410 ops/s
# Warmup Iteration   5: 130136.285 ops/s
# Warmup Iteration   6: 130773.589 ops/s
# Warmup Iteration   7: 130478.927 ops/s
# Warmup Iteration   8: 129787.257 ops/s
# Warmup Iteration   9: 130571.955 ops/s
# Warmup Iteration  10: 130848.703 ops/s
# Warmup Iteration  11: 88817.290 ops/s
# Warmup Iteration  12: 129890.200 ops/s
# Warmup Iteration  13: 130548.041 ops/s
# Warmup Iteration  14: 130552.841 ops/s
# Warmup Iteration  15: 130711.122 ops/s
# Warmup Iteration  16: 130477.596 ops/s
# Warmup Iteration  17: 135213.835 ops/s
# Warmup Iteration  18: 135050.087 ops/s
# Warmup Iteration  19: 135163.422 ops/s
# Warmup Iteration  20: 135471.131 ops/s
# Warmup Iteration  21: 135584.968 ops/s
# Warmup Iteration  22: 135867.425 ops/s
# Warmup Iteration  23: 136400.411 ops/s
# Warmup Iteration  24: 136281.008 ops/s
# Warmup Iteration  25: 135780.606 ops/s
# Warmup Iteration  26: 135778.208 ops/s
# Warmup Iteration  27: 135144.582 ops/s
# Warmup Iteration  28: 135803.058 ops/s
# Warmup Iteration  29: 135525.742 ops/s
# Warmup Iteration  30: 135671.902 ops/s
Iteration   1: 135849.659 ops/s
Iteration   2: 136380.424 ops/s
Iteration   3: 135971.557 ops/s
Iteration   4: 135735.302 ops/s
Iteration   5: 135775.336 ops/s
Iteration   6: 135718.471 ops/s
Iteration   7: 135826.445 ops/s
Iteration   8: 135946.032 ops/s
Iteration   9: 136192.101 ops/s
Iteration  10: 134949.020 ops/s
Iteration  11: 136431.965 ops/s
Iteration  12: 135937.411 ops/s
Iteration  13: 135829.780 ops/s
Iteration  14: 136374.618 ops/s
Iteration  15: 136206.681 ops/s
Iteration  16: 136272.581 ops/s
Iteration  17: 135998.429 ops/s
Iteration  18: 136353.802 ops/s
Iteration  19: 135907.818 ops/s
Iteration  20: 135784.282 ops/s
Iteration  21: 136025.147 ops/s
Iteration  22: 135418.092 ops/s
Iteration  23: 135748.049 ops/s
Iteration  24: 135594.892 ops/s
Iteration  25: 135665.509 ops/s
Iteration  26: 135535.506 ops/s
Iteration  27: 135851.575 ops/s
Iteration  28: 136085.063 ops/s
Iteration  29: 135675.732 ops/s
Iteration  30: 135253.831 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_434._Benchmark.benchmark_Cluster_434":
  135876.504 ±(99.9%) 226.317 ops/s [Average]
  (min, avg, max) = (134949.020, 135876.504, 136431.965), stdev = 338.740
  CI (99.9%): [135650.187, 136102.820] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_434._Benchmark.benchmark_Cluster_434  thrpt   30  135876.504 ± 226.317  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_435._Benchmark.benchmark_Cluster_435$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_435._Benchmark.benchmark_Cluster_435

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 34362.012 ops/s
# Warmup Iteration   2: 62170.697 ops/s
# Warmup Iteration   3: 77719.427 ops/s
# Warmup Iteration   4: 110360.569 ops/s
# Warmup Iteration   5: 110445.283 ops/s
# Warmup Iteration   6: 109288.525 ops/s
# Warmup Iteration   7: 110550.386 ops/s
# Warmup Iteration   8: 110439.569 ops/s
# Warmup Iteration   9: 110451.937 ops/s
# Warmup Iteration  10: 110540.785 ops/s
# Warmup Iteration  11: 79496.869 ops/s
# Warmup Iteration  12: 107373.950 ops/s
# Warmup Iteration  13: 110697.761 ops/s
# Warmup Iteration  14: 110972.833 ops/s
# Warmup Iteration  15: 110672.234 ops/s
# Warmup Iteration  16: 110989.674 ops/s
# Warmup Iteration  17: 110832.610 ops/s
# Warmup Iteration  18: 110514.204 ops/s
# Warmup Iteration  19: 110921.473 ops/s
# Warmup Iteration  20: 110947.840 ops/s
# Warmup Iteration  21: 111088.971 ops/s
# Warmup Iteration  22: 110945.321 ops/s
# Warmup Iteration  23: 111001.507 ops/s
# Warmup Iteration  24: 111149.077 ops/s
# Warmup Iteration  25: 111014.939 ops/s
# Warmup Iteration  26: 111006.126 ops/s
# Warmup Iteration  27: 110915.900 ops/s
# Warmup Iteration  28: 111280.297 ops/s
# Warmup Iteration  29: 110778.559 ops/s
# Warmup Iteration  30: 111167.664 ops/s
Iteration   1: 111116.091 ops/s
Iteration   2: 111213.799 ops/s
Iteration   3: 111182.880 ops/s
Iteration   4: 110895.436 ops/s
Iteration   5: 111191.084 ops/s
Iteration   6: 111481.552 ops/s
Iteration   7: 111133.759 ops/s
Iteration   8: 111222.078 ops/s
Iteration   9: 111028.279 ops/s
Iteration  10: 110906.758 ops/s
Iteration  11: 110781.862 ops/s
Iteration  12: 111238.047 ops/s
Iteration  13: 110904.747 ops/s
Iteration  14: 110867.750 ops/s
Iteration  15: 111362.784 ops/s
Iteration  16: 110767.303 ops/s
Iteration  17: 110879.201 ops/s
Iteration  18: 111357.859 ops/s
Iteration  19: 111198.871 ops/s
Iteration  20: 111177.409 ops/s
Iteration  21: 111176.010 ops/s
Iteration  22: 111243.422 ops/s
Iteration  23: 111055.220 ops/s
Iteration  24: 111020.988 ops/s
Iteration  25: 111158.785 ops/s
Iteration  26: 111226.314 ops/s
Iteration  27: 111207.366 ops/s
Iteration  28: 110835.261 ops/s
Iteration  29: 110876.735 ops/s
Iteration  30: 111192.179 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_435._Benchmark.benchmark_Cluster_435":
  111096.661 ±(99.9%) 123.509 ops/s [Average]
  (min, avg, max) = (110767.303, 111096.661, 111481.552), stdev = 184.862
  CI (99.9%): [110973.152, 111220.170] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_435._Benchmark.benchmark_Cluster_435  thrpt   30  111096.661 ± 123.509  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_436._Benchmark.benchmark_Cluster_436$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_436._Benchmark.benchmark_Cluster_436

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47535.452 ops/s
# Warmup Iteration   2: 69683.770 ops/s
# Warmup Iteration   3: 99273.384 ops/s
# Warmup Iteration   4: 128616.444 ops/s
# Warmup Iteration   5: 126422.453 ops/s
# Warmup Iteration   6: 129097.436 ops/s
# Warmup Iteration   7: 128464.966 ops/s
# Warmup Iteration   8: 128442.835 ops/s
# Warmup Iteration   9: 128269.537 ops/s
# Warmup Iteration  10: 111562.795 ops/s
# Warmup Iteration  11: 101674.173 ops/s
# Warmup Iteration  12: 127333.679 ops/s
# Warmup Iteration  13: 127181.947 ops/s
# Warmup Iteration  14: 127190.872 ops/s
# Warmup Iteration  15: 127224.154 ops/s
# Warmup Iteration  16: 127118.405 ops/s
# Warmup Iteration  17: 129211.574 ops/s
# Warmup Iteration  18: 130227.724 ops/s
# Warmup Iteration  19: 130417.963 ops/s
# Warmup Iteration  20: 130404.993 ops/s
# Warmup Iteration  21: 130126.961 ops/s
# Warmup Iteration  22: 129202.756 ops/s
# Warmup Iteration  23: 129953.145 ops/s
# Warmup Iteration  24: 129376.997 ops/s
# Warmup Iteration  25: 130576.832 ops/s
# Warmup Iteration  26: 130280.614 ops/s
# Warmup Iteration  27: 129941.918 ops/s
# Warmup Iteration  28: 130058.946 ops/s
# Warmup Iteration  29: 129499.209 ops/s
# Warmup Iteration  30: 129667.396 ops/s
Iteration   1: 129317.803 ops/s
Iteration   2: 129557.681 ops/s
Iteration   3: 128692.788 ops/s
Iteration   4: 130155.739 ops/s
Iteration   5: 128805.471 ops/s
Iteration   6: 128244.589 ops/s
Iteration   7: 128896.414 ops/s
Iteration   8: 129675.360 ops/s
Iteration   9: 129195.415 ops/s
Iteration  10: 130411.378 ops/s
Iteration  11: 129112.501 ops/s
Iteration  12: 128811.703 ops/s
Iteration  13: 129308.758 ops/s
Iteration  14: 129168.718 ops/s
Iteration  15: 129197.544 ops/s
Iteration  16: 129266.348 ops/s
Iteration  17: 130119.733 ops/s
Iteration  18: 130012.179 ops/s
Iteration  19: 128700.109 ops/s
Iteration  20: 128579.563 ops/s
Iteration  21: 129319.803 ops/s
Iteration  22: 129421.357 ops/s
Iteration  23: 128595.720 ops/s
Iteration  24: 128669.841 ops/s
Iteration  25: 129630.223 ops/s
Iteration  26: 129748.171 ops/s
Iteration  27: 129747.441 ops/s
Iteration  28: 129081.803 ops/s
Iteration  29: 128384.962 ops/s
Iteration  30: 130322.272 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_436._Benchmark.benchmark_Cluster_436":
  129271.713 ±(99.9%) 387.611 ops/s [Average]
  (min, avg, max) = (128244.589, 129271.713, 130411.378), stdev = 580.158
  CI (99.9%): [128884.102, 129659.324] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_436._Benchmark.benchmark_Cluster_436  thrpt   30  129271.713 ± 387.611  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_437._Benchmark.benchmark_Cluster_437$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_437._Benchmark.benchmark_Cluster_437

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 75853.803 ops/s
# Warmup Iteration   2: 103131.640 ops/s
# Warmup Iteration   3: 189626.990 ops/s
# Warmup Iteration   4: 205184.401 ops/s
# Warmup Iteration   5: 203503.134 ops/s
# Warmup Iteration   6: 205087.395 ops/s
# Warmup Iteration   7: 205682.607 ops/s
# Warmup Iteration   8: 190780.104 ops/s
# Warmup Iteration   9: 157012.126 ops/s
# Warmup Iteration  10: 205647.556 ops/s
# Warmup Iteration  11: 206259.650 ops/s
# Warmup Iteration  12: 205572.576 ops/s
# Warmup Iteration  13: 205314.197 ops/s
# Warmup Iteration  14: 205844.329 ops/s
# Warmup Iteration  15: 205931.227 ops/s
# Warmup Iteration  16: 205485.270 ops/s
# Warmup Iteration  17: 206134.845 ops/s
# Warmup Iteration  18: 205891.388 ops/s
# Warmup Iteration  19: 205815.878 ops/s
# Warmup Iteration  20: 205905.985 ops/s
# Warmup Iteration  21: 206253.137 ops/s
# Warmup Iteration  22: 206237.532 ops/s
# Warmup Iteration  23: 205708.137 ops/s
# Warmup Iteration  24: 205899.527 ops/s
# Warmup Iteration  25: 206202.980 ops/s
# Warmup Iteration  26: 206197.709 ops/s
# Warmup Iteration  27: 206067.282 ops/s
# Warmup Iteration  28: 205658.472 ops/s
# Warmup Iteration  29: 205971.208 ops/s
# Warmup Iteration  30: 206434.603 ops/s
Iteration   1: 206324.516 ops/s
Iteration   2: 205605.705 ops/s
Iteration   3: 206518.823 ops/s
Iteration   4: 206209.596 ops/s
Iteration   5: 204745.375 ops/s
Iteration   6: 204892.347 ops/s
Iteration   7: 205676.838 ops/s
Iteration   8: 205713.996 ops/s
Iteration   9: 206470.214 ops/s
Iteration  10: 206347.638 ops/s
Iteration  11: 206404.912 ops/s
Iteration  12: 206709.203 ops/s
Iteration  13: 206141.918 ops/s
Iteration  14: 205907.435 ops/s
Iteration  15: 206335.414 ops/s
Iteration  16: 206219.286 ops/s
Iteration  17: 205980.850 ops/s
Iteration  18: 205861.400 ops/s
Iteration  19: 206140.285 ops/s
Iteration  20: 205746.356 ops/s
Iteration  21: 205856.048 ops/s
Iteration  22: 206123.891 ops/s
Iteration  23: 205884.946 ops/s
Iteration  24: 204997.219 ops/s
Iteration  25: 206202.452 ops/s
Iteration  26: 205613.574 ops/s
Iteration  27: 206331.737 ops/s
Iteration  28: 205633.842 ops/s
Iteration  29: 205821.195 ops/s
Iteration  30: 205572.402 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_437._Benchmark.benchmark_Cluster_437":
  205932.980 ±(99.9%) 314.653 ops/s [Average]
  (min, avg, max) = (204745.375, 205932.980, 206709.203), stdev = 470.958
  CI (99.9%): [205618.327, 206247.634] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_437._Benchmark.benchmark_Cluster_437  thrpt   30  205932.980 ± 314.653  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_438._Benchmark.benchmark_Cluster_438$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_438._Benchmark.benchmark_Cluster_438

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67369.163 ops/s
# Warmup Iteration   2: 90898.696 ops/s
# Warmup Iteration   3: 166079.673 ops/s
# Warmup Iteration   4: 178551.069 ops/s
# Warmup Iteration   5: 177044.153 ops/s
# Warmup Iteration   6: 179201.426 ops/s
# Warmup Iteration   7: 177999.412 ops/s
# Warmup Iteration   8: 172709.734 ops/s
# Warmup Iteration   9: 128393.018 ops/s
# Warmup Iteration  10: 177947.600 ops/s
# Warmup Iteration  11: 177845.127 ops/s
# Warmup Iteration  12: 177696.911 ops/s
# Warmup Iteration  13: 177433.156 ops/s
# Warmup Iteration  14: 177388.981 ops/s
# Warmup Iteration  15: 177956.518 ops/s
# Warmup Iteration  16: 177587.180 ops/s
# Warmup Iteration  17: 177708.458 ops/s
# Warmup Iteration  18: 177522.217 ops/s
# Warmup Iteration  19: 177661.281 ops/s
# Warmup Iteration  20: 177348.034 ops/s
# Warmup Iteration  21: 177379.665 ops/s
# Warmup Iteration  22: 177340.694 ops/s
# Warmup Iteration  23: 177134.730 ops/s
# Warmup Iteration  24: 177750.817 ops/s
# Warmup Iteration  25: 177644.683 ops/s
# Warmup Iteration  26: 177581.255 ops/s
# Warmup Iteration  27: 177520.672 ops/s
# Warmup Iteration  28: 177350.332 ops/s
# Warmup Iteration  29: 177338.269 ops/s
# Warmup Iteration  30: 177623.209 ops/s
Iteration   1: 177791.989 ops/s
Iteration   2: 177479.539 ops/s
Iteration   3: 177815.800 ops/s
Iteration   4: 177888.538 ops/s
Iteration   5: 177666.938 ops/s
Iteration   6: 177672.664 ops/s
Iteration   7: 177413.858 ops/s
Iteration   8: 177898.832 ops/s
Iteration   9: 177595.878 ops/s
Iteration  10: 177357.976 ops/s
Iteration  11: 177973.516 ops/s
Iteration  12: 177866.851 ops/s
Iteration  13: 177625.205 ops/s
Iteration  14: 177647.768 ops/s
Iteration  15: 177522.789 ops/s
Iteration  16: 177692.782 ops/s
Iteration  17: 177899.150 ops/s
Iteration  18: 177645.950 ops/s
Iteration  19: 177634.868 ops/s
Iteration  20: 177522.674 ops/s
Iteration  21: 177400.617 ops/s
Iteration  22: 177573.896 ops/s
Iteration  23: 177045.976 ops/s
Iteration  24: 177271.223 ops/s
Iteration  25: 177630.701 ops/s
Iteration  26: 177435.184 ops/s
Iteration  27: 177224.944 ops/s
Iteration  28: 177647.447 ops/s
Iteration  29: 177488.230 ops/s
Iteration  30: 177591.821 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_438._Benchmark.benchmark_Cluster_438":
  177597.453 ±(99.9%) 143.582 ops/s [Average]
  (min, avg, max) = (177045.976, 177597.453, 177973.516), stdev = 214.907
  CI (99.9%): [177453.871, 177741.036] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_438._Benchmark.benchmark_Cluster_438  thrpt   30  177597.453 ± 143.582  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_439._Benchmark.benchmark_Cluster_439$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_439._Benchmark.benchmark_Cluster_439

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70812.652 ops/s
# Warmup Iteration   2: 87101.753 ops/s
# Warmup Iteration   3: 122709.181 ops/s
# Warmup Iteration   4: 153331.496 ops/s
# Warmup Iteration   5: 153647.959 ops/s
# Warmup Iteration   6: 152490.705 ops/s
# Warmup Iteration   7: 152591.958 ops/s
# Warmup Iteration   8: 153209.329 ops/s
# Warmup Iteration   9: 153159.252 ops/s
# Warmup Iteration  10: 153474.253 ops/s
# Warmup Iteration  11: 107627.412 ops/s
# Warmup Iteration  12: 150262.700 ops/s
# Warmup Iteration  13: 153415.000 ops/s
# Warmup Iteration  14: 153468.365 ops/s
# Warmup Iteration  15: 153330.967 ops/s
# Warmup Iteration  16: 153376.467 ops/s
# Warmup Iteration  17: 153557.732 ops/s
# Warmup Iteration  18: 153564.311 ops/s
# Warmup Iteration  19: 153422.444 ops/s
# Warmup Iteration  20: 153327.667 ops/s
# Warmup Iteration  21: 153611.865 ops/s
# Warmup Iteration  22: 153603.169 ops/s
# Warmup Iteration  23: 153715.216 ops/s
# Warmup Iteration  24: 153575.482 ops/s
# Warmup Iteration  25: 153641.707 ops/s
# Warmup Iteration  26: 153134.227 ops/s
# Warmup Iteration  27: 153524.606 ops/s
# Warmup Iteration  28: 153397.648 ops/s
# Warmup Iteration  29: 153338.666 ops/s
# Warmup Iteration  30: 153356.781 ops/s
Iteration   1: 153372.063 ops/s
Iteration   2: 153309.173 ops/s
Iteration   3: 153791.108 ops/s
Iteration   4: 153428.417 ops/s
Iteration   5: 153345.699 ops/s
Iteration   6: 153549.656 ops/s
Iteration   7: 153425.744 ops/s
Iteration   8: 153384.234 ops/s
Iteration   9: 153760.354 ops/s
Iteration  10: 153313.115 ops/s
Iteration  11: 153496.502 ops/s
Iteration  12: 152947.298 ops/s
Iteration  13: 153564.742 ops/s
Iteration  14: 153795.633 ops/s
Iteration  15: 153676.583 ops/s
Iteration  16: 153804.280 ops/s
Iteration  17: 153837.149 ops/s
Iteration  18: 153530.696 ops/s
Iteration  19: 153143.304 ops/s
Iteration  20: 153705.329 ops/s
Iteration  21: 153894.803 ops/s
Iteration  22: 153478.869 ops/s
Iteration  23: 153616.806 ops/s
Iteration  24: 153644.846 ops/s
Iteration  25: 153409.588 ops/s
Iteration  26: 153388.446 ops/s
Iteration  27: 153623.752 ops/s
Iteration  28: 153297.540 ops/s
Iteration  29: 153225.230 ops/s
Iteration  30: 153648.970 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_439._Benchmark.benchmark_Cluster_439":
  153513.664 ±(99.9%) 149.670 ops/s [Average]
  (min, avg, max) = (152947.298, 153513.664, 153894.803), stdev = 224.019
  CI (99.9%): [153363.994, 153663.334] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_439._Benchmark.benchmark_Cluster_439  thrpt   30  153513.664 ± 149.670  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_44._Benchmark.benchmark_Cluster_44$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_44._Benchmark.benchmark_Cluster_44

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 100535.583 ops/s
# Warmup Iteration   2: 110510.556 ops/s
# Warmup Iteration   3: 111127.131 ops/s
# Warmup Iteration   4: 112258.943 ops/s
# Warmup Iteration   5: 142674.545 ops/s
# Warmup Iteration   6: 144512.576 ops/s
# Warmup Iteration   7: 144058.702 ops/s
# Warmup Iteration   8: 143236.577 ops/s
# Warmup Iteration   9: 144153.469 ops/s
# Warmup Iteration  10: 143591.683 ops/s
# Warmup Iteration  11: 142828.623 ops/s
# Warmup Iteration  12: 144400.741 ops/s
# Warmup Iteration  13: 144311.828 ops/s
# Warmup Iteration  14: 144075.128 ops/s
# Warmup Iteration  15: 144176.888 ops/s
# Warmup Iteration  16: 144334.015 ops/s
# Warmup Iteration  17: 151334.765 ops/s
# Warmup Iteration  18: 151378.085 ops/s
# Warmup Iteration  19: 151266.316 ops/s
# Warmup Iteration  20: 151184.010 ops/s
# Warmup Iteration  21: 151177.755 ops/s
# Warmup Iteration  22: 149986.705 ops/s
# Warmup Iteration  23: 115660.679 ops/s
# Warmup Iteration  24: 143335.200 ops/s
# Warmup Iteration  25: 151131.282 ops/s
# Warmup Iteration  26: 151609.896 ops/s
# Warmup Iteration  27: 151711.916 ops/s
# Warmup Iteration  28: 150380.223 ops/s
# Warmup Iteration  29: 151434.164 ops/s
# Warmup Iteration  30: 151040.831 ops/s
Iteration   1: 151363.176 ops/s
Iteration   2: 150780.641 ops/s
Iteration   3: 151637.602 ops/s
Iteration   4: 151018.812 ops/s
Iteration   5: 151209.132 ops/s
Iteration   6: 151103.691 ops/s
Iteration   7: 150875.004 ops/s
Iteration   8: 151351.573 ops/s
Iteration   9: 151378.809 ops/s
Iteration  10: 151257.148 ops/s
Iteration  11: 151869.922 ops/s
Iteration  12: 151440.916 ops/s
Iteration  13: 150987.680 ops/s
Iteration  14: 151737.778 ops/s
Iteration  15: 151688.909 ops/s
Iteration  16: 151553.394 ops/s
Iteration  17: 151211.684 ops/s
Iteration  18: 151576.202 ops/s
Iteration  19: 152048.418 ops/s
Iteration  20: 151994.253 ops/s
Iteration  21: 151430.815 ops/s
Iteration  22: 151796.969 ops/s
Iteration  23: 151397.626 ops/s
Iteration  24: 150969.204 ops/s
Iteration  25: 151328.013 ops/s
Iteration  26: 151094.249 ops/s
Iteration  27: 151176.277 ops/s
Iteration  28: 151715.140 ops/s
Iteration  29: 151598.191 ops/s
Iteration  30: 151221.023 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_44._Benchmark.benchmark_Cluster_44":
  151393.742 ±(99.9%) 219.345 ops/s [Average]
  (min, avg, max) = (150780.641, 151393.742, 152048.418), stdev = 328.306
  CI (99.9%): [151174.396, 151613.087] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_44._Benchmark.benchmark_Cluster_44  thrpt   30  151393.742 ± 219.345  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_440._Benchmark.benchmark_Cluster_440$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_440._Benchmark.benchmark_Cluster_440

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 101527.735 ops/s
# Warmup Iteration   2: 115640.486 ops/s
# Warmup Iteration   3: 162758.744 ops/s
# Warmup Iteration   4: 200064.771 ops/s
# Warmup Iteration   5: 199998.048 ops/s
# Warmup Iteration   6: 197527.473 ops/s
# Warmup Iteration   7: 200235.851 ops/s
# Warmup Iteration   8: 199798.282 ops/s
# Warmup Iteration   9: 199894.461 ops/s
# Warmup Iteration  10: 199843.240 ops/s
# Warmup Iteration  11: 158850.412 ops/s
# Warmup Iteration  12: 176102.428 ops/s
# Warmup Iteration  13: 200001.419 ops/s
# Warmup Iteration  14: 200201.612 ops/s
# Warmup Iteration  15: 200154.894 ops/s
# Warmup Iteration  16: 200133.936 ops/s
# Warmup Iteration  17: 200461.236 ops/s
# Warmup Iteration  18: 200289.249 ops/s
# Warmup Iteration  19: 199970.542 ops/s
# Warmup Iteration  20: 200372.041 ops/s
# Warmup Iteration  21: 199891.319 ops/s
# Warmup Iteration  22: 200001.602 ops/s
# Warmup Iteration  23: 200136.651 ops/s
# Warmup Iteration  24: 199901.109 ops/s
# Warmup Iteration  25: 200253.504 ops/s
# Warmup Iteration  26: 200039.619 ops/s
# Warmup Iteration  27: 200181.177 ops/s
# Warmup Iteration  28: 200085.819 ops/s
# Warmup Iteration  29: 199907.499 ops/s
# Warmup Iteration  30: 200014.965 ops/s
Iteration   1: 200251.075 ops/s
Iteration   2: 200185.038 ops/s
Iteration   3: 200148.543 ops/s
Iteration   4: 199957.700 ops/s
Iteration   5: 200118.122 ops/s
Iteration   6: 199868.053 ops/s
Iteration   7: 199877.914 ops/s
Iteration   8: 199672.096 ops/s
Iteration   9: 199819.121 ops/s
Iteration  10: 199923.045 ops/s
Iteration  11: 200394.643 ops/s
Iteration  12: 200697.381 ops/s
Iteration  13: 200256.133 ops/s
Iteration  14: 200074.779 ops/s
Iteration  15: 199369.668 ops/s
Iteration  16: 200171.508 ops/s
Iteration  17: 200130.103 ops/s
Iteration  18: 199674.393 ops/s
Iteration  19: 200282.039 ops/s
Iteration  20: 200027.476 ops/s
Iteration  21: 199661.686 ops/s
Iteration  22: 199461.522 ops/s
Iteration  23: 200030.359 ops/s
Iteration  24: 199915.504 ops/s
Iteration  25: 199673.553 ops/s
Iteration  26: 200053.409 ops/s
Iteration  27: 200041.366 ops/s
Iteration  28: 199949.449 ops/s
Iteration  29: 200088.363 ops/s
Iteration  30: 200072.374 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_440._Benchmark.benchmark_Cluster_440":
  199994.881 ±(99.9%) 183.820 ops/s [Average]
  (min, avg, max) = (199369.668, 199994.881, 200697.381), stdev = 275.133
  CI (99.9%): [199811.061, 200178.700] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_440._Benchmark.benchmark_Cluster_440  thrpt   30  199994.881 ± 183.820  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_441._Benchmark.benchmark_Cluster_441$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_441._Benchmark.benchmark_Cluster_441

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58942.014 ops/s
# Warmup Iteration   2: 89526.042 ops/s
# Warmup Iteration   3: 185881.655 ops/s
# Warmup Iteration   4: 183479.275 ops/s
# Warmup Iteration   5: 185607.766 ops/s
# Warmup Iteration   6: 186720.985 ops/s
# Warmup Iteration   7: 127501.028 ops/s
# Warmup Iteration   8: 185457.708 ops/s
# Warmup Iteration   9: 185811.814 ops/s
# Warmup Iteration  10: 185222.143 ops/s
# Warmup Iteration  11: 184959.478 ops/s
# Warmup Iteration  12: 185701.454 ops/s
# Warmup Iteration  13: 185940.550 ops/s
# Warmup Iteration  14: 185189.445 ops/s
# Warmup Iteration  15: 185464.033 ops/s
# Warmup Iteration  16: 186145.897 ops/s
# Warmup Iteration  17: 188044.933 ops/s
# Warmup Iteration  18: 187896.450 ops/s
# Warmup Iteration  19: 187945.735 ops/s
# Warmup Iteration  20: 187827.613 ops/s
# Warmup Iteration  21: 188320.202 ops/s
# Warmup Iteration  22: 188574.192 ops/s
# Warmup Iteration  23: 188289.639 ops/s
# Warmup Iteration  24: 187860.999 ops/s
# Warmup Iteration  25: 188263.433 ops/s
# Warmup Iteration  26: 187967.632 ops/s
# Warmup Iteration  27: 187524.294 ops/s
# Warmup Iteration  28: 188881.860 ops/s
# Warmup Iteration  29: 188549.060 ops/s
# Warmup Iteration  30: 188508.733 ops/s
Iteration   1: 188714.155 ops/s
Iteration   2: 188188.640 ops/s
Iteration   3: 187606.104 ops/s
Iteration   4: 188423.931 ops/s
Iteration   5: 188366.565 ops/s
Iteration   6: 188916.852 ops/s
Iteration   7: 188555.111 ops/s
Iteration   8: 189530.575 ops/s
Iteration   9: 188645.787 ops/s
Iteration  10: 188297.823 ops/s
Iteration  11: 188064.456 ops/s
Iteration  12: 189134.503 ops/s
Iteration  13: 189362.448 ops/s
Iteration  14: 189305.743 ops/s
Iteration  15: 188509.234 ops/s
Iteration  16: 188216.614 ops/s
Iteration  17: 189147.011 ops/s
Iteration  18: 188846.238 ops/s
Iteration  19: 189409.373 ops/s
Iteration  20: 188047.332 ops/s
Iteration  21: 188271.954 ops/s
Iteration  22: 188181.700 ops/s
Iteration  23: 188173.706 ops/s
Iteration  24: 189338.820 ops/s
Iteration  25: 189157.038 ops/s
Iteration  26: 189441.573 ops/s
Iteration  27: 187878.198 ops/s
Iteration  28: 189217.045 ops/s
Iteration  29: 188706.249 ops/s
Iteration  30: 188670.636 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_441._Benchmark.benchmark_Cluster_441":
  188677.514 ±(99.9%) 355.515 ops/s [Average]
  (min, avg, max) = (187606.104, 188677.514, 189530.575), stdev = 532.118
  CI (99.9%): [188321.999, 189033.029] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_441._Benchmark.benchmark_Cluster_441  thrpt   30  188677.514 ± 355.515  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_442._Benchmark.benchmark_Cluster_442$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_442._Benchmark.benchmark_Cluster_442

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 84475.310 ops/s
# Warmup Iteration   2: 104674.791 ops/s
# Warmup Iteration   3: 107056.623 ops/s
# Warmup Iteration   4: 162721.982 ops/s
# Warmup Iteration   5: 162150.304 ops/s
# Warmup Iteration   6: 161989.500 ops/s
# Warmup Iteration   7: 160778.754 ops/s
# Warmup Iteration   8: 162637.888 ops/s
# Warmup Iteration   9: 162195.430 ops/s
# Warmup Iteration  10: 163416.556 ops/s
# Warmup Iteration  11: 161532.666 ops/s
# Warmup Iteration  12: 161173.374 ops/s
# Warmup Iteration  13: 162332.893 ops/s
# Warmup Iteration  14: 142986.492 ops/s
# Warmup Iteration  15: 129239.794 ops/s
# Warmup Iteration  16: 162280.675 ops/s
# Warmup Iteration  17: 169213.030 ops/s
# Warmup Iteration  18: 169453.251 ops/s
# Warmup Iteration  19: 168801.441 ops/s
# Warmup Iteration  20: 168876.318 ops/s
# Warmup Iteration  21: 169050.857 ops/s
# Warmup Iteration  22: 168654.184 ops/s
# Warmup Iteration  23: 168619.544 ops/s
# Warmup Iteration  24: 168752.955 ops/s
# Warmup Iteration  25: 168941.670 ops/s
# Warmup Iteration  26: 169468.857 ops/s
# Warmup Iteration  27: 169339.523 ops/s
# Warmup Iteration  28: 169024.359 ops/s
# Warmup Iteration  29: 168746.216 ops/s
# Warmup Iteration  30: 169235.346 ops/s
Iteration   1: 169393.081 ops/s
Iteration   2: 168192.178 ops/s
Iteration   3: 168232.934 ops/s
Iteration   4: 168290.540 ops/s
Iteration   5: 169097.767 ops/s
Iteration   6: 169256.918 ops/s
Iteration   7: 168936.848 ops/s
Iteration   8: 169468.900 ops/s
Iteration   9: 169611.194 ops/s
Iteration  10: 169396.752 ops/s
Iteration  11: 168932.523 ops/s
Iteration  12: 168968.508 ops/s
Iteration  13: 169223.843 ops/s
Iteration  14: 169070.021 ops/s
Iteration  15: 168635.710 ops/s
Iteration  16: 168476.853 ops/s
Iteration  17: 169017.998 ops/s
Iteration  18: 168742.780 ops/s
Iteration  19: 168887.035 ops/s
Iteration  20: 169146.318 ops/s
Iteration  21: 168539.440 ops/s
Iteration  22: 168643.565 ops/s
Iteration  23: 168419.401 ops/s
Iteration  24: 168717.382 ops/s
Iteration  25: 168545.917 ops/s
Iteration  26: 168238.731 ops/s
Iteration  27: 169001.084 ops/s
Iteration  28: 168266.299 ops/s
Iteration  29: 169040.414 ops/s
Iteration  30: 168621.459 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_442._Benchmark.benchmark_Cluster_442":
  168833.746 ±(99.9%) 268.758 ops/s [Average]
  (min, avg, max) = (168192.178, 168833.746, 169611.194), stdev = 402.265
  CI (99.9%): [168564.988, 169102.505] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_442._Benchmark.benchmark_Cluster_442  thrpt   30  168833.746 ± 268.758  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_443._Benchmark.benchmark_Cluster_443$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_443._Benchmark.benchmark_Cluster_443

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 35766.835 ops/s
# Warmup Iteration   2: 68045.734 ops/s
# Warmup Iteration   3: 93596.607 ops/s
# Warmup Iteration   4: 124426.996 ops/s
# Warmup Iteration   5: 123447.650 ops/s
# Warmup Iteration   6: 124765.532 ops/s
# Warmup Iteration   7: 125210.497 ops/s
# Warmup Iteration   8: 125024.198 ops/s
# Warmup Iteration   9: 125524.075 ops/s
# Warmup Iteration  10: 94388.758 ops/s
# Warmup Iteration  11: 116962.829 ops/s
# Warmup Iteration  12: 124486.043 ops/s
# Warmup Iteration  13: 125080.536 ops/s
# Warmup Iteration  14: 124664.952 ops/s
# Warmup Iteration  15: 124606.794 ops/s
# Warmup Iteration  16: 124932.896 ops/s
# Warmup Iteration  17: 124581.754 ops/s
# Warmup Iteration  18: 124648.194 ops/s
# Warmup Iteration  19: 124624.547 ops/s
# Warmup Iteration  20: 124529.708 ops/s
# Warmup Iteration  21: 125005.438 ops/s
# Warmup Iteration  22: 124846.707 ops/s
# Warmup Iteration  23: 124353.764 ops/s
# Warmup Iteration  24: 125247.035 ops/s
# Warmup Iteration  25: 124219.741 ops/s
# Warmup Iteration  26: 124374.091 ops/s
# Warmup Iteration  27: 124054.040 ops/s
# Warmup Iteration  28: 124677.023 ops/s
# Warmup Iteration  29: 123844.712 ops/s
# Warmup Iteration  30: 124479.733 ops/s
Iteration   1: 124603.972 ops/s
Iteration   2: 124661.453 ops/s
Iteration   3: 124427.380 ops/s
Iteration   4: 123962.387 ops/s
Iteration   5: 123953.900 ops/s
Iteration   6: 123884.687 ops/s
Iteration   7: 123536.642 ops/s
Iteration   8: 124013.196 ops/s
Iteration   9: 125004.818 ops/s
Iteration  10: 124644.460 ops/s
Iteration  11: 123708.193 ops/s
Iteration  12: 124293.813 ops/s
Iteration  13: 124593.375 ops/s
Iteration  14: 124422.219 ops/s
Iteration  15: 124501.593 ops/s
Iteration  16: 124674.469 ops/s
Iteration  17: 124576.565 ops/s
Iteration  18: 124488.027 ops/s
Iteration  19: 124878.846 ops/s
Iteration  20: 124525.290 ops/s
Iteration  21: 124339.508 ops/s
Iteration  22: 124935.452 ops/s
Iteration  23: 124217.350 ops/s
Iteration  24: 124918.714 ops/s
Iteration  25: 124520.851 ops/s
Iteration  26: 124251.128 ops/s
Iteration  27: 124748.027 ops/s
Iteration  28: 124517.917 ops/s
Iteration  29: 123900.153 ops/s
Iteration  30: 124818.376 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_443._Benchmark.benchmark_Cluster_443":
  124417.425 ±(99.9%) 253.198 ops/s [Average]
  (min, avg, max) = (123536.642, 124417.425, 125004.818), stdev = 378.975
  CI (99.9%): [124164.227, 124670.623] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_443._Benchmark.benchmark_Cluster_443  thrpt   30  124417.425 ± 253.198  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_444._Benchmark.benchmark_Cluster_444$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_444._Benchmark.benchmark_Cluster_444

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 112309.866 ops/s
# Warmup Iteration   2: 160963.726 ops/s
# Warmup Iteration   3: 238650.661 ops/s
# Warmup Iteration   4: 290050.083 ops/s
# Warmup Iteration   5: 287434.892 ops/s
# Warmup Iteration   6: 289999.327 ops/s
# Warmup Iteration   7: 290755.603 ops/s
# Warmup Iteration   8: 290207.739 ops/s
# Warmup Iteration   9: 288814.034 ops/s
# Warmup Iteration  10: 241377.471 ops/s
# Warmup Iteration  11: 248959.797 ops/s
# Warmup Iteration  12: 290318.971 ops/s
# Warmup Iteration  13: 290220.094 ops/s
# Warmup Iteration  14: 290203.786 ops/s
# Warmup Iteration  15: 290399.801 ops/s
# Warmup Iteration  16: 290316.907 ops/s
# Warmup Iteration  17: 289632.992 ops/s
# Warmup Iteration  18: 289563.056 ops/s
# Warmup Iteration  19: 289982.017 ops/s
# Warmup Iteration  20: 289971.391 ops/s
# Warmup Iteration  21: 289446.456 ops/s
# Warmup Iteration  22: 290049.320 ops/s
# Warmup Iteration  23: 289903.990 ops/s
# Warmup Iteration  24: 289864.175 ops/s
# Warmup Iteration  25: 289573.622 ops/s
# Warmup Iteration  26: 289933.493 ops/s
# Warmup Iteration  27: 289501.133 ops/s
# Warmup Iteration  28: 290051.292 ops/s
# Warmup Iteration  29: 289857.272 ops/s
# Warmup Iteration  30: 289546.908 ops/s
Iteration   1: 289751.347 ops/s
Iteration   2: 290208.694 ops/s
Iteration   3: 289720.281 ops/s
Iteration   4: 288792.112 ops/s
Iteration   5: 289765.251 ops/s
Iteration   6: 289739.015 ops/s
Iteration   7: 289574.919 ops/s
Iteration   8: 290203.674 ops/s
Iteration   9: 290101.800 ops/s
Iteration  10: 289365.197 ops/s
Iteration  11: 289604.270 ops/s
Iteration  12: 289612.232 ops/s
Iteration  13: 288886.014 ops/s
Iteration  14: 289516.067 ops/s
Iteration  15: 290001.593 ops/s
Iteration  16: 289846.564 ops/s
Iteration  17: 289771.181 ops/s
Iteration  18: 290171.553 ops/s
Iteration  19: 289660.709 ops/s
Iteration  20: 289195.677 ops/s
Iteration  21: 289972.333 ops/s
Iteration  22: 289964.438 ops/s
Iteration  23: 289271.645 ops/s
Iteration  24: 290204.218 ops/s
Iteration  25: 289939.784 ops/s
Iteration  26: 289377.071 ops/s
Iteration  27: 290100.485 ops/s
Iteration  28: 289956.578 ops/s
Iteration  29: 289593.996 ops/s
Iteration  30: 289404.374 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_444._Benchmark.benchmark_Cluster_444":
  289709.102 ±(99.9%) 248.432 ops/s [Average]
  (min, avg, max) = (288792.112, 289709.102, 290208.694), stdev = 371.841
  CI (99.9%): [289460.670, 289957.534] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_444._Benchmark.benchmark_Cluster_444  thrpt   30  289709.102 ± 248.432  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_445._Benchmark.benchmark_Cluster_445$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_445._Benchmark.benchmark_Cluster_445

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71215.182 ops/s
# Warmup Iteration   2: 97261.615 ops/s
# Warmup Iteration   3: 193763.730 ops/s
# Warmup Iteration   4: 196536.949 ops/s
# Warmup Iteration   5: 199891.039 ops/s
# Warmup Iteration   6: 200135.757 ops/s
# Warmup Iteration   7: 200056.097 ops/s
# Warmup Iteration   8: 140269.704 ops/s
# Warmup Iteration   9: 197850.771 ops/s
# Warmup Iteration  10: 200621.026 ops/s
# Warmup Iteration  11: 200530.311 ops/s
# Warmup Iteration  12: 200300.930 ops/s
# Warmup Iteration  13: 200510.239 ops/s
# Warmup Iteration  14: 200569.742 ops/s
# Warmup Iteration  15: 200209.183 ops/s
# Warmup Iteration  16: 199778.830 ops/s
# Warmup Iteration  17: 200071.995 ops/s
# Warmup Iteration  18: 200027.414 ops/s
# Warmup Iteration  19: 199908.372 ops/s
# Warmup Iteration  20: 200060.481 ops/s
# Warmup Iteration  21: 200072.536 ops/s
# Warmup Iteration  22: 200337.155 ops/s
# Warmup Iteration  23: 200041.945 ops/s
# Warmup Iteration  24: 199876.109 ops/s
# Warmup Iteration  25: 199747.820 ops/s
# Warmup Iteration  26: 200213.880 ops/s
# Warmup Iteration  27: 199963.541 ops/s
# Warmup Iteration  28: 199808.406 ops/s
# Warmup Iteration  29: 199837.664 ops/s
# Warmup Iteration  30: 199675.727 ops/s
Iteration   1: 200037.938 ops/s
Iteration   2: 199956.146 ops/s
Iteration   3: 199897.719 ops/s
Iteration   4: 199865.946 ops/s
Iteration   5: 199842.009 ops/s
Iteration   6: 200095.323 ops/s
Iteration   7: 199814.688 ops/s
Iteration   8: 199986.871 ops/s
Iteration   9: 199792.817 ops/s
Iteration  10: 200035.826 ops/s
Iteration  11: 200121.535 ops/s
Iteration  12: 200025.039 ops/s
Iteration  13: 200384.985 ops/s
Iteration  14: 199513.058 ops/s
Iteration  15: 199841.173 ops/s
Iteration  16: 199643.235 ops/s
Iteration  17: 199522.286 ops/s
Iteration  18: 199297.366 ops/s
Iteration  19: 199154.884 ops/s
Iteration  20: 199805.836 ops/s
Iteration  21: 199789.184 ops/s
Iteration  22: 200117.571 ops/s
Iteration  23: 199703.172 ops/s
Iteration  24: 199885.768 ops/s
Iteration  25: 200058.142 ops/s
Iteration  26: 199911.171 ops/s
Iteration  27: 200152.494 ops/s
Iteration  28: 200000.309 ops/s
Iteration  29: 198948.310 ops/s
Iteration  30: 199314.007 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_445._Benchmark.benchmark_Cluster_445":
  199817.160 ±(99.9%) 212.702 ops/s [Average]
  (min, avg, max) = (198948.310, 199817.160, 200384.985), stdev = 318.363
  CI (99.9%): [199604.458, 200029.863] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_445._Benchmark.benchmark_Cluster_445  thrpt   30  199817.160 ± 212.702  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_446._Benchmark.benchmark_Cluster_446$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_446._Benchmark.benchmark_Cluster_446

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42228.272 ops/s
# Warmup Iteration   2: 72628.430 ops/s
# Warmup Iteration   3: 114714.329 ops/s
# Warmup Iteration   4: 139702.548 ops/s
# Warmup Iteration   5: 138197.708 ops/s
# Warmup Iteration   6: 139308.681 ops/s
# Warmup Iteration   7: 139303.274 ops/s
# Warmup Iteration   8: 139921.110 ops/s
# Warmup Iteration   9: 111960.479 ops/s
# Warmup Iteration  10: 124172.431 ops/s
# Warmup Iteration  11: 139673.714 ops/s
# Warmup Iteration  12: 139356.550 ops/s
# Warmup Iteration  13: 139215.211 ops/s
# Warmup Iteration  14: 139358.669 ops/s
# Warmup Iteration  15: 139314.927 ops/s
# Warmup Iteration  16: 139430.519 ops/s
# Warmup Iteration  17: 139464.989 ops/s
# Warmup Iteration  18: 139622.334 ops/s
# Warmup Iteration  19: 139592.571 ops/s
# Warmup Iteration  20: 139332.368 ops/s
# Warmup Iteration  21: 139274.046 ops/s
# Warmup Iteration  22: 139672.869 ops/s
# Warmup Iteration  23: 139912.256 ops/s
# Warmup Iteration  24: 139682.064 ops/s
# Warmup Iteration  25: 139463.266 ops/s
# Warmup Iteration  26: 139734.494 ops/s
# Warmup Iteration  27: 139779.148 ops/s
# Warmup Iteration  28: 139642.921 ops/s
# Warmup Iteration  29: 139415.624 ops/s
# Warmup Iteration  30: 139760.925 ops/s
Iteration   1: 139472.011 ops/s
Iteration   2: 139861.661 ops/s
Iteration   3: 140137.149 ops/s
Iteration   4: 139611.128 ops/s
Iteration   5: 139565.066 ops/s
Iteration   6: 139496.226 ops/s
Iteration   7: 139601.689 ops/s
Iteration   8: 139565.596 ops/s
Iteration   9: 139806.271 ops/s
Iteration  10: 140064.129 ops/s
Iteration  11: 139820.035 ops/s
Iteration  12: 139941.694 ops/s
Iteration  13: 139922.650 ops/s
Iteration  14: 139565.035 ops/s
Iteration  15: 139476.526 ops/s
Iteration  16: 139646.554 ops/s
Iteration  17: 139949.750 ops/s
Iteration  18: 139765.406 ops/s
Iteration  19: 139986.531 ops/s
Iteration  20: 139665.721 ops/s
Iteration  21: 139452.460 ops/s
Iteration  22: 139580.618 ops/s
Iteration  23: 139411.067 ops/s
Iteration  24: 139542.103 ops/s
Iteration  25: 139457.273 ops/s
Iteration  26: 139264.003 ops/s
Iteration  27: 139451.435 ops/s
Iteration  28: 139494.480 ops/s
Iteration  29: 139518.322 ops/s
Iteration  30: 139913.312 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_446._Benchmark.benchmark_Cluster_446":
  139666.863 ±(99.9%) 148.585 ops/s [Average]
  (min, avg, max) = (139264.003, 139666.863, 140137.149), stdev = 222.396
  CI (99.9%): [139518.278, 139815.449] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_446._Benchmark.benchmark_Cluster_446  thrpt   30  139666.863 ± 148.585  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_447._Benchmark.benchmark_Cluster_447$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_447._Benchmark.benchmark_Cluster_447

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 66113.606 ops/s
# Warmup Iteration   2: 111394.299 ops/s
# Warmup Iteration   3: 142174.273 ops/s
# Warmup Iteration   4: 192482.602 ops/s
# Warmup Iteration   5: 193435.249 ops/s
# Warmup Iteration   6: 191398.217 ops/s
# Warmup Iteration   7: 193059.430 ops/s
# Warmup Iteration   8: 192752.401 ops/s
# Warmup Iteration   9: 193113.878 ops/s
# Warmup Iteration  10: 192348.417 ops/s
# Warmup Iteration  11: 139806.224 ops/s
# Warmup Iteration  12: 185699.820 ops/s
# Warmup Iteration  13: 193105.594 ops/s
# Warmup Iteration  14: 192945.228 ops/s
# Warmup Iteration  15: 192954.656 ops/s
# Warmup Iteration  16: 193165.456 ops/s
# Warmup Iteration  17: 192407.991 ops/s
# Warmup Iteration  18: 192404.847 ops/s
# Warmup Iteration  19: 192420.013 ops/s
# Warmup Iteration  20: 192351.823 ops/s
# Warmup Iteration  21: 192635.939 ops/s
# Warmup Iteration  22: 192427.143 ops/s
# Warmup Iteration  23: 192456.859 ops/s
# Warmup Iteration  24: 192461.841 ops/s
# Warmup Iteration  25: 192037.292 ops/s
# Warmup Iteration  26: 192521.783 ops/s
# Warmup Iteration  27: 192268.619 ops/s
# Warmup Iteration  28: 192298.411 ops/s
# Warmup Iteration  29: 192124.044 ops/s
# Warmup Iteration  30: 192455.560 ops/s
Iteration   1: 192322.485 ops/s
Iteration   2: 192156.590 ops/s
Iteration   3: 192180.022 ops/s
Iteration   4: 191152.368 ops/s
Iteration   5: 192191.508 ops/s
Iteration   6: 192523.222 ops/s
Iteration   7: 192308.313 ops/s
Iteration   8: 192497.421 ops/s
Iteration   9: 192532.626 ops/s
Iteration  10: 192411.042 ops/s
Iteration  11: 192004.533 ops/s
Iteration  12: 192412.956 ops/s
Iteration  13: 192426.372 ops/s
Iteration  14: 192693.974 ops/s
Iteration  15: 191717.673 ops/s
Iteration  16: 192479.529 ops/s
Iteration  17: 192156.211 ops/s
Iteration  18: 192004.489 ops/s
Iteration  19: 191706.424 ops/s
Iteration  20: 192248.536 ops/s
Iteration  21: 192628.832 ops/s
Iteration  22: 192100.565 ops/s
Iteration  23: 192694.855 ops/s
Iteration  24: 192326.341 ops/s
Iteration  25: 191851.247 ops/s
Iteration  26: 192315.480 ops/s
Iteration  27: 191613.642 ops/s
Iteration  28: 192153.907 ops/s
Iteration  29: 192138.750 ops/s
Iteration  30: 192553.336 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_447._Benchmark.benchmark_Cluster_447":
  192216.775 ±(99.9%) 232.308 ops/s [Average]
  (min, avg, max) = (191152.368, 192216.775, 192694.855), stdev = 347.708
  CI (99.9%): [191984.467, 192449.083] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_447._Benchmark.benchmark_Cluster_447  thrpt   30  192216.775 ± 232.308  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_448._Benchmark.benchmark_Cluster_448$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_448._Benchmark.benchmark_Cluster_448

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 80550.704 ops/s
# Warmup Iteration   2: 86966.885 ops/s
# Warmup Iteration   3: 87801.727 ops/s
# Warmup Iteration   4: 101769.202 ops/s
# Warmup Iteration   5: 122398.466 ops/s
# Warmup Iteration   6: 122297.821 ops/s
# Warmup Iteration   7: 121918.953 ops/s
# Warmup Iteration   8: 121965.623 ops/s
# Warmup Iteration   9: 120497.373 ops/s
# Warmup Iteration  10: 121717.877 ops/s
# Warmup Iteration  11: 121803.783 ops/s
# Warmup Iteration  12: 121635.856 ops/s
# Warmup Iteration  13: 122197.889 ops/s
# Warmup Iteration  14: 122045.274 ops/s
# Warmup Iteration  15: 122328.634 ops/s
# Warmup Iteration  16: 122495.840 ops/s
# Warmup Iteration  17: 128910.112 ops/s
# Warmup Iteration  18: 129344.830 ops/s
# Warmup Iteration  19: 114410.535 ops/s
# Warmup Iteration  20: 102285.950 ops/s
# Warmup Iteration  21: 128972.959 ops/s
# Warmup Iteration  22: 128873.969 ops/s
# Warmup Iteration  23: 128727.848 ops/s
# Warmup Iteration  24: 128209.494 ops/s
# Warmup Iteration  25: 128795.825 ops/s
# Warmup Iteration  26: 128462.927 ops/s
# Warmup Iteration  27: 128779.960 ops/s
# Warmup Iteration  28: 128553.201 ops/s
# Warmup Iteration  29: 128147.058 ops/s
# Warmup Iteration  30: 128413.426 ops/s
Iteration   1: 128037.530 ops/s
Iteration   2: 128109.744 ops/s
Iteration   3: 128246.880 ops/s
Iteration   4: 128276.981 ops/s
Iteration   5: 128856.229 ops/s
Iteration   6: 128365.731 ops/s
Iteration   7: 129024.345 ops/s
Iteration   8: 129084.568 ops/s
Iteration   9: 129144.102 ops/s
Iteration  10: 128642.554 ops/s
Iteration  11: 129006.841 ops/s
Iteration  12: 128556.825 ops/s
Iteration  13: 129164.381 ops/s
Iteration  14: 128922.188 ops/s
Iteration  15: 128778.942 ops/s
Iteration  16: 129000.222 ops/s
Iteration  17: 128940.732 ops/s
Iteration  18: 129096.015 ops/s
Iteration  19: 129046.360 ops/s
Iteration  20: 128842.505 ops/s
Iteration  21: 128914.927 ops/s
Iteration  22: 128885.550 ops/s
Iteration  23: 128682.629 ops/s
Iteration  24: 128991.566 ops/s
Iteration  25: 128826.623 ops/s
Iteration  26: 128829.939 ops/s
Iteration  27: 129001.382 ops/s
Iteration  28: 128877.320 ops/s
Iteration  29: 129021.948 ops/s
Iteration  30: 128514.668 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_448._Benchmark.benchmark_Cluster_448":
  128789.674 ±(99.9%) 207.981 ops/s [Average]
  (min, avg, max) = (128037.530, 128789.674, 129164.381), stdev = 311.297
  CI (99.9%): [128581.693, 128997.656] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_448._Benchmark.benchmark_Cluster_448  thrpt   30  128789.674 ± 207.981  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_449._Benchmark.benchmark_Cluster_449$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_449._Benchmark.benchmark_Cluster_449

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 100750.771 ops/s
# Warmup Iteration   2: 108653.789 ops/s
# Warmup Iteration   3: 108691.331 ops/s
# Warmup Iteration   4: 115074.408 ops/s
# Warmup Iteration   5: 144867.572 ops/s
# Warmup Iteration   6: 144833.579 ops/s
# Warmup Iteration   7: 144678.499 ops/s
# Warmup Iteration   8: 144451.804 ops/s
# Warmup Iteration   9: 144815.346 ops/s
# Warmup Iteration  10: 143355.323 ops/s
# Warmup Iteration  11: 145109.402 ops/s
# Warmup Iteration  12: 144828.386 ops/s
# Warmup Iteration  13: 144745.675 ops/s
# Warmup Iteration  14: 144686.155 ops/s
# Warmup Iteration  15: 144664.899 ops/s
# Warmup Iteration  16: 145162.035 ops/s
# Warmup Iteration  17: 152956.849 ops/s
# Warmup Iteration  18: 152381.095 ops/s
# Warmup Iteration  19: 153402.456 ops/s
# Warmup Iteration  20: 153149.375 ops/s
# Warmup Iteration  21: 130327.577 ops/s
# Warmup Iteration  22: 128141.676 ops/s
# Warmup Iteration  23: 152846.983 ops/s
# Warmup Iteration  24: 152469.383 ops/s
# Warmup Iteration  25: 152640.240 ops/s
# Warmup Iteration  26: 152561.518 ops/s
# Warmup Iteration  27: 152564.316 ops/s
# Warmup Iteration  28: 152730.079 ops/s
# Warmup Iteration  29: 152684.482 ops/s
# Warmup Iteration  30: 152670.080 ops/s
Iteration   1: 151992.200 ops/s
Iteration   2: 152275.067 ops/s
Iteration   3: 152512.409 ops/s
Iteration   4: 152422.797 ops/s
Iteration   5: 152681.943 ops/s
Iteration   6: 153168.334 ops/s
Iteration   7: 152988.282 ops/s
Iteration   8: 152970.061 ops/s
Iteration   9: 152700.464 ops/s
Iteration  10: 152996.585 ops/s
Iteration  11: 152806.221 ops/s
Iteration  12: 152934.941 ops/s
Iteration  13: 153216.037 ops/s
Iteration  14: 153334.034 ops/s
Iteration  15: 152571.194 ops/s
Iteration  16: 153111.759 ops/s
Iteration  17: 152573.992 ops/s
Iteration  18: 152876.792 ops/s
Iteration  19: 152858.346 ops/s
Iteration  20: 152720.194 ops/s
Iteration  21: 152857.231 ops/s
Iteration  22: 152248.803 ops/s
Iteration  23: 152680.765 ops/s
Iteration  24: 152679.612 ops/s
Iteration  25: 152014.921 ops/s
Iteration  26: 151958.164 ops/s
Iteration  27: 152508.825 ops/s
Iteration  28: 152630.585 ops/s
Iteration  29: 152455.889 ops/s
Iteration  30: 152484.106 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_449._Benchmark.benchmark_Cluster_449":
  152674.352 ±(99.9%) 236.290 ops/s [Average]
  (min, avg, max) = (151958.164, 152674.352, 153334.034), stdev = 353.668
  CI (99.9%): [152438.062, 152910.642] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_449._Benchmark.benchmark_Cluster_449  thrpt   30  152674.352 ± 236.290  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_45._Benchmark.benchmark_Cluster_45$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_45._Benchmark.benchmark_Cluster_45

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71685.142 ops/s
# Warmup Iteration   2: 93537.741 ops/s
# Warmup Iteration   3: 110755.992 ops/s
# Warmup Iteration   4: 155475.515 ops/s
# Warmup Iteration   5: 155668.310 ops/s
# Warmup Iteration   6: 153272.539 ops/s
# Warmup Iteration   7: 155004.892 ops/s
# Warmup Iteration   8: 155215.303 ops/s
# Warmup Iteration   9: 155927.610 ops/s
# Warmup Iteration  10: 155214.015 ops/s
# Warmup Iteration  11: 156198.685 ops/s
# Warmup Iteration  12: 146369.047 ops/s
# Warmup Iteration  13: 114809.389 ops/s
# Warmup Iteration  14: 156003.844 ops/s
# Warmup Iteration  15: 156062.889 ops/s
# Warmup Iteration  16: 156382.180 ops/s
# Warmup Iteration  17: 162620.040 ops/s
# Warmup Iteration  18: 162698.779 ops/s
# Warmup Iteration  19: 161878.480 ops/s
# Warmup Iteration  20: 161721.133 ops/s
# Warmup Iteration  21: 162460.147 ops/s
# Warmup Iteration  22: 163158.306 ops/s
# Warmup Iteration  23: 163221.329 ops/s
# Warmup Iteration  24: 162472.813 ops/s
# Warmup Iteration  25: 162646.926 ops/s
# Warmup Iteration  26: 163401.911 ops/s
# Warmup Iteration  27: 161799.336 ops/s
# Warmup Iteration  28: 162488.536 ops/s
# Warmup Iteration  29: 163147.641 ops/s
# Warmup Iteration  30: 162028.194 ops/s
Iteration   1: 162664.034 ops/s
Iteration   2: 163010.086 ops/s
Iteration   3: 162561.394 ops/s
Iteration   4: 163297.543 ops/s
Iteration   5: 163231.297 ops/s
Iteration   6: 162394.906 ops/s
Iteration   7: 161893.021 ops/s
Iteration   8: 162411.522 ops/s
Iteration   9: 162072.308 ops/s
Iteration  10: 162605.036 ops/s
Iteration  11: 161902.984 ops/s
Iteration  12: 163121.127 ops/s
Iteration  13: 161910.973 ops/s
Iteration  14: 162290.802 ops/s
Iteration  15: 161666.488 ops/s
Iteration  16: 162545.175 ops/s
Iteration  17: 163475.006 ops/s
Iteration  18: 162380.160 ops/s
Iteration  19: 162431.012 ops/s
Iteration  20: 163004.565 ops/s
Iteration  21: 162937.489 ops/s
Iteration  22: 163216.071 ops/s
Iteration  23: 161244.207 ops/s
Iteration  24: 161172.893 ops/s
Iteration  25: 162263.823 ops/s
Iteration  26: 162655.458 ops/s
Iteration  27: 163107.271 ops/s
Iteration  28: 162738.261 ops/s
Iteration  29: 161770.659 ops/s
Iteration  30: 162487.542 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_45._Benchmark.benchmark_Cluster_45":
  162482.104 ±(99.9%) 395.600 ops/s [Average]
  (min, avg, max) = (161172.893, 162482.104, 163475.006), stdev = 592.115
  CI (99.9%): [162086.504, 162877.704] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_45._Benchmark.benchmark_Cluster_45  thrpt   30  162482.104 ± 395.600  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_450._Benchmark.benchmark_Cluster_450$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_450._Benchmark.benchmark_Cluster_450

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 101375.251 ops/s
# Warmup Iteration   2: 108013.205 ops/s
# Warmup Iteration   3: 112276.415 ops/s
# Warmup Iteration   4: 112606.418 ops/s
# Warmup Iteration   5: 133202.878 ops/s
# Warmup Iteration   6: 143250.081 ops/s
# Warmup Iteration   7: 142959.800 ops/s
# Warmup Iteration   8: 142632.407 ops/s
# Warmup Iteration   9: 143119.585 ops/s
# Warmup Iteration  10: 143100.961 ops/s
# Warmup Iteration  11: 141625.655 ops/s
# Warmup Iteration  12: 143439.479 ops/s
# Warmup Iteration  13: 143047.850 ops/s
# Warmup Iteration  14: 143038.643 ops/s
# Warmup Iteration  15: 142284.495 ops/s
# Warmup Iteration  16: 143028.188 ops/s
# Warmup Iteration  17: 151304.103 ops/s
# Warmup Iteration  18: 150445.748 ops/s
# Warmup Iteration  19: 150763.709 ops/s
# Warmup Iteration  20: 150688.736 ops/s
# Warmup Iteration  21: 150492.373 ops/s
# Warmup Iteration  22: 151330.804 ops/s
# Warmup Iteration  23: 151040.556 ops/s
# Warmup Iteration  24: 137048.797 ops/s
# Warmup Iteration  25: 119063.692 ops/s
# Warmup Iteration  26: 150995.484 ops/s
# Warmup Iteration  27: 151460.682 ops/s
# Warmup Iteration  28: 150972.273 ops/s
# Warmup Iteration  29: 150729.357 ops/s
# Warmup Iteration  30: 150636.674 ops/s
Iteration   1: 150782.642 ops/s
Iteration   2: 151040.608 ops/s
Iteration   3: 150585.389 ops/s
Iteration   4: 151476.999 ops/s
Iteration   5: 150969.398 ops/s
Iteration   6: 151077.559 ops/s
Iteration   7: 151086.870 ops/s
Iteration   8: 150907.542 ops/s
Iteration   9: 150433.753 ops/s
Iteration  10: 151096.005 ops/s
Iteration  11: 151118.274 ops/s
Iteration  12: 150669.999 ops/s
Iteration  13: 150469.428 ops/s
Iteration  14: 150198.573 ops/s
Iteration  15: 151342.485 ops/s
Iteration  16: 150620.177 ops/s
Iteration  17: 150995.923 ops/s
Iteration  18: 150740.193 ops/s
Iteration  19: 150728.029 ops/s
Iteration  20: 150998.387 ops/s
Iteration  21: 151468.800 ops/s
Iteration  22: 151157.152 ops/s
Iteration  23: 151446.762 ops/s
Iteration  24: 151364.951 ops/s
Iteration  25: 151079.869 ops/s
Iteration  26: 150073.259 ops/s
Iteration  27: 150700.876 ops/s
Iteration  28: 150937.712 ops/s
Iteration  29: 150506.287 ops/s
Iteration  30: 150000.676 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_450._Benchmark.benchmark_Cluster_450":
  150869.153 ±(99.9%) 263.637 ops/s [Average]
  (min, avg, max) = (150000.676, 150869.153, 151476.999), stdev = 394.600
  CI (99.9%): [150605.515, 151132.790] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_450._Benchmark.benchmark_Cluster_450  thrpt   30  150869.153 ± 263.637  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_451._Benchmark.benchmark_Cluster_451$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_451._Benchmark.benchmark_Cluster_451

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 110638.250 ops/s
# Warmup Iteration   2: 123468.514 ops/s
# Warmup Iteration   3: 123065.791 ops/s
# Warmup Iteration   4: 138342.223 ops/s
# Warmup Iteration   5: 167543.646 ops/s
# Warmup Iteration   6: 168578.176 ops/s
# Warmup Iteration   7: 168166.131 ops/s
# Warmup Iteration   8: 169220.499 ops/s
# Warmup Iteration   9: 166832.765 ops/s
# Warmup Iteration  10: 168362.289 ops/s
# Warmup Iteration  11: 168134.992 ops/s
# Warmup Iteration  12: 167737.973 ops/s
# Warmup Iteration  13: 167820.859 ops/s
# Warmup Iteration  14: 167745.062 ops/s
# Warmup Iteration  15: 168227.739 ops/s
# Warmup Iteration  16: 168896.381 ops/s
# Warmup Iteration  17: 177384.622 ops/s
# Warmup Iteration  18: 176975.947 ops/s
# Warmup Iteration  19: 177063.566 ops/s
# Warmup Iteration  20: 133331.809 ops/s
# Warmup Iteration  21: 164567.397 ops/s
# Warmup Iteration  22: 178038.698 ops/s
# Warmup Iteration  23: 177986.218 ops/s
# Warmup Iteration  24: 177036.623 ops/s
# Warmup Iteration  25: 177369.389 ops/s
# Warmup Iteration  26: 177720.689 ops/s
# Warmup Iteration  27: 177604.526 ops/s
# Warmup Iteration  28: 177305.487 ops/s
# Warmup Iteration  29: 177001.861 ops/s
# Warmup Iteration  30: 178049.857 ops/s
Iteration   1: 176829.271 ops/s
Iteration   2: 175689.441 ops/s
Iteration   3: 175530.408 ops/s
Iteration   4: 177396.885 ops/s
Iteration   5: 177348.969 ops/s
Iteration   6: 177319.910 ops/s
Iteration   7: 177023.501 ops/s
Iteration   8: 176806.026 ops/s
Iteration   9: 176671.534 ops/s
Iteration  10: 176871.524 ops/s
Iteration  11: 176692.197 ops/s
Iteration  12: 177047.319 ops/s
Iteration  13: 177542.919 ops/s
Iteration  14: 177714.329 ops/s
Iteration  15: 177526.500 ops/s
Iteration  16: 177757.750 ops/s
Iteration  17: 176872.677 ops/s
Iteration  18: 177297.956 ops/s
Iteration  19: 178027.976 ops/s
Iteration  20: 177860.972 ops/s
Iteration  21: 177285.644 ops/s
Iteration  22: 177243.831 ops/s
Iteration  23: 176790.125 ops/s
Iteration  24: 176694.053 ops/s
Iteration  25: 177248.603 ops/s
Iteration  26: 176360.745 ops/s
Iteration  27: 177464.911 ops/s
Iteration  28: 177511.612 ops/s
Iteration  29: 177860.448 ops/s
Iteration  30: 177865.144 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_451._Benchmark.benchmark_Cluster_451":
  177138.439 ±(99.9%) 397.163 ops/s [Average]
  (min, avg, max) = (175530.408, 177138.439, 178027.976), stdev = 594.455
  CI (99.9%): [176741.276, 177535.603] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_451._Benchmark.benchmark_Cluster_451  thrpt   30  177138.439 ± 397.163  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_452._Benchmark.benchmark_Cluster_452$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_452._Benchmark.benchmark_Cluster_452

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96648.079 ops/s
# Warmup Iteration   2: 110326.737 ops/s
# Warmup Iteration   3: 110724.838 ops/s
# Warmup Iteration   4: 131298.375 ops/s
# Warmup Iteration   5: 156616.896 ops/s
# Warmup Iteration   6: 155833.392 ops/s
# Warmup Iteration   7: 156690.616 ops/s
# Warmup Iteration   8: 156252.253 ops/s
# Warmup Iteration   9: 154566.200 ops/s
# Warmup Iteration  10: 156428.235 ops/s
# Warmup Iteration  11: 155711.541 ops/s
# Warmup Iteration  12: 155959.862 ops/s
# Warmup Iteration  13: 156414.262 ops/s
# Warmup Iteration  14: 156847.511 ops/s
# Warmup Iteration  15: 157028.500 ops/s
# Warmup Iteration  16: 156550.543 ops/s
# Warmup Iteration  17: 164589.965 ops/s
# Warmup Iteration  18: 162798.358 ops/s
# Warmup Iteration  19: 115849.618 ops/s
# Warmup Iteration  20: 160536.023 ops/s
# Warmup Iteration  21: 163527.659 ops/s
# Warmup Iteration  22: 164012.716 ops/s
# Warmup Iteration  23: 163787.012 ops/s
# Warmup Iteration  24: 164096.688 ops/s
# Warmup Iteration  25: 163229.093 ops/s
# Warmup Iteration  26: 163720.245 ops/s
# Warmup Iteration  27: 163570.297 ops/s
# Warmup Iteration  28: 163888.927 ops/s
# Warmup Iteration  29: 163699.296 ops/s
# Warmup Iteration  30: 163251.879 ops/s
Iteration   1: 163501.583 ops/s
Iteration   2: 163395.014 ops/s
Iteration   3: 163704.085 ops/s
Iteration   4: 163819.584 ops/s
Iteration   5: 163696.894 ops/s
Iteration   6: 163807.575 ops/s
Iteration   7: 163689.601 ops/s
Iteration   8: 163697.939 ops/s
Iteration   9: 163601.810 ops/s
Iteration  10: 163446.213 ops/s
Iteration  11: 163376.222 ops/s
Iteration  12: 163315.207 ops/s
Iteration  13: 163545.170 ops/s
Iteration  14: 163659.304 ops/s
Iteration  15: 163103.460 ops/s
Iteration  16: 163028.939 ops/s
Iteration  17: 163220.896 ops/s
Iteration  18: 163321.409 ops/s
Iteration  19: 163560.887 ops/s
Iteration  20: 163461.995 ops/s
Iteration  21: 163415.175 ops/s
Iteration  22: 163039.154 ops/s
Iteration  23: 163681.104 ops/s
Iteration  24: 163754.411 ops/s
Iteration  25: 163831.148 ops/s
Iteration  26: 163759.926 ops/s
Iteration  27: 163584.249 ops/s
Iteration  28: 163866.410 ops/s
Iteration  29: 163114.802 ops/s
Iteration  30: 164155.468 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_452._Benchmark.benchmark_Cluster_452":
  163538.521 ±(99.9%) 180.502 ops/s [Average]
  (min, avg, max) = (163028.939, 163538.521, 164155.468), stdev = 270.167
  CI (99.9%): [163358.019, 163719.023] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_452._Benchmark.benchmark_Cluster_452  thrpt   30  163538.521 ± 180.502  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_453._Benchmark.benchmark_Cluster_453$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_453._Benchmark.benchmark_Cluster_453

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 83188.614 ops/s
# Warmup Iteration   2: 98979.750 ops/s
# Warmup Iteration   3: 98718.560 ops/s
# Warmup Iteration   4: 98869.288 ops/s
# Warmup Iteration   5: 120381.885 ops/s
# Warmup Iteration   6: 128906.851 ops/s
# Warmup Iteration   7: 128676.579 ops/s
# Warmup Iteration   8: 128202.954 ops/s
# Warmup Iteration   9: 128315.102 ops/s
# Warmup Iteration  10: 128250.443 ops/s
# Warmup Iteration  11: 127415.061 ops/s
# Warmup Iteration  12: 128690.276 ops/s
# Warmup Iteration  13: 128898.720 ops/s
# Warmup Iteration  14: 128420.780 ops/s
# Warmup Iteration  15: 128624.646 ops/s
# Warmup Iteration  16: 128462.069 ops/s
# Warmup Iteration  17: 128487.597 ops/s
# Warmup Iteration  18: 128157.641 ops/s
# Warmup Iteration  19: 128659.734 ops/s
# Warmup Iteration  20: 128458.164 ops/s
# Warmup Iteration  21: 128359.236 ops/s
# Warmup Iteration  22: 128488.202 ops/s
# Warmup Iteration  23: 128354.747 ops/s
# Warmup Iteration  24: 108788.896 ops/s
# Warmup Iteration  25: 106722.848 ops/s
# Warmup Iteration  26: 128437.089 ops/s
# Warmup Iteration  27: 128495.020 ops/s
# Warmup Iteration  28: 128434.335 ops/s
# Warmup Iteration  29: 128883.490 ops/s
# Warmup Iteration  30: 128525.340 ops/s
Iteration   1: 128327.803 ops/s
Iteration   2: 128166.093 ops/s
Iteration   3: 128607.593 ops/s
Iteration   4: 127831.862 ops/s
Iteration   5: 128120.625 ops/s
Iteration   6: 128131.867 ops/s
Iteration   7: 127912.008 ops/s
Iteration   8: 128649.998 ops/s
Iteration   9: 128717.264 ops/s
Iteration  10: 128238.770 ops/s
Iteration  11: 128058.783 ops/s
Iteration  12: 128226.654 ops/s
Iteration  13: 127809.682 ops/s
Iteration  14: 128108.266 ops/s
Iteration  15: 128293.187 ops/s
Iteration  16: 127775.618 ops/s
Iteration  17: 127679.056 ops/s
Iteration  18: 128045.003 ops/s
Iteration  19: 128233.234 ops/s
Iteration  20: 128516.105 ops/s
Iteration  21: 128499.903 ops/s
Iteration  22: 128521.666 ops/s
Iteration  23: 128719.456 ops/s
Iteration  24: 128175.792 ops/s
Iteration  25: 128325.956 ops/s
Iteration  26: 128984.703 ops/s
Iteration  27: 128561.627 ops/s
Iteration  28: 128946.006 ops/s
Iteration  29: 127903.642 ops/s
Iteration  30: 127947.863 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_453._Benchmark.benchmark_Cluster_453":
  128267.869 ±(99.9%) 230.347 ops/s [Average]
  (min, avg, max) = (127679.056, 128267.869, 128984.703), stdev = 344.773
  CI (99.9%): [128037.522, 128498.217] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_453._Benchmark.benchmark_Cluster_453  thrpt   30  128267.869 ± 230.347  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_454._Benchmark.benchmark_Cluster_454$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_454._Benchmark.benchmark_Cluster_454

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 122839.433 ops/s
# Warmup Iteration   2: 135429.695 ops/s
# Warmup Iteration   3: 135208.133 ops/s
# Warmup Iteration   4: 169552.685 ops/s
# Warmup Iteration   5: 193540.909 ops/s
# Warmup Iteration   6: 193023.926 ops/s
# Warmup Iteration   7: 193581.408 ops/s
# Warmup Iteration   8: 193351.051 ops/s
# Warmup Iteration   9: 192377.897 ops/s
# Warmup Iteration  10: 193023.084 ops/s
# Warmup Iteration  11: 192656.463 ops/s
# Warmup Iteration  12: 194117.181 ops/s
# Warmup Iteration  13: 193586.580 ops/s
# Warmup Iteration  14: 193766.218 ops/s
# Warmup Iteration  15: 193074.369 ops/s
# Warmup Iteration  16: 193307.425 ops/s
# Warmup Iteration  17: 202135.429 ops/s
# Warmup Iteration  18: 162723.342 ops/s
# Warmup Iteration  19: 175822.914 ops/s
# Warmup Iteration  20: 202490.562 ops/s
# Warmup Iteration  21: 202473.870 ops/s
# Warmup Iteration  22: 202265.269 ops/s
# Warmup Iteration  23: 201279.599 ops/s
# Warmup Iteration  24: 202086.964 ops/s
# Warmup Iteration  25: 202437.170 ops/s
# Warmup Iteration  26: 201854.290 ops/s
# Warmup Iteration  27: 202098.528 ops/s
# Warmup Iteration  28: 202040.274 ops/s
# Warmup Iteration  29: 202554.450 ops/s
# Warmup Iteration  30: 202110.721 ops/s
Iteration   1: 201630.033 ops/s
Iteration   2: 201997.429 ops/s
Iteration   3: 201706.719 ops/s
Iteration   4: 202429.696 ops/s
Iteration   5: 202455.563 ops/s
Iteration   6: 201910.007 ops/s
Iteration   7: 202128.681 ops/s
Iteration   8: 202145.123 ops/s
Iteration   9: 202367.428 ops/s
Iteration  10: 202178.273 ops/s
Iteration  11: 201815.160 ops/s
Iteration  12: 201538.956 ops/s
Iteration  13: 201493.069 ops/s
Iteration  14: 202781.386 ops/s
Iteration  15: 202134.131 ops/s
Iteration  16: 202300.938 ops/s
Iteration  17: 201698.659 ops/s
Iteration  18: 201802.908 ops/s
Iteration  19: 202119.599 ops/s
Iteration  20: 201837.385 ops/s
Iteration  21: 202342.010 ops/s
Iteration  22: 201661.280 ops/s
Iteration  23: 201301.229 ops/s
Iteration  24: 202360.125 ops/s
Iteration  25: 201121.939 ops/s
Iteration  26: 201946.689 ops/s
Iteration  27: 202654.896 ops/s
Iteration  28: 201686.019 ops/s
Iteration  29: 201100.230 ops/s
Iteration  30: 201736.146 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_454._Benchmark.benchmark_Cluster_454":
  201946.057 ±(99.9%) 281.923 ops/s [Average]
  (min, avg, max) = (201100.230, 201946.057, 202781.386), stdev = 421.969
  CI (99.9%): [201664.134, 202227.980] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_454._Benchmark.benchmark_Cluster_454  thrpt   30  201946.057 ± 281.923  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_455._Benchmark.benchmark_Cluster_455$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_455._Benchmark.benchmark_Cluster_455

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 97279.549 ops/s
# Warmup Iteration   2: 107932.259 ops/s
# Warmup Iteration   3: 108487.184 ops/s
# Warmup Iteration   4: 127453.468 ops/s
# Warmup Iteration   5: 150994.477 ops/s
# Warmup Iteration   6: 150608.183 ops/s
# Warmup Iteration   7: 151905.544 ops/s
# Warmup Iteration   8: 151915.181 ops/s
# Warmup Iteration   9: 150361.465 ops/s
# Warmup Iteration  10: 151750.199 ops/s
# Warmup Iteration  11: 151941.776 ops/s
# Warmup Iteration  12: 151957.040 ops/s
# Warmup Iteration  13: 152373.550 ops/s
# Warmup Iteration  14: 151371.490 ops/s
# Warmup Iteration  15: 152438.766 ops/s
# Warmup Iteration  16: 151657.211 ops/s
# Warmup Iteration  17: 159151.878 ops/s
# Warmup Iteration  18: 158926.552 ops/s
# Warmup Iteration  19: 127797.857 ops/s
# Warmup Iteration  20: 138246.232 ops/s
# Warmup Iteration  21: 158365.614 ops/s
# Warmup Iteration  22: 157761.306 ops/s
# Warmup Iteration  23: 157425.342 ops/s
# Warmup Iteration  24: 158485.167 ops/s
# Warmup Iteration  25: 157910.156 ops/s
# Warmup Iteration  26: 158193.856 ops/s
# Warmup Iteration  27: 158657.877 ops/s
# Warmup Iteration  28: 158233.411 ops/s
# Warmup Iteration  29: 158439.383 ops/s
# Warmup Iteration  30: 158129.565 ops/s
Iteration   1: 157752.265 ops/s
Iteration   2: 157443.682 ops/s
Iteration   3: 158211.594 ops/s
Iteration   4: 158180.426 ops/s
Iteration   5: 158036.181 ops/s
Iteration   6: 158585.943 ops/s
Iteration   7: 158401.439 ops/s
Iteration   8: 158580.507 ops/s
Iteration   9: 158545.706 ops/s
Iteration  10: 158793.530 ops/s
Iteration  11: 158247.892 ops/s
Iteration  12: 158725.309 ops/s
Iteration  13: 158616.067 ops/s
Iteration  14: 158257.621 ops/s
Iteration  15: 158333.020 ops/s
Iteration  16: 159051.008 ops/s
Iteration  17: 158450.930 ops/s
Iteration  18: 158631.282 ops/s
Iteration  19: 158197.929 ops/s
Iteration  20: 158344.964 ops/s
Iteration  21: 158322.222 ops/s
Iteration  22: 158733.793 ops/s
Iteration  23: 158344.941 ops/s
Iteration  24: 158626.323 ops/s
Iteration  25: 158696.831 ops/s
Iteration  26: 158592.703 ops/s
Iteration  27: 158795.730 ops/s
Iteration  28: 158587.861 ops/s
Iteration  29: 158680.392 ops/s
Iteration  30: 158276.370 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_455._Benchmark.benchmark_Cluster_455":
  158434.815 ±(99.9%) 217.168 ops/s [Average]
  (min, avg, max) = (157443.682, 158434.815, 159051.008), stdev = 325.046
  CI (99.9%): [158217.648, 158651.983] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_455._Benchmark.benchmark_Cluster_455  thrpt   30  158434.815 ± 217.168  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_456._Benchmark.benchmark_Cluster_456$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_456._Benchmark.benchmark_Cluster_456

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 81457.030 ops/s
# Warmup Iteration   2: 94326.379 ops/s
# Warmup Iteration   3: 124623.127 ops/s
# Warmup Iteration   4: 156727.878 ops/s
# Warmup Iteration   5: 157396.623 ops/s
# Warmup Iteration   6: 155108.758 ops/s
# Warmup Iteration   7: 157140.075 ops/s
# Warmup Iteration   8: 157368.237 ops/s
# Warmup Iteration   9: 156876.021 ops/s
# Warmup Iteration  10: 156938.394 ops/s
# Warmup Iteration  11: 157284.206 ops/s
# Warmup Iteration  12: 106899.821 ops/s
# Warmup Iteration  13: 157450.810 ops/s
# Warmup Iteration  14: 156932.181 ops/s
# Warmup Iteration  15: 157181.185 ops/s
# Warmup Iteration  16: 156939.933 ops/s
# Warmup Iteration  17: 159423.781 ops/s
# Warmup Iteration  18: 160373.456 ops/s
# Warmup Iteration  19: 160349.385 ops/s
# Warmup Iteration  20: 160173.634 ops/s
# Warmup Iteration  21: 160199.985 ops/s
# Warmup Iteration  22: 159437.440 ops/s
# Warmup Iteration  23: 160304.024 ops/s
# Warmup Iteration  24: 159791.584 ops/s
# Warmup Iteration  25: 160252.408 ops/s
# Warmup Iteration  26: 160164.070 ops/s
# Warmup Iteration  27: 160139.806 ops/s
# Warmup Iteration  28: 160030.703 ops/s
# Warmup Iteration  29: 160131.182 ops/s
# Warmup Iteration  30: 159631.235 ops/s
Iteration   1: 159423.326 ops/s
Iteration   2: 159519.379 ops/s
Iteration   3: 160077.118 ops/s
Iteration   4: 160069.286 ops/s
Iteration   5: 159997.056 ops/s
Iteration   6: 159598.459 ops/s
Iteration   7: 160151.143 ops/s
Iteration   8: 159504.092 ops/s
Iteration   9: 159934.540 ops/s
Iteration  10: 159433.524 ops/s
Iteration  11: 159349.615 ops/s
Iteration  12: 160027.791 ops/s
Iteration  13: 159377.781 ops/s
Iteration  14: 159725.979 ops/s
Iteration  15: 159111.551 ops/s
Iteration  16: 159981.062 ops/s
Iteration  17: 159927.025 ops/s
Iteration  18: 160560.383 ops/s
Iteration  19: 160266.495 ops/s
Iteration  20: 160006.446 ops/s
Iteration  21: 160143.539 ops/s
Iteration  22: 159980.296 ops/s
Iteration  23: 159313.834 ops/s
Iteration  24: 159352.283 ops/s
Iteration  25: 159593.297 ops/s
Iteration  26: 160026.916 ops/s
Iteration  27: 159938.370 ops/s
Iteration  28: 159862.113 ops/s
Iteration  29: 160045.891 ops/s
Iteration  30: 159940.417 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_456._Benchmark.benchmark_Cluster_456":
  159807.967 ±(99.9%) 228.606 ops/s [Average]
  (min, avg, max) = (159111.551, 159807.967, 160560.383), stdev = 342.167
  CI (99.9%): [159579.361, 160036.573] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_456._Benchmark.benchmark_Cluster_456  thrpt   30  159807.967 ± 228.606  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_457._Benchmark.benchmark_Cluster_457$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_457._Benchmark.benchmark_Cluster_457

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55566.404 ops/s
# Warmup Iteration   2: 85603.197 ops/s
# Warmup Iteration   3: 142820.939 ops/s
# Warmup Iteration   4: 171135.653 ops/s
# Warmup Iteration   5: 169397.292 ops/s
# Warmup Iteration   6: 170887.398 ops/s
# Warmup Iteration   7: 171590.571 ops/s
# Warmup Iteration   8: 171515.164 ops/s
# Warmup Iteration   9: 114459.603 ops/s
# Warmup Iteration  10: 172033.926 ops/s
# Warmup Iteration  11: 171616.597 ops/s
# Warmup Iteration  12: 171537.494 ops/s
# Warmup Iteration  13: 171630.385 ops/s
# Warmup Iteration  14: 171510.405 ops/s
# Warmup Iteration  15: 171469.082 ops/s
# Warmup Iteration  16: 171929.683 ops/s
# Warmup Iteration  17: 174385.281 ops/s
# Warmup Iteration  18: 173902.849 ops/s
# Warmup Iteration  19: 174231.078 ops/s
# Warmup Iteration  20: 174136.885 ops/s
# Warmup Iteration  21: 174611.085 ops/s
# Warmup Iteration  22: 174708.562 ops/s
# Warmup Iteration  23: 174447.446 ops/s
# Warmup Iteration  24: 174336.559 ops/s
# Warmup Iteration  25: 173966.917 ops/s
# Warmup Iteration  26: 174512.636 ops/s
# Warmup Iteration  27: 174513.698 ops/s
# Warmup Iteration  28: 173914.547 ops/s
# Warmup Iteration  29: 174266.345 ops/s
# Warmup Iteration  30: 174096.281 ops/s
Iteration   1: 173758.004 ops/s
Iteration   2: 174836.528 ops/s
Iteration   3: 174331.936 ops/s
Iteration   4: 174215.402 ops/s
Iteration   5: 174028.944 ops/s
Iteration   6: 173352.084 ops/s
Iteration   7: 174471.333 ops/s
Iteration   8: 174685.684 ops/s
Iteration   9: 174208.130 ops/s
Iteration  10: 174382.948 ops/s
Iteration  11: 174280.828 ops/s
Iteration  12: 173998.829 ops/s
Iteration  13: 174063.214 ops/s
Iteration  14: 174339.633 ops/s
Iteration  15: 174617.892 ops/s
Iteration  16: 172945.930 ops/s
Iteration  17: 173909.468 ops/s
Iteration  18: 174657.249 ops/s
Iteration  19: 174328.084 ops/s
Iteration  20: 173684.732 ops/s
Iteration  21: 173712.546 ops/s
Iteration  22: 173735.236 ops/s
Iteration  23: 174528.096 ops/s
Iteration  24: 174045.364 ops/s
Iteration  25: 173812.804 ops/s
Iteration  26: 174297.556 ops/s
Iteration  27: 174011.877 ops/s
Iteration  28: 173946.050 ops/s
Iteration  29: 174508.572 ops/s
Iteration  30: 173686.260 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_457._Benchmark.benchmark_Cluster_457":
  174112.707 ±(99.9%) 279.971 ops/s [Average]
  (min, avg, max) = (172945.930, 174112.707, 174836.528), stdev = 419.047
  CI (99.9%): [173832.737, 174392.678] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_457._Benchmark.benchmark_Cluster_457  thrpt   30  174112.707 ± 279.971  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_458._Benchmark.benchmark_Cluster_458$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_458._Benchmark.benchmark_Cluster_458

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 50684.458 ops/s
# Warmup Iteration   2: 72724.455 ops/s
# Warmup Iteration   3: 147243.977 ops/s
# Warmup Iteration   4: 154262.981 ops/s
# Warmup Iteration   5: 155754.376 ops/s
# Warmup Iteration   6: 155740.971 ops/s
# Warmup Iteration   7: 155873.955 ops/s
# Warmup Iteration   8: 107144.425 ops/s
# Warmup Iteration   9: 156020.965 ops/s
# Warmup Iteration  10: 156170.696 ops/s
# Warmup Iteration  11: 156150.130 ops/s
# Warmup Iteration  12: 155874.233 ops/s
# Warmup Iteration  13: 156125.847 ops/s
# Warmup Iteration  14: 155736.506 ops/s
# Warmup Iteration  15: 155631.752 ops/s
# Warmup Iteration  16: 156348.025 ops/s
# Warmup Iteration  17: 156534.943 ops/s
# Warmup Iteration  18: 156441.937 ops/s
# Warmup Iteration  19: 156363.242 ops/s
# Warmup Iteration  20: 156435.229 ops/s
# Warmup Iteration  21: 156285.477 ops/s
# Warmup Iteration  22: 156285.794 ops/s
# Warmup Iteration  23: 156433.768 ops/s
# Warmup Iteration  24: 156420.535 ops/s
# Warmup Iteration  25: 155998.394 ops/s
# Warmup Iteration  26: 156102.672 ops/s
# Warmup Iteration  27: 156228.395 ops/s
# Warmup Iteration  28: 156401.898 ops/s
# Warmup Iteration  29: 156373.661 ops/s
# Warmup Iteration  30: 156301.866 ops/s
Iteration   1: 156448.148 ops/s
Iteration   2: 156463.215 ops/s
Iteration   3: 157072.666 ops/s
Iteration   4: 156539.056 ops/s
Iteration   5: 156783.475 ops/s
Iteration   6: 156561.520 ops/s
Iteration   7: 156461.809 ops/s
Iteration   8: 156635.707 ops/s
Iteration   9: 156203.877 ops/s
Iteration  10: 156360.156 ops/s
Iteration  11: 155698.380 ops/s
Iteration  12: 156101.950 ops/s
Iteration  13: 156337.565 ops/s
Iteration  14: 156240.273 ops/s
Iteration  15: 156382.640 ops/s
Iteration  16: 156529.819 ops/s
Iteration  17: 156079.766 ops/s
Iteration  18: 156017.311 ops/s
Iteration  19: 156048.403 ops/s
Iteration  20: 155965.241 ops/s
Iteration  21: 156150.195 ops/s
Iteration  22: 156167.641 ops/s
Iteration  23: 155972.166 ops/s
Iteration  24: 156344.880 ops/s
Iteration  25: 156562.471 ops/s
Iteration  26: 156641.992 ops/s
Iteration  27: 156653.226 ops/s
Iteration  28: 156316.374 ops/s
Iteration  29: 155582.104 ops/s
Iteration  30: 156450.915 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_458._Benchmark.benchmark_Cluster_458":
  156325.765 ±(99.9%) 211.450 ops/s [Average]
  (min, avg, max) = (155582.104, 156325.765, 157072.666), stdev = 316.488
  CI (99.9%): [156114.315, 156537.215] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_458._Benchmark.benchmark_Cluster_458  thrpt   30  156325.765 ± 211.450  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_459._Benchmark.benchmark_Cluster_459$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_459._Benchmark.benchmark_Cluster_459

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64321.303 ops/s
# Warmup Iteration   2: 85692.071 ops/s
# Warmup Iteration   3: 190072.828 ops/s
# Warmup Iteration   4: 187471.833 ops/s
# Warmup Iteration   5: 191225.529 ops/s
# Warmup Iteration   6: 190747.928 ops/s
# Warmup Iteration   7: 173613.957 ops/s
# Warmup Iteration   8: 146991.124 ops/s
# Warmup Iteration   9: 190334.948 ops/s
# Warmup Iteration  10: 190376.582 ops/s
# Warmup Iteration  11: 190841.322 ops/s
# Warmup Iteration  12: 189503.751 ops/s
# Warmup Iteration  13: 190312.169 ops/s
# Warmup Iteration  14: 190548.324 ops/s
# Warmup Iteration  15: 190896.642 ops/s
# Warmup Iteration  16: 190225.342 ops/s
# Warmup Iteration  17: 190685.058 ops/s
# Warmup Iteration  18: 190872.575 ops/s
# Warmup Iteration  19: 190558.876 ops/s
# Warmup Iteration  20: 190671.325 ops/s
# Warmup Iteration  21: 190980.074 ops/s
# Warmup Iteration  22: 190338.168 ops/s
# Warmup Iteration  23: 190948.626 ops/s
# Warmup Iteration  24: 190819.777 ops/s
# Warmup Iteration  25: 189965.305 ops/s
# Warmup Iteration  26: 189803.127 ops/s
# Warmup Iteration  27: 189929.713 ops/s
# Warmup Iteration  28: 190002.232 ops/s
# Warmup Iteration  29: 189495.078 ops/s
# Warmup Iteration  30: 190952.388 ops/s
Iteration   1: 189586.152 ops/s
Iteration   2: 191443.200 ops/s
Iteration   3: 191220.310 ops/s
Iteration   4: 190056.153 ops/s
Iteration   5: 189891.528 ops/s
Iteration   6: 190240.046 ops/s
Iteration   7: 190036.435 ops/s
Iteration   8: 189444.327 ops/s
Iteration   9: 189907.110 ops/s
Iteration  10: 191139.451 ops/s
Iteration  11: 191024.861 ops/s
Iteration  12: 189644.538 ops/s
Iteration  13: 190898.429 ops/s
Iteration  14: 189846.076 ops/s
Iteration  15: 189857.381 ops/s
Iteration  16: 188884.803 ops/s
Iteration  17: 190504.598 ops/s
Iteration  18: 190537.521 ops/s
Iteration  19: 191154.460 ops/s
Iteration  20: 191092.447 ops/s
Iteration  21: 190135.382 ops/s
Iteration  22: 188965.924 ops/s
Iteration  23: 189679.673 ops/s
Iteration  24: 190490.604 ops/s
Iteration  25: 190305.466 ops/s
Iteration  26: 190120.955 ops/s
Iteration  27: 189774.272 ops/s
Iteration  28: 189294.352 ops/s
Iteration  29: 189633.383 ops/s
Iteration  30: 189089.092 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_459._Benchmark.benchmark_Cluster_459":
  190129.964 ±(99.9%) 469.476 ops/s [Average]
  (min, avg, max) = (188884.803, 190129.964, 191443.200), stdev = 702.690
  CI (99.9%): [189660.488, 190599.441] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_459._Benchmark.benchmark_Cluster_459  thrpt   30  190129.964 ± 469.476  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_46._Benchmark.benchmark_Cluster_46$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_46._Benchmark.benchmark_Cluster_46

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 49204.361 ops/s
# Warmup Iteration   2: 67148.451 ops/s
# Warmup Iteration   3: 107097.114 ops/s
# Warmup Iteration   4: 127807.257 ops/s
# Warmup Iteration   5: 125984.691 ops/s
# Warmup Iteration   6: 127889.604 ops/s
# Warmup Iteration   7: 127560.303 ops/s
# Warmup Iteration   8: 127350.422 ops/s
# Warmup Iteration   9: 126331.550 ops/s
# Warmup Iteration  10: 84516.637 ops/s
# Warmup Iteration  11: 128002.243 ops/s
# Warmup Iteration  12: 127358.607 ops/s
# Warmup Iteration  13: 127630.369 ops/s
# Warmup Iteration  14: 128290.195 ops/s
# Warmup Iteration  15: 127981.293 ops/s
# Warmup Iteration  16: 128110.675 ops/s
# Warmup Iteration  17: 128068.419 ops/s
# Warmup Iteration  18: 127779.807 ops/s
# Warmup Iteration  19: 127596.675 ops/s
# Warmup Iteration  20: 127898.336 ops/s
# Warmup Iteration  21: 127707.589 ops/s
# Warmup Iteration  22: 128046.836 ops/s
# Warmup Iteration  23: 128006.627 ops/s
# Warmup Iteration  24: 127737.552 ops/s
# Warmup Iteration  25: 127834.986 ops/s
# Warmup Iteration  26: 128125.711 ops/s
# Warmup Iteration  27: 128080.645 ops/s
# Warmup Iteration  28: 127945.591 ops/s
# Warmup Iteration  29: 127911.067 ops/s
# Warmup Iteration  30: 128409.883 ops/s
Iteration   1: 127755.488 ops/s
Iteration   2: 127217.038 ops/s
Iteration   3: 128044.703 ops/s
Iteration   4: 127805.574 ops/s
Iteration   5: 127994.128 ops/s
Iteration   6: 128103.070 ops/s
Iteration   7: 128060.504 ops/s
Iteration   8: 128133.646 ops/s
Iteration   9: 127838.238 ops/s
Iteration  10: 127991.078 ops/s
Iteration  11: 127835.075 ops/s
Iteration  12: 127805.555 ops/s
Iteration  13: 127772.930 ops/s
Iteration  14: 127652.304 ops/s
Iteration  15: 128339.280 ops/s
Iteration  16: 127581.063 ops/s
Iteration  17: 127606.172 ops/s
Iteration  18: 128392.154 ops/s
Iteration  19: 127903.214 ops/s
Iteration  20: 128470.215 ops/s
Iteration  21: 128670.222 ops/s
Iteration  22: 128049.099 ops/s
Iteration  23: 127594.783 ops/s
Iteration  24: 128737.990 ops/s
Iteration  25: 128796.548 ops/s
Iteration  26: 127852.472 ops/s
Iteration  27: 127918.845 ops/s
Iteration  28: 128440.698 ops/s
Iteration  29: 128529.997 ops/s
Iteration  30: 128257.641 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_46._Benchmark.benchmark_Cluster_46":
  128038.324 ±(99.9%) 253.020 ops/s [Average]
  (min, avg, max) = (127217.038, 128038.324, 128796.548), stdev = 378.709
  CI (99.9%): [127785.304, 128291.344] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_46._Benchmark.benchmark_Cluster_46  thrpt   30  128038.324 ± 253.020  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_460._Benchmark.benchmark_Cluster_460$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_460._Benchmark.benchmark_Cluster_460

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91880.976 ops/s
# Warmup Iteration   2: 109133.292 ops/s
# Warmup Iteration   3: 109736.745 ops/s
# Warmup Iteration   4: 109475.500 ops/s
# Warmup Iteration   5: 139783.324 ops/s
# Warmup Iteration   6: 143957.923 ops/s
# Warmup Iteration   7: 143862.382 ops/s
# Warmup Iteration   8: 143348.307 ops/s
# Warmup Iteration   9: 143558.528 ops/s
# Warmup Iteration  10: 143545.625 ops/s
# Warmup Iteration  11: 142741.220 ops/s
# Warmup Iteration  12: 143526.502 ops/s
# Warmup Iteration  13: 143482.044 ops/s
# Warmup Iteration  14: 142263.525 ops/s
# Warmup Iteration  15: 143193.895 ops/s
# Warmup Iteration  16: 143111.802 ops/s
# Warmup Iteration  17: 152522.184 ops/s
# Warmup Iteration  18: 152319.049 ops/s
# Warmup Iteration  19: 152377.225 ops/s
# Warmup Iteration  20: 153080.769 ops/s
# Warmup Iteration  21: 152924.006 ops/s
# Warmup Iteration  22: 148750.792 ops/s
# Warmup Iteration  23: 115704.161 ops/s
# Warmup Iteration  24: 147587.554 ops/s
# Warmup Iteration  25: 153161.512 ops/s
# Warmup Iteration  26: 152757.250 ops/s
# Warmup Iteration  27: 150952.267 ops/s
# Warmup Iteration  28: 151973.215 ops/s
# Warmup Iteration  29: 152927.869 ops/s
# Warmup Iteration  30: 153148.774 ops/s
Iteration   1: 152348.791 ops/s
Iteration   2: 152879.498 ops/s
Iteration   3: 152597.228 ops/s
Iteration   4: 152080.810 ops/s
Iteration   5: 152712.388 ops/s
Iteration   6: 152442.846 ops/s
Iteration   7: 152153.136 ops/s
Iteration   8: 152150.354 ops/s
Iteration   9: 151939.884 ops/s
Iteration  10: 152498.659 ops/s
Iteration  11: 152231.779 ops/s
Iteration  12: 153323.266 ops/s
Iteration  13: 152829.429 ops/s
Iteration  14: 152603.241 ops/s
Iteration  15: 152728.236 ops/s
Iteration  16: 152694.256 ops/s
Iteration  17: 152304.583 ops/s
Iteration  18: 151833.691 ops/s
Iteration  19: 152421.531 ops/s
Iteration  20: 152568.592 ops/s
Iteration  21: 152707.638 ops/s
Iteration  22: 152840.652 ops/s
Iteration  23: 152383.828 ops/s
Iteration  24: 152745.967 ops/s
Iteration  25: 151706.281 ops/s
Iteration  26: 152524.206 ops/s
Iteration  27: 152614.599 ops/s
Iteration  28: 152506.723 ops/s
Iteration  29: 152170.146 ops/s
Iteration  30: 151759.518 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_460._Benchmark.benchmark_Cluster_460":
  152443.392 ±(99.9%) 243.319 ops/s [Average]
  (min, avg, max) = (151706.281, 152443.392, 153323.266), stdev = 364.188
  CI (99.9%): [152200.073, 152686.711] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_460._Benchmark.benchmark_Cluster_460  thrpt   30  152443.392 ± 243.319  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_461._Benchmark.benchmark_Cluster_461$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_461._Benchmark.benchmark_Cluster_461

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 97818.708 ops/s
# Warmup Iteration   2: 105618.602 ops/s
# Warmup Iteration   3: 105634.980 ops/s
# Warmup Iteration   4: 116199.646 ops/s
# Warmup Iteration   5: 141281.370 ops/s
# Warmup Iteration   6: 141204.876 ops/s
# Warmup Iteration   7: 140613.883 ops/s
# Warmup Iteration   8: 141031.414 ops/s
# Warmup Iteration   9: 139625.486 ops/s
# Warmup Iteration  10: 139325.838 ops/s
# Warmup Iteration  11: 141176.649 ops/s
# Warmup Iteration  12: 140611.618 ops/s
# Warmup Iteration  13: 141293.609 ops/s
# Warmup Iteration  14: 141473.228 ops/s
# Warmup Iteration  15: 140683.572 ops/s
# Warmup Iteration  16: 141184.940 ops/s
# Warmup Iteration  17: 149876.582 ops/s
# Warmup Iteration  18: 149523.918 ops/s
# Warmup Iteration  19: 149708.951 ops/s
# Warmup Iteration  20: 142490.260 ops/s
# Warmup Iteration  21: 111411.890 ops/s
# Warmup Iteration  22: 149855.077 ops/s
# Warmup Iteration  23: 149861.217 ops/s
# Warmup Iteration  24: 149839.931 ops/s
# Warmup Iteration  25: 149624.343 ops/s
# Warmup Iteration  26: 149035.690 ops/s
# Warmup Iteration  27: 149230.647 ops/s
# Warmup Iteration  28: 149824.613 ops/s
# Warmup Iteration  29: 149949.111 ops/s
# Warmup Iteration  30: 149805.104 ops/s
Iteration   1: 150127.943 ops/s
Iteration   2: 150103.174 ops/s
Iteration   3: 149530.796 ops/s
Iteration   4: 150209.117 ops/s
Iteration   5: 150090.574 ops/s
Iteration   6: 149829.243 ops/s
Iteration   7: 149953.313 ops/s
Iteration   8: 150429.203 ops/s
Iteration   9: 150318.070 ops/s
Iteration  10: 150039.552 ops/s
Iteration  11: 150217.958 ops/s
Iteration  12: 150253.324 ops/s
Iteration  13: 149002.038 ops/s
Iteration  14: 149213.825 ops/s
Iteration  15: 149929.087 ops/s
Iteration  16: 149294.604 ops/s
Iteration  17: 149595.770 ops/s
Iteration  18: 149602.995 ops/s
Iteration  19: 149295.706 ops/s
Iteration  20: 149940.530 ops/s
Iteration  21: 149926.717 ops/s
Iteration  22: 150104.428 ops/s
Iteration  23: 149691.210 ops/s
Iteration  24: 149729.697 ops/s
Iteration  25: 149622.715 ops/s
Iteration  26: 150012.694 ops/s
Iteration  27: 150175.317 ops/s
Iteration  28: 149984.865 ops/s
Iteration  29: 150059.635 ops/s
Iteration  30: 149428.900 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_461._Benchmark.benchmark_Cluster_461":
  149857.100 ±(99.9%) 239.980 ops/s [Average]
  (min, avg, max) = (149002.038, 149857.100, 150429.203), stdev = 359.191
  CI (99.9%): [149617.120, 150097.080] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_461._Benchmark.benchmark_Cluster_461  thrpt   30  149857.100 ± 239.980  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_462._Benchmark.benchmark_Cluster_462$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_462._Benchmark.benchmark_Cluster_462

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 91551.428 ops/s
# Warmup Iteration   2: 98433.950 ops/s
# Warmup Iteration   3: 98043.947 ops/s
# Warmup Iteration   4: 104717.046 ops/s
# Warmup Iteration   5: 132336.803 ops/s
# Warmup Iteration   6: 132451.813 ops/s
# Warmup Iteration   7: 131937.734 ops/s
# Warmup Iteration   8: 131825.311 ops/s
# Warmup Iteration   9: 132290.296 ops/s
# Warmup Iteration  10: 130323.188 ops/s
# Warmup Iteration  11: 131726.468 ops/s
# Warmup Iteration  12: 131515.250 ops/s
# Warmup Iteration  13: 131944.575 ops/s
# Warmup Iteration  14: 131989.318 ops/s
# Warmup Iteration  15: 131809.855 ops/s
# Warmup Iteration  16: 132021.716 ops/s
# Warmup Iteration  17: 138698.328 ops/s
# Warmup Iteration  18: 138190.797 ops/s
# Warmup Iteration  19: 138419.917 ops/s
# Warmup Iteration  20: 138361.915 ops/s
# Warmup Iteration  21: 112345.368 ops/s
# Warmup Iteration  22: 120708.202 ops/s
# Warmup Iteration  23: 138482.125 ops/s
# Warmup Iteration  24: 138219.226 ops/s
# Warmup Iteration  25: 138113.884 ops/s
# Warmup Iteration  26: 137706.903 ops/s
# Warmup Iteration  27: 137816.940 ops/s
# Warmup Iteration  28: 138139.200 ops/s
# Warmup Iteration  29: 137869.579 ops/s
# Warmup Iteration  30: 138243.087 ops/s
Iteration   1: 137911.831 ops/s
Iteration   2: 138793.040 ops/s
Iteration   3: 138697.257 ops/s
Iteration   4: 138405.455 ops/s
Iteration   5: 137493.437 ops/s
Iteration   6: 138436.751 ops/s
Iteration   7: 138255.369 ops/s
Iteration   8: 138187.140 ops/s
Iteration   9: 138175.129 ops/s
Iteration  10: 138403.226 ops/s
Iteration  11: 137795.802 ops/s
Iteration  12: 137857.058 ops/s
Iteration  13: 138252.311 ops/s
Iteration  14: 138415.086 ops/s
Iteration  15: 137772.111 ops/s
Iteration  16: 138357.008 ops/s
Iteration  17: 138283.877 ops/s
Iteration  18: 138364.875 ops/s
Iteration  19: 138044.671 ops/s
Iteration  20: 138627.007 ops/s
Iteration  21: 138334.069 ops/s
Iteration  22: 137439.253 ops/s
Iteration  23: 138204.966 ops/s
Iteration  24: 138348.333 ops/s
Iteration  25: 137571.108 ops/s
Iteration  26: 137507.601 ops/s
Iteration  27: 138483.973 ops/s
Iteration  28: 137848.675 ops/s
Iteration  29: 138347.183 ops/s
Iteration  30: 137847.205 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_462._Benchmark.benchmark_Cluster_462":
  138148.694 ±(99.9%) 244.000 ops/s [Average]
  (min, avg, max) = (137439.253, 138148.694, 138793.040), stdev = 365.208
  CI (99.9%): [137904.693, 138392.694] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_462._Benchmark.benchmark_Cluster_462  thrpt   30  138148.694 ± 244.000  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_463._Benchmark.benchmark_Cluster_463$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_463._Benchmark.benchmark_Cluster_463

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 131433.556 ops/s
# Warmup Iteration   2: 140798.636 ops/s
# Warmup Iteration   3: 141642.183 ops/s
# Warmup Iteration   4: 141466.216 ops/s
# Warmup Iteration   5: 168175.224 ops/s
# Warmup Iteration   6: 181514.530 ops/s
# Warmup Iteration   7: 181503.137 ops/s
# Warmup Iteration   8: 181382.423 ops/s
# Warmup Iteration   9: 181168.859 ops/s
# Warmup Iteration  10: 181100.150 ops/s
# Warmup Iteration  11: 178669.042 ops/s
# Warmup Iteration  12: 180747.393 ops/s
# Warmup Iteration  13: 180622.749 ops/s
# Warmup Iteration  14: 180506.445 ops/s
# Warmup Iteration  15: 180498.712 ops/s
# Warmup Iteration  16: 180703.275 ops/s
# Warmup Iteration  17: 191218.155 ops/s
# Warmup Iteration  18: 191553.517 ops/s
# Warmup Iteration  19: 190855.274 ops/s
# Warmup Iteration  20: 191010.306 ops/s
# Warmup Iteration  21: 191000.027 ops/s
# Warmup Iteration  22: 190987.639 ops/s
# Warmup Iteration  23: 191429.450 ops/s
# Warmup Iteration  24: 182463.725 ops/s
# Warmup Iteration  25: 147882.651 ops/s
# Warmup Iteration  26: 184266.680 ops/s
# Warmup Iteration  27: 191220.332 ops/s
# Warmup Iteration  28: 191636.040 ops/s
# Warmup Iteration  29: 191378.297 ops/s
# Warmup Iteration  30: 191084.489 ops/s
Iteration   1: 190960.726 ops/s
Iteration   2: 191598.340 ops/s
Iteration   3: 192292.959 ops/s
Iteration   4: 191857.835 ops/s
Iteration   5: 191966.738 ops/s
Iteration   6: 191820.104 ops/s
Iteration   7: 191659.012 ops/s
Iteration   8: 191531.186 ops/s
Iteration   9: 191436.373 ops/s
Iteration  10: 192057.788 ops/s
Iteration  11: 190897.797 ops/s
Iteration  12: 191762.035 ops/s
Iteration  13: 191981.167 ops/s
Iteration  14: 191944.631 ops/s
Iteration  15: 192395.423 ops/s
Iteration  16: 191032.675 ops/s
Iteration  17: 192368.315 ops/s
Iteration  18: 191756.546 ops/s
Iteration  19: 191718.089 ops/s
Iteration  20: 191274.846 ops/s
Iteration  21: 191153.013 ops/s
Iteration  22: 190721.598 ops/s
Iteration  23: 191521.715 ops/s
Iteration  24: 191780.866 ops/s
Iteration  25: 191750.083 ops/s
Iteration  26: 192188.198 ops/s
Iteration  27: 191897.904 ops/s
Iteration  28: 191343.496 ops/s
Iteration  29: 191645.470 ops/s
Iteration  30: 191871.970 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_463._Benchmark.benchmark_Cluster_463":
  191672.897 ±(99.9%) 285.760 ops/s [Average]
  (min, avg, max) = (190721.598, 191672.897, 192395.423), stdev = 427.712
  CI (99.9%): [191387.137, 191958.656] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_463._Benchmark.benchmark_Cluster_463  thrpt   30  191672.897 ± 285.760  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_464._Benchmark.benchmark_Cluster_464$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_464._Benchmark.benchmark_Cluster_464

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 135474.007 ops/s
# Warmup Iteration   2: 153217.708 ops/s
# Warmup Iteration   3: 154811.015 ops/s
# Warmup Iteration   4: 172271.520 ops/s
# Warmup Iteration   5: 213163.900 ops/s
# Warmup Iteration   6: 212959.189 ops/s
# Warmup Iteration   7: 212017.332 ops/s
# Warmup Iteration   8: 212511.434 ops/s
# Warmup Iteration   9: 210456.917 ops/s
# Warmup Iteration  10: 212202.246 ops/s
# Warmup Iteration  11: 212410.491 ops/s
# Warmup Iteration  12: 211858.751 ops/s
# Warmup Iteration  13: 212531.846 ops/s
# Warmup Iteration  14: 212095.550 ops/s
# Warmup Iteration  15: 213175.370 ops/s
# Warmup Iteration  16: 212940.359 ops/s
# Warmup Iteration  17: 222911.921 ops/s
# Warmup Iteration  18: 224734.975 ops/s
# Warmup Iteration  19: 223803.930 ops/s
# Warmup Iteration  20: 167063.000 ops/s
# Warmup Iteration  21: 208448.464 ops/s
# Warmup Iteration  22: 223732.175 ops/s
# Warmup Iteration  23: 224830.115 ops/s
# Warmup Iteration  24: 224195.040 ops/s
# Warmup Iteration  25: 224138.537 ops/s
# Warmup Iteration  26: 224320.849 ops/s
# Warmup Iteration  27: 224076.039 ops/s
# Warmup Iteration  28: 224666.728 ops/s
# Warmup Iteration  29: 224214.898 ops/s
# Warmup Iteration  30: 224905.894 ops/s
Iteration   1: 224500.272 ops/s
Iteration   2: 225288.983 ops/s
Iteration   3: 225386.334 ops/s
Iteration   4: 224127.040 ops/s
Iteration   5: 224856.655 ops/s
Iteration   6: 224665.568 ops/s
Iteration   7: 224652.332 ops/s
Iteration   8: 224273.862 ops/s
Iteration   9: 223818.210 ops/s
Iteration  10: 224757.896 ops/s
Iteration  11: 224288.736 ops/s
Iteration  12: 224911.123 ops/s
Iteration  13: 224362.320 ops/s
Iteration  14: 224550.053 ops/s
Iteration  15: 224731.825 ops/s
Iteration  16: 225280.687 ops/s
Iteration  17: 224379.375 ops/s
Iteration  18: 224117.034 ops/s
Iteration  19: 223979.684 ops/s
Iteration  20: 224120.599 ops/s
Iteration  21: 223937.231 ops/s
Iteration  22: 223171.387 ops/s
Iteration  23: 223852.012 ops/s
Iteration  24: 224323.546 ops/s
Iteration  25: 225058.291 ops/s
Iteration  26: 224588.441 ops/s
Iteration  27: 224687.146 ops/s
Iteration  28: 224805.613 ops/s
Iteration  29: 224250.810 ops/s
Iteration  30: 224350.729 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_464._Benchmark.benchmark_Cluster_464":
  224469.126 ±(99.9%) 323.960 ops/s [Average]
  (min, avg, max) = (223171.387, 224469.126, 225386.334), stdev = 484.888
  CI (99.9%): [224145.167, 224793.086] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_464._Benchmark.benchmark_Cluster_464  thrpt   30  224469.126 ± 323.960  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_465._Benchmark.benchmark_Cluster_465$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_465._Benchmark.benchmark_Cluster_465

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 38960.411 ops/s
# Warmup Iteration   2: 64809.248 ops/s
# Warmup Iteration   3: 81174.744 ops/s
# Warmup Iteration   4: 114426.628 ops/s
# Warmup Iteration   5: 114309.575 ops/s
# Warmup Iteration   6: 113279.237 ops/s
# Warmup Iteration   7: 114251.829 ops/s
# Warmup Iteration   8: 113963.988 ops/s
# Warmup Iteration   9: 114358.001 ops/s
# Warmup Iteration  10: 114096.797 ops/s
# Warmup Iteration  11: 94608.737 ops/s
# Warmup Iteration  12: 96970.779 ops/s
# Warmup Iteration  13: 114046.372 ops/s
# Warmup Iteration  14: 114639.478 ops/s
# Warmup Iteration  15: 114539.792 ops/s
# Warmup Iteration  16: 114906.470 ops/s
# Warmup Iteration  17: 114294.990 ops/s
# Warmup Iteration  18: 114192.488 ops/s
# Warmup Iteration  19: 114214.466 ops/s
# Warmup Iteration  20: 114301.076 ops/s
# Warmup Iteration  21: 114744.647 ops/s
# Warmup Iteration  22: 114485.847 ops/s
# Warmup Iteration  23: 114673.926 ops/s
# Warmup Iteration  24: 114124.605 ops/s
# Warmup Iteration  25: 114430.467 ops/s
# Warmup Iteration  26: 114492.647 ops/s
# Warmup Iteration  27: 114564.179 ops/s
# Warmup Iteration  28: 114341.184 ops/s
# Warmup Iteration  29: 114352.063 ops/s
# Warmup Iteration  30: 113950.259 ops/s
Iteration   1: 114297.006 ops/s
Iteration   2: 114691.385 ops/s
Iteration   3: 114586.059 ops/s
Iteration   4: 114271.197 ops/s
Iteration   5: 114776.063 ops/s
Iteration   6: 114474.566 ops/s
Iteration   7: 114683.565 ops/s
Iteration   8: 114130.745 ops/s
Iteration   9: 114441.818 ops/s
Iteration  10: 114967.386 ops/s
Iteration  11: 114353.119 ops/s
Iteration  12: 114914.121 ops/s
Iteration  13: 114504.739 ops/s
Iteration  14: 114399.728 ops/s
Iteration  15: 114833.991 ops/s
Iteration  16: 115569.755 ops/s
Iteration  17: 114253.085 ops/s
Iteration  18: 114001.572 ops/s
Iteration  19: 113851.708 ops/s
Iteration  20: 113857.876 ops/s
Iteration  21: 114736.798 ops/s
Iteration  22: 114741.646 ops/s
Iteration  23: 114919.510 ops/s
Iteration  24: 114008.336 ops/s
Iteration  25: 113874.002 ops/s
Iteration  26: 113692.992 ops/s
Iteration  27: 113861.576 ops/s
Iteration  28: 115010.934 ops/s
Iteration  29: 115211.386 ops/s
Iteration  30: 113984.681 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_465._Benchmark.benchmark_Cluster_465":
  114463.378 ±(99.9%) 308.491 ops/s [Average]
  (min, avg, max) = (113692.992, 114463.378, 115569.755), stdev = 461.734
  CI (99.9%): [114154.888, 114771.869] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_465._Benchmark.benchmark_Cluster_465  thrpt   30  114463.378 ± 308.491  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_466._Benchmark.benchmark_Cluster_466$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_466._Benchmark.benchmark_Cluster_466

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 74639.402 ops/s
# Warmup Iteration   2: 98364.810 ops/s
# Warmup Iteration   3: 156032.004 ops/s
# Warmup Iteration   4: 180547.610 ops/s
# Warmup Iteration   5: 178487.430 ops/s
# Warmup Iteration   6: 180419.128 ops/s
# Warmup Iteration   7: 180430.944 ops/s
# Warmup Iteration   8: 179770.420 ops/s
# Warmup Iteration   9: 180892.040 ops/s
# Warmup Iteration  10: 125196.677 ops/s
# Warmup Iteration  11: 180635.610 ops/s
# Warmup Iteration  12: 180655.569 ops/s
# Warmup Iteration  13: 180736.988 ops/s
# Warmup Iteration  14: 179860.490 ops/s
# Warmup Iteration  15: 180316.980 ops/s
# Warmup Iteration  16: 180487.277 ops/s
# Warmup Iteration  17: 180819.260 ops/s
# Warmup Iteration  18: 181042.092 ops/s
# Warmup Iteration  19: 180818.859 ops/s
# Warmup Iteration  20: 181435.767 ops/s
# Warmup Iteration  21: 181235.081 ops/s
# Warmup Iteration  22: 181031.112 ops/s
# Warmup Iteration  23: 180449.969 ops/s
# Warmup Iteration  24: 181247.375 ops/s
# Warmup Iteration  25: 181104.804 ops/s
# Warmup Iteration  26: 181098.886 ops/s
# Warmup Iteration  27: 180976.271 ops/s
# Warmup Iteration  28: 180996.292 ops/s
# Warmup Iteration  29: 180795.360 ops/s
# Warmup Iteration  30: 180878.964 ops/s
Iteration   1: 180884.856 ops/s
Iteration   2: 180927.861 ops/s
Iteration   3: 181214.031 ops/s
Iteration   4: 181431.659 ops/s
Iteration   5: 181149.181 ops/s
Iteration   6: 181070.720 ops/s
Iteration   7: 181209.457 ops/s
Iteration   8: 181772.589 ops/s
Iteration   9: 180660.372 ops/s
Iteration  10: 180684.240 ops/s
Iteration  11: 180787.216 ops/s
Iteration  12: 180445.573 ops/s
Iteration  13: 181475.775 ops/s
Iteration  14: 181123.636 ops/s
Iteration  15: 180545.182 ops/s
Iteration  16: 180831.600 ops/s
Iteration  17: 180268.433 ops/s
Iteration  18: 181174.560 ops/s
Iteration  19: 181060.326 ops/s
Iteration  20: 181530.263 ops/s
Iteration  21: 180804.648 ops/s
Iteration  22: 181170.234 ops/s
Iteration  23: 181118.974 ops/s
Iteration  24: 180550.456 ops/s
Iteration  25: 181064.976 ops/s
Iteration  26: 181467.444 ops/s
Iteration  27: 180733.190 ops/s
Iteration  28: 181323.234 ops/s
Iteration  29: 180432.140 ops/s
Iteration  30: 180192.488 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_466._Benchmark.benchmark_Cluster_466":
  180970.177 ±(99.9%) 261.520 ops/s [Average]
  (min, avg, max) = (180192.488, 180970.177, 181772.589), stdev = 391.431
  CI (99.9%): [180708.657, 181231.697] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_466._Benchmark.benchmark_Cluster_466  thrpt   30  180970.177 ± 261.520  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_467._Benchmark.benchmark_Cluster_467$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_467._Benchmark.benchmark_Cluster_467

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 141140.266 ops/s
# Warmup Iteration   2: 153603.685 ops/s
# Warmup Iteration   3: 153202.727 ops/s
# Warmup Iteration   4: 153443.529 ops/s
# Warmup Iteration   5: 192922.695 ops/s
# Warmup Iteration   6: 200589.043 ops/s
# Warmup Iteration   7: 200411.378 ops/s
# Warmup Iteration   8: 199985.197 ops/s
# Warmup Iteration   9: 200682.160 ops/s
# Warmup Iteration  10: 199886.178 ops/s
# Warmup Iteration  11: 198180.018 ops/s
# Warmup Iteration  12: 200091.721 ops/s
# Warmup Iteration  13: 200125.548 ops/s
# Warmup Iteration  14: 199737.288 ops/s
# Warmup Iteration  15: 199486.296 ops/s
# Warmup Iteration  16: 199534.340 ops/s
# Warmup Iteration  17: 207165.891 ops/s
# Warmup Iteration  18: 206980.881 ops/s
# Warmup Iteration  19: 206965.928 ops/s
# Warmup Iteration  20: 207940.517 ops/s
# Warmup Iteration  21: 207189.990 ops/s
# Warmup Iteration  22: 207782.672 ops/s
# Warmup Iteration  23: 192727.057 ops/s
# Warmup Iteration  24: 160341.246 ops/s
# Warmup Iteration  25: 207127.747 ops/s
# Warmup Iteration  26: 207180.475 ops/s
# Warmup Iteration  27: 207695.431 ops/s
# Warmup Iteration  28: 205634.183 ops/s
# Warmup Iteration  29: 207051.785 ops/s
# Warmup Iteration  30: 207325.528 ops/s
Iteration   1: 206779.168 ops/s
Iteration   2: 207297.380 ops/s
Iteration   3: 206286.526 ops/s
Iteration   4: 206188.930 ops/s
Iteration   5: 206644.374 ops/s
Iteration   6: 206461.280 ops/s
Iteration   7: 206934.209 ops/s
Iteration   8: 206173.903 ops/s
Iteration   9: 207154.190 ops/s
Iteration  10: 207901.347 ops/s
Iteration  11: 206733.476 ops/s
Iteration  12: 206444.872 ops/s
Iteration  13: 206761.909 ops/s
Iteration  14: 206911.618 ops/s
Iteration  15: 206890.779 ops/s
Iteration  16: 206952.766 ops/s
Iteration  17: 207674.122 ops/s
Iteration  18: 207190.689 ops/s
Iteration  19: 206504.598 ops/s
Iteration  20: 207366.453 ops/s
Iteration  21: 206826.544 ops/s
Iteration  22: 207615.159 ops/s
Iteration  23: 207540.719 ops/s
Iteration  24: 207638.720 ops/s
Iteration  25: 207700.225 ops/s
Iteration  26: 207623.409 ops/s
Iteration  27: 207791.849 ops/s
Iteration  28: 207038.092 ops/s
Iteration  29: 206972.254 ops/s
Iteration  30: 207231.590 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_467._Benchmark.benchmark_Cluster_467":
  207041.038 ±(99.9%) 332.724 ops/s [Average]
  (min, avg, max) = (206173.903, 207041.038, 207901.347), stdev = 498.005
  CI (99.9%): [206708.315, 207373.762] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_467._Benchmark.benchmark_Cluster_467  thrpt   30  207041.038 ± 332.724  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_468._Benchmark.benchmark_Cluster_468$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_468._Benchmark.benchmark_Cluster_468

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71490.407 ops/s
# Warmup Iteration   2: 90132.963 ops/s
# Warmup Iteration   3: 164499.056 ops/s
# Warmup Iteration   4: 175235.819 ops/s
# Warmup Iteration   5: 172965.003 ops/s
# Warmup Iteration   6: 175462.320 ops/s
# Warmup Iteration   7: 175648.733 ops/s
# Warmup Iteration   8: 174890.569 ops/s
# Warmup Iteration   9: 120929.324 ops/s
# Warmup Iteration  10: 175234.955 ops/s
# Warmup Iteration  11: 175159.787 ops/s
# Warmup Iteration  12: 175324.852 ops/s
# Warmup Iteration  13: 175145.256 ops/s
# Warmup Iteration  14: 174878.679 ops/s
# Warmup Iteration  15: 174809.318 ops/s
# Warmup Iteration  16: 175512.090 ops/s
# Warmup Iteration  17: 175300.372 ops/s
# Warmup Iteration  18: 175235.588 ops/s
# Warmup Iteration  19: 175148.809 ops/s
# Warmup Iteration  20: 175243.713 ops/s
# Warmup Iteration  21: 175381.191 ops/s
# Warmup Iteration  22: 174828.793 ops/s
# Warmup Iteration  23: 174795.053 ops/s
# Warmup Iteration  24: 175187.520 ops/s
# Warmup Iteration  25: 174654.781 ops/s
# Warmup Iteration  26: 174879.207 ops/s
# Warmup Iteration  27: 174592.545 ops/s
# Warmup Iteration  28: 174422.195 ops/s
# Warmup Iteration  29: 174866.693 ops/s
# Warmup Iteration  30: 175447.553 ops/s
Iteration   1: 175117.112 ops/s
Iteration   2: 175098.756 ops/s
Iteration   3: 173664.548 ops/s
Iteration   4: 174105.785 ops/s
Iteration   5: 174827.882 ops/s
Iteration   6: 174491.982 ops/s
Iteration   7: 173843.332 ops/s
Iteration   8: 174351.831 ops/s
Iteration   9: 174712.745 ops/s
Iteration  10: 174239.876 ops/s
Iteration  11: 174352.889 ops/s
Iteration  12: 174753.351 ops/s
Iteration  13: 175233.669 ops/s
Iteration  14: 174568.151 ops/s
Iteration  15: 174453.028 ops/s
Iteration  16: 174249.904 ops/s
Iteration  17: 174568.835 ops/s
Iteration  18: 175212.330 ops/s
Iteration  19: 175334.977 ops/s
Iteration  20: 175257.403 ops/s
Iteration  21: 175383.698 ops/s
Iteration  22: 174756.160 ops/s
Iteration  23: 175351.748 ops/s
Iteration  24: 175377.257 ops/s
Iteration  25: 175176.155 ops/s
Iteration  26: 175437.433 ops/s
Iteration  27: 175255.849 ops/s
Iteration  28: 175116.059 ops/s
Iteration  29: 175214.050 ops/s
Iteration  30: 175075.118 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_468._Benchmark.benchmark_Cluster_468":
  174819.397 ±(99.9%) 331.779 ops/s [Average]
  (min, avg, max) = (173664.548, 174819.397, 175437.433), stdev = 496.591
  CI (99.9%): [174487.618, 175151.176] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_468._Benchmark.benchmark_Cluster_468  thrpt   30  174819.397 ± 331.779  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_469._Benchmark.benchmark_Cluster_469$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_469._Benchmark.benchmark_Cluster_469

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 47198.832 ops/s
# Warmup Iteration   2: 75992.974 ops/s
# Warmup Iteration   3: 75172.589 ops/s
# Warmup Iteration   4: 91992.888 ops/s
# Warmup Iteration   5: 113078.547 ops/s
# Warmup Iteration   6: 113264.137 ops/s
# Warmup Iteration   7: 114097.810 ops/s
# Warmup Iteration   8: 113105.714 ops/s
# Warmup Iteration   9: 114944.588 ops/s
# Warmup Iteration  10: 114034.711 ops/s
# Warmup Iteration  11: 114429.197 ops/s
# Warmup Iteration  12: 114250.460 ops/s
# Warmup Iteration  13: 113387.981 ops/s
# Warmup Iteration  14: 115821.689 ops/s
# Warmup Iteration  15: 114369.376 ops/s
# Warmup Iteration  16: 115350.512 ops/s
# Warmup Iteration  17: 85391.481 ops/s
# Warmup Iteration  18: 105221.067 ops/s
# Warmup Iteration  19: 116743.174 ops/s
# Warmup Iteration  20: 117008.264 ops/s
# Warmup Iteration  21: 116301.745 ops/s
# Warmup Iteration  22: 115484.537 ops/s
# Warmup Iteration  23: 116599.941 ops/s
# Warmup Iteration  24: 116550.797 ops/s
# Warmup Iteration  25: 115468.082 ops/s
# Warmup Iteration  26: 116212.586 ops/s
# Warmup Iteration  27: 115843.605 ops/s
# Warmup Iteration  28: 117021.877 ops/s
# Warmup Iteration  29: 116023.303 ops/s
# Warmup Iteration  30: 115819.924 ops/s
Iteration   1: 116135.689 ops/s
Iteration   2: 116612.194 ops/s
Iteration   3: 116166.484 ops/s
Iteration   4: 116345.422 ops/s
Iteration   5: 116404.660 ops/s
Iteration   6: 115935.138 ops/s
Iteration   7: 115581.085 ops/s
Iteration   8: 115299.358 ops/s
Iteration   9: 115796.622 ops/s
Iteration  10: 116383.847 ops/s
Iteration  11: 115384.932 ops/s
Iteration  12: 115483.671 ops/s
Iteration  13: 116616.128 ops/s
Iteration  14: 116713.334 ops/s
Iteration  15: 116875.951 ops/s
Iteration  16: 115903.639 ops/s
Iteration  17: 116684.863 ops/s
Iteration  18: 116192.924 ops/s
Iteration  19: 116139.585 ops/s
Iteration  20: 116676.083 ops/s
Iteration  21: 116598.713 ops/s
Iteration  22: 115798.108 ops/s
Iteration  23: 116187.495 ops/s
Iteration  24: 116909.434 ops/s
Iteration  25: 116266.399 ops/s
Iteration  26: 116748.309 ops/s
Iteration  27: 116710.951 ops/s
Iteration  28: 116854.978 ops/s
Iteration  29: 116326.956 ops/s
Iteration  30: 117241.896 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_469._Benchmark.benchmark_Cluster_469":
  116299.162 ±(99.9%) 327.051 ops/s [Average]
  (min, avg, max) = (115299.358, 116299.162, 117241.896), stdev = 489.515
  CI (99.9%): [115972.110, 116626.213] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_469._Benchmark.benchmark_Cluster_469  thrpt   30  116299.162 ± 327.051  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_47._Benchmark.benchmark_Cluster_47$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_47._Benchmark.benchmark_Cluster_47

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 44139.654 ops/s
# Warmup Iteration   2: 66505.249 ops/s
# Warmup Iteration   3: 70808.822 ops/s
# Warmup Iteration   4: 108131.909 ops/s
# Warmup Iteration   5: 108722.782 ops/s
# Warmup Iteration   6: 108593.082 ops/s
# Warmup Iteration   7: 109031.618 ops/s
# Warmup Iteration   8: 108530.445 ops/s
# Warmup Iteration   9: 108774.276 ops/s
# Warmup Iteration  10: 108814.124 ops/s
# Warmup Iteration  11: 108355.917 ops/s
# Warmup Iteration  12: 108783.852 ops/s
# Warmup Iteration  13: 76849.285 ops/s
# Warmup Iteration  14: 105491.695 ops/s
# Warmup Iteration  15: 108531.469 ops/s
# Warmup Iteration  16: 108566.318 ops/s
# Warmup Iteration  17: 108417.001 ops/s
# Warmup Iteration  18: 108609.505 ops/s
# Warmup Iteration  19: 108700.867 ops/s
# Warmup Iteration  20: 108710.922 ops/s
# Warmup Iteration  21: 108710.306 ops/s
# Warmup Iteration  22: 108571.179 ops/s
# Warmup Iteration  23: 108980.577 ops/s
# Warmup Iteration  24: 108681.224 ops/s
# Warmup Iteration  25: 108477.150 ops/s
# Warmup Iteration  26: 108500.050 ops/s
# Warmup Iteration  27: 108872.175 ops/s
# Warmup Iteration  28: 108614.759 ops/s
# Warmup Iteration  29: 108841.044 ops/s
# Warmup Iteration  30: 108747.960 ops/s
Iteration   1: 108958.094 ops/s
Iteration   2: 108687.776 ops/s
Iteration   3: 109060.984 ops/s
Iteration   4: 108814.932 ops/s
Iteration   5: 108634.530 ops/s
Iteration   6: 108529.782 ops/s
Iteration   7: 108848.997 ops/s
Iteration   8: 108530.123 ops/s
Iteration   9: 108432.177 ops/s
Iteration  10: 108737.309 ops/s
Iteration  11: 108932.531 ops/s
Iteration  12: 108474.676 ops/s
Iteration  13: 108820.495 ops/s
Iteration  14: 108717.018 ops/s
Iteration  15: 108531.734 ops/s
Iteration  16: 108775.218 ops/s
Iteration  17: 108166.268 ops/s
Iteration  18: 108382.937 ops/s
Iteration  19: 108658.062 ops/s
Iteration  20: 108955.057 ops/s
Iteration  21: 108192.603 ops/s
Iteration  22: 108591.802 ops/s
Iteration  23: 108620.339 ops/s
Iteration  24: 108795.748 ops/s
Iteration  25: 109077.654 ops/s
Iteration  26: 108893.909 ops/s
Iteration  27: 108701.440 ops/s
Iteration  28: 108729.068 ops/s
Iteration  29: 108840.935 ops/s
Iteration  30: 108310.381 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_47._Benchmark.benchmark_Cluster_47":
  108680.086 ±(99.9%) 156.886 ops/s [Average]
  (min, avg, max) = (108166.268, 108680.086, 109077.654), stdev = 234.819
  CI (99.9%): [108523.200, 108836.972] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_47._Benchmark.benchmark_Cluster_47  thrpt   30  108680.086 ± 156.886  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_470._Benchmark.benchmark_Cluster_470$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_470._Benchmark.benchmark_Cluster_470

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 36600.893 ops/s
# Warmup Iteration   2: 73857.697 ops/s
# Warmup Iteration   3: 117520.219 ops/s
# Warmup Iteration   4: 150238.503 ops/s
# Warmup Iteration   5: 148869.424 ops/s
# Warmup Iteration   6: 151074.605 ops/s
# Warmup Iteration   7: 150997.944 ops/s
# Warmup Iteration   8: 151767.797 ops/s
# Warmup Iteration   9: 103686.717 ops/s
# Warmup Iteration  10: 151672.077 ops/s
# Warmup Iteration  11: 151490.252 ops/s
# Warmup Iteration  12: 150855.801 ops/s
# Warmup Iteration  13: 150659.344 ops/s
# Warmup Iteration  14: 151309.369 ops/s
# Warmup Iteration  15: 151018.609 ops/s
# Warmup Iteration  16: 151635.888 ops/s
# Warmup Iteration  17: 151706.022 ops/s
# Warmup Iteration  18: 151606.756 ops/s
# Warmup Iteration  19: 151535.390 ops/s
# Warmup Iteration  20: 151181.526 ops/s
# Warmup Iteration  21: 151093.952 ops/s
# Warmup Iteration  22: 151935.906 ops/s
# Warmup Iteration  23: 151360.798 ops/s
# Warmup Iteration  24: 152001.798 ops/s
# Warmup Iteration  25: 151752.582 ops/s
# Warmup Iteration  26: 151461.047 ops/s
# Warmup Iteration  27: 151435.656 ops/s
# Warmup Iteration  28: 151506.012 ops/s
# Warmup Iteration  29: 151273.159 ops/s
# Warmup Iteration  30: 151184.929 ops/s
Iteration   1: 150630.644 ops/s
Iteration   2: 150840.481 ops/s
Iteration   3: 151425.799 ops/s
Iteration   4: 151250.228 ops/s
Iteration   5: 151049.478 ops/s
Iteration   6: 151732.045 ops/s
Iteration   7: 151188.325 ops/s
Iteration   8: 151626.296 ops/s
Iteration   9: 151440.659 ops/s
Iteration  10: 150475.640 ops/s
Iteration  11: 151512.190 ops/s
Iteration  12: 151544.109 ops/s
Iteration  13: 151727.481 ops/s
Iteration  14: 152115.167 ops/s
Iteration  15: 151137.624 ops/s
Iteration  16: 151511.745 ops/s
Iteration  17: 151650.775 ops/s
Iteration  18: 151675.492 ops/s
Iteration  19: 151683.526 ops/s
Iteration  20: 151916.296 ops/s
Iteration  21: 151146.202 ops/s
Iteration  22: 151300.383 ops/s
Iteration  23: 150793.609 ops/s
Iteration  24: 151449.387 ops/s
Iteration  25: 151513.858 ops/s
Iteration  26: 151795.057 ops/s
Iteration  27: 151825.945 ops/s
Iteration  28: 151391.195 ops/s
Iteration  29: 151429.123 ops/s
Iteration  30: 151349.788 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_470._Benchmark.benchmark_Cluster_470":
  151404.285 ±(99.9%) 252.139 ops/s [Average]
  (min, avg, max) = (150475.640, 151404.285, 152115.167), stdev = 377.390
  CI (99.9%): [151152.146, 151656.424] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_470._Benchmark.benchmark_Cluster_470  thrpt   30  151404.285 ± 252.139  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_471._Benchmark.benchmark_Cluster_471$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_471._Benchmark.benchmark_Cluster_471

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 34986.307 ops/s
# Warmup Iteration   2: 59625.123 ops/s
# Warmup Iteration   3: 81840.405 ops/s
# Warmup Iteration   4: 114268.609 ops/s
# Warmup Iteration   5: 112437.221 ops/s
# Warmup Iteration   6: 112916.957 ops/s
# Warmup Iteration   7: 115331.555 ops/s
# Warmup Iteration   8: 113684.130 ops/s
# Warmup Iteration   9: 113793.688 ops/s
# Warmup Iteration  10: 79857.402 ops/s
# Warmup Iteration  11: 109247.896 ops/s
# Warmup Iteration  12: 114192.668 ops/s
# Warmup Iteration  13: 114950.931 ops/s
# Warmup Iteration  14: 114093.163 ops/s
# Warmup Iteration  15: 113607.172 ops/s
# Warmup Iteration  16: 112679.720 ops/s
# Warmup Iteration  17: 116007.866 ops/s
# Warmup Iteration  18: 116141.560 ops/s
# Warmup Iteration  19: 116338.182 ops/s
# Warmup Iteration  20: 116712.175 ops/s
# Warmup Iteration  21: 116053.121 ops/s
# Warmup Iteration  22: 116048.473 ops/s
# Warmup Iteration  23: 113729.880 ops/s
# Warmup Iteration  24: 115063.565 ops/s
# Warmup Iteration  25: 116058.918 ops/s
# Warmup Iteration  26: 113908.420 ops/s
# Warmup Iteration  27: 114767.780 ops/s
# Warmup Iteration  28: 116087.665 ops/s
# Warmup Iteration  29: 116289.285 ops/s
# Warmup Iteration  30: 115488.038 ops/s
Iteration   1: 116073.966 ops/s
Iteration   2: 116123.649 ops/s
Iteration   3: 115553.128 ops/s
Iteration   4: 115693.874 ops/s
Iteration   5: 115519.524 ops/s
Iteration   6: 115961.958 ops/s
Iteration   7: 116169.424 ops/s
Iteration   8: 115855.133 ops/s
Iteration   9: 115282.733 ops/s
Iteration  10: 114877.574 ops/s
Iteration  11: 114722.706 ops/s
Iteration  12: 114880.939 ops/s
Iteration  13: 116096.763 ops/s
Iteration  14: 116078.795 ops/s
Iteration  15: 116007.198 ops/s
Iteration  16: 115507.014 ops/s
Iteration  17: 113432.929 ops/s
Iteration  18: 114558.019 ops/s
Iteration  19: 116293.841 ops/s
Iteration  20: 115687.283 ops/s
Iteration  21: 115172.430 ops/s
Iteration  22: 115976.505 ops/s
Iteration  23: 115582.183 ops/s
Iteration  24: 113722.371 ops/s
Iteration  25: 115238.607 ops/s
Iteration  26: 116308.945 ops/s
Iteration  27: 115790.852 ops/s
Iteration  28: 117031.157 ops/s
Iteration  29: 116386.533 ops/s
Iteration  30: 116277.940 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_471._Benchmark.benchmark_Cluster_471":
  115595.466 ±(99.9%) 519.199 ops/s [Average]
  (min, avg, max) = (113432.929, 115595.466, 117031.157), stdev = 777.112
  CI (99.9%): [115076.267, 116114.665] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_471._Benchmark.benchmark_Cluster_471  thrpt   30  115595.466 ± 519.199  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_472._Benchmark.benchmark_Cluster_472$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_472._Benchmark.benchmark_Cluster_472

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 62584.298 ops/s
# Warmup Iteration   2: 85525.804 ops/s
# Warmup Iteration   3: 164028.942 ops/s
# Warmup Iteration   4: 171947.221 ops/s
# Warmup Iteration   5: 173414.512 ops/s
# Warmup Iteration   6: 173359.812 ops/s
# Warmup Iteration   7: 173683.411 ops/s
# Warmup Iteration   8: 134660.110 ops/s
# Warmup Iteration   9: 159329.180 ops/s
# Warmup Iteration  10: 173958.281 ops/s
# Warmup Iteration  11: 173039.332 ops/s
# Warmup Iteration  12: 173252.199 ops/s
# Warmup Iteration  13: 173103.447 ops/s
# Warmup Iteration  14: 173886.762 ops/s
# Warmup Iteration  15: 173023.735 ops/s
# Warmup Iteration  16: 173123.985 ops/s
# Warmup Iteration  17: 173690.931 ops/s
# Warmup Iteration  18: 173809.128 ops/s
# Warmup Iteration  19: 173283.515 ops/s
# Warmup Iteration  20: 173006.895 ops/s
# Warmup Iteration  21: 173393.196 ops/s
# Warmup Iteration  22: 173170.669 ops/s
# Warmup Iteration  23: 173242.613 ops/s
# Warmup Iteration  24: 172767.693 ops/s
# Warmup Iteration  25: 173188.004 ops/s
# Warmup Iteration  26: 172881.815 ops/s
# Warmup Iteration  27: 172792.603 ops/s
# Warmup Iteration  28: 173507.760 ops/s
# Warmup Iteration  29: 173578.046 ops/s
# Warmup Iteration  30: 173046.055 ops/s
Iteration   1: 173261.187 ops/s
Iteration   2: 172787.964 ops/s
Iteration   3: 172624.322 ops/s
Iteration   4: 173283.030 ops/s
Iteration   5: 174051.969 ops/s
Iteration   6: 173412.713 ops/s
Iteration   7: 173802.742 ops/s
Iteration   8: 173426.018 ops/s
Iteration   9: 173900.442 ops/s
Iteration  10: 173536.988 ops/s
Iteration  11: 172605.819 ops/s
Iteration  12: 172880.245 ops/s
Iteration  13: 172739.518 ops/s
Iteration  14: 173625.584 ops/s
Iteration  15: 173225.155 ops/s
Iteration  16: 173709.298 ops/s
Iteration  17: 173603.745 ops/s
Iteration  18: 172707.211 ops/s
Iteration  19: 172824.026 ops/s
Iteration  20: 173421.213 ops/s
Iteration  21: 172918.537 ops/s
Iteration  22: 173293.615 ops/s
Iteration  23: 172638.330 ops/s
Iteration  24: 171874.387 ops/s
Iteration  25: 173068.596 ops/s
Iteration  26: 172065.565 ops/s
Iteration  27: 172828.114 ops/s
Iteration  28: 173040.397 ops/s
Iteration  29: 173582.325 ops/s
Iteration  30: 173245.711 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_472._Benchmark.benchmark_Cluster_472":
  173132.826 ±(99.9%) 343.096 ops/s [Average]
  (min, avg, max) = (171874.387, 173132.826, 174051.969), stdev = 513.530
  CI (99.9%): [172789.730, 173475.921] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_472._Benchmark.benchmark_Cluster_472  thrpt   30  173132.826 ± 343.096  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_473._Benchmark.benchmark_Cluster_473$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_473._Benchmark.benchmark_Cluster_473

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63913.635 ops/s
# Warmup Iteration   2: 89023.651 ops/s
# Warmup Iteration   3: 148675.405 ops/s
# Warmup Iteration   4: 170144.525 ops/s
# Warmup Iteration   5: 168590.118 ops/s
# Warmup Iteration   6: 170107.977 ops/s
# Warmup Iteration   7: 169690.686 ops/s
# Warmup Iteration   8: 169639.784 ops/s
# Warmup Iteration   9: 134204.341 ops/s
# Warmup Iteration  10: 153137.687 ops/s
# Warmup Iteration  11: 169957.239 ops/s
# Warmup Iteration  12: 170123.972 ops/s
# Warmup Iteration  13: 169680.607 ops/s
# Warmup Iteration  14: 169768.165 ops/s
# Warmup Iteration  15: 170095.009 ops/s
# Warmup Iteration  16: 169874.257 ops/s
# Warmup Iteration  17: 170147.052 ops/s
# Warmup Iteration  18: 170254.256 ops/s
# Warmup Iteration  19: 170562.119 ops/s
# Warmup Iteration  20: 170447.018 ops/s
# Warmup Iteration  21: 170337.707 ops/s
# Warmup Iteration  22: 170286.359 ops/s
# Warmup Iteration  23: 170523.649 ops/s
# Warmup Iteration  24: 169870.523 ops/s
# Warmup Iteration  25: 170610.754 ops/s
# Warmup Iteration  26: 170539.060 ops/s
# Warmup Iteration  27: 170529.099 ops/s
# Warmup Iteration  28: 170345.535 ops/s
# Warmup Iteration  29: 170080.789 ops/s
# Warmup Iteration  30: 170239.790 ops/s
Iteration   1: 170746.088 ops/s
Iteration   2: 170737.818 ops/s
Iteration   3: 170697.866 ops/s
Iteration   4: 170163.877 ops/s
Iteration   5: 170419.036 ops/s
Iteration   6: 170219.687 ops/s
Iteration   7: 170472.458 ops/s
Iteration   8: 170492.145 ops/s
Iteration   9: 170416.503 ops/s
Iteration  10: 169789.766 ops/s
Iteration  11: 170384.042 ops/s
Iteration  12: 170674.806 ops/s
Iteration  13: 170308.223 ops/s
Iteration  14: 170188.846 ops/s
Iteration  15: 169718.838 ops/s
Iteration  16: 170413.833 ops/s
Iteration  17: 170791.273 ops/s
Iteration  18: 170688.206 ops/s
Iteration  19: 170330.242 ops/s
Iteration  20: 170622.500 ops/s
Iteration  21: 170460.907 ops/s
Iteration  22: 170395.736 ops/s
Iteration  23: 170606.719 ops/s
Iteration  24: 170630.812 ops/s
Iteration  25: 170680.528 ops/s
Iteration  26: 170376.385 ops/s
Iteration  27: 170171.044 ops/s
Iteration  28: 170297.697 ops/s
Iteration  29: 170080.340 ops/s
Iteration  30: 170154.814 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_473._Benchmark.benchmark_Cluster_473":
  170404.368 ±(99.9%) 179.133 ops/s [Average]
  (min, avg, max) = (169718.838, 170404.368, 170791.273), stdev = 268.118
  CI (99.9%): [170225.235, 170583.501] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_473._Benchmark.benchmark_Cluster_473  thrpt   30  170404.368 ± 179.133  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_474._Benchmark.benchmark_Cluster_474$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_474._Benchmark.benchmark_Cluster_474

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 36294.875 ops/s
# Warmup Iteration   2: 79684.049 ops/s
# Warmup Iteration   3: 107205.576 ops/s
# Warmup Iteration   4: 149692.069 ops/s
# Warmup Iteration   5: 149053.859 ops/s
# Warmup Iteration   6: 149756.967 ops/s
# Warmup Iteration   7: 149842.044 ops/s
# Warmup Iteration   8: 149625.238 ops/s
# Warmup Iteration   9: 150451.531 ops/s
# Warmup Iteration  10: 105296.158 ops/s
# Warmup Iteration  11: 145179.260 ops/s
# Warmup Iteration  12: 149972.404 ops/s
# Warmup Iteration  13: 149968.749 ops/s
# Warmup Iteration  14: 149921.553 ops/s
# Warmup Iteration  15: 149504.176 ops/s
# Warmup Iteration  16: 149602.037 ops/s
# Warmup Iteration  17: 149526.779 ops/s
# Warmup Iteration  18: 149907.055 ops/s
# Warmup Iteration  19: 149964.561 ops/s
# Warmup Iteration  20: 149920.525 ops/s
# Warmup Iteration  21: 149811.368 ops/s
# Warmup Iteration  22: 149390.507 ops/s
# Warmup Iteration  23: 149445.478 ops/s
# Warmup Iteration  24: 149411.646 ops/s
# Warmup Iteration  25: 149776.634 ops/s
# Warmup Iteration  26: 149675.351 ops/s
# Warmup Iteration  27: 150019.537 ops/s
# Warmup Iteration  28: 149863.493 ops/s
# Warmup Iteration  29: 149722.142 ops/s
# Warmup Iteration  30: 149053.686 ops/s
Iteration   1: 148729.366 ops/s
Iteration   2: 149691.142 ops/s
Iteration   3: 148484.778 ops/s
Iteration   4: 150221.510 ops/s
Iteration   5: 148858.701 ops/s
Iteration   6: 149219.740 ops/s
Iteration   7: 150580.002 ops/s
Iteration   8: 149953.649 ops/s
Iteration   9: 149991.749 ops/s
Iteration  10: 150126.989 ops/s
Iteration  11: 150203.392 ops/s
Iteration  12: 149462.333 ops/s
Iteration  13: 149673.064 ops/s
Iteration  14: 149684.187 ops/s
Iteration  15: 149955.559 ops/s
Iteration  16: 149450.334 ops/s
Iteration  17: 150144.824 ops/s
Iteration  18: 149724.766 ops/s
Iteration  19: 149183.661 ops/s
Iteration  20: 149445.216 ops/s
Iteration  21: 149678.130 ops/s
Iteration  22: 149012.161 ops/s
Iteration  23: 150344.725 ops/s
Iteration  24: 150041.351 ops/s
Iteration  25: 150111.924 ops/s
Iteration  26: 149808.857 ops/s
Iteration  27: 149653.952 ops/s
Iteration  28: 149692.642 ops/s
Iteration  29: 150603.093 ops/s
Iteration  30: 150523.969 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_474._Benchmark.benchmark_Cluster_474":
  149741.859 ±(99.9%) 358.193 ops/s [Average]
  (min, avg, max) = (148484.778, 149741.859, 150603.093), stdev = 536.126
  CI (99.9%): [149383.666, 150100.052] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_474._Benchmark.benchmark_Cluster_474  thrpt   30  149741.859 ± 358.193  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_475._Benchmark.benchmark_Cluster_475$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_475._Benchmark.benchmark_Cluster_475

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69585.067 ops/s
# Warmup Iteration   2: 94447.678 ops/s
# Warmup Iteration   3: 139087.482 ops/s
# Warmup Iteration   4: 168208.875 ops/s
# Warmup Iteration   5: 166658.876 ops/s
# Warmup Iteration   6: 168731.085 ops/s
# Warmup Iteration   7: 168791.436 ops/s
# Warmup Iteration   8: 168883.695 ops/s
# Warmup Iteration   9: 168834.660 ops/s
# Warmup Iteration  10: 141214.271 ops/s
# Warmup Iteration  11: 144231.844 ops/s
# Warmup Iteration  12: 168479.633 ops/s
# Warmup Iteration  13: 169015.755 ops/s
# Warmup Iteration  14: 168437.757 ops/s
# Warmup Iteration  15: 168488.912 ops/s
# Warmup Iteration  16: 168674.026 ops/s
# Warmup Iteration  17: 168949.843 ops/s
# Warmup Iteration  18: 168766.803 ops/s
# Warmup Iteration  19: 168408.136 ops/s
# Warmup Iteration  20: 168511.267 ops/s
# Warmup Iteration  21: 168841.092 ops/s
# Warmup Iteration  22: 169088.855 ops/s
# Warmup Iteration  23: 168711.019 ops/s
# Warmup Iteration  24: 168329.631 ops/s
# Warmup Iteration  25: 168786.157 ops/s
# Warmup Iteration  26: 169035.564 ops/s
# Warmup Iteration  27: 168992.690 ops/s
# Warmup Iteration  28: 168755.080 ops/s
# Warmup Iteration  29: 168815.221 ops/s
# Warmup Iteration  30: 168261.525 ops/s
Iteration   1: 168755.911 ops/s
Iteration   2: 167709.531 ops/s
Iteration   3: 168123.598 ops/s
Iteration   4: 168392.723 ops/s
Iteration   5: 167710.890 ops/s
Iteration   6: 168660.753 ops/s
Iteration   7: 168681.463 ops/s
Iteration   8: 167964.972 ops/s
Iteration   9: 169156.048 ops/s
Iteration  10: 168663.238 ops/s
Iteration  11: 168269.483 ops/s
Iteration  12: 168813.248 ops/s
Iteration  13: 168146.669 ops/s
Iteration  14: 168876.666 ops/s
Iteration  15: 169108.217 ops/s
Iteration  16: 168545.226 ops/s
Iteration  17: 169059.806 ops/s
Iteration  18: 168771.075 ops/s
Iteration  19: 168833.560 ops/s
Iteration  20: 168420.963 ops/s
Iteration  21: 168405.590 ops/s
Iteration  22: 168700.683 ops/s
Iteration  23: 167766.037 ops/s
Iteration  24: 168201.823 ops/s
Iteration  25: 167851.056 ops/s
Iteration  26: 168098.528 ops/s
Iteration  27: 169196.629 ops/s
Iteration  28: 169269.199 ops/s
Iteration  29: 168592.326 ops/s
Iteration  30: 168808.973 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_475._Benchmark.benchmark_Cluster_475":
  168518.496 ±(99.9%) 303.705 ops/s [Average]
  (min, avg, max) = (167709.531, 168518.496, 169269.199), stdev = 454.571
  CI (99.9%): [168214.791, 168822.201] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_475._Benchmark.benchmark_Cluster_475  thrpt   30  168518.496 ± 303.705  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_476._Benchmark.benchmark_Cluster_476$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_476._Benchmark.benchmark_Cluster_476

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 149254.928 ops/s
# Warmup Iteration   2: 161821.599 ops/s
# Warmup Iteration   3: 162084.128 ops/s
# Warmup Iteration   4: 161485.939 ops/s
# Warmup Iteration   5: 211080.199 ops/s
# Warmup Iteration   6: 212038.176 ops/s
# Warmup Iteration   7: 211448.518 ops/s
# Warmup Iteration   8: 211372.580 ops/s
# Warmup Iteration   9: 211484.589 ops/s
# Warmup Iteration  10: 211093.560 ops/s
# Warmup Iteration  11: 208682.189 ops/s
# Warmup Iteration  12: 211504.983 ops/s
# Warmup Iteration  13: 211767.110 ops/s
# Warmup Iteration  14: 210409.625 ops/s
# Warmup Iteration  15: 211113.533 ops/s
# Warmup Iteration  16: 211502.852 ops/s
# Warmup Iteration  17: 220390.008 ops/s
# Warmup Iteration  18: 221831.841 ops/s
# Warmup Iteration  19: 221145.860 ops/s
# Warmup Iteration  20: 220819.990 ops/s
# Warmup Iteration  21: 220263.817 ops/s
# Warmup Iteration  22: 220510.797 ops/s
# Warmup Iteration  23: 167490.679 ops/s
# Warmup Iteration  24: 206118.123 ops/s
# Warmup Iteration  25: 220368.506 ops/s
# Warmup Iteration  26: 220213.698 ops/s
# Warmup Iteration  27: 221037.038 ops/s
# Warmup Iteration  28: 218753.447 ops/s
# Warmup Iteration  29: 220868.090 ops/s
# Warmup Iteration  30: 220303.551 ops/s
Iteration   1: 221258.301 ops/s
Iteration   2: 221214.010 ops/s
Iteration   3: 220457.210 ops/s
Iteration   4: 220997.780 ops/s
Iteration   5: 221550.064 ops/s
Iteration   6: 221405.259 ops/s
Iteration   7: 220287.090 ops/s
Iteration   8: 220565.587 ops/s
Iteration   9: 220564.290 ops/s
Iteration  10: 220786.360 ops/s
Iteration  11: 220617.469 ops/s
Iteration  12: 220739.889 ops/s
Iteration  13: 220814.479 ops/s
Iteration  14: 220679.740 ops/s
Iteration  15: 221073.387 ops/s
Iteration  16: 221167.412 ops/s
Iteration  17: 221242.236 ops/s
Iteration  18: 221120.757 ops/s
Iteration  19: 221308.199 ops/s
Iteration  20: 220303.308 ops/s
Iteration  21: 219973.657 ops/s
Iteration  22: 220933.094 ops/s
Iteration  23: 221437.079 ops/s
Iteration  24: 221133.025 ops/s
Iteration  25: 221518.105 ops/s
Iteration  26: 221252.864 ops/s
Iteration  27: 221611.331 ops/s
Iteration  28: 220405.867 ops/s
Iteration  29: 220646.466 ops/s
Iteration  30: 221308.793 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_476._Benchmark.benchmark_Cluster_476":
  220945.770 ±(99.9%) 285.679 ops/s [Average]
  (min, avg, max) = (219973.657, 220945.770, 221611.331), stdev = 427.591
  CI (99.9%): [220660.091, 221231.450] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_476._Benchmark.benchmark_Cluster_476  thrpt   30  220945.770 ± 285.679  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_477._Benchmark.benchmark_Cluster_477$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_477._Benchmark.benchmark_Cluster_477

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 58921.455 ops/s
# Warmup Iteration   2: 91979.213 ops/s
# Warmup Iteration   3: 133150.813 ops/s
# Warmup Iteration   4: 166522.395 ops/s
# Warmup Iteration   5: 165290.020 ops/s
# Warmup Iteration   6: 166935.285 ops/s
# Warmup Iteration   7: 167211.921 ops/s
# Warmup Iteration   8: 166720.505 ops/s
# Warmup Iteration   9: 165944.141 ops/s
# Warmup Iteration  10: 125135.341 ops/s
# Warmup Iteration  11: 157264.253 ops/s
# Warmup Iteration  12: 166610.997 ops/s
# Warmup Iteration  13: 166931.984 ops/s
# Warmup Iteration  14: 166896.034 ops/s
# Warmup Iteration  15: 166891.118 ops/s
# Warmup Iteration  16: 167275.308 ops/s
# Warmup Iteration  17: 167197.722 ops/s
# Warmup Iteration  18: 166277.376 ops/s
# Warmup Iteration  19: 166954.659 ops/s
# Warmup Iteration  20: 167113.054 ops/s
# Warmup Iteration  21: 166768.239 ops/s
# Warmup Iteration  22: 167013.662 ops/s
# Warmup Iteration  23: 166781.411 ops/s
# Warmup Iteration  24: 166969.707 ops/s
# Warmup Iteration  25: 166801.621 ops/s
# Warmup Iteration  26: 166847.049 ops/s
# Warmup Iteration  27: 166465.945 ops/s
# Warmup Iteration  28: 166656.503 ops/s
# Warmup Iteration  29: 166195.711 ops/s
# Warmup Iteration  30: 167219.047 ops/s
Iteration   1: 166578.615 ops/s
Iteration   2: 166671.550 ops/s
Iteration   3: 167179.230 ops/s
Iteration   4: 167376.003 ops/s
Iteration   5: 166225.121 ops/s
Iteration   6: 166737.724 ops/s
Iteration   7: 166150.251 ops/s
Iteration   8: 167099.479 ops/s
Iteration   9: 167622.380 ops/s
Iteration  10: 167135.412 ops/s
Iteration  11: 166771.954 ops/s
Iteration  12: 167554.697 ops/s
Iteration  13: 167278.968 ops/s
Iteration  14: 167326.134 ops/s
Iteration  15: 167389.110 ops/s
Iteration  16: 167643.185 ops/s
Iteration  17: 166911.452 ops/s
Iteration  18: 167266.887 ops/s
Iteration  19: 167139.802 ops/s
Iteration  20: 166883.948 ops/s
Iteration  21: 167033.494 ops/s
Iteration  22: 166445.898 ops/s
Iteration  23: 167181.409 ops/s
Iteration  24: 167054.942 ops/s
Iteration  25: 167387.888 ops/s
Iteration  26: 166989.847 ops/s
Iteration  27: 166348.113 ops/s
Iteration  28: 166791.752 ops/s
Iteration  29: 167220.643 ops/s
Iteration  30: 167417.420 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_477._Benchmark.benchmark_Cluster_477":
  167027.110 ±(99.9%) 267.554 ops/s [Average]
  (min, avg, max) = (166150.251, 167027.110, 167643.185), stdev = 400.462
  CI (99.9%): [166759.556, 167294.664] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_477._Benchmark.benchmark_Cluster_477  thrpt   30  167027.110 ± 267.554  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_478._Benchmark.benchmark_Cluster_478$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_478._Benchmark.benchmark_Cluster_478

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65624.393 ops/s
# Warmup Iteration   2: 89237.312 ops/s
# Warmup Iteration   3: 91716.030 ops/s
# Warmup Iteration   4: 141583.215 ops/s
# Warmup Iteration   5: 140891.045 ops/s
# Warmup Iteration   6: 140008.024 ops/s
# Warmup Iteration   7: 139265.940 ops/s
# Warmup Iteration   8: 141295.163 ops/s
# Warmup Iteration   9: 140634.789 ops/s
# Warmup Iteration  10: 141399.919 ops/s
# Warmup Iteration  11: 141824.692 ops/s
# Warmup Iteration  12: 141227.645 ops/s
# Warmup Iteration  13: 140218.948 ops/s
# Warmup Iteration  14: 104563.933 ops/s
# Warmup Iteration  15: 129160.190 ops/s
# Warmup Iteration  16: 141027.021 ops/s
# Warmup Iteration  17: 144807.684 ops/s
# Warmup Iteration  18: 144260.995 ops/s
# Warmup Iteration  19: 144261.565 ops/s
# Warmup Iteration  20: 145005.352 ops/s
# Warmup Iteration  21: 144124.314 ops/s
# Warmup Iteration  22: 144928.749 ops/s
# Warmup Iteration  23: 145040.860 ops/s
# Warmup Iteration  24: 144179.764 ops/s
# Warmup Iteration  25: 145071.848 ops/s
# Warmup Iteration  26: 144548.654 ops/s
# Warmup Iteration  27: 145132.577 ops/s
# Warmup Iteration  28: 144285.499 ops/s
# Warmup Iteration  29: 144871.437 ops/s
# Warmup Iteration  30: 144444.862 ops/s
Iteration   1: 144127.227 ops/s
Iteration   2: 144601.617 ops/s
Iteration   3: 143951.686 ops/s
Iteration   4: 144886.060 ops/s
Iteration   5: 144661.389 ops/s
Iteration   6: 145127.538 ops/s
Iteration   7: 146263.022 ops/s
Iteration   8: 145157.151 ops/s
Iteration   9: 144705.216 ops/s
Iteration  10: 145216.354 ops/s
Iteration  11: 144736.764 ops/s
Iteration  12: 143862.183 ops/s
Iteration  13: 144620.306 ops/s
Iteration  14: 143657.385 ops/s
Iteration  15: 144948.089 ops/s
Iteration  16: 145178.914 ops/s
Iteration  17: 145165.080 ops/s
Iteration  18: 145749.497 ops/s
Iteration  19: 144929.028 ops/s
Iteration  20: 144845.799 ops/s
Iteration  21: 144533.004 ops/s
Iteration  22: 145143.203 ops/s
Iteration  23: 144400.908 ops/s
Iteration  24: 144932.550 ops/s
Iteration  25: 145304.505 ops/s
Iteration  26: 144355.739 ops/s
Iteration  27: 144298.306 ops/s
Iteration  28: 144106.868 ops/s
Iteration  29: 142962.022 ops/s
Iteration  30: 144778.463 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_478._Benchmark.benchmark_Cluster_478":
  144706.862 ±(99.9%) 428.064 ops/s [Average]
  (min, avg, max) = (142962.022, 144706.862, 146263.022), stdev = 640.706
  CI (99.9%): [144278.799, 145134.926] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_478._Benchmark.benchmark_Cluster_478  thrpt   30  144706.862 ± 428.064  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_479._Benchmark.benchmark_Cluster_479$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_479._Benchmark.benchmark_Cluster_479

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 53529.795 ops/s
# Warmup Iteration   2: 89136.639 ops/s
# Warmup Iteration   3: 90423.619 ops/s
# Warmup Iteration   4: 145698.280 ops/s
# Warmup Iteration   5: 144845.326 ops/s
# Warmup Iteration   6: 146913.145 ops/s
# Warmup Iteration   7: 145234.840 ops/s
# Warmup Iteration   8: 146719.120 ops/s
# Warmup Iteration   9: 147064.007 ops/s
# Warmup Iteration  10: 146712.295 ops/s
# Warmup Iteration  11: 147634.801 ops/s
# Warmup Iteration  12: 146485.745 ops/s
# Warmup Iteration  13: 133094.252 ops/s
# Warmup Iteration  14: 110443.042 ops/s
# Warmup Iteration  15: 147405.994 ops/s
# Warmup Iteration  16: 146742.477 ops/s
# Warmup Iteration  17: 150228.239 ops/s
# Warmup Iteration  18: 149751.405 ops/s
# Warmup Iteration  19: 149656.353 ops/s
# Warmup Iteration  20: 149502.439 ops/s
# Warmup Iteration  21: 149583.927 ops/s
# Warmup Iteration  22: 149443.984 ops/s
# Warmup Iteration  23: 149198.545 ops/s
# Warmup Iteration  24: 150002.247 ops/s
# Warmup Iteration  25: 149842.316 ops/s
# Warmup Iteration  26: 149838.632 ops/s
# Warmup Iteration  27: 149822.492 ops/s
# Warmup Iteration  28: 149939.672 ops/s
# Warmup Iteration  29: 148794.109 ops/s
# Warmup Iteration  30: 149960.855 ops/s
Iteration   1: 149665.617 ops/s
Iteration   2: 149017.815 ops/s
Iteration   3: 149439.683 ops/s
Iteration   4: 149744.640 ops/s
Iteration   5: 150172.134 ops/s
Iteration   6: 149705.161 ops/s
Iteration   7: 149935.464 ops/s
Iteration   8: 149645.524 ops/s
Iteration   9: 149794.307 ops/s
Iteration  10: 149662.440 ops/s
Iteration  11: 149580.989 ops/s
Iteration  12: 150277.316 ops/s
Iteration  13: 149790.351 ops/s
Iteration  14: 149679.165 ops/s
Iteration  15: 149748.556 ops/s
Iteration  16: 150155.163 ops/s
Iteration  17: 150253.588 ops/s
Iteration  18: 149123.033 ops/s
Iteration  19: 149556.547 ops/s
Iteration  20: 149838.155 ops/s
Iteration  21: 149652.676 ops/s
Iteration  22: 150217.598 ops/s
Iteration  23: 149755.761 ops/s
Iteration  24: 149434.213 ops/s
Iteration  25: 149857.849 ops/s
Iteration  26: 149769.682 ops/s
Iteration  27: 149805.015 ops/s
Iteration  28: 149588.315 ops/s
Iteration  29: 149757.635 ops/s
Iteration  30: 150312.356 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_479._Benchmark.benchmark_Cluster_479":
  149764.558 ±(99.9%) 204.727 ops/s [Average]
  (min, avg, max) = (149017.815, 149764.558, 150312.356), stdev = 306.426
  CI (99.9%): [149559.831, 149969.286] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_479._Benchmark.benchmark_Cluster_479  thrpt   30  149764.558 ± 204.727  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_48._Benchmark.benchmark_Cluster_48$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_48._Benchmark.benchmark_Cluster_48

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 104210.421 ops/s
# Warmup Iteration   2: 114114.267 ops/s
# Warmup Iteration   3: 113481.475 ops/s
# Warmup Iteration   4: 113525.616 ops/s
# Warmup Iteration   5: 131472.405 ops/s
# Warmup Iteration   6: 148628.867 ops/s
# Warmup Iteration   7: 148299.505 ops/s
# Warmup Iteration   8: 148293.593 ops/s
# Warmup Iteration   9: 147088.994 ops/s
# Warmup Iteration  10: 148477.133 ops/s
# Warmup Iteration  11: 147810.550 ops/s
# Warmup Iteration  12: 146677.557 ops/s
# Warmup Iteration  13: 147631.032 ops/s
# Warmup Iteration  14: 148450.836 ops/s
# Warmup Iteration  15: 148177.870 ops/s
# Warmup Iteration  16: 148572.952 ops/s
# Warmup Iteration  17: 154822.232 ops/s
# Warmup Iteration  18: 155164.539 ops/s
# Warmup Iteration  19: 154971.657 ops/s
# Warmup Iteration  20: 155035.718 ops/s
# Warmup Iteration  21: 154945.787 ops/s
# Warmup Iteration  22: 154884.679 ops/s
# Warmup Iteration  23: 154725.932 ops/s
# Warmup Iteration  24: 154595.304 ops/s
# Warmup Iteration  25: 129983.241 ops/s
# Warmup Iteration  26: 128697.574 ops/s
# Warmup Iteration  27: 155339.030 ops/s
# Warmup Iteration  28: 155512.223 ops/s
# Warmup Iteration  29: 155316.167 ops/s
# Warmup Iteration  30: 155703.466 ops/s
Iteration   1: 155402.376 ops/s
Iteration   2: 156040.193 ops/s
Iteration   3: 155902.090 ops/s
Iteration   4: 155716.878 ops/s
Iteration   5: 154873.626 ops/s
Iteration   6: 155371.336 ops/s
Iteration   7: 154905.652 ops/s
Iteration   8: 155350.153 ops/s
Iteration   9: 154739.404 ops/s
Iteration  10: 155083.726 ops/s
Iteration  11: 155453.952 ops/s
Iteration  12: 154615.090 ops/s
Iteration  13: 155531.032 ops/s
Iteration  14: 155245.799 ops/s
Iteration  15: 154681.229 ops/s
Iteration  16: 155143.791 ops/s
Iteration  17: 154970.834 ops/s
Iteration  18: 155335.283 ops/s
Iteration  19: 155311.228 ops/s
Iteration  20: 155413.145 ops/s
Iteration  21: 155740.408 ops/s
Iteration  22: 155570.696 ops/s
Iteration  23: 155634.702 ops/s
Iteration  24: 155537.855 ops/s
Iteration  25: 155545.461 ops/s
Iteration  26: 155182.830 ops/s
Iteration  27: 155377.638 ops/s
Iteration  28: 155617.682 ops/s
Iteration  29: 155517.926 ops/s
Iteration  30: 155769.895 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_48._Benchmark.benchmark_Cluster_48":
  155352.730 ±(99.9%) 238.037 ops/s [Average]
  (min, avg, max) = (154615.090, 155352.730, 156040.193), stdev = 356.282
  CI (99.9%): [155114.693, 155590.767] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_48._Benchmark.benchmark_Cluster_48  thrpt   30  155352.730 ± 238.037  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_480._Benchmark.benchmark_Cluster_480$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_480._Benchmark.benchmark_Cluster_480

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 72726.771 ops/s
# Warmup Iteration   2: 95926.351 ops/s
# Warmup Iteration   3: 187305.451 ops/s
# Warmup Iteration   4: 189898.692 ops/s
# Warmup Iteration   5: 193360.069 ops/s
# Warmup Iteration   6: 193185.334 ops/s
# Warmup Iteration   7: 193673.656 ops/s
# Warmup Iteration   8: 159150.834 ops/s
# Warmup Iteration   9: 167638.530 ops/s
# Warmup Iteration  10: 192669.178 ops/s
# Warmup Iteration  11: 192958.571 ops/s
# Warmup Iteration  12: 193069.052 ops/s
# Warmup Iteration  13: 193240.367 ops/s
# Warmup Iteration  14: 192938.397 ops/s
# Warmup Iteration  15: 192835.126 ops/s
# Warmup Iteration  16: 193480.824 ops/s
# Warmup Iteration  17: 193000.789 ops/s
# Warmup Iteration  18: 192483.123 ops/s
# Warmup Iteration  19: 193090.313 ops/s
# Warmup Iteration  20: 193304.999 ops/s
# Warmup Iteration  21: 193018.734 ops/s
# Warmup Iteration  22: 193064.754 ops/s
# Warmup Iteration  23: 193019.331 ops/s
# Warmup Iteration  24: 192517.958 ops/s
# Warmup Iteration  25: 193581.637 ops/s
# Warmup Iteration  26: 193141.711 ops/s
# Warmup Iteration  27: 193519.097 ops/s
# Warmup Iteration  28: 192616.115 ops/s
# Warmup Iteration  29: 192495.182 ops/s
# Warmup Iteration  30: 192831.363 ops/s
Iteration   1: 192804.712 ops/s
Iteration   2: 191753.856 ops/s
Iteration   3: 192737.394 ops/s
Iteration   4: 193092.820 ops/s
Iteration   5: 192719.953 ops/s
Iteration   6: 193291.655 ops/s
Iteration   7: 192600.059 ops/s
Iteration   8: 193452.728 ops/s
Iteration   9: 192795.410 ops/s
Iteration  10: 192902.523 ops/s
Iteration  11: 193266.768 ops/s
Iteration  12: 193187.795 ops/s
Iteration  13: 192833.569 ops/s
Iteration  14: 192454.906 ops/s
Iteration  15: 192687.999 ops/s
Iteration  16: 193585.145 ops/s
Iteration  17: 192887.089 ops/s
Iteration  18: 193302.966 ops/s
Iteration  19: 193113.985 ops/s
Iteration  20: 192953.469 ops/s
Iteration  21: 192450.185 ops/s
Iteration  22: 191323.217 ops/s
Iteration  23: 193351.034 ops/s
Iteration  24: 192793.307 ops/s
Iteration  25: 191183.330 ops/s
Iteration  26: 193449.702 ops/s
Iteration  27: 193108.894 ops/s
Iteration  28: 192937.220 ops/s
Iteration  29: 193393.010 ops/s
Iteration  30: 192502.412 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_480._Benchmark.benchmark_Cluster_480":
  192830.570 ±(99.9%) 383.963 ops/s [Average]
  (min, avg, max) = (191183.330, 192830.570, 193585.145), stdev = 574.699
  CI (99.9%): [192446.607, 193214.534] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_480._Benchmark.benchmark_Cluster_480  thrpt   30  192830.570 ± 383.963  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_481._Benchmark.benchmark_Cluster_481$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_481._Benchmark.benchmark_Cluster_481

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60232.301 ops/s
# Warmup Iteration   2: 91241.511 ops/s
# Warmup Iteration   3: 160669.259 ops/s
# Warmup Iteration   4: 185193.796 ops/s
# Warmup Iteration   5: 185226.337 ops/s
# Warmup Iteration   6: 185712.354 ops/s
# Warmup Iteration   7: 185111.996 ops/s
# Warmup Iteration   8: 181633.771 ops/s
# Warmup Iteration   9: 130839.253 ops/s
# Warmup Iteration  10: 185975.015 ops/s
# Warmup Iteration  11: 186359.159 ops/s
# Warmup Iteration  12: 186372.898 ops/s
# Warmup Iteration  13: 186425.695 ops/s
# Warmup Iteration  14: 186440.843 ops/s
# Warmup Iteration  15: 186546.214 ops/s
# Warmup Iteration  16: 186241.800 ops/s
# Warmup Iteration  17: 185398.900 ops/s
# Warmup Iteration  18: 184807.284 ops/s
# Warmup Iteration  19: 185672.132 ops/s
# Warmup Iteration  20: 186253.858 ops/s
# Warmup Iteration  21: 185962.711 ops/s
# Warmup Iteration  22: 185930.252 ops/s
# Warmup Iteration  23: 186251.313 ops/s
# Warmup Iteration  24: 185817.201 ops/s
# Warmup Iteration  25: 185897.695 ops/s
# Warmup Iteration  26: 186072.700 ops/s
# Warmup Iteration  27: 186309.056 ops/s
# Warmup Iteration  28: 185990.548 ops/s
# Warmup Iteration  29: 185911.492 ops/s
# Warmup Iteration  30: 185918.992 ops/s
Iteration   1: 185766.908 ops/s
Iteration   2: 185874.250 ops/s
Iteration   3: 185693.356 ops/s
Iteration   4: 185042.713 ops/s
Iteration   5: 186171.570 ops/s
Iteration   6: 185725.584 ops/s
Iteration   7: 185774.895 ops/s
Iteration   8: 186299.495 ops/s
Iteration   9: 185888.554 ops/s
Iteration  10: 185796.856 ops/s
Iteration  11: 185618.668 ops/s
Iteration  12: 186322.297 ops/s
Iteration  13: 185971.942 ops/s
Iteration  14: 185634.132 ops/s
Iteration  15: 186610.302 ops/s
Iteration  16: 185660.186 ops/s
Iteration  17: 186132.119 ops/s
Iteration  18: 186129.925 ops/s
Iteration  19: 185746.306 ops/s
Iteration  20: 185722.416 ops/s
Iteration  21: 185497.383 ops/s
Iteration  22: 185153.342 ops/s
Iteration  23: 185923.100 ops/s
Iteration  24: 185812.315 ops/s
Iteration  25: 185957.336 ops/s
Iteration  26: 185856.271 ops/s
Iteration  27: 185120.892 ops/s
Iteration  28: 185578.215 ops/s
Iteration  29: 185427.164 ops/s
Iteration  30: 186091.025 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_481._Benchmark.benchmark_Cluster_481":
  185799.984 ±(99.9%) 233.660 ops/s [Average]
  (min, avg, max) = (185042.713, 185799.984, 186610.302), stdev = 349.731
  CI (99.9%): [185566.324, 186033.644] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_481._Benchmark.benchmark_Cluster_481  thrpt   30  185799.984 ± 233.660  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_482._Benchmark.benchmark_Cluster_482$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_482._Benchmark.benchmark_Cluster_482

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 70431.181 ops/s
# Warmup Iteration   2: 80697.588 ops/s
# Warmup Iteration   3: 91542.929 ops/s
# Warmup Iteration   4: 129104.444 ops/s
# Warmup Iteration   5: 129417.976 ops/s
# Warmup Iteration   6: 129572.111 ops/s
# Warmup Iteration   7: 128248.243 ops/s
# Warmup Iteration   8: 129418.295 ops/s
# Warmup Iteration   9: 129713.784 ops/s
# Warmup Iteration  10: 129617.886 ops/s
# Warmup Iteration  11: 129361.595 ops/s
# Warmup Iteration  12: 129017.965 ops/s
# Warmup Iteration  13: 127273.511 ops/s
# Warmup Iteration  14: 89438.973 ops/s
# Warmup Iteration  15: 129152.097 ops/s
# Warmup Iteration  16: 128607.392 ops/s
# Warmup Iteration  17: 135373.231 ops/s
# Warmup Iteration  18: 135439.428 ops/s
# Warmup Iteration  19: 135029.937 ops/s
# Warmup Iteration  20: 134820.441 ops/s
# Warmup Iteration  21: 135221.936 ops/s
# Warmup Iteration  22: 134637.484 ops/s
# Warmup Iteration  23: 135036.827 ops/s
# Warmup Iteration  24: 135220.433 ops/s
# Warmup Iteration  25: 134720.184 ops/s
# Warmup Iteration  26: 134499.309 ops/s
# Warmup Iteration  27: 134631.571 ops/s
# Warmup Iteration  28: 134867.739 ops/s
# Warmup Iteration  29: 134836.309 ops/s
# Warmup Iteration  30: 134420.406 ops/s
Iteration   1: 134745.081 ops/s
Iteration   2: 134836.117 ops/s
Iteration   3: 134993.642 ops/s
Iteration   4: 134672.981 ops/s
Iteration   5: 135077.393 ops/s
Iteration   6: 135045.989 ops/s
Iteration   7: 134925.249 ops/s
Iteration   8: 134794.610 ops/s
Iteration   9: 134573.745 ops/s
Iteration  10: 134691.952 ops/s
Iteration  11: 135043.594 ops/s
Iteration  12: 134500.353 ops/s
Iteration  13: 134871.119 ops/s
Iteration  14: 134437.422 ops/s
Iteration  15: 135445.209 ops/s
Iteration  16: 135296.436 ops/s
Iteration  17: 134737.114 ops/s
Iteration  18: 135563.952 ops/s
Iteration  19: 134683.772 ops/s
Iteration  20: 134765.763 ops/s
Iteration  21: 135008.648 ops/s
Iteration  22: 134925.111 ops/s
Iteration  23: 135295.423 ops/s
Iteration  24: 135171.570 ops/s
Iteration  25: 134995.058 ops/s
Iteration  26: 134596.821 ops/s
Iteration  27: 135354.533 ops/s
Iteration  28: 134795.283 ops/s
Iteration  29: 135222.467 ops/s
Iteration  30: 134912.471 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_482._Benchmark.benchmark_Cluster_482":
  134932.629 ±(99.9%) 188.873 ops/s [Average]
  (min, avg, max) = (134437.422, 134932.629, 135563.952), stdev = 282.697
  CI (99.9%): [134743.756, 135121.503] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_482._Benchmark.benchmark_Cluster_482  thrpt   30  134932.629 ± 188.873  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_483._Benchmark.benchmark_Cluster_483$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_483._Benchmark.benchmark_Cluster_483

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51415.777 ops/s
# Warmup Iteration   2: 75894.224 ops/s
# Warmup Iteration   3: 146020.775 ops/s
# Warmup Iteration   4: 160406.141 ops/s
# Warmup Iteration   5: 161874.979 ops/s
# Warmup Iteration   6: 161806.406 ops/s
# Warmup Iteration   7: 161826.903 ops/s
# Warmup Iteration   8: 115561.622 ops/s
# Warmup Iteration   9: 156912.556 ops/s
# Warmup Iteration  10: 162750.106 ops/s
# Warmup Iteration  11: 162560.535 ops/s
# Warmup Iteration  12: 162505.924 ops/s
# Warmup Iteration  13: 162722.755 ops/s
# Warmup Iteration  14: 161727.633 ops/s
# Warmup Iteration  15: 162540.767 ops/s
# Warmup Iteration  16: 162612.246 ops/s
# Warmup Iteration  17: 162581.842 ops/s
# Warmup Iteration  18: 161775.116 ops/s
# Warmup Iteration  19: 162129.883 ops/s
# Warmup Iteration  20: 162010.980 ops/s
# Warmup Iteration  21: 162449.990 ops/s
# Warmup Iteration  22: 161693.220 ops/s
# Warmup Iteration  23: 162418.311 ops/s
# Warmup Iteration  24: 162143.866 ops/s
# Warmup Iteration  25: 162702.891 ops/s
# Warmup Iteration  26: 162727.205 ops/s
# Warmup Iteration  27: 161832.811 ops/s
# Warmup Iteration  28: 161954.483 ops/s
# Warmup Iteration  29: 161916.857 ops/s
# Warmup Iteration  30: 161976.515 ops/s
Iteration   1: 162246.208 ops/s
Iteration   2: 162367.015 ops/s
Iteration   3: 162291.734 ops/s
Iteration   4: 161558.381 ops/s
Iteration   5: 163025.603 ops/s
Iteration   6: 162781.375 ops/s
Iteration   7: 162776.491 ops/s
Iteration   8: 162510.325 ops/s
Iteration   9: 162544.667 ops/s
Iteration  10: 162267.300 ops/s
Iteration  11: 161936.044 ops/s
Iteration  12: 162421.390 ops/s
Iteration  13: 162088.901 ops/s
Iteration  14: 162317.266 ops/s
Iteration  15: 161739.288 ops/s
Iteration  16: 161053.996 ops/s
Iteration  17: 162266.781 ops/s
Iteration  18: 161677.754 ops/s
Iteration  19: 162175.985 ops/s
Iteration  20: 161924.337 ops/s
Iteration  21: 162198.207 ops/s
Iteration  22: 161837.822 ops/s
Iteration  23: 161108.741 ops/s
Iteration  24: 161945.511 ops/s
Iteration  25: 161155.392 ops/s
Iteration  26: 162414.518 ops/s
Iteration  27: 162708.186 ops/s
Iteration  28: 161929.693 ops/s
Iteration  29: 162523.020 ops/s
Iteration  30: 161524.917 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_483._Benchmark.benchmark_Cluster_483":
  162110.562 ±(99.9%) 333.394 ops/s [Average]
  (min, avg, max) = (161053.996, 162110.562, 163025.603), stdev = 499.008
  CI (99.9%): [161777.168, 162443.955] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_483._Benchmark.benchmark_Cluster_483  thrpt   30  162110.562 ± 333.394  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_484._Benchmark.benchmark_Cluster_484$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_484._Benchmark.benchmark_Cluster_484

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67303.804 ops/s
# Warmup Iteration   2: 91798.798 ops/s
# Warmup Iteration   3: 148037.923 ops/s
# Warmup Iteration   4: 173775.502 ops/s
# Warmup Iteration   5: 172009.511 ops/s
# Warmup Iteration   6: 173918.020 ops/s
# Warmup Iteration   7: 173544.642 ops/s
# Warmup Iteration   8: 173737.146 ops/s
# Warmup Iteration   9: 163059.831 ops/s
# Warmup Iteration  10: 130850.846 ops/s
# Warmup Iteration  11: 174402.072 ops/s
# Warmup Iteration  12: 173795.764 ops/s
# Warmup Iteration  13: 173633.558 ops/s
# Warmup Iteration  14: 173681.056 ops/s
# Warmup Iteration  15: 174460.600 ops/s
# Warmup Iteration  16: 174279.403 ops/s
# Warmup Iteration  17: 173557.627 ops/s
# Warmup Iteration  18: 173655.768 ops/s
# Warmup Iteration  19: 173492.748 ops/s
# Warmup Iteration  20: 173619.870 ops/s
# Warmup Iteration  21: 174249.465 ops/s
# Warmup Iteration  22: 173467.643 ops/s
# Warmup Iteration  23: 173701.273 ops/s
# Warmup Iteration  24: 173696.980 ops/s
# Warmup Iteration  25: 174211.055 ops/s
# Warmup Iteration  26: 174022.375 ops/s
# Warmup Iteration  27: 173922.881 ops/s
# Warmup Iteration  28: 173957.091 ops/s
# Warmup Iteration  29: 174451.037 ops/s
# Warmup Iteration  30: 173944.184 ops/s
Iteration   1: 173561.109 ops/s
Iteration   2: 174595.746 ops/s
Iteration   3: 174311.643 ops/s
Iteration   4: 174469.619 ops/s
Iteration   5: 174071.235 ops/s
Iteration   6: 174201.747 ops/s
Iteration   7: 174113.917 ops/s
Iteration   8: 174782.749 ops/s
Iteration   9: 174343.677 ops/s
Iteration  10: 174314.235 ops/s
Iteration  11: 174375.099 ops/s
Iteration  12: 174253.689 ops/s
Iteration  13: 174023.124 ops/s
Iteration  14: 174254.171 ops/s
Iteration  15: 173786.254 ops/s
Iteration  16: 174876.630 ops/s
Iteration  17: 174749.913 ops/s
Iteration  18: 174300.451 ops/s
Iteration  19: 174334.747 ops/s
Iteration  20: 174306.300 ops/s
Iteration  21: 174394.648 ops/s
Iteration  22: 174258.632 ops/s
Iteration  23: 173969.798 ops/s
Iteration  24: 173995.523 ops/s
Iteration  25: 173961.287 ops/s
Iteration  26: 173514.889 ops/s
Iteration  27: 173848.975 ops/s
Iteration  28: 174240.880 ops/s
Iteration  29: 173894.860 ops/s
Iteration  30: 173942.817 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_484._Benchmark.benchmark_Cluster_484":
  174201.612 ±(99.9%) 216.049 ops/s [Average]
  (min, avg, max) = (173514.889, 174201.612, 174876.630), stdev = 323.372
  CI (99.9%): [173985.563, 174417.661] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_484._Benchmark.benchmark_Cluster_484  thrpt   30  174201.612 ± 216.049  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_485._Benchmark.benchmark_Cluster_485$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_485._Benchmark.benchmark_Cluster_485

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 27226.471 ops/s
# Warmup Iteration   2: 47637.729 ops/s
# Warmup Iteration   3: 82304.132 ops/s
# Warmup Iteration   4: 100283.551 ops/s
# Warmup Iteration   5: 99272.343 ops/s
# Warmup Iteration   6: 99605.123 ops/s
# Warmup Iteration   7: 99783.945 ops/s
# Warmup Iteration   8: 97694.552 ops/s
# Warmup Iteration   9: 68207.839 ops/s
# Warmup Iteration  10: 98398.938 ops/s
# Warmup Iteration  11: 98099.389 ops/s
# Warmup Iteration  12: 98081.329 ops/s
# Warmup Iteration  13: 98571.038 ops/s
# Warmup Iteration  14: 98223.677 ops/s
# Warmup Iteration  15: 98041.865 ops/s
# Warmup Iteration  16: 99251.928 ops/s
# Warmup Iteration  17: 99317.904 ops/s
# Warmup Iteration  18: 98685.164 ops/s
# Warmup Iteration  19: 98767.180 ops/s
# Warmup Iteration  20: 99107.285 ops/s
# Warmup Iteration  21: 98690.493 ops/s
# Warmup Iteration  22: 98308.874 ops/s
# Warmup Iteration  23: 97403.277 ops/s
# Warmup Iteration  24: 97506.873 ops/s
# Warmup Iteration  25: 97416.910 ops/s
# Warmup Iteration  26: 97062.002 ops/s
# Warmup Iteration  27: 98871.899 ops/s
# Warmup Iteration  28: 98972.618 ops/s
# Warmup Iteration  29: 99687.712 ops/s
# Warmup Iteration  30: 99107.613 ops/s
Iteration   1: 98630.545 ops/s
Iteration   2: 97008.834 ops/s
Iteration   3: 96815.632 ops/s
Iteration   4: 98246.369 ops/s
Iteration   5: 99476.712 ops/s
Iteration   6: 96763.199 ops/s
Iteration   7: 98927.353 ops/s
Iteration   8: 98023.820 ops/s
Iteration   9: 97301.550 ops/s
Iteration  10: 97301.708 ops/s
Iteration  11: 98236.074 ops/s
Iteration  12: 97351.129 ops/s
Iteration  13: 99428.329 ops/s
Iteration  14: 99404.161 ops/s
Iteration  15: 99796.858 ops/s
Iteration  16: 99464.220 ops/s
Iteration  17: 98672.575 ops/s
Iteration  18: 99361.583 ops/s
Iteration  19: 98571.502 ops/s
Iteration  20: 99212.363 ops/s
Iteration  21: 98715.686 ops/s
Iteration  22: 98880.171 ops/s
Iteration  23: 97982.969 ops/s
Iteration  24: 97439.880 ops/s
Iteration  25: 97344.664 ops/s
Iteration  26: 98887.537 ops/s
Iteration  27: 98201.795 ops/s
Iteration  28: 98042.375 ops/s
Iteration  29: 98031.845 ops/s
Iteration  30: 98551.177 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_485._Benchmark.benchmark_Cluster_485":
  98335.754 ±(99.9%) 583.730 ops/s [Average]
  (min, avg, max) = (96763.199, 98335.754, 99796.858), stdev = 873.700
  CI (99.9%): [97752.024, 98919.484] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score     Error  Units
Cluster_485._Benchmark.benchmark_Cluster_485  thrpt   30  98335.754 ± 583.730  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_486._Benchmark.benchmark_Cluster_486$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_486._Benchmark.benchmark_Cluster_486

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 59547.395 ops/s
# Warmup Iteration   2: 80202.486 ops/s
# Warmup Iteration   3: 143928.307 ops/s
# Warmup Iteration   4: 157436.835 ops/s
# Warmup Iteration   5: 155532.152 ops/s
# Warmup Iteration   6: 157134.420 ops/s
# Warmup Iteration   7: 157454.055 ops/s
# Warmup Iteration   8: 157769.215 ops/s
# Warmup Iteration   9: 109239.660 ops/s
# Warmup Iteration  10: 156916.346 ops/s
# Warmup Iteration  11: 157035.947 ops/s
# Warmup Iteration  12: 156860.569 ops/s
# Warmup Iteration  13: 156617.168 ops/s
# Warmup Iteration  14: 157157.054 ops/s
# Warmup Iteration  15: 157280.334 ops/s
# Warmup Iteration  16: 157314.257 ops/s
# Warmup Iteration  17: 157745.693 ops/s
# Warmup Iteration  18: 157273.771 ops/s
# Warmup Iteration  19: 157787.593 ops/s
# Warmup Iteration  20: 157286.662 ops/s
# Warmup Iteration  21: 157183.780 ops/s
# Warmup Iteration  22: 156814.243 ops/s
# Warmup Iteration  23: 157717.715 ops/s
# Warmup Iteration  24: 157807.896 ops/s
# Warmup Iteration  25: 157692.499 ops/s
# Warmup Iteration  26: 157636.721 ops/s
# Warmup Iteration  27: 158134.552 ops/s
# Warmup Iteration  28: 157964.207 ops/s
# Warmup Iteration  29: 158057.695 ops/s
# Warmup Iteration  30: 157377.193 ops/s
Iteration   1: 157595.245 ops/s
Iteration   2: 157974.541 ops/s
Iteration   3: 157901.156 ops/s
Iteration   4: 157243.851 ops/s
Iteration   5: 157501.448 ops/s
Iteration   6: 157622.113 ops/s
Iteration   7: 157335.359 ops/s
Iteration   8: 157761.966 ops/s
Iteration   9: 157623.781 ops/s
Iteration  10: 157078.893 ops/s
Iteration  11: 157000.639 ops/s
Iteration  12: 157731.315 ops/s
Iteration  13: 156931.355 ops/s
Iteration  14: 157563.298 ops/s
Iteration  15: 157047.771 ops/s
Iteration  16: 157972.167 ops/s
Iteration  17: 157883.610 ops/s
Iteration  18: 157452.166 ops/s
Iteration  19: 157351.573 ops/s
Iteration  20: 157679.167 ops/s
Iteration  21: 157689.641 ops/s
Iteration  22: 157798.982 ops/s
Iteration  23: 157888.237 ops/s
Iteration  24: 157226.973 ops/s
Iteration  25: 157546.755 ops/s
Iteration  26: 157799.827 ops/s
Iteration  27: 156867.973 ops/s
Iteration  28: 158058.447 ops/s
Iteration  29: 157993.378 ops/s
Iteration  30: 157702.502 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_486._Benchmark.benchmark_Cluster_486":
  157560.804 ±(99.9%) 227.175 ops/s [Average]
  (min, avg, max) = (156867.973, 157560.804, 158058.447), stdev = 340.026
  CI (99.9%): [157333.629, 157787.980] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_486._Benchmark.benchmark_Cluster_486  thrpt   30  157560.804 ± 227.175  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_487._Benchmark.benchmark_Cluster_487$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_487._Benchmark.benchmark_Cluster_487

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 64408.932 ops/s
# Warmup Iteration   2: 88879.198 ops/s
# Warmup Iteration   3: 136897.444 ops/s
# Warmup Iteration   4: 163956.645 ops/s
# Warmup Iteration   5: 162448.628 ops/s
# Warmup Iteration   6: 163933.345 ops/s
# Warmup Iteration   7: 163051.728 ops/s
# Warmup Iteration   8: 164164.317 ops/s
# Warmup Iteration   9: 163660.711 ops/s
# Warmup Iteration  10: 111953.689 ops/s
# Warmup Iteration  11: 163678.805 ops/s
# Warmup Iteration  12: 164036.820 ops/s
# Warmup Iteration  13: 163673.753 ops/s
# Warmup Iteration  14: 163869.602 ops/s
# Warmup Iteration  15: 163593.757 ops/s
# Warmup Iteration  16: 163871.873 ops/s
# Warmup Iteration  17: 164237.933 ops/s
# Warmup Iteration  18: 163874.703 ops/s
# Warmup Iteration  19: 163931.962 ops/s
# Warmup Iteration  20: 163862.321 ops/s
# Warmup Iteration  21: 163638.910 ops/s
# Warmup Iteration  22: 164241.235 ops/s
# Warmup Iteration  23: 164185.801 ops/s
# Warmup Iteration  24: 163616.237 ops/s
# Warmup Iteration  25: 163558.223 ops/s
# Warmup Iteration  26: 163750.526 ops/s
# Warmup Iteration  27: 164032.123 ops/s
# Warmup Iteration  28: 163900.242 ops/s
# Warmup Iteration  29: 164062.531 ops/s
# Warmup Iteration  30: 164016.068 ops/s
Iteration   1: 163945.534 ops/s
Iteration   2: 164176.553 ops/s
Iteration   3: 163943.896 ops/s
Iteration   4: 163658.383 ops/s
Iteration   5: 164120.569 ops/s
Iteration   6: 163706.885 ops/s
Iteration   7: 163616.349 ops/s
Iteration   8: 164310.797 ops/s
Iteration   9: 163999.098 ops/s
Iteration  10: 163426.579 ops/s
Iteration  11: 163406.318 ops/s
Iteration  12: 163945.404 ops/s
Iteration  13: 163475.081 ops/s
Iteration  14: 163834.227 ops/s
Iteration  15: 163299.599 ops/s
Iteration  16: 163508.277 ops/s
Iteration  17: 163638.861 ops/s
Iteration  18: 163631.110 ops/s
Iteration  19: 163411.735 ops/s
Iteration  20: 163503.491 ops/s
Iteration  21: 163931.506 ops/s
Iteration  22: 163564.851 ops/s
Iteration  23: 162674.670 ops/s
Iteration  24: 163658.812 ops/s
Iteration  25: 163491.370 ops/s
Iteration  26: 163391.673 ops/s
Iteration  27: 163865.451 ops/s
Iteration  28: 163800.676 ops/s
Iteration  29: 163915.795 ops/s
Iteration  30: 163874.748 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_487._Benchmark.benchmark_Cluster_487":
  163690.943 ±(99.9%) 214.450 ops/s [Average]
  (min, avg, max) = (162674.670, 163690.943, 164310.797), stdev = 320.978
  CI (99.9%): [163476.494, 163905.393] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_487._Benchmark.benchmark_Cluster_487  thrpt   30  163690.943 ± 214.450  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_488._Benchmark.benchmark_Cluster_488$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_488._Benchmark.benchmark_Cluster_488

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 26400.562 ops/s
# Warmup Iteration   2: 57957.878 ops/s
# Warmup Iteration   3: 57810.436 ops/s
# Warmup Iteration   4: 105171.783 ops/s
# Warmup Iteration   5: 105883.335 ops/s
# Warmup Iteration   6: 105518.493 ops/s
# Warmup Iteration   7: 107447.427 ops/s
# Warmup Iteration   8: 106435.480 ops/s
# Warmup Iteration   9: 107064.333 ops/s
# Warmup Iteration  10: 105927.583 ops/s
# Warmup Iteration  11: 105129.206 ops/s
# Warmup Iteration  12: 81972.565 ops/s
# Warmup Iteration  13: 91904.381 ops/s
# Warmup Iteration  14: 105610.861 ops/s
# Warmup Iteration  15: 105686.634 ops/s
# Warmup Iteration  16: 105597.445 ops/s
# Warmup Iteration  17: 104444.527 ops/s
# Warmup Iteration  18: 105265.651 ops/s
# Warmup Iteration  19: 105453.854 ops/s
# Warmup Iteration  20: 104983.225 ops/s
# Warmup Iteration  21: 103645.603 ops/s
# Warmup Iteration  22: 104703.690 ops/s
# Warmup Iteration  23: 104845.324 ops/s
# Warmup Iteration  24: 105077.688 ops/s
# Warmup Iteration  25: 105036.498 ops/s
# Warmup Iteration  26: 105040.497 ops/s
# Warmup Iteration  27: 105362.002 ops/s
# Warmup Iteration  28: 105594.111 ops/s
# Warmup Iteration  29: 105973.342 ops/s
# Warmup Iteration  30: 105152.219 ops/s
Iteration   1: 104511.840 ops/s
Iteration   2: 105527.085 ops/s
Iteration   3: 105756.806 ops/s
Iteration   4: 105779.560 ops/s
Iteration   5: 105425.634 ops/s
Iteration   6: 105047.863 ops/s
Iteration   7: 106088.798 ops/s
Iteration   8: 105365.975 ops/s
Iteration   9: 105045.285 ops/s
Iteration  10: 104920.465 ops/s
Iteration  11: 105390.771 ops/s
Iteration  12: 105900.127 ops/s
Iteration  13: 106642.527 ops/s
Iteration  14: 105674.589 ops/s
Iteration  15: 104969.570 ops/s
Iteration  16: 105193.458 ops/s
Iteration  17: 105492.378 ops/s
Iteration  18: 105162.164 ops/s
Iteration  19: 104525.934 ops/s
Iteration  20: 104738.950 ops/s
Iteration  21: 104137.976 ops/s
Iteration  22: 104166.663 ops/s
Iteration  23: 104148.839 ops/s
Iteration  24: 103815.424 ops/s
Iteration  25: 105847.009 ops/s
Iteration  26: 104291.657 ops/s
Iteration  27: 104628.942 ops/s
Iteration  28: 104890.342 ops/s
Iteration  29: 105213.616 ops/s
Iteration  30: 105304.612 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_488._Benchmark.benchmark_Cluster_488":
  105120.162 ±(99.9%) 439.743 ops/s [Average]
  (min, avg, max) = (103815.424, 105120.162, 106642.527), stdev = 658.187
  CI (99.9%): [104680.419, 105559.905] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_488._Benchmark.benchmark_Cluster_488  thrpt   30  105120.162 ± 439.743  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_489._Benchmark.benchmark_Cluster_489$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_489._Benchmark.benchmark_Cluster_489

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 101208.641 ops/s
# Warmup Iteration   2: 115515.015 ops/s
# Warmup Iteration   3: 115864.541 ops/s
# Warmup Iteration   4: 144560.034 ops/s
# Warmup Iteration   5: 163181.090 ops/s
# Warmup Iteration   6: 163419.600 ops/s
# Warmup Iteration   7: 163562.016 ops/s
# Warmup Iteration   8: 161304.685 ops/s
# Warmup Iteration   9: 162484.464 ops/s
# Warmup Iteration  10: 163017.643 ops/s
# Warmup Iteration  11: 162923.515 ops/s
# Warmup Iteration  12: 163460.992 ops/s
# Warmup Iteration  13: 163297.474 ops/s
# Warmup Iteration  14: 162848.612 ops/s
# Warmup Iteration  15: 163078.115 ops/s
# Warmup Iteration  16: 163520.822 ops/s
# Warmup Iteration  17: 163008.503 ops/s
# Warmup Iteration  18: 131934.041 ops/s
# Warmup Iteration  19: 142844.069 ops/s
# Warmup Iteration  20: 163051.242 ops/s
# Warmup Iteration  21: 162862.545 ops/s
# Warmup Iteration  22: 162935.011 ops/s
# Warmup Iteration  23: 163213.539 ops/s
# Warmup Iteration  24: 162708.596 ops/s
# Warmup Iteration  25: 162824.881 ops/s
# Warmup Iteration  26: 163101.761 ops/s
# Warmup Iteration  27: 162807.720 ops/s
# Warmup Iteration  28: 162612.670 ops/s
# Warmup Iteration  29: 162329.501 ops/s
# Warmup Iteration  30: 163054.279 ops/s
Iteration   1: 163094.933 ops/s
Iteration   2: 162498.530 ops/s
Iteration   3: 162786.407 ops/s
Iteration   4: 163004.640 ops/s
Iteration   5: 163032.413 ops/s
Iteration   6: 162460.488 ops/s
Iteration   7: 162486.049 ops/s
Iteration   8: 163345.640 ops/s
Iteration   9: 162787.419 ops/s
Iteration  10: 163672.319 ops/s
Iteration  11: 162793.894 ops/s
Iteration  12: 162856.300 ops/s
Iteration  13: 163041.085 ops/s
Iteration  14: 163281.851 ops/s
Iteration  15: 162823.067 ops/s
Iteration  16: 163411.814 ops/s
Iteration  17: 162572.452 ops/s
Iteration  18: 162616.317 ops/s
Iteration  19: 162752.541 ops/s
Iteration  20: 162885.454 ops/s
Iteration  21: 162696.218 ops/s
Iteration  22: 162772.256 ops/s
Iteration  23: 162703.775 ops/s
Iteration  24: 163005.096 ops/s
Iteration  25: 162895.998 ops/s
Iteration  26: 162752.969 ops/s
Iteration  27: 162034.049 ops/s
Iteration  28: 162550.203 ops/s
Iteration  29: 162877.507 ops/s
Iteration  30: 162479.557 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_489._Benchmark.benchmark_Cluster_489":
  162832.375 ±(99.9%) 218.815 ops/s [Average]
  (min, avg, max) = (162034.049, 162832.375, 163672.319), stdev = 327.512
  CI (99.9%): [162613.560, 163051.189] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_489._Benchmark.benchmark_Cluster_489  thrpt   30  162832.375 ± 218.815  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_49._Benchmark.benchmark_Cluster_49$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_49._Benchmark.benchmark_Cluster_49

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 118911.085 ops/s
# Warmup Iteration   2: 126604.581 ops/s
# Warmup Iteration   3: 127094.254 ops/s
# Warmup Iteration   4: 127635.885 ops/s
# Warmup Iteration   5: 137413.034 ops/s
# Warmup Iteration   6: 160573.704 ops/s
# Warmup Iteration   7: 160339.821 ops/s
# Warmup Iteration   8: 160144.901 ops/s
# Warmup Iteration   9: 160692.858 ops/s
# Warmup Iteration  10: 161061.949 ops/s
# Warmup Iteration  11: 160794.965 ops/s
# Warmup Iteration  12: 159611.166 ops/s
# Warmup Iteration  13: 161336.918 ops/s
# Warmup Iteration  14: 160545.809 ops/s
# Warmup Iteration  15: 160464.409 ops/s
# Warmup Iteration  16: 161126.593 ops/s
# Warmup Iteration  17: 168202.761 ops/s
# Warmup Iteration  18: 168202.749 ops/s
# Warmup Iteration  19: 167787.274 ops/s
# Warmup Iteration  20: 167104.581 ops/s
# Warmup Iteration  21: 167512.023 ops/s
# Warmup Iteration  22: 167384.198 ops/s
# Warmup Iteration  23: 168027.725 ops/s
# Warmup Iteration  24: 167802.533 ops/s
# Warmup Iteration  25: 168120.435 ops/s
# Warmup Iteration  26: 167623.359 ops/s
# Warmup Iteration  27: 136672.547 ops/s
# Warmup Iteration  28: 145792.354 ops/s
# Warmup Iteration  29: 167613.500 ops/s
# Warmup Iteration  30: 167988.652 ops/s
Iteration   1: 167931.943 ops/s
Iteration   2: 168090.244 ops/s
Iteration   3: 167938.094 ops/s
Iteration   4: 167561.622 ops/s
Iteration   5: 168050.098 ops/s
Iteration   6: 167903.662 ops/s
Iteration   7: 168047.612 ops/s
Iteration   8: 168045.885 ops/s
Iteration   9: 168272.557 ops/s
Iteration  10: 167786.855 ops/s
Iteration  11: 167934.402 ops/s
Iteration  12: 167812.402 ops/s
Iteration  13: 167831.351 ops/s
Iteration  14: 167541.145 ops/s
Iteration  15: 167944.818 ops/s
Iteration  16: 168180.984 ops/s
Iteration  17: 167861.684 ops/s
Iteration  18: 167175.490 ops/s
Iteration  19: 167278.322 ops/s
Iteration  20: 167675.553 ops/s
Iteration  21: 167940.930 ops/s
Iteration  22: 167834.264 ops/s
Iteration  23: 167675.640 ops/s
Iteration  24: 167961.933 ops/s
Iteration  25: 168310.506 ops/s
Iteration  26: 167805.704 ops/s
Iteration  27: 168215.232 ops/s
Iteration  28: 168119.562 ops/s
Iteration  29: 166634.047 ops/s
Iteration  30: 167121.418 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_49._Benchmark.benchmark_Cluster_49":
  167816.132 ±(99.9%) 246.260 ops/s [Average]
  (min, avg, max) = (166634.047, 167816.132, 168310.506), stdev = 368.590
  CI (99.9%): [167569.872, 168062.392] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score     Error  Units
Cluster_49._Benchmark.benchmark_Cluster_49  thrpt   30  167816.132 ± 246.260  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_490._Benchmark.benchmark_Cluster_490$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_490._Benchmark.benchmark_Cluster_490

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 45149.965 ops/s
# Warmup Iteration   2: 80057.139 ops/s
# Warmup Iteration   3: 99829.015 ops/s
# Warmup Iteration   4: 139410.461 ops/s
# Warmup Iteration   5: 139363.953 ops/s
# Warmup Iteration   6: 137908.989 ops/s
# Warmup Iteration   7: 139138.800 ops/s
# Warmup Iteration   8: 138552.559 ops/s
# Warmup Iteration   9: 139292.357 ops/s
# Warmup Iteration  10: 139297.403 ops/s
# Warmup Iteration  11: 107325.197 ops/s
# Warmup Iteration  12: 128311.609 ops/s
# Warmup Iteration  13: 138626.256 ops/s
# Warmup Iteration  14: 138602.977 ops/s
# Warmup Iteration  15: 138827.025 ops/s
# Warmup Iteration  16: 138849.623 ops/s
# Warmup Iteration  17: 138900.491 ops/s
# Warmup Iteration  18: 139268.908 ops/s
# Warmup Iteration  19: 139583.045 ops/s
# Warmup Iteration  20: 139236.241 ops/s
# Warmup Iteration  21: 138412.985 ops/s
# Warmup Iteration  22: 138988.638 ops/s
# Warmup Iteration  23: 138877.257 ops/s
# Warmup Iteration  24: 139089.424 ops/s
# Warmup Iteration  25: 138898.431 ops/s
# Warmup Iteration  26: 138871.223 ops/s
# Warmup Iteration  27: 138631.775 ops/s
# Warmup Iteration  28: 138880.634 ops/s
# Warmup Iteration  29: 138156.712 ops/s
# Warmup Iteration  30: 139003.013 ops/s
Iteration   1: 139129.976 ops/s
Iteration   2: 137909.525 ops/s
Iteration   3: 138141.098 ops/s
Iteration   4: 138559.912 ops/s
Iteration   5: 138586.600 ops/s
Iteration   6: 139536.264 ops/s
Iteration   7: 138581.954 ops/s
Iteration   8: 137767.703 ops/s
Iteration   9: 139421.606 ops/s
Iteration  10: 139099.875 ops/s
Iteration  11: 138223.589 ops/s
Iteration  12: 138182.210 ops/s
Iteration  13: 137807.671 ops/s
Iteration  14: 138460.184 ops/s
Iteration  15: 138771.131 ops/s
Iteration  16: 139028.619 ops/s
Iteration  17: 139073.064 ops/s
Iteration  18: 138598.598 ops/s
Iteration  19: 137836.687 ops/s
Iteration  20: 138524.461 ops/s
Iteration  21: 138673.367 ops/s
Iteration  22: 137938.579 ops/s
Iteration  23: 137916.445 ops/s
Iteration  24: 138593.840 ops/s
Iteration  25: 138552.864 ops/s
Iteration  26: 138523.639 ops/s
Iteration  27: 139249.074 ops/s
Iteration  28: 138758.567 ops/s
Iteration  29: 139091.424 ops/s
Iteration  30: 138374.152 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_490._Benchmark.benchmark_Cluster_490":
  138563.756 ±(99.9%) 329.907 ops/s [Average]
  (min, avg, max) = (137767.703, 138563.756, 139536.264), stdev = 493.789
  CI (99.9%): [138233.849, 138893.663] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_490._Benchmark.benchmark_Cluster_490  thrpt   30  138563.756 ± 329.907  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_491._Benchmark.benchmark_Cluster_491$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_491._Benchmark.benchmark_Cluster_491

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 69119.278 ops/s
# Warmup Iteration   2: 89158.763 ops/s
# Warmup Iteration   3: 157194.382 ops/s
# Warmup Iteration   4: 171328.653 ops/s
# Warmup Iteration   5: 169953.094 ops/s
# Warmup Iteration   6: 171358.892 ops/s
# Warmup Iteration   7: 171641.322 ops/s
# Warmup Iteration   8: 171455.493 ops/s
# Warmup Iteration   9: 117584.386 ops/s
# Warmup Iteration  10: 171319.604 ops/s
# Warmup Iteration  11: 171049.008 ops/s
# Warmup Iteration  12: 171308.939 ops/s
# Warmup Iteration  13: 171044.471 ops/s
# Warmup Iteration  14: 170844.614 ops/s
# Warmup Iteration  15: 170561.237 ops/s
# Warmup Iteration  16: 170880.041 ops/s
# Warmup Iteration  17: 171172.821 ops/s
# Warmup Iteration  18: 170981.110 ops/s
# Warmup Iteration  19: 170885.462 ops/s
# Warmup Iteration  20: 170908.237 ops/s
# Warmup Iteration  21: 171727.197 ops/s
# Warmup Iteration  22: 171480.531 ops/s
# Warmup Iteration  23: 170943.228 ops/s
# Warmup Iteration  24: 171689.780 ops/s
# Warmup Iteration  25: 171731.487 ops/s
# Warmup Iteration  26: 170973.692 ops/s
# Warmup Iteration  27: 171087.491 ops/s
# Warmup Iteration  28: 171273.533 ops/s
# Warmup Iteration  29: 171064.658 ops/s
# Warmup Iteration  30: 171181.788 ops/s
Iteration   1: 171493.497 ops/s
Iteration   2: 171415.250 ops/s
Iteration   3: 171707.599 ops/s
Iteration   4: 171411.028 ops/s
Iteration   5: 171075.748 ops/s
Iteration   6: 171414.775 ops/s
Iteration   7: 171355.440 ops/s
Iteration   8: 171159.069 ops/s
Iteration   9: 171575.795 ops/s
Iteration  10: 171466.609 ops/s
Iteration  11: 171304.570 ops/s
Iteration  12: 170958.824 ops/s
Iteration  13: 170951.589 ops/s
Iteration  14: 171322.608 ops/s
Iteration  15: 170067.955 ops/s
Iteration  16: 170022.750 ops/s
Iteration  17: 170864.883 ops/s
Iteration  18: 171187.601 ops/s
Iteration  19: 171272.542 ops/s
Iteration  20: 171384.860 ops/s
Iteration  21: 170965.287 ops/s
Iteration  22: 171220.452 ops/s
Iteration  23: 171247.354 ops/s
Iteration  24: 170925.154 ops/s
Iteration  25: 171176.683 ops/s
Iteration  26: 170774.958 ops/s
Iteration  27: 171048.381 ops/s
Iteration  28: 171176.736 ops/s
Iteration  29: 171192.958 ops/s
Iteration  30: 171034.482 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_491._Benchmark.benchmark_Cluster_491":
  171139.181 ±(99.9%) 246.701 ops/s [Average]
  (min, avg, max) = (170022.750, 171139.181, 171707.599), stdev = 369.251
  CI (99.9%): [170892.480, 171385.883] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_491._Benchmark.benchmark_Cluster_491  thrpt   30  171139.181 ± 246.701  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_492._Benchmark.benchmark_Cluster_492$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_492._Benchmark.benchmark_Cluster_492

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 108842.715 ops/s
# Warmup Iteration   2: 119182.148 ops/s
# Warmup Iteration   3: 120811.907 ops/s
# Warmup Iteration   4: 144703.942 ops/s
# Warmup Iteration   5: 166948.997 ops/s
# Warmup Iteration   6: 165696.037 ops/s
# Warmup Iteration   7: 167093.254 ops/s
# Warmup Iteration   8: 166714.800 ops/s
# Warmup Iteration   9: 165148.456 ops/s
# Warmup Iteration  10: 166246.865 ops/s
# Warmup Iteration  11: 166585.662 ops/s
# Warmup Iteration  12: 167059.043 ops/s
# Warmup Iteration  13: 167167.095 ops/s
# Warmup Iteration  14: 166535.314 ops/s
# Warmup Iteration  15: 166466.171 ops/s
# Warmup Iteration  16: 166370.581 ops/s
# Warmup Iteration  17: 174767.785 ops/s
# Warmup Iteration  18: 175124.414 ops/s
# Warmup Iteration  19: 130002.383 ops/s
# Warmup Iteration  20: 165695.731 ops/s
# Warmup Iteration  21: 174732.324 ops/s
# Warmup Iteration  22: 174479.527 ops/s
# Warmup Iteration  23: 173763.462 ops/s
# Warmup Iteration  24: 174707.841 ops/s
# Warmup Iteration  25: 174289.289 ops/s
# Warmup Iteration  26: 174407.081 ops/s
# Warmup Iteration  27: 174679.643 ops/s
# Warmup Iteration  28: 173869.445 ops/s
# Warmup Iteration  29: 174877.316 ops/s
# Warmup Iteration  30: 174923.052 ops/s
Iteration   1: 174781.897 ops/s
Iteration   2: 174658.584 ops/s
Iteration   3: 173426.540 ops/s
Iteration   4: 173673.655 ops/s
Iteration   5: 174201.427 ops/s
Iteration   6: 174101.841 ops/s
Iteration   7: 173741.588 ops/s
Iteration   8: 174192.872 ops/s
Iteration   9: 174644.959 ops/s
Iteration  10: 174494.829 ops/s
Iteration  11: 175535.490 ops/s
Iteration  12: 175603.116 ops/s
Iteration  13: 175032.195 ops/s
Iteration  14: 174961.152 ops/s
Iteration  15: 174785.971 ops/s
Iteration  16: 175469.375 ops/s
Iteration  17: 174351.112 ops/s
Iteration  18: 174791.932 ops/s
Iteration  19: 174954.670 ops/s
Iteration  20: 174699.831 ops/s
Iteration  21: 174775.912 ops/s
Iteration  22: 174293.467 ops/s
Iteration  23: 174065.372 ops/s
Iteration  24: 174910.599 ops/s
Iteration  25: 175195.724 ops/s
Iteration  26: 175102.438 ops/s
Iteration  27: 174879.620 ops/s
Iteration  28: 174718.608 ops/s
Iteration  29: 175000.922 ops/s
Iteration  30: 175531.039 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_492._Benchmark.benchmark_Cluster_492":
  174685.891 ±(99.9%) 368.684 ops/s [Average]
  (min, avg, max) = (173426.540, 174685.891, 175603.116), stdev = 551.830
  CI (99.9%): [174317.207, 175054.576] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_492._Benchmark.benchmark_Cluster_492  thrpt   30  174685.891 ± 368.684  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_493._Benchmark.benchmark_Cluster_493$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_493._Benchmark.benchmark_Cluster_493

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 76476.489 ops/s
# Warmup Iteration   2: 111955.563 ops/s
# Warmup Iteration   3: 133796.985 ops/s
# Warmup Iteration   4: 184252.366 ops/s
# Warmup Iteration   5: 184865.375 ops/s
# Warmup Iteration   6: 183275.856 ops/s
# Warmup Iteration   7: 185444.292 ops/s
# Warmup Iteration   8: 185437.251 ops/s
# Warmup Iteration   9: 185622.666 ops/s
# Warmup Iteration  10: 185132.112 ops/s
# Warmup Iteration  11: 186260.576 ops/s
# Warmup Iteration  12: 142806.182 ops/s
# Warmup Iteration  13: 169040.039 ops/s
# Warmup Iteration  14: 183816.811 ops/s
# Warmup Iteration  15: 183475.343 ops/s
# Warmup Iteration  16: 183308.194 ops/s
# Warmup Iteration  17: 183248.171 ops/s
# Warmup Iteration  18: 183378.346 ops/s
# Warmup Iteration  19: 183215.896 ops/s
# Warmup Iteration  20: 183420.343 ops/s
# Warmup Iteration  21: 183812.562 ops/s
# Warmup Iteration  22: 183346.838 ops/s
# Warmup Iteration  23: 183664.443 ops/s
# Warmup Iteration  24: 183722.995 ops/s
# Warmup Iteration  25: 183528.516 ops/s
# Warmup Iteration  26: 183422.626 ops/s
# Warmup Iteration  27: 183560.199 ops/s
# Warmup Iteration  28: 183335.602 ops/s
# Warmup Iteration  29: 183222.909 ops/s
# Warmup Iteration  30: 183564.324 ops/s
Iteration   1: 183570.822 ops/s
Iteration   2: 184224.515 ops/s
Iteration   3: 184045.114 ops/s
Iteration   4: 183040.201 ops/s
Iteration   5: 183562.682 ops/s
Iteration   6: 183747.730 ops/s
Iteration   7: 182720.048 ops/s
Iteration   8: 182687.584 ops/s
Iteration   9: 183350.103 ops/s
Iteration  10: 182326.798 ops/s
Iteration  11: 182726.228 ops/s
Iteration  12: 182847.191 ops/s
Iteration  13: 183215.825 ops/s
Iteration  14: 183318.959 ops/s
Iteration  15: 183461.027 ops/s
Iteration  16: 183075.403 ops/s
Iteration  17: 182891.589 ops/s
Iteration  18: 182862.932 ops/s
Iteration  19: 183313.006 ops/s
Iteration  20: 182710.596 ops/s
Iteration  21: 183225.613 ops/s
Iteration  22: 183423.018 ops/s
Iteration  23: 183154.167 ops/s
Iteration  24: 183381.140 ops/s
Iteration  25: 183707.259 ops/s
Iteration  26: 182803.723 ops/s
Iteration  27: 183238.903 ops/s
Iteration  28: 181648.368 ops/s
Iteration  29: 182465.909 ops/s
Iteration  30: 182245.673 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_493._Benchmark.benchmark_Cluster_493":
  183099.737 ±(99.9%) 363.856 ops/s [Average]
  (min, avg, max) = (181648.368, 183099.737, 184224.515), stdev = 544.603
  CI (99.9%): [182735.881, 183463.594] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_493._Benchmark.benchmark_Cluster_493  thrpt   30  183099.737 ± 363.856  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_494._Benchmark.benchmark_Cluster_494$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_494._Benchmark.benchmark_Cluster_494

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 3927.568 ops/s
# Warmup Iteration   2: 7643.850 ops/s
# Warmup Iteration   3: 44747.587 ops/s
# Warmup Iteration   4: 53354.565 ops/s
# Warmup Iteration   5: 64957.954 ops/s
# Warmup Iteration   6: 75138.322 ops/s
# Warmup Iteration   7: 99325.749 ops/s
# Warmup Iteration   8: 98695.204 ops/s
# Warmup Iteration   9: 99142.517 ops/s
# Warmup Iteration  10: 97594.359 ops/s
# Warmup Iteration  11: 100299.705 ops/s
# Warmup Iteration  12: 99022.712 ops/s
# Warmup Iteration  13: 96227.097 ops/s
# Warmup Iteration  14: 99342.142 ops/s
# Warmup Iteration  15: 97704.205 ops/s
# Warmup Iteration  16: 98720.143 ops/s
# Warmup Iteration  17: 101274.505 ops/s
# Warmup Iteration  18: 116493.500 ops/s
# Warmup Iteration  19: 98403.446 ops/s
# Warmup Iteration  20: 96812.192 ops/s
# Warmup Iteration  21: 117895.164 ops/s
# Warmup Iteration  22: 118213.823 ops/s
# Warmup Iteration  23: 117566.844 ops/s
# Warmup Iteration  24: 117737.612 ops/s
# Warmup Iteration  25: 117842.712 ops/s
# Warmup Iteration  26: 118155.325 ops/s
# Warmup Iteration  27: 118061.047 ops/s
# Warmup Iteration  28: 117655.799 ops/s
# Warmup Iteration  29: 117597.782 ops/s
# Warmup Iteration  30: 118212.284 ops/s
Iteration   1: 117424.016 ops/s
Iteration   2: 118206.702 ops/s
Iteration   3: 117422.268 ops/s
Iteration   4: 117685.543 ops/s
Iteration   5: 118359.268 ops/s
Iteration   6: 117970.407 ops/s
Iteration   7: 117990.721 ops/s
Iteration   8: 118204.539 ops/s
Iteration   9: 118057.321 ops/s
Iteration  10: 118061.387 ops/s
Iteration  11: 118005.211 ops/s
Iteration  12: 118035.436 ops/s
Iteration  13: 117749.665 ops/s
Iteration  14: 117951.486 ops/s
Iteration  15: 118050.259 ops/s
Iteration  16: 118012.993 ops/s
Iteration  17: 117986.141 ops/s
Iteration  18: 117631.371 ops/s
Iteration  19: 117786.625 ops/s
Iteration  20: 118050.548 ops/s
Iteration  21: 118029.309 ops/s
Iteration  22: 118204.235 ops/s
Iteration  23: 118592.088 ops/s
Iteration  24: 117905.245 ops/s
Iteration  25: 117984.730 ops/s
Iteration  26: 117718.441 ops/s
Iteration  27: 118000.278 ops/s
Iteration  28: 117827.376 ops/s
Iteration  29: 117771.940 ops/s
Iteration  30: 118364.838 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_494._Benchmark.benchmark_Cluster_494":
  117968.013 ±(99.9%) 171.241 ops/s [Average]
  (min, avg, max) = (117422.268, 117968.013, 118592.088), stdev = 256.305
  CI (99.9%): [117796.772, 118139.254] (assumes normal distribution)


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_494._Benchmark.benchmark_Cluster_494  thrpt   30  117968.013 ± 171.241  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_495._Benchmark.benchmark_Cluster_495$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_495._Benchmark.benchmark_Cluster_495

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 79905.853 ops/s
# Warmup Iteration   2: 109832.157 ops/s
# Warmup Iteration   3: 127457.365 ops/s
# Warmup Iteration   4: 177860.101 ops/s
# Warmup Iteration   5: 177452.138 ops/s
# Warmup Iteration   6: 175744.704 ops/s
# Warmup Iteration   7: 178126.599 ops/s
# Warmup Iteration   8: 177518.607 ops/s
# Warmup Iteration   9: 177710.371 ops/s
# Warmup Iteration  10: 178297.888 ops/s
# Warmup Iteration  11: 177552.715 ops/s
# Warmup Iteration  12: 176939.270 ops/s
# Warmup Iteration  13: 123235.171 ops/s
# Warmup Iteration  14: 177821.868 ops/s
# Warmup Iteration  15: 177934.860 ops/s
# Warmup Iteration  16: 177869.296 ops/s
# Warmup Iteration  17: 177294.802 ops/s
# Warmup Iteration  18: 177420.321 ops/s
# Warmup Iteration  19: 176845.808 ops/s
# Warmup Iteration  20: 177119.936 ops/s
# Warmup Iteration  21: 177757.634 ops/s
# Warmup Iteration  22: 177755.312 ops/s
# Warmup Iteration  23: 177969.233 ops/s
# Warmup Iteration  24: 177971.109 ops/s
# Warmup Iteration  25: 177965.856 ops/s
# Warmup Iteration  26: 177569.399 ops/s
# Warmup Iteration  27: 177970.435 ops/s
# Warmup Iteration  28: 177656.443 ops/s
# Warmup Iteration  29: 177625.202 ops/s
# Warmup Iteration  30: 177930.090 ops/s
Iteration   1: 177835.101 ops/s
Iteration   2: 177963.730 ops/s
Iteration   3: 177017.558 ops/s
Iteration   4: 177745.794 ops/s
Iteration   5: 177681.497 ops/s
Iteration   6: 177119.396 ops/s
Iteration   7: 177697.884 ops/s
Iteration   8: 177277.544 ops/s
Iteration   9: 177797.745 ops/s
Iteration  10: 177840.046 ops/s
Iteration  11: 177760.271 ops/s
Iteration  12: 177144.693 ops/s
Iteration  13: 177758.863 ops/s
Iteration  14: 178094.704 ops/s
Iteration  15: 177351.730 ops/s
Iteration  16: 177641.287 ops/s
Iteration  17: 178077.345 ops/s
Iteration  18: 178107.917 ops/s
Iteration  19: 177970.081 ops/s
Iteration  20: 176958.320 ops/s
Iteration  21: 178021.371 ops/s
Iteration  22: 177991.002 ops/s
Iteration  23: 177490.015 ops/s
Iteration  24: 177592.403 ops/s
Iteration  25: 177614.197 ops/s
Iteration  26: 177761.969 ops/s
Iteration  27: 177382.226 ops/s
Iteration  28: 176765.554 ops/s
Iteration  29: 177555.250 ops/s
Iteration  30: 177279.948 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_495._Benchmark.benchmark_Cluster_495":
  177609.848 ±(99.9%) 242.201 ops/s [Average]
  (min, avg, max) = (176765.554, 177609.848, 178107.917), stdev = 362.515
  CI (99.9%): [177367.647, 177852.049] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_495._Benchmark.benchmark_Cluster_495  thrpt   30  177609.848 ± 242.201  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_496._Benchmark.benchmark_Cluster_496$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_496._Benchmark.benchmark_Cluster_496

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 113850.837 ops/s
# Warmup Iteration   2: 146038.945 ops/s
# Warmup Iteration   3: 191227.000 ops/s
# Warmup Iteration   4: 246973.994 ops/s
# Warmup Iteration   5: 245198.131 ops/s
# Warmup Iteration   6: 243122.618 ops/s
# Warmup Iteration   7: 246198.918 ops/s
# Warmup Iteration   8: 246477.614 ops/s
# Warmup Iteration   9: 247431.290 ops/s
# Warmup Iteration  10: 247108.259 ops/s
# Warmup Iteration  11: 233901.166 ops/s
# Warmup Iteration  12: 183340.943 ops/s
# Warmup Iteration  13: 247169.998 ops/s
# Warmup Iteration  14: 246744.399 ops/s
# Warmup Iteration  15: 246521.895 ops/s
# Warmup Iteration  16: 246751.719 ops/s
# Warmup Iteration  17: 246630.851 ops/s
# Warmup Iteration  18: 246750.191 ops/s
# Warmup Iteration  19: 245333.136 ops/s
# Warmup Iteration  20: 246681.997 ops/s
# Warmup Iteration  21: 246686.409 ops/s
# Warmup Iteration  22: 246739.559 ops/s
# Warmup Iteration  23: 246326.147 ops/s
# Warmup Iteration  24: 246760.990 ops/s
# Warmup Iteration  25: 246483.532 ops/s
# Warmup Iteration  26: 246552.627 ops/s
# Warmup Iteration  27: 246447.984 ops/s
# Warmup Iteration  28: 246365.309 ops/s
# Warmup Iteration  29: 245531.723 ops/s
# Warmup Iteration  30: 247179.927 ops/s
Iteration   1: 246366.612 ops/s
Iteration   2: 246562.171 ops/s
Iteration   3: 246539.321 ops/s
Iteration   4: 246555.418 ops/s
Iteration   5: 246530.644 ops/s
Iteration   6: 246612.632 ops/s
Iteration   7: 246143.633 ops/s
Iteration   8: 247060.355 ops/s
Iteration   9: 246851.030 ops/s
Iteration  10: 247109.329 ops/s
Iteration  11: 247347.697 ops/s
Iteration  12: 246941.014 ops/s
Iteration  13: 246841.768 ops/s
Iteration  14: 247128.971 ops/s
Iteration  15: 246766.551 ops/s
Iteration  16: 246819.108 ops/s
Iteration  17: 244983.726 ops/s
Iteration  18: 245284.772 ops/s
Iteration  19: 244617.048 ops/s
Iteration  20: 245518.712 ops/s
Iteration  21: 247025.755 ops/s
Iteration  22: 220948.687 ops/s
Iteration  23: 214239.923 ops/s
Iteration  24: 214137.421 ops/s
Iteration  25: 217227.723 ops/s
Iteration  26: 213539.830 ops/s
Iteration  27: 219953.849 ops/s
Iteration  28: 214103.250 ops/s
Iteration  29: 214059.771 ops/s
Iteration  30: 219176.202 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_496._Benchmark.benchmark_Cluster_496":
  237433.097 ±(99.9%) 9434.063 ops/s [Average]
  (min, avg, max) = (213539.830, 237433.097, 247347.697), stdev = 14120.463
  CI (99.9%): [227999.034, 246867.161] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_496._Benchmark.benchmark_Cluster_496  thrpt   30  237433.097 ± 9434.063  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_497._Benchmark.benchmark_Cluster_497$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_497._Benchmark.benchmark_Cluster_497

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 10143.153 ops/s
# Warmup Iteration   2: 59584.738 ops/s
# Warmup Iteration   3: 68229.154 ops/s
# Warmup Iteration   4: 79280.633 ops/s
# Warmup Iteration   5: 131690.384 ops/s
# Warmup Iteration   6: 128536.100 ops/s
# Warmup Iteration   7: 133368.797 ops/s
# Warmup Iteration   8: 129227.860 ops/s
# Warmup Iteration   9: 129665.608 ops/s
# Warmup Iteration  10: 131676.178 ops/s
# Warmup Iteration  11: 130876.666 ops/s
# Warmup Iteration  12: 132127.249 ops/s
# Warmup Iteration  13: 129711.934 ops/s
# Warmup Iteration  14: 121951.507 ops/s
# Warmup Iteration  15: 91612.780 ops/s
# Warmup Iteration  16: 130105.002 ops/s
# Warmup Iteration  17: 130266.028 ops/s
# Warmup Iteration  18: 136836.559 ops/s
# Warmup Iteration  19: 135169.989 ops/s
# Warmup Iteration  20: 134252.374 ops/s
# Warmup Iteration  21: 135010.971 ops/s
# Warmup Iteration  22: 134903.662 ops/s
# Warmup Iteration  23: 136219.912 ops/s
# Warmup Iteration  24: 134573.491 ops/s
# Warmup Iteration  25: 133914.015 ops/s
# Warmup Iteration  26: 135159.914 ops/s
# Warmup Iteration  27: 136236.110 ops/s
# Warmup Iteration  28: 135409.975 ops/s
# Warmup Iteration  29: 143272.551 ops/s
# Warmup Iteration  30: 154615.877 ops/s
Iteration   1: 155150.271 ops/s
Iteration   2: 155127.882 ops/s
Iteration   3: 154925.460 ops/s
Iteration   4: 154641.622 ops/s
Iteration   5: 155184.191 ops/s
Iteration   6: 154890.545 ops/s
Iteration   7: 154513.562 ops/s
Iteration   8: 154809.170 ops/s
Iteration   9: 154879.822 ops/s
Iteration  10: 154859.289 ops/s
Iteration  11: 154036.323 ops/s
Iteration  12: 154726.510 ops/s
Iteration  13: 154596.815 ops/s
Iteration  14: 154575.564 ops/s
Iteration  15: 153807.821 ops/s
Iteration  16: 154383.859 ops/s
Iteration  17: 154892.389 ops/s
Iteration  18: 154933.634 ops/s
Iteration  19: 153582.031 ops/s
Iteration  20: 153483.702 ops/s
Iteration  21: 153333.843 ops/s
Iteration  22: 154276.838 ops/s
Iteration  23: 154860.597 ops/s
Iteration  24: 154843.958 ops/s
Iteration  25: 153938.606 ops/s
Iteration  26: 154593.550 ops/s
Iteration  27: 154569.423 ops/s
Iteration  28: 153929.867 ops/s
Iteration  29: 154193.754 ops/s
Iteration  30: 154086.604 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_497._Benchmark.benchmark_Cluster_497":
  154487.583 ±(99.9%) 341.380 ops/s [Average]
  (min, avg, max) = (153333.843, 154487.583, 155184.191), stdev = 510.961
  CI (99.9%): [154146.204, 154828.963] (assumes normal distribution)


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_497._Benchmark.benchmark_Cluster_497  thrpt   30  154487.583 ± 341.380  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_498._Benchmark.benchmark_Cluster_498$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_498._Benchmark.benchmark_Cluster_498

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 94206.518 ops/s
# Warmup Iteration   2: 114234.104 ops/s
# Warmup Iteration   3: 189207.749 ops/s
# Warmup Iteration   4: 216740.470 ops/s
# Warmup Iteration   5: 213659.207 ops/s
# Warmup Iteration   6: 215567.316 ops/s
# Warmup Iteration   7: 216596.392 ops/s
# Warmup Iteration   8: 215712.534 ops/s
# Warmup Iteration   9: 208234.654 ops/s
# Warmup Iteration  10: 153982.385 ops/s
# Warmup Iteration  11: 216764.617 ops/s
# Warmup Iteration  12: 216771.319 ops/s
# Warmup Iteration  13: 216449.853 ops/s
# Warmup Iteration  14: 216962.729 ops/s
# Warmup Iteration  15: 216378.791 ops/s
# Warmup Iteration  16: 216812.743 ops/s
# Warmup Iteration  17: 215353.555 ops/s
# Warmup Iteration  18: 215159.419 ops/s
# Warmup Iteration  19: 215856.205 ops/s
# Warmup Iteration  20: 215821.561 ops/s
# Warmup Iteration  21: 215680.796 ops/s
# Warmup Iteration  22: 215534.276 ops/s
# Warmup Iteration  23: 215458.237 ops/s
# Warmup Iteration  24: 216357.339 ops/s
# Warmup Iteration  25: 216069.005 ops/s
# Warmup Iteration  26: 216010.393 ops/s
# Warmup Iteration  27: 216022.327 ops/s
# Warmup Iteration  28: 215952.627 ops/s
# Warmup Iteration  29: 216296.400 ops/s
# Warmup Iteration  30: 216270.176 ops/s
Iteration   1: 215937.986 ops/s
Iteration   2: 214361.212 ops/s
Iteration   3: 215390.031 ops/s
Iteration   4: 215100.893 ops/s
Iteration   5: 215180.047 ops/s
Iteration   6: 216402.428 ops/s
Iteration   7: 215973.243 ops/s
Iteration   8: 215479.493 ops/s
Iteration   9: 216325.177 ops/s
Iteration  10: 215928.930 ops/s
Iteration  11: 215871.849 ops/s
Iteration  12: 215774.960 ops/s
Iteration  13: 216264.521 ops/s
Iteration  14: 215328.385 ops/s
Iteration  15: 215817.271 ops/s
Iteration  16: 215223.292 ops/s
Iteration  17: 215591.962 ops/s
Iteration  18: 215510.316 ops/s
Iteration  19: 215764.121 ops/s
Iteration  20: 215385.613 ops/s
Iteration  21: 215344.872 ops/s
Iteration  22: 215493.148 ops/s
Iteration  23: 215995.299 ops/s
Iteration  24: 215821.349 ops/s
Iteration  25: 215659.406 ops/s
Iteration  26: 215030.161 ops/s
Iteration  27: 215431.143 ops/s
Iteration  28: 215390.455 ops/s
Iteration  29: 215829.566 ops/s
Iteration  30: 215161.789 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_498._Benchmark.benchmark_Cluster_498":
  215592.297 ±(99.9%) 287.381 ops/s [Average]
  (min, avg, max) = (214361.212, 215592.297, 216402.428), stdev = 430.139
  CI (99.9%): [215304.916, 215879.679] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_498._Benchmark.benchmark_Cluster_498  thrpt   30  215592.297 ± 287.381  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_499._Benchmark.benchmark_Cluster_499$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_499._Benchmark.benchmark_Cluster_499

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 78022.407 ops/s
# Warmup Iteration   2: 104749.731 ops/s
# Warmup Iteration   3: 105254.613 ops/s
# Warmup Iteration   4: 150964.950 ops/s
# Warmup Iteration   5: 159032.740 ops/s
# Warmup Iteration   6: 159966.667 ops/s
# Warmup Iteration   7: 158251.492 ops/s
# Warmup Iteration   8: 160210.219 ops/s
# Warmup Iteration   9: 160187.949 ops/s
# Warmup Iteration  10: 159532.447 ops/s
# Warmup Iteration  11: 159513.536 ops/s
# Warmup Iteration  12: 160517.274 ops/s
# Warmup Iteration  13: 159893.051 ops/s
# Warmup Iteration  14: 160281.619 ops/s
# Warmup Iteration  15: 141761.967 ops/s
# Warmup Iteration  16: 126185.240 ops/s
# Warmup Iteration  17: 163873.100 ops/s
# Warmup Iteration  18: 162866.991 ops/s
# Warmup Iteration  19: 163163.819 ops/s
# Warmup Iteration  20: 163438.312 ops/s
# Warmup Iteration  21: 163463.498 ops/s
# Warmup Iteration  22: 163454.486 ops/s
# Warmup Iteration  23: 164149.219 ops/s
# Warmup Iteration  24: 163824.894 ops/s
# Warmup Iteration  25: 163804.723 ops/s
# Warmup Iteration  26: 163722.494 ops/s
# Warmup Iteration  27: 163967.301 ops/s
# Warmup Iteration  28: 163681.044 ops/s
# Warmup Iteration  29: 163394.249 ops/s
# Warmup Iteration  30: 163500.310 ops/s
Iteration   1: 163527.668 ops/s
Iteration   2: 163756.483 ops/s
Iteration   3: 163707.732 ops/s
Iteration   4: 163099.765 ops/s
Iteration   5: 162870.451 ops/s
Iteration   6: 163102.839 ops/s
Iteration   7: 162797.297 ops/s
Iteration   8: 163947.446 ops/s
Iteration   9: 163231.560 ops/s
Iteration  10: 161920.095 ops/s
Iteration  11: 163608.206 ops/s
Iteration  12: 162539.881 ops/s
Iteration  13: 161835.445 ops/s
Iteration  14: 163943.938 ops/s
Iteration  15: 148217.071 ops/s
Iteration  16: 144205.260 ops/s
Iteration  17: 143334.644 ops/s
Iteration  18: 139518.322 ops/s
Iteration  19: 143730.687 ops/s
Iteration  20: 144507.129 ops/s
Iteration  21: 143650.002 ops/s
Iteration  22: 144964.922 ops/s
Iteration  23: 139005.992 ops/s
Iteration  24: 144551.064 ops/s
Iteration  25: 143874.663 ops/s
Iteration  26: 143804.194 ops/s
Iteration  27: 142967.179 ops/s
Iteration  28: 145314.220 ops/s
Iteration  29: 141026.103 ops/s
Iteration  30: 144276.867 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_499._Benchmark.benchmark_Cluster_499":
  152694.571 ±(99.9%) 6728.230 ops/s [Average]
  (min, avg, max) = (139005.992, 152694.571, 163947.446), stdev = 10070.499
  CI (99.9%): [145966.340, 159422.801] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_499._Benchmark.benchmark_Cluster_499  thrpt   30  152694.571 ± 6728.230  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_5._Benchmark.benchmark_Cluster_5$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_5._Benchmark.benchmark_Cluster_5

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 1382.038 ops/s
# Warmup Iteration   2: 16213.005 ops/s
# Warmup Iteration   3: 25849.235 ops/s
# Warmup Iteration   4: 80390.219 ops/s
# Warmup Iteration   5: 90319.460 ops/s
# Warmup Iteration   6: 147551.722 ops/s
# Warmup Iteration   7: 155308.648 ops/s
# Warmup Iteration   8: 158662.720 ops/s
# Warmup Iteration   9: 159768.885 ops/s
# Warmup Iteration  10: 158750.495 ops/s
# Warmup Iteration  11: 161270.738 ops/s
# Warmup Iteration  12: 160885.882 ops/s
# Warmup Iteration  13: 159602.498 ops/s
# Warmup Iteration  14: 147818.298 ops/s
# Warmup Iteration  15: 117749.225 ops/s
# Warmup Iteration  16: 162547.207 ops/s
# Warmup Iteration  17: 159202.687 ops/s
# Warmup Iteration  18: 157169.474 ops/s
# Warmup Iteration  19: 160085.176 ops/s
# Warmup Iteration  20: 161193.651 ops/s
# Warmup Iteration  21: 160405.818 ops/s
# Warmup Iteration  22: 161518.158 ops/s
# Warmup Iteration  23: 143266.393 ops/s
# Warmup Iteration  24: 157252.564 ops/s
# Warmup Iteration  25: 158209.049 ops/s
# Warmup Iteration  26: 161116.820 ops/s
# Warmup Iteration  27: 160131.819 ops/s
# Warmup Iteration  28: 160232.947 ops/s
# Warmup Iteration  29: 161873.318 ops/s
# Warmup Iteration  30: 159407.741 ops/s
Iteration   1: 156561.888 ops/s
Iteration   2: 160590.956 ops/s
Iteration   3: 159972.338 ops/s
Iteration   4: 158948.655 ops/s
Iteration   5: 157475.721 ops/s
Iteration   6: 158814.497 ops/s
Iteration   7: 161840.149 ops/s
Iteration   8: 162011.586 ops/s
Iteration   9: 160191.571 ops/s
Iteration  10: 158448.530 ops/s
Iteration  11: 161487.801 ops/s
Iteration  12: 159928.200 ops/s
Iteration  13: 157939.052 ops/s
Iteration  14: 160832.598 ops/s
Iteration  15: 159173.325 ops/s
Iteration  16: 158593.759 ops/s
Iteration  17: 161769.032 ops/s
Iteration  18: 158297.722 ops/s
Iteration  19: 162590.932 ops/s
Iteration  20: 161491.770 ops/s
Iteration  21: 175252.299 ops/s
Iteration  22: 183542.257 ops/s
Iteration  23: 183639.337 ops/s
Iteration  24: 182658.683 ops/s
Iteration  25: 182001.204 ops/s
Iteration  26: 182944.014 ops/s
Iteration  27: 183026.029 ops/s
Iteration  28: 182870.475 ops/s
Iteration  29: 182116.971 ops/s
Iteration  30: 183006.613 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_5._Benchmark.benchmark_Cluster_5":
  167267.265 ±(99.9%) 7247.618 ops/s [Average]
  (min, avg, max) = (156561.888, 167267.265, 183639.337), stdev = 10847.895
  CI (99.9%): [160019.647, 174514.884] (assumes normal distribution)


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  Mode  Cnt       Score      Error  Units
Cluster_5._Benchmark.benchmark_Cluster_5  thrpt   30  167267.265 ± 7247.618  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_50._Benchmark.benchmark_Cluster_50$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_50._Benchmark.benchmark_Cluster_50

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 46266.536 ops/s
# Warmup Iteration   2: 58835.866 ops/s
# Warmup Iteration   3: 58536.130 ops/s
# Warmup Iteration   4: 58864.851 ops/s
# Warmup Iteration   5: 58841.004 ops/s
# Warmup Iteration   6: 69595.699 ops/s
# Warmup Iteration   7: 73573.442 ops/s
# Warmup Iteration   8: 73610.201 ops/s
# Warmup Iteration   9: 73423.649 ops/s
# Warmup Iteration  10: 73556.004 ops/s
# Warmup Iteration  11: 73596.856 ops/s
# Warmup Iteration  12: 73501.156 ops/s
# Warmup Iteration  13: 73515.038 ops/s
# Warmup Iteration  14: 72802.939 ops/s
# Warmup Iteration  15: 73708.647 ops/s
# Warmup Iteration  16: 73870.208 ops/s
# Warmup Iteration  17: 73678.463 ops/s
# Warmup Iteration  18: 73610.647 ops/s
# Warmup Iteration  19: 73793.619 ops/s
# Warmup Iteration  20: 73559.719 ops/s
# Warmup Iteration  21: 73564.227 ops/s
# Warmup Iteration  22: 73605.048 ops/s
# Warmup Iteration  23: 73946.486 ops/s
# Warmup Iteration  24: 73689.134 ops/s
# Warmup Iteration  25: 73523.069 ops/s
# Warmup Iteration  26: 73503.161 ops/s
# Warmup Iteration  27: 73736.584 ops/s
# Warmup Iteration  28: 73893.338 ops/s
# Warmup Iteration  29: 73440.951 ops/s
# Warmup Iteration  30: 68976.198 ops/s
Iteration   1: 59070.205 ops/s
Iteration   2: 59070.089 ops/s
Iteration   3: 62908.159 ops/s
Iteration   4: 73504.342 ops/s
Iteration   5: 73567.126 ops/s
Iteration   6: 73400.178 ops/s
Iteration   7: 73693.446 ops/s
Iteration   8: 73497.173 ops/s
Iteration   9: 73289.736 ops/s
Iteration  10: 73553.673 ops/s
Iteration  11: 73710.716 ops/s
Iteration  12: 73595.541 ops/s
Iteration  13: 73637.523 ops/s
Iteration  14: 73448.925 ops/s
Iteration  15: 73463.078 ops/s
Iteration  16: 73252.247 ops/s
Iteration  17: 73181.895 ops/s
Iteration  18: 73578.979 ops/s
Iteration  19: 73094.432 ops/s
Iteration  20: 73192.918 ops/s
Iteration  21: 73259.598 ops/s
Iteration  22: 73553.434 ops/s
Iteration  23: 73665.763 ops/s
Iteration  24: 73623.252 ops/s
Iteration  25: 73546.966 ops/s
Iteration  26: 73212.943 ops/s
Iteration  27: 73676.699 ops/s
Iteration  28: 73728.510 ops/s
Iteration  29: 73655.445 ops/s
Iteration  30: 73349.695 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_50._Benchmark.benchmark_Cluster_50":
  72166.089 ±(99.9%) 2707.272 ops/s [Average]
  (min, avg, max) = (59070.089, 72166.089, 73728.510), stdev = 4052.117
  CI (99.9%): [69458.818, 74873.361] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt      Score      Error  Units
Cluster_50._Benchmark.benchmark_Cluster_50  thrpt   30  72166.089 ± 2707.272  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_500._Benchmark.benchmark_Cluster_500$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_500._Benchmark.benchmark_Cluster_500

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 63961.901 ops/s
# Warmup Iteration   2: 89775.841 ops/s
# Warmup Iteration   3: 169237.442 ops/s
# Warmup Iteration   4: 182991.850 ops/s
# Warmup Iteration   5: 183482.966 ops/s
# Warmup Iteration   6: 185028.448 ops/s
# Warmup Iteration   7: 185173.260 ops/s
# Warmup Iteration   8: 161635.183 ops/s
# Warmup Iteration   9: 149315.010 ops/s
# Warmup Iteration  10: 184921.339 ops/s
# Warmup Iteration  11: 185017.718 ops/s
# Warmup Iteration  12: 184614.342 ops/s
# Warmup Iteration  13: 184014.069 ops/s
# Warmup Iteration  14: 184559.106 ops/s
# Warmup Iteration  15: 184828.256 ops/s
# Warmup Iteration  16: 183815.389 ops/s
# Warmup Iteration  17: 184330.123 ops/s
# Warmup Iteration  18: 183747.434 ops/s
# Warmup Iteration  19: 184346.213 ops/s
# Warmup Iteration  20: 183883.281 ops/s
# Warmup Iteration  21: 184722.502 ops/s
# Warmup Iteration  22: 184773.625 ops/s
# Warmup Iteration  23: 184839.336 ops/s
# Warmup Iteration  24: 184722.621 ops/s
# Warmup Iteration  25: 184677.846 ops/s
# Warmup Iteration  26: 184689.680 ops/s
# Warmup Iteration  27: 186013.505 ops/s
# Warmup Iteration  28: 185352.719 ops/s
# Warmup Iteration  29: 185461.792 ops/s
# Warmup Iteration  30: 185093.502 ops/s
Iteration   1: 184435.417 ops/s
Iteration   2: 184937.869 ops/s
Iteration   3: 184596.349 ops/s
Iteration   4: 185014.636 ops/s
Iteration   5: 184516.627 ops/s
Iteration   6: 184759.495 ops/s
Iteration   7: 185029.851 ops/s
Iteration   8: 182766.302 ops/s
Iteration   9: 184704.331 ops/s
Iteration  10: 183401.966 ops/s
Iteration  11: 185243.936 ops/s
Iteration  12: 185273.808 ops/s
Iteration  13: 164143.027 ops/s
Iteration  14: 158999.042 ops/s
Iteration  15: 156745.057 ops/s
Iteration  16: 165337.203 ops/s
Iteration  17: 157882.623 ops/s
Iteration  18: 163162.074 ops/s
Iteration  19: 161441.273 ops/s
Iteration  20: 160557.970 ops/s
Iteration  21: 162885.529 ops/s
Iteration  22: 160296.355 ops/s
Iteration  23: 159966.545 ops/s
Iteration  24: 160619.004 ops/s
Iteration  25: 161692.967 ops/s
Iteration  26: 164558.181 ops/s
Iteration  27: 159457.218 ops/s
Iteration  28: 161816.028 ops/s
Iteration  29: 162767.583 ops/s
Iteration  30: 163134.165 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_500._Benchmark.benchmark_Cluster_500":
  170671.414 ±(99.9%) 7801.176 ops/s [Average]
  (min, avg, max) = (156745.057, 170671.414, 185273.808), stdev = 11676.434
  CI (99.9%): [162870.238, 178472.590] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_500._Benchmark.benchmark_Cluster_500  thrpt   30  170671.414 ± 7801.176  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_501._Benchmark.benchmark_Cluster_501$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_501._Benchmark.benchmark_Cluster_501

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 3695.595 ops/s
# Warmup Iteration   2: 62274.288 ops/s
# Warmup Iteration   3: 92781.614 ops/s
# Warmup Iteration   4: 107753.139 ops/s
# Warmup Iteration   5: 163097.786 ops/s
# Warmup Iteration   6: 172176.634 ops/s
# Warmup Iteration   7: 176817.683 ops/s
# Warmup Iteration   8: 180184.907 ops/s
# Warmup Iteration   9: 179657.890 ops/s
# Warmup Iteration  10: 174979.087 ops/s
# Warmup Iteration  11: 175387.162 ops/s
# Warmup Iteration  12: 182072.290 ops/s
# Warmup Iteration  13: 124656.023 ops/s
# Warmup Iteration  14: 171343.214 ops/s
# Warmup Iteration  15: 181904.362 ops/s
# Warmup Iteration  16: 181334.123 ops/s
# Warmup Iteration  17: 182657.551 ops/s
# Warmup Iteration  18: 182072.934 ops/s
# Warmup Iteration  19: 183269.834 ops/s
# Warmup Iteration  20: 178408.292 ops/s
# Warmup Iteration  21: 180191.388 ops/s
# Warmup Iteration  22: 178860.331 ops/s
# Warmup Iteration  23: 179921.162 ops/s
# Warmup Iteration  24: 181238.473 ops/s
# Warmup Iteration  25: 176896.345 ops/s
# Warmup Iteration  26: 182420.817 ops/s
# Warmup Iteration  27: 181648.431 ops/s
# Warmup Iteration  28: 178000.004 ops/s
# Warmup Iteration  29: 180591.057 ops/s
# Warmup Iteration  30: 181888.535 ops/s
Iteration   1: 183154.418 ops/s
Iteration   2: 174901.786 ops/s
Iteration   3: 180951.468 ops/s
Iteration   4: 177269.527 ops/s
Iteration   5: 182469.894 ops/s
Iteration   6: 183005.268 ops/s
Iteration   7: 177689.847 ops/s
Iteration   8: 182408.304 ops/s
Iteration   9: 183160.759 ops/s
Iteration  10: 178054.988 ops/s
Iteration  11: 176844.798 ops/s
Iteration  12: 179534.357 ops/s
Iteration  13: 178398.020 ops/s
Iteration  14: 177719.338 ops/s
Iteration  15: 174603.950 ops/s
Iteration  16: 180884.261 ops/s
Iteration  17: 178770.693 ops/s
Iteration  18: 175143.561 ops/s
Iteration  19: 179774.610 ops/s
Iteration  20: 178719.107 ops/s
Iteration  21: 180685.877 ops/s
Iteration  22: 179839.638 ops/s
Iteration  23: 173566.404 ops/s
Iteration  24: 180820.579 ops/s
Iteration  25: 183976.102 ops/s
Iteration  26: 177489.226 ops/s
Iteration  27: 181282.849 ops/s
Iteration  28: 181585.290 ops/s
Iteration  29: 179450.340 ops/s
Iteration  30: 178913.823 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_501._Benchmark.benchmark_Cluster_501":
  179368.969 ±(99.9%) 1829.033 ops/s [Average]
  (min, avg, max) = (173566.404, 179368.969, 183976.102), stdev = 2737.610
  CI (99.9%): [177539.937, 181198.002] (assumes normal distribution)


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_501._Benchmark.benchmark_Cluster_501  thrpt   30  179368.969 ± 1829.033  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_502._Benchmark.benchmark_Cluster_502$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_502._Benchmark.benchmark_Cluster_502

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 12406.553 ops/s
# Warmup Iteration   2: 64365.615 ops/s
# Warmup Iteration   3: 88513.268 ops/s
# Warmup Iteration   4: 89234.294 ops/s
# Warmup Iteration   5: 152007.938 ops/s
# Warmup Iteration   6: 172865.828 ops/s
# Warmup Iteration   7: 172972.731 ops/s
# Warmup Iteration   8: 171159.463 ops/s
# Warmup Iteration   9: 172705.540 ops/s
# Warmup Iteration  10: 172867.913 ops/s
# Warmup Iteration  11: 172062.350 ops/s
# Warmup Iteration  12: 171949.863 ops/s
# Warmup Iteration  13: 171605.222 ops/s
# Warmup Iteration  14: 125860.413 ops/s
# Warmup Iteration  15: 161406.942 ops/s
# Warmup Iteration  16: 172510.525 ops/s
# Warmup Iteration  17: 175035.785 ops/s
# Warmup Iteration  18: 174806.078 ops/s
# Warmup Iteration  19: 174850.948 ops/s
# Warmup Iteration  20: 174726.333 ops/s
# Warmup Iteration  21: 174772.025 ops/s
# Warmup Iteration  22: 174808.875 ops/s
# Warmup Iteration  23: 174916.028 ops/s
# Warmup Iteration  24: 174511.873 ops/s
# Warmup Iteration  25: 175056.367 ops/s
# Warmup Iteration  26: 175211.116 ops/s
# Warmup Iteration  27: 174979.944 ops/s
# Warmup Iteration  28: 175499.949 ops/s
# Warmup Iteration  29: 175658.361 ops/s
# Warmup Iteration  30: 175772.175 ops/s
Iteration   1: 174992.504 ops/s
Iteration   2: 175832.445 ops/s
Iteration   3: 175574.342 ops/s
Iteration   4: 175467.826 ops/s
Iteration   5: 175547.146 ops/s
Iteration   6: 175623.513 ops/s
Iteration   7: 175671.132 ops/s
Iteration   8: 175643.274 ops/s
Iteration   9: 175597.480 ops/s
Iteration  10: 174693.941 ops/s
Iteration  11: 175248.501 ops/s
Iteration  12: 175480.063 ops/s
Iteration  13: 175262.875 ops/s
Iteration  14: 175209.022 ops/s
Iteration  15: 175371.117 ops/s
Iteration  16: 175271.498 ops/s
Iteration  17: 174826.629 ops/s
Iteration  18: 175332.932 ops/s
Iteration  19: 175632.207 ops/s
Iteration  20: 175613.807 ops/s
Iteration  21: 174862.171 ops/s
Iteration  22: 174825.109 ops/s
Iteration  23: 175062.604 ops/s
Iteration  24: 175169.546 ops/s
Iteration  25: 175219.341 ops/s
Iteration  26: 175067.044 ops/s
Iteration  27: 175453.205 ops/s
Iteration  28: 175703.498 ops/s
Iteration  29: 175681.473 ops/s
Iteration  30: 174937.387 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_502._Benchmark.benchmark_Cluster_502":
  175329.121 ±(99.9%) 208.799 ops/s [Average]
  (min, avg, max) = (174693.941, 175329.121, 175832.445), stdev = 312.521
  CI (99.9%): [175120.322, 175537.921] (assumes normal distribution)


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_502._Benchmark.benchmark_Cluster_502  thrpt   30  175329.121 ± 208.799  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_503._Benchmark.benchmark_Cluster_503$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_503._Benchmark.benchmark_Cluster_503

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 96032.788 ops/s
# Warmup Iteration   2: 126284.022 ops/s
# Warmup Iteration   3: 142337.228 ops/s
# Warmup Iteration   4: 212229.309 ops/s
# Warmup Iteration   5: 210408.897 ops/s
# Warmup Iteration   6: 208481.647 ops/s
# Warmup Iteration   7: 211945.328 ops/s
# Warmup Iteration   8: 212194.861 ops/s
# Warmup Iteration   9: 210285.779 ops/s
# Warmup Iteration  10: 212579.883 ops/s
# Warmup Iteration  11: 211283.786 ops/s
# Warmup Iteration  12: 212104.744 ops/s
# Warmup Iteration  13: 139232.020 ops/s
# Warmup Iteration  14: 212470.503 ops/s
# Warmup Iteration  15: 212405.586 ops/s
# Warmup Iteration  16: 212459.618 ops/s
# Warmup Iteration  17: 216555.863 ops/s
# Warmup Iteration  18: 215572.971 ops/s
# Warmup Iteration  19: 216464.090 ops/s
# Warmup Iteration  20: 215184.021 ops/s
# Warmup Iteration  21: 215798.284 ops/s
# Warmup Iteration  22: 215761.704 ops/s
# Warmup Iteration  23: 216169.763 ops/s
# Warmup Iteration  24: 215983.006 ops/s
# Warmup Iteration  25: 215465.070 ops/s
# Warmup Iteration  26: 215843.958 ops/s
# Warmup Iteration  27: 216118.240 ops/s
# Warmup Iteration  28: 215830.024 ops/s
# Warmup Iteration  29: 215700.144 ops/s
# Warmup Iteration  30: 215491.407 ops/s
Iteration   1: 215515.725 ops/s
Iteration   2: 215873.305 ops/s
Iteration   3: 215615.545 ops/s
Iteration   4: 215561.579 ops/s
Iteration   5: 216137.521 ops/s
Iteration   6: 215962.031 ops/s
Iteration   7: 214974.500 ops/s
Iteration   8: 216137.773 ops/s
Iteration   9: 216248.816 ops/s
Iteration  10: 215772.502 ops/s
Iteration  11: 213370.774 ops/s
Iteration  12: 215965.050 ops/s
Iteration  13: 214481.404 ops/s
Iteration  14: 194069.067 ops/s
Iteration  15: 183887.792 ops/s
Iteration  16: 189853.951 ops/s
Iteration  17: 188527.763 ops/s
Iteration  18: 187516.345 ops/s
Iteration  19: 188378.829 ops/s
Iteration  20: 192612.466 ops/s
Iteration  21: 188413.689 ops/s
Iteration  22: 190819.044 ops/s
Iteration  23: 190309.573 ops/s
Iteration  24: 188220.981 ops/s
Iteration  25: 192015.985 ops/s
Iteration  26: 182303.731 ops/s
Iteration  27: 189723.462 ops/s
Iteration  28: 188452.280 ops/s
Iteration  29: 189601.469 ops/s
Iteration  30: 188777.374 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_503._Benchmark.benchmark_Cluster_503":
  200503.344 ±(99.9%) 9034.712 ops/s [Average]
  (min, avg, max) = (182303.731, 200503.344, 216248.816), stdev = 13522.733
  CI (99.9%): [191468.632, 209538.056] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_503._Benchmark.benchmark_Cluster_503  thrpt   30  200503.344 ± 9034.712  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_504._Benchmark.benchmark_Cluster_504$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_504._Benchmark.benchmark_Cluster_504

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 1766.410 ops/s
# Warmup Iteration   2: 28414.812 ops/s
# Warmup Iteration   3: 64710.468 ops/s
# Warmup Iteration   4: 101466.576 ops/s
# Warmup Iteration   5: 155130.959 ops/s
# Warmup Iteration   6: 158025.329 ops/s
# Warmup Iteration   7: 161427.735 ops/s
# Warmup Iteration   8: 161202.109 ops/s
# Warmup Iteration   9: 159327.908 ops/s
# Warmup Iteration  10: 101771.228 ops/s
# Warmup Iteration  11: 162230.525 ops/s
# Warmup Iteration  12: 161145.064 ops/s
# Warmup Iteration  13: 163229.883 ops/s
# Warmup Iteration  14: 161150.411 ops/s
# Warmup Iteration  15: 162310.381 ops/s
# Warmup Iteration  16: 161984.377 ops/s
# Warmup Iteration  17: 162029.678 ops/s
# Warmup Iteration  18: 165110.628 ops/s
# Warmup Iteration  19: 162973.583 ops/s
# Warmup Iteration  20: 163056.369 ops/s
# Warmup Iteration  21: 163483.530 ops/s
# Warmup Iteration  22: 162995.929 ops/s
# Warmup Iteration  23: 162429.498 ops/s
# Warmup Iteration  24: 161048.814 ops/s
# Warmup Iteration  25: 162078.055 ops/s
# Warmup Iteration  26: 163209.371 ops/s
# Warmup Iteration  27: 163586.283 ops/s
# Warmup Iteration  28: 164332.428 ops/s
# Warmup Iteration  29: 165313.649 ops/s
# Warmup Iteration  30: 161010.851 ops/s
Iteration   1: 163487.965 ops/s
Iteration   2: 158359.479 ops/s
Iteration   3: 162738.432 ops/s
Iteration   4: 162195.714 ops/s
Iteration   5: 160513.195 ops/s
Iteration   6: 163870.812 ops/s
Iteration   7: 162780.333 ops/s
Iteration   8: 166024.294 ops/s
Iteration   9: 162992.989 ops/s
Iteration  10: 160189.285 ops/s
Iteration  11: 165069.229 ops/s
Iteration  12: 153917.983 ops/s
Iteration  13: 162791.943 ops/s
Iteration  14: 160058.082 ops/s
Iteration  15: 161194.026 ops/s
Iteration  16: 160466.324 ops/s
Iteration  17: 163902.632 ops/s
Iteration  18: 165467.709 ops/s
Iteration  19: 164419.029 ops/s
Iteration  20: 161305.283 ops/s
Iteration  21: 161587.357 ops/s
Iteration  22: 164036.165 ops/s
Iteration  23: 157364.818 ops/s
Iteration  24: 161674.776 ops/s
Iteration  25: 164841.000 ops/s
Iteration  26: 162325.032 ops/s
Iteration  27: 160781.103 ops/s
Iteration  28: 163614.125 ops/s
Iteration  29: 163526.326 ops/s
Iteration  30: 161485.756 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_504._Benchmark.benchmark_Cluster_504":
  162099.373 ±(99.9%) 1698.480 ops/s [Average]
  (min, avg, max) = (153917.983, 162099.373, 166024.294), stdev = 2542.205
  CI (99.9%): [160400.893, 163797.853] (assumes normal distribution)


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_504._Benchmark.benchmark_Cluster_504  thrpt   30  162099.373 ± 1698.480  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_505._Benchmark.benchmark_Cluster_505$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_505._Benchmark.benchmark_Cluster_505

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 3113.649 ops/s
# Warmup Iteration   2: 39001.574 ops/s
# Warmup Iteration   3: 78527.318 ops/s
# Warmup Iteration   4: 90819.880 ops/s
# Warmup Iteration   5: 146503.143 ops/s
# Warmup Iteration   6: 149751.560 ops/s
# Warmup Iteration   7: 146929.993 ops/s
# Warmup Iteration   8: 148925.861 ops/s
# Warmup Iteration   9: 148686.903 ops/s
# Warmup Iteration  10: 149388.369 ops/s
# Warmup Iteration  11: 149134.580 ops/s
# Warmup Iteration  12: 95168.652 ops/s
# Warmup Iteration  13: 150741.698 ops/s
# Warmup Iteration  14: 149315.655 ops/s
# Warmup Iteration  15: 148790.975 ops/s
# Warmup Iteration  16: 159251.761 ops/s
# Warmup Iteration  17: 170627.351 ops/s
# Warmup Iteration  18: 170460.890 ops/s
# Warmup Iteration  19: 170456.608 ops/s
# Warmup Iteration  20: 170966.661 ops/s
# Warmup Iteration  21: 170812.308 ops/s
# Warmup Iteration  22: 170860.483 ops/s
# Warmup Iteration  23: 170701.179 ops/s
# Warmup Iteration  24: 171126.419 ops/s
# Warmup Iteration  25: 170608.081 ops/s
# Warmup Iteration  26: 170290.688 ops/s
# Warmup Iteration  27: 170761.638 ops/s
# Warmup Iteration  28: 170494.757 ops/s
# Warmup Iteration  29: 170641.208 ops/s
# Warmup Iteration  30: 171296.004 ops/s
Iteration   1: 170921.266 ops/s
Iteration   2: 170946.953 ops/s
Iteration   3: 170896.303 ops/s
Iteration   4: 171184.237 ops/s
Iteration   5: 171324.767 ops/s
Iteration   6: 170239.285 ops/s
Iteration   7: 170706.161 ops/s
Iteration   8: 171172.124 ops/s
Iteration   9: 170793.313 ops/s
Iteration  10: 171569.068 ops/s
Iteration  11: 171183.569 ops/s
Iteration  12: 170577.957 ops/s
Iteration  13: 171167.686 ops/s
Iteration  14: 170964.452 ops/s
Iteration  15: 170453.781 ops/s
Iteration  16: 171009.664 ops/s
Iteration  17: 170868.385 ops/s
Iteration  18: 171329.576 ops/s
Iteration  19: 171153.288 ops/s
Iteration  20: 170892.600 ops/s
Iteration  21: 171232.497 ops/s
Iteration  22: 170798.565 ops/s
Iteration  23: 170879.413 ops/s
Iteration  24: 171395.911 ops/s
Iteration  25: 171000.101 ops/s
Iteration  26: 171237.645 ops/s
Iteration  27: 171388.273 ops/s
Iteration  28: 171507.044 ops/s
Iteration  29: 171411.990 ops/s
Iteration  30: 171427.570 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_505._Benchmark.benchmark_Cluster_505":
  171054.448 ±(99.9%) 211.817 ops/s [Average]
  (min, avg, max) = (170239.285, 171054.448, 171569.068), stdev = 317.038
  CI (99.9%): [170842.631, 171266.265] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_505._Benchmark.benchmark_Cluster_505  thrpt   30  171054.448 ± 211.817  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_506._Benchmark.benchmark_Cluster_506$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_506._Benchmark.benchmark_Cluster_506

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 92001.786 ops/s
# Warmup Iteration   2: 107671.652 ops/s
# Warmup Iteration   3: 140556.055 ops/s
# Warmup Iteration   4: 182252.979 ops/s
# Warmup Iteration   5: 182657.027 ops/s
# Warmup Iteration   6: 180286.901 ops/s
# Warmup Iteration   7: 181576.723 ops/s
# Warmup Iteration   8: 181977.851 ops/s
# Warmup Iteration   9: 182005.182 ops/s
# Warmup Iteration  10: 182521.066 ops/s
# Warmup Iteration  11: 182932.254 ops/s
# Warmup Iteration  12: 132650.492 ops/s
# Warmup Iteration  13: 174769.019 ops/s
# Warmup Iteration  14: 182144.908 ops/s
# Warmup Iteration  15: 182530.672 ops/s
# Warmup Iteration  16: 182506.903 ops/s
# Warmup Iteration  17: 189543.429 ops/s
# Warmup Iteration  18: 190086.198 ops/s
# Warmup Iteration  19: 190061.732 ops/s
# Warmup Iteration  20: 190290.077 ops/s
# Warmup Iteration  21: 190258.337 ops/s
# Warmup Iteration  22: 190177.116 ops/s
# Warmup Iteration  23: 190114.055 ops/s
# Warmup Iteration  24: 190053.404 ops/s
# Warmup Iteration  25: 190400.841 ops/s
# Warmup Iteration  26: 190574.028 ops/s
# Warmup Iteration  27: 190544.076 ops/s
# Warmup Iteration  28: 189596.258 ops/s
# Warmup Iteration  29: 190407.284 ops/s
# Warmup Iteration  30: 190214.509 ops/s
Iteration   1: 190173.172 ops/s
Iteration   2: 190891.981 ops/s
Iteration   3: 190564.981 ops/s
Iteration   4: 190353.494 ops/s
Iteration   5: 189749.584 ops/s
Iteration   6: 189418.604 ops/s
Iteration   7: 190361.343 ops/s
Iteration   8: 189864.261 ops/s
Iteration   9: 190184.865 ops/s
Iteration  10: 190051.031 ops/s
Iteration  11: 190355.129 ops/s
Iteration  12: 190208.882 ops/s
Iteration  13: 190430.595 ops/s
Iteration  14: 190188.249 ops/s
Iteration  15: 190598.176 ops/s
Iteration  16: 190541.213 ops/s
Iteration  17: 189927.689 ops/s
Iteration  18: 189412.342 ops/s
Iteration  19: 190102.143 ops/s
Iteration  20: 190194.295 ops/s
Iteration  21: 190148.843 ops/s
Iteration  22: 190314.785 ops/s
Iteration  23: 189934.207 ops/s
Iteration  24: 189775.385 ops/s
Iteration  25: 189809.906 ops/s
Iteration  26: 190484.789 ops/s
Iteration  27: 190614.150 ops/s
Iteration  28: 189125.639 ops/s
Iteration  29: 190472.100 ops/s
Iteration  30: 190353.626 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_506._Benchmark.benchmark_Cluster_506":
  190153.515 ±(99.9%) 263.946 ops/s [Average]
  (min, avg, max) = (189125.639, 190153.515, 190891.981), stdev = 395.062
  CI (99.9%): [189889.569, 190417.462] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_506._Benchmark.benchmark_Cluster_506  thrpt   30  190153.515 ± 263.946  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_507._Benchmark.benchmark_Cluster_507$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_507._Benchmark.benchmark_Cluster_507

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 14024.214 ops/s
# Warmup Iteration   2: 35410.522 ops/s
# Warmup Iteration   3: 69783.474 ops/s
# Warmup Iteration   4: 96819.801 ops/s
# Warmup Iteration   5: 141513.731 ops/s
# Warmup Iteration   6: 141092.462 ops/s
# Warmup Iteration   7: 143875.629 ops/s
# Warmup Iteration   8: 142064.166 ops/s
# Warmup Iteration   9: 142676.548 ops/s
# Warmup Iteration  10: 140746.692 ops/s
# Warmup Iteration  11: 131195.518 ops/s
# Warmup Iteration  12: 104316.484 ops/s
# Warmup Iteration  13: 142503.024 ops/s
# Warmup Iteration  14: 143672.103 ops/s
# Warmup Iteration  15: 143718.197 ops/s
# Warmup Iteration  16: 143637.411 ops/s
# Warmup Iteration  17: 142140.736 ops/s
# Warmup Iteration  18: 143908.202 ops/s
# Warmup Iteration  19: 145213.599 ops/s
# Warmup Iteration  20: 143486.957 ops/s
# Warmup Iteration  21: 143711.804 ops/s
# Warmup Iteration  22: 143276.965 ops/s
# Warmup Iteration  23: 142316.087 ops/s
# Warmup Iteration  24: 142513.016 ops/s
# Warmup Iteration  25: 144899.029 ops/s
# Warmup Iteration  26: 143384.566 ops/s
# Warmup Iteration  27: 124310.660 ops/s
# Warmup Iteration  28: 140575.995 ops/s
# Warmup Iteration  29: 143731.887 ops/s
# Warmup Iteration  30: 143828.657 ops/s
Iteration   1: 143789.493 ops/s
Iteration   2: 142184.828 ops/s
Iteration   3: 142906.105 ops/s
Iteration   4: 143269.225 ops/s
Iteration   5: 144115.420 ops/s
Iteration   6: 145767.493 ops/s
Iteration   7: 143143.013 ops/s
Iteration   8: 143763.710 ops/s
Iteration   9: 147794.442 ops/s
Iteration  10: 140377.098 ops/s
Iteration  11: 144017.326 ops/s
Iteration  12: 140801.814 ops/s
Iteration  13: 146365.994 ops/s
Iteration  14: 142720.261 ops/s
Iteration  15: 139268.925 ops/s
Iteration  16: 144400.285 ops/s
Iteration  17: 141811.709 ops/s
Iteration  18: 142279.389 ops/s
Iteration  19: 143295.508 ops/s
Iteration  20: 144309.074 ops/s
Iteration  21: 139955.422 ops/s
Iteration  22: 143346.901 ops/s
Iteration  23: 143676.003 ops/s
Iteration  24: 142181.331 ops/s
Iteration  25: 145292.114 ops/s
Iteration  26: 144804.006 ops/s
Iteration  27: 144803.522 ops/s
Iteration  28: 142442.087 ops/s
Iteration  29: 141131.389 ops/s
Iteration  30: 144496.791 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_507._Benchmark.benchmark_Cluster_507":
  143283.689 ±(99.9%) 1262.413 ops/s [Average]
  (min, avg, max) = (139268.925, 143283.689, 147794.442), stdev = 1889.520
  CI (99.9%): [142021.276, 144546.102] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_507._Benchmark.benchmark_Cluster_507  thrpt   30  143283.689 ± 1262.413  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_508._Benchmark.benchmark_Cluster_508$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_508._Benchmark.benchmark_Cluster_508

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 18609.095 ops/s
# Warmup Iteration   2: 78488.560 ops/s
# Warmup Iteration   3: 90174.752 ops/s
# Warmup Iteration   4: 96143.299 ops/s
# Warmup Iteration   5: 96732.085 ops/s
# Warmup Iteration   6: 99976.564 ops/s
# Warmup Iteration   7: 131363.881 ops/s
# Warmup Iteration   8: 127244.615 ops/s
# Warmup Iteration   9: 126667.953 ops/s
# Warmup Iteration  10: 128029.227 ops/s
# Warmup Iteration  11: 130756.786 ops/s
# Warmup Iteration  12: 131549.431 ops/s
# Warmup Iteration  13: 129408.125 ops/s
# Warmup Iteration  14: 130756.833 ops/s
# Warmup Iteration  15: 130050.478 ops/s
# Warmup Iteration  16: 131891.599 ops/s
# Warmup Iteration  17: 132388.685 ops/s
# Warmup Iteration  18: 133471.704 ops/s
# Warmup Iteration  19: 132019.548 ops/s
# Warmup Iteration  20: 131890.572 ops/s
# Warmup Iteration  21: 132074.082 ops/s
# Warmup Iteration  22: 132988.606 ops/s
# Warmup Iteration  23: 132395.690 ops/s
# Warmup Iteration  24: 130659.707 ops/s
# Warmup Iteration  25: 133319.812 ops/s
# Warmup Iteration  26: 132327.316 ops/s
# Warmup Iteration  27: 123878.794 ops/s
# Warmup Iteration  28: 112272.570 ops/s
# Warmup Iteration  29: 147633.785 ops/s
# Warmup Iteration  30: 150975.241 ops/s
Iteration   1: 151072.078 ops/s
Iteration   2: 151309.110 ops/s
Iteration   3: 151155.465 ops/s
Iteration   4: 151032.522 ops/s
Iteration   5: 150830.281 ops/s
Iteration   6: 151050.734 ops/s
Iteration   7: 151082.558 ops/s
Iteration   8: 150987.244 ops/s
Iteration   9: 150884.687 ops/s
Iteration  10: 151267.830 ops/s
Iteration  11: 151359.815 ops/s
Iteration  12: 151125.612 ops/s
Iteration  13: 150495.997 ops/s
Iteration  14: 151220.369 ops/s
Iteration  15: 151360.430 ops/s
Iteration  16: 151400.089 ops/s
Iteration  17: 150876.099 ops/s
Iteration  18: 151112.426 ops/s
Iteration  19: 151208.805 ops/s
Iteration  20: 151375.898 ops/s
Iteration  21: 150898.770 ops/s
Iteration  22: 150823.805 ops/s
Iteration  23: 150938.846 ops/s
Iteration  24: 151273.295 ops/s
Iteration  25: 150711.539 ops/s
Iteration  26: 151305.797 ops/s
Iteration  27: 150847.994 ops/s
Iteration  28: 151188.562 ops/s
Iteration  29: 151053.407 ops/s
Iteration  30: 151437.749 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_508._Benchmark.benchmark_Cluster_508":
  151089.594 ±(99.9%) 152.395 ops/s [Average]
  (min, avg, max) = (150495.997, 151089.594, 151437.749), stdev = 228.097
  CI (99.9%): [150937.199, 151241.989] (assumes normal distribution)


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_508._Benchmark.benchmark_Cluster_508  thrpt   30  151089.594 ± 152.395  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_509._Benchmark.benchmark_Cluster_509$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_509._Benchmark.benchmark_Cluster_509

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 71788.548 ops/s
# Warmup Iteration   2: 92973.707 ops/s
# Warmup Iteration   3: 100794.491 ops/s
# Warmup Iteration   4: 154110.485 ops/s
# Warmup Iteration   5: 154285.912 ops/s
# Warmup Iteration   6: 154680.894 ops/s
# Warmup Iteration   7: 152674.864 ops/s
# Warmup Iteration   8: 154320.144 ops/s
# Warmup Iteration   9: 154745.236 ops/s
# Warmup Iteration  10: 155015.034 ops/s
# Warmup Iteration  11: 154998.705 ops/s
# Warmup Iteration  12: 154477.296 ops/s
# Warmup Iteration  13: 133158.406 ops/s
# Warmup Iteration  14: 122590.008 ops/s
# Warmup Iteration  15: 153681.161 ops/s
# Warmup Iteration  16: 153085.083 ops/s
# Warmup Iteration  17: 161240.871 ops/s
# Warmup Iteration  18: 160876.754 ops/s
# Warmup Iteration  19: 160986.632 ops/s
# Warmup Iteration  20: 160819.340 ops/s
# Warmup Iteration  21: 160827.830 ops/s
# Warmup Iteration  22: 160669.368 ops/s
# Warmup Iteration  23: 161262.831 ops/s
# Warmup Iteration  24: 160874.578 ops/s
# Warmup Iteration  25: 160779.789 ops/s
# Warmup Iteration  26: 160596.531 ops/s
# Warmup Iteration  27: 160782.106 ops/s
# Warmup Iteration  28: 160081.234 ops/s
# Warmup Iteration  29: 160441.062 ops/s
# Warmup Iteration  30: 160521.193 ops/s
Iteration   1: 160614.364 ops/s
Iteration   2: 161184.093 ops/s
Iteration   3: 161047.141 ops/s
Iteration   4: 160530.721 ops/s
Iteration   5: 161136.009 ops/s
Iteration   6: 160752.172 ops/s
Iteration   7: 160828.715 ops/s
Iteration   8: 161212.880 ops/s
Iteration   9: 161496.025 ops/s
Iteration  10: 160269.578 ops/s
Iteration  11: 159008.691 ops/s
Iteration  12: 160512.536 ops/s
Iteration  13: 160798.579 ops/s
Iteration  14: 160751.922 ops/s
Iteration  15: 160822.292 ops/s
Iteration  16: 160613.354 ops/s
Iteration  17: 161098.559 ops/s
Iteration  18: 160830.645 ops/s
Iteration  19: 160784.061 ops/s
Iteration  20: 160595.397 ops/s
Iteration  21: 160662.056 ops/s
Iteration  22: 160587.441 ops/s
Iteration  23: 161162.123 ops/s
Iteration  24: 160731.427 ops/s
Iteration  25: 160077.682 ops/s
Iteration  26: 160184.548 ops/s
Iteration  27: 160347.511 ops/s
Iteration  28: 160490.036 ops/s
Iteration  29: 159822.727 ops/s
Iteration  30: 160558.511 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_509._Benchmark.benchmark_Cluster_509":
  160650.393 ±(99.9%) 318.064 ops/s [Average]
  (min, avg, max) = (159008.691, 160650.393, 161496.025), stdev = 476.063
  CI (99.9%): [160332.330, 160968.457] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_509._Benchmark.benchmark_Cluster_509  thrpt   30  160650.393 ± 318.064  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_51._Benchmark.benchmark_Cluster_51$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_51._Benchmark.benchmark_Cluster_51

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 55759.838 ops/s
# Warmup Iteration   2: 95803.023 ops/s
# Warmup Iteration   3: 110072.302 ops/s
# Warmup Iteration   4: 170693.301 ops/s
# Warmup Iteration   5: 169351.536 ops/s
# Warmup Iteration   6: 168415.975 ops/s
# Warmup Iteration   7: 170136.587 ops/s
# Warmup Iteration   8: 169396.974 ops/s
# Warmup Iteration   9: 163486.641 ops/s
# Warmup Iteration  10: 169083.575 ops/s
# Warmup Iteration  11: 158496.050 ops/s
# Warmup Iteration  12: 89727.234 ops/s
# Warmup Iteration  13: 149472.630 ops/s
# Warmup Iteration  14: 148136.572 ops/s
# Warmup Iteration  15: 150594.828 ops/s
# Warmup Iteration  16: 149017.865 ops/s
# Warmup Iteration  17: 153306.045 ops/s
# Warmup Iteration  18: 155006.734 ops/s
# Warmup Iteration  19: 153280.826 ops/s
# Warmup Iteration  20: 156367.143 ops/s
# Warmup Iteration  21: 152489.510 ops/s
# Warmup Iteration  22: 153888.090 ops/s
# Warmup Iteration  23: 152799.922 ops/s
# Warmup Iteration  24: 153514.065 ops/s
# Warmup Iteration  25: 155383.125 ops/s
# Warmup Iteration  26: 155184.932 ops/s
# Warmup Iteration  27: 153432.541 ops/s
# Warmup Iteration  28: 155264.158 ops/s
# Warmup Iteration  29: 153970.652 ops/s
# Warmup Iteration  30: 155059.080 ops/s
Iteration   1: 148871.661 ops/s
Iteration   2: 153382.751 ops/s
Iteration   3: 155175.390 ops/s
Iteration   4: 151715.057 ops/s
Iteration   5: 151608.733 ops/s
Iteration   6: 156356.047 ops/s
Iteration   7: 155488.226 ops/s
Iteration   8: 153702.212 ops/s
Iteration   9: 154829.543 ops/s
Iteration  10: 150033.658 ops/s
Iteration  11: 156885.548 ops/s
Iteration  12: 154389.397 ops/s
Iteration  13: 150597.551 ops/s
Iteration  14: 154071.343 ops/s
Iteration  15: 148294.647 ops/s
Iteration  16: 152758.214 ops/s
Iteration  17: 152561.621 ops/s
Iteration  18: 151632.254 ops/s
Iteration  19: 154427.598 ops/s
Iteration  20: 156085.425 ops/s
Iteration  21: 152508.056 ops/s
Iteration  22: 156197.495 ops/s
Iteration  23: 151532.353 ops/s
Iteration  24: 154877.290 ops/s
Iteration  25: 155034.607 ops/s
Iteration  26: 155144.159 ops/s
Iteration  27: 154054.504 ops/s
Iteration  28: 153053.211 ops/s
Iteration  29: 150447.098 ops/s
Iteration  30: 155199.427 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_51._Benchmark.benchmark_Cluster_51":
  153363.836 ±(99.9%) 1513.136 ops/s [Average]
  (min, avg, max) = (148294.647, 153363.836, 156885.548), stdev = 2264.791
  CI (99.9%): [151850.700, 154876.972] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    Mode  Cnt       Score      Error  Units
Cluster_51._Benchmark.benchmark_Cluster_51  thrpt   30  153363.836 ± 1513.136  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_510._Benchmark.benchmark_Cluster_510$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_510._Benchmark.benchmark_Cluster_510

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 4176.365 ops/s
# Warmup Iteration   2: 23710.272 ops/s
# Warmup Iteration   3: 62434.390 ops/s
# Warmup Iteration   4: 69053.616 ops/s
# Warmup Iteration   5: 91420.122 ops/s
# Warmup Iteration   6: 151343.105 ops/s
# Warmup Iteration   7: 153395.924 ops/s
# Warmup Iteration   8: 155755.323 ops/s
# Warmup Iteration   9: 149509.895 ops/s
# Warmup Iteration  10: 152378.122 ops/s
# Warmup Iteration  11: 153762.505 ops/s
# Warmup Iteration  12: 153109.100 ops/s
# Warmup Iteration  13: 155102.758 ops/s
# Warmup Iteration  14: 152098.784 ops/s
# Warmup Iteration  15: 139819.334 ops/s
# Warmup Iteration  16: 106911.092 ops/s
# Warmup Iteration  17: 155369.582 ops/s
# Warmup Iteration  18: 158158.703 ops/s
# Warmup Iteration  19: 155810.187 ops/s
# Warmup Iteration  20: 156082.524 ops/s
# Warmup Iteration  21: 141642.732 ops/s
# Warmup Iteration  22: 153054.184 ops/s
# Warmup Iteration  23: 157582.161 ops/s
# Warmup Iteration  24: 156336.751 ops/s
# Warmup Iteration  25: 157851.966 ops/s
# Warmup Iteration  26: 157043.822 ops/s
# Warmup Iteration  27: 154882.989 ops/s
# Warmup Iteration  28: 157914.088 ops/s
# Warmup Iteration  29: 156630.349 ops/s
# Warmup Iteration  30: 157527.238 ops/s
Iteration   1: 156876.976 ops/s
Iteration   2: 153058.506 ops/s
Iteration   3: 155467.693 ops/s
Iteration   4: 156909.480 ops/s
Iteration   5: 154995.541 ops/s
Iteration   6: 156355.562 ops/s
Iteration   7: 154402.202 ops/s
Iteration   8: 157123.237 ops/s
Iteration   9: 158900.657 ops/s
Iteration  10: 153761.994 ops/s
Iteration  11: 155820.958 ops/s
Iteration  12: 158777.531 ops/s
Iteration  13: 156019.221 ops/s
Iteration  14: 158820.539 ops/s
Iteration  15: 149041.054 ops/s
Iteration  16: 158655.395 ops/s
Iteration  17: 159567.511 ops/s
Iteration  18: 178898.110 ops/s
Iteration  19: 179337.600 ops/s
Iteration  20: 179795.742 ops/s
Iteration  21: 179879.437 ops/s
Iteration  22: 178973.561 ops/s
Iteration  23: 178992.919 ops/s
Iteration  24: 178439.922 ops/s
Iteration  25: 178867.403 ops/s
Iteration  26: 178886.835 ops/s
Iteration  27: 179142.852 ops/s
Iteration  28: 179799.247 ops/s
Iteration  29: 179905.645 ops/s
Iteration  30: 179378.247 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_510._Benchmark.benchmark_Cluster_510":
  166161.719 ±(99.9%) 7892.728 ops/s [Average]
  (min, avg, max) = (149041.054, 166161.719, 179905.645), stdev = 11813.464
  CI (99.9%): [158268.991, 174054.447] (assumes normal distribution)


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_510._Benchmark.benchmark_Cluster_510  thrpt   30  166161.719 ± 7892.728  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_511._Benchmark.benchmark_Cluster_511$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_511._Benchmark.benchmark_Cluster_511

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 60271.992 ops/s
# Warmup Iteration   2: 103435.571 ops/s
# Warmup Iteration   3: 223229.158 ops/s
# Warmup Iteration   4: 221102.486 ops/s
# Warmup Iteration   5: 223070.430 ops/s
# Warmup Iteration   6: 183969.630 ops/s
# Warmup Iteration   7: 193607.576 ops/s
# Warmup Iteration   8: 222672.542 ops/s
# Warmup Iteration   9: 222779.514 ops/s
# Warmup Iteration  10: 223777.237 ops/s
# Warmup Iteration  11: 223021.463 ops/s
# Warmup Iteration  12: 222442.931 ops/s
# Warmup Iteration  13: 222797.259 ops/s
# Warmup Iteration  14: 223811.382 ops/s
# Warmup Iteration  15: 223812.010 ops/s
# Warmup Iteration  16: 222788.100 ops/s
# Warmup Iteration  17: 222723.261 ops/s
# Warmup Iteration  18: 222439.860 ops/s
# Warmup Iteration  19: 222740.107 ops/s
# Warmup Iteration  20: 221843.763 ops/s
# Warmup Iteration  21: 222429.988 ops/s
# Warmup Iteration  22: 222524.323 ops/s
# Warmup Iteration  23: 222743.825 ops/s
# Warmup Iteration  24: 223309.380 ops/s
# Warmup Iteration  25: 222786.042 ops/s
# Warmup Iteration  26: 221835.214 ops/s
# Warmup Iteration  27: 222932.821 ops/s
# Warmup Iteration  28: 223667.386 ops/s
# Warmup Iteration  29: 222797.063 ops/s
# Warmup Iteration  30: 223300.010 ops/s
Iteration   1: 222158.479 ops/s
Iteration   2: 222820.871 ops/s
Iteration   3: 223552.678 ops/s
Iteration   4: 223486.804 ops/s
Iteration   5: 223724.031 ops/s
Iteration   6: 223436.644 ops/s
Iteration   7: 223858.229 ops/s
Iteration   8: 223531.415 ops/s
Iteration   9: 223507.070 ops/s
Iteration  10: 222336.735 ops/s
Iteration  11: 222389.105 ops/s
Iteration  12: 223623.354 ops/s
Iteration  13: 222604.033 ops/s
Iteration  14: 223166.026 ops/s
Iteration  15: 221633.635 ops/s
Iteration  16: 222970.103 ops/s
Iteration  17: 223647.055 ops/s
Iteration  18: 222536.022 ops/s
Iteration  19: 223203.480 ops/s
Iteration  20: 222328.852 ops/s
Iteration  21: 222882.938 ops/s
Iteration  22: 222487.957 ops/s
Iteration  23: 222724.865 ops/s
Iteration  24: 223624.368 ops/s
Iteration  25: 222722.566 ops/s
Iteration  26: 223189.084 ops/s
Iteration  27: 222426.315 ops/s
Iteration  28: 222753.060 ops/s
Iteration  29: 221910.026 ops/s
Iteration  30: 222178.221 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_511._Benchmark.benchmark_Cluster_511":
  222913.801 ±(99.9%) 402.745 ops/s [Average]
  (min, avg, max) = (221633.635, 222913.801, 223858.229), stdev = 602.810
  CI (99.9%): [222511.056, 223316.546] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_511._Benchmark.benchmark_Cluster_511  thrpt   30  222913.801 ± 402.745  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_512._Benchmark.benchmark_Cluster_512$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_512._Benchmark.benchmark_Cluster_512

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 51127.536 ops/s
# Warmup Iteration   2: 74964.611 ops/s
# Warmup Iteration   3: 171326.964 ops/s
# Warmup Iteration   4: 169940.425 ops/s
# Warmup Iteration   5: 171352.593 ops/s
# Warmup Iteration   6: 171005.110 ops/s
# Warmup Iteration   7: 113670.464 ops/s
# Warmup Iteration   8: 170936.778 ops/s
# Warmup Iteration   9: 171242.343 ops/s
# Warmup Iteration  10: 171533.250 ops/s
# Warmup Iteration  11: 171554.044 ops/s
# Warmup Iteration  12: 171400.826 ops/s
# Warmup Iteration  13: 171491.188 ops/s
# Warmup Iteration  14: 171210.657 ops/s
# Warmup Iteration  15: 170991.082 ops/s
# Warmup Iteration  16: 171372.508 ops/s
# Warmup Iteration  17: 171038.837 ops/s
# Warmup Iteration  18: 170889.377 ops/s
# Warmup Iteration  19: 170562.359 ops/s
# Warmup Iteration  20: 170600.742 ops/s
# Warmup Iteration  21: 170376.183 ops/s
# Warmup Iteration  22: 167541.724 ops/s
# Warmup Iteration  23: 148926.450 ops/s
# Warmup Iteration  24: 148135.494 ops/s
# Warmup Iteration  25: 148858.002 ops/s
# Warmup Iteration  26: 149831.446 ops/s
# Warmup Iteration  27: 147944.438 ops/s
# Warmup Iteration  28: 148662.030 ops/s
# Warmup Iteration  29: 148447.832 ops/s
# Warmup Iteration  30: 148861.812 ops/s
Iteration   1: 145837.436 ops/s
Iteration   2: 147967.711 ops/s
Iteration   3: 150248.951 ops/s
Iteration   4: 148947.801 ops/s
Iteration   5: 148004.083 ops/s
Iteration   6: 149154.940 ops/s
Iteration   7: 146605.311 ops/s
Iteration   8: 147461.358 ops/s
Iteration   9: 150147.043 ops/s
Iteration  10: 149656.133 ops/s
Iteration  11: 148655.790 ops/s
Iteration  12: 148922.446 ops/s
Iteration  13: 150082.336 ops/s
Iteration  14: 149048.844 ops/s
Iteration  15: 146284.874 ops/s
Iteration  16: 152763.366 ops/s
Iteration  17: 147807.287 ops/s
Iteration  18: 145809.982 ops/s
Iteration  19: 149298.966 ops/s
Iteration  20: 147595.644 ops/s
Iteration  21: 147801.515 ops/s
Iteration  22: 151307.757 ops/s
Iteration  23: 144969.398 ops/s
Iteration  24: 150285.534 ops/s
Iteration  25: 148910.401 ops/s
Iteration  26: 147485.954 ops/s
Iteration  27: 146862.643 ops/s
Iteration  28: 148222.428 ops/s
Iteration  29: 149035.213 ops/s
Iteration  30: 150949.543 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_512._Benchmark.benchmark_Cluster_512":
  148537.690 ±(99.9%) 1173.789 ops/s [Average]
  (min, avg, max) = (144969.398, 148537.690, 152763.366), stdev = 1756.872
  CI (99.9%): [147363.901, 149711.478] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_512._Benchmark.benchmark_Cluster_512  thrpt   30  148537.690 ± 1173.789  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_513._Benchmark.benchmark_Cluster_513$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_513._Benchmark.benchmark_Cluster_513

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 2753.077 ops/s
# Warmup Iteration   2: 17587.950 ops/s
# Warmup Iteration   3: 38110.837 ops/s
# Warmup Iteration   4: 58743.779 ops/s
# Warmup Iteration   5: 141008.736 ops/s
# Warmup Iteration   6: 141993.086 ops/s
# Warmup Iteration   7: 143538.922 ops/s
# Warmup Iteration   8: 145949.910 ops/s
# Warmup Iteration   9: 142335.676 ops/s
# Warmup Iteration  10: 89025.062 ops/s
# Warmup Iteration  11: 144685.472 ops/s
# Warmup Iteration  12: 147020.620 ops/s
# Warmup Iteration  13: 148391.275 ops/s
# Warmup Iteration  14: 145450.594 ops/s
# Warmup Iteration  15: 147429.132 ops/s
# Warmup Iteration  16: 146769.661 ops/s
# Warmup Iteration  17: 146437.698 ops/s
# Warmup Iteration  18: 145471.941 ops/s
# Warmup Iteration  19: 147429.349 ops/s
# Warmup Iteration  20: 146505.229 ops/s
# Warmup Iteration  21: 147323.700 ops/s
# Warmup Iteration  22: 145658.760 ops/s
# Warmup Iteration  23: 146528.312 ops/s
# Warmup Iteration  24: 146298.555 ops/s
# Warmup Iteration  25: 145501.512 ops/s
# Warmup Iteration  26: 147973.461 ops/s
# Warmup Iteration  27: 145686.550 ops/s
# Warmup Iteration  28: 147523.300 ops/s
# Warmup Iteration  29: 144605.741 ops/s
# Warmup Iteration  30: 146879.961 ops/s
Iteration   1: 146691.817 ops/s
Iteration   2: 141387.325 ops/s
Iteration   3: 147630.781 ops/s
Iteration   4: 144708.254 ops/s
Iteration   5: 147300.184 ops/s
Iteration   6: 147906.236 ops/s
Iteration   7: 147984.749 ops/s
Iteration   8: 143320.824 ops/s
Iteration   9: 140724.554 ops/s
Iteration  10: 148914.988 ops/s
Iteration  11: 144345.392 ops/s
Iteration  12: 145951.424 ops/s
Iteration  13: 145867.083 ops/s
Iteration  14: 148752.858 ops/s
Iteration  15: 141291.838 ops/s
Iteration  16: 145521.474 ops/s
Iteration  17: 146973.151 ops/s
Iteration  18: 144314.134 ops/s
Iteration  19: 148292.976 ops/s
Iteration  20: 141898.270 ops/s
Iteration  21: 148316.238 ops/s
Iteration  22: 147602.506 ops/s
Iteration  23: 145681.101 ops/s
Iteration  24: 144178.718 ops/s
Iteration  25: 148601.847 ops/s
Iteration  26: 150120.517 ops/s
Iteration  27: 145876.500 ops/s
Iteration  28: 148943.996 ops/s
Iteration  29: 142253.368 ops/s
Iteration  30: 147183.592 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_513._Benchmark.benchmark_Cluster_513":
  145951.223 ±(99.9%) 1739.592 ops/s [Average]
  (min, avg, max) = (140724.554, 145951.223, 150120.517), stdev = 2603.740
  CI (99.9%): [144211.631, 147690.815] (assumes normal distribution)


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_513._Benchmark.benchmark_Cluster_513  thrpt   30  145951.223 ± 1739.592  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_514._Benchmark.benchmark_Cluster_514$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_514._Benchmark.benchmark_Cluster_514

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 2052.795 ops/s
# Warmup Iteration   2: 28994.268 ops/s
# Warmup Iteration   3: 56331.141 ops/s
# Warmup Iteration   4: 116659.362 ops/s
# Warmup Iteration   5: 158351.235 ops/s
# Warmup Iteration   6: 160335.963 ops/s
# Warmup Iteration   7: 160091.162 ops/s
# Warmup Iteration   8: 159835.731 ops/s
# Warmup Iteration   9: 106673.079 ops/s
# Warmup Iteration  10: 159938.515 ops/s
# Warmup Iteration  11: 160232.700 ops/s
# Warmup Iteration  12: 160475.900 ops/s
# Warmup Iteration  13: 160592.288 ops/s
# Warmup Iteration  14: 160308.021 ops/s
# Warmup Iteration  15: 159996.066 ops/s
# Warmup Iteration  16: 160074.070 ops/s
# Warmup Iteration  17: 160315.942 ops/s
# Warmup Iteration  18: 159880.134 ops/s
# Warmup Iteration  19: 159395.598 ops/s
# Warmup Iteration  20: 159325.045 ops/s
# Warmup Iteration  21: 159018.351 ops/s
# Warmup Iteration  22: 160441.525 ops/s
# Warmup Iteration  23: 160644.949 ops/s
# Warmup Iteration  24: 160524.464 ops/s
# Warmup Iteration  25: 160889.245 ops/s
# Warmup Iteration  26: 160635.737 ops/s
# Warmup Iteration  27: 160351.640 ops/s
# Warmup Iteration  28: 159646.012 ops/s
# Warmup Iteration  29: 160138.553 ops/s
# Warmup Iteration  30: 160315.173 ops/s
Iteration   1: 159029.820 ops/s
Iteration   2: 160273.552 ops/s
Iteration   3: 159434.309 ops/s
Iteration   4: 160007.704 ops/s
Iteration   5: 160423.076 ops/s
Iteration   6: 159639.325 ops/s
Iteration   7: 160318.414 ops/s
Iteration   8: 160998.058 ops/s
Iteration   9: 160605.682 ops/s
Iteration  10: 160470.964 ops/s
Iteration  11: 160223.376 ops/s
Iteration  12: 160065.777 ops/s
Iteration  13: 160479.959 ops/s
Iteration  14: 159501.645 ops/s
Iteration  15: 160002.304 ops/s
Iteration  16: 159010.111 ops/s
Iteration  17: 160526.745 ops/s
Iteration  18: 160828.756 ops/s
Iteration  19: 159897.564 ops/s
Iteration  20: 160286.004 ops/s
Iteration  21: 160300.479 ops/s
Iteration  22: 160427.978 ops/s
Iteration  23: 160510.351 ops/s
Iteration  24: 160366.198 ops/s
Iteration  25: 159802.025 ops/s
Iteration  26: 160491.068 ops/s
Iteration  27: 160026.233 ops/s
Iteration  28: 160703.277 ops/s
Iteration  29: 160370.387 ops/s
Iteration  30: 160434.446 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_514._Benchmark.benchmark_Cluster_514":
  160181.853 ±(99.9%) 320.614 ops/s [Average]
  (min, avg, max) = (159010.111, 160181.853, 160998.058), stdev = 479.880
  CI (99.9%): [159861.239, 160502.467] (assumes normal distribution)


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_514._Benchmark.benchmark_Cluster_514  thrpt   30  160181.853 ± 320.614  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_515._Benchmark.benchmark_Cluster_515$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_515._Benchmark.benchmark_Cluster_515

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 65573.132 ops/s
# Warmup Iteration   2: 91758.911 ops/s
# Warmup Iteration   3: 195776.826 ops/s
# Warmup Iteration   4: 195011.263 ops/s
# Warmup Iteration   5: 197148.713 ops/s
# Warmup Iteration   6: 196844.124 ops/s
# Warmup Iteration   7: 171190.425 ops/s
# Warmup Iteration   8: 162210.899 ops/s
# Warmup Iteration   9: 197771.281 ops/s
# Warmup Iteration  10: 197519.367 ops/s
# Warmup Iteration  11: 197528.253 ops/s
# Warmup Iteration  12: 197797.914 ops/s
# Warmup Iteration  13: 197379.075 ops/s
# Warmup Iteration  14: 197453.484 ops/s
# Warmup Iteration  15: 197610.118 ops/s
# Warmup Iteration  16: 197791.643 ops/s
# Warmup Iteration  17: 197159.304 ops/s
# Warmup Iteration  18: 197356.398 ops/s
# Warmup Iteration  19: 197466.516 ops/s
# Warmup Iteration  20: 197496.150 ops/s
# Warmup Iteration  21: 196824.320 ops/s
# Warmup Iteration  22: 197065.186 ops/s
# Warmup Iteration  23: 196589.326 ops/s
# Warmup Iteration  24: 197283.830 ops/s
# Warmup Iteration  25: 197527.858 ops/s
# Warmup Iteration  26: 197881.123 ops/s
# Warmup Iteration  27: 197231.080 ops/s
# Warmup Iteration  28: 197534.451 ops/s
# Warmup Iteration  29: 196734.243 ops/s
# Warmup Iteration  30: 195903.722 ops/s
Iteration   1: 196212.433 ops/s
Iteration   2: 197267.088 ops/s
Iteration   3: 196050.879 ops/s
Iteration   4: 190871.994 ops/s
Iteration   5: 175540.653 ops/s
Iteration   6: 167582.374 ops/s
Iteration   7: 173932.819 ops/s
Iteration   8: 172130.367 ops/s
Iteration   9: 173590.868 ops/s
Iteration  10: 173404.172 ops/s
Iteration  11: 173780.933 ops/s
Iteration  12: 167504.002 ops/s
Iteration  13: 176241.780 ops/s
Iteration  14: 169324.708 ops/s
Iteration  15: 170781.068 ops/s
Iteration  16: 172513.654 ops/s
Iteration  17: 166572.027 ops/s
Iteration  18: 172902.265 ops/s
Iteration  19: 169986.436 ops/s
Iteration  20: 173792.133 ops/s
Iteration  21: 171200.337 ops/s
Iteration  22: 172169.323 ops/s
Iteration  23: 174635.886 ops/s
Iteration  24: 172772.212 ops/s
Iteration  25: 171818.573 ops/s
Iteration  26: 174516.503 ops/s
Iteration  27: 172894.469 ops/s
Iteration  28: 170680.046 ops/s
Iteration  29: 169333.192 ops/s
Iteration  30: 173880.814 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_515._Benchmark.benchmark_Cluster_515":
  175129.467 ±(99.9%) 5577.929 ops/s [Average]
  (min, avg, max) = (166572.027, 175129.467, 197267.088), stdev = 8348.782
  CI (99.9%): [169551.538, 180707.396] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_515._Benchmark.benchmark_Cluster_515  thrpt   30  175129.467 ± 5577.929  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_516._Benchmark.benchmark_Cluster_516$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_516._Benchmark.benchmark_Cluster_516

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 14818.764 ops/s
# Warmup Iteration   2: 79910.648 ops/s
# Warmup Iteration   3: 80197.423 ops/s
# Warmup Iteration   4: 87298.920 ops/s
# Warmup Iteration   5: 112225.981 ops/s
# Warmup Iteration   6: 126113.341 ops/s
# Warmup Iteration   7: 128360.781 ops/s
# Warmup Iteration   8: 129871.666 ops/s
# Warmup Iteration   9: 126821.126 ops/s
# Warmup Iteration  10: 127994.986 ops/s
# Warmup Iteration  11: 128998.152 ops/s
# Warmup Iteration  12: 128822.971 ops/s
# Warmup Iteration  13: 129777.776 ops/s
# Warmup Iteration  14: 127710.002 ops/s
# Warmup Iteration  15: 130243.507 ops/s
# Warmup Iteration  16: 127453.728 ops/s
# Warmup Iteration  17: 129693.550 ops/s
# Warmup Iteration  18: 123776.885 ops/s
# Warmup Iteration  19: 88529.516 ops/s
# Warmup Iteration  20: 128069.254 ops/s
# Warmup Iteration  21: 130228.230 ops/s
# Warmup Iteration  22: 128060.878 ops/s
# Warmup Iteration  23: 129784.812 ops/s
# Warmup Iteration  24: 127442.319 ops/s
# Warmup Iteration  25: 128365.489 ops/s
# Warmup Iteration  26: 128931.661 ops/s
# Warmup Iteration  27: 127865.655 ops/s
# Warmup Iteration  28: 129327.099 ops/s
# Warmup Iteration  29: 130066.136 ops/s
# Warmup Iteration  30: 130771.216 ops/s
Iteration   1: 130189.405 ops/s
Iteration   2: 126701.256 ops/s
Iteration   3: 128703.898 ops/s
Iteration   4: 129051.965 ops/s
Iteration   5: 128916.742 ops/s
Iteration   6: 131071.955 ops/s
Iteration   7: 125758.697 ops/s
Iteration   8: 130875.401 ops/s
Iteration   9: 127715.599 ops/s
Iteration  10: 129525.557 ops/s
Iteration  11: 130953.848 ops/s
Iteration  12: 128545.328 ops/s
Iteration  13: 129861.570 ops/s
Iteration  14: 126307.225 ops/s
Iteration  15: 126099.350 ops/s
Iteration  16: 131749.327 ops/s
Iteration  17: 125221.260 ops/s
Iteration  18: 129439.894 ops/s
Iteration  19: 129547.712 ops/s
Iteration  20: 130611.857 ops/s
Iteration  21: 122136.013 ops/s
Iteration  22: 130003.359 ops/s
Iteration  23: 129967.041 ops/s
Iteration  24: 129468.206 ops/s
Iteration  25: 130142.235 ops/s
Iteration  26: 124916.612 ops/s
Iteration  27: 100556.217 ops/s
Iteration  28: 127928.100 ops/s
Iteration  29: 127193.601 ops/s
Iteration  30: 129081.528 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_516._Benchmark.benchmark_Cluster_516":
  127608.025 ±(99.9%) 3711.595 ops/s [Average]
  (min, avg, max) = (100556.217, 127608.025, 131749.327), stdev = 5555.341
  CI (99.9%): [123896.430, 131319.621] (assumes normal distribution)


# Run complete. Total time: 00:01:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_516._Benchmark.benchmark_Cluster_516  thrpt   30  127608.025 ± 3711.595  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_517._Benchmark.benchmark_Cluster_517$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_517._Benchmark.benchmark_Cluster_517

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67964.880 ops/s
# Warmup Iteration   2: 93660.322 ops/s
# Warmup Iteration   3: 101400.758 ops/s
# Warmup Iteration   4: 100650.025 ops/s
# Warmup Iteration   5: 100183.288 ops/s
# Warmup Iteration   6: 126276.733 ops/s
# Warmup Iteration   7: 129082.537 ops/s
# Warmup Iteration   8: 127347.177 ops/s
# Warmup Iteration   9: 127119.346 ops/s
# Warmup Iteration  10: 128013.844 ops/s
# Warmup Iteration  11: 126643.688 ops/s
# Warmup Iteration  12: 128780.570 ops/s
# Warmup Iteration  13: 124984.267 ops/s
# Warmup Iteration  14: 134625.356 ops/s
# Warmup Iteration  15: 145492.654 ops/s
# Warmup Iteration  16: 145855.390 ops/s
# Warmup Iteration  17: 153905.989 ops/s
# Warmup Iteration  18: 153158.797 ops/s
# Warmup Iteration  19: 154512.581 ops/s
# Warmup Iteration  20: 154286.629 ops/s
# Warmup Iteration  21: 154974.607 ops/s
# Warmup Iteration  22: 154581.957 ops/s
# Warmup Iteration  23: 155023.219 ops/s
# Warmup Iteration  24: 155532.153 ops/s
# Warmup Iteration  25: 155336.646 ops/s
# Warmup Iteration  26: 128051.935 ops/s
# Warmup Iteration  27: 136002.074 ops/s
# Warmup Iteration  28: 154431.184 ops/s
# Warmup Iteration  29: 154875.700 ops/s
# Warmup Iteration  30: 154180.073 ops/s
Iteration   1: 154621.317 ops/s
Iteration   2: 154074.545 ops/s
Iteration   3: 155408.591 ops/s
Iteration   4: 155616.326 ops/s
Iteration   5: 155477.592 ops/s
Iteration   6: 154532.054 ops/s
Iteration   7: 154634.572 ops/s
Iteration   8: 154695.907 ops/s
Iteration   9: 154767.576 ops/s
Iteration  10: 154988.007 ops/s
Iteration  11: 155466.975 ops/s
Iteration  12: 154924.781 ops/s
Iteration  13: 155208.914 ops/s
Iteration  14: 154132.752 ops/s
Iteration  15: 155403.765 ops/s
Iteration  16: 154686.516 ops/s
Iteration  17: 156005.985 ops/s
Iteration  18: 155801.580 ops/s
Iteration  19: 154810.550 ops/s
Iteration  20: 154841.977 ops/s
Iteration  21: 154532.563 ops/s
Iteration  22: 153655.829 ops/s
Iteration  23: 154253.371 ops/s
Iteration  24: 155200.768 ops/s
Iteration  25: 153732.325 ops/s
Iteration  26: 151816.619 ops/s
Iteration  27: 153001.202 ops/s
Iteration  28: 152883.426 ops/s
Iteration  29: 151344.662 ops/s
Iteration  30: 151591.527 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_517._Benchmark.benchmark_Cluster_517":
  154403.753 ±(99.9%) 808.075 ops/s [Average]
  (min, avg, max) = (151344.662, 154403.753, 156005.985), stdev = 1209.488
  CI (99.9%): [153595.678, 155211.827] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_517._Benchmark.benchmark_Cluster_517  thrpt   30  154403.753 ± 808.075  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_518._Benchmark.benchmark_Cluster_518$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_518._Benchmark.benchmark_Cluster_518

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 87155.040 ops/s
# Warmup Iteration   2: 94840.697 ops/s
# Warmup Iteration   3: 94413.514 ops/s
# Warmup Iteration   4: 93908.183 ops/s
# Warmup Iteration   5: 125061.161 ops/s
# Warmup Iteration   6: 125351.960 ops/s
# Warmup Iteration   7: 126075.522 ops/s
# Warmup Iteration   8: 125529.975 ops/s
# Warmup Iteration   9: 126177.205 ops/s
# Warmup Iteration  10: 124169.207 ops/s
# Warmup Iteration  11: 124668.649 ops/s
# Warmup Iteration  12: 125098.093 ops/s
# Warmup Iteration  13: 125835.468 ops/s
# Warmup Iteration  14: 124014.067 ops/s
# Warmup Iteration  15: 125509.438 ops/s
# Warmup Iteration  16: 126092.611 ops/s
# Warmup Iteration  17: 132124.652 ops/s
# Warmup Iteration  18: 132429.240 ops/s
# Warmup Iteration  19: 131937.357 ops/s
# Warmup Iteration  20: 132049.960 ops/s
# Warmup Iteration  21: 131612.570 ops/s
# Warmup Iteration  22: 122937.016 ops/s
# Warmup Iteration  23: 97503.044 ops/s
# Warmup Iteration  24: 130640.558 ops/s
# Warmup Iteration  25: 131291.596 ops/s
# Warmup Iteration  26: 132399.260 ops/s
# Warmup Iteration  27: 131669.431 ops/s
# Warmup Iteration  28: 131991.835 ops/s
# Warmup Iteration  29: 131434.136 ops/s
# Warmup Iteration  30: 130847.077 ops/s
Iteration   1: 130851.472 ops/s
Iteration   2: 132700.919 ops/s
Iteration   3: 132438.125 ops/s
Iteration   4: 129816.180 ops/s
Iteration   5: 130720.168 ops/s
Iteration   6: 131317.045 ops/s
Iteration   7: 131726.423 ops/s
Iteration   8: 132111.246 ops/s
Iteration   9: 132729.718 ops/s
Iteration  10: 132199.157 ops/s
Iteration  11: 132411.314 ops/s
Iteration  12: 132215.887 ops/s
Iteration  13: 132361.898 ops/s
Iteration  14: 132955.613 ops/s
Iteration  15: 133467.301 ops/s
Iteration  16: 133090.766 ops/s
Iteration  17: 132096.535 ops/s
Iteration  18: 131345.906 ops/s
Iteration  19: 132635.013 ops/s
Iteration  20: 132765.242 ops/s
Iteration  21: 132329.621 ops/s
Iteration  22: 132627.999 ops/s
Iteration  23: 131756.859 ops/s
Iteration  24: 132699.319 ops/s
Iteration  25: 133304.730 ops/s
Iteration  26: 131346.646 ops/s
Iteration  27: 130385.450 ops/s
Iteration  28: 130659.534 ops/s
Iteration  29: 131118.572 ops/s
Iteration  30: 132377.170 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_518._Benchmark.benchmark_Cluster_518":
  132018.728 ±(99.9%) 608.510 ops/s [Average]
  (min, avg, max) = (129816.180, 132018.728, 133467.301), stdev = 910.789
  CI (99.9%): [131410.218, 132627.237] (assumes normal distribution)


# Run complete. Total time: 00:01:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score     Error  Units
Cluster_518._Benchmark.benchmark_Cluster_518  thrpt   30  132018.728 ± 608.510  ops/s
----------------------------------------
=== Benchmark: org.eclipse.collections.impl.clusters.Cluster_519._Benchmark.benchmark_Cluster_519$ ===
# JMH version: 1.33
# VM version: JDK 1.8.0_432, OpenJDK 64-Bit Server VM, 25.432-b06
# VM invoker: /usr/lib/jvm/java-1.8.0-amazon-corretto.x86_64/jre/bin/java
# VM options: -XX:+UseParallelGC -Xms12G -Xmx12G
# Blackhole mode: full + dont-inline hint (default, use -Djmh.blackhole.autoDetect=true to auto-detect)
# Warmup: 30 iterations, 2 s each
# Measurement: 30 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.eclipse.collections.impl.clusters.Cluster_519._Benchmark.benchmark_Cluster_519

# Run progress: 0.00% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 67598.387 ops/s
# Warmup Iteration   2: 96250.803 ops/s
# Warmup Iteration   3: 109077.250 ops/s
# Warmup Iteration   4: 110017.126 ops/s
# Warmup Iteration   5: 111655.275 ops/s
# Warmup Iteration   6: 144249.402 ops/s
# Warmup Iteration   7: 146699.068 ops/s
# Warmup Iteration   8: 146486.574 ops/s
# Warmup Iteration   9: 141762.656 ops/s
# Warmup Iteration  10: 146665.496 ops/s
# Warmup Iteration  11: 144257.595 ops/s
# Warmup Iteration  12: 144678.732 ops/s
# Warmup Iteration  13: 146550.376 ops/s
# Warmup Iteration  14: 145153.343 ops/s
# Warmup Iteration  15: 146312.166 ops/s
# Warmup Iteration  16: 145266.356 ops/s
# Warmup Iteration  17: 154948.713 ops/s
# Warmup Iteration  18: 154181.248 ops/s
# Warmup Iteration  19: 153176.265 ops/s
# Warmup Iteration  20: 155128.176 ops/s
# Warmup Iteration  21: 156107.994 ops/s
# Warmup Iteration  22: 150273.387 ops/s
# Warmup Iteration  23: 152714.171 ops/s
# Warmup Iteration  24: 151078.720 ops/s
# Warmup Iteration  25: 119778.446 ops/s
# Warmup Iteration  26: 111498.058 ops/s
# Warmup Iteration  27: 153547.486 ops/s
# Warmup Iteration  28: 148019.375 ops/s
# Warmup Iteration  29: 151064.866 ops/s
# Warmup Iteration  30: 152720.790 ops/s
Iteration   1: 148968.562 ops/s
Iteration   2: 151452.031 ops/s
Iteration   3: 152788.860 ops/s
Iteration   4: 149703.297 ops/s
Iteration   5: 151857.084 ops/s
Iteration   6: 148079.796 ops/s
Iteration   7: 151583.561 ops/s
Iteration   8: 150081.196 ops/s
Iteration   9: 153139.055 ops/s
Iteration  10: 155513.561 ops/s
Iteration  11: 153166.906 ops/s
Iteration  12: 151082.427 ops/s
Iteration  13: 152078.581 ops/s
Iteration  14: 150591.686 ops/s
Iteration  15: 151042.029 ops/s
Iteration  16: 156228.264 ops/s
Iteration  17: 153197.041 ops/s
Iteration  18: 150461.911 ops/s
Iteration  19: 158984.468 ops/s
Iteration  20: 149761.795 ops/s
Iteration  21: 153212.931 ops/s
Iteration  22: 155104.424 ops/s
Iteration  23: 153553.816 ops/s
Iteration  24: 152109.388 ops/s
Iteration  25: 151227.681 ops/s
Iteration  26: 154538.364 ops/s
Iteration  27: 151662.199 ops/s
Iteration  28: 154486.153 ops/s
Iteration  29: 154275.358 ops/s
Iteration  30: 154782.805 ops/s


Result "org.eclipse.collections.impl.clusters.Cluster_519._Benchmark.benchmark_Cluster_519":
  152490.508 ±(99.9%) 1576.297 ops/s [Average]
  (min, avg, max) = (148079.796, 152490.508, 158984.468), stdev = 2359.328
  CI (99.9%): [150914.210, 154066.805] (assumes normal distribution)


# Run complete. Total time: 00:01:31

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt       Score      Error  Units
Cluster_519._Benchmark.benchmark_Cluster_519  thrpt   30  152490.508 ± 1576.297  ops/s
----------------------------------------
